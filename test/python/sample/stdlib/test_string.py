
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/string.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""A collection of string constants.\r\n\r\nPublic module variables:\r\n\r\nwhitespace -- a string containing all ASCII whitespace\r\nascii_lowercase -- a string containing all ASCII lowercase letters\r\nascii_uppercase -- a string containing all ASCII uppercase letters\r\nascii_letters -- a string containing all ASCII letters\r\ndigits -- a string containing all ASCII decimal digits\r\nhexdigits -- a string containing all ASCII hexadecimal digits\r\noctdigits -- a string containing all ASCII octal digits\r\npunctuation -- a string containing all ASCII punctuation characters\r\nprintable -- a string containing all ASCII characters considered printable\r\n\r\n"""', 1, 0, 15, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 15, 3, 16, 0),
woosh.Token(woosh.NAME, '__all__', 17, 0, 17, 7),
woosh.Token(woosh.OP, '=', 17, 8, 17, 9),
woosh.Token(woosh.OP, '[', 17, 10, 17, 11),
woosh.Token(woosh.STRING, '"ascii_letters"', 17, 11, 17, 26),
woosh.Token(woosh.OP, ',', 17, 26, 17, 27),
woosh.Token(woosh.STRING, '"ascii_lowercase"', 17, 28, 17, 45),
woosh.Token(woosh.OP, ',', 17, 45, 17, 46),
woosh.Token(woosh.STRING, '"ascii_uppercase"', 17, 47, 17, 64),
woosh.Token(woosh.OP, ',', 17, 64, 17, 65),
woosh.Token(woosh.STRING, '"capwords"', 17, 66, 17, 76),
woosh.Token(woosh.OP, ',', 17, 76, 17, 77),
woosh.Token(woosh.STRING, '"digits"', 18, 11, 18, 19),
woosh.Token(woosh.OP, ',', 18, 19, 18, 20),
woosh.Token(woosh.STRING, '"hexdigits"', 18, 21, 18, 32),
woosh.Token(woosh.OP, ',', 18, 32, 18, 33),
woosh.Token(woosh.STRING, '"octdigits"', 18, 34, 18, 45),
woosh.Token(woosh.OP, ',', 18, 45, 18, 46),
woosh.Token(woosh.STRING, '"printable"', 18, 47, 18, 58),
woosh.Token(woosh.OP, ',', 18, 58, 18, 59),
woosh.Token(woosh.STRING, '"punctuation"', 18, 60, 18, 73),
woosh.Token(woosh.OP, ',', 18, 73, 18, 74),
woosh.Token(woosh.STRING, '"whitespace"', 19, 11, 19, 23),
woosh.Token(woosh.OP, ',', 19, 23, 19, 24),
woosh.Token(woosh.STRING, '"Formatter"', 19, 25, 19, 36),
woosh.Token(woosh.OP, ',', 19, 36, 19, 37),
woosh.Token(woosh.STRING, '"Template"', 19, 38, 19, 48),
woosh.Token(woosh.OP, ']', 19, 48, 19, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 19, 49, 20, 0),
woosh.Token(woosh.NAME, 'import', 21, 0, 21, 6),
woosh.Token(woosh.NAME, '_string', 21, 7, 21, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 14, 22, 0),
woosh.Token(woosh.COMMENT, '# Some strings for ctype-style character classification', 23, 0, 23, 55),
woosh.Token(woosh.NAME, 'whitespace', 24, 0, 24, 10),
woosh.Token(woosh.OP, '=', 24, 11, 24, 12),
woosh.Token(woosh.STRING, "' \\t\\n\\r\\v\\f'", 24, 13, 24, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 24, 26, 25, 0),
woosh.Token(woosh.NAME, 'ascii_lowercase', 25, 0, 25, 15),
woosh.Token(woosh.OP, '=', 25, 16, 25, 17),
woosh.Token(woosh.STRING, "'abcdefghijklmnopqrstuvwxyz'", 25, 18, 25, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 25, 46, 26, 0),
woosh.Token(woosh.NAME, 'ascii_uppercase', 26, 0, 26, 15),
woosh.Token(woosh.OP, '=', 26, 16, 26, 17),
woosh.Token(woosh.STRING, "'ABCDEFGHIJKLMNOPQRSTUVWXYZ'", 26, 18, 26, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 26, 46, 27, 0),
woosh.Token(woosh.NAME, 'ascii_letters', 27, 0, 27, 13),
woosh.Token(woosh.OP, '=', 27, 14, 27, 15),
woosh.Token(woosh.NAME, 'ascii_lowercase', 27, 16, 27, 31),
woosh.Token(woosh.OP, '+', 27, 32, 27, 33),
woosh.Token(woosh.NAME, 'ascii_uppercase', 27, 34, 27, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 27, 49, 28, 0),
woosh.Token(woosh.NAME, 'digits', 28, 0, 28, 6),
woosh.Token(woosh.OP, '=', 28, 7, 28, 8),
woosh.Token(woosh.STRING, "'0123456789'", 28, 9, 28, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 28, 21, 29, 0),
woosh.Token(woosh.NAME, 'hexdigits', 29, 0, 29, 9),
woosh.Token(woosh.OP, '=', 29, 10, 29, 11),
woosh.Token(woosh.NAME, 'digits', 29, 12, 29, 18),
woosh.Token(woosh.OP, '+', 29, 19, 29, 20),
woosh.Token(woosh.STRING, "'abcdef'", 29, 21, 29, 29),
woosh.Token(woosh.OP, '+', 29, 30, 29, 31),
woosh.Token(woosh.STRING, "'ABCDEF'", 29, 32, 29, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 40, 30, 0),
woosh.Token(woosh.NAME, 'octdigits', 30, 0, 30, 9),
woosh.Token(woosh.OP, '=', 30, 10, 30, 11),
woosh.Token(woosh.STRING, "'01234567'", 30, 12, 30, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 30, 22, 31, 0),
woosh.Token(woosh.NAME, 'punctuation', 31, 0, 31, 11),
woosh.Token(woosh.OP, '=', 31, 12, 31, 13),
woosh.Token(woosh.STRING, 'r"""!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~"""', 31, 14, 31, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 31, 53, 32, 0),
woosh.Token(woosh.NAME, 'printable', 32, 0, 32, 9),
woosh.Token(woosh.OP, '=', 32, 10, 32, 11),
woosh.Token(woosh.NAME, 'digits', 32, 12, 32, 18),
woosh.Token(woosh.OP, '+', 32, 19, 32, 20),
woosh.Token(woosh.NAME, 'ascii_letters', 32, 21, 32, 34),
woosh.Token(woosh.OP, '+', 32, 35, 32, 36),
woosh.Token(woosh.NAME, 'punctuation', 32, 37, 32, 48),
woosh.Token(woosh.OP, '+', 32, 49, 32, 50),
woosh.Token(woosh.NAME, 'whitespace', 32, 51, 32, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 32, 61, 33, 0),
woosh.Token(woosh.COMMENT, "# Functions which aren't available as string methods.", 34, 0, 34, 53),
woosh.Token(woosh.COMMENT, '# Capitalize the words in a string, e.g. " aBc  dEf " -> "Abc Def".', 36, 0, 36, 67),
woosh.Token(woosh.NAME, 'def', 37, 0, 37, 3),
woosh.Token(woosh.NAME, 'capwords', 37, 4, 37, 12),
woosh.Token(woosh.OP, '(', 37, 12, 37, 13),
woosh.Token(woosh.NAME, 's', 37, 13, 37, 14),
woosh.Token(woosh.OP, ',', 37, 14, 37, 15),
woosh.Token(woosh.NAME, 'sep', 37, 16, 37, 19),
woosh.Token(woosh.OP, '=', 37, 19, 37, 20),
woosh.Token(woosh.NAME, 'None', 37, 20, 37, 24),
woosh.Token(woosh.OP, ')', 37, 24, 37, 25),
woosh.Token(woosh.OP, ':', 37, 25, 37, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 37, 26, 38, 0),
woosh.Token(woosh.INDENT, '    ', 38, 0, 38, 4),
woosh.Token(woosh.STRING, '"""capwords(s [,sep]) -> string\r\n\r\n    Split the argument into words using split, capitalize each\r\n    word using capitalize, and join the capitalized words using\r\n    join.  If the optional second argument sep is absent or None,\r\n    runs of whitespace characters are replaced by a single space\r\n    and leading and trailing whitespace are removed, otherwise\r\n    sep is used to split and join the words.\r\n\r\n    """', 38, 4, 47, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 7, 48, 0),
woosh.Token(woosh.NAME, 'return', 48, 4, 48, 10),
woosh.Token(woosh.OP, '(', 48, 11, 48, 12),
woosh.Token(woosh.NAME, 'sep', 48, 12, 48, 15),
woosh.Token(woosh.NAME, 'or', 48, 16, 48, 18),
woosh.Token(woosh.STRING, "' '", 48, 19, 48, 22),
woosh.Token(woosh.OP, ')', 48, 22, 48, 23),
woosh.Token(woosh.OP, '.', 48, 23, 48, 24),
woosh.Token(woosh.NAME, 'join', 48, 24, 48, 28),
woosh.Token(woosh.OP, '(', 48, 28, 48, 29),
woosh.Token(woosh.NAME, 'x', 48, 29, 48, 30),
woosh.Token(woosh.OP, '.', 48, 30, 48, 31),
woosh.Token(woosh.NAME, 'capitalize', 48, 31, 48, 41),
woosh.Token(woosh.OP, '(', 48, 41, 48, 42),
woosh.Token(woosh.OP, ')', 48, 42, 48, 43),
woosh.Token(woosh.NAME, 'for', 48, 44, 48, 47),
woosh.Token(woosh.NAME, 'x', 48, 48, 48, 49),
woosh.Token(woosh.NAME, 'in', 48, 50, 48, 52),
woosh.Token(woosh.NAME, 's', 48, 53, 48, 54),
woosh.Token(woosh.OP, '.', 48, 54, 48, 55),
woosh.Token(woosh.NAME, 'split', 48, 55, 48, 60),
woosh.Token(woosh.OP, '(', 48, 60, 48, 61),
woosh.Token(woosh.NAME, 'sep', 48, 61, 48, 64),
woosh.Token(woosh.OP, ')', 48, 64, 48, 65),
woosh.Token(woosh.OP, ')', 48, 65, 48, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 48, 66, 49, 0),
woosh.Token(woosh.COMMENT, '####################################################################', 51, 0, 51, 68),
woosh.Token(woosh.DEDENT, '', 52, 0, 52, 0),
woosh.Token(woosh.NAME, 'import', 52, 0, 52, 6),
woosh.Token(woosh.NAME, 're', 52, 7, 52, 9),
woosh.Token(woosh.NAME, 'as', 52, 10, 52, 12),
woosh.Token(woosh.NAME, '_re', 52, 13, 52, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 16, 53, 0),
woosh.Token(woosh.NAME, 'from', 53, 0, 53, 4),
woosh.Token(woosh.NAME, 'collections', 53, 5, 53, 16),
woosh.Token(woosh.NAME, 'import', 53, 17, 53, 23),
woosh.Token(woosh.NAME, 'ChainMap', 53, 24, 53, 32),
woosh.Token(woosh.NAME, 'as', 53, 33, 53, 35),
woosh.Token(woosh.NAME, '_ChainMap', 53, 36, 53, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 45, 54, 0),
woosh.Token(woosh.NAME, '_sentinel_dict', 55, 0, 55, 14),
woosh.Token(woosh.OP, '=', 55, 15, 55, 16),
woosh.Token(woosh.OP, '{', 55, 17, 55, 18),
woosh.Token(woosh.OP, '}', 55, 18, 55, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 19, 56, 0),
woosh.Token(woosh.NAME, 'class', 57, 0, 57, 5),
woosh.Token(woosh.NAME, 'Template', 57, 6, 57, 14),
woosh.Token(woosh.OP, ':', 57, 14, 57, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 15, 58, 0),
woosh.Token(woosh.INDENT, '    ', 58, 0, 58, 4),
woosh.Token(woosh.STRING, '"""A string class for supporting $-substitutions."""', 58, 4, 58, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 56, 59, 0),
woosh.Token(woosh.NAME, 'delimiter', 60, 4, 60, 13),
woosh.Token(woosh.OP, '=', 60, 14, 60, 15),
woosh.Token(woosh.STRING, "'$'", 60, 16, 60, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 19, 61, 0),
woosh.Token(woosh.COMMENT, "# r'[a-z]' matches to non-ASCII letters when used with IGNORECASE, but", 61, 4, 61, 74),
woosh.Token(woosh.COMMENT, "# without the ASCII flag.  We can't add re.ASCII to flags because of", 62, 4, 62, 72),
woosh.Token(woosh.COMMENT, '# backward compatibility.  So we use the ?a local flag and [a-z] pattern.', 63, 4, 63, 77),
woosh.Token(woosh.COMMENT, '# See https://bugs.python.org/issue31672', 64, 4, 64, 44),
woosh.Token(woosh.NAME, 'idpattern', 65, 4, 65, 13),
woosh.Token(woosh.OP, '=', 65, 14, 65, 15),
woosh.Token(woosh.STRING, "r'(?a:[_a-z][_a-z0-9]*)'", 65, 16, 65, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 65, 40, 66, 0),
woosh.Token(woosh.NAME, 'braceidpattern', 66, 4, 66, 18),
woosh.Token(woosh.OP, '=', 66, 19, 66, 20),
woosh.Token(woosh.NAME, 'None', 66, 21, 66, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 25, 67, 0),
woosh.Token(woosh.NAME, 'flags', 67, 4, 67, 9),
woosh.Token(woosh.OP, '=', 67, 10, 67, 11),
woosh.Token(woosh.NAME, '_re', 67, 12, 67, 15),
woosh.Token(woosh.OP, '.', 67, 15, 67, 16),
woosh.Token(woosh.NAME, 'IGNORECASE', 67, 16, 67, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 67, 26, 68, 0),
woosh.Token(woosh.NAME, 'def', 69, 4, 69, 7),
woosh.Token(woosh.NAME, '__init_subclass__', 69, 8, 69, 25),
woosh.Token(woosh.OP, '(', 69, 25, 69, 26),
woosh.Token(woosh.NAME, 'cls', 69, 26, 69, 29),
woosh.Token(woosh.OP, ')', 69, 29, 69, 30),
woosh.Token(woosh.OP, ':', 69, 30, 69, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 31, 70, 0),
woosh.Token(woosh.INDENT, '        ', 70, 0, 70, 8),
woosh.Token(woosh.NAME, 'super', 70, 8, 70, 13),
woosh.Token(woosh.OP, '(', 70, 13, 70, 14),
woosh.Token(woosh.OP, ')', 70, 14, 70, 15),
woosh.Token(woosh.OP, '.', 70, 15, 70, 16),
woosh.Token(woosh.NAME, '__init_subclass__', 70, 16, 70, 33),
woosh.Token(woosh.OP, '(', 70, 33, 70, 34),
woosh.Token(woosh.OP, ')', 70, 34, 70, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 35, 71, 0),
woosh.Token(woosh.NAME, 'if', 71, 8, 71, 10),
woosh.Token(woosh.STRING, "'pattern'", 71, 11, 71, 20),
woosh.Token(woosh.NAME, 'in', 71, 21, 71, 23),
woosh.Token(woosh.NAME, 'cls', 71, 24, 71, 27),
woosh.Token(woosh.OP, '.', 71, 27, 71, 28),
woosh.Token(woosh.NAME, '__dict__', 71, 28, 71, 36),
woosh.Token(woosh.OP, ':', 71, 36, 71, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 37, 72, 0),
woosh.Token(woosh.INDENT, '            ', 72, 0, 72, 12),
woosh.Token(woosh.NAME, 'pattern', 72, 12, 72, 19),
woosh.Token(woosh.OP, '=', 72, 20, 72, 21),
woosh.Token(woosh.NAME, 'cls', 72, 22, 72, 25),
woosh.Token(woosh.OP, '.', 72, 25, 72, 26),
woosh.Token(woosh.NAME, 'pattern', 72, 26, 72, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 33, 73, 0),
woosh.Token(woosh.DEDENT, '        ', 73, 0, 73, 8),
woosh.Token(woosh.NAME, 'else', 73, 8, 73, 12),
woosh.Token(woosh.OP, ':', 73, 12, 73, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 13, 74, 0),
woosh.Token(woosh.INDENT, '            ', 74, 0, 74, 12),
woosh.Token(woosh.NAME, 'delim', 74, 12, 74, 17),
woosh.Token(woosh.OP, '=', 74, 18, 74, 19),
woosh.Token(woosh.NAME, '_re', 74, 20, 74, 23),
woosh.Token(woosh.OP, '.', 74, 23, 74, 24),
woosh.Token(woosh.NAME, 'escape', 74, 24, 74, 30),
woosh.Token(woosh.OP, '(', 74, 30, 74, 31),
woosh.Token(woosh.NAME, 'cls', 74, 31, 74, 34),
woosh.Token(woosh.OP, '.', 74, 34, 74, 35),
woosh.Token(woosh.NAME, 'delimiter', 74, 35, 74, 44),
woosh.Token(woosh.OP, ')', 74, 44, 74, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 45, 75, 0),
woosh.Token(woosh.NAME, 'id', 75, 12, 75, 14),
woosh.Token(woosh.OP, '=', 75, 15, 75, 16),
woosh.Token(woosh.NAME, 'cls', 75, 17, 75, 20),
woosh.Token(woosh.OP, '.', 75, 20, 75, 21),
woosh.Token(woosh.NAME, 'idpattern', 75, 21, 75, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 30, 76, 0),
woosh.Token(woosh.NAME, 'bid', 76, 12, 76, 15),
woosh.Token(woosh.OP, '=', 76, 16, 76, 17),
woosh.Token(woosh.NAME, 'cls', 76, 18, 76, 21),
woosh.Token(woosh.OP, '.', 76, 21, 76, 22),
woosh.Token(woosh.NAME, 'braceidpattern', 76, 22, 76, 36),
woosh.Token(woosh.NAME, 'or', 76, 37, 76, 39),
woosh.Token(woosh.NAME, 'cls', 76, 40, 76, 43),
woosh.Token(woosh.OP, '.', 76, 43, 76, 44),
woosh.Token(woosh.NAME, 'idpattern', 76, 44, 76, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 53, 77, 0),
woosh.Token(woosh.NAME, 'pattern', 77, 12, 77, 19),
woosh.Token(woosh.OP, '=', 77, 20, 77, 21),
woosh.Token(woosh.STRING, 'fr"""\r\n            {delim}(?:\r\n              (?P<escaped>{delim})  |   # Escape sequence of two delimiters\r\n              (?P<named>{id})       |   # delimiter and a Python identifier\r\n              {{(?P<braced>{bid})}} |   # delimiter and a braced identifier\r\n              (?P<invalid>)             # Other ill-formed delimiter exprs\r\n            )\r\n            """', 77, 22, 84, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 84, 15, 85, 0),
woosh.Token(woosh.DEDENT, '        ', 85, 0, 85, 8),
woosh.Token(woosh.NAME, 'cls', 85, 8, 85, 11),
woosh.Token(woosh.OP, '.', 85, 11, 85, 12),
woosh.Token(woosh.NAME, 'pattern', 85, 12, 85, 19),
woosh.Token(woosh.OP, '=', 85, 20, 85, 21),
woosh.Token(woosh.NAME, '_re', 85, 22, 85, 25),
woosh.Token(woosh.OP, '.', 85, 25, 85, 26),
woosh.Token(woosh.NAME, 'compile', 85, 26, 85, 33),
woosh.Token(woosh.OP, '(', 85, 33, 85, 34),
woosh.Token(woosh.NAME, 'pattern', 85, 34, 85, 41),
woosh.Token(woosh.OP, ',', 85, 41, 85, 42),
woosh.Token(woosh.NAME, 'cls', 85, 43, 85, 46),
woosh.Token(woosh.OP, '.', 85, 46, 85, 47),
woosh.Token(woosh.NAME, 'flags', 85, 47, 85, 52),
woosh.Token(woosh.OP, '|', 85, 53, 85, 54),
woosh.Token(woosh.NAME, '_re', 85, 55, 85, 58),
woosh.Token(woosh.OP, '.', 85, 58, 85, 59),
woosh.Token(woosh.NAME, 'VERBOSE', 85, 59, 85, 66),
woosh.Token(woosh.OP, ')', 85, 66, 85, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 85, 67, 86, 0),
woosh.Token(woosh.DEDENT, '    ', 87, 0, 87, 4),
woosh.Token(woosh.NAME, 'def', 87, 4, 87, 7),
woosh.Token(woosh.NAME, '__init__', 87, 8, 87, 16),
woosh.Token(woosh.OP, '(', 87, 16, 87, 17),
woosh.Token(woosh.NAME, 'self', 87, 17, 87, 21),
woosh.Token(woosh.OP, ',', 87, 21, 87, 22),
woosh.Token(woosh.NAME, 'template', 87, 23, 87, 31),
woosh.Token(woosh.OP, ')', 87, 31, 87, 32),
woosh.Token(woosh.OP, ':', 87, 32, 87, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 33, 88, 0),
woosh.Token(woosh.INDENT, '        ', 88, 0, 88, 8),
woosh.Token(woosh.NAME, 'self', 88, 8, 88, 12),
woosh.Token(woosh.OP, '.', 88, 12, 88, 13),
woosh.Token(woosh.NAME, 'template', 88, 13, 88, 21),
woosh.Token(woosh.OP, '=', 88, 22, 88, 23),
woosh.Token(woosh.NAME, 'template', 88, 24, 88, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 32, 89, 0),
woosh.Token(woosh.COMMENT, "# Search for $$, $identifier, ${identifier}, and any bare $'s", 90, 4, 90, 65),
woosh.Token(woosh.DEDENT, '    ', 92, 0, 92, 4),
woosh.Token(woosh.NAME, 'def', 92, 4, 92, 7),
woosh.Token(woosh.NAME, '_invalid', 92, 8, 92, 16),
woosh.Token(woosh.OP, '(', 92, 16, 92, 17),
woosh.Token(woosh.NAME, 'self', 92, 17, 92, 21),
woosh.Token(woosh.OP, ',', 92, 21, 92, 22),
woosh.Token(woosh.NAME, 'mo', 92, 23, 92, 25),
woosh.Token(woosh.OP, ')', 92, 25, 92, 26),
woosh.Token(woosh.OP, ':', 92, 26, 92, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 27, 93, 0),
woosh.Token(woosh.INDENT, '        ', 93, 0, 93, 8),
woosh.Token(woosh.NAME, 'i', 93, 8, 93, 9),
woosh.Token(woosh.OP, '=', 93, 10, 93, 11),
woosh.Token(woosh.NAME, 'mo', 93, 12, 93, 14),
woosh.Token(woosh.OP, '.', 93, 14, 93, 15),
woosh.Token(woosh.NAME, 'start', 93, 15, 93, 20),
woosh.Token(woosh.OP, '(', 93, 20, 93, 21),
woosh.Token(woosh.STRING, "'invalid'", 93, 21, 93, 30),
woosh.Token(woosh.OP, ')', 93, 30, 93, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 31, 94, 0),
woosh.Token(woosh.NAME, 'lines', 94, 8, 94, 13),
woosh.Token(woosh.OP, '=', 94, 14, 94, 15),
woosh.Token(woosh.NAME, 'self', 94, 16, 94, 20),
woosh.Token(woosh.OP, '.', 94, 20, 94, 21),
woosh.Token(woosh.NAME, 'template', 94, 21, 94, 29),
woosh.Token(woosh.OP, '[', 94, 29, 94, 30),
woosh.Token(woosh.OP, ':', 94, 30, 94, 31),
woosh.Token(woosh.NAME, 'i', 94, 31, 94, 32),
woosh.Token(woosh.OP, ']', 94, 32, 94, 33),
woosh.Token(woosh.OP, '.', 94, 33, 94, 34),
woosh.Token(woosh.NAME, 'splitlines', 94, 34, 94, 44),
woosh.Token(woosh.OP, '(', 94, 44, 94, 45),
woosh.Token(woosh.NAME, 'keepends', 94, 45, 94, 53),
woosh.Token(woosh.OP, '=', 94, 53, 94, 54),
woosh.Token(woosh.NAME, 'True', 94, 54, 94, 58),
woosh.Token(woosh.OP, ')', 94, 58, 94, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 59, 95, 0),
woosh.Token(woosh.NAME, 'if', 95, 8, 95, 10),
woosh.Token(woosh.NAME, 'not', 95, 11, 95, 14),
woosh.Token(woosh.NAME, 'lines', 95, 15, 95, 20),
woosh.Token(woosh.OP, ':', 95, 20, 95, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 21, 96, 0),
woosh.Token(woosh.INDENT, '            ', 96, 0, 96, 12),
woosh.Token(woosh.NAME, 'colno', 96, 12, 96, 17),
woosh.Token(woosh.OP, '=', 96, 18, 96, 19),
woosh.Token(woosh.NUMBER, '1', 96, 20, 96, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 21, 97, 0),
woosh.Token(woosh.NAME, 'lineno', 97, 12, 97, 18),
woosh.Token(woosh.OP, '=', 97, 19, 97, 20),
woosh.Token(woosh.NUMBER, '1', 97, 21, 97, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 22, 98, 0),
woosh.Token(woosh.DEDENT, '        ', 98, 0, 98, 8),
woosh.Token(woosh.NAME, 'else', 98, 8, 98, 12),
woosh.Token(woosh.OP, ':', 98, 12, 98, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 13, 99, 0),
woosh.Token(woosh.INDENT, '            ', 99, 0, 99, 12),
woosh.Token(woosh.NAME, 'colno', 99, 12, 99, 17),
woosh.Token(woosh.OP, '=', 99, 18, 99, 19),
woosh.Token(woosh.NAME, 'i', 99, 20, 99, 21),
woosh.Token(woosh.OP, '-', 99, 22, 99, 23),
woosh.Token(woosh.NAME, 'len', 99, 24, 99, 27),
woosh.Token(woosh.OP, '(', 99, 27, 99, 28),
woosh.Token(woosh.STRING, "''", 99, 28, 99, 30),
woosh.Token(woosh.OP, '.', 99, 30, 99, 31),
woosh.Token(woosh.NAME, 'join', 99, 31, 99, 35),
woosh.Token(woosh.OP, '(', 99, 35, 99, 36),
woosh.Token(woosh.NAME, 'lines', 99, 36, 99, 41),
woosh.Token(woosh.OP, '[', 99, 41, 99, 42),
woosh.Token(woosh.OP, ':', 99, 42, 99, 43),
woosh.Token(woosh.OP, '-', 99, 43, 99, 44),
woosh.Token(woosh.NUMBER, '1', 99, 44, 99, 45),
woosh.Token(woosh.OP, ']', 99, 45, 99, 46),
woosh.Token(woosh.OP, ')', 99, 46, 99, 47),
woosh.Token(woosh.OP, ')', 99, 47, 99, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 48, 100, 0),
woosh.Token(woosh.NAME, 'lineno', 100, 12, 100, 18),
woosh.Token(woosh.OP, '=', 100, 19, 100, 20),
woosh.Token(woosh.NAME, 'len', 100, 21, 100, 24),
woosh.Token(woosh.OP, '(', 100, 24, 100, 25),
woosh.Token(woosh.NAME, 'lines', 100, 25, 100, 30),
woosh.Token(woosh.OP, ')', 100, 30, 100, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 31, 101, 0),
woosh.Token(woosh.DEDENT, '        ', 101, 0, 101, 8),
woosh.Token(woosh.NAME, 'raise', 101, 8, 101, 13),
woosh.Token(woosh.NAME, 'ValueError', 101, 14, 101, 24),
woosh.Token(woosh.OP, '(', 101, 24, 101, 25),
woosh.Token(woosh.STRING, "'Invalid placeholder in string: line %d, col %d'", 101, 25, 101, 73),
woosh.Token(woosh.OP, '%', 101, 74, 101, 75),
woosh.Token(woosh.OP, '(', 102, 25, 102, 26),
woosh.Token(woosh.NAME, 'lineno', 102, 26, 102, 32),
woosh.Token(woosh.OP, ',', 102, 32, 102, 33),
woosh.Token(woosh.NAME, 'colno', 102, 34, 102, 39),
woosh.Token(woosh.OP, ')', 102, 39, 102, 40),
woosh.Token(woosh.OP, ')', 102, 40, 102, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 41, 103, 0),
woosh.Token(woosh.DEDENT, '    ', 104, 0, 104, 4),
woosh.Token(woosh.NAME, 'def', 104, 4, 104, 7),
woosh.Token(woosh.NAME, 'substitute', 104, 8, 104, 18),
woosh.Token(woosh.OP, '(', 104, 18, 104, 19),
woosh.Token(woosh.NAME, 'self', 104, 19, 104, 23),
woosh.Token(woosh.OP, ',', 104, 23, 104, 24),
woosh.Token(woosh.NAME, 'mapping', 104, 25, 104, 32),
woosh.Token(woosh.OP, '=', 104, 32, 104, 33),
woosh.Token(woosh.NAME, '_sentinel_dict', 104, 33, 104, 47),
woosh.Token(woosh.OP, ',', 104, 47, 104, 48),
woosh.Token(woosh.OP, '/', 104, 49, 104, 50),
woosh.Token(woosh.OP, ',', 104, 50, 104, 51),
woosh.Token(woosh.OP, '**', 104, 52, 104, 54),
woosh.Token(woosh.NAME, 'kws', 104, 54, 104, 57),
woosh.Token(woosh.OP, ')', 104, 57, 104, 58),
woosh.Token(woosh.OP, ':', 104, 58, 104, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 59, 105, 0),
woosh.Token(woosh.INDENT, '        ', 105, 0, 105, 8),
woosh.Token(woosh.NAME, 'if', 105, 8, 105, 10),
woosh.Token(woosh.NAME, 'mapping', 105, 11, 105, 18),
woosh.Token(woosh.NAME, 'is', 105, 19, 105, 21),
woosh.Token(woosh.NAME, '_sentinel_dict', 105, 22, 105, 36),
woosh.Token(woosh.OP, ':', 105, 36, 105, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 37, 106, 0),
woosh.Token(woosh.INDENT, '            ', 106, 0, 106, 12),
woosh.Token(woosh.NAME, 'mapping', 106, 12, 106, 19),
woosh.Token(woosh.OP, '=', 106, 20, 106, 21),
woosh.Token(woosh.NAME, 'kws', 106, 22, 106, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 25, 107, 0),
woosh.Token(woosh.DEDENT, '        ', 107, 0, 107, 8),
woosh.Token(woosh.NAME, 'elif', 107, 8, 107, 12),
woosh.Token(woosh.NAME, 'kws', 107, 13, 107, 16),
woosh.Token(woosh.OP, ':', 107, 16, 107, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 17, 108, 0),
woosh.Token(woosh.INDENT, '            ', 108, 0, 108, 12),
woosh.Token(woosh.NAME, 'mapping', 108, 12, 108, 19),
woosh.Token(woosh.OP, '=', 108, 20, 108, 21),
woosh.Token(woosh.NAME, '_ChainMap', 108, 22, 108, 31),
woosh.Token(woosh.OP, '(', 108, 31, 108, 32),
woosh.Token(woosh.NAME, 'kws', 108, 32, 108, 35),
woosh.Token(woosh.OP, ',', 108, 35, 108, 36),
woosh.Token(woosh.NAME, 'mapping', 108, 37, 108, 44),
woosh.Token(woosh.OP, ')', 108, 44, 108, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 45, 109, 0),
woosh.Token(woosh.COMMENT, '# Helper function for .sub()', 109, 8, 109, 36),
woosh.Token(woosh.DEDENT, '        ', 110, 0, 110, 8),
woosh.Token(woosh.NAME, 'def', 110, 8, 110, 11),
woosh.Token(woosh.NAME, 'convert', 110, 12, 110, 19),
woosh.Token(woosh.OP, '(', 110, 19, 110, 20),
woosh.Token(woosh.NAME, 'mo', 110, 20, 110, 22),
woosh.Token(woosh.OP, ')', 110, 22, 110, 23),
woosh.Token(woosh.OP, ':', 110, 23, 110, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 24, 111, 0),
woosh.Token(woosh.COMMENT, '# Check the most common path first.', 111, 12, 111, 47),
woosh.Token(woosh.INDENT, '            ', 112, 0, 112, 12),
woosh.Token(woosh.NAME, 'named', 112, 12, 112, 17),
woosh.Token(woosh.OP, '=', 112, 18, 112, 19),
woosh.Token(woosh.NAME, 'mo', 112, 20, 112, 22),
woosh.Token(woosh.OP, '.', 112, 22, 112, 23),
woosh.Token(woosh.NAME, 'group', 112, 23, 112, 28),
woosh.Token(woosh.OP, '(', 112, 28, 112, 29),
woosh.Token(woosh.STRING, "'named'", 112, 29, 112, 36),
woosh.Token(woosh.OP, ')', 112, 36, 112, 37),
woosh.Token(woosh.NAME, 'or', 112, 38, 112, 40),
woosh.Token(woosh.NAME, 'mo', 112, 41, 112, 43),
woosh.Token(woosh.OP, '.', 112, 43, 112, 44),
woosh.Token(woosh.NAME, 'group', 112, 44, 112, 49),
woosh.Token(woosh.OP, '(', 112, 49, 112, 50),
woosh.Token(woosh.STRING, "'braced'", 112, 50, 112, 58),
woosh.Token(woosh.OP, ')', 112, 58, 112, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 59, 113, 0),
woosh.Token(woosh.NAME, 'if', 113, 12, 113, 14),
woosh.Token(woosh.NAME, 'named', 113, 15, 113, 20),
woosh.Token(woosh.NAME, 'is', 113, 21, 113, 23),
woosh.Token(woosh.NAME, 'not', 113, 24, 113, 27),
woosh.Token(woosh.NAME, 'None', 113, 28, 113, 32),
woosh.Token(woosh.OP, ':', 113, 32, 113, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 33, 114, 0),
woosh.Token(woosh.INDENT, '                ', 114, 0, 114, 16),
woosh.Token(woosh.NAME, 'return', 114, 16, 114, 22),
woosh.Token(woosh.NAME, 'str', 114, 23, 114, 26),
woosh.Token(woosh.OP, '(', 114, 26, 114, 27),
woosh.Token(woosh.NAME, 'mapping', 114, 27, 114, 34),
woosh.Token(woosh.OP, '[', 114, 34, 114, 35),
woosh.Token(woosh.NAME, 'named', 114, 35, 114, 40),
woosh.Token(woosh.OP, ']', 114, 40, 114, 41),
woosh.Token(woosh.OP, ')', 114, 41, 114, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 42, 115, 0),
woosh.Token(woosh.DEDENT, '            ', 115, 0, 115, 12),
woosh.Token(woosh.NAME, 'if', 115, 12, 115, 14),
woosh.Token(woosh.NAME, 'mo', 115, 15, 115, 17),
woosh.Token(woosh.OP, '.', 115, 17, 115, 18),
woosh.Token(woosh.NAME, 'group', 115, 18, 115, 23),
woosh.Token(woosh.OP, '(', 115, 23, 115, 24),
woosh.Token(woosh.STRING, "'escaped'", 115, 24, 115, 33),
woosh.Token(woosh.OP, ')', 115, 33, 115, 34),
woosh.Token(woosh.NAME, 'is', 115, 35, 115, 37),
woosh.Token(woosh.NAME, 'not', 115, 38, 115, 41),
woosh.Token(woosh.NAME, 'None', 115, 42, 115, 46),
woosh.Token(woosh.OP, ':', 115, 46, 115, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 47, 116, 0),
woosh.Token(woosh.INDENT, '                ', 116, 0, 116, 16),
woosh.Token(woosh.NAME, 'return', 116, 16, 116, 22),
woosh.Token(woosh.NAME, 'self', 116, 23, 116, 27),
woosh.Token(woosh.OP, '.', 116, 27, 116, 28),
woosh.Token(woosh.NAME, 'delimiter', 116, 28, 116, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 37, 117, 0),
woosh.Token(woosh.DEDENT, '            ', 117, 0, 117, 12),
woosh.Token(woosh.NAME, 'if', 117, 12, 117, 14),
woosh.Token(woosh.NAME, 'mo', 117, 15, 117, 17),
woosh.Token(woosh.OP, '.', 117, 17, 117, 18),
woosh.Token(woosh.NAME, 'group', 117, 18, 117, 23),
woosh.Token(woosh.OP, '(', 117, 23, 117, 24),
woosh.Token(woosh.STRING, "'invalid'", 117, 24, 117, 33),
woosh.Token(woosh.OP, ')', 117, 33, 117, 34),
woosh.Token(woosh.NAME, 'is', 117, 35, 117, 37),
woosh.Token(woosh.NAME, 'not', 117, 38, 117, 41),
woosh.Token(woosh.NAME, 'None', 117, 42, 117, 46),
woosh.Token(woosh.OP, ':', 117, 46, 117, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 47, 118, 0),
woosh.Token(woosh.INDENT, '                ', 118, 0, 118, 16),
woosh.Token(woosh.NAME, 'self', 118, 16, 118, 20),
woosh.Token(woosh.OP, '.', 118, 20, 118, 21),
woosh.Token(woosh.NAME, '_invalid', 118, 21, 118, 29),
woosh.Token(woosh.OP, '(', 118, 29, 118, 30),
woosh.Token(woosh.NAME, 'mo', 118, 30, 118, 32),
woosh.Token(woosh.OP, ')', 118, 32, 118, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 33, 119, 0),
woosh.Token(woosh.DEDENT, '            ', 119, 0, 119, 12),
woosh.Token(woosh.NAME, 'raise', 119, 12, 119, 17),
woosh.Token(woosh.NAME, 'ValueError', 119, 18, 119, 28),
woosh.Token(woosh.OP, '(', 119, 28, 119, 29),
woosh.Token(woosh.STRING, "'Unrecognized named group in pattern'", 119, 29, 119, 66),
woosh.Token(woosh.OP, ',', 119, 66, 119, 67),
woosh.Token(woosh.NAME, 'self', 120, 29, 120, 33),
woosh.Token(woosh.OP, '.', 120, 33, 120, 34),
woosh.Token(woosh.NAME, 'pattern', 120, 34, 120, 41),
woosh.Token(woosh.OP, ')', 120, 41, 120, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 42, 121, 0),
woosh.Token(woosh.DEDENT, '        ', 121, 0, 121, 8),
woosh.Token(woosh.NAME, 'return', 121, 8, 121, 14),
woosh.Token(woosh.NAME, 'self', 121, 15, 121, 19),
woosh.Token(woosh.OP, '.', 121, 19, 121, 20),
woosh.Token(woosh.NAME, 'pattern', 121, 20, 121, 27),
woosh.Token(woosh.OP, '.', 121, 27, 121, 28),
woosh.Token(woosh.NAME, 'sub', 121, 28, 121, 31),
woosh.Token(woosh.OP, '(', 121, 31, 121, 32),
woosh.Token(woosh.NAME, 'convert', 121, 32, 121, 39),
woosh.Token(woosh.OP, ',', 121, 39, 121, 40),
woosh.Token(woosh.NAME, 'self', 121, 41, 121, 45),
woosh.Token(woosh.OP, '.', 121, 45, 121, 46),
woosh.Token(woosh.NAME, 'template', 121, 46, 121, 54),
woosh.Token(woosh.OP, ')', 121, 54, 121, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 55, 122, 0),
woosh.Token(woosh.DEDENT, '    ', 123, 0, 123, 4),
woosh.Token(woosh.NAME, 'def', 123, 4, 123, 7),
woosh.Token(woosh.NAME, 'safe_substitute', 123, 8, 123, 23),
woosh.Token(woosh.OP, '(', 123, 23, 123, 24),
woosh.Token(woosh.NAME, 'self', 123, 24, 123, 28),
woosh.Token(woosh.OP, ',', 123, 28, 123, 29),
woosh.Token(woosh.NAME, 'mapping', 123, 30, 123, 37),
woosh.Token(woosh.OP, '=', 123, 37, 123, 38),
woosh.Token(woosh.NAME, '_sentinel_dict', 123, 38, 123, 52),
woosh.Token(woosh.OP, ',', 123, 52, 123, 53),
woosh.Token(woosh.OP, '/', 123, 54, 123, 55),
woosh.Token(woosh.OP, ',', 123, 55, 123, 56),
woosh.Token(woosh.OP, '**', 123, 57, 123, 59),
woosh.Token(woosh.NAME, 'kws', 123, 59, 123, 62),
woosh.Token(woosh.OP, ')', 123, 62, 123, 63),
woosh.Token(woosh.OP, ':', 123, 63, 123, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 64, 124, 0),
woosh.Token(woosh.INDENT, '        ', 124, 0, 124, 8),
woosh.Token(woosh.NAME, 'if', 124, 8, 124, 10),
woosh.Token(woosh.NAME, 'mapping', 124, 11, 124, 18),
woosh.Token(woosh.NAME, 'is', 124, 19, 124, 21),
woosh.Token(woosh.NAME, '_sentinel_dict', 124, 22, 124, 36),
woosh.Token(woosh.OP, ':', 124, 36, 124, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 37, 125, 0),
woosh.Token(woosh.INDENT, '            ', 125, 0, 125, 12),
woosh.Token(woosh.NAME, 'mapping', 125, 12, 125, 19),
woosh.Token(woosh.OP, '=', 125, 20, 125, 21),
woosh.Token(woosh.NAME, 'kws', 125, 22, 125, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 25, 126, 0),
woosh.Token(woosh.DEDENT, '        ', 126, 0, 126, 8),
woosh.Token(woosh.NAME, 'elif', 126, 8, 126, 12),
woosh.Token(woosh.NAME, 'kws', 126, 13, 126, 16),
woosh.Token(woosh.OP, ':', 126, 16, 126, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 17, 127, 0),
woosh.Token(woosh.INDENT, '            ', 127, 0, 127, 12),
woosh.Token(woosh.NAME, 'mapping', 127, 12, 127, 19),
woosh.Token(woosh.OP, '=', 127, 20, 127, 21),
woosh.Token(woosh.NAME, '_ChainMap', 127, 22, 127, 31),
woosh.Token(woosh.OP, '(', 127, 31, 127, 32),
woosh.Token(woosh.NAME, 'kws', 127, 32, 127, 35),
woosh.Token(woosh.OP, ',', 127, 35, 127, 36),
woosh.Token(woosh.NAME, 'mapping', 127, 37, 127, 44),
woosh.Token(woosh.OP, ')', 127, 44, 127, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 45, 128, 0),
woosh.Token(woosh.COMMENT, '# Helper function for .sub()', 128, 8, 128, 36),
woosh.Token(woosh.DEDENT, '        ', 129, 0, 129, 8),
woosh.Token(woosh.NAME, 'def', 129, 8, 129, 11),
woosh.Token(woosh.NAME, 'convert', 129, 12, 129, 19),
woosh.Token(woosh.OP, '(', 129, 19, 129, 20),
woosh.Token(woosh.NAME, 'mo', 129, 20, 129, 22),
woosh.Token(woosh.OP, ')', 129, 22, 129, 23),
woosh.Token(woosh.OP, ':', 129, 23, 129, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 24, 130, 0),
woosh.Token(woosh.INDENT, '            ', 130, 0, 130, 12),
woosh.Token(woosh.NAME, 'named', 130, 12, 130, 17),
woosh.Token(woosh.OP, '=', 130, 18, 130, 19),
woosh.Token(woosh.NAME, 'mo', 130, 20, 130, 22),
woosh.Token(woosh.OP, '.', 130, 22, 130, 23),
woosh.Token(woosh.NAME, 'group', 130, 23, 130, 28),
woosh.Token(woosh.OP, '(', 130, 28, 130, 29),
woosh.Token(woosh.STRING, "'named'", 130, 29, 130, 36),
woosh.Token(woosh.OP, ')', 130, 36, 130, 37),
woosh.Token(woosh.NAME, 'or', 130, 38, 130, 40),
woosh.Token(woosh.NAME, 'mo', 130, 41, 130, 43),
woosh.Token(woosh.OP, '.', 130, 43, 130, 44),
woosh.Token(woosh.NAME, 'group', 130, 44, 130, 49),
woosh.Token(woosh.OP, '(', 130, 49, 130, 50),
woosh.Token(woosh.STRING, "'braced'", 130, 50, 130, 58),
woosh.Token(woosh.OP, ')', 130, 58, 130, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 59, 131, 0),
woosh.Token(woosh.NAME, 'if', 131, 12, 131, 14),
woosh.Token(woosh.NAME, 'named', 131, 15, 131, 20),
woosh.Token(woosh.NAME, 'is', 131, 21, 131, 23),
woosh.Token(woosh.NAME, 'not', 131, 24, 131, 27),
woosh.Token(woosh.NAME, 'None', 131, 28, 131, 32),
woosh.Token(woosh.OP, ':', 131, 32, 131, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 33, 132, 0),
woosh.Token(woosh.INDENT, '                ', 132, 0, 132, 16),
woosh.Token(woosh.NAME, 'try', 132, 16, 132, 19),
woosh.Token(woosh.OP, ':', 132, 19, 132, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 20, 133, 0),
woosh.Token(woosh.INDENT, '                    ', 133, 0, 133, 20),
woosh.Token(woosh.NAME, 'return', 133, 20, 133, 26),
woosh.Token(woosh.NAME, 'str', 133, 27, 133, 30),
woosh.Token(woosh.OP, '(', 133, 30, 133, 31),
woosh.Token(woosh.NAME, 'mapping', 133, 31, 133, 38),
woosh.Token(woosh.OP, '[', 133, 38, 133, 39),
woosh.Token(woosh.NAME, 'named', 133, 39, 133, 44),
woosh.Token(woosh.OP, ']', 133, 44, 133, 45),
woosh.Token(woosh.OP, ')', 133, 45, 133, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 46, 134, 0),
woosh.Token(woosh.DEDENT, '                ', 134, 0, 134, 16),
woosh.Token(woosh.NAME, 'except', 134, 16, 134, 22),
woosh.Token(woosh.NAME, 'KeyError', 134, 23, 134, 31),
woosh.Token(woosh.OP, ':', 134, 31, 134, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 32, 135, 0),
woosh.Token(woosh.INDENT, '                    ', 135, 0, 135, 20),
woosh.Token(woosh.NAME, 'return', 135, 20, 135, 26),
woosh.Token(woosh.NAME, 'mo', 135, 27, 135, 29),
woosh.Token(woosh.OP, '.', 135, 29, 135, 30),
woosh.Token(woosh.NAME, 'group', 135, 30, 135, 35),
woosh.Token(woosh.OP, '(', 135, 35, 135, 36),
woosh.Token(woosh.OP, ')', 135, 36, 135, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 37, 136, 0),
woosh.Token(woosh.DEDENT, '            ', 136, 0, 136, 12),
woosh.Token(woosh.DEDENT, '', 136, 12, 136, 12),
woosh.Token(woosh.NAME, 'if', 136, 12, 136, 14),
woosh.Token(woosh.NAME, 'mo', 136, 15, 136, 17),
woosh.Token(woosh.OP, '.', 136, 17, 136, 18),
woosh.Token(woosh.NAME, 'group', 136, 18, 136, 23),
woosh.Token(woosh.OP, '(', 136, 23, 136, 24),
woosh.Token(woosh.STRING, "'escaped'", 136, 24, 136, 33),
woosh.Token(woosh.OP, ')', 136, 33, 136, 34),
woosh.Token(woosh.NAME, 'is', 136, 35, 136, 37),
woosh.Token(woosh.NAME, 'not', 136, 38, 136, 41),
woosh.Token(woosh.NAME, 'None', 136, 42, 136, 46),
woosh.Token(woosh.OP, ':', 136, 46, 136, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 47, 137, 0),
woosh.Token(woosh.INDENT, '                ', 137, 0, 137, 16),
woosh.Token(woosh.NAME, 'return', 137, 16, 137, 22),
woosh.Token(woosh.NAME, 'self', 137, 23, 137, 27),
woosh.Token(woosh.OP, '.', 137, 27, 137, 28),
woosh.Token(woosh.NAME, 'delimiter', 137, 28, 137, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 37, 138, 0),
woosh.Token(woosh.DEDENT, '            ', 138, 0, 138, 12),
woosh.Token(woosh.NAME, 'if', 138, 12, 138, 14),
woosh.Token(woosh.NAME, 'mo', 138, 15, 138, 17),
woosh.Token(woosh.OP, '.', 138, 17, 138, 18),
woosh.Token(woosh.NAME, 'group', 138, 18, 138, 23),
woosh.Token(woosh.OP, '(', 138, 23, 138, 24),
woosh.Token(woosh.STRING, "'invalid'", 138, 24, 138, 33),
woosh.Token(woosh.OP, ')', 138, 33, 138, 34),
woosh.Token(woosh.NAME, 'is', 138, 35, 138, 37),
woosh.Token(woosh.NAME, 'not', 138, 38, 138, 41),
woosh.Token(woosh.NAME, 'None', 138, 42, 138, 46),
woosh.Token(woosh.OP, ':', 138, 46, 138, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 47, 139, 0),
woosh.Token(woosh.INDENT, '                ', 139, 0, 139, 16),
woosh.Token(woosh.NAME, 'return', 139, 16, 139, 22),
woosh.Token(woosh.NAME, 'mo', 139, 23, 139, 25),
woosh.Token(woosh.OP, '.', 139, 25, 139, 26),
woosh.Token(woosh.NAME, 'group', 139, 26, 139, 31),
woosh.Token(woosh.OP, '(', 139, 31, 139, 32),
woosh.Token(woosh.OP, ')', 139, 32, 139, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 33, 140, 0),
woosh.Token(woosh.DEDENT, '            ', 140, 0, 140, 12),
woosh.Token(woosh.NAME, 'raise', 140, 12, 140, 17),
woosh.Token(woosh.NAME, 'ValueError', 140, 18, 140, 28),
woosh.Token(woosh.OP, '(', 140, 28, 140, 29),
woosh.Token(woosh.STRING, "'Unrecognized named group in pattern'", 140, 29, 140, 66),
woosh.Token(woosh.OP, ',', 140, 66, 140, 67),
woosh.Token(woosh.NAME, 'self', 141, 29, 141, 33),
woosh.Token(woosh.OP, '.', 141, 33, 141, 34),
woosh.Token(woosh.NAME, 'pattern', 141, 34, 141, 41),
woosh.Token(woosh.OP, ')', 141, 41, 141, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 42, 142, 0),
woosh.Token(woosh.DEDENT, '        ', 142, 0, 142, 8),
woosh.Token(woosh.NAME, 'return', 142, 8, 142, 14),
woosh.Token(woosh.NAME, 'self', 142, 15, 142, 19),
woosh.Token(woosh.OP, '.', 142, 19, 142, 20),
woosh.Token(woosh.NAME, 'pattern', 142, 20, 142, 27),
woosh.Token(woosh.OP, '.', 142, 27, 142, 28),
woosh.Token(woosh.NAME, 'sub', 142, 28, 142, 31),
woosh.Token(woosh.OP, '(', 142, 31, 142, 32),
woosh.Token(woosh.NAME, 'convert', 142, 32, 142, 39),
woosh.Token(woosh.OP, ',', 142, 39, 142, 40),
woosh.Token(woosh.NAME, 'self', 142, 41, 142, 45),
woosh.Token(woosh.OP, '.', 142, 45, 142, 46),
woosh.Token(woosh.NAME, 'template', 142, 46, 142, 54),
woosh.Token(woosh.OP, ')', 142, 54, 142, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 55, 143, 0),
woosh.Token(woosh.COMMENT, '# Initialize Template.pattern.  __init_subclass__() is automatically called', 144, 0, 144, 75),
woosh.Token(woosh.COMMENT, '# only for subclasses, not for the Template class itself.', 145, 0, 145, 57),
woosh.Token(woosh.DEDENT, '', 146, 0, 146, 0),
woosh.Token(woosh.DEDENT, '', 146, 0, 146, 0),
woosh.Token(woosh.NAME, 'Template', 146, 0, 146, 8),
woosh.Token(woosh.OP, '.', 146, 8, 146, 9),
woosh.Token(woosh.NAME, '__init_subclass__', 146, 9, 146, 26),
woosh.Token(woosh.OP, '(', 146, 26, 146, 27),
woosh.Token(woosh.OP, ')', 146, 27, 146, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 28, 147, 0),
woosh.Token(woosh.COMMENT, '########################################################################', 149, 0, 149, 72),
woosh.Token(woosh.COMMENT, '# the Formatter class', 150, 0, 150, 21),
woosh.Token(woosh.COMMENT, '# see PEP 3101 for details and purpose of this class', 151, 0, 151, 52),
woosh.Token(woosh.COMMENT, '# The hard parts are reused from the C implementation.  They\'re exposed as "_"', 153, 0, 153, 78),
woosh.Token(woosh.COMMENT, '# prefixed methods of str.', 154, 0, 154, 26),
woosh.Token(woosh.COMMENT, '# The overall parser is implemented in _string.formatter_parser.', 156, 0, 156, 64),
woosh.Token(woosh.COMMENT, '# The field name parser is implemented in _string.formatter_field_name_split', 157, 0, 157, 76),
woosh.Token(woosh.NAME, 'class', 159, 0, 159, 5),
woosh.Token(woosh.NAME, 'Formatter', 159, 6, 159, 15),
woosh.Token(woosh.OP, ':', 159, 15, 159, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 159, 16, 160, 0),
woosh.Token(woosh.INDENT, '    ', 160, 0, 160, 4),
woosh.Token(woosh.NAME, 'def', 160, 4, 160, 7),
woosh.Token(woosh.NAME, 'format', 160, 8, 160, 14),
woosh.Token(woosh.OP, '(', 160, 14, 160, 15),
woosh.Token(woosh.NAME, 'self', 160, 15, 160, 19),
woosh.Token(woosh.OP, ',', 160, 19, 160, 20),
woosh.Token(woosh.NAME, 'format_string', 160, 21, 160, 34),
woosh.Token(woosh.OP, ',', 160, 34, 160, 35),
woosh.Token(woosh.OP, '/', 160, 36, 160, 37),
woosh.Token(woosh.OP, ',', 160, 37, 160, 38),
woosh.Token(woosh.OP, '*', 160, 39, 160, 40),
woosh.Token(woosh.NAME, 'args', 160, 40, 160, 44),
woosh.Token(woosh.OP, ',', 160, 44, 160, 45),
woosh.Token(woosh.OP, '**', 160, 46, 160, 48),
woosh.Token(woosh.NAME, 'kwargs', 160, 48, 160, 54),
woosh.Token(woosh.OP, ')', 160, 54, 160, 55),
woosh.Token(woosh.OP, ':', 160, 55, 160, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 56, 161, 0),
woosh.Token(woosh.INDENT, '        ', 161, 0, 161, 8),
woosh.Token(woosh.NAME, 'return', 161, 8, 161, 14),
woosh.Token(woosh.NAME, 'self', 161, 15, 161, 19),
woosh.Token(woosh.OP, '.', 161, 19, 161, 20),
woosh.Token(woosh.NAME, 'vformat', 161, 20, 161, 27),
woosh.Token(woosh.OP, '(', 161, 27, 161, 28),
woosh.Token(woosh.NAME, 'format_string', 161, 28, 161, 41),
woosh.Token(woosh.OP, ',', 161, 41, 161, 42),
woosh.Token(woosh.NAME, 'args', 161, 43, 161, 47),
woosh.Token(woosh.OP, ',', 161, 47, 161, 48),
woosh.Token(woosh.NAME, 'kwargs', 161, 49, 161, 55),
woosh.Token(woosh.OP, ')', 161, 55, 161, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 161, 56, 162, 0),
woosh.Token(woosh.DEDENT, '    ', 163, 0, 163, 4),
woosh.Token(woosh.NAME, 'def', 163, 4, 163, 7),
woosh.Token(woosh.NAME, 'vformat', 163, 8, 163, 15),
woosh.Token(woosh.OP, '(', 163, 15, 163, 16),
woosh.Token(woosh.NAME, 'self', 163, 16, 163, 20),
woosh.Token(woosh.OP, ',', 163, 20, 163, 21),
woosh.Token(woosh.NAME, 'format_string', 163, 22, 163, 35),
woosh.Token(woosh.OP, ',', 163, 35, 163, 36),
woosh.Token(woosh.NAME, 'args', 163, 37, 163, 41),
woosh.Token(woosh.OP, ',', 163, 41, 163, 42),
woosh.Token(woosh.NAME, 'kwargs', 163, 43, 163, 49),
woosh.Token(woosh.OP, ')', 163, 49, 163, 50),
woosh.Token(woosh.OP, ':', 163, 50, 163, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 51, 164, 0),
woosh.Token(woosh.INDENT, '        ', 164, 0, 164, 8),
woosh.Token(woosh.NAME, 'used_args', 164, 8, 164, 17),
woosh.Token(woosh.OP, '=', 164, 18, 164, 19),
woosh.Token(woosh.NAME, 'set', 164, 20, 164, 23),
woosh.Token(woosh.OP, '(', 164, 23, 164, 24),
woosh.Token(woosh.OP, ')', 164, 24, 164, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 25, 165, 0),
woosh.Token(woosh.NAME, 'result', 165, 8, 165, 14),
woosh.Token(woosh.OP, ',', 165, 14, 165, 15),
woosh.Token(woosh.NAME, '_', 165, 16, 165, 17),
woosh.Token(woosh.OP, '=', 165, 18, 165, 19),
woosh.Token(woosh.NAME, 'self', 165, 20, 165, 24),
woosh.Token(woosh.OP, '.', 165, 24, 165, 25),
woosh.Token(woosh.NAME, '_vformat', 165, 25, 165, 33),
woosh.Token(woosh.OP, '(', 165, 33, 165, 34),
woosh.Token(woosh.NAME, 'format_string', 165, 34, 165, 47),
woosh.Token(woosh.OP, ',', 165, 47, 165, 48),
woosh.Token(woosh.NAME, 'args', 165, 49, 165, 53),
woosh.Token(woosh.OP, ',', 165, 53, 165, 54),
woosh.Token(woosh.NAME, 'kwargs', 165, 55, 165, 61),
woosh.Token(woosh.OP, ',', 165, 61, 165, 62),
woosh.Token(woosh.NAME, 'used_args', 165, 63, 165, 72),
woosh.Token(woosh.OP, ',', 165, 72, 165, 73),
woosh.Token(woosh.NUMBER, '2', 165, 74, 165, 75),
woosh.Token(woosh.OP, ')', 165, 75, 165, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 76, 166, 0),
woosh.Token(woosh.NAME, 'self', 166, 8, 166, 12),
woosh.Token(woosh.OP, '.', 166, 12, 166, 13),
woosh.Token(woosh.NAME, 'check_unused_args', 166, 13, 166, 30),
woosh.Token(woosh.OP, '(', 166, 30, 166, 31),
woosh.Token(woosh.NAME, 'used_args', 166, 31, 166, 40),
woosh.Token(woosh.OP, ',', 166, 40, 166, 41),
woosh.Token(woosh.NAME, 'args', 166, 42, 166, 46),
woosh.Token(woosh.OP, ',', 166, 46, 166, 47),
woosh.Token(woosh.NAME, 'kwargs', 166, 48, 166, 54),
woosh.Token(woosh.OP, ')', 166, 54, 166, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 55, 167, 0),
woosh.Token(woosh.NAME, 'return', 167, 8, 167, 14),
woosh.Token(woosh.NAME, 'result', 167, 15, 167, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 21, 168, 0),
woosh.Token(woosh.DEDENT, '    ', 169, 0, 169, 4),
woosh.Token(woosh.NAME, 'def', 169, 4, 169, 7),
woosh.Token(woosh.NAME, '_vformat', 169, 8, 169, 16),
woosh.Token(woosh.OP, '(', 169, 16, 169, 17),
woosh.Token(woosh.NAME, 'self', 169, 17, 169, 21),
woosh.Token(woosh.OP, ',', 169, 21, 169, 22),
woosh.Token(woosh.NAME, 'format_string', 169, 23, 169, 36),
woosh.Token(woosh.OP, ',', 169, 36, 169, 37),
woosh.Token(woosh.NAME, 'args', 169, 38, 169, 42),
woosh.Token(woosh.OP, ',', 169, 42, 169, 43),
woosh.Token(woosh.NAME, 'kwargs', 169, 44, 169, 50),
woosh.Token(woosh.OP, ',', 169, 50, 169, 51),
woosh.Token(woosh.NAME, 'used_args', 169, 52, 169, 61),
woosh.Token(woosh.OP, ',', 169, 61, 169, 62),
woosh.Token(woosh.NAME, 'recursion_depth', 169, 63, 169, 78),
woosh.Token(woosh.OP, ',', 169, 78, 169, 79),
woosh.Token(woosh.NAME, 'auto_arg_index', 170, 17, 170, 31),
woosh.Token(woosh.OP, '=', 170, 31, 170, 32),
woosh.Token(woosh.NUMBER, '0', 170, 32, 170, 33),
woosh.Token(woosh.OP, ')', 170, 33, 170, 34),
woosh.Token(woosh.OP, ':', 170, 34, 170, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 35, 171, 0),
woosh.Token(woosh.INDENT, '        ', 171, 0, 171, 8),
woosh.Token(woosh.NAME, 'if', 171, 8, 171, 10),
woosh.Token(woosh.NAME, 'recursion_depth', 171, 11, 171, 26),
woosh.Token(woosh.OP, '<', 171, 27, 171, 28),
woosh.Token(woosh.NUMBER, '0', 171, 29, 171, 30),
woosh.Token(woosh.OP, ':', 171, 30, 171, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 31, 172, 0),
woosh.Token(woosh.INDENT, '            ', 172, 0, 172, 12),
woosh.Token(woosh.NAME, 'raise', 172, 12, 172, 17),
woosh.Token(woosh.NAME, 'ValueError', 172, 18, 172, 28),
woosh.Token(woosh.OP, '(', 172, 28, 172, 29),
woosh.Token(woosh.STRING, "'Max string recursion exceeded'", 172, 29, 172, 60),
woosh.Token(woosh.OP, ')', 172, 60, 172, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 61, 173, 0),
woosh.Token(woosh.DEDENT, '        ', 173, 0, 173, 8),
woosh.Token(woosh.NAME, 'result', 173, 8, 173, 14),
woosh.Token(woosh.OP, '=', 173, 15, 173, 16),
woosh.Token(woosh.OP, '[', 173, 17, 173, 18),
woosh.Token(woosh.OP, ']', 173, 18, 173, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 19, 174, 0),
woosh.Token(woosh.NAME, 'for', 174, 8, 174, 11),
woosh.Token(woosh.NAME, 'literal_text', 174, 12, 174, 24),
woosh.Token(woosh.OP, ',', 174, 24, 174, 25),
woosh.Token(woosh.NAME, 'field_name', 174, 26, 174, 36),
woosh.Token(woosh.OP, ',', 174, 36, 174, 37),
woosh.Token(woosh.NAME, 'format_spec', 174, 38, 174, 49),
woosh.Token(woosh.OP, ',', 174, 49, 174, 50),
woosh.Token(woosh.NAME, 'conversion', 174, 51, 174, 61),
woosh.Token(woosh.NAME, 'in', 174, 62, 174, 64),
woosh.Token(woosh.NAME, 'self', 175, 16, 175, 20),
woosh.Token(woosh.OP, '.', 175, 20, 175, 21),
woosh.Token(woosh.NAME, 'parse', 175, 21, 175, 26),
woosh.Token(woosh.OP, '(', 175, 26, 175, 27),
woosh.Token(woosh.NAME, 'format_string', 175, 27, 175, 40),
woosh.Token(woosh.OP, ')', 175, 40, 175, 41),
woosh.Token(woosh.OP, ':', 175, 41, 175, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 42, 176, 0),
woosh.Token(woosh.COMMENT, '# output the literal text', 177, 12, 177, 37),
woosh.Token(woosh.INDENT, '            ', 178, 0, 178, 12),
woosh.Token(woosh.NAME, 'if', 178, 12, 178, 14),
woosh.Token(woosh.NAME, 'literal_text', 178, 15, 178, 27),
woosh.Token(woosh.OP, ':', 178, 27, 178, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 28, 179, 0),
woosh.Token(woosh.INDENT, '                ', 179, 0, 179, 16),
woosh.Token(woosh.NAME, 'result', 179, 16, 179, 22),
woosh.Token(woosh.OP, '.', 179, 22, 179, 23),
woosh.Token(woosh.NAME, 'append', 179, 23, 179, 29),
woosh.Token(woosh.OP, '(', 179, 29, 179, 30),
woosh.Token(woosh.NAME, 'literal_text', 179, 30, 179, 42),
woosh.Token(woosh.OP, ')', 179, 42, 179, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 43, 180, 0),
woosh.Token(woosh.COMMENT, "# if there's a field, output it", 181, 12, 181, 43),
woosh.Token(woosh.DEDENT, '            ', 182, 0, 182, 12),
woosh.Token(woosh.NAME, 'if', 182, 12, 182, 14),
woosh.Token(woosh.NAME, 'field_name', 182, 15, 182, 25),
woosh.Token(woosh.NAME, 'is', 182, 26, 182, 28),
woosh.Token(woosh.NAME, 'not', 182, 29, 182, 32),
woosh.Token(woosh.NAME, 'None', 182, 33, 182, 37),
woosh.Token(woosh.OP, ':', 182, 37, 182, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 38, 183, 0),
woosh.Token(woosh.COMMENT, '# this is some markup, find the object and do', 183, 16, 183, 61),
woosh.Token(woosh.COMMENT, '#  the formatting', 184, 16, 184, 33),
woosh.Token(woosh.COMMENT, '# handle arg indexing when empty field_names are given.', 186, 16, 186, 71),
woosh.Token(woosh.INDENT, '                ', 187, 0, 187, 16),
woosh.Token(woosh.NAME, 'if', 187, 16, 187, 18),
woosh.Token(woosh.NAME, 'field_name', 187, 19, 187, 29),
woosh.Token(woosh.OP, '==', 187, 30, 187, 32),
woosh.Token(woosh.STRING, "''", 187, 33, 187, 35),
woosh.Token(woosh.OP, ':', 187, 35, 187, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 36, 188, 0),
woosh.Token(woosh.INDENT, '                    ', 188, 0, 188, 20),
woosh.Token(woosh.NAME, 'if', 188, 20, 188, 22),
woosh.Token(woosh.NAME, 'auto_arg_index', 188, 23, 188, 37),
woosh.Token(woosh.NAME, 'is', 188, 38, 188, 40),
woosh.Token(woosh.NAME, 'False', 188, 41, 188, 46),
woosh.Token(woosh.OP, ':', 188, 46, 188, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 47, 189, 0),
woosh.Token(woosh.INDENT, '                        ', 189, 0, 189, 24),
woosh.Token(woosh.NAME, 'raise', 189, 24, 189, 29),
woosh.Token(woosh.NAME, 'ValueError', 189, 30, 189, 40),
woosh.Token(woosh.OP, '(', 189, 40, 189, 41),
woosh.Token(woosh.STRING, "'cannot switch from manual field '", 189, 41, 189, 75),
woosh.Token(woosh.STRING, "'specification to automatic field '", 190, 41, 190, 76),
woosh.Token(woosh.STRING, "'numbering'", 191, 41, 191, 52),
woosh.Token(woosh.OP, ')', 191, 52, 191, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 53, 192, 0),
woosh.Token(woosh.DEDENT, '                    ', 192, 0, 192, 20),
woosh.Token(woosh.NAME, 'field_name', 192, 20, 192, 30),
woosh.Token(woosh.OP, '=', 192, 31, 192, 32),
woosh.Token(woosh.NAME, 'str', 192, 33, 192, 36),
woosh.Token(woosh.OP, '(', 192, 36, 192, 37),
woosh.Token(woosh.NAME, 'auto_arg_index', 192, 37, 192, 51),
woosh.Token(woosh.OP, ')', 192, 51, 192, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 52, 193, 0),
woosh.Token(woosh.NAME, 'auto_arg_index', 193, 20, 193, 34),
woosh.Token(woosh.OP, '+=', 193, 35, 193, 37),
woosh.Token(woosh.NUMBER, '1', 193, 38, 193, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 39, 194, 0),
woosh.Token(woosh.DEDENT, '                ', 194, 0, 194, 16),
woosh.Token(woosh.NAME, 'elif', 194, 16, 194, 20),
woosh.Token(woosh.NAME, 'field_name', 194, 21, 194, 31),
woosh.Token(woosh.OP, '.', 194, 31, 194, 32),
woosh.Token(woosh.NAME, 'isdigit', 194, 32, 194, 39),
woosh.Token(woosh.OP, '(', 194, 39, 194, 40),
woosh.Token(woosh.OP, ')', 194, 40, 194, 41),
woosh.Token(woosh.OP, ':', 194, 41, 194, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 42, 195, 0),
woosh.Token(woosh.INDENT, '                    ', 195, 0, 195, 20),
woosh.Token(woosh.NAME, 'if', 195, 20, 195, 22),
woosh.Token(woosh.NAME, 'auto_arg_index', 195, 23, 195, 37),
woosh.Token(woosh.OP, ':', 195, 37, 195, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 38, 196, 0),
woosh.Token(woosh.INDENT, '                        ', 196, 0, 196, 24),
woosh.Token(woosh.NAME, 'raise', 196, 24, 196, 29),
woosh.Token(woosh.NAME, 'ValueError', 196, 30, 196, 40),
woosh.Token(woosh.OP, '(', 196, 40, 196, 41),
woosh.Token(woosh.STRING, "'cannot switch from manual field '", 196, 41, 196, 75),
woosh.Token(woosh.STRING, "'specification to automatic field '", 197, 41, 197, 76),
woosh.Token(woosh.STRING, "'numbering'", 198, 41, 198, 52),
woosh.Token(woosh.OP, ')', 198, 52, 198, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 53, 199, 0),
woosh.Token(woosh.COMMENT, '# disable auto arg incrementing, if it gets', 199, 20, 199, 63),
woosh.Token(woosh.COMMENT, '# used later on, then an exception will be raised', 200, 20, 200, 69),
woosh.Token(woosh.DEDENT, '                    ', 201, 0, 201, 20),
woosh.Token(woosh.NAME, 'auto_arg_index', 201, 20, 201, 34),
woosh.Token(woosh.OP, '=', 201, 35, 201, 36),
woosh.Token(woosh.NAME, 'False', 201, 37, 201, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 42, 202, 0),
woosh.Token(woosh.COMMENT, '# given the field_name, find the object it references', 203, 16, 203, 69),
woosh.Token(woosh.COMMENT, '#  and the argument it came from', 204, 16, 204, 48),
woosh.Token(woosh.DEDENT, '                ', 205, 0, 205, 16),
woosh.Token(woosh.NAME, 'obj', 205, 16, 205, 19),
woosh.Token(woosh.OP, ',', 205, 19, 205, 20),
woosh.Token(woosh.NAME, 'arg_used', 205, 21, 205, 29),
woosh.Token(woosh.OP, '=', 205, 30, 205, 31),
woosh.Token(woosh.NAME, 'self', 205, 32, 205, 36),
woosh.Token(woosh.OP, '.', 205, 36, 205, 37),
woosh.Token(woosh.NAME, 'get_field', 205, 37, 205, 46),
woosh.Token(woosh.OP, '(', 205, 46, 205, 47),
woosh.Token(woosh.NAME, 'field_name', 205, 47, 205, 57),
woosh.Token(woosh.OP, ',', 205, 57, 205, 58),
woosh.Token(woosh.NAME, 'args', 205, 59, 205, 63),
woosh.Token(woosh.OP, ',', 205, 63, 205, 64),
woosh.Token(woosh.NAME, 'kwargs', 205, 65, 205, 71),
woosh.Token(woosh.OP, ')', 205, 71, 205, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 72, 206, 0),
woosh.Token(woosh.NAME, 'used_args', 206, 16, 206, 25),
woosh.Token(woosh.OP, '.', 206, 25, 206, 26),
woosh.Token(woosh.NAME, 'add', 206, 26, 206, 29),
woosh.Token(woosh.OP, '(', 206, 29, 206, 30),
woosh.Token(woosh.NAME, 'arg_used', 206, 30, 206, 38),
woosh.Token(woosh.OP, ')', 206, 38, 206, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 39, 207, 0),
woosh.Token(woosh.COMMENT, '# do any conversion on the resulting object', 208, 16, 208, 59),
woosh.Token(woosh.NAME, 'obj', 209, 16, 209, 19),
woosh.Token(woosh.OP, '=', 209, 20, 209, 21),
woosh.Token(woosh.NAME, 'self', 209, 22, 209, 26),
woosh.Token(woosh.OP, '.', 209, 26, 209, 27),
woosh.Token(woosh.NAME, 'convert_field', 209, 27, 209, 40),
woosh.Token(woosh.OP, '(', 209, 40, 209, 41),
woosh.Token(woosh.NAME, 'obj', 209, 41, 209, 44),
woosh.Token(woosh.OP, ',', 209, 44, 209, 45),
woosh.Token(woosh.NAME, 'conversion', 209, 46, 209, 56),
woosh.Token(woosh.OP, ')', 209, 56, 209, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 57, 210, 0),
woosh.Token(woosh.COMMENT, '# expand the format spec, if needed', 211, 16, 211, 51),
woosh.Token(woosh.NAME, 'format_spec', 212, 16, 212, 27),
woosh.Token(woosh.OP, ',', 212, 27, 212, 28),
woosh.Token(woosh.NAME, 'auto_arg_index', 212, 29, 212, 43),
woosh.Token(woosh.OP, '=', 212, 44, 212, 45),
woosh.Token(woosh.NAME, 'self', 212, 46, 212, 50),
woosh.Token(woosh.OP, '.', 212, 50, 212, 51),
woosh.Token(woosh.NAME, '_vformat', 212, 51, 212, 59),
woosh.Token(woosh.OP, '(', 212, 59, 212, 60),
woosh.Token(woosh.NAME, 'format_spec', 213, 20, 213, 31),
woosh.Token(woosh.OP, ',', 213, 31, 213, 32),
woosh.Token(woosh.NAME, 'args', 213, 33, 213, 37),
woosh.Token(woosh.OP, ',', 213, 37, 213, 38),
woosh.Token(woosh.NAME, 'kwargs', 213, 39, 213, 45),
woosh.Token(woosh.OP, ',', 213, 45, 213, 46),
woosh.Token(woosh.NAME, 'used_args', 214, 20, 214, 29),
woosh.Token(woosh.OP, ',', 214, 29, 214, 30),
woosh.Token(woosh.NAME, 'recursion_depth', 214, 31, 214, 46),
woosh.Token(woosh.OP, '-', 214, 46, 214, 47),
woosh.Token(woosh.NUMBER, '1', 214, 47, 214, 48),
woosh.Token(woosh.OP, ',', 214, 48, 214, 49),
woosh.Token(woosh.NAME, 'auto_arg_index', 215, 20, 215, 34),
woosh.Token(woosh.OP, '=', 215, 34, 215, 35),
woosh.Token(woosh.NAME, 'auto_arg_index', 215, 35, 215, 49),
woosh.Token(woosh.OP, ')', 215, 49, 215, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 50, 216, 0),
woosh.Token(woosh.COMMENT, '# format the object and append to the result', 217, 16, 217, 60),
woosh.Token(woosh.NAME, 'result', 218, 16, 218, 22),
woosh.Token(woosh.OP, '.', 218, 22, 218, 23),
woosh.Token(woosh.NAME, 'append', 218, 23, 218, 29),
woosh.Token(woosh.OP, '(', 218, 29, 218, 30),
woosh.Token(woosh.NAME, 'self', 218, 30, 218, 34),
woosh.Token(woosh.OP, '.', 218, 34, 218, 35),
woosh.Token(woosh.NAME, 'format_field', 218, 35, 218, 47),
woosh.Token(woosh.OP, '(', 218, 47, 218, 48),
woosh.Token(woosh.NAME, 'obj', 218, 48, 218, 51),
woosh.Token(woosh.OP, ',', 218, 51, 218, 52),
woosh.Token(woosh.NAME, 'format_spec', 218, 53, 218, 64),
woosh.Token(woosh.OP, ')', 218, 64, 218, 65),
woosh.Token(woosh.OP, ')', 218, 65, 218, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 66, 219, 0),
woosh.Token(woosh.DEDENT, '        ', 220, 0, 220, 8),
woosh.Token(woosh.DEDENT, '', 220, 8, 220, 8),
woosh.Token(woosh.NAME, 'return', 220, 8, 220, 14),
woosh.Token(woosh.STRING, "''", 220, 15, 220, 17),
woosh.Token(woosh.OP, '.', 220, 17, 220, 18),
woosh.Token(woosh.NAME, 'join', 220, 18, 220, 22),
woosh.Token(woosh.OP, '(', 220, 22, 220, 23),
woosh.Token(woosh.NAME, 'result', 220, 23, 220, 29),
woosh.Token(woosh.OP, ')', 220, 29, 220, 30),
woosh.Token(woosh.OP, ',', 220, 30, 220, 31),
woosh.Token(woosh.NAME, 'auto_arg_index', 220, 32, 220, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 46, 221, 0),
woosh.Token(woosh.DEDENT, '    ', 223, 0, 223, 4),
woosh.Token(woosh.NAME, 'def', 223, 4, 223, 7),
woosh.Token(woosh.NAME, 'get_value', 223, 8, 223, 17),
woosh.Token(woosh.OP, '(', 223, 17, 223, 18),
woosh.Token(woosh.NAME, 'self', 223, 18, 223, 22),
woosh.Token(woosh.OP, ',', 223, 22, 223, 23),
woosh.Token(woosh.NAME, 'key', 223, 24, 223, 27),
woosh.Token(woosh.OP, ',', 223, 27, 223, 28),
woosh.Token(woosh.NAME, 'args', 223, 29, 223, 33),
woosh.Token(woosh.OP, ',', 223, 33, 223, 34),
woosh.Token(woosh.NAME, 'kwargs', 223, 35, 223, 41),
woosh.Token(woosh.OP, ')', 223, 41, 223, 42),
woosh.Token(woosh.OP, ':', 223, 42, 223, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 43, 224, 0),
woosh.Token(woosh.INDENT, '        ', 224, 0, 224, 8),
woosh.Token(woosh.NAME, 'if', 224, 8, 224, 10),
woosh.Token(woosh.NAME, 'isinstance', 224, 11, 224, 21),
woosh.Token(woosh.OP, '(', 224, 21, 224, 22),
woosh.Token(woosh.NAME, 'key', 224, 22, 224, 25),
woosh.Token(woosh.OP, ',', 224, 25, 224, 26),
woosh.Token(woosh.NAME, 'int', 224, 27, 224, 30),
woosh.Token(woosh.OP, ')', 224, 30, 224, 31),
woosh.Token(woosh.OP, ':', 224, 31, 224, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 32, 225, 0),
woosh.Token(woosh.INDENT, '            ', 225, 0, 225, 12),
woosh.Token(woosh.NAME, 'return', 225, 12, 225, 18),
woosh.Token(woosh.NAME, 'args', 225, 19, 225, 23),
woosh.Token(woosh.OP, '[', 225, 23, 225, 24),
woosh.Token(woosh.NAME, 'key', 225, 24, 225, 27),
woosh.Token(woosh.OP, ']', 225, 27, 225, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 28, 226, 0),
woosh.Token(woosh.DEDENT, '        ', 226, 0, 226, 8),
woosh.Token(woosh.NAME, 'else', 226, 8, 226, 12),
woosh.Token(woosh.OP, ':', 226, 12, 226, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 13, 227, 0),
woosh.Token(woosh.INDENT, '            ', 227, 0, 227, 12),
woosh.Token(woosh.NAME, 'return', 227, 12, 227, 18),
woosh.Token(woosh.NAME, 'kwargs', 227, 19, 227, 25),
woosh.Token(woosh.OP, '[', 227, 25, 227, 26),
woosh.Token(woosh.NAME, 'key', 227, 26, 227, 29),
woosh.Token(woosh.OP, ']', 227, 29, 227, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 30, 228, 0),
woosh.Token(woosh.DEDENT, '    ', 230, 0, 230, 4),
woosh.Token(woosh.DEDENT, '', 230, 4, 230, 4),
woosh.Token(woosh.NAME, 'def', 230, 4, 230, 7),
woosh.Token(woosh.NAME, 'check_unused_args', 230, 8, 230, 25),
woosh.Token(woosh.OP, '(', 230, 25, 230, 26),
woosh.Token(woosh.NAME, 'self', 230, 26, 230, 30),
woosh.Token(woosh.OP, ',', 230, 30, 230, 31),
woosh.Token(woosh.NAME, 'used_args', 230, 32, 230, 41),
woosh.Token(woosh.OP, ',', 230, 41, 230, 42),
woosh.Token(woosh.NAME, 'args', 230, 43, 230, 47),
woosh.Token(woosh.OP, ',', 230, 47, 230, 48),
woosh.Token(woosh.NAME, 'kwargs', 230, 49, 230, 55),
woosh.Token(woosh.OP, ')', 230, 55, 230, 56),
woosh.Token(woosh.OP, ':', 230, 56, 230, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 57, 231, 0),
woosh.Token(woosh.INDENT, '        ', 231, 0, 231, 8),
woosh.Token(woosh.NAME, 'pass', 231, 8, 231, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 12, 232, 0),
woosh.Token(woosh.DEDENT, '    ', 234, 0, 234, 4),
woosh.Token(woosh.NAME, 'def', 234, 4, 234, 7),
woosh.Token(woosh.NAME, 'format_field', 234, 8, 234, 20),
woosh.Token(woosh.OP, '(', 234, 20, 234, 21),
woosh.Token(woosh.NAME, 'self', 234, 21, 234, 25),
woosh.Token(woosh.OP, ',', 234, 25, 234, 26),
woosh.Token(woosh.NAME, 'value', 234, 27, 234, 32),
woosh.Token(woosh.OP, ',', 234, 32, 234, 33),
woosh.Token(woosh.NAME, 'format_spec', 234, 34, 234, 45),
woosh.Token(woosh.OP, ')', 234, 45, 234, 46),
woosh.Token(woosh.OP, ':', 234, 46, 234, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 47, 235, 0),
woosh.Token(woosh.INDENT, '        ', 235, 0, 235, 8),
woosh.Token(woosh.NAME, 'return', 235, 8, 235, 14),
woosh.Token(woosh.NAME, 'format', 235, 15, 235, 21),
woosh.Token(woosh.OP, '(', 235, 21, 235, 22),
woosh.Token(woosh.NAME, 'value', 235, 22, 235, 27),
woosh.Token(woosh.OP, ',', 235, 27, 235, 28),
woosh.Token(woosh.NAME, 'format_spec', 235, 29, 235, 40),
woosh.Token(woosh.OP, ')', 235, 40, 235, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 41, 236, 0),
woosh.Token(woosh.DEDENT, '    ', 238, 0, 238, 4),
woosh.Token(woosh.NAME, 'def', 238, 4, 238, 7),
woosh.Token(woosh.NAME, 'convert_field', 238, 8, 238, 21),
woosh.Token(woosh.OP, '(', 238, 21, 238, 22),
woosh.Token(woosh.NAME, 'self', 238, 22, 238, 26),
woosh.Token(woosh.OP, ',', 238, 26, 238, 27),
woosh.Token(woosh.NAME, 'value', 238, 28, 238, 33),
woosh.Token(woosh.OP, ',', 238, 33, 238, 34),
woosh.Token(woosh.NAME, 'conversion', 238, 35, 238, 45),
woosh.Token(woosh.OP, ')', 238, 45, 238, 46),
woosh.Token(woosh.OP, ':', 238, 46, 238, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 47, 239, 0),
woosh.Token(woosh.COMMENT, '# do any conversion on the resulting object', 239, 8, 239, 51),
woosh.Token(woosh.INDENT, '        ', 240, 0, 240, 8),
woosh.Token(woosh.NAME, 'if', 240, 8, 240, 10),
woosh.Token(woosh.NAME, 'conversion', 240, 11, 240, 21),
woosh.Token(woosh.NAME, 'is', 240, 22, 240, 24),
woosh.Token(woosh.NAME, 'None', 240, 25, 240, 29),
woosh.Token(woosh.OP, ':', 240, 29, 240, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 30, 241, 0),
woosh.Token(woosh.INDENT, '            ', 241, 0, 241, 12),
woosh.Token(woosh.NAME, 'return', 241, 12, 241, 18),
woosh.Token(woosh.NAME, 'value', 241, 19, 241, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 24, 242, 0),
woosh.Token(woosh.DEDENT, '        ', 242, 0, 242, 8),
woosh.Token(woosh.NAME, 'elif', 242, 8, 242, 12),
woosh.Token(woosh.NAME, 'conversion', 242, 13, 242, 23),
woosh.Token(woosh.OP, '==', 242, 24, 242, 26),
woosh.Token(woosh.STRING, "'s'", 242, 27, 242, 30),
woosh.Token(woosh.OP, ':', 242, 30, 242, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 31, 243, 0),
woosh.Token(woosh.INDENT, '            ', 243, 0, 243, 12),
woosh.Token(woosh.NAME, 'return', 243, 12, 243, 18),
woosh.Token(woosh.NAME, 'str', 243, 19, 243, 22),
woosh.Token(woosh.OP, '(', 243, 22, 243, 23),
woosh.Token(woosh.NAME, 'value', 243, 23, 243, 28),
woosh.Token(woosh.OP, ')', 243, 28, 243, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 29, 244, 0),
woosh.Token(woosh.DEDENT, '        ', 244, 0, 244, 8),
woosh.Token(woosh.NAME, 'elif', 244, 8, 244, 12),
woosh.Token(woosh.NAME, 'conversion', 244, 13, 244, 23),
woosh.Token(woosh.OP, '==', 244, 24, 244, 26),
woosh.Token(woosh.STRING, "'r'", 244, 27, 244, 30),
woosh.Token(woosh.OP, ':', 244, 30, 244, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 31, 245, 0),
woosh.Token(woosh.INDENT, '            ', 245, 0, 245, 12),
woosh.Token(woosh.NAME, 'return', 245, 12, 245, 18),
woosh.Token(woosh.NAME, 'repr', 245, 19, 245, 23),
woosh.Token(woosh.OP, '(', 245, 23, 245, 24),
woosh.Token(woosh.NAME, 'value', 245, 24, 245, 29),
woosh.Token(woosh.OP, ')', 245, 29, 245, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 30, 246, 0),
woosh.Token(woosh.DEDENT, '        ', 246, 0, 246, 8),
woosh.Token(woosh.NAME, 'elif', 246, 8, 246, 12),
woosh.Token(woosh.NAME, 'conversion', 246, 13, 246, 23),
woosh.Token(woosh.OP, '==', 246, 24, 246, 26),
woosh.Token(woosh.STRING, "'a'", 246, 27, 246, 30),
woosh.Token(woosh.OP, ':', 246, 30, 246, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 31, 247, 0),
woosh.Token(woosh.INDENT, '            ', 247, 0, 247, 12),
woosh.Token(woosh.NAME, 'return', 247, 12, 247, 18),
woosh.Token(woosh.NAME, 'ascii', 247, 19, 247, 24),
woosh.Token(woosh.OP, '(', 247, 24, 247, 25),
woosh.Token(woosh.NAME, 'value', 247, 25, 247, 30),
woosh.Token(woosh.OP, ')', 247, 30, 247, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 31, 248, 0),
woosh.Token(woosh.DEDENT, '        ', 248, 0, 248, 8),
woosh.Token(woosh.NAME, 'raise', 248, 8, 248, 13),
woosh.Token(woosh.NAME, 'ValueError', 248, 14, 248, 24),
woosh.Token(woosh.OP, '(', 248, 24, 248, 25),
woosh.Token(woosh.STRING, '"Unknown conversion specifier {0!s}"', 248, 25, 248, 61),
woosh.Token(woosh.OP, '.', 248, 61, 248, 62),
woosh.Token(woosh.NAME, 'format', 248, 62, 248, 68),
woosh.Token(woosh.OP, '(', 248, 68, 248, 69),
woosh.Token(woosh.NAME, 'conversion', 248, 69, 248, 79),
woosh.Token(woosh.OP, ')', 248, 79, 248, 80),
woosh.Token(woosh.OP, ')', 248, 80, 248, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 81, 249, 0),
woosh.Token(woosh.COMMENT, '# returns an iterable that contains tuples of the form:', 251, 4, 251, 59),
woosh.Token(woosh.COMMENT, '# (literal_text, field_name, format_spec, conversion)', 252, 4, 252, 57),
woosh.Token(woosh.COMMENT, '# literal_text can be zero length', 253, 4, 253, 37),
woosh.Token(woosh.COMMENT, "# field_name can be None, in which case there's no", 254, 4, 254, 54),
woosh.Token(woosh.COMMENT, '#  object to format and output', 255, 4, 255, 34),
woosh.Token(woosh.COMMENT, '# if field_name is not None, it is looked up, formatted', 256, 4, 256, 59),
woosh.Token(woosh.COMMENT, '#  with format_spec and conversion and then used', 257, 4, 257, 52),
woosh.Token(woosh.DEDENT, '    ', 258, 0, 258, 4),
woosh.Token(woosh.NAME, 'def', 258, 4, 258, 7),
woosh.Token(woosh.NAME, 'parse', 258, 8, 258, 13),
woosh.Token(woosh.OP, '(', 258, 13, 258, 14),
woosh.Token(woosh.NAME, 'self', 258, 14, 258, 18),
woosh.Token(woosh.OP, ',', 258, 18, 258, 19),
woosh.Token(woosh.NAME, 'format_string', 258, 20, 258, 33),
woosh.Token(woosh.OP, ')', 258, 33, 258, 34),
woosh.Token(woosh.OP, ':', 258, 34, 258, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 35, 259, 0),
woosh.Token(woosh.INDENT, '        ', 259, 0, 259, 8),
woosh.Token(woosh.NAME, 'return', 259, 8, 259, 14),
woosh.Token(woosh.NAME, '_string', 259, 15, 259, 22),
woosh.Token(woosh.OP, '.', 259, 22, 259, 23),
woosh.Token(woosh.NAME, 'formatter_parser', 259, 23, 259, 39),
woosh.Token(woosh.OP, '(', 259, 39, 259, 40),
woosh.Token(woosh.NAME, 'format_string', 259, 40, 259, 53),
woosh.Token(woosh.OP, ')', 259, 53, 259, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 54, 260, 0),
woosh.Token(woosh.COMMENT, '# given a field_name, find the object it references.', 262, 4, 262, 56),
woosh.Token(woosh.COMMENT, '#  field_name:   the field being looked up, e.g. "0.name"', 263, 4, 263, 61),
woosh.Token(woosh.COMMENT, '#                 or "lookup[3]"', 264, 4, 264, 36),
woosh.Token(woosh.COMMENT, '#  used_args:    a set of which args have been used', 265, 4, 265, 55),
woosh.Token(woosh.COMMENT, '#  args, kwargs: as passed in to vformat', 266, 4, 266, 44),
woosh.Token(woosh.DEDENT, '    ', 267, 0, 267, 4),
woosh.Token(woosh.NAME, 'def', 267, 4, 267, 7),
woosh.Token(woosh.NAME, 'get_field', 267, 8, 267, 17),
woosh.Token(woosh.OP, '(', 267, 17, 267, 18),
woosh.Token(woosh.NAME, 'self', 267, 18, 267, 22),
woosh.Token(woosh.OP, ',', 267, 22, 267, 23),
woosh.Token(woosh.NAME, 'field_name', 267, 24, 267, 34),
woosh.Token(woosh.OP, ',', 267, 34, 267, 35),
woosh.Token(woosh.NAME, 'args', 267, 36, 267, 40),
woosh.Token(woosh.OP, ',', 267, 40, 267, 41),
woosh.Token(woosh.NAME, 'kwargs', 267, 42, 267, 48),
woosh.Token(woosh.OP, ')', 267, 48, 267, 49),
woosh.Token(woosh.OP, ':', 267, 49, 267, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 50, 268, 0),
woosh.Token(woosh.INDENT, '        ', 268, 0, 268, 8),
woosh.Token(woosh.NAME, 'first', 268, 8, 268, 13),
woosh.Token(woosh.OP, ',', 268, 13, 268, 14),
woosh.Token(woosh.NAME, 'rest', 268, 15, 268, 19),
woosh.Token(woosh.OP, '=', 268, 20, 268, 21),
woosh.Token(woosh.NAME, '_string', 268, 22, 268, 29),
woosh.Token(woosh.OP, '.', 268, 29, 268, 30),
woosh.Token(woosh.NAME, 'formatter_field_name_split', 268, 30, 268, 56),
woosh.Token(woosh.OP, '(', 268, 56, 268, 57),
woosh.Token(woosh.NAME, 'field_name', 268, 57, 268, 67),
woosh.Token(woosh.OP, ')', 268, 67, 268, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 68, 269, 0),
woosh.Token(woosh.NAME, 'obj', 270, 8, 270, 11),
woosh.Token(woosh.OP, '=', 270, 12, 270, 13),
woosh.Token(woosh.NAME, 'self', 270, 14, 270, 18),
woosh.Token(woosh.OP, '.', 270, 18, 270, 19),
woosh.Token(woosh.NAME, 'get_value', 270, 19, 270, 28),
woosh.Token(woosh.OP, '(', 270, 28, 270, 29),
woosh.Token(woosh.NAME, 'first', 270, 29, 270, 34),
woosh.Token(woosh.OP, ',', 270, 34, 270, 35),
woosh.Token(woosh.NAME, 'args', 270, 36, 270, 40),
woosh.Token(woosh.OP, ',', 270, 40, 270, 41),
woosh.Token(woosh.NAME, 'kwargs', 270, 42, 270, 48),
woosh.Token(woosh.OP, ')', 270, 48, 270, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 49, 271, 0),
woosh.Token(woosh.COMMENT, '# loop through the rest of the field_name, doing', 272, 8, 272, 56),
woosh.Token(woosh.COMMENT, '#  getattr or getitem as needed', 273, 8, 273, 39),
woosh.Token(woosh.NAME, 'for', 274, 8, 274, 11),
woosh.Token(woosh.NAME, 'is_attr', 274, 12, 274, 19),
woosh.Token(woosh.OP, ',', 274, 19, 274, 20),
woosh.Token(woosh.NAME, 'i', 274, 21, 274, 22),
woosh.Token(woosh.NAME, 'in', 274, 23, 274, 25),
woosh.Token(woosh.NAME, 'rest', 274, 26, 274, 30),
woosh.Token(woosh.OP, ':', 274, 30, 274, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 274, 31, 275, 0),
woosh.Token(woosh.INDENT, '            ', 275, 0, 275, 12),
woosh.Token(woosh.NAME, 'if', 275, 12, 275, 14),
woosh.Token(woosh.NAME, 'is_attr', 275, 15, 275, 22),
woosh.Token(woosh.OP, ':', 275, 22, 275, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 23, 276, 0),
woosh.Token(woosh.INDENT, '                ', 276, 0, 276, 16),
woosh.Token(woosh.NAME, 'obj', 276, 16, 276, 19),
woosh.Token(woosh.OP, '=', 276, 20, 276, 21),
woosh.Token(woosh.NAME, 'getattr', 276, 22, 276, 29),
woosh.Token(woosh.OP, '(', 276, 29, 276, 30),
woosh.Token(woosh.NAME, 'obj', 276, 30, 276, 33),
woosh.Token(woosh.OP, ',', 276, 33, 276, 34),
woosh.Token(woosh.NAME, 'i', 276, 35, 276, 36),
woosh.Token(woosh.OP, ')', 276, 36, 276, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 37, 277, 0),
woosh.Token(woosh.DEDENT, '            ', 277, 0, 277, 12),
woosh.Token(woosh.NAME, 'else', 277, 12, 277, 16),
woosh.Token(woosh.OP, ':', 277, 16, 277, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 17, 278, 0),
woosh.Token(woosh.INDENT, '                ', 278, 0, 278, 16),
woosh.Token(woosh.NAME, 'obj', 278, 16, 278, 19),
woosh.Token(woosh.OP, '=', 278, 20, 278, 21),
woosh.Token(woosh.NAME, 'obj', 278, 22, 278, 25),
woosh.Token(woosh.OP, '[', 278, 25, 278, 26),
woosh.Token(woosh.NAME, 'i', 278, 26, 278, 27),
woosh.Token(woosh.OP, ']', 278, 27, 278, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 28, 279, 0),
woosh.Token(woosh.DEDENT, '        ', 280, 0, 280, 8),
woosh.Token(woosh.DEDENT, '', 280, 8, 280, 8),
woosh.Token(woosh.NAME, 'return', 280, 8, 280, 14),
woosh.Token(woosh.NAME, 'obj', 280, 15, 280, 18),
woosh.Token(woosh.OP, ',', 280, 18, 280, 19),
woosh.Token(woosh.NAME, 'first', 280, 20, 280, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 25, 281, 0),
woosh.Token(woosh.DEDENT, '', 281, 0, 281, 0),
woosh.Token(woosh.DEDENT, '', 281, 0, 281, 0),
woosh.Token(woosh.EOF, '', 281, 0, 281, 0),
]
