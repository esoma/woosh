
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../../sample/'
def test():
    with open('F:\\code\\woosh\\sample\\stdlib\\os.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, 'r"""OS routines for NT or Posix depending on what system we\'re on.\r\n\r\nThis exports:\r\n  - all functions from posix or nt, e.g. unlink, stat, etc.\r\n  - os.path is either posixpath or ntpath\r\n  - os.name is either \'posix\' or \'nt\'\r\n  - os.curdir is a string representing the current directory (always \'.\')\r\n  - os.pardir is a string representing the parent directory (always \'..\')\r\n  - os.sep is the (or a most common) pathname separator (\'/\' or \'\\\\\')\r\n  - os.extsep is the extension separator (always \'.\')\r\n  - os.altsep is the alternate pathname separator (None or \'/\')\r\n  - os.pathsep is the component separator used in $PATH etc\r\n  - os.linesep is the line separator in text files (\'\\r\' or \'\\n\' or \'\\r\\n\')\r\n  - os.defpath is the default search path for executables\r\n  - os.devnull is the file path of the null device (\'/dev/null\', etc.)\r\n\r\nPrograms that import and use \'os\' stand a better chance of being\r\nportable between different platforms.  Of course, they must then\r\nonly use functions that are defined by all platforms (e.g., unlink\r\nand opendir), and leave all pathname manipulation to os.path\r\n(e.g., split and join).\r\n"""', 1, 0, 22, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 22, 3, 23, 0),
woosh.Token(woosh.COMMENT, "#'", 24, 0, 24, 2),
woosh.Token(woosh.NAME, 'import', 25, 0, 25, 6),
woosh.Token(woosh.NAME, 'abc', 25, 7, 25, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 25, 10, 26, 0),
woosh.Token(woosh.NAME, 'import', 26, 0, 26, 6),
woosh.Token(woosh.NAME, 'sys', 26, 7, 26, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 26, 10, 27, 0),
woosh.Token(woosh.NAME, 'import', 27, 0, 27, 6),
woosh.Token(woosh.NAME, 'stat', 27, 7, 27, 11),
woosh.Token(woosh.NAME, 'as', 27, 12, 27, 14),
woosh.Token(woosh.NAME, 'st', 27, 15, 27, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 27, 17, 28, 0),
woosh.Token(woosh.NAME, 'from', 29, 0, 29, 4),
woosh.Token(woosh.NAME, '_collections_abc', 29, 5, 29, 21),
woosh.Token(woosh.NAME, 'import', 29, 22, 29, 28),
woosh.Token(woosh.NAME, '_check_methods', 29, 29, 29, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 43, 30, 0),
woosh.Token(woosh.NAME, 'GenericAlias', 31, 0, 31, 12),
woosh.Token(woosh.OP, '=', 31, 13, 31, 14),
woosh.Token(woosh.NAME, 'type', 31, 15, 31, 19),
woosh.Token(woosh.OP, '(', 31, 19, 31, 20),
woosh.Token(woosh.NAME, 'list', 31, 20, 31, 24),
woosh.Token(woosh.OP, '[', 31, 24, 31, 25),
woosh.Token(woosh.NAME, 'int', 31, 25, 31, 28),
woosh.Token(woosh.OP, ']', 31, 28, 31, 29),
woosh.Token(woosh.OP, ')', 31, 29, 31, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 31, 30, 32, 0),
woosh.Token(woosh.NAME, '_names', 33, 0, 33, 6),
woosh.Token(woosh.OP, '=', 33, 7, 33, 8),
woosh.Token(woosh.NAME, 'sys', 33, 9, 33, 12),
woosh.Token(woosh.OP, '.', 33, 12, 33, 13),
woosh.Token(woosh.NAME, 'builtin_module_names', 33, 13, 33, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 33, 33, 34, 0),
woosh.Token(woosh.COMMENT, '# Note:  more names are added to __all__ later.', 35, 0, 35, 47),
woosh.Token(woosh.NAME, '__all__', 36, 0, 36, 7),
woosh.Token(woosh.OP, '=', 36, 8, 36, 9),
woosh.Token(woosh.OP, '[', 36, 10, 36, 11),
woosh.Token(woosh.STRING, '"altsep"', 36, 11, 36, 19),
woosh.Token(woosh.OP, ',', 36, 19, 36, 20),
woosh.Token(woosh.STRING, '"curdir"', 36, 21, 36, 29),
woosh.Token(woosh.OP, ',', 36, 29, 36, 30),
woosh.Token(woosh.STRING, '"pardir"', 36, 31, 36, 39),
woosh.Token(woosh.OP, ',', 36, 39, 36, 40),
woosh.Token(woosh.STRING, '"sep"', 36, 41, 36, 46),
woosh.Token(woosh.OP, ',', 36, 46, 36, 47),
woosh.Token(woosh.STRING, '"pathsep"', 36, 48, 36, 57),
woosh.Token(woosh.OP, ',', 36, 57, 36, 58),
woosh.Token(woosh.STRING, '"linesep"', 36, 59, 36, 68),
woosh.Token(woosh.OP, ',', 36, 68, 36, 69),
woosh.Token(woosh.STRING, '"defpath"', 37, 11, 37, 20),
woosh.Token(woosh.OP, ',', 37, 20, 37, 21),
woosh.Token(woosh.STRING, '"name"', 37, 22, 37, 28),
woosh.Token(woosh.OP, ',', 37, 28, 37, 29),
woosh.Token(woosh.STRING, '"path"', 37, 30, 37, 36),
woosh.Token(woosh.OP, ',', 37, 36, 37, 37),
woosh.Token(woosh.STRING, '"devnull"', 37, 38, 37, 47),
woosh.Token(woosh.OP, ',', 37, 47, 37, 48),
woosh.Token(woosh.STRING, '"SEEK_SET"', 37, 49, 37, 59),
woosh.Token(woosh.OP, ',', 37, 59, 37, 60),
woosh.Token(woosh.STRING, '"SEEK_CUR"', 37, 61, 37, 71),
woosh.Token(woosh.OP, ',', 37, 71, 37, 72),
woosh.Token(woosh.STRING, '"SEEK_END"', 38, 11, 38, 21),
woosh.Token(woosh.OP, ',', 38, 21, 38, 22),
woosh.Token(woosh.STRING, '"fsencode"', 38, 23, 38, 33),
woosh.Token(woosh.OP, ',', 38, 33, 38, 34),
woosh.Token(woosh.STRING, '"fsdecode"', 38, 35, 38, 45),
woosh.Token(woosh.OP, ',', 38, 45, 38, 46),
woosh.Token(woosh.STRING, '"get_exec_path"', 38, 47, 38, 62),
woosh.Token(woosh.OP, ',', 38, 62, 38, 63),
woosh.Token(woosh.STRING, '"fdopen"', 38, 64, 38, 72),
woosh.Token(woosh.OP, ',', 38, 72, 38, 73),
woosh.Token(woosh.STRING, '"popen"', 39, 11, 39, 18),
woosh.Token(woosh.OP, ',', 39, 18, 39, 19),
woosh.Token(woosh.STRING, '"extsep"', 39, 20, 39, 28),
woosh.Token(woosh.OP, ']', 39, 28, 39, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 39, 29, 40, 0),
woosh.Token(woosh.NAME, 'def', 41, 0, 41, 3),
woosh.Token(woosh.NAME, '_exists', 41, 4, 41, 11),
woosh.Token(woosh.OP, '(', 41, 11, 41, 12),
woosh.Token(woosh.NAME, 'name', 41, 12, 41, 16),
woosh.Token(woosh.OP, ')', 41, 16, 41, 17),
woosh.Token(woosh.OP, ':', 41, 17, 41, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 41, 18, 42, 0),
woosh.Token(woosh.INDENT, '    ', 42, 0, 42, 4),
woosh.Token(woosh.NAME, 'return', 42, 4, 42, 10),
woosh.Token(woosh.NAME, 'name', 42, 11, 42, 15),
woosh.Token(woosh.NAME, 'in', 42, 16, 42, 18),
woosh.Token(woosh.NAME, 'globals', 42, 19, 42, 26),
woosh.Token(woosh.OP, '(', 42, 26, 42, 27),
woosh.Token(woosh.OP, ')', 42, 27, 42, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 42, 28, 43, 0),
woosh.Token(woosh.DEDENT, '', 44, 0, 44, 0),
woosh.Token(woosh.NAME, 'def', 44, 0, 44, 3),
woosh.Token(woosh.NAME, '_get_exports_list', 44, 4, 44, 21),
woosh.Token(woosh.OP, '(', 44, 21, 44, 22),
woosh.Token(woosh.NAME, 'module', 44, 22, 44, 28),
woosh.Token(woosh.OP, ')', 44, 28, 44, 29),
woosh.Token(woosh.OP, ':', 44, 29, 44, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 44, 30, 45, 0),
woosh.Token(woosh.INDENT, '    ', 45, 0, 45, 4),
woosh.Token(woosh.NAME, 'try', 45, 4, 45, 7),
woosh.Token(woosh.OP, ':', 45, 7, 45, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 45, 8, 46, 0),
woosh.Token(woosh.INDENT, '        ', 46, 0, 46, 8),
woosh.Token(woosh.NAME, 'return', 46, 8, 46, 14),
woosh.Token(woosh.NAME, 'list', 46, 15, 46, 19),
woosh.Token(woosh.OP, '(', 46, 19, 46, 20),
woosh.Token(woosh.NAME, 'module', 46, 20, 46, 26),
woosh.Token(woosh.OP, '.', 46, 26, 46, 27),
woosh.Token(woosh.NAME, '__all__', 46, 27, 46, 34),
woosh.Token(woosh.OP, ')', 46, 34, 46, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 35, 47, 0),
woosh.Token(woosh.DEDENT, '    ', 47, 0, 47, 4),
woosh.Token(woosh.NAME, 'except', 47, 4, 47, 10),
woosh.Token(woosh.NAME, 'AttributeError', 47, 11, 47, 25),
woosh.Token(woosh.OP, ':', 47, 25, 47, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 26, 48, 0),
woosh.Token(woosh.INDENT, '        ', 48, 0, 48, 8),
woosh.Token(woosh.NAME, 'return', 48, 8, 48, 14),
woosh.Token(woosh.OP, '[', 48, 15, 48, 16),
woosh.Token(woosh.NAME, 'n', 48, 16, 48, 17),
woosh.Token(woosh.NAME, 'for', 48, 18, 48, 21),
woosh.Token(woosh.NAME, 'n', 48, 22, 48, 23),
woosh.Token(woosh.NAME, 'in', 48, 24, 48, 26),
woosh.Token(woosh.NAME, 'dir', 48, 27, 48, 30),
woosh.Token(woosh.OP, '(', 48, 30, 48, 31),
woosh.Token(woosh.NAME, 'module', 48, 31, 48, 37),
woosh.Token(woosh.OP, ')', 48, 37, 48, 38),
woosh.Token(woosh.NAME, 'if', 48, 39, 48, 41),
woosh.Token(woosh.NAME, 'n', 48, 42, 48, 43),
woosh.Token(woosh.OP, '[', 48, 43, 48, 44),
woosh.Token(woosh.NUMBER, '0', 48, 44, 48, 45),
woosh.Token(woosh.OP, ']', 48, 45, 48, 46),
woosh.Token(woosh.OP, '!=', 48, 47, 48, 49),
woosh.Token(woosh.STRING, "'_'", 48, 50, 48, 53),
woosh.Token(woosh.OP, ']', 48, 53, 48, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 48, 54, 49, 0),
woosh.Token(woosh.COMMENT, '# Any new dependencies of the os module and/or changes in path separator', 50, 0, 50, 72),
woosh.Token(woosh.COMMENT, '# requires updating importlib as well.', 51, 0, 51, 38),
woosh.Token(woosh.DEDENT, '', 52, 0, 52, 0),
woosh.Token(woosh.DEDENT, '', 52, 0, 52, 0),
woosh.Token(woosh.NAME, 'if', 52, 0, 52, 2),
woosh.Token(woosh.STRING, "'posix'", 52, 3, 52, 10),
woosh.Token(woosh.NAME, 'in', 52, 11, 52, 13),
woosh.Token(woosh.NAME, '_names', 52, 14, 52, 20),
woosh.Token(woosh.OP, ':', 52, 20, 52, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 21, 53, 0),
woosh.Token(woosh.INDENT, '    ', 53, 0, 53, 4),
woosh.Token(woosh.NAME, 'name', 53, 4, 53, 8),
woosh.Token(woosh.OP, '=', 53, 9, 53, 10),
woosh.Token(woosh.STRING, "'posix'", 53, 11, 53, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 18, 54, 0),
woosh.Token(woosh.NAME, 'linesep', 54, 4, 54, 11),
woosh.Token(woosh.OP, '=', 54, 12, 54, 13),
woosh.Token(woosh.STRING, "'\\n'", 54, 14, 54, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 18, 55, 0),
woosh.Token(woosh.NAME, 'from', 55, 4, 55, 8),
woosh.Token(woosh.NAME, 'posix', 55, 9, 55, 14),
woosh.Token(woosh.NAME, 'import', 55, 15, 55, 21),
woosh.Token(woosh.OP, '*', 55, 22, 55, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 23, 56, 0),
woosh.Token(woosh.NAME, 'try', 56, 4, 56, 7),
woosh.Token(woosh.OP, ':', 56, 7, 56, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 56, 8, 57, 0),
woosh.Token(woosh.INDENT, '        ', 57, 0, 57, 8),
woosh.Token(woosh.NAME, 'from', 57, 8, 57, 12),
woosh.Token(woosh.NAME, 'posix', 57, 13, 57, 18),
woosh.Token(woosh.NAME, 'import', 57, 19, 57, 25),
woosh.Token(woosh.NAME, '_exit', 57, 26, 57, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 31, 58, 0),
woosh.Token(woosh.NAME, '__all__', 58, 8, 58, 15),
woosh.Token(woosh.OP, '.', 58, 15, 58, 16),
woosh.Token(woosh.NAME, 'append', 58, 16, 58, 22),
woosh.Token(woosh.OP, '(', 58, 22, 58, 23),
woosh.Token(woosh.STRING, "'_exit'", 58, 23, 58, 30),
woosh.Token(woosh.OP, ')', 58, 30, 58, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 31, 59, 0),
woosh.Token(woosh.DEDENT, '    ', 59, 0, 59, 4),
woosh.Token(woosh.NAME, 'except', 59, 4, 59, 10),
woosh.Token(woosh.NAME, 'ImportError', 59, 11, 59, 22),
woosh.Token(woosh.OP, ':', 59, 22, 59, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 23, 60, 0),
woosh.Token(woosh.INDENT, '        ', 60, 0, 60, 8),
woosh.Token(woosh.NAME, 'pass', 60, 8, 60, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 12, 61, 0),
woosh.Token(woosh.DEDENT, '    ', 61, 0, 61, 4),
woosh.Token(woosh.NAME, 'import', 61, 4, 61, 10),
woosh.Token(woosh.NAME, 'posixpath', 61, 11, 61, 20),
woosh.Token(woosh.NAME, 'as', 61, 21, 61, 23),
woosh.Token(woosh.NAME, 'path', 61, 24, 61, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 28, 62, 0),
woosh.Token(woosh.NAME, 'try', 63, 4, 63, 7),
woosh.Token(woosh.OP, ':', 63, 7, 63, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 63, 8, 64, 0),
woosh.Token(woosh.INDENT, '        ', 64, 0, 64, 8),
woosh.Token(woosh.NAME, 'from', 64, 8, 64, 12),
woosh.Token(woosh.NAME, 'posix', 64, 13, 64, 18),
woosh.Token(woosh.NAME, 'import', 64, 19, 64, 25),
woosh.Token(woosh.NAME, '_have_functions', 64, 26, 64, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 64, 41, 65, 0),
woosh.Token(woosh.DEDENT, '    ', 65, 0, 65, 4),
woosh.Token(woosh.NAME, 'except', 65, 4, 65, 10),
woosh.Token(woosh.NAME, 'ImportError', 65, 11, 65, 22),
woosh.Token(woosh.OP, ':', 65, 22, 65, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 65, 23, 66, 0),
woosh.Token(woosh.INDENT, '        ', 66, 0, 66, 8),
woosh.Token(woosh.NAME, 'pass', 66, 8, 66, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 12, 67, 0),
woosh.Token(woosh.DEDENT, '    ', 68, 0, 68, 4),
woosh.Token(woosh.NAME, 'import', 68, 4, 68, 10),
woosh.Token(woosh.NAME, 'posix', 68, 11, 68, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 68, 16, 69, 0),
woosh.Token(woosh.NAME, '__all__', 69, 4, 69, 11),
woosh.Token(woosh.OP, '.', 69, 11, 69, 12),
woosh.Token(woosh.NAME, 'extend', 69, 12, 69, 18),
woosh.Token(woosh.OP, '(', 69, 18, 69, 19),
woosh.Token(woosh.NAME, '_get_exports_list', 69, 19, 69, 36),
woosh.Token(woosh.OP, '(', 69, 36, 69, 37),
woosh.Token(woosh.NAME, 'posix', 69, 37, 69, 42),
woosh.Token(woosh.OP, ')', 69, 42, 69, 43),
woosh.Token(woosh.OP, ')', 69, 43, 69, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 44, 70, 0),
woosh.Token(woosh.NAME, 'del', 70, 4, 70, 7),
woosh.Token(woosh.NAME, 'posix', 70, 8, 70, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 13, 71, 0),
woosh.Token(woosh.DEDENT, '', 72, 0, 72, 0),
woosh.Token(woosh.NAME, 'elif', 72, 0, 72, 4),
woosh.Token(woosh.STRING, "'nt'", 72, 5, 72, 9),
woosh.Token(woosh.NAME, 'in', 72, 10, 72, 12),
woosh.Token(woosh.NAME, '_names', 72, 13, 72, 19),
woosh.Token(woosh.OP, ':', 72, 19, 72, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 20, 73, 0),
woosh.Token(woosh.INDENT, '    ', 73, 0, 73, 4),
woosh.Token(woosh.NAME, 'name', 73, 4, 73, 8),
woosh.Token(woosh.OP, '=', 73, 9, 73, 10),
woosh.Token(woosh.STRING, "'nt'", 73, 11, 73, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 15, 74, 0),
woosh.Token(woosh.NAME, 'linesep', 74, 4, 74, 11),
woosh.Token(woosh.OP, '=', 74, 12, 74, 13),
woosh.Token(woosh.STRING, "'\\r\\n'", 74, 14, 74, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 20, 75, 0),
woosh.Token(woosh.NAME, 'from', 75, 4, 75, 8),
woosh.Token(woosh.NAME, 'nt', 75, 9, 75, 11),
woosh.Token(woosh.NAME, 'import', 75, 12, 75, 18),
woosh.Token(woosh.OP, '*', 75, 19, 75, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 20, 76, 0),
woosh.Token(woosh.NAME, 'try', 76, 4, 76, 7),
woosh.Token(woosh.OP, ':', 76, 7, 76, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 8, 77, 0),
woosh.Token(woosh.INDENT, '        ', 77, 0, 77, 8),
woosh.Token(woosh.NAME, 'from', 77, 8, 77, 12),
woosh.Token(woosh.NAME, 'nt', 77, 13, 77, 15),
woosh.Token(woosh.NAME, 'import', 77, 16, 77, 22),
woosh.Token(woosh.NAME, '_exit', 77, 23, 77, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 28, 78, 0),
woosh.Token(woosh.NAME, '__all__', 78, 8, 78, 15),
woosh.Token(woosh.OP, '.', 78, 15, 78, 16),
woosh.Token(woosh.NAME, 'append', 78, 16, 78, 22),
woosh.Token(woosh.OP, '(', 78, 22, 78, 23),
woosh.Token(woosh.STRING, "'_exit'", 78, 23, 78, 30),
woosh.Token(woosh.OP, ')', 78, 30, 78, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 31, 79, 0),
woosh.Token(woosh.DEDENT, '    ', 79, 0, 79, 4),
woosh.Token(woosh.NAME, 'except', 79, 4, 79, 10),
woosh.Token(woosh.NAME, 'ImportError', 79, 11, 79, 22),
woosh.Token(woosh.OP, ':', 79, 22, 79, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 79, 23, 80, 0),
woosh.Token(woosh.INDENT, '        ', 80, 0, 80, 8),
woosh.Token(woosh.NAME, 'pass', 80, 8, 80, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 80, 12, 81, 0),
woosh.Token(woosh.DEDENT, '    ', 81, 0, 81, 4),
woosh.Token(woosh.NAME, 'import', 81, 4, 81, 10),
woosh.Token(woosh.NAME, 'ntpath', 81, 11, 81, 17),
woosh.Token(woosh.NAME, 'as', 81, 18, 81, 20),
woosh.Token(woosh.NAME, 'path', 81, 21, 81, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 81, 25, 82, 0),
woosh.Token(woosh.NAME, 'import', 83, 4, 83, 10),
woosh.Token(woosh.NAME, 'nt', 83, 11, 83, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 83, 13, 84, 0),
woosh.Token(woosh.NAME, '__all__', 84, 4, 84, 11),
woosh.Token(woosh.OP, '.', 84, 11, 84, 12),
woosh.Token(woosh.NAME, 'extend', 84, 12, 84, 18),
woosh.Token(woosh.OP, '(', 84, 18, 84, 19),
woosh.Token(woosh.NAME, '_get_exports_list', 84, 19, 84, 36),
woosh.Token(woosh.OP, '(', 84, 36, 84, 37),
woosh.Token(woosh.NAME, 'nt', 84, 37, 84, 39),
woosh.Token(woosh.OP, ')', 84, 39, 84, 40),
woosh.Token(woosh.OP, ')', 84, 40, 84, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 84, 41, 85, 0),
woosh.Token(woosh.NAME, 'del', 85, 4, 85, 7),
woosh.Token(woosh.NAME, 'nt', 85, 8, 85, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 85, 10, 86, 0),
woosh.Token(woosh.NAME, 'try', 87, 4, 87, 7),
woosh.Token(woosh.OP, ':', 87, 7, 87, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 8, 88, 0),
woosh.Token(woosh.INDENT, '        ', 88, 0, 88, 8),
woosh.Token(woosh.NAME, 'from', 88, 8, 88, 12),
woosh.Token(woosh.NAME, 'nt', 88, 13, 88, 15),
woosh.Token(woosh.NAME, 'import', 88, 16, 88, 22),
woosh.Token(woosh.NAME, '_have_functions', 88, 23, 88, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 38, 89, 0),
woosh.Token(woosh.DEDENT, '    ', 89, 0, 89, 4),
woosh.Token(woosh.NAME, 'except', 89, 4, 89, 10),
woosh.Token(woosh.NAME, 'ImportError', 89, 11, 89, 22),
woosh.Token(woosh.OP, ':', 89, 22, 89, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 89, 23, 90, 0),
woosh.Token(woosh.INDENT, '        ', 90, 0, 90, 8),
woosh.Token(woosh.NAME, 'pass', 90, 8, 90, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 90, 12, 91, 0),
woosh.Token(woosh.DEDENT, '', 92, 0, 92, 0),
woosh.Token(woosh.DEDENT, '', 92, 0, 92, 0),
woosh.Token(woosh.NAME, 'else', 92, 0, 92, 4),
woosh.Token(woosh.OP, ':', 92, 4, 92, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 5, 93, 0),
woosh.Token(woosh.INDENT, '    ', 93, 0, 93, 4),
woosh.Token(woosh.NAME, 'raise', 93, 4, 93, 9),
woosh.Token(woosh.NAME, 'ImportError', 93, 10, 93, 21),
woosh.Token(woosh.OP, '(', 93, 21, 93, 22),
woosh.Token(woosh.STRING, "'no os specific module found'", 93, 22, 93, 51),
woosh.Token(woosh.OP, ')', 93, 51, 93, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 52, 94, 0),
woosh.Token(woosh.DEDENT, '', 95, 0, 95, 0),
woosh.Token(woosh.NAME, 'sys', 95, 0, 95, 3),
woosh.Token(woosh.OP, '.', 95, 3, 95, 4),
woosh.Token(woosh.NAME, 'modules', 95, 4, 95, 11),
woosh.Token(woosh.OP, '[', 95, 11, 95, 12),
woosh.Token(woosh.STRING, "'os.path'", 95, 12, 95, 21),
woosh.Token(woosh.OP, ']', 95, 21, 95, 22),
woosh.Token(woosh.OP, '=', 95, 23, 95, 24),
woosh.Token(woosh.NAME, 'path', 95, 25, 95, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 29, 96, 0),
woosh.Token(woosh.NAME, 'from', 96, 0, 96, 4),
woosh.Token(woosh.NAME, 'os', 96, 5, 96, 7),
woosh.Token(woosh.OP, '.', 96, 7, 96, 8),
woosh.Token(woosh.NAME, 'path', 96, 8, 96, 12),
woosh.Token(woosh.NAME, 'import', 96, 13, 96, 19),
woosh.Token(woosh.OP, '(', 96, 20, 96, 21),
woosh.Token(woosh.NAME, 'curdir', 96, 21, 96, 27),
woosh.Token(woosh.OP, ',', 96, 27, 96, 28),
woosh.Token(woosh.NAME, 'pardir', 96, 29, 96, 35),
woosh.Token(woosh.OP, ',', 96, 35, 96, 36),
woosh.Token(woosh.NAME, 'sep', 96, 37, 96, 40),
woosh.Token(woosh.OP, ',', 96, 40, 96, 41),
woosh.Token(woosh.NAME, 'pathsep', 96, 42, 96, 49),
woosh.Token(woosh.OP, ',', 96, 49, 96, 50),
woosh.Token(woosh.NAME, 'defpath', 96, 51, 96, 58),
woosh.Token(woosh.OP, ',', 96, 58, 96, 59),
woosh.Token(woosh.NAME, 'extsep', 96, 60, 96, 66),
woosh.Token(woosh.OP, ',', 96, 66, 96, 67),
woosh.Token(woosh.NAME, 'altsep', 96, 68, 96, 74),
woosh.Token(woosh.OP, ',', 96, 74, 96, 75),
woosh.Token(woosh.NAME, 'devnull', 97, 4, 97, 11),
woosh.Token(woosh.OP, ')', 97, 11, 97, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 12, 98, 0),
woosh.Token(woosh.NAME, 'del', 99, 0, 99, 3),
woosh.Token(woosh.NAME, '_names', 99, 4, 99, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 10, 100, 0),
woosh.Token(woosh.NAME, 'if', 102, 0, 102, 2),
woosh.Token(woosh.NAME, '_exists', 102, 3, 102, 10),
woosh.Token(woosh.OP, '(', 102, 10, 102, 11),
woosh.Token(woosh.STRING, '"_have_functions"', 102, 11, 102, 28),
woosh.Token(woosh.OP, ')', 102, 28, 102, 29),
woosh.Token(woosh.OP, ':', 102, 29, 102, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 30, 103, 0),
woosh.Token(woosh.INDENT, '    ', 103, 0, 103, 4),
woosh.Token(woosh.NAME, '_globals', 103, 4, 103, 12),
woosh.Token(woosh.OP, '=', 103, 13, 103, 14),
woosh.Token(woosh.NAME, 'globals', 103, 15, 103, 22),
woosh.Token(woosh.OP, '(', 103, 22, 103, 23),
woosh.Token(woosh.OP, ')', 103, 23, 103, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 103, 24, 104, 0),
woosh.Token(woosh.NAME, 'def', 104, 4, 104, 7),
woosh.Token(woosh.NAME, '_add', 104, 8, 104, 12),
woosh.Token(woosh.OP, '(', 104, 12, 104, 13),
woosh.Token(woosh.NAME, 'str', 104, 13, 104, 16),
woosh.Token(woosh.OP, ',', 104, 16, 104, 17),
woosh.Token(woosh.NAME, 'fn', 104, 18, 104, 20),
woosh.Token(woosh.OP, ')', 104, 20, 104, 21),
woosh.Token(woosh.OP, ':', 104, 21, 104, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 22, 105, 0),
woosh.Token(woosh.INDENT, '        ', 105, 0, 105, 8),
woosh.Token(woosh.NAME, 'if', 105, 8, 105, 10),
woosh.Token(woosh.OP, '(', 105, 11, 105, 12),
woosh.Token(woosh.NAME, 'fn', 105, 12, 105, 14),
woosh.Token(woosh.NAME, 'in', 105, 15, 105, 17),
woosh.Token(woosh.NAME, '_globals', 105, 18, 105, 26),
woosh.Token(woosh.OP, ')', 105, 26, 105, 27),
woosh.Token(woosh.NAME, 'and', 105, 28, 105, 31),
woosh.Token(woosh.OP, '(', 105, 32, 105, 33),
woosh.Token(woosh.NAME, 'str', 105, 33, 105, 36),
woosh.Token(woosh.NAME, 'in', 105, 37, 105, 39),
woosh.Token(woosh.NAME, '_have_functions', 105, 40, 105, 55),
woosh.Token(woosh.OP, ')', 105, 55, 105, 56),
woosh.Token(woosh.OP, ':', 105, 56, 105, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 57, 106, 0),
woosh.Token(woosh.INDENT, '            ', 106, 0, 106, 12),
woosh.Token(woosh.NAME, '_set', 106, 12, 106, 16),
woosh.Token(woosh.OP, '.', 106, 16, 106, 17),
woosh.Token(woosh.NAME, 'add', 106, 17, 106, 20),
woosh.Token(woosh.OP, '(', 106, 20, 106, 21),
woosh.Token(woosh.NAME, '_globals', 106, 21, 106, 29),
woosh.Token(woosh.OP, '[', 106, 29, 106, 30),
woosh.Token(woosh.NAME, 'fn', 106, 30, 106, 32),
woosh.Token(woosh.OP, ']', 106, 32, 106, 33),
woosh.Token(woosh.OP, ')', 106, 33, 106, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 34, 107, 0),
woosh.Token(woosh.DEDENT, '    ', 108, 0, 108, 4),
woosh.Token(woosh.DEDENT, '', 108, 4, 108, 4),
woosh.Token(woosh.NAME, '_set', 108, 4, 108, 8),
woosh.Token(woosh.OP, '=', 108, 9, 108, 10),
woosh.Token(woosh.NAME, 'set', 108, 11, 108, 14),
woosh.Token(woosh.OP, '(', 108, 14, 108, 15),
woosh.Token(woosh.OP, ')', 108, 15, 108, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 16, 109, 0),
woosh.Token(woosh.NAME, '_add', 109, 4, 109, 8),
woosh.Token(woosh.OP, '(', 109, 8, 109, 9),
woosh.Token(woosh.STRING, '"HAVE_FACCESSAT"', 109, 9, 109, 25),
woosh.Token(woosh.OP, ',', 109, 25, 109, 26),
woosh.Token(woosh.STRING, '"access"', 109, 28, 109, 36),
woosh.Token(woosh.OP, ')', 109, 36, 109, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 37, 110, 0),
woosh.Token(woosh.NAME, '_add', 110, 4, 110, 8),
woosh.Token(woosh.OP, '(', 110, 8, 110, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHMODAT"', 110, 9, 110, 24),
woosh.Token(woosh.OP, ',', 110, 24, 110, 25),
woosh.Token(woosh.STRING, '"chmod"', 110, 28, 110, 35),
woosh.Token(woosh.OP, ')', 110, 35, 110, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 36, 111, 0),
woosh.Token(woosh.NAME, '_add', 111, 4, 111, 8),
woosh.Token(woosh.OP, '(', 111, 8, 111, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHOWNAT"', 111, 9, 111, 24),
woosh.Token(woosh.OP, ',', 111, 24, 111, 25),
woosh.Token(woosh.STRING, '"chown"', 111, 28, 111, 35),
woosh.Token(woosh.OP, ')', 111, 35, 111, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 36, 112, 0),
woosh.Token(woosh.NAME, '_add', 112, 4, 112, 8),
woosh.Token(woosh.OP, '(', 112, 8, 112, 9),
woosh.Token(woosh.STRING, '"HAVE_FSTATAT"', 112, 9, 112, 23),
woosh.Token(woosh.OP, ',', 112, 23, 112, 24),
woosh.Token(woosh.STRING, '"stat"', 112, 28, 112, 34),
woosh.Token(woosh.OP, ')', 112, 34, 112, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 35, 113, 0),
woosh.Token(woosh.NAME, '_add', 113, 4, 113, 8),
woosh.Token(woosh.OP, '(', 113, 8, 113, 9),
woosh.Token(woosh.STRING, '"HAVE_FUTIMESAT"', 113, 9, 113, 25),
woosh.Token(woosh.OP, ',', 113, 25, 113, 26),
woosh.Token(woosh.STRING, '"utime"', 113, 28, 113, 35),
woosh.Token(woosh.OP, ')', 113, 35, 113, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 36, 114, 0),
woosh.Token(woosh.NAME, '_add', 114, 4, 114, 8),
woosh.Token(woosh.OP, '(', 114, 8, 114, 9),
woosh.Token(woosh.STRING, '"HAVE_LINKAT"', 114, 9, 114, 22),
woosh.Token(woosh.OP, ',', 114, 22, 114, 23),
woosh.Token(woosh.STRING, '"link"', 114, 28, 114, 34),
woosh.Token(woosh.OP, ')', 114, 34, 114, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 35, 115, 0),
woosh.Token(woosh.NAME, '_add', 115, 4, 115, 8),
woosh.Token(woosh.OP, '(', 115, 8, 115, 9),
woosh.Token(woosh.STRING, '"HAVE_MKDIRAT"', 115, 9, 115, 23),
woosh.Token(woosh.OP, ',', 115, 23, 115, 24),
woosh.Token(woosh.STRING, '"mkdir"', 115, 28, 115, 35),
woosh.Token(woosh.OP, ')', 115, 35, 115, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 36, 116, 0),
woosh.Token(woosh.NAME, '_add', 116, 4, 116, 8),
woosh.Token(woosh.OP, '(', 116, 8, 116, 9),
woosh.Token(woosh.STRING, '"HAVE_MKFIFOAT"', 116, 9, 116, 24),
woosh.Token(woosh.OP, ',', 116, 24, 116, 25),
woosh.Token(woosh.STRING, '"mkfifo"', 116, 28, 116, 36),
woosh.Token(woosh.OP, ')', 116, 36, 116, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 37, 117, 0),
woosh.Token(woosh.NAME, '_add', 117, 4, 117, 8),
woosh.Token(woosh.OP, '(', 117, 8, 117, 9),
woosh.Token(woosh.STRING, '"HAVE_MKNODAT"', 117, 9, 117, 23),
woosh.Token(woosh.OP, ',', 117, 23, 117, 24),
woosh.Token(woosh.STRING, '"mknod"', 117, 28, 117, 35),
woosh.Token(woosh.OP, ')', 117, 35, 117, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 36, 118, 0),
woosh.Token(woosh.NAME, '_add', 118, 4, 118, 8),
woosh.Token(woosh.OP, '(', 118, 8, 118, 9),
woosh.Token(woosh.STRING, '"HAVE_OPENAT"', 118, 9, 118, 22),
woosh.Token(woosh.OP, ',', 118, 22, 118, 23),
woosh.Token(woosh.STRING, '"open"', 118, 28, 118, 34),
woosh.Token(woosh.OP, ')', 118, 34, 118, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 35, 119, 0),
woosh.Token(woosh.NAME, '_add', 119, 4, 119, 8),
woosh.Token(woosh.OP, '(', 119, 8, 119, 9),
woosh.Token(woosh.STRING, '"HAVE_READLINKAT"', 119, 9, 119, 26),
woosh.Token(woosh.OP, ',', 119, 26, 119, 27),
woosh.Token(woosh.STRING, '"readlink"', 119, 28, 119, 38),
woosh.Token(woosh.OP, ')', 119, 38, 119, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 39, 120, 0),
woosh.Token(woosh.NAME, '_add', 120, 4, 120, 8),
woosh.Token(woosh.OP, '(', 120, 8, 120, 9),
woosh.Token(woosh.STRING, '"HAVE_RENAMEAT"', 120, 9, 120, 24),
woosh.Token(woosh.OP, ',', 120, 24, 120, 25),
woosh.Token(woosh.STRING, '"rename"', 120, 28, 120, 36),
woosh.Token(woosh.OP, ')', 120, 36, 120, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 37, 121, 0),
woosh.Token(woosh.NAME, '_add', 121, 4, 121, 8),
woosh.Token(woosh.OP, '(', 121, 8, 121, 9),
woosh.Token(woosh.STRING, '"HAVE_SYMLINKAT"', 121, 9, 121, 25),
woosh.Token(woosh.OP, ',', 121, 25, 121, 26),
woosh.Token(woosh.STRING, '"symlink"', 121, 28, 121, 37),
woosh.Token(woosh.OP, ')', 121, 37, 121, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 38, 122, 0),
woosh.Token(woosh.NAME, '_add', 122, 4, 122, 8),
woosh.Token(woosh.OP, '(', 122, 8, 122, 9),
woosh.Token(woosh.STRING, '"HAVE_UNLINKAT"', 122, 9, 122, 24),
woosh.Token(woosh.OP, ',', 122, 24, 122, 25),
woosh.Token(woosh.STRING, '"unlink"', 122, 28, 122, 36),
woosh.Token(woosh.OP, ')', 122, 36, 122, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 37, 123, 0),
woosh.Token(woosh.NAME, '_add', 123, 4, 123, 8),
woosh.Token(woosh.OP, '(', 123, 8, 123, 9),
woosh.Token(woosh.STRING, '"HAVE_UNLINKAT"', 123, 9, 123, 24),
woosh.Token(woosh.OP, ',', 123, 24, 123, 25),
woosh.Token(woosh.STRING, '"rmdir"', 123, 28, 123, 35),
woosh.Token(woosh.OP, ')', 123, 35, 123, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 36, 124, 0),
woosh.Token(woosh.NAME, '_add', 124, 4, 124, 8),
woosh.Token(woosh.OP, '(', 124, 8, 124, 9),
woosh.Token(woosh.STRING, '"HAVE_UTIMENSAT"', 124, 9, 124, 25),
woosh.Token(woosh.OP, ',', 124, 25, 124, 26),
woosh.Token(woosh.STRING, '"utime"', 124, 28, 124, 35),
woosh.Token(woosh.OP, ')', 124, 35, 124, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 36, 125, 0),
woosh.Token(woosh.NAME, 'supports_dir_fd', 125, 4, 125, 19),
woosh.Token(woosh.OP, '=', 125, 20, 125, 21),
woosh.Token(woosh.NAME, '_set', 125, 22, 125, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 26, 126, 0),
woosh.Token(woosh.NAME, '_set', 127, 4, 127, 8),
woosh.Token(woosh.OP, '=', 127, 9, 127, 10),
woosh.Token(woosh.NAME, 'set', 127, 11, 127, 14),
woosh.Token(woosh.OP, '(', 127, 14, 127, 15),
woosh.Token(woosh.OP, ')', 127, 15, 127, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 16, 128, 0),
woosh.Token(woosh.NAME, '_add', 128, 4, 128, 8),
woosh.Token(woosh.OP, '(', 128, 8, 128, 9),
woosh.Token(woosh.STRING, '"HAVE_FACCESSAT"', 128, 9, 128, 25),
woosh.Token(woosh.OP, ',', 128, 25, 128, 26),
woosh.Token(woosh.STRING, '"access"', 128, 28, 128, 36),
woosh.Token(woosh.OP, ')', 128, 36, 128, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 37, 129, 0),
woosh.Token(woosh.NAME, 'supports_effective_ids', 129, 4, 129, 26),
woosh.Token(woosh.OP, '=', 129, 27, 129, 28),
woosh.Token(woosh.NAME, '_set', 129, 29, 129, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 33, 130, 0),
woosh.Token(woosh.NAME, '_set', 131, 4, 131, 8),
woosh.Token(woosh.OP, '=', 131, 9, 131, 10),
woosh.Token(woosh.NAME, 'set', 131, 11, 131, 14),
woosh.Token(woosh.OP, '(', 131, 14, 131, 15),
woosh.Token(woosh.OP, ')', 131, 15, 131, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 16, 132, 0),
woosh.Token(woosh.NAME, '_add', 132, 4, 132, 8),
woosh.Token(woosh.OP, '(', 132, 8, 132, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHDIR"', 132, 9, 132, 22),
woosh.Token(woosh.OP, ',', 132, 22, 132, 23),
woosh.Token(woosh.STRING, '"chdir"', 132, 28, 132, 35),
woosh.Token(woosh.OP, ')', 132, 35, 132, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 36, 133, 0),
woosh.Token(woosh.NAME, '_add', 133, 4, 133, 8),
woosh.Token(woosh.OP, '(', 133, 8, 133, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHMOD"', 133, 9, 133, 22),
woosh.Token(woosh.OP, ',', 133, 22, 133, 23),
woosh.Token(woosh.STRING, '"chmod"', 133, 28, 133, 35),
woosh.Token(woosh.OP, ')', 133, 35, 133, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 36, 134, 0),
woosh.Token(woosh.NAME, '_add', 134, 4, 134, 8),
woosh.Token(woosh.OP, '(', 134, 8, 134, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHOWN"', 134, 9, 134, 22),
woosh.Token(woosh.OP, ',', 134, 22, 134, 23),
woosh.Token(woosh.STRING, '"chown"', 134, 28, 134, 35),
woosh.Token(woosh.OP, ')', 134, 35, 134, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 36, 135, 0),
woosh.Token(woosh.NAME, '_add', 135, 4, 135, 8),
woosh.Token(woosh.OP, '(', 135, 8, 135, 9),
woosh.Token(woosh.STRING, '"HAVE_FDOPENDIR"', 135, 9, 135, 25),
woosh.Token(woosh.OP, ',', 135, 25, 135, 26),
woosh.Token(woosh.STRING, '"listdir"', 135, 28, 135, 37),
woosh.Token(woosh.OP, ')', 135, 37, 135, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 38, 136, 0),
woosh.Token(woosh.NAME, '_add', 136, 4, 136, 8),
woosh.Token(woosh.OP, '(', 136, 8, 136, 9),
woosh.Token(woosh.STRING, '"HAVE_FDOPENDIR"', 136, 9, 136, 25),
woosh.Token(woosh.OP, ',', 136, 25, 136, 26),
woosh.Token(woosh.STRING, '"scandir"', 136, 28, 136, 37),
woosh.Token(woosh.OP, ')', 136, 37, 136, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 38, 137, 0),
woosh.Token(woosh.NAME, '_add', 137, 4, 137, 8),
woosh.Token(woosh.OP, '(', 137, 8, 137, 9),
woosh.Token(woosh.STRING, '"HAVE_FEXECVE"', 137, 9, 137, 23),
woosh.Token(woosh.OP, ',', 137, 23, 137, 24),
woosh.Token(woosh.STRING, '"execve"', 137, 28, 137, 36),
woosh.Token(woosh.OP, ')', 137, 36, 137, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 37, 138, 0),
woosh.Token(woosh.NAME, '_set', 138, 4, 138, 8),
woosh.Token(woosh.OP, '.', 138, 8, 138, 9),
woosh.Token(woosh.NAME, 'add', 138, 9, 138, 12),
woosh.Token(woosh.OP, '(', 138, 12, 138, 13),
woosh.Token(woosh.NAME, 'stat', 138, 13, 138, 17),
woosh.Token(woosh.OP, ')', 138, 17, 138, 18),
woosh.Token(woosh.COMMENT, '# fstat always works', 138, 19, 138, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 39, 139, 0),
woosh.Token(woosh.NAME, '_add', 139, 4, 139, 8),
woosh.Token(woosh.OP, '(', 139, 8, 139, 9),
woosh.Token(woosh.STRING, '"HAVE_FTRUNCATE"', 139, 9, 139, 25),
woosh.Token(woosh.OP, ',', 139, 25, 139, 26),
woosh.Token(woosh.STRING, '"truncate"', 139, 28, 139, 38),
woosh.Token(woosh.OP, ')', 139, 38, 139, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 39, 140, 0),
woosh.Token(woosh.NAME, '_add', 140, 4, 140, 8),
woosh.Token(woosh.OP, '(', 140, 8, 140, 9),
woosh.Token(woosh.STRING, '"HAVE_FUTIMENS"', 140, 9, 140, 24),
woosh.Token(woosh.OP, ',', 140, 24, 140, 25),
woosh.Token(woosh.STRING, '"utime"', 140, 28, 140, 35),
woosh.Token(woosh.OP, ')', 140, 35, 140, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 36, 141, 0),
woosh.Token(woosh.NAME, '_add', 141, 4, 141, 8),
woosh.Token(woosh.OP, '(', 141, 8, 141, 9),
woosh.Token(woosh.STRING, '"HAVE_FUTIMES"', 141, 9, 141, 23),
woosh.Token(woosh.OP, ',', 141, 23, 141, 24),
woosh.Token(woosh.STRING, '"utime"', 141, 28, 141, 35),
woosh.Token(woosh.OP, ')', 141, 35, 141, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 36, 142, 0),
woosh.Token(woosh.NAME, '_add', 142, 4, 142, 8),
woosh.Token(woosh.OP, '(', 142, 8, 142, 9),
woosh.Token(woosh.STRING, '"HAVE_FPATHCONF"', 142, 9, 142, 25),
woosh.Token(woosh.OP, ',', 142, 25, 142, 26),
woosh.Token(woosh.STRING, '"pathconf"', 142, 28, 142, 38),
woosh.Token(woosh.OP, ')', 142, 38, 142, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 39, 143, 0),
woosh.Token(woosh.NAME, 'if', 143, 4, 143, 6),
woosh.Token(woosh.NAME, '_exists', 143, 7, 143, 14),
woosh.Token(woosh.OP, '(', 143, 14, 143, 15),
woosh.Token(woosh.STRING, '"statvfs"', 143, 15, 143, 24),
woosh.Token(woosh.OP, ')', 143, 24, 143, 25),
woosh.Token(woosh.NAME, 'and', 143, 26, 143, 29),
woosh.Token(woosh.NAME, '_exists', 143, 30, 143, 37),
woosh.Token(woosh.OP, '(', 143, 37, 143, 38),
woosh.Token(woosh.STRING, '"fstatvfs"', 143, 38, 143, 48),
woosh.Token(woosh.OP, ')', 143, 48, 143, 49),
woosh.Token(woosh.OP, ':', 143, 49, 143, 50),
woosh.Token(woosh.COMMENT, '# mac os x10.3', 143, 51, 143, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 65, 144, 0),
woosh.Token(woosh.INDENT, '        ', 144, 0, 144, 8),
woosh.Token(woosh.NAME, '_add', 144, 8, 144, 12),
woosh.Token(woosh.OP, '(', 144, 12, 144, 13),
woosh.Token(woosh.STRING, '"HAVE_FSTATVFS"', 144, 13, 144, 28),
woosh.Token(woosh.OP, ',', 144, 28, 144, 29),
woosh.Token(woosh.STRING, '"statvfs"', 144, 30, 144, 39),
woosh.Token(woosh.OP, ')', 144, 39, 144, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 40, 145, 0),
woosh.Token(woosh.DEDENT, '    ', 145, 0, 145, 4),
woosh.Token(woosh.NAME, 'supports_fd', 145, 4, 145, 15),
woosh.Token(woosh.OP, '=', 145, 16, 145, 17),
woosh.Token(woosh.NAME, '_set', 145, 18, 145, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 22, 146, 0),
woosh.Token(woosh.NAME, '_set', 147, 4, 147, 8),
woosh.Token(woosh.OP, '=', 147, 9, 147, 10),
woosh.Token(woosh.NAME, 'set', 147, 11, 147, 14),
woosh.Token(woosh.OP, '(', 147, 14, 147, 15),
woosh.Token(woosh.OP, ')', 147, 15, 147, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 16, 148, 0),
woosh.Token(woosh.NAME, '_add', 148, 4, 148, 8),
woosh.Token(woosh.OP, '(', 148, 8, 148, 9),
woosh.Token(woosh.STRING, '"HAVE_FACCESSAT"', 148, 9, 148, 25),
woosh.Token(woosh.OP, ',', 148, 25, 148, 26),
woosh.Token(woosh.STRING, '"access"', 148, 28, 148, 36),
woosh.Token(woosh.OP, ')', 148, 36, 148, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 37, 149, 0),
woosh.Token(woosh.COMMENT, "# Some platforms don't support lchmod().  Often the function exists", 149, 4, 149, 71),
woosh.Token(woosh.COMMENT, '# anyway, as a stub that always returns ENOSUP or perhaps EOPNOTSUPP.', 150, 4, 150, 73),
woosh.Token(woosh.COMMENT, "# (No, I don't know why that's a good design.)  ./configure will detect", 151, 4, 151, 75),
woosh.Token(woosh.COMMENT, "# this and reject it--so HAVE_LCHMOD still won't be defined on such", 152, 4, 152, 71),
woosh.Token(woosh.COMMENT, '# platforms.  This is Very Helpful.', 153, 4, 153, 39),
woosh.Token(woosh.COMMENT, '#', 154, 4, 154, 5),
woosh.Token(woosh.COMMENT, '# However, sometimes platforms without a working lchmod() *do* have', 155, 4, 155, 71),
woosh.Token(woosh.COMMENT, '# fchmodat().  (Examples: Linux kernel 3.2 with glibc 2.15,', 156, 4, 156, 63),
woosh.Token(woosh.COMMENT, '# OpenIndiana 3.x.)  And fchmodat() has a flag that theoretically makes', 157, 4, 157, 75),
woosh.Token(woosh.COMMENT, '# it behave like lchmod().  So in theory it would be a suitable', 158, 4, 158, 67),
woosh.Token(woosh.COMMENT, "# replacement for lchmod().  But when lchmod() doesn't work, fchmodat()'s", 159, 4, 159, 77),
woosh.Token(woosh.COMMENT, "# flag doesn't work *either*.  Sadly ./configure isn't sophisticated", 160, 4, 160, 72),
woosh.Token(woosh.COMMENT, '# enough to detect this condition--it only determines whether or not', 161, 4, 161, 72),
woosh.Token(woosh.COMMENT, '# fchmodat() minimally works.', 162, 4, 162, 33),
woosh.Token(woosh.COMMENT, '#', 163, 4, 163, 5),
woosh.Token(woosh.COMMENT, '# Therefore we simply ignore fchmodat() when deciding whether or not', 164, 4, 164, 72),
woosh.Token(woosh.COMMENT, '# os.chmod supports follow_symlinks.  Just checking lchmod() is', 165, 4, 165, 67),
woosh.Token(woosh.COMMENT, '# sufficient.  After all--if you have a working fchmodat(), your', 166, 4, 166, 68),
woosh.Token(woosh.COMMENT, '# lchmod() almost certainly works too.', 167, 4, 167, 42),
woosh.Token(woosh.COMMENT, '#', 168, 4, 168, 5),
woosh.Token(woosh.COMMENT, '# _add("HAVE_FCHMODAT",   "chmod")', 169, 4, 169, 38),
woosh.Token(woosh.NAME, '_add', 170, 4, 170, 8),
woosh.Token(woosh.OP, '(', 170, 8, 170, 9),
woosh.Token(woosh.STRING, '"HAVE_FCHOWNAT"', 170, 9, 170, 24),
woosh.Token(woosh.OP, ',', 170, 24, 170, 25),
woosh.Token(woosh.STRING, '"chown"', 170, 28, 170, 35),
woosh.Token(woosh.OP, ')', 170, 35, 170, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 36, 171, 0),
woosh.Token(woosh.NAME, '_add', 171, 4, 171, 8),
woosh.Token(woosh.OP, '(', 171, 8, 171, 9),
woosh.Token(woosh.STRING, '"HAVE_FSTATAT"', 171, 9, 171, 23),
woosh.Token(woosh.OP, ',', 171, 23, 171, 24),
woosh.Token(woosh.STRING, '"stat"', 171, 28, 171, 34),
woosh.Token(woosh.OP, ')', 171, 34, 171, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 35, 172, 0),
woosh.Token(woosh.NAME, '_add', 172, 4, 172, 8),
woosh.Token(woosh.OP, '(', 172, 8, 172, 9),
woosh.Token(woosh.STRING, '"HAVE_LCHFLAGS"', 172, 9, 172, 24),
woosh.Token(woosh.OP, ',', 172, 24, 172, 25),
woosh.Token(woosh.STRING, '"chflags"', 172, 28, 172, 37),
woosh.Token(woosh.OP, ')', 172, 37, 172, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 38, 173, 0),
woosh.Token(woosh.NAME, '_add', 173, 4, 173, 8),
woosh.Token(woosh.OP, '(', 173, 8, 173, 9),
woosh.Token(woosh.STRING, '"HAVE_LCHMOD"', 173, 9, 173, 22),
woosh.Token(woosh.OP, ',', 173, 22, 173, 23),
woosh.Token(woosh.STRING, '"chmod"', 173, 28, 173, 35),
woosh.Token(woosh.OP, ')', 173, 35, 173, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 36, 174, 0),
woosh.Token(woosh.NAME, 'if', 174, 4, 174, 6),
woosh.Token(woosh.NAME, '_exists', 174, 7, 174, 14),
woosh.Token(woosh.OP, '(', 174, 14, 174, 15),
woosh.Token(woosh.STRING, '"lchown"', 174, 15, 174, 23),
woosh.Token(woosh.OP, ')', 174, 23, 174, 24),
woosh.Token(woosh.OP, ':', 174, 24, 174, 25),
woosh.Token(woosh.COMMENT, '# mac os x10.3', 174, 26, 174, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 40, 175, 0),
woosh.Token(woosh.INDENT, '        ', 175, 0, 175, 8),
woosh.Token(woosh.NAME, '_add', 175, 8, 175, 12),
woosh.Token(woosh.OP, '(', 175, 12, 175, 13),
woosh.Token(woosh.STRING, '"HAVE_LCHOWN"', 175, 13, 175, 26),
woosh.Token(woosh.OP, ',', 175, 26, 175, 27),
woosh.Token(woosh.STRING, '"chown"', 175, 28, 175, 35),
woosh.Token(woosh.OP, ')', 175, 35, 175, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 36, 176, 0),
woosh.Token(woosh.DEDENT, '    ', 176, 0, 176, 4),
woosh.Token(woosh.NAME, '_add', 176, 4, 176, 8),
woosh.Token(woosh.OP, '(', 176, 8, 176, 9),
woosh.Token(woosh.STRING, '"HAVE_LINKAT"', 176, 9, 176, 22),
woosh.Token(woosh.OP, ',', 176, 22, 176, 23),
woosh.Token(woosh.STRING, '"link"', 176, 28, 176, 34),
woosh.Token(woosh.OP, ')', 176, 34, 176, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 35, 177, 0),
woosh.Token(woosh.NAME, '_add', 177, 4, 177, 8),
woosh.Token(woosh.OP, '(', 177, 8, 177, 9),
woosh.Token(woosh.STRING, '"HAVE_LUTIMES"', 177, 9, 177, 23),
woosh.Token(woosh.OP, ',', 177, 23, 177, 24),
woosh.Token(woosh.STRING, '"utime"', 177, 28, 177, 35),
woosh.Token(woosh.OP, ')', 177, 35, 177, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 36, 178, 0),
woosh.Token(woosh.NAME, '_add', 178, 4, 178, 8),
woosh.Token(woosh.OP, '(', 178, 8, 178, 9),
woosh.Token(woosh.STRING, '"HAVE_LSTAT"', 178, 9, 178, 21),
woosh.Token(woosh.OP, ',', 178, 21, 178, 22),
woosh.Token(woosh.STRING, '"stat"', 178, 28, 178, 34),
woosh.Token(woosh.OP, ')', 178, 34, 178, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 35, 179, 0),
woosh.Token(woosh.NAME, '_add', 179, 4, 179, 8),
woosh.Token(woosh.OP, '(', 179, 8, 179, 9),
woosh.Token(woosh.STRING, '"HAVE_FSTATAT"', 179, 9, 179, 23),
woosh.Token(woosh.OP, ',', 179, 23, 179, 24),
woosh.Token(woosh.STRING, '"stat"', 179, 28, 179, 34),
woosh.Token(woosh.OP, ')', 179, 34, 179, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 35, 180, 0),
woosh.Token(woosh.NAME, '_add', 180, 4, 180, 8),
woosh.Token(woosh.OP, '(', 180, 8, 180, 9),
woosh.Token(woosh.STRING, '"HAVE_UTIMENSAT"', 180, 9, 180, 25),
woosh.Token(woosh.OP, ',', 180, 25, 180, 26),
woosh.Token(woosh.STRING, '"utime"', 180, 28, 180, 35),
woosh.Token(woosh.OP, ')', 180, 35, 180, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 36, 181, 0),
woosh.Token(woosh.NAME, '_add', 181, 4, 181, 8),
woosh.Token(woosh.OP, '(', 181, 8, 181, 9),
woosh.Token(woosh.STRING, '"MS_WINDOWS"', 181, 9, 181, 21),
woosh.Token(woosh.OP, ',', 181, 21, 181, 22),
woosh.Token(woosh.STRING, '"stat"', 181, 28, 181, 34),
woosh.Token(woosh.OP, ')', 181, 34, 181, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 35, 182, 0),
woosh.Token(woosh.NAME, 'supports_follow_symlinks', 182, 4, 182, 28),
woosh.Token(woosh.OP, '=', 182, 29, 182, 30),
woosh.Token(woosh.NAME, '_set', 182, 31, 182, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 35, 183, 0),
woosh.Token(woosh.NAME, 'del', 184, 4, 184, 7),
woosh.Token(woosh.NAME, '_set', 184, 8, 184, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 12, 185, 0),
woosh.Token(woosh.NAME, 'del', 185, 4, 185, 7),
woosh.Token(woosh.NAME, '_have_functions', 185, 8, 185, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 23, 186, 0),
woosh.Token(woosh.NAME, 'del', 186, 4, 186, 7),
woosh.Token(woosh.NAME, '_globals', 186, 8, 186, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 16, 187, 0),
woosh.Token(woosh.NAME, 'del', 187, 4, 187, 7),
woosh.Token(woosh.NAME, '_add', 187, 8, 187, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 12, 188, 0),
woosh.Token(woosh.COMMENT, '# Python uses fixed values for the SEEK_ constants; they are mapped', 190, 0, 190, 67),
woosh.Token(woosh.COMMENT, '# to native constants if necessary in posixmodule.c', 191, 0, 191, 51),
woosh.Token(woosh.COMMENT, '# Other possible SEEK values are directly imported from posixmodule.c', 192, 0, 192, 69),
woosh.Token(woosh.DEDENT, '', 193, 0, 193, 0),
woosh.Token(woosh.NAME, 'SEEK_SET', 193, 0, 193, 8),
woosh.Token(woosh.OP, '=', 193, 9, 193, 10),
woosh.Token(woosh.NUMBER, '0', 193, 11, 193, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 12, 194, 0),
woosh.Token(woosh.NAME, 'SEEK_CUR', 194, 0, 194, 8),
woosh.Token(woosh.OP, '=', 194, 9, 194, 10),
woosh.Token(woosh.NUMBER, '1', 194, 11, 194, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 12, 195, 0),
woosh.Token(woosh.NAME, 'SEEK_END', 195, 0, 195, 8),
woosh.Token(woosh.OP, '=', 195, 9, 195, 10),
woosh.Token(woosh.NUMBER, '2', 195, 11, 195, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 12, 196, 0),
woosh.Token(woosh.COMMENT, '# Super directory utilities.', 197, 0, 197, 28),
woosh.Token(woosh.COMMENT, '# (Inspired by Eric Raymond; the doc strings are mostly his)', 198, 0, 198, 60),
woosh.Token(woosh.NAME, 'def', 200, 0, 200, 3),
woosh.Token(woosh.NAME, 'makedirs', 200, 4, 200, 12),
woosh.Token(woosh.OP, '(', 200, 12, 200, 13),
woosh.Token(woosh.NAME, 'name', 200, 13, 200, 17),
woosh.Token(woosh.OP, ',', 200, 17, 200, 18),
woosh.Token(woosh.NAME, 'mode', 200, 19, 200, 23),
woosh.Token(woosh.OP, '=', 200, 23, 200, 24),
woosh.Token(woosh.NUMBER, '0o777', 200, 24, 200, 29),
woosh.Token(woosh.OP, ',', 200, 29, 200, 30),
woosh.Token(woosh.NAME, 'exist_ok', 200, 31, 200, 39),
woosh.Token(woosh.OP, '=', 200, 39, 200, 40),
woosh.Token(woosh.NAME, 'False', 200, 40, 200, 45),
woosh.Token(woosh.OP, ')', 200, 45, 200, 46),
woosh.Token(woosh.OP, ':', 200, 46, 200, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 47, 201, 0),
woosh.Token(woosh.INDENT, '    ', 201, 0, 201, 4),
woosh.Token(woosh.STRING, '"""makedirs(name [, mode=0o777][, exist_ok=False])\r\n\r\n    Super-mkdir; create a leaf directory and all intermediate ones.  Works like\r\n    mkdir, except that any intermediate path segment (not just the rightmost)\r\n    will be created if it does not exist. If the target directory already\r\n    exists, raise an OSError if exist_ok is False. Otherwise no exception is\r\n    raised.  This is recursive.\r\n\r\n    """', 201, 4, 209, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 7, 210, 0),
woosh.Token(woosh.NAME, 'head', 210, 4, 210, 8),
woosh.Token(woosh.OP, ',', 210, 8, 210, 9),
woosh.Token(woosh.NAME, 'tail', 210, 10, 210, 14),
woosh.Token(woosh.OP, '=', 210, 15, 210, 16),
woosh.Token(woosh.NAME, 'path', 210, 17, 210, 21),
woosh.Token(woosh.OP, '.', 210, 21, 210, 22),
woosh.Token(woosh.NAME, 'split', 210, 22, 210, 27),
woosh.Token(woosh.OP, '(', 210, 27, 210, 28),
woosh.Token(woosh.NAME, 'name', 210, 28, 210, 32),
woosh.Token(woosh.OP, ')', 210, 32, 210, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 33, 211, 0),
woosh.Token(woosh.NAME, 'if', 211, 4, 211, 6),
woosh.Token(woosh.NAME, 'not', 211, 7, 211, 10),
woosh.Token(woosh.NAME, 'tail', 211, 11, 211, 15),
woosh.Token(woosh.OP, ':', 211, 15, 211, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 16, 212, 0),
woosh.Token(woosh.INDENT, '        ', 212, 0, 212, 8),
woosh.Token(woosh.NAME, 'head', 212, 8, 212, 12),
woosh.Token(woosh.OP, ',', 212, 12, 212, 13),
woosh.Token(woosh.NAME, 'tail', 212, 14, 212, 18),
woosh.Token(woosh.OP, '=', 212, 19, 212, 20),
woosh.Token(woosh.NAME, 'path', 212, 21, 212, 25),
woosh.Token(woosh.OP, '.', 212, 25, 212, 26),
woosh.Token(woosh.NAME, 'split', 212, 26, 212, 31),
woosh.Token(woosh.OP, '(', 212, 31, 212, 32),
woosh.Token(woosh.NAME, 'head', 212, 32, 212, 36),
woosh.Token(woosh.OP, ')', 212, 36, 212, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 37, 213, 0),
woosh.Token(woosh.DEDENT, '    ', 213, 0, 213, 4),
woosh.Token(woosh.NAME, 'if', 213, 4, 213, 6),
woosh.Token(woosh.NAME, 'head', 213, 7, 213, 11),
woosh.Token(woosh.NAME, 'and', 213, 12, 213, 15),
woosh.Token(woosh.NAME, 'tail', 213, 16, 213, 20),
woosh.Token(woosh.NAME, 'and', 213, 21, 213, 24),
woosh.Token(woosh.NAME, 'not', 213, 25, 213, 28),
woosh.Token(woosh.NAME, 'path', 213, 29, 213, 33),
woosh.Token(woosh.OP, '.', 213, 33, 213, 34),
woosh.Token(woosh.NAME, 'exists', 213, 34, 213, 40),
woosh.Token(woosh.OP, '(', 213, 40, 213, 41),
woosh.Token(woosh.NAME, 'head', 213, 41, 213, 45),
woosh.Token(woosh.OP, ')', 213, 45, 213, 46),
woosh.Token(woosh.OP, ':', 213, 46, 213, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 47, 214, 0),
woosh.Token(woosh.INDENT, '        ', 214, 0, 214, 8),
woosh.Token(woosh.NAME, 'try', 214, 8, 214, 11),
woosh.Token(woosh.OP, ':', 214, 11, 214, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 12, 215, 0),
woosh.Token(woosh.INDENT, '            ', 215, 0, 215, 12),
woosh.Token(woosh.NAME, 'makedirs', 215, 12, 215, 20),
woosh.Token(woosh.OP, '(', 215, 20, 215, 21),
woosh.Token(woosh.NAME, 'head', 215, 21, 215, 25),
woosh.Token(woosh.OP, ',', 215, 25, 215, 26),
woosh.Token(woosh.NAME, 'exist_ok', 215, 27, 215, 35),
woosh.Token(woosh.OP, '=', 215, 35, 215, 36),
woosh.Token(woosh.NAME, 'exist_ok', 215, 36, 215, 44),
woosh.Token(woosh.OP, ')', 215, 44, 215, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 45, 216, 0),
woosh.Token(woosh.DEDENT, '        ', 216, 0, 216, 8),
woosh.Token(woosh.NAME, 'except', 216, 8, 216, 14),
woosh.Token(woosh.NAME, 'FileExistsError', 216, 15, 216, 30),
woosh.Token(woosh.OP, ':', 216, 30, 216, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 31, 217, 0),
woosh.Token(woosh.COMMENT, '# Defeats race condition when another thread created the path', 217, 12, 217, 73),
woosh.Token(woosh.INDENT, '            ', 218, 0, 218, 12),
woosh.Token(woosh.NAME, 'pass', 218, 12, 218, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 16, 219, 0),
woosh.Token(woosh.DEDENT, '        ', 219, 0, 219, 8),
woosh.Token(woosh.NAME, 'cdir', 219, 8, 219, 12),
woosh.Token(woosh.OP, '=', 219, 13, 219, 14),
woosh.Token(woosh.NAME, 'curdir', 219, 15, 219, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 21, 220, 0),
woosh.Token(woosh.NAME, 'if', 220, 8, 220, 10),
woosh.Token(woosh.NAME, 'isinstance', 220, 11, 220, 21),
woosh.Token(woosh.OP, '(', 220, 21, 220, 22),
woosh.Token(woosh.NAME, 'tail', 220, 22, 220, 26),
woosh.Token(woosh.OP, ',', 220, 26, 220, 27),
woosh.Token(woosh.NAME, 'bytes', 220, 28, 220, 33),
woosh.Token(woosh.OP, ')', 220, 33, 220, 34),
woosh.Token(woosh.OP, ':', 220, 34, 220, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 35, 221, 0),
woosh.Token(woosh.INDENT, '            ', 221, 0, 221, 12),
woosh.Token(woosh.NAME, 'cdir', 221, 12, 221, 16),
woosh.Token(woosh.OP, '=', 221, 17, 221, 18),
woosh.Token(woosh.NAME, 'bytes', 221, 19, 221, 24),
woosh.Token(woosh.OP, '(', 221, 24, 221, 25),
woosh.Token(woosh.NAME, 'curdir', 221, 25, 221, 31),
woosh.Token(woosh.OP, ',', 221, 31, 221, 32),
woosh.Token(woosh.STRING, "'ASCII'", 221, 33, 221, 40),
woosh.Token(woosh.OP, ')', 221, 40, 221, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 41, 222, 0),
woosh.Token(woosh.DEDENT, '        ', 222, 0, 222, 8),
woosh.Token(woosh.NAME, 'if', 222, 8, 222, 10),
woosh.Token(woosh.NAME, 'tail', 222, 11, 222, 15),
woosh.Token(woosh.OP, '==', 222, 16, 222, 18),
woosh.Token(woosh.NAME, 'cdir', 222, 19, 222, 23),
woosh.Token(woosh.OP, ':', 222, 23, 222, 24),
woosh.Token(woosh.COMMENT, '# xxx/newdir/. exists if xxx/newdir exists', 222, 35, 222, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 77, 223, 0),
woosh.Token(woosh.INDENT, '            ', 223, 0, 223, 12),
woosh.Token(woosh.NAME, 'return', 223, 12, 223, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 18, 224, 0),
woosh.Token(woosh.DEDENT, '    ', 224, 0, 224, 4),
woosh.Token(woosh.DEDENT, '', 224, 4, 224, 4),
woosh.Token(woosh.NAME, 'try', 224, 4, 224, 7),
woosh.Token(woosh.OP, ':', 224, 7, 224, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 8, 225, 0),
woosh.Token(woosh.INDENT, '        ', 225, 0, 225, 8),
woosh.Token(woosh.NAME, 'mkdir', 225, 8, 225, 13),
woosh.Token(woosh.OP, '(', 225, 13, 225, 14),
woosh.Token(woosh.NAME, 'name', 225, 14, 225, 18),
woosh.Token(woosh.OP, ',', 225, 18, 225, 19),
woosh.Token(woosh.NAME, 'mode', 225, 20, 225, 24),
woosh.Token(woosh.OP, ')', 225, 24, 225, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 25, 226, 0),
woosh.Token(woosh.DEDENT, '    ', 226, 0, 226, 4),
woosh.Token(woosh.NAME, 'except', 226, 4, 226, 10),
woosh.Token(woosh.NAME, 'OSError', 226, 11, 226, 18),
woosh.Token(woosh.OP, ':', 226, 18, 226, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 19, 227, 0),
woosh.Token(woosh.COMMENT, '# Cannot rely on checking for EEXIST, since the operating system', 227, 8, 227, 72),
woosh.Token(woosh.COMMENT, '# could give priority to other errors like EACCES or EROFS', 228, 8, 228, 66),
woosh.Token(woosh.INDENT, '        ', 229, 0, 229, 8),
woosh.Token(woosh.NAME, 'if', 229, 8, 229, 10),
woosh.Token(woosh.NAME, 'not', 229, 11, 229, 14),
woosh.Token(woosh.NAME, 'exist_ok', 229, 15, 229, 23),
woosh.Token(woosh.NAME, 'or', 229, 24, 229, 26),
woosh.Token(woosh.NAME, 'not', 229, 27, 229, 30),
woosh.Token(woosh.NAME, 'path', 229, 31, 229, 35),
woosh.Token(woosh.OP, '.', 229, 35, 229, 36),
woosh.Token(woosh.NAME, 'isdir', 229, 36, 229, 41),
woosh.Token(woosh.OP, '(', 229, 41, 229, 42),
woosh.Token(woosh.NAME, 'name', 229, 42, 229, 46),
woosh.Token(woosh.OP, ')', 229, 46, 229, 47),
woosh.Token(woosh.OP, ':', 229, 47, 229, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 48, 230, 0),
woosh.Token(woosh.INDENT, '            ', 230, 0, 230, 12),
woosh.Token(woosh.NAME, 'raise', 230, 12, 230, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 17, 231, 0),
woosh.Token(woosh.DEDENT, '', 232, 0, 232, 0),
woosh.Token(woosh.DEDENT, '', 232, 0, 232, 0),
woosh.Token(woosh.DEDENT, '', 232, 0, 232, 0),
woosh.Token(woosh.NAME, 'def', 232, 0, 232, 3),
woosh.Token(woosh.NAME, 'removedirs', 232, 4, 232, 14),
woosh.Token(woosh.OP, '(', 232, 14, 232, 15),
woosh.Token(woosh.NAME, 'name', 232, 15, 232, 19),
woosh.Token(woosh.OP, ')', 232, 19, 232, 20),
woosh.Token(woosh.OP, ':', 232, 20, 232, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 21, 233, 0),
woosh.Token(woosh.INDENT, '    ', 233, 0, 233, 4),
woosh.Token(woosh.STRING, '"""removedirs(name)\r\n\r\n    Super-rmdir; remove a leaf directory and all empty intermediate\r\n    ones.  Works like rmdir except that, if the leaf directory is\r\n    successfully removed, directories corresponding to rightmost path\r\n    segments will be pruned away until either the whole path is\r\n    consumed or an error occurs.  Errors during this latter phase are\r\n    ignored -- they generally mean that a directory was not empty.\r\n\r\n    """', 233, 4, 242, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 7, 243, 0),
woosh.Token(woosh.NAME, 'rmdir', 243, 4, 243, 9),
woosh.Token(woosh.OP, '(', 243, 9, 243, 10),
woosh.Token(woosh.NAME, 'name', 243, 10, 243, 14),
woosh.Token(woosh.OP, ')', 243, 14, 243, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 15, 244, 0),
woosh.Token(woosh.NAME, 'head', 244, 4, 244, 8),
woosh.Token(woosh.OP, ',', 244, 8, 244, 9),
woosh.Token(woosh.NAME, 'tail', 244, 10, 244, 14),
woosh.Token(woosh.OP, '=', 244, 15, 244, 16),
woosh.Token(woosh.NAME, 'path', 244, 17, 244, 21),
woosh.Token(woosh.OP, '.', 244, 21, 244, 22),
woosh.Token(woosh.NAME, 'split', 244, 22, 244, 27),
woosh.Token(woosh.OP, '(', 244, 27, 244, 28),
woosh.Token(woosh.NAME, 'name', 244, 28, 244, 32),
woosh.Token(woosh.OP, ')', 244, 32, 244, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 33, 245, 0),
woosh.Token(woosh.NAME, 'if', 245, 4, 245, 6),
woosh.Token(woosh.NAME, 'not', 245, 7, 245, 10),
woosh.Token(woosh.NAME, 'tail', 245, 11, 245, 15),
woosh.Token(woosh.OP, ':', 245, 15, 245, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 16, 246, 0),
woosh.Token(woosh.INDENT, '        ', 246, 0, 246, 8),
woosh.Token(woosh.NAME, 'head', 246, 8, 246, 12),
woosh.Token(woosh.OP, ',', 246, 12, 246, 13),
woosh.Token(woosh.NAME, 'tail', 246, 14, 246, 18),
woosh.Token(woosh.OP, '=', 246, 19, 246, 20),
woosh.Token(woosh.NAME, 'path', 246, 21, 246, 25),
woosh.Token(woosh.OP, '.', 246, 25, 246, 26),
woosh.Token(woosh.NAME, 'split', 246, 26, 246, 31),
woosh.Token(woosh.OP, '(', 246, 31, 246, 32),
woosh.Token(woosh.NAME, 'head', 246, 32, 246, 36),
woosh.Token(woosh.OP, ')', 246, 36, 246, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 37, 247, 0),
woosh.Token(woosh.DEDENT, '    ', 247, 0, 247, 4),
woosh.Token(woosh.NAME, 'while', 247, 4, 247, 9),
woosh.Token(woosh.NAME, 'head', 247, 10, 247, 14),
woosh.Token(woosh.NAME, 'and', 247, 15, 247, 18),
woosh.Token(woosh.NAME, 'tail', 247, 19, 247, 23),
woosh.Token(woosh.OP, ':', 247, 23, 247, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 24, 248, 0),
woosh.Token(woosh.INDENT, '        ', 248, 0, 248, 8),
woosh.Token(woosh.NAME, 'try', 248, 8, 248, 11),
woosh.Token(woosh.OP, ':', 248, 11, 248, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 12, 249, 0),
woosh.Token(woosh.INDENT, '            ', 249, 0, 249, 12),
woosh.Token(woosh.NAME, 'rmdir', 249, 12, 249, 17),
woosh.Token(woosh.OP, '(', 249, 17, 249, 18),
woosh.Token(woosh.NAME, 'head', 249, 18, 249, 22),
woosh.Token(woosh.OP, ')', 249, 22, 249, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 23, 250, 0),
woosh.Token(woosh.DEDENT, '        ', 250, 0, 250, 8),
woosh.Token(woosh.NAME, 'except', 250, 8, 250, 14),
woosh.Token(woosh.NAME, 'OSError', 250, 15, 250, 22),
woosh.Token(woosh.OP, ':', 250, 22, 250, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 23, 251, 0),
woosh.Token(woosh.INDENT, '            ', 251, 0, 251, 12),
woosh.Token(woosh.NAME, 'break', 251, 12, 251, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 17, 252, 0),
woosh.Token(woosh.DEDENT, '        ', 252, 0, 252, 8),
woosh.Token(woosh.NAME, 'head', 252, 8, 252, 12),
woosh.Token(woosh.OP, ',', 252, 12, 252, 13),
woosh.Token(woosh.NAME, 'tail', 252, 14, 252, 18),
woosh.Token(woosh.OP, '=', 252, 19, 252, 20),
woosh.Token(woosh.NAME, 'path', 252, 21, 252, 25),
woosh.Token(woosh.OP, '.', 252, 25, 252, 26),
woosh.Token(woosh.NAME, 'split', 252, 26, 252, 31),
woosh.Token(woosh.OP, '(', 252, 31, 252, 32),
woosh.Token(woosh.NAME, 'head', 252, 32, 252, 36),
woosh.Token(woosh.OP, ')', 252, 36, 252, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 37, 253, 0),
woosh.Token(woosh.DEDENT, '', 254, 0, 254, 0),
woosh.Token(woosh.DEDENT, '', 254, 0, 254, 0),
woosh.Token(woosh.NAME, 'def', 254, 0, 254, 3),
woosh.Token(woosh.NAME, 'renames', 254, 4, 254, 11),
woosh.Token(woosh.OP, '(', 254, 11, 254, 12),
woosh.Token(woosh.NAME, 'old', 254, 12, 254, 15),
woosh.Token(woosh.OP, ',', 254, 15, 254, 16),
woosh.Token(woosh.NAME, 'new', 254, 17, 254, 20),
woosh.Token(woosh.OP, ')', 254, 20, 254, 21),
woosh.Token(woosh.OP, ':', 254, 21, 254, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 22, 255, 0),
woosh.Token(woosh.INDENT, '    ', 255, 0, 255, 4),
woosh.Token(woosh.STRING, '"""renames(old, new)\r\n\r\n    Super-rename; create directories as necessary and delete any left\r\n    empty.  Works like rename, except creation of any intermediate\r\n    directories needed to make the new pathname good is attempted\r\n    first.  After the rename, directories corresponding to rightmost\r\n    path segments of the old name will be pruned until either the\r\n    whole path is consumed or a nonempty directory is found.\r\n\r\n    Note: this function can fail with the new directory structure made\r\n    if you lack permissions needed to unlink the leaf directory or\r\n    file.\r\n\r\n    """', 255, 4, 268, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 7, 269, 0),
woosh.Token(woosh.NAME, 'head', 269, 4, 269, 8),
woosh.Token(woosh.OP, ',', 269, 8, 269, 9),
woosh.Token(woosh.NAME, 'tail', 269, 10, 269, 14),
woosh.Token(woosh.OP, '=', 269, 15, 269, 16),
woosh.Token(woosh.NAME, 'path', 269, 17, 269, 21),
woosh.Token(woosh.OP, '.', 269, 21, 269, 22),
woosh.Token(woosh.NAME, 'split', 269, 22, 269, 27),
woosh.Token(woosh.OP, '(', 269, 27, 269, 28),
woosh.Token(woosh.NAME, 'new', 269, 28, 269, 31),
woosh.Token(woosh.OP, ')', 269, 31, 269, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 32, 270, 0),
woosh.Token(woosh.NAME, 'if', 270, 4, 270, 6),
woosh.Token(woosh.NAME, 'head', 270, 7, 270, 11),
woosh.Token(woosh.NAME, 'and', 270, 12, 270, 15),
woosh.Token(woosh.NAME, 'tail', 270, 16, 270, 20),
woosh.Token(woosh.NAME, 'and', 270, 21, 270, 24),
woosh.Token(woosh.NAME, 'not', 270, 25, 270, 28),
woosh.Token(woosh.NAME, 'path', 270, 29, 270, 33),
woosh.Token(woosh.OP, '.', 270, 33, 270, 34),
woosh.Token(woosh.NAME, 'exists', 270, 34, 270, 40),
woosh.Token(woosh.OP, '(', 270, 40, 270, 41),
woosh.Token(woosh.NAME, 'head', 270, 41, 270, 45),
woosh.Token(woosh.OP, ')', 270, 45, 270, 46),
woosh.Token(woosh.OP, ':', 270, 46, 270, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 47, 271, 0),
woosh.Token(woosh.INDENT, '        ', 271, 0, 271, 8),
woosh.Token(woosh.NAME, 'makedirs', 271, 8, 271, 16),
woosh.Token(woosh.OP, '(', 271, 16, 271, 17),
woosh.Token(woosh.NAME, 'head', 271, 17, 271, 21),
woosh.Token(woosh.OP, ')', 271, 21, 271, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 22, 272, 0),
woosh.Token(woosh.DEDENT, '    ', 272, 0, 272, 4),
woosh.Token(woosh.NAME, 'rename', 272, 4, 272, 10),
woosh.Token(woosh.OP, '(', 272, 10, 272, 11),
woosh.Token(woosh.NAME, 'old', 272, 11, 272, 14),
woosh.Token(woosh.OP, ',', 272, 14, 272, 15),
woosh.Token(woosh.NAME, 'new', 272, 16, 272, 19),
woosh.Token(woosh.OP, ')', 272, 19, 272, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 20, 273, 0),
woosh.Token(woosh.NAME, 'head', 273, 4, 273, 8),
woosh.Token(woosh.OP, ',', 273, 8, 273, 9),
woosh.Token(woosh.NAME, 'tail', 273, 10, 273, 14),
woosh.Token(woosh.OP, '=', 273, 15, 273, 16),
woosh.Token(woosh.NAME, 'path', 273, 17, 273, 21),
woosh.Token(woosh.OP, '.', 273, 21, 273, 22),
woosh.Token(woosh.NAME, 'split', 273, 22, 273, 27),
woosh.Token(woosh.OP, '(', 273, 27, 273, 28),
woosh.Token(woosh.NAME, 'old', 273, 28, 273, 31),
woosh.Token(woosh.OP, ')', 273, 31, 273, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 32, 274, 0),
woosh.Token(woosh.NAME, 'if', 274, 4, 274, 6),
woosh.Token(woosh.NAME, 'head', 274, 7, 274, 11),
woosh.Token(woosh.NAME, 'and', 274, 12, 274, 15),
woosh.Token(woosh.NAME, 'tail', 274, 16, 274, 20),
woosh.Token(woosh.OP, ':', 274, 20, 274, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 274, 21, 275, 0),
woosh.Token(woosh.INDENT, '        ', 275, 0, 275, 8),
woosh.Token(woosh.NAME, 'try', 275, 8, 275, 11),
woosh.Token(woosh.OP, ':', 275, 11, 275, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 12, 276, 0),
woosh.Token(woosh.INDENT, '            ', 276, 0, 276, 12),
woosh.Token(woosh.NAME, 'removedirs', 276, 12, 276, 22),
woosh.Token(woosh.OP, '(', 276, 22, 276, 23),
woosh.Token(woosh.NAME, 'head', 276, 23, 276, 27),
woosh.Token(woosh.OP, ')', 276, 27, 276, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 28, 277, 0),
woosh.Token(woosh.DEDENT, '        ', 277, 0, 277, 8),
woosh.Token(woosh.NAME, 'except', 277, 8, 277, 14),
woosh.Token(woosh.NAME, 'OSError', 277, 15, 277, 22),
woosh.Token(woosh.OP, ':', 277, 22, 277, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 23, 278, 0),
woosh.Token(woosh.INDENT, '            ', 278, 0, 278, 12),
woosh.Token(woosh.NAME, 'pass', 278, 12, 278, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 16, 279, 0),
woosh.Token(woosh.DEDENT, '', 280, 0, 280, 0),
woosh.Token(woosh.DEDENT, '', 280, 0, 280, 0),
woosh.Token(woosh.DEDENT, '', 280, 0, 280, 0),
woosh.Token(woosh.NAME, '__all__', 280, 0, 280, 7),
woosh.Token(woosh.OP, '.', 280, 7, 280, 8),
woosh.Token(woosh.NAME, 'extend', 280, 8, 280, 14),
woosh.Token(woosh.OP, '(', 280, 14, 280, 15),
woosh.Token(woosh.OP, '[', 280, 15, 280, 16),
woosh.Token(woosh.STRING, '"makedirs"', 280, 16, 280, 26),
woosh.Token(woosh.OP, ',', 280, 26, 280, 27),
woosh.Token(woosh.STRING, '"removedirs"', 280, 28, 280, 40),
woosh.Token(woosh.OP, ',', 280, 40, 280, 41),
woosh.Token(woosh.STRING, '"renames"', 280, 42, 280, 51),
woosh.Token(woosh.OP, ']', 280, 51, 280, 52),
woosh.Token(woosh.OP, ')', 280, 52, 280, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 53, 281, 0),
woosh.Token(woosh.NAME, 'def', 282, 0, 282, 3),
woosh.Token(woosh.NAME, 'walk', 282, 4, 282, 8),
woosh.Token(woosh.OP, '(', 282, 8, 282, 9),
woosh.Token(woosh.NAME, 'top', 282, 9, 282, 12),
woosh.Token(woosh.OP, ',', 282, 12, 282, 13),
woosh.Token(woosh.NAME, 'topdown', 282, 14, 282, 21),
woosh.Token(woosh.OP, '=', 282, 21, 282, 22),
woosh.Token(woosh.NAME, 'True', 282, 22, 282, 26),
woosh.Token(woosh.OP, ',', 282, 26, 282, 27),
woosh.Token(woosh.NAME, 'onerror', 282, 28, 282, 35),
woosh.Token(woosh.OP, '=', 282, 35, 282, 36),
woosh.Token(woosh.NAME, 'None', 282, 36, 282, 40),
woosh.Token(woosh.OP, ',', 282, 40, 282, 41),
woosh.Token(woosh.NAME, 'followlinks', 282, 42, 282, 53),
woosh.Token(woosh.OP, '=', 282, 53, 282, 54),
woosh.Token(woosh.NAME, 'False', 282, 54, 282, 59),
woosh.Token(woosh.OP, ')', 282, 59, 282, 60),
woosh.Token(woosh.OP, ':', 282, 60, 282, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 61, 283, 0),
woosh.Token(woosh.INDENT, '    ', 283, 0, 283, 4),
woosh.Token(woosh.STRING, '"""Directory tree generator.\r\n\r\n    For each directory in the directory tree rooted at top (including top\r\n    itself, but excluding \'.\' and \'..\'), yields a 3-tuple\r\n\r\n        dirpath, dirnames, filenames\r\n\r\n    dirpath is a string, the path to the directory.  dirnames is a list of\r\n    the names of the subdirectories in dirpath (excluding \'.\' and \'..\').\r\n    filenames is a list of the names of the non-directory files in dirpath.\r\n    Note that the names in the lists are just names, with no path components.\r\n    To get a full path (which begins with top) to a file or directory in\r\n    dirpath, do os.path.join(dirpath, name).\r\n\r\n    If optional arg \'topdown\' is true or not specified, the triple for a\r\n    directory is generated before the triples for any of its subdirectories\r\n    (directories are generated top down).  If topdown is false, the triple\r\n    for a directory is generated after the triples for all of its\r\n    subdirectories (directories are generated bottom up).\r\n\r\n    When topdown is true, the caller can modify the dirnames list in-place\r\n    (e.g., via del or slice assignment), and walk will only recurse into the\r\n    subdirectories whose names remain in dirnames; this can be used to prune the\r\n    search, or to impose a specific order of visiting.  Modifying dirnames when\r\n    topdown is false has no effect on the behavior of os.walk(), since the\r\n    directories in dirnames have already been generated by the time dirnames\r\n    itself is generated. No matter the value of topdown, the list of\r\n    subdirectories is retrieved before the tuples for the directory and its\r\n    subdirectories are generated.\r\n\r\n    By default errors from the os.scandir() call are ignored.  If\r\n    optional arg \'onerror\' is specified, it should be a function; it\r\n    will be called with one argument, an OSError instance.  It can\r\n    report the error to continue with the walk, or raise the exception\r\n    to abort the walk.  Note that the filename is available as the\r\n    filename attribute of the exception object.\r\n\r\n    By default, os.walk does not follow symbolic links to subdirectories on\r\n    systems that support them.  In order to get this functionality, set the\r\n    optional argument \'followlinks\' to true.\r\n\r\n    Caution:  if you pass a relative pathname for top, don\'t change the\r\n    current working directory between resumptions of walk.  walk never\r\n    changes the current directory, and assumes that the client doesn\'t\r\n    either.\r\n\r\n    Example:\r\n\r\n    import os\r\n    from os.path import join, getsize\r\n    for root, dirs, files in os.walk(\'python/Lib/email\'):\r\n        print(root, "consumes", end="")\r\n        print(sum(getsize(join(root, name)) for name in files), end="")\r\n        print("bytes in", len(files), "non-directory files")\r\n        if \'CVS\' in dirs:\r\n            dirs.remove(\'CVS\')  # don\'t visit CVS directories\r\n\r\n    """', 283, 4, 340, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 7, 341, 0),
woosh.Token(woosh.NAME, 'sys', 341, 4, 341, 7),
woosh.Token(woosh.OP, '.', 341, 7, 341, 8),
woosh.Token(woosh.NAME, 'audit', 341, 8, 341, 13),
woosh.Token(woosh.OP, '(', 341, 13, 341, 14),
woosh.Token(woosh.STRING, '"os.walk"', 341, 14, 341, 23),
woosh.Token(woosh.OP, ',', 341, 23, 341, 24),
woosh.Token(woosh.NAME, 'top', 341, 25, 341, 28),
woosh.Token(woosh.OP, ',', 341, 28, 341, 29),
woosh.Token(woosh.NAME, 'topdown', 341, 30, 341, 37),
woosh.Token(woosh.OP, ',', 341, 37, 341, 38),
woosh.Token(woosh.NAME, 'onerror', 341, 39, 341, 46),
woosh.Token(woosh.OP, ',', 341, 46, 341, 47),
woosh.Token(woosh.NAME, 'followlinks', 341, 48, 341, 59),
woosh.Token(woosh.OP, ')', 341, 59, 341, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 60, 342, 0),
woosh.Token(woosh.NAME, 'return', 342, 4, 342, 10),
woosh.Token(woosh.NAME, '_walk', 342, 11, 342, 16),
woosh.Token(woosh.OP, '(', 342, 16, 342, 17),
woosh.Token(woosh.NAME, 'fspath', 342, 17, 342, 23),
woosh.Token(woosh.OP, '(', 342, 23, 342, 24),
woosh.Token(woosh.NAME, 'top', 342, 24, 342, 27),
woosh.Token(woosh.OP, ')', 342, 27, 342, 28),
woosh.Token(woosh.OP, ',', 342, 28, 342, 29),
woosh.Token(woosh.NAME, 'topdown', 342, 30, 342, 37),
woosh.Token(woosh.OP, ',', 342, 37, 342, 38),
woosh.Token(woosh.NAME, 'onerror', 342, 39, 342, 46),
woosh.Token(woosh.OP, ',', 342, 46, 342, 47),
woosh.Token(woosh.NAME, 'followlinks', 342, 48, 342, 59),
woosh.Token(woosh.OP, ')', 342, 59, 342, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 60, 343, 0),
woosh.Token(woosh.DEDENT, '', 344, 0, 344, 0),
woosh.Token(woosh.NAME, 'def', 344, 0, 344, 3),
woosh.Token(woosh.NAME, '_walk', 344, 4, 344, 9),
woosh.Token(woosh.OP, '(', 344, 9, 344, 10),
woosh.Token(woosh.NAME, 'top', 344, 10, 344, 13),
woosh.Token(woosh.OP, ',', 344, 13, 344, 14),
woosh.Token(woosh.NAME, 'topdown', 344, 15, 344, 22),
woosh.Token(woosh.OP, ',', 344, 22, 344, 23),
woosh.Token(woosh.NAME, 'onerror', 344, 24, 344, 31),
woosh.Token(woosh.OP, ',', 344, 31, 344, 32),
woosh.Token(woosh.NAME, 'followlinks', 344, 33, 344, 44),
woosh.Token(woosh.OP, ')', 344, 44, 344, 45),
woosh.Token(woosh.OP, ':', 344, 45, 344, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 46, 345, 0),
woosh.Token(woosh.INDENT, '    ', 345, 0, 345, 4),
woosh.Token(woosh.NAME, 'dirs', 345, 4, 345, 8),
woosh.Token(woosh.OP, '=', 345, 9, 345, 10),
woosh.Token(woosh.OP, '[', 345, 11, 345, 12),
woosh.Token(woosh.OP, ']', 345, 12, 345, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 13, 346, 0),
woosh.Token(woosh.NAME, 'nondirs', 346, 4, 346, 11),
woosh.Token(woosh.OP, '=', 346, 12, 346, 13),
woosh.Token(woosh.OP, '[', 346, 14, 346, 15),
woosh.Token(woosh.OP, ']', 346, 15, 346, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 16, 347, 0),
woosh.Token(woosh.NAME, 'walk_dirs', 347, 4, 347, 13),
woosh.Token(woosh.OP, '=', 347, 14, 347, 15),
woosh.Token(woosh.OP, '[', 347, 16, 347, 17),
woosh.Token(woosh.OP, ']', 347, 17, 347, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 18, 348, 0),
woosh.Token(woosh.COMMENT, "# We may not have read permission for top, in which case we can't", 349, 4, 349, 69),
woosh.Token(woosh.COMMENT, '# get a list of the files the directory contains.  os.walk', 350, 4, 350, 62),
woosh.Token(woosh.COMMENT, '# always suppressed the exception then, rather than blow up for a', 351, 4, 351, 69),
woosh.Token(woosh.COMMENT, '# minor reason when (say) a thousand readable directories are still', 352, 4, 352, 71),
woosh.Token(woosh.COMMENT, '# left to visit.  That logic is copied here.', 353, 4, 353, 48),
woosh.Token(woosh.NAME, 'try', 354, 4, 354, 7),
woosh.Token(woosh.OP, ':', 354, 7, 354, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 354, 8, 355, 0),
woosh.Token(woosh.COMMENT, '# Note that scandir is global in this module due', 355, 8, 355, 56),
woosh.Token(woosh.COMMENT, '# to earlier import-*.', 356, 8, 356, 30),
woosh.Token(woosh.INDENT, '        ', 357, 0, 357, 8),
woosh.Token(woosh.NAME, 'scandir_it', 357, 8, 357, 18),
woosh.Token(woosh.OP, '=', 357, 19, 357, 20),
woosh.Token(woosh.NAME, 'scandir', 357, 21, 357, 28),
woosh.Token(woosh.OP, '(', 357, 28, 357, 29),
woosh.Token(woosh.NAME, 'top', 357, 29, 357, 32),
woosh.Token(woosh.OP, ')', 357, 32, 357, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 33, 358, 0),
woosh.Token(woosh.DEDENT, '    ', 358, 0, 358, 4),
woosh.Token(woosh.NAME, 'except', 358, 4, 358, 10),
woosh.Token(woosh.NAME, 'OSError', 358, 11, 358, 18),
woosh.Token(woosh.NAME, 'as', 358, 19, 358, 21),
woosh.Token(woosh.NAME, 'error', 358, 22, 358, 27),
woosh.Token(woosh.OP, ':', 358, 27, 358, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 28, 359, 0),
woosh.Token(woosh.INDENT, '        ', 359, 0, 359, 8),
woosh.Token(woosh.NAME, 'if', 359, 8, 359, 10),
woosh.Token(woosh.NAME, 'onerror', 359, 11, 359, 18),
woosh.Token(woosh.NAME, 'is', 359, 19, 359, 21),
woosh.Token(woosh.NAME, 'not', 359, 22, 359, 25),
woosh.Token(woosh.NAME, 'None', 359, 26, 359, 30),
woosh.Token(woosh.OP, ':', 359, 30, 359, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 31, 360, 0),
woosh.Token(woosh.INDENT, '            ', 360, 0, 360, 12),
woosh.Token(woosh.NAME, 'onerror', 360, 12, 360, 19),
woosh.Token(woosh.OP, '(', 360, 19, 360, 20),
woosh.Token(woosh.NAME, 'error', 360, 20, 360, 25),
woosh.Token(woosh.OP, ')', 360, 25, 360, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 26, 361, 0),
woosh.Token(woosh.DEDENT, '        ', 361, 0, 361, 8),
woosh.Token(woosh.NAME, 'return', 361, 8, 361, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 14, 362, 0),
woosh.Token(woosh.DEDENT, '    ', 363, 0, 363, 4),
woosh.Token(woosh.NAME, 'with', 363, 4, 363, 8),
woosh.Token(woosh.NAME, 'scandir_it', 363, 9, 363, 19),
woosh.Token(woosh.OP, ':', 363, 19, 363, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 20, 364, 0),
woosh.Token(woosh.INDENT, '        ', 364, 0, 364, 8),
woosh.Token(woosh.NAME, 'while', 364, 8, 364, 13),
woosh.Token(woosh.NAME, 'True', 364, 14, 364, 18),
woosh.Token(woosh.OP, ':', 364, 18, 364, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 19, 365, 0),
woosh.Token(woosh.INDENT, '            ', 365, 0, 365, 12),
woosh.Token(woosh.NAME, 'try', 365, 12, 365, 15),
woosh.Token(woosh.OP, ':', 365, 15, 365, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 16, 366, 0),
woosh.Token(woosh.INDENT, '                ', 366, 0, 366, 16),
woosh.Token(woosh.NAME, 'try', 366, 16, 366, 19),
woosh.Token(woosh.OP, ':', 366, 19, 366, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 20, 367, 0),
woosh.Token(woosh.INDENT, '                    ', 367, 0, 367, 20),
woosh.Token(woosh.NAME, 'entry', 367, 20, 367, 25),
woosh.Token(woosh.OP, '=', 367, 26, 367, 27),
woosh.Token(woosh.NAME, 'next', 367, 28, 367, 32),
woosh.Token(woosh.OP, '(', 367, 32, 367, 33),
woosh.Token(woosh.NAME, 'scandir_it', 367, 33, 367, 43),
woosh.Token(woosh.OP, ')', 367, 43, 367, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 44, 368, 0),
woosh.Token(woosh.DEDENT, '                ', 368, 0, 368, 16),
woosh.Token(woosh.NAME, 'except', 368, 16, 368, 22),
woosh.Token(woosh.NAME, 'StopIteration', 368, 23, 368, 36),
woosh.Token(woosh.OP, ':', 368, 36, 368, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 37, 369, 0),
woosh.Token(woosh.INDENT, '                    ', 369, 0, 369, 20),
woosh.Token(woosh.NAME, 'break', 369, 20, 369, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 25, 370, 0),
woosh.Token(woosh.DEDENT, '            ', 370, 0, 370, 12),
woosh.Token(woosh.DEDENT, '', 370, 12, 370, 12),
woosh.Token(woosh.NAME, 'except', 370, 12, 370, 18),
woosh.Token(woosh.NAME, 'OSError', 370, 19, 370, 26),
woosh.Token(woosh.NAME, 'as', 370, 27, 370, 29),
woosh.Token(woosh.NAME, 'error', 370, 30, 370, 35),
woosh.Token(woosh.OP, ':', 370, 35, 370, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 36, 371, 0),
woosh.Token(woosh.INDENT, '                ', 371, 0, 371, 16),
woosh.Token(woosh.NAME, 'if', 371, 16, 371, 18),
woosh.Token(woosh.NAME, 'onerror', 371, 19, 371, 26),
woosh.Token(woosh.NAME, 'is', 371, 27, 371, 29),
woosh.Token(woosh.NAME, 'not', 371, 30, 371, 33),
woosh.Token(woosh.NAME, 'None', 371, 34, 371, 38),
woosh.Token(woosh.OP, ':', 371, 38, 371, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 39, 372, 0),
woosh.Token(woosh.INDENT, '                    ', 372, 0, 372, 20),
woosh.Token(woosh.NAME, 'onerror', 372, 20, 372, 27),
woosh.Token(woosh.OP, '(', 372, 27, 372, 28),
woosh.Token(woosh.NAME, 'error', 372, 28, 372, 33),
woosh.Token(woosh.OP, ')', 372, 33, 372, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 372, 34, 373, 0),
woosh.Token(woosh.DEDENT, '                ', 373, 0, 373, 16),
woosh.Token(woosh.NAME, 'return', 373, 16, 373, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 22, 374, 0),
woosh.Token(woosh.DEDENT, '            ', 375, 0, 375, 12),
woosh.Token(woosh.NAME, 'try', 375, 12, 375, 15),
woosh.Token(woosh.OP, ':', 375, 15, 375, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 16, 376, 0),
woosh.Token(woosh.INDENT, '                ', 376, 0, 376, 16),
woosh.Token(woosh.NAME, 'is_dir', 376, 16, 376, 22),
woosh.Token(woosh.OP, '=', 376, 23, 376, 24),
woosh.Token(woosh.NAME, 'entry', 376, 25, 376, 30),
woosh.Token(woosh.OP, '.', 376, 30, 376, 31),
woosh.Token(woosh.NAME, 'is_dir', 376, 31, 376, 37),
woosh.Token(woosh.OP, '(', 376, 37, 376, 38),
woosh.Token(woosh.OP, ')', 376, 38, 376, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 39, 377, 0),
woosh.Token(woosh.DEDENT, '            ', 377, 0, 377, 12),
woosh.Token(woosh.NAME, 'except', 377, 12, 377, 18),
woosh.Token(woosh.NAME, 'OSError', 377, 19, 377, 26),
woosh.Token(woosh.OP, ':', 377, 26, 377, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 27, 378, 0),
woosh.Token(woosh.COMMENT, '# If is_dir() raises an OSError, consider that the entry is not', 378, 16, 378, 79),
woosh.Token(woosh.COMMENT, '# a directory, same behaviour than os.path.isdir().', 379, 16, 379, 67),
woosh.Token(woosh.INDENT, '                ', 380, 0, 380, 16),
woosh.Token(woosh.NAME, 'is_dir', 380, 16, 380, 22),
woosh.Token(woosh.OP, '=', 380, 23, 380, 24),
woosh.Token(woosh.NAME, 'False', 380, 25, 380, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 30, 381, 0),
woosh.Token(woosh.DEDENT, '            ', 382, 0, 382, 12),
woosh.Token(woosh.NAME, 'if', 382, 12, 382, 14),
woosh.Token(woosh.NAME, 'is_dir', 382, 15, 382, 21),
woosh.Token(woosh.OP, ':', 382, 21, 382, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 22, 383, 0),
woosh.Token(woosh.INDENT, '                ', 383, 0, 383, 16),
woosh.Token(woosh.NAME, 'dirs', 383, 16, 383, 20),
woosh.Token(woosh.OP, '.', 383, 20, 383, 21),
woosh.Token(woosh.NAME, 'append', 383, 21, 383, 27),
woosh.Token(woosh.OP, '(', 383, 27, 383, 28),
woosh.Token(woosh.NAME, 'entry', 383, 28, 383, 33),
woosh.Token(woosh.OP, '.', 383, 33, 383, 34),
woosh.Token(woosh.NAME, 'name', 383, 34, 383, 38),
woosh.Token(woosh.OP, ')', 383, 38, 383, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 383, 39, 384, 0),
woosh.Token(woosh.DEDENT, '            ', 384, 0, 384, 12),
woosh.Token(woosh.NAME, 'else', 384, 12, 384, 16),
woosh.Token(woosh.OP, ':', 384, 16, 384, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 17, 385, 0),
woosh.Token(woosh.INDENT, '                ', 385, 0, 385, 16),
woosh.Token(woosh.NAME, 'nondirs', 385, 16, 385, 23),
woosh.Token(woosh.OP, '.', 385, 23, 385, 24),
woosh.Token(woosh.NAME, 'append', 385, 24, 385, 30),
woosh.Token(woosh.OP, '(', 385, 30, 385, 31),
woosh.Token(woosh.NAME, 'entry', 385, 31, 385, 36),
woosh.Token(woosh.OP, '.', 385, 36, 385, 37),
woosh.Token(woosh.NAME, 'name', 385, 37, 385, 41),
woosh.Token(woosh.OP, ')', 385, 41, 385, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 42, 386, 0),
woosh.Token(woosh.DEDENT, '            ', 387, 0, 387, 12),
woosh.Token(woosh.NAME, 'if', 387, 12, 387, 14),
woosh.Token(woosh.NAME, 'not', 387, 15, 387, 18),
woosh.Token(woosh.NAME, 'topdown', 387, 19, 387, 26),
woosh.Token(woosh.NAME, 'and', 387, 27, 387, 30),
woosh.Token(woosh.NAME, 'is_dir', 387, 31, 387, 37),
woosh.Token(woosh.OP, ':', 387, 37, 387, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 38, 388, 0),
woosh.Token(woosh.COMMENT, '# Bottom-up: recurse into sub-directory, but exclude symlinks to', 388, 16, 388, 80),
woosh.Token(woosh.COMMENT, '# directories if followlinks is False', 389, 16, 389, 53),
woosh.Token(woosh.INDENT, '                ', 390, 0, 390, 16),
woosh.Token(woosh.NAME, 'if', 390, 16, 390, 18),
woosh.Token(woosh.NAME, 'followlinks', 390, 19, 390, 30),
woosh.Token(woosh.OP, ':', 390, 30, 390, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 31, 391, 0),
woosh.Token(woosh.INDENT, '                    ', 391, 0, 391, 20),
woosh.Token(woosh.NAME, 'walk_into', 391, 20, 391, 29),
woosh.Token(woosh.OP, '=', 391, 30, 391, 31),
woosh.Token(woosh.NAME, 'True', 391, 32, 391, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 36, 392, 0),
woosh.Token(woosh.DEDENT, '                ', 392, 0, 392, 16),
woosh.Token(woosh.NAME, 'else', 392, 16, 392, 20),
woosh.Token(woosh.OP, ':', 392, 20, 392, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 392, 21, 393, 0),
woosh.Token(woosh.INDENT, '                    ', 393, 0, 393, 20),
woosh.Token(woosh.NAME, 'try', 393, 20, 393, 23),
woosh.Token(woosh.OP, ':', 393, 23, 393, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 24, 394, 0),
woosh.Token(woosh.INDENT, '                        ', 394, 0, 394, 24),
woosh.Token(woosh.NAME, 'is_symlink', 394, 24, 394, 34),
woosh.Token(woosh.OP, '=', 394, 35, 394, 36),
woosh.Token(woosh.NAME, 'entry', 394, 37, 394, 42),
woosh.Token(woosh.OP, '.', 394, 42, 394, 43),
woosh.Token(woosh.NAME, 'is_symlink', 394, 43, 394, 53),
woosh.Token(woosh.OP, '(', 394, 53, 394, 54),
woosh.Token(woosh.OP, ')', 394, 54, 394, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 55, 395, 0),
woosh.Token(woosh.DEDENT, '                    ', 395, 0, 395, 20),
woosh.Token(woosh.NAME, 'except', 395, 20, 395, 26),
woosh.Token(woosh.NAME, 'OSError', 395, 27, 395, 34),
woosh.Token(woosh.OP, ':', 395, 34, 395, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 35, 396, 0),
woosh.Token(woosh.COMMENT, '# If is_symlink() raises an OSError, consider that the', 396, 24, 396, 78),
woosh.Token(woosh.COMMENT, '# entry is not a symbolic link, same behaviour than', 397, 24, 397, 75),
woosh.Token(woosh.COMMENT, '# os.path.islink().', 398, 24, 398, 43),
woosh.Token(woosh.INDENT, '                        ', 399, 0, 399, 24),
woosh.Token(woosh.NAME, 'is_symlink', 399, 24, 399, 34),
woosh.Token(woosh.OP, '=', 399, 35, 399, 36),
woosh.Token(woosh.NAME, 'False', 399, 37, 399, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 42, 400, 0),
woosh.Token(woosh.DEDENT, '                    ', 400, 0, 400, 20),
woosh.Token(woosh.NAME, 'walk_into', 400, 20, 400, 29),
woosh.Token(woosh.OP, '=', 400, 30, 400, 31),
woosh.Token(woosh.NAME, 'not', 400, 32, 400, 35),
woosh.Token(woosh.NAME, 'is_symlink', 400, 36, 400, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 46, 401, 0),
woosh.Token(woosh.DEDENT, '                ', 402, 0, 402, 16),
woosh.Token(woosh.NAME, 'if', 402, 16, 402, 18),
woosh.Token(woosh.NAME, 'walk_into', 402, 19, 402, 28),
woosh.Token(woosh.OP, ':', 402, 28, 402, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 402, 29, 403, 0),
woosh.Token(woosh.INDENT, '                    ', 403, 0, 403, 20),
woosh.Token(woosh.NAME, 'walk_dirs', 403, 20, 403, 29),
woosh.Token(woosh.OP, '.', 403, 29, 403, 30),
woosh.Token(woosh.NAME, 'append', 403, 30, 403, 36),
woosh.Token(woosh.OP, '(', 403, 36, 403, 37),
woosh.Token(woosh.NAME, 'entry', 403, 37, 403, 42),
woosh.Token(woosh.OP, '.', 403, 42, 403, 43),
woosh.Token(woosh.NAME, 'path', 403, 43, 403, 47),
woosh.Token(woosh.OP, ')', 403, 47, 403, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 403, 48, 404, 0),
woosh.Token(woosh.COMMENT, '# Yield before recursion if going top down', 405, 4, 405, 46),
woosh.Token(woosh.DEDENT, '    ', 406, 0, 406, 4),
woosh.Token(woosh.DEDENT, '', 406, 4, 406, 4),
woosh.Token(woosh.DEDENT, '', 406, 4, 406, 4),
woosh.Token(woosh.DEDENT, '', 406, 4, 406, 4),
woosh.Token(woosh.NAME, 'if', 406, 4, 406, 6),
woosh.Token(woosh.NAME, 'topdown', 406, 7, 406, 14),
woosh.Token(woosh.OP, ':', 406, 14, 406, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 15, 407, 0),
woosh.Token(woosh.INDENT, '        ', 407, 0, 407, 8),
woosh.Token(woosh.NAME, 'yield', 407, 8, 407, 13),
woosh.Token(woosh.NAME, 'top', 407, 14, 407, 17),
woosh.Token(woosh.OP, ',', 407, 17, 407, 18),
woosh.Token(woosh.NAME, 'dirs', 407, 19, 407, 23),
woosh.Token(woosh.OP, ',', 407, 23, 407, 24),
woosh.Token(woosh.NAME, 'nondirs', 407, 25, 407, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 32, 408, 0),
woosh.Token(woosh.COMMENT, '# Recurse into sub-directories', 409, 8, 409, 38),
woosh.Token(woosh.NAME, 'islink', 410, 8, 410, 14),
woosh.Token(woosh.OP, ',', 410, 14, 410, 15),
woosh.Token(woosh.NAME, 'join', 410, 16, 410, 20),
woosh.Token(woosh.OP, '=', 410, 21, 410, 22),
woosh.Token(woosh.NAME, 'path', 410, 23, 410, 27),
woosh.Token(woosh.OP, '.', 410, 27, 410, 28),
woosh.Token(woosh.NAME, 'islink', 410, 28, 410, 34),
woosh.Token(woosh.OP, ',', 410, 34, 410, 35),
woosh.Token(woosh.NAME, 'path', 410, 36, 410, 40),
woosh.Token(woosh.OP, '.', 410, 40, 410, 41),
woosh.Token(woosh.NAME, 'join', 410, 41, 410, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 45, 411, 0),
woosh.Token(woosh.NAME, 'for', 411, 8, 411, 11),
woosh.Token(woosh.NAME, 'dirname', 411, 12, 411, 19),
woosh.Token(woosh.NAME, 'in', 411, 20, 411, 22),
woosh.Token(woosh.NAME, 'dirs', 411, 23, 411, 27),
woosh.Token(woosh.OP, ':', 411, 27, 411, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 28, 412, 0),
woosh.Token(woosh.INDENT, '            ', 412, 0, 412, 12),
woosh.Token(woosh.NAME, 'new_path', 412, 12, 412, 20),
woosh.Token(woosh.OP, '=', 412, 21, 412, 22),
woosh.Token(woosh.NAME, 'join', 412, 23, 412, 27),
woosh.Token(woosh.OP, '(', 412, 27, 412, 28),
woosh.Token(woosh.NAME, 'top', 412, 28, 412, 31),
woosh.Token(woosh.OP, ',', 412, 31, 412, 32),
woosh.Token(woosh.NAME, 'dirname', 412, 33, 412, 40),
woosh.Token(woosh.OP, ')', 412, 40, 412, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 41, 413, 0),
woosh.Token(woosh.COMMENT, '# Issue #23605: os.path.islink() is used instead of caching', 413, 12, 413, 71),
woosh.Token(woosh.COMMENT, '# entry.is_symlink() result during the loop on os.scandir() because', 414, 12, 414, 79),
woosh.Token(woosh.COMMENT, '# the caller can replace the directory entry during the "yield"', 415, 12, 415, 75),
woosh.Token(woosh.COMMENT, '# above.', 416, 12, 416, 20),
woosh.Token(woosh.NAME, 'if', 417, 12, 417, 14),
woosh.Token(woosh.NAME, 'followlinks', 417, 15, 417, 26),
woosh.Token(woosh.NAME, 'or', 417, 27, 417, 29),
woosh.Token(woosh.NAME, 'not', 417, 30, 417, 33),
woosh.Token(woosh.NAME, 'islink', 417, 34, 417, 40),
woosh.Token(woosh.OP, '(', 417, 40, 417, 41),
woosh.Token(woosh.NAME, 'new_path', 417, 41, 417, 49),
woosh.Token(woosh.OP, ')', 417, 49, 417, 50),
woosh.Token(woosh.OP, ':', 417, 50, 417, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 417, 51, 418, 0),
woosh.Token(woosh.INDENT, '                ', 418, 0, 418, 16),
woosh.Token(woosh.NAME, 'yield', 418, 16, 418, 21),
woosh.Token(woosh.NAME, 'from', 418, 22, 418, 26),
woosh.Token(woosh.NAME, '_walk', 418, 27, 418, 32),
woosh.Token(woosh.OP, '(', 418, 32, 418, 33),
woosh.Token(woosh.NAME, 'new_path', 418, 33, 418, 41),
woosh.Token(woosh.OP, ',', 418, 41, 418, 42),
woosh.Token(woosh.NAME, 'topdown', 418, 43, 418, 50),
woosh.Token(woosh.OP, ',', 418, 50, 418, 51),
woosh.Token(woosh.NAME, 'onerror', 418, 52, 418, 59),
woosh.Token(woosh.OP, ',', 418, 59, 418, 60),
woosh.Token(woosh.NAME, 'followlinks', 418, 61, 418, 72),
woosh.Token(woosh.OP, ')', 418, 72, 418, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 418, 73, 419, 0),
woosh.Token(woosh.DEDENT, '    ', 419, 0, 419, 4),
woosh.Token(woosh.DEDENT, '', 419, 4, 419, 4),
woosh.Token(woosh.DEDENT, '', 419, 4, 419, 4),
woosh.Token(woosh.NAME, 'else', 419, 4, 419, 8),
woosh.Token(woosh.OP, ':', 419, 8, 419, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 419, 9, 420, 0),
woosh.Token(woosh.COMMENT, '# Recurse into sub-directories', 420, 8, 420, 38),
woosh.Token(woosh.INDENT, '        ', 421, 0, 421, 8),
woosh.Token(woosh.NAME, 'for', 421, 8, 421, 11),
woosh.Token(woosh.NAME, 'new_path', 421, 12, 421, 20),
woosh.Token(woosh.NAME, 'in', 421, 21, 421, 23),
woosh.Token(woosh.NAME, 'walk_dirs', 421, 24, 421, 33),
woosh.Token(woosh.OP, ':', 421, 33, 421, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 34, 422, 0),
woosh.Token(woosh.INDENT, '            ', 422, 0, 422, 12),
woosh.Token(woosh.NAME, 'yield', 422, 12, 422, 17),
woosh.Token(woosh.NAME, 'from', 422, 18, 422, 22),
woosh.Token(woosh.NAME, '_walk', 422, 23, 422, 28),
woosh.Token(woosh.OP, '(', 422, 28, 422, 29),
woosh.Token(woosh.NAME, 'new_path', 422, 29, 422, 37),
woosh.Token(woosh.OP, ',', 422, 37, 422, 38),
woosh.Token(woosh.NAME, 'topdown', 422, 39, 422, 46),
woosh.Token(woosh.OP, ',', 422, 46, 422, 47),
woosh.Token(woosh.NAME, 'onerror', 422, 48, 422, 55),
woosh.Token(woosh.OP, ',', 422, 55, 422, 56),
woosh.Token(woosh.NAME, 'followlinks', 422, 57, 422, 68),
woosh.Token(woosh.OP, ')', 422, 68, 422, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 69, 423, 0),
woosh.Token(woosh.COMMENT, '# Yield after recursion if going bottom up', 423, 8, 423, 50),
woosh.Token(woosh.DEDENT, '        ', 424, 0, 424, 8),
woosh.Token(woosh.NAME, 'yield', 424, 8, 424, 13),
woosh.Token(woosh.NAME, 'top', 424, 14, 424, 17),
woosh.Token(woosh.OP, ',', 424, 17, 424, 18),
woosh.Token(woosh.NAME, 'dirs', 424, 19, 424, 23),
woosh.Token(woosh.OP, ',', 424, 23, 424, 24),
woosh.Token(woosh.NAME, 'nondirs', 424, 25, 424, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 32, 425, 0),
woosh.Token(woosh.DEDENT, '', 426, 0, 426, 0),
woosh.Token(woosh.DEDENT, '', 426, 0, 426, 0),
woosh.Token(woosh.NAME, '__all__', 426, 0, 426, 7),
woosh.Token(woosh.OP, '.', 426, 7, 426, 8),
woosh.Token(woosh.NAME, 'append', 426, 8, 426, 14),
woosh.Token(woosh.OP, '(', 426, 14, 426, 15),
woosh.Token(woosh.STRING, '"walk"', 426, 15, 426, 21),
woosh.Token(woosh.OP, ')', 426, 21, 426, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 22, 427, 0),
woosh.Token(woosh.NAME, 'if', 428, 0, 428, 2),
woosh.Token(woosh.OP, '{', 428, 3, 428, 4),
woosh.Token(woosh.NAME, 'open', 428, 4, 428, 8),
woosh.Token(woosh.OP, ',', 428, 8, 428, 9),
woosh.Token(woosh.NAME, 'stat', 428, 10, 428, 14),
woosh.Token(woosh.OP, '}', 428, 14, 428, 15),
woosh.Token(woosh.OP, '<=', 428, 16, 428, 18),
woosh.Token(woosh.NAME, 'supports_dir_fd', 428, 19, 428, 34),
woosh.Token(woosh.NAME, 'and', 428, 35, 428, 38),
woosh.Token(woosh.OP, '{', 428, 39, 428, 40),
woosh.Token(woosh.NAME, 'scandir', 428, 40, 428, 47),
woosh.Token(woosh.OP, ',', 428, 47, 428, 48),
woosh.Token(woosh.NAME, 'stat', 428, 49, 428, 53),
woosh.Token(woosh.OP, '}', 428, 53, 428, 54),
woosh.Token(woosh.OP, '<=', 428, 55, 428, 57),
woosh.Token(woosh.NAME, 'supports_fd', 428, 58, 428, 69),
woosh.Token(woosh.OP, ':', 428, 69, 428, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 428, 70, 429, 0),
woosh.Token(woosh.INDENT, '    ', 430, 0, 430, 4),
woosh.Token(woosh.NAME, 'def', 430, 4, 430, 7),
woosh.Token(woosh.NAME, 'fwalk', 430, 8, 430, 13),
woosh.Token(woosh.OP, '(', 430, 13, 430, 14),
woosh.Token(woosh.NAME, 'top', 430, 14, 430, 17),
woosh.Token(woosh.OP, '=', 430, 17, 430, 18),
woosh.Token(woosh.STRING, '"."', 430, 18, 430, 21),
woosh.Token(woosh.OP, ',', 430, 21, 430, 22),
woosh.Token(woosh.NAME, 'topdown', 430, 23, 430, 30),
woosh.Token(woosh.OP, '=', 430, 30, 430, 31),
woosh.Token(woosh.NAME, 'True', 430, 31, 430, 35),
woosh.Token(woosh.OP, ',', 430, 35, 430, 36),
woosh.Token(woosh.NAME, 'onerror', 430, 37, 430, 44),
woosh.Token(woosh.OP, '=', 430, 44, 430, 45),
woosh.Token(woosh.NAME, 'None', 430, 45, 430, 49),
woosh.Token(woosh.OP, ',', 430, 49, 430, 50),
woosh.Token(woosh.OP, '*', 430, 51, 430, 52),
woosh.Token(woosh.OP, ',', 430, 52, 430, 53),
woosh.Token(woosh.NAME, 'follow_symlinks', 430, 54, 430, 69),
woosh.Token(woosh.OP, '=', 430, 69, 430, 70),
woosh.Token(woosh.NAME, 'False', 430, 70, 430, 75),
woosh.Token(woosh.OP, ',', 430, 75, 430, 76),
woosh.Token(woosh.NAME, 'dir_fd', 430, 77, 430, 83),
woosh.Token(woosh.OP, '=', 430, 83, 430, 84),
woosh.Token(woosh.NAME, 'None', 430, 84, 430, 88),
woosh.Token(woosh.OP, ')', 430, 88, 430, 89),
woosh.Token(woosh.OP, ':', 430, 89, 430, 90),
woosh.Token(woosh.NEWLINE, '\r\n', 430, 90, 431, 0),
woosh.Token(woosh.INDENT, '        ', 431, 0, 431, 8),
woosh.Token(woosh.STRING, '"""Directory tree generator.\r\n\r\n        This behaves exactly like walk(), except that it yields a 4-tuple\r\n\r\n            dirpath, dirnames, filenames, dirfd\r\n\r\n        `dirpath`, `dirnames` and `filenames` are identical to walk() output,\r\n        and `dirfd` is a file descriptor referring to the directory `dirpath`.\r\n\r\n        The advantage of fwalk() over walk() is that it\'s safe against symlink\r\n        races (when follow_symlinks is False).\r\n\r\n        If dir_fd is not None, it should be a file descriptor open to a directory,\r\n          and top should be relative; top will then be relative to that directory.\r\n          (dir_fd is always supported for fwalk.)\r\n\r\n        Caution:\r\n        Since fwalk() yields file descriptors, those are only valid until the\r\n        next iteration step, so you should dup() them if you want to keep them\r\n        for a longer period.\r\n\r\n        Example:\r\n\r\n        import os\r\n        for root, dirs, files, rootfd in os.fwalk(\'python/Lib/email\'):\r\n            print(root, "consumes", end="")\r\n            print(sum(os.stat(name, dir_fd=rootfd).st_size for name in files),\r\n                  end="")\r\n            print("bytes in", len(files), "non-directory files")\r\n            if \'CVS\' in dirs:\r\n                dirs.remove(\'CVS\')  # don\'t visit CVS directories\r\n        """', 431, 8, 462, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 11, 463, 0),
woosh.Token(woosh.NAME, 'sys', 463, 8, 463, 11),
woosh.Token(woosh.OP, '.', 463, 11, 463, 12),
woosh.Token(woosh.NAME, 'audit', 463, 12, 463, 17),
woosh.Token(woosh.OP, '(', 463, 17, 463, 18),
woosh.Token(woosh.STRING, '"os.fwalk"', 463, 18, 463, 28),
woosh.Token(woosh.OP, ',', 463, 28, 463, 29),
woosh.Token(woosh.NAME, 'top', 463, 30, 463, 33),
woosh.Token(woosh.OP, ',', 463, 33, 463, 34),
woosh.Token(woosh.NAME, 'topdown', 463, 35, 463, 42),
woosh.Token(woosh.OP, ',', 463, 42, 463, 43),
woosh.Token(woosh.NAME, 'onerror', 463, 44, 463, 51),
woosh.Token(woosh.OP, ',', 463, 51, 463, 52),
woosh.Token(woosh.NAME, 'follow_symlinks', 463, 53, 463, 68),
woosh.Token(woosh.OP, ',', 463, 68, 463, 69),
woosh.Token(woosh.NAME, 'dir_fd', 463, 70, 463, 76),
woosh.Token(woosh.OP, ')', 463, 76, 463, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 77, 464, 0),
woosh.Token(woosh.NAME, 'if', 464, 8, 464, 10),
woosh.Token(woosh.NAME, 'not', 464, 11, 464, 14),
woosh.Token(woosh.NAME, 'isinstance', 464, 15, 464, 25),
woosh.Token(woosh.OP, '(', 464, 25, 464, 26),
woosh.Token(woosh.NAME, 'top', 464, 26, 464, 29),
woosh.Token(woosh.OP, ',', 464, 29, 464, 30),
woosh.Token(woosh.NAME, 'int', 464, 31, 464, 34),
woosh.Token(woosh.OP, ')', 464, 34, 464, 35),
woosh.Token(woosh.NAME, 'or', 464, 36, 464, 38),
woosh.Token(woosh.NAME, 'not', 464, 39, 464, 42),
woosh.Token(woosh.NAME, 'hasattr', 464, 43, 464, 50),
woosh.Token(woosh.OP, '(', 464, 50, 464, 51),
woosh.Token(woosh.NAME, 'top', 464, 51, 464, 54),
woosh.Token(woosh.OP, ',', 464, 54, 464, 55),
woosh.Token(woosh.STRING, "'__index__'", 464, 56, 464, 67),
woosh.Token(woosh.OP, ')', 464, 67, 464, 68),
woosh.Token(woosh.OP, ':', 464, 68, 464, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 69, 465, 0),
woosh.Token(woosh.INDENT, '            ', 465, 0, 465, 12),
woosh.Token(woosh.NAME, 'top', 465, 12, 465, 15),
woosh.Token(woosh.OP, '=', 465, 16, 465, 17),
woosh.Token(woosh.NAME, 'fspath', 465, 18, 465, 24),
woosh.Token(woosh.OP, '(', 465, 24, 465, 25),
woosh.Token(woosh.NAME, 'top', 465, 25, 465, 28),
woosh.Token(woosh.OP, ')', 465, 28, 465, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 465, 29, 466, 0),
woosh.Token(woosh.COMMENT, '# Note: To guard against symlink races, we use the standard', 466, 8, 466, 67),
woosh.Token(woosh.COMMENT, '# lstat()/open()/fstat() trick.', 467, 8, 467, 39),
woosh.Token(woosh.DEDENT, '        ', 468, 0, 468, 8),
woosh.Token(woosh.NAME, 'if', 468, 8, 468, 10),
woosh.Token(woosh.NAME, 'not', 468, 11, 468, 14),
woosh.Token(woosh.NAME, 'follow_symlinks', 468, 15, 468, 30),
woosh.Token(woosh.OP, ':', 468, 30, 468, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 468, 31, 469, 0),
woosh.Token(woosh.INDENT, '            ', 469, 0, 469, 12),
woosh.Token(woosh.NAME, 'orig_st', 469, 12, 469, 19),
woosh.Token(woosh.OP, '=', 469, 20, 469, 21),
woosh.Token(woosh.NAME, 'stat', 469, 22, 469, 26),
woosh.Token(woosh.OP, '(', 469, 26, 469, 27),
woosh.Token(woosh.NAME, 'top', 469, 27, 469, 30),
woosh.Token(woosh.OP, ',', 469, 30, 469, 31),
woosh.Token(woosh.NAME, 'follow_symlinks', 469, 32, 469, 47),
woosh.Token(woosh.OP, '=', 469, 47, 469, 48),
woosh.Token(woosh.NAME, 'False', 469, 48, 469, 53),
woosh.Token(woosh.OP, ',', 469, 53, 469, 54),
woosh.Token(woosh.NAME, 'dir_fd', 469, 55, 469, 61),
woosh.Token(woosh.OP, '=', 469, 61, 469, 62),
woosh.Token(woosh.NAME, 'dir_fd', 469, 62, 469, 68),
woosh.Token(woosh.OP, ')', 469, 68, 469, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 469, 69, 470, 0),
woosh.Token(woosh.DEDENT, '        ', 470, 0, 470, 8),
woosh.Token(woosh.NAME, 'topfd', 470, 8, 470, 13),
woosh.Token(woosh.OP, '=', 470, 14, 470, 15),
woosh.Token(woosh.NAME, 'open', 470, 16, 470, 20),
woosh.Token(woosh.OP, '(', 470, 20, 470, 21),
woosh.Token(woosh.NAME, 'top', 470, 21, 470, 24),
woosh.Token(woosh.OP, ',', 470, 24, 470, 25),
woosh.Token(woosh.NAME, 'O_RDONLY', 470, 26, 470, 34),
woosh.Token(woosh.OP, ',', 470, 34, 470, 35),
woosh.Token(woosh.NAME, 'dir_fd', 470, 36, 470, 42),
woosh.Token(woosh.OP, '=', 470, 42, 470, 43),
woosh.Token(woosh.NAME, 'dir_fd', 470, 43, 470, 49),
woosh.Token(woosh.OP, ')', 470, 49, 470, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 50, 471, 0),
woosh.Token(woosh.NAME, 'try', 471, 8, 471, 11),
woosh.Token(woosh.OP, ':', 471, 11, 471, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 471, 12, 472, 0),
woosh.Token(woosh.INDENT, '            ', 472, 0, 472, 12),
woosh.Token(woosh.NAME, 'if', 472, 12, 472, 14),
woosh.Token(woosh.OP, '(', 472, 15, 472, 16),
woosh.Token(woosh.NAME, 'follow_symlinks', 472, 16, 472, 31),
woosh.Token(woosh.NAME, 'or', 472, 32, 472, 34),
woosh.Token(woosh.OP, '(', 472, 35, 472, 36),
woosh.Token(woosh.NAME, 'st', 472, 36, 472, 38),
woosh.Token(woosh.OP, '.', 472, 38, 472, 39),
woosh.Token(woosh.NAME, 'S_ISDIR', 472, 39, 472, 46),
woosh.Token(woosh.OP, '(', 472, 46, 472, 47),
woosh.Token(woosh.NAME, 'orig_st', 472, 47, 472, 54),
woosh.Token(woosh.OP, '.', 472, 54, 472, 55),
woosh.Token(woosh.NAME, 'st_mode', 472, 55, 472, 62),
woosh.Token(woosh.OP, ')', 472, 62, 472, 63),
woosh.Token(woosh.NAME, 'and', 472, 64, 472, 67),
woosh.Token(woosh.NAME, 'path', 473, 36, 473, 40),
woosh.Token(woosh.OP, '.', 473, 40, 473, 41),
woosh.Token(woosh.NAME, 'samestat', 473, 41, 473, 49),
woosh.Token(woosh.OP, '(', 473, 49, 473, 50),
woosh.Token(woosh.NAME, 'orig_st', 473, 50, 473, 57),
woosh.Token(woosh.OP, ',', 473, 57, 473, 58),
woosh.Token(woosh.NAME, 'stat', 473, 59, 473, 63),
woosh.Token(woosh.OP, '(', 473, 63, 473, 64),
woosh.Token(woosh.NAME, 'topfd', 473, 64, 473, 69),
woosh.Token(woosh.OP, ')', 473, 69, 473, 70),
woosh.Token(woosh.OP, ')', 473, 70, 473, 71),
woosh.Token(woosh.OP, ')', 473, 71, 473, 72),
woosh.Token(woosh.OP, ')', 473, 72, 473, 73),
woosh.Token(woosh.OP, ':', 473, 73, 473, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 473, 74, 474, 0),
woosh.Token(woosh.INDENT, '                ', 474, 0, 474, 16),
woosh.Token(woosh.NAME, 'yield', 474, 16, 474, 21),
woosh.Token(woosh.NAME, 'from', 474, 22, 474, 26),
woosh.Token(woosh.NAME, '_fwalk', 474, 27, 474, 33),
woosh.Token(woosh.OP, '(', 474, 33, 474, 34),
woosh.Token(woosh.NAME, 'topfd', 474, 34, 474, 39),
woosh.Token(woosh.OP, ',', 474, 39, 474, 40),
woosh.Token(woosh.NAME, 'top', 474, 41, 474, 44),
woosh.Token(woosh.OP, ',', 474, 44, 474, 45),
woosh.Token(woosh.NAME, 'isinstance', 474, 46, 474, 56),
woosh.Token(woosh.OP, '(', 474, 56, 474, 57),
woosh.Token(woosh.NAME, 'top', 474, 57, 474, 60),
woosh.Token(woosh.OP, ',', 474, 60, 474, 61),
woosh.Token(woosh.NAME, 'bytes', 474, 62, 474, 67),
woosh.Token(woosh.OP, ')', 474, 67, 474, 68),
woosh.Token(woosh.OP, ',', 474, 68, 474, 69),
woosh.Token(woosh.NAME, 'topdown', 475, 34, 475, 41),
woosh.Token(woosh.OP, ',', 475, 41, 475, 42),
woosh.Token(woosh.NAME, 'onerror', 475, 43, 475, 50),
woosh.Token(woosh.OP, ',', 475, 50, 475, 51),
woosh.Token(woosh.NAME, 'follow_symlinks', 475, 52, 475, 67),
woosh.Token(woosh.OP, ')', 475, 67, 475, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 68, 476, 0),
woosh.Token(woosh.DEDENT, '        ', 476, 0, 476, 8),
woosh.Token(woosh.DEDENT, '', 476, 8, 476, 8),
woosh.Token(woosh.NAME, 'finally', 476, 8, 476, 15),
woosh.Token(woosh.OP, ':', 476, 15, 476, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 476, 16, 477, 0),
woosh.Token(woosh.INDENT, '            ', 477, 0, 477, 12),
woosh.Token(woosh.NAME, 'close', 477, 12, 477, 17),
woosh.Token(woosh.OP, '(', 477, 17, 477, 18),
woosh.Token(woosh.NAME, 'topfd', 477, 18, 477, 23),
woosh.Token(woosh.OP, ')', 477, 23, 477, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 24, 478, 0),
woosh.Token(woosh.DEDENT, '    ', 479, 0, 479, 4),
woosh.Token(woosh.DEDENT, '', 479, 4, 479, 4),
woosh.Token(woosh.NAME, 'def', 479, 4, 479, 7),
woosh.Token(woosh.NAME, '_fwalk', 479, 8, 479, 14),
woosh.Token(woosh.OP, '(', 479, 14, 479, 15),
woosh.Token(woosh.NAME, 'topfd', 479, 15, 479, 20),
woosh.Token(woosh.OP, ',', 479, 20, 479, 21),
woosh.Token(woosh.NAME, 'toppath', 479, 22, 479, 29),
woosh.Token(woosh.OP, ',', 479, 29, 479, 30),
woosh.Token(woosh.NAME, 'isbytes', 479, 31, 479, 38),
woosh.Token(woosh.OP, ',', 479, 38, 479, 39),
woosh.Token(woosh.NAME, 'topdown', 479, 40, 479, 47),
woosh.Token(woosh.OP, ',', 479, 47, 479, 48),
woosh.Token(woosh.NAME, 'onerror', 479, 49, 479, 56),
woosh.Token(woosh.OP, ',', 479, 56, 479, 57),
woosh.Token(woosh.NAME, 'follow_symlinks', 479, 58, 479, 73),
woosh.Token(woosh.OP, ')', 479, 73, 479, 74),
woosh.Token(woosh.OP, ':', 479, 74, 479, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 75, 480, 0),
woosh.Token(woosh.COMMENT, '# Note: This uses O(depth of the directory tree) file descriptors: if', 480, 8, 480, 77),
woosh.Token(woosh.COMMENT, '# necessary, it can be adapted to only require O(1) FDs, see issue', 481, 8, 481, 74),
woosh.Token(woosh.COMMENT, '# #13734.', 482, 8, 482, 17),
woosh.Token(woosh.INDENT, '        ', 484, 0, 484, 8),
woosh.Token(woosh.NAME, 'scandir_it', 484, 8, 484, 18),
woosh.Token(woosh.OP, '=', 484, 19, 484, 20),
woosh.Token(woosh.NAME, 'scandir', 484, 21, 484, 28),
woosh.Token(woosh.OP, '(', 484, 28, 484, 29),
woosh.Token(woosh.NAME, 'topfd', 484, 29, 484, 34),
woosh.Token(woosh.OP, ')', 484, 34, 484, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 35, 485, 0),
woosh.Token(woosh.NAME, 'dirs', 485, 8, 485, 12),
woosh.Token(woosh.OP, '=', 485, 13, 485, 14),
woosh.Token(woosh.OP, '[', 485, 15, 485, 16),
woosh.Token(woosh.OP, ']', 485, 16, 485, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 17, 486, 0),
woosh.Token(woosh.NAME, 'nondirs', 486, 8, 486, 15),
woosh.Token(woosh.OP, '=', 486, 16, 486, 17),
woosh.Token(woosh.OP, '[', 486, 18, 486, 19),
woosh.Token(woosh.OP, ']', 486, 19, 486, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 20, 487, 0),
woosh.Token(woosh.NAME, 'entries', 487, 8, 487, 15),
woosh.Token(woosh.OP, '=', 487, 16, 487, 17),
woosh.Token(woosh.NAME, 'None', 487, 18, 487, 22),
woosh.Token(woosh.NAME, 'if', 487, 23, 487, 25),
woosh.Token(woosh.NAME, 'topdown', 487, 26, 487, 33),
woosh.Token(woosh.NAME, 'or', 487, 34, 487, 36),
woosh.Token(woosh.NAME, 'follow_symlinks', 487, 37, 487, 52),
woosh.Token(woosh.NAME, 'else', 487, 53, 487, 57),
woosh.Token(woosh.OP, '[', 487, 58, 487, 59),
woosh.Token(woosh.OP, ']', 487, 59, 487, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 60, 488, 0),
woosh.Token(woosh.NAME, 'for', 488, 8, 488, 11),
woosh.Token(woosh.NAME, 'entry', 488, 12, 488, 17),
woosh.Token(woosh.NAME, 'in', 488, 18, 488, 20),
woosh.Token(woosh.NAME, 'scandir_it', 488, 21, 488, 31),
woosh.Token(woosh.OP, ':', 488, 31, 488, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 488, 32, 489, 0),
woosh.Token(woosh.INDENT, '            ', 489, 0, 489, 12),
woosh.Token(woosh.NAME, 'name', 489, 12, 489, 16),
woosh.Token(woosh.OP, '=', 489, 17, 489, 18),
woosh.Token(woosh.NAME, 'entry', 489, 19, 489, 24),
woosh.Token(woosh.OP, '.', 489, 24, 489, 25),
woosh.Token(woosh.NAME, 'name', 489, 25, 489, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 29, 490, 0),
woosh.Token(woosh.NAME, 'if', 490, 12, 490, 14),
woosh.Token(woosh.NAME, 'isbytes', 490, 15, 490, 22),
woosh.Token(woosh.OP, ':', 490, 22, 490, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 23, 491, 0),
woosh.Token(woosh.INDENT, '                ', 491, 0, 491, 16),
woosh.Token(woosh.NAME, 'name', 491, 16, 491, 20),
woosh.Token(woosh.OP, '=', 491, 21, 491, 22),
woosh.Token(woosh.NAME, 'fsencode', 491, 23, 491, 31),
woosh.Token(woosh.OP, '(', 491, 31, 491, 32),
woosh.Token(woosh.NAME, 'name', 491, 32, 491, 36),
woosh.Token(woosh.OP, ')', 491, 36, 491, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 37, 492, 0),
woosh.Token(woosh.DEDENT, '            ', 492, 0, 492, 12),
woosh.Token(woosh.NAME, 'try', 492, 12, 492, 15),
woosh.Token(woosh.OP, ':', 492, 15, 492, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 492, 16, 493, 0),
woosh.Token(woosh.INDENT, '                ', 493, 0, 493, 16),
woosh.Token(woosh.NAME, 'if', 493, 16, 493, 18),
woosh.Token(woosh.NAME, 'entry', 493, 19, 493, 24),
woosh.Token(woosh.OP, '.', 493, 24, 493, 25),
woosh.Token(woosh.NAME, 'is_dir', 493, 25, 493, 31),
woosh.Token(woosh.OP, '(', 493, 31, 493, 32),
woosh.Token(woosh.OP, ')', 493, 32, 493, 33),
woosh.Token(woosh.OP, ':', 493, 33, 493, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 493, 34, 494, 0),
woosh.Token(woosh.INDENT, '                    ', 494, 0, 494, 20),
woosh.Token(woosh.NAME, 'dirs', 494, 20, 494, 24),
woosh.Token(woosh.OP, '.', 494, 24, 494, 25),
woosh.Token(woosh.NAME, 'append', 494, 25, 494, 31),
woosh.Token(woosh.OP, '(', 494, 31, 494, 32),
woosh.Token(woosh.NAME, 'name', 494, 32, 494, 36),
woosh.Token(woosh.OP, ')', 494, 36, 494, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 494, 37, 495, 0),
woosh.Token(woosh.NAME, 'if', 495, 20, 495, 22),
woosh.Token(woosh.NAME, 'entries', 495, 23, 495, 30),
woosh.Token(woosh.NAME, 'is', 495, 31, 495, 33),
woosh.Token(woosh.NAME, 'not', 495, 34, 495, 37),
woosh.Token(woosh.NAME, 'None', 495, 38, 495, 42),
woosh.Token(woosh.OP, ':', 495, 42, 495, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 495, 43, 496, 0),
woosh.Token(woosh.INDENT, '                        ', 496, 0, 496, 24),
woosh.Token(woosh.NAME, 'entries', 496, 24, 496, 31),
woosh.Token(woosh.OP, '.', 496, 31, 496, 32),
woosh.Token(woosh.NAME, 'append', 496, 32, 496, 38),
woosh.Token(woosh.OP, '(', 496, 38, 496, 39),
woosh.Token(woosh.NAME, 'entry', 496, 39, 496, 44),
woosh.Token(woosh.OP, ')', 496, 44, 496, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 496, 45, 497, 0),
woosh.Token(woosh.DEDENT, '                ', 497, 0, 497, 16),
woosh.Token(woosh.DEDENT, '', 497, 16, 497, 16),
woosh.Token(woosh.NAME, 'else', 497, 16, 497, 20),
woosh.Token(woosh.OP, ':', 497, 20, 497, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 21, 498, 0),
woosh.Token(woosh.INDENT, '                    ', 498, 0, 498, 20),
woosh.Token(woosh.NAME, 'nondirs', 498, 20, 498, 27),
woosh.Token(woosh.OP, '.', 498, 27, 498, 28),
woosh.Token(woosh.NAME, 'append', 498, 28, 498, 34),
woosh.Token(woosh.OP, '(', 498, 34, 498, 35),
woosh.Token(woosh.NAME, 'name', 498, 35, 498, 39),
woosh.Token(woosh.OP, ')', 498, 39, 498, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 40, 499, 0),
woosh.Token(woosh.DEDENT, '            ', 499, 0, 499, 12),
woosh.Token(woosh.DEDENT, '', 499, 12, 499, 12),
woosh.Token(woosh.NAME, 'except', 499, 12, 499, 18),
woosh.Token(woosh.NAME, 'OSError', 499, 19, 499, 26),
woosh.Token(woosh.OP, ':', 499, 26, 499, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 27, 500, 0),
woosh.Token(woosh.INDENT, '                ', 500, 0, 500, 16),
woosh.Token(woosh.NAME, 'try', 500, 16, 500, 19),
woosh.Token(woosh.OP, ':', 500, 19, 500, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 20, 501, 0),
woosh.Token(woosh.COMMENT, '# Add dangling symlinks, ignore disappeared files', 501, 20, 501, 69),
woosh.Token(woosh.INDENT, '                    ', 502, 0, 502, 20),
woosh.Token(woosh.NAME, 'if', 502, 20, 502, 22),
woosh.Token(woosh.NAME, 'entry', 502, 23, 502, 28),
woosh.Token(woosh.OP, '.', 502, 28, 502, 29),
woosh.Token(woosh.NAME, 'is_symlink', 502, 29, 502, 39),
woosh.Token(woosh.OP, '(', 502, 39, 502, 40),
woosh.Token(woosh.OP, ')', 502, 40, 502, 41),
woosh.Token(woosh.OP, ':', 502, 41, 502, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 42, 503, 0),
woosh.Token(woosh.INDENT, '                        ', 503, 0, 503, 24),
woosh.Token(woosh.NAME, 'nondirs', 503, 24, 503, 31),
woosh.Token(woosh.OP, '.', 503, 31, 503, 32),
woosh.Token(woosh.NAME, 'append', 503, 32, 503, 38),
woosh.Token(woosh.OP, '(', 503, 38, 503, 39),
woosh.Token(woosh.NAME, 'name', 503, 39, 503, 43),
woosh.Token(woosh.OP, ')', 503, 43, 503, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 503, 44, 504, 0),
woosh.Token(woosh.DEDENT, '                ', 504, 0, 504, 16),
woosh.Token(woosh.DEDENT, '', 504, 16, 504, 16),
woosh.Token(woosh.NAME, 'except', 504, 16, 504, 22),
woosh.Token(woosh.NAME, 'OSError', 504, 23, 504, 30),
woosh.Token(woosh.OP, ':', 504, 30, 504, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 504, 31, 505, 0),
woosh.Token(woosh.INDENT, '                    ', 505, 0, 505, 20),
woosh.Token(woosh.NAME, 'pass', 505, 20, 505, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 24, 506, 0),
woosh.Token(woosh.DEDENT, '        ', 507, 0, 507, 8),
woosh.Token(woosh.DEDENT, '', 507, 8, 507, 8),
woosh.Token(woosh.DEDENT, '', 507, 8, 507, 8),
woosh.Token(woosh.NAME, 'if', 507, 8, 507, 10),
woosh.Token(woosh.NAME, 'topdown', 507, 11, 507, 18),
woosh.Token(woosh.OP, ':', 507, 18, 507, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 507, 19, 508, 0),
woosh.Token(woosh.INDENT, '            ', 508, 0, 508, 12),
woosh.Token(woosh.NAME, 'yield', 508, 12, 508, 17),
woosh.Token(woosh.NAME, 'toppath', 508, 18, 508, 25),
woosh.Token(woosh.OP, ',', 508, 25, 508, 26),
woosh.Token(woosh.NAME, 'dirs', 508, 27, 508, 31),
woosh.Token(woosh.OP, ',', 508, 31, 508, 32),
woosh.Token(woosh.NAME, 'nondirs', 508, 33, 508, 40),
woosh.Token(woosh.OP, ',', 508, 40, 508, 41),
woosh.Token(woosh.NAME, 'topfd', 508, 42, 508, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 508, 47, 509, 0),
woosh.Token(woosh.DEDENT, '        ', 510, 0, 510, 8),
woosh.Token(woosh.NAME, 'for', 510, 8, 510, 11),
woosh.Token(woosh.NAME, 'name', 510, 12, 510, 16),
woosh.Token(woosh.NAME, 'in', 510, 17, 510, 19),
woosh.Token(woosh.NAME, 'dirs', 510, 20, 510, 24),
woosh.Token(woosh.NAME, 'if', 510, 25, 510, 27),
woosh.Token(woosh.NAME, 'entries', 510, 28, 510, 35),
woosh.Token(woosh.NAME, 'is', 510, 36, 510, 38),
woosh.Token(woosh.NAME, 'None', 510, 39, 510, 43),
woosh.Token(woosh.NAME, 'else', 510, 44, 510, 48),
woosh.Token(woosh.NAME, 'zip', 510, 49, 510, 52),
woosh.Token(woosh.OP, '(', 510, 52, 510, 53),
woosh.Token(woosh.NAME, 'dirs', 510, 53, 510, 57),
woosh.Token(woosh.OP, ',', 510, 57, 510, 58),
woosh.Token(woosh.NAME, 'entries', 510, 59, 510, 66),
woosh.Token(woosh.OP, ')', 510, 66, 510, 67),
woosh.Token(woosh.OP, ':', 510, 67, 510, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 510, 68, 511, 0),
woosh.Token(woosh.INDENT, '            ', 511, 0, 511, 12),
woosh.Token(woosh.NAME, 'try', 511, 12, 511, 15),
woosh.Token(woosh.OP, ':', 511, 15, 511, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 16, 512, 0),
woosh.Token(woosh.INDENT, '                ', 512, 0, 512, 16),
woosh.Token(woosh.NAME, 'if', 512, 16, 512, 18),
woosh.Token(woosh.NAME, 'not', 512, 19, 512, 22),
woosh.Token(woosh.NAME, 'follow_symlinks', 512, 23, 512, 38),
woosh.Token(woosh.OP, ':', 512, 38, 512, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 512, 39, 513, 0),
woosh.Token(woosh.INDENT, '                    ', 513, 0, 513, 20),
woosh.Token(woosh.NAME, 'if', 513, 20, 513, 22),
woosh.Token(woosh.NAME, 'topdown', 513, 23, 513, 30),
woosh.Token(woosh.OP, ':', 513, 30, 513, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 513, 31, 514, 0),
woosh.Token(woosh.INDENT, '                        ', 514, 0, 514, 24),
woosh.Token(woosh.NAME, 'orig_st', 514, 24, 514, 31),
woosh.Token(woosh.OP, '=', 514, 32, 514, 33),
woosh.Token(woosh.NAME, 'stat', 514, 34, 514, 38),
woosh.Token(woosh.OP, '(', 514, 38, 514, 39),
woosh.Token(woosh.NAME, 'name', 514, 39, 514, 43),
woosh.Token(woosh.OP, ',', 514, 43, 514, 44),
woosh.Token(woosh.NAME, 'dir_fd', 514, 45, 514, 51),
woosh.Token(woosh.OP, '=', 514, 51, 514, 52),
woosh.Token(woosh.NAME, 'topfd', 514, 52, 514, 57),
woosh.Token(woosh.OP, ',', 514, 57, 514, 58),
woosh.Token(woosh.NAME, 'follow_symlinks', 514, 59, 514, 74),
woosh.Token(woosh.OP, '=', 514, 74, 514, 75),
woosh.Token(woosh.NAME, 'False', 514, 75, 514, 80),
woosh.Token(woosh.OP, ')', 514, 80, 514, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 81, 515, 0),
woosh.Token(woosh.DEDENT, '                    ', 515, 0, 515, 20),
woosh.Token(woosh.NAME, 'else', 515, 20, 515, 24),
woosh.Token(woosh.OP, ':', 515, 24, 515, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 515, 25, 516, 0),
woosh.Token(woosh.INDENT, '                        ', 516, 0, 516, 24),
woosh.Token(woosh.NAME, 'assert', 516, 24, 516, 30),
woosh.Token(woosh.NAME, 'entries', 516, 31, 516, 38),
woosh.Token(woosh.NAME, 'is', 516, 39, 516, 41),
woosh.Token(woosh.NAME, 'not', 516, 42, 516, 45),
woosh.Token(woosh.NAME, 'None', 516, 46, 516, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 516, 50, 517, 0),
woosh.Token(woosh.NAME, 'name', 517, 24, 517, 28),
woosh.Token(woosh.OP, ',', 517, 28, 517, 29),
woosh.Token(woosh.NAME, 'entry', 517, 30, 517, 35),
woosh.Token(woosh.OP, '=', 517, 36, 517, 37),
woosh.Token(woosh.NAME, 'name', 517, 38, 517, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 517, 42, 518, 0),
woosh.Token(woosh.NAME, 'orig_st', 518, 24, 518, 31),
woosh.Token(woosh.OP, '=', 518, 32, 518, 33),
woosh.Token(woosh.NAME, 'entry', 518, 34, 518, 39),
woosh.Token(woosh.OP, '.', 518, 39, 518, 40),
woosh.Token(woosh.NAME, 'stat', 518, 40, 518, 44),
woosh.Token(woosh.OP, '(', 518, 44, 518, 45),
woosh.Token(woosh.NAME, 'follow_symlinks', 518, 45, 518, 60),
woosh.Token(woosh.OP, '=', 518, 60, 518, 61),
woosh.Token(woosh.NAME, 'False', 518, 61, 518, 66),
woosh.Token(woosh.OP, ')', 518, 66, 518, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 518, 67, 519, 0),
woosh.Token(woosh.DEDENT, '                ', 519, 0, 519, 16),
woosh.Token(woosh.DEDENT, '', 519, 16, 519, 16),
woosh.Token(woosh.NAME, 'dirfd', 519, 16, 519, 21),
woosh.Token(woosh.OP, '=', 519, 22, 519, 23),
woosh.Token(woosh.NAME, 'open', 519, 24, 519, 28),
woosh.Token(woosh.OP, '(', 519, 28, 519, 29),
woosh.Token(woosh.NAME, 'name', 519, 29, 519, 33),
woosh.Token(woosh.OP, ',', 519, 33, 519, 34),
woosh.Token(woosh.NAME, 'O_RDONLY', 519, 35, 519, 43),
woosh.Token(woosh.OP, ',', 519, 43, 519, 44),
woosh.Token(woosh.NAME, 'dir_fd', 519, 45, 519, 51),
woosh.Token(woosh.OP, '=', 519, 51, 519, 52),
woosh.Token(woosh.NAME, 'topfd', 519, 52, 519, 57),
woosh.Token(woosh.OP, ')', 519, 57, 519, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 58, 520, 0),
woosh.Token(woosh.DEDENT, '            ', 520, 0, 520, 12),
woosh.Token(woosh.NAME, 'except', 520, 12, 520, 18),
woosh.Token(woosh.NAME, 'OSError', 520, 19, 520, 26),
woosh.Token(woosh.NAME, 'as', 520, 27, 520, 29),
woosh.Token(woosh.NAME, 'err', 520, 30, 520, 33),
woosh.Token(woosh.OP, ':', 520, 33, 520, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 520, 34, 521, 0),
woosh.Token(woosh.INDENT, '                ', 521, 0, 521, 16),
woosh.Token(woosh.NAME, 'if', 521, 16, 521, 18),
woosh.Token(woosh.NAME, 'onerror', 521, 19, 521, 26),
woosh.Token(woosh.NAME, 'is', 521, 27, 521, 29),
woosh.Token(woosh.NAME, 'not', 521, 30, 521, 33),
woosh.Token(woosh.NAME, 'None', 521, 34, 521, 38),
woosh.Token(woosh.OP, ':', 521, 38, 521, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 521, 39, 522, 0),
woosh.Token(woosh.INDENT, '                    ', 522, 0, 522, 20),
woosh.Token(woosh.NAME, 'onerror', 522, 20, 522, 27),
woosh.Token(woosh.OP, '(', 522, 27, 522, 28),
woosh.Token(woosh.NAME, 'err', 522, 28, 522, 31),
woosh.Token(woosh.OP, ')', 522, 31, 522, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 32, 523, 0),
woosh.Token(woosh.DEDENT, '                ', 523, 0, 523, 16),
woosh.Token(woosh.NAME, 'continue', 523, 16, 523, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 523, 24, 524, 0),
woosh.Token(woosh.DEDENT, '            ', 524, 0, 524, 12),
woosh.Token(woosh.NAME, 'try', 524, 12, 524, 15),
woosh.Token(woosh.OP, ':', 524, 15, 524, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 524, 16, 525, 0),
woosh.Token(woosh.INDENT, '                ', 525, 0, 525, 16),
woosh.Token(woosh.NAME, 'if', 525, 16, 525, 18),
woosh.Token(woosh.NAME, 'follow_symlinks', 525, 19, 525, 34),
woosh.Token(woosh.NAME, 'or', 525, 35, 525, 37),
woosh.Token(woosh.NAME, 'path', 525, 38, 525, 42),
woosh.Token(woosh.OP, '.', 525, 42, 525, 43),
woosh.Token(woosh.NAME, 'samestat', 525, 43, 525, 51),
woosh.Token(woosh.OP, '(', 525, 51, 525, 52),
woosh.Token(woosh.NAME, 'orig_st', 525, 52, 525, 59),
woosh.Token(woosh.OP, ',', 525, 59, 525, 60),
woosh.Token(woosh.NAME, 'stat', 525, 61, 525, 65),
woosh.Token(woosh.OP, '(', 525, 65, 525, 66),
woosh.Token(woosh.NAME, 'dirfd', 525, 66, 525, 71),
woosh.Token(woosh.OP, ')', 525, 71, 525, 72),
woosh.Token(woosh.OP, ')', 525, 72, 525, 73),
woosh.Token(woosh.OP, ':', 525, 73, 525, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 74, 526, 0),
woosh.Token(woosh.INDENT, '                    ', 526, 0, 526, 20),
woosh.Token(woosh.NAME, 'dirpath', 526, 20, 526, 27),
woosh.Token(woosh.OP, '=', 526, 28, 526, 29),
woosh.Token(woosh.NAME, 'path', 526, 30, 526, 34),
woosh.Token(woosh.OP, '.', 526, 34, 526, 35),
woosh.Token(woosh.NAME, 'join', 526, 35, 526, 39),
woosh.Token(woosh.OP, '(', 526, 39, 526, 40),
woosh.Token(woosh.NAME, 'toppath', 526, 40, 526, 47),
woosh.Token(woosh.OP, ',', 526, 47, 526, 48),
woosh.Token(woosh.NAME, 'name', 526, 49, 526, 53),
woosh.Token(woosh.OP, ')', 526, 53, 526, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 54, 527, 0),
woosh.Token(woosh.NAME, 'yield', 527, 20, 527, 25),
woosh.Token(woosh.NAME, 'from', 527, 26, 527, 30),
woosh.Token(woosh.NAME, '_fwalk', 527, 31, 527, 37),
woosh.Token(woosh.OP, '(', 527, 37, 527, 38),
woosh.Token(woosh.NAME, 'dirfd', 527, 38, 527, 43),
woosh.Token(woosh.OP, ',', 527, 43, 527, 44),
woosh.Token(woosh.NAME, 'dirpath', 527, 45, 527, 52),
woosh.Token(woosh.OP, ',', 527, 52, 527, 53),
woosh.Token(woosh.NAME, 'isbytes', 527, 54, 527, 61),
woosh.Token(woosh.OP, ',', 527, 61, 527, 62),
woosh.Token(woosh.NAME, 'topdown', 528, 38, 528, 45),
woosh.Token(woosh.OP, ',', 528, 45, 528, 46),
woosh.Token(woosh.NAME, 'onerror', 528, 47, 528, 54),
woosh.Token(woosh.OP, ',', 528, 54, 528, 55),
woosh.Token(woosh.NAME, 'follow_symlinks', 528, 56, 528, 71),
woosh.Token(woosh.OP, ')', 528, 71, 528, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 72, 529, 0),
woosh.Token(woosh.DEDENT, '            ', 529, 0, 529, 12),
woosh.Token(woosh.DEDENT, '', 529, 12, 529, 12),
woosh.Token(woosh.NAME, 'finally', 529, 12, 529, 19),
woosh.Token(woosh.OP, ':', 529, 19, 529, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 20, 530, 0),
woosh.Token(woosh.INDENT, '                ', 530, 0, 530, 16),
woosh.Token(woosh.NAME, 'close', 530, 16, 530, 21),
woosh.Token(woosh.OP, '(', 530, 21, 530, 22),
woosh.Token(woosh.NAME, 'dirfd', 530, 22, 530, 27),
woosh.Token(woosh.OP, ')', 530, 27, 530, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 530, 28, 531, 0),
woosh.Token(woosh.DEDENT, '        ', 532, 0, 532, 8),
woosh.Token(woosh.DEDENT, '', 532, 8, 532, 8),
woosh.Token(woosh.NAME, 'if', 532, 8, 532, 10),
woosh.Token(woosh.NAME, 'not', 532, 11, 532, 14),
woosh.Token(woosh.NAME, 'topdown', 532, 15, 532, 22),
woosh.Token(woosh.OP, ':', 532, 22, 532, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 23, 533, 0),
woosh.Token(woosh.INDENT, '            ', 533, 0, 533, 12),
woosh.Token(woosh.NAME, 'yield', 533, 12, 533, 17),
woosh.Token(woosh.NAME, 'toppath', 533, 18, 533, 25),
woosh.Token(woosh.OP, ',', 533, 25, 533, 26),
woosh.Token(woosh.NAME, 'dirs', 533, 27, 533, 31),
woosh.Token(woosh.OP, ',', 533, 31, 533, 32),
woosh.Token(woosh.NAME, 'nondirs', 533, 33, 533, 40),
woosh.Token(woosh.OP, ',', 533, 40, 533, 41),
woosh.Token(woosh.NAME, 'topfd', 533, 42, 533, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 533, 47, 534, 0),
woosh.Token(woosh.DEDENT, '    ', 535, 0, 535, 4),
woosh.Token(woosh.DEDENT, '', 535, 4, 535, 4),
woosh.Token(woosh.NAME, '__all__', 535, 4, 535, 11),
woosh.Token(woosh.OP, '.', 535, 11, 535, 12),
woosh.Token(woosh.NAME, 'append', 535, 12, 535, 18),
woosh.Token(woosh.OP, '(', 535, 18, 535, 19),
woosh.Token(woosh.STRING, '"fwalk"', 535, 19, 535, 26),
woosh.Token(woosh.OP, ')', 535, 26, 535, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 27, 536, 0),
woosh.Token(woosh.DEDENT, '', 537, 0, 537, 0),
woosh.Token(woosh.NAME, 'def', 537, 0, 537, 3),
woosh.Token(woosh.NAME, 'execl', 537, 4, 537, 9),
woosh.Token(woosh.OP, '(', 537, 9, 537, 10),
woosh.Token(woosh.NAME, 'file', 537, 10, 537, 14),
woosh.Token(woosh.OP, ',', 537, 14, 537, 15),
woosh.Token(woosh.OP, '*', 537, 16, 537, 17),
woosh.Token(woosh.NAME, 'args', 537, 17, 537, 21),
woosh.Token(woosh.OP, ')', 537, 21, 537, 22),
woosh.Token(woosh.OP, ':', 537, 22, 537, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 537, 23, 538, 0),
woosh.Token(woosh.INDENT, '    ', 538, 0, 538, 4),
woosh.Token(woosh.STRING, '"""execl(file, *args)\r\n\r\n    Execute the executable file with argument list args, replacing the\r\n    current process. """', 538, 4, 541, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 541, 24, 542, 0),
woosh.Token(woosh.NAME, 'execv', 542, 4, 542, 9),
woosh.Token(woosh.OP, '(', 542, 9, 542, 10),
woosh.Token(woosh.NAME, 'file', 542, 10, 542, 14),
woosh.Token(woosh.OP, ',', 542, 14, 542, 15),
woosh.Token(woosh.NAME, 'args', 542, 16, 542, 20),
woosh.Token(woosh.OP, ')', 542, 20, 542, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 21, 543, 0),
woosh.Token(woosh.DEDENT, '', 544, 0, 544, 0),
woosh.Token(woosh.NAME, 'def', 544, 0, 544, 3),
woosh.Token(woosh.NAME, 'execle', 544, 4, 544, 10),
woosh.Token(woosh.OP, '(', 544, 10, 544, 11),
woosh.Token(woosh.NAME, 'file', 544, 11, 544, 15),
woosh.Token(woosh.OP, ',', 544, 15, 544, 16),
woosh.Token(woosh.OP, '*', 544, 17, 544, 18),
woosh.Token(woosh.NAME, 'args', 544, 18, 544, 22),
woosh.Token(woosh.OP, ')', 544, 22, 544, 23),
woosh.Token(woosh.OP, ':', 544, 23, 544, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 24, 545, 0),
woosh.Token(woosh.INDENT, '    ', 545, 0, 545, 4),
woosh.Token(woosh.STRING, '"""execle(file, *args, env)\r\n\r\n    Execute the executable file with argument list args and\r\n    environment env, replacing the current process. """', 545, 4, 548, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 55, 549, 0),
woosh.Token(woosh.NAME, 'env', 549, 4, 549, 7),
woosh.Token(woosh.OP, '=', 549, 8, 549, 9),
woosh.Token(woosh.NAME, 'args', 549, 10, 549, 14),
woosh.Token(woosh.OP, '[', 549, 14, 549, 15),
woosh.Token(woosh.OP, '-', 549, 15, 549, 16),
woosh.Token(woosh.NUMBER, '1', 549, 16, 549, 17),
woosh.Token(woosh.OP, ']', 549, 17, 549, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 549, 18, 550, 0),
woosh.Token(woosh.NAME, 'execve', 550, 4, 550, 10),
woosh.Token(woosh.OP, '(', 550, 10, 550, 11),
woosh.Token(woosh.NAME, 'file', 550, 11, 550, 15),
woosh.Token(woosh.OP, ',', 550, 15, 550, 16),
woosh.Token(woosh.NAME, 'args', 550, 17, 550, 21),
woosh.Token(woosh.OP, '[', 550, 21, 550, 22),
woosh.Token(woosh.OP, ':', 550, 22, 550, 23),
woosh.Token(woosh.OP, '-', 550, 23, 550, 24),
woosh.Token(woosh.NUMBER, '1', 550, 24, 550, 25),
woosh.Token(woosh.OP, ']', 550, 25, 550, 26),
woosh.Token(woosh.OP, ',', 550, 26, 550, 27),
woosh.Token(woosh.NAME, 'env', 550, 28, 550, 31),
woosh.Token(woosh.OP, ')', 550, 31, 550, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 550, 32, 551, 0),
woosh.Token(woosh.DEDENT, '', 552, 0, 552, 0),
woosh.Token(woosh.NAME, 'def', 552, 0, 552, 3),
woosh.Token(woosh.NAME, 'execlp', 552, 4, 552, 10),
woosh.Token(woosh.OP, '(', 552, 10, 552, 11),
woosh.Token(woosh.NAME, 'file', 552, 11, 552, 15),
woosh.Token(woosh.OP, ',', 552, 15, 552, 16),
woosh.Token(woosh.OP, '*', 552, 17, 552, 18),
woosh.Token(woosh.NAME, 'args', 552, 18, 552, 22),
woosh.Token(woosh.OP, ')', 552, 22, 552, 23),
woosh.Token(woosh.OP, ':', 552, 23, 552, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 552, 24, 553, 0),
woosh.Token(woosh.INDENT, '    ', 553, 0, 553, 4),
woosh.Token(woosh.STRING, '"""execlp(file, *args)\r\n\r\n    Execute the executable file (which is searched for along $PATH)\r\n    with argument list args, replacing the current process. """', 553, 4, 556, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 63, 557, 0),
woosh.Token(woosh.NAME, 'execvp', 557, 4, 557, 10),
woosh.Token(woosh.OP, '(', 557, 10, 557, 11),
woosh.Token(woosh.NAME, 'file', 557, 11, 557, 15),
woosh.Token(woosh.OP, ',', 557, 15, 557, 16),
woosh.Token(woosh.NAME, 'args', 557, 17, 557, 21),
woosh.Token(woosh.OP, ')', 557, 21, 557, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 22, 558, 0),
woosh.Token(woosh.DEDENT, '', 559, 0, 559, 0),
woosh.Token(woosh.NAME, 'def', 559, 0, 559, 3),
woosh.Token(woosh.NAME, 'execlpe', 559, 4, 559, 11),
woosh.Token(woosh.OP, '(', 559, 11, 559, 12),
woosh.Token(woosh.NAME, 'file', 559, 12, 559, 16),
woosh.Token(woosh.OP, ',', 559, 16, 559, 17),
woosh.Token(woosh.OP, '*', 559, 18, 559, 19),
woosh.Token(woosh.NAME, 'args', 559, 19, 559, 23),
woosh.Token(woosh.OP, ')', 559, 23, 559, 24),
woosh.Token(woosh.OP, ':', 559, 24, 559, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 559, 25, 560, 0),
woosh.Token(woosh.INDENT, '    ', 560, 0, 560, 4),
woosh.Token(woosh.STRING, '"""execlpe(file, *args, env)\r\n\r\n    Execute the executable file (which is searched for along $PATH)\r\n    with argument list args and environment env, replacing the current\r\n    process. """', 560, 4, 564, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 564, 16, 565, 0),
woosh.Token(woosh.NAME, 'env', 565, 4, 565, 7),
woosh.Token(woosh.OP, '=', 565, 8, 565, 9),
woosh.Token(woosh.NAME, 'args', 565, 10, 565, 14),
woosh.Token(woosh.OP, '[', 565, 14, 565, 15),
woosh.Token(woosh.OP, '-', 565, 15, 565, 16),
woosh.Token(woosh.NUMBER, '1', 565, 16, 565, 17),
woosh.Token(woosh.OP, ']', 565, 17, 565, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 565, 18, 566, 0),
woosh.Token(woosh.NAME, 'execvpe', 566, 4, 566, 11),
woosh.Token(woosh.OP, '(', 566, 11, 566, 12),
woosh.Token(woosh.NAME, 'file', 566, 12, 566, 16),
woosh.Token(woosh.OP, ',', 566, 16, 566, 17),
woosh.Token(woosh.NAME, 'args', 566, 18, 566, 22),
woosh.Token(woosh.OP, '[', 566, 22, 566, 23),
woosh.Token(woosh.OP, ':', 566, 23, 566, 24),
woosh.Token(woosh.OP, '-', 566, 24, 566, 25),
woosh.Token(woosh.NUMBER, '1', 566, 25, 566, 26),
woosh.Token(woosh.OP, ']', 566, 26, 566, 27),
woosh.Token(woosh.OP, ',', 566, 27, 566, 28),
woosh.Token(woosh.NAME, 'env', 566, 29, 566, 32),
woosh.Token(woosh.OP, ')', 566, 32, 566, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 566, 33, 567, 0),
woosh.Token(woosh.DEDENT, '', 568, 0, 568, 0),
woosh.Token(woosh.NAME, 'def', 568, 0, 568, 3),
woosh.Token(woosh.NAME, 'execvp', 568, 4, 568, 10),
woosh.Token(woosh.OP, '(', 568, 10, 568, 11),
woosh.Token(woosh.NAME, 'file', 568, 11, 568, 15),
woosh.Token(woosh.OP, ',', 568, 15, 568, 16),
woosh.Token(woosh.NAME, 'args', 568, 17, 568, 21),
woosh.Token(woosh.OP, ')', 568, 21, 568, 22),
woosh.Token(woosh.OP, ':', 568, 22, 568, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 23, 569, 0),
woosh.Token(woosh.INDENT, '    ', 569, 0, 569, 4),
woosh.Token(woosh.STRING, '"""execvp(file, args)\r\n\r\n    Execute the executable file (which is searched for along $PATH)\r\n    with argument list args, replacing the current process.\r\n    args may be a list or tuple of strings. """', 569, 4, 573, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 47, 574, 0),
woosh.Token(woosh.NAME, '_execvpe', 574, 4, 574, 12),
woosh.Token(woosh.OP, '(', 574, 12, 574, 13),
woosh.Token(woosh.NAME, 'file', 574, 13, 574, 17),
woosh.Token(woosh.OP, ',', 574, 17, 574, 18),
woosh.Token(woosh.NAME, 'args', 574, 19, 574, 23),
woosh.Token(woosh.OP, ')', 574, 23, 574, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 574, 24, 575, 0),
woosh.Token(woosh.DEDENT, '', 576, 0, 576, 0),
woosh.Token(woosh.NAME, 'def', 576, 0, 576, 3),
woosh.Token(woosh.NAME, 'execvpe', 576, 4, 576, 11),
woosh.Token(woosh.OP, '(', 576, 11, 576, 12),
woosh.Token(woosh.NAME, 'file', 576, 12, 576, 16),
woosh.Token(woosh.OP, ',', 576, 16, 576, 17),
woosh.Token(woosh.NAME, 'args', 576, 18, 576, 22),
woosh.Token(woosh.OP, ',', 576, 22, 576, 23),
woosh.Token(woosh.NAME, 'env', 576, 24, 576, 27),
woosh.Token(woosh.OP, ')', 576, 27, 576, 28),
woosh.Token(woosh.OP, ':', 576, 28, 576, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 29, 577, 0),
woosh.Token(woosh.INDENT, '    ', 577, 0, 577, 4),
woosh.Token(woosh.STRING, '"""execvpe(file, args, env)\r\n\r\n    Execute the executable file (which is searched for along $PATH)\r\n    with argument list args and environment env, replacing the\r\n    current process.\r\n    args may be a list or tuple of strings. """', 577, 4, 582, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 47, 583, 0),
woosh.Token(woosh.NAME, '_execvpe', 583, 4, 583, 12),
woosh.Token(woosh.OP, '(', 583, 12, 583, 13),
woosh.Token(woosh.NAME, 'file', 583, 13, 583, 17),
woosh.Token(woosh.OP, ',', 583, 17, 583, 18),
woosh.Token(woosh.NAME, 'args', 583, 19, 583, 23),
woosh.Token(woosh.OP, ',', 583, 23, 583, 24),
woosh.Token(woosh.NAME, 'env', 583, 25, 583, 28),
woosh.Token(woosh.OP, ')', 583, 28, 583, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 29, 584, 0),
woosh.Token(woosh.DEDENT, '', 585, 0, 585, 0),
woosh.Token(woosh.NAME, '__all__', 585, 0, 585, 7),
woosh.Token(woosh.OP, '.', 585, 7, 585, 8),
woosh.Token(woosh.NAME, 'extend', 585, 8, 585, 14),
woosh.Token(woosh.OP, '(', 585, 14, 585, 15),
woosh.Token(woosh.OP, '[', 585, 15, 585, 16),
woosh.Token(woosh.STRING, '"execl"', 585, 16, 585, 23),
woosh.Token(woosh.OP, ',', 585, 23, 585, 24),
woosh.Token(woosh.STRING, '"execle"', 585, 24, 585, 32),
woosh.Token(woosh.OP, ',', 585, 32, 585, 33),
woosh.Token(woosh.STRING, '"execlp"', 585, 33, 585, 41),
woosh.Token(woosh.OP, ',', 585, 41, 585, 42),
woosh.Token(woosh.STRING, '"execlpe"', 585, 42, 585, 51),
woosh.Token(woosh.OP, ',', 585, 51, 585, 52),
woosh.Token(woosh.STRING, '"execvp"', 585, 52, 585, 60),
woosh.Token(woosh.OP, ',', 585, 60, 585, 61),
woosh.Token(woosh.STRING, '"execvpe"', 585, 61, 585, 70),
woosh.Token(woosh.OP, ']', 585, 70, 585, 71),
woosh.Token(woosh.OP, ')', 585, 71, 585, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 72, 586, 0),
woosh.Token(woosh.NAME, 'def', 587, 0, 587, 3),
woosh.Token(woosh.NAME, '_execvpe', 587, 4, 587, 12),
woosh.Token(woosh.OP, '(', 587, 12, 587, 13),
woosh.Token(woosh.NAME, 'file', 587, 13, 587, 17),
woosh.Token(woosh.OP, ',', 587, 17, 587, 18),
woosh.Token(woosh.NAME, 'args', 587, 19, 587, 23),
woosh.Token(woosh.OP, ',', 587, 23, 587, 24),
woosh.Token(woosh.NAME, 'env', 587, 25, 587, 28),
woosh.Token(woosh.OP, '=', 587, 28, 587, 29),
woosh.Token(woosh.NAME, 'None', 587, 29, 587, 33),
woosh.Token(woosh.OP, ')', 587, 33, 587, 34),
woosh.Token(woosh.OP, ':', 587, 34, 587, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 35, 588, 0),
woosh.Token(woosh.INDENT, '    ', 588, 0, 588, 4),
woosh.Token(woosh.NAME, 'if', 588, 4, 588, 6),
woosh.Token(woosh.NAME, 'env', 588, 7, 588, 10),
woosh.Token(woosh.NAME, 'is', 588, 11, 588, 13),
woosh.Token(woosh.NAME, 'not', 588, 14, 588, 17),
woosh.Token(woosh.NAME, 'None', 588, 18, 588, 22),
woosh.Token(woosh.OP, ':', 588, 22, 588, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 588, 23, 589, 0),
woosh.Token(woosh.INDENT, '        ', 589, 0, 589, 8),
woosh.Token(woosh.NAME, 'exec_func', 589, 8, 589, 17),
woosh.Token(woosh.OP, '=', 589, 18, 589, 19),
woosh.Token(woosh.NAME, 'execve', 589, 20, 589, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 26, 590, 0),
woosh.Token(woosh.NAME, 'argrest', 590, 8, 590, 15),
woosh.Token(woosh.OP, '=', 590, 16, 590, 17),
woosh.Token(woosh.OP, '(', 590, 18, 590, 19),
woosh.Token(woosh.NAME, 'args', 590, 19, 590, 23),
woosh.Token(woosh.OP, ',', 590, 23, 590, 24),
woosh.Token(woosh.NAME, 'env', 590, 25, 590, 28),
woosh.Token(woosh.OP, ')', 590, 28, 590, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 29, 591, 0),
woosh.Token(woosh.DEDENT, '    ', 591, 0, 591, 4),
woosh.Token(woosh.NAME, 'else', 591, 4, 591, 8),
woosh.Token(woosh.OP, ':', 591, 8, 591, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 9, 592, 0),
woosh.Token(woosh.INDENT, '        ', 592, 0, 592, 8),
woosh.Token(woosh.NAME, 'exec_func', 592, 8, 592, 17),
woosh.Token(woosh.OP, '=', 592, 18, 592, 19),
woosh.Token(woosh.NAME, 'execv', 592, 20, 592, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 25, 593, 0),
woosh.Token(woosh.NAME, 'argrest', 593, 8, 593, 15),
woosh.Token(woosh.OP, '=', 593, 16, 593, 17),
woosh.Token(woosh.OP, '(', 593, 18, 593, 19),
woosh.Token(woosh.NAME, 'args', 593, 19, 593, 23),
woosh.Token(woosh.OP, ',', 593, 23, 593, 24),
woosh.Token(woosh.OP, ')', 593, 24, 593, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 593, 25, 594, 0),
woosh.Token(woosh.NAME, 'env', 594, 8, 594, 11),
woosh.Token(woosh.OP, '=', 594, 12, 594, 13),
woosh.Token(woosh.NAME, 'environ', 594, 14, 594, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 21, 595, 0),
woosh.Token(woosh.DEDENT, '    ', 596, 0, 596, 4),
woosh.Token(woosh.NAME, 'if', 596, 4, 596, 6),
woosh.Token(woosh.NAME, 'path', 596, 7, 596, 11),
woosh.Token(woosh.OP, '.', 596, 11, 596, 12),
woosh.Token(woosh.NAME, 'dirname', 596, 12, 596, 19),
woosh.Token(woosh.OP, '(', 596, 19, 596, 20),
woosh.Token(woosh.NAME, 'file', 596, 20, 596, 24),
woosh.Token(woosh.OP, ')', 596, 24, 596, 25),
woosh.Token(woosh.OP, ':', 596, 25, 596, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 26, 597, 0),
woosh.Token(woosh.INDENT, '        ', 597, 0, 597, 8),
woosh.Token(woosh.NAME, 'exec_func', 597, 8, 597, 17),
woosh.Token(woosh.OP, '(', 597, 17, 597, 18),
woosh.Token(woosh.NAME, 'file', 597, 18, 597, 22),
woosh.Token(woosh.OP, ',', 597, 22, 597, 23),
woosh.Token(woosh.OP, '*', 597, 24, 597, 25),
woosh.Token(woosh.NAME, 'argrest', 597, 25, 597, 32),
woosh.Token(woosh.OP, ')', 597, 32, 597, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 33, 598, 0),
woosh.Token(woosh.NAME, 'return', 598, 8, 598, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 598, 14, 599, 0),
woosh.Token(woosh.DEDENT, '    ', 599, 0, 599, 4),
woosh.Token(woosh.NAME, 'saved_exc', 599, 4, 599, 13),
woosh.Token(woosh.OP, '=', 599, 14, 599, 15),
woosh.Token(woosh.NAME, 'None', 599, 16, 599, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 20, 600, 0),
woosh.Token(woosh.NAME, 'path_list', 600, 4, 600, 13),
woosh.Token(woosh.OP, '=', 600, 14, 600, 15),
woosh.Token(woosh.NAME, 'get_exec_path', 600, 16, 600, 29),
woosh.Token(woosh.OP, '(', 600, 29, 600, 30),
woosh.Token(woosh.NAME, 'env', 600, 30, 600, 33),
woosh.Token(woosh.OP, ')', 600, 33, 600, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 34, 601, 0),
woosh.Token(woosh.NAME, 'if', 601, 4, 601, 6),
woosh.Token(woosh.NAME, 'name', 601, 7, 601, 11),
woosh.Token(woosh.OP, '!=', 601, 12, 601, 14),
woosh.Token(woosh.STRING, "'nt'", 601, 15, 601, 19),
woosh.Token(woosh.OP, ':', 601, 19, 601, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 20, 602, 0),
woosh.Token(woosh.INDENT, '        ', 602, 0, 602, 8),
woosh.Token(woosh.NAME, 'file', 602, 8, 602, 12),
woosh.Token(woosh.OP, '=', 602, 13, 602, 14),
woosh.Token(woosh.NAME, 'fsencode', 602, 15, 602, 23),
woosh.Token(woosh.OP, '(', 602, 23, 602, 24),
woosh.Token(woosh.NAME, 'file', 602, 24, 602, 28),
woosh.Token(woosh.OP, ')', 602, 28, 602, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 29, 603, 0),
woosh.Token(woosh.NAME, 'path_list', 603, 8, 603, 17),
woosh.Token(woosh.OP, '=', 603, 18, 603, 19),
woosh.Token(woosh.NAME, 'map', 603, 20, 603, 23),
woosh.Token(woosh.OP, '(', 603, 23, 603, 24),
woosh.Token(woosh.NAME, 'fsencode', 603, 24, 603, 32),
woosh.Token(woosh.OP, ',', 603, 32, 603, 33),
woosh.Token(woosh.NAME, 'path_list', 603, 34, 603, 43),
woosh.Token(woosh.OP, ')', 603, 43, 603, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 44, 604, 0),
woosh.Token(woosh.DEDENT, '    ', 604, 0, 604, 4),
woosh.Token(woosh.NAME, 'for', 604, 4, 604, 7),
woosh.Token(woosh.NAME, 'dir', 604, 8, 604, 11),
woosh.Token(woosh.NAME, 'in', 604, 12, 604, 14),
woosh.Token(woosh.NAME, 'path_list', 604, 15, 604, 24),
woosh.Token(woosh.OP, ':', 604, 24, 604, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 25, 605, 0),
woosh.Token(woosh.INDENT, '        ', 605, 0, 605, 8),
woosh.Token(woosh.NAME, 'fullname', 605, 8, 605, 16),
woosh.Token(woosh.OP, '=', 605, 17, 605, 18),
woosh.Token(woosh.NAME, 'path', 605, 19, 605, 23),
woosh.Token(woosh.OP, '.', 605, 23, 605, 24),
woosh.Token(woosh.NAME, 'join', 605, 24, 605, 28),
woosh.Token(woosh.OP, '(', 605, 28, 605, 29),
woosh.Token(woosh.NAME, 'dir', 605, 29, 605, 32),
woosh.Token(woosh.OP, ',', 605, 32, 605, 33),
woosh.Token(woosh.NAME, 'file', 605, 34, 605, 38),
woosh.Token(woosh.OP, ')', 605, 38, 605, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 39, 606, 0),
woosh.Token(woosh.NAME, 'try', 606, 8, 606, 11),
woosh.Token(woosh.OP, ':', 606, 11, 606, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 606, 12, 607, 0),
woosh.Token(woosh.INDENT, '            ', 607, 0, 607, 12),
woosh.Token(woosh.NAME, 'exec_func', 607, 12, 607, 21),
woosh.Token(woosh.OP, '(', 607, 21, 607, 22),
woosh.Token(woosh.NAME, 'fullname', 607, 22, 607, 30),
woosh.Token(woosh.OP, ',', 607, 30, 607, 31),
woosh.Token(woosh.OP, '*', 607, 32, 607, 33),
woosh.Token(woosh.NAME, 'argrest', 607, 33, 607, 40),
woosh.Token(woosh.OP, ')', 607, 40, 607, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 41, 608, 0),
woosh.Token(woosh.DEDENT, '        ', 608, 0, 608, 8),
woosh.Token(woosh.NAME, 'except', 608, 8, 608, 14),
woosh.Token(woosh.OP, '(', 608, 15, 608, 16),
woosh.Token(woosh.NAME, 'FileNotFoundError', 608, 16, 608, 33),
woosh.Token(woosh.OP, ',', 608, 33, 608, 34),
woosh.Token(woosh.NAME, 'NotADirectoryError', 608, 35, 608, 53),
woosh.Token(woosh.OP, ')', 608, 53, 608, 54),
woosh.Token(woosh.NAME, 'as', 608, 55, 608, 57),
woosh.Token(woosh.NAME, 'e', 608, 58, 608, 59),
woosh.Token(woosh.OP, ':', 608, 59, 608, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 60, 609, 0),
woosh.Token(woosh.INDENT, '            ', 609, 0, 609, 12),
woosh.Token(woosh.NAME, 'last_exc', 609, 12, 609, 20),
woosh.Token(woosh.OP, '=', 609, 21, 609, 22),
woosh.Token(woosh.NAME, 'e', 609, 23, 609, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 24, 610, 0),
woosh.Token(woosh.DEDENT, '        ', 610, 0, 610, 8),
woosh.Token(woosh.NAME, 'except', 610, 8, 610, 14),
woosh.Token(woosh.NAME, 'OSError', 610, 15, 610, 22),
woosh.Token(woosh.NAME, 'as', 610, 23, 610, 25),
woosh.Token(woosh.NAME, 'e', 610, 26, 610, 27),
woosh.Token(woosh.OP, ':', 610, 27, 610, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 610, 28, 611, 0),
woosh.Token(woosh.INDENT, '            ', 611, 0, 611, 12),
woosh.Token(woosh.NAME, 'last_exc', 611, 12, 611, 20),
woosh.Token(woosh.OP, '=', 611, 21, 611, 22),
woosh.Token(woosh.NAME, 'e', 611, 23, 611, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 24, 612, 0),
woosh.Token(woosh.NAME, 'if', 612, 12, 612, 14),
woosh.Token(woosh.NAME, 'saved_exc', 612, 15, 612, 24),
woosh.Token(woosh.NAME, 'is', 612, 25, 612, 27),
woosh.Token(woosh.NAME, 'None', 612, 28, 612, 32),
woosh.Token(woosh.OP, ':', 612, 32, 612, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 612, 33, 613, 0),
woosh.Token(woosh.INDENT, '                ', 613, 0, 613, 16),
woosh.Token(woosh.NAME, 'saved_exc', 613, 16, 613, 25),
woosh.Token(woosh.OP, '=', 613, 26, 613, 27),
woosh.Token(woosh.NAME, 'e', 613, 28, 613, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 613, 29, 614, 0),
woosh.Token(woosh.DEDENT, '    ', 614, 0, 614, 4),
woosh.Token(woosh.DEDENT, '', 614, 4, 614, 4),
woosh.Token(woosh.DEDENT, '', 614, 4, 614, 4),
woosh.Token(woosh.NAME, 'if', 614, 4, 614, 6),
woosh.Token(woosh.NAME, 'saved_exc', 614, 7, 614, 16),
woosh.Token(woosh.NAME, 'is', 614, 17, 614, 19),
woosh.Token(woosh.NAME, 'not', 614, 20, 614, 23),
woosh.Token(woosh.NAME, 'None', 614, 24, 614, 28),
woosh.Token(woosh.OP, ':', 614, 28, 614, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 29, 615, 0),
woosh.Token(woosh.INDENT, '        ', 615, 0, 615, 8),
woosh.Token(woosh.NAME, 'raise', 615, 8, 615, 13),
woosh.Token(woosh.NAME, 'saved_exc', 615, 14, 615, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 615, 23, 616, 0),
woosh.Token(woosh.DEDENT, '    ', 616, 0, 616, 4),
woosh.Token(woosh.NAME, 'raise', 616, 4, 616, 9),
woosh.Token(woosh.NAME, 'last_exc', 616, 10, 616, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 616, 18, 617, 0),
woosh.Token(woosh.DEDENT, '', 619, 0, 619, 0),
woosh.Token(woosh.NAME, 'def', 619, 0, 619, 3),
woosh.Token(woosh.NAME, 'get_exec_path', 619, 4, 619, 17),
woosh.Token(woosh.OP, '(', 619, 17, 619, 18),
woosh.Token(woosh.NAME, 'env', 619, 18, 619, 21),
woosh.Token(woosh.OP, '=', 619, 21, 619, 22),
woosh.Token(woosh.NAME, 'None', 619, 22, 619, 26),
woosh.Token(woosh.OP, ')', 619, 26, 619, 27),
woosh.Token(woosh.OP, ':', 619, 27, 619, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 28, 620, 0),
woosh.Token(woosh.INDENT, '    ', 620, 0, 620, 4),
woosh.Token(woosh.STRING, '"""Returns the sequence of directories that will be searched for the\r\n    named executable (similar to a shell) when launching a process.\r\n\r\n    *env* must be an environment variable dict or None.  If *env* is None,\r\n    os.environ will be used.\r\n    """', 620, 4, 625, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 7, 626, 0),
woosh.Token(woosh.COMMENT, '# Use a local import instead of a global import to limit the number of', 626, 4, 626, 74),
woosh.Token(woosh.COMMENT, '# modules loaded at startup: the os module is always loaded at startup by', 627, 4, 627, 77),
woosh.Token(woosh.COMMENT, '# Python. It may also avoid a bootstrap issue.', 628, 4, 628, 50),
woosh.Token(woosh.NAME, 'import', 629, 4, 629, 10),
woosh.Token(woosh.NAME, 'warnings', 629, 11, 629, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 19, 630, 0),
woosh.Token(woosh.NAME, 'if', 631, 4, 631, 6),
woosh.Token(woosh.NAME, 'env', 631, 7, 631, 10),
woosh.Token(woosh.NAME, 'is', 631, 11, 631, 13),
woosh.Token(woosh.NAME, 'None', 631, 14, 631, 18),
woosh.Token(woosh.OP, ':', 631, 18, 631, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 631, 19, 632, 0),
woosh.Token(woosh.INDENT, '        ', 632, 0, 632, 8),
woosh.Token(woosh.NAME, 'env', 632, 8, 632, 11),
woosh.Token(woosh.OP, '=', 632, 12, 632, 13),
woosh.Token(woosh.NAME, 'environ', 632, 14, 632, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 21, 633, 0),
woosh.Token(woosh.COMMENT, "# {b'PATH': ...}.get('PATH') and {'PATH': ...}.get(b'PATH') emit a", 634, 4, 634, 70),
woosh.Token(woosh.COMMENT, '# BytesWarning when using python -b or python -bb: ignore the warning', 635, 4, 635, 73),
woosh.Token(woosh.DEDENT, '    ', 636, 0, 636, 4),
woosh.Token(woosh.NAME, 'with', 636, 4, 636, 8),
woosh.Token(woosh.NAME, 'warnings', 636, 9, 636, 17),
woosh.Token(woosh.OP, '.', 636, 17, 636, 18),
woosh.Token(woosh.NAME, 'catch_warnings', 636, 18, 636, 32),
woosh.Token(woosh.OP, '(', 636, 32, 636, 33),
woosh.Token(woosh.OP, ')', 636, 33, 636, 34),
woosh.Token(woosh.OP, ':', 636, 34, 636, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 636, 35, 637, 0),
woosh.Token(woosh.INDENT, '        ', 637, 0, 637, 8),
woosh.Token(woosh.NAME, 'warnings', 637, 8, 637, 16),
woosh.Token(woosh.OP, '.', 637, 16, 637, 17),
woosh.Token(woosh.NAME, 'simplefilter', 637, 17, 637, 29),
woosh.Token(woosh.OP, '(', 637, 29, 637, 30),
woosh.Token(woosh.STRING, '"ignore"', 637, 30, 637, 38),
woosh.Token(woosh.OP, ',', 637, 38, 637, 39),
woosh.Token(woosh.NAME, 'BytesWarning', 637, 40, 637, 52),
woosh.Token(woosh.OP, ')', 637, 52, 637, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 53, 638, 0),
woosh.Token(woosh.NAME, 'try', 639, 8, 639, 11),
woosh.Token(woosh.OP, ':', 639, 11, 639, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 12, 640, 0),
woosh.Token(woosh.INDENT, '            ', 640, 0, 640, 12),
woosh.Token(woosh.NAME, 'path_list', 640, 12, 640, 21),
woosh.Token(woosh.OP, '=', 640, 22, 640, 23),
woosh.Token(woosh.NAME, 'env', 640, 24, 640, 27),
woosh.Token(woosh.OP, '.', 640, 27, 640, 28),
woosh.Token(woosh.NAME, 'get', 640, 28, 640, 31),
woosh.Token(woosh.OP, '(', 640, 31, 640, 32),
woosh.Token(woosh.STRING, "'PATH'", 640, 32, 640, 38),
woosh.Token(woosh.OP, ')', 640, 38, 640, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 640, 39, 641, 0),
woosh.Token(woosh.DEDENT, '        ', 641, 0, 641, 8),
woosh.Token(woosh.NAME, 'except', 641, 8, 641, 14),
woosh.Token(woosh.NAME, 'TypeError', 641, 15, 641, 24),
woosh.Token(woosh.OP, ':', 641, 24, 641, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 25, 642, 0),
woosh.Token(woosh.INDENT, '            ', 642, 0, 642, 12),
woosh.Token(woosh.NAME, 'path_list', 642, 12, 642, 21),
woosh.Token(woosh.OP, '=', 642, 22, 642, 23),
woosh.Token(woosh.NAME, 'None', 642, 24, 642, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 28, 643, 0),
woosh.Token(woosh.DEDENT, '        ', 644, 0, 644, 8),
woosh.Token(woosh.NAME, 'if', 644, 8, 644, 10),
woosh.Token(woosh.NAME, 'supports_bytes_environ', 644, 11, 644, 33),
woosh.Token(woosh.OP, ':', 644, 33, 644, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 644, 34, 645, 0),
woosh.Token(woosh.INDENT, '            ', 645, 0, 645, 12),
woosh.Token(woosh.NAME, 'try', 645, 12, 645, 15),
woosh.Token(woosh.OP, ':', 645, 15, 645, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 645, 16, 646, 0),
woosh.Token(woosh.INDENT, '                ', 646, 0, 646, 16),
woosh.Token(woosh.NAME, 'path_listb', 646, 16, 646, 26),
woosh.Token(woosh.OP, '=', 646, 27, 646, 28),
woosh.Token(woosh.NAME, 'env', 646, 29, 646, 32),
woosh.Token(woosh.OP, '[', 646, 32, 646, 33),
woosh.Token(woosh.STRING, "b'PATH'", 646, 33, 646, 40),
woosh.Token(woosh.OP, ']', 646, 40, 646, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 646, 41, 647, 0),
woosh.Token(woosh.DEDENT, '            ', 647, 0, 647, 12),
woosh.Token(woosh.NAME, 'except', 647, 12, 647, 18),
woosh.Token(woosh.OP, '(', 647, 19, 647, 20),
woosh.Token(woosh.NAME, 'KeyError', 647, 20, 647, 28),
woosh.Token(woosh.OP, ',', 647, 28, 647, 29),
woosh.Token(woosh.NAME, 'TypeError', 647, 30, 647, 39),
woosh.Token(woosh.OP, ')', 647, 39, 647, 40),
woosh.Token(woosh.OP, ':', 647, 40, 647, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 647, 41, 648, 0),
woosh.Token(woosh.INDENT, '                ', 648, 0, 648, 16),
woosh.Token(woosh.NAME, 'pass', 648, 16, 648, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 648, 20, 649, 0),
woosh.Token(woosh.DEDENT, '            ', 649, 0, 649, 12),
woosh.Token(woosh.NAME, 'else', 649, 12, 649, 16),
woosh.Token(woosh.OP, ':', 649, 16, 649, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 649, 17, 650, 0),
woosh.Token(woosh.INDENT, '                ', 650, 0, 650, 16),
woosh.Token(woosh.NAME, 'if', 650, 16, 650, 18),
woosh.Token(woosh.NAME, 'path_list', 650, 19, 650, 28),
woosh.Token(woosh.NAME, 'is', 650, 29, 650, 31),
woosh.Token(woosh.NAME, 'not', 650, 32, 650, 35),
woosh.Token(woosh.NAME, 'None', 650, 36, 650, 40),
woosh.Token(woosh.OP, ':', 650, 40, 650, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 650, 41, 651, 0),
woosh.Token(woosh.INDENT, '                    ', 651, 0, 651, 20),
woosh.Token(woosh.NAME, 'raise', 651, 20, 651, 25),
woosh.Token(woosh.NAME, 'ValueError', 651, 26, 651, 36),
woosh.Token(woosh.OP, '(', 651, 36, 651, 37),
woosh.Token(woosh.STRING, '"env cannot contain \'PATH\' and b\'PATH\' keys"', 652, 24, 652, 68),
woosh.Token(woosh.OP, ')', 652, 68, 652, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 652, 69, 653, 0),
woosh.Token(woosh.DEDENT, '                ', 653, 0, 653, 16),
woosh.Token(woosh.NAME, 'path_list', 653, 16, 653, 25),
woosh.Token(woosh.OP, '=', 653, 26, 653, 27),
woosh.Token(woosh.NAME, 'path_listb', 653, 28, 653, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 38, 654, 0),
woosh.Token(woosh.DEDENT, '            ', 655, 0, 655, 12),
woosh.Token(woosh.NAME, 'if', 655, 12, 655, 14),
woosh.Token(woosh.NAME, 'path_list', 655, 15, 655, 24),
woosh.Token(woosh.NAME, 'is', 655, 25, 655, 27),
woosh.Token(woosh.NAME, 'not', 655, 28, 655, 31),
woosh.Token(woosh.NAME, 'None', 655, 32, 655, 36),
woosh.Token(woosh.NAME, 'and', 655, 37, 655, 40),
woosh.Token(woosh.NAME, 'isinstance', 655, 41, 655, 51),
woosh.Token(woosh.OP, '(', 655, 51, 655, 52),
woosh.Token(woosh.NAME, 'path_list', 655, 52, 655, 61),
woosh.Token(woosh.OP, ',', 655, 61, 655, 62),
woosh.Token(woosh.NAME, 'bytes', 655, 63, 655, 68),
woosh.Token(woosh.OP, ')', 655, 68, 655, 69),
woosh.Token(woosh.OP, ':', 655, 69, 655, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 655, 70, 656, 0),
woosh.Token(woosh.INDENT, '                ', 656, 0, 656, 16),
woosh.Token(woosh.NAME, 'path_list', 656, 16, 656, 25),
woosh.Token(woosh.OP, '=', 656, 26, 656, 27),
woosh.Token(woosh.NAME, 'fsdecode', 656, 28, 656, 36),
woosh.Token(woosh.OP, '(', 656, 36, 656, 37),
woosh.Token(woosh.NAME, 'path_list', 656, 37, 656, 46),
woosh.Token(woosh.OP, ')', 656, 46, 656, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 47, 657, 0),
woosh.Token(woosh.DEDENT, '    ', 658, 0, 658, 4),
woosh.Token(woosh.DEDENT, '', 658, 4, 658, 4),
woosh.Token(woosh.DEDENT, '', 658, 4, 658, 4),
woosh.Token(woosh.NAME, 'if', 658, 4, 658, 6),
woosh.Token(woosh.NAME, 'path_list', 658, 7, 658, 16),
woosh.Token(woosh.NAME, 'is', 658, 17, 658, 19),
woosh.Token(woosh.NAME, 'None', 658, 20, 658, 24),
woosh.Token(woosh.OP, ':', 658, 24, 658, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 658, 25, 659, 0),
woosh.Token(woosh.INDENT, '        ', 659, 0, 659, 8),
woosh.Token(woosh.NAME, 'path_list', 659, 8, 659, 17),
woosh.Token(woosh.OP, '=', 659, 18, 659, 19),
woosh.Token(woosh.NAME, 'defpath', 659, 20, 659, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 27, 660, 0),
woosh.Token(woosh.DEDENT, '    ', 660, 0, 660, 4),
woosh.Token(woosh.NAME, 'return', 660, 4, 660, 10),
woosh.Token(woosh.NAME, 'path_list', 660, 11, 660, 20),
woosh.Token(woosh.OP, '.', 660, 20, 660, 21),
woosh.Token(woosh.NAME, 'split', 660, 21, 660, 26),
woosh.Token(woosh.OP, '(', 660, 26, 660, 27),
woosh.Token(woosh.NAME, 'pathsep', 660, 27, 660, 34),
woosh.Token(woosh.OP, ')', 660, 34, 660, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 35, 661, 0),
woosh.Token(woosh.COMMENT, '# Change environ to automatically call putenv() and unsetenv()', 663, 0, 663, 62),
woosh.Token(woosh.DEDENT, '', 664, 0, 664, 0),
woosh.Token(woosh.NAME, 'from', 664, 0, 664, 4),
woosh.Token(woosh.NAME, '_collections_abc', 664, 5, 664, 21),
woosh.Token(woosh.NAME, 'import', 664, 22, 664, 28),
woosh.Token(woosh.NAME, 'MutableMapping', 664, 29, 664, 43),
woosh.Token(woosh.OP, ',', 664, 43, 664, 44),
woosh.Token(woosh.NAME, 'Mapping', 664, 45, 664, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 52, 665, 0),
woosh.Token(woosh.NAME, 'class', 666, 0, 666, 5),
woosh.Token(woosh.NAME, '_Environ', 666, 6, 666, 14),
woosh.Token(woosh.OP, '(', 666, 14, 666, 15),
woosh.Token(woosh.NAME, 'MutableMapping', 666, 15, 666, 29),
woosh.Token(woosh.OP, ')', 666, 29, 666, 30),
woosh.Token(woosh.OP, ':', 666, 30, 666, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 666, 31, 667, 0),
woosh.Token(woosh.INDENT, '    ', 667, 0, 667, 4),
woosh.Token(woosh.NAME, 'def', 667, 4, 667, 7),
woosh.Token(woosh.NAME, '__init__', 667, 8, 667, 16),
woosh.Token(woosh.OP, '(', 667, 16, 667, 17),
woosh.Token(woosh.NAME, 'self', 667, 17, 667, 21),
woosh.Token(woosh.OP, ',', 667, 21, 667, 22),
woosh.Token(woosh.NAME, 'data', 667, 23, 667, 27),
woosh.Token(woosh.OP, ',', 667, 27, 667, 28),
woosh.Token(woosh.NAME, 'encodekey', 667, 29, 667, 38),
woosh.Token(woosh.OP, ',', 667, 38, 667, 39),
woosh.Token(woosh.NAME, 'decodekey', 667, 40, 667, 49),
woosh.Token(woosh.OP, ',', 667, 49, 667, 50),
woosh.Token(woosh.NAME, 'encodevalue', 667, 51, 667, 62),
woosh.Token(woosh.OP, ',', 667, 62, 667, 63),
woosh.Token(woosh.NAME, 'decodevalue', 667, 64, 667, 75),
woosh.Token(woosh.OP, ')', 667, 75, 667, 76),
woosh.Token(woosh.OP, ':', 667, 76, 667, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 77, 668, 0),
woosh.Token(woosh.INDENT, '        ', 668, 0, 668, 8),
woosh.Token(woosh.NAME, 'self', 668, 8, 668, 12),
woosh.Token(woosh.OP, '.', 668, 12, 668, 13),
woosh.Token(woosh.NAME, 'encodekey', 668, 13, 668, 22),
woosh.Token(woosh.OP, '=', 668, 23, 668, 24),
woosh.Token(woosh.NAME, 'encodekey', 668, 25, 668, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 668, 34, 669, 0),
woosh.Token(woosh.NAME, 'self', 669, 8, 669, 12),
woosh.Token(woosh.OP, '.', 669, 12, 669, 13),
woosh.Token(woosh.NAME, 'decodekey', 669, 13, 669, 22),
woosh.Token(woosh.OP, '=', 669, 23, 669, 24),
woosh.Token(woosh.NAME, 'decodekey', 669, 25, 669, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 669, 34, 670, 0),
woosh.Token(woosh.NAME, 'self', 670, 8, 670, 12),
woosh.Token(woosh.OP, '.', 670, 12, 670, 13),
woosh.Token(woosh.NAME, 'encodevalue', 670, 13, 670, 24),
woosh.Token(woosh.OP, '=', 670, 25, 670, 26),
woosh.Token(woosh.NAME, 'encodevalue', 670, 27, 670, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 670, 38, 671, 0),
woosh.Token(woosh.NAME, 'self', 671, 8, 671, 12),
woosh.Token(woosh.OP, '.', 671, 12, 671, 13),
woosh.Token(woosh.NAME, 'decodevalue', 671, 13, 671, 24),
woosh.Token(woosh.OP, '=', 671, 25, 671, 26),
woosh.Token(woosh.NAME, 'decodevalue', 671, 27, 671, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 38, 672, 0),
woosh.Token(woosh.NAME, 'self', 672, 8, 672, 12),
woosh.Token(woosh.OP, '.', 672, 12, 672, 13),
woosh.Token(woosh.NAME, '_data', 672, 13, 672, 18),
woosh.Token(woosh.OP, '=', 672, 19, 672, 20),
woosh.Token(woosh.NAME, 'data', 672, 21, 672, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 672, 25, 673, 0),
woosh.Token(woosh.DEDENT, '    ', 674, 0, 674, 4),
woosh.Token(woosh.NAME, 'def', 674, 4, 674, 7),
woosh.Token(woosh.NAME, '__getitem__', 674, 8, 674, 19),
woosh.Token(woosh.OP, '(', 674, 19, 674, 20),
woosh.Token(woosh.NAME, 'self', 674, 20, 674, 24),
woosh.Token(woosh.OP, ',', 674, 24, 674, 25),
woosh.Token(woosh.NAME, 'key', 674, 26, 674, 29),
woosh.Token(woosh.OP, ')', 674, 29, 674, 30),
woosh.Token(woosh.OP, ':', 674, 30, 674, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 674, 31, 675, 0),
woosh.Token(woosh.INDENT, '        ', 675, 0, 675, 8),
woosh.Token(woosh.NAME, 'try', 675, 8, 675, 11),
woosh.Token(woosh.OP, ':', 675, 11, 675, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 675, 12, 676, 0),
woosh.Token(woosh.INDENT, '            ', 676, 0, 676, 12),
woosh.Token(woosh.NAME, 'value', 676, 12, 676, 17),
woosh.Token(woosh.OP, '=', 676, 18, 676, 19),
woosh.Token(woosh.NAME, 'self', 676, 20, 676, 24),
woosh.Token(woosh.OP, '.', 676, 24, 676, 25),
woosh.Token(woosh.NAME, '_data', 676, 25, 676, 30),
woosh.Token(woosh.OP, '[', 676, 30, 676, 31),
woosh.Token(woosh.NAME, 'self', 676, 31, 676, 35),
woosh.Token(woosh.OP, '.', 676, 35, 676, 36),
woosh.Token(woosh.NAME, 'encodekey', 676, 36, 676, 45),
woosh.Token(woosh.OP, '(', 676, 45, 676, 46),
woosh.Token(woosh.NAME, 'key', 676, 46, 676, 49),
woosh.Token(woosh.OP, ')', 676, 49, 676, 50),
woosh.Token(woosh.OP, ']', 676, 50, 676, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 51, 677, 0),
woosh.Token(woosh.DEDENT, '        ', 677, 0, 677, 8),
woosh.Token(woosh.NAME, 'except', 677, 8, 677, 14),
woosh.Token(woosh.NAME, 'KeyError', 677, 15, 677, 23),
woosh.Token(woosh.OP, ':', 677, 23, 677, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 677, 24, 678, 0),
woosh.Token(woosh.COMMENT, '# raise KeyError with the original key value', 678, 12, 678, 56),
woosh.Token(woosh.INDENT, '            ', 679, 0, 679, 12),
woosh.Token(woosh.NAME, 'raise', 679, 12, 679, 17),
woosh.Token(woosh.NAME, 'KeyError', 679, 18, 679, 26),
woosh.Token(woosh.OP, '(', 679, 26, 679, 27),
woosh.Token(woosh.NAME, 'key', 679, 27, 679, 30),
woosh.Token(woosh.OP, ')', 679, 30, 679, 31),
woosh.Token(woosh.NAME, 'from', 679, 32, 679, 36),
woosh.Token(woosh.NAME, 'None', 679, 37, 679, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 41, 680, 0),
woosh.Token(woosh.DEDENT, '        ', 680, 0, 680, 8),
woosh.Token(woosh.NAME, 'return', 680, 8, 680, 14),
woosh.Token(woosh.NAME, 'self', 680, 15, 680, 19),
woosh.Token(woosh.OP, '.', 680, 19, 680, 20),
woosh.Token(woosh.NAME, 'decodevalue', 680, 20, 680, 31),
woosh.Token(woosh.OP, '(', 680, 31, 680, 32),
woosh.Token(woosh.NAME, 'value', 680, 32, 680, 37),
woosh.Token(woosh.OP, ')', 680, 37, 680, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 680, 38, 681, 0),
woosh.Token(woosh.DEDENT, '    ', 682, 0, 682, 4),
woosh.Token(woosh.NAME, 'def', 682, 4, 682, 7),
woosh.Token(woosh.NAME, '__setitem__', 682, 8, 682, 19),
woosh.Token(woosh.OP, '(', 682, 19, 682, 20),
woosh.Token(woosh.NAME, 'self', 682, 20, 682, 24),
woosh.Token(woosh.OP, ',', 682, 24, 682, 25),
woosh.Token(woosh.NAME, 'key', 682, 26, 682, 29),
woosh.Token(woosh.OP, ',', 682, 29, 682, 30),
woosh.Token(woosh.NAME, 'value', 682, 31, 682, 36),
woosh.Token(woosh.OP, ')', 682, 36, 682, 37),
woosh.Token(woosh.OP, ':', 682, 37, 682, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 682, 38, 683, 0),
woosh.Token(woosh.INDENT, '        ', 683, 0, 683, 8),
woosh.Token(woosh.NAME, 'key', 683, 8, 683, 11),
woosh.Token(woosh.OP, '=', 683, 12, 683, 13),
woosh.Token(woosh.NAME, 'self', 683, 14, 683, 18),
woosh.Token(woosh.OP, '.', 683, 18, 683, 19),
woosh.Token(woosh.NAME, 'encodekey', 683, 19, 683, 28),
woosh.Token(woosh.OP, '(', 683, 28, 683, 29),
woosh.Token(woosh.NAME, 'key', 683, 29, 683, 32),
woosh.Token(woosh.OP, ')', 683, 32, 683, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 683, 33, 684, 0),
woosh.Token(woosh.NAME, 'value', 684, 8, 684, 13),
woosh.Token(woosh.OP, '=', 684, 14, 684, 15),
woosh.Token(woosh.NAME, 'self', 684, 16, 684, 20),
woosh.Token(woosh.OP, '.', 684, 20, 684, 21),
woosh.Token(woosh.NAME, 'encodevalue', 684, 21, 684, 32),
woosh.Token(woosh.OP, '(', 684, 32, 684, 33),
woosh.Token(woosh.NAME, 'value', 684, 33, 684, 38),
woosh.Token(woosh.OP, ')', 684, 38, 684, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 39, 685, 0),
woosh.Token(woosh.NAME, 'putenv', 685, 8, 685, 14),
woosh.Token(woosh.OP, '(', 685, 14, 685, 15),
woosh.Token(woosh.NAME, 'key', 685, 15, 685, 18),
woosh.Token(woosh.OP, ',', 685, 18, 685, 19),
woosh.Token(woosh.NAME, 'value', 685, 20, 685, 25),
woosh.Token(woosh.OP, ')', 685, 25, 685, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 685, 26, 686, 0),
woosh.Token(woosh.NAME, 'self', 686, 8, 686, 12),
woosh.Token(woosh.OP, '.', 686, 12, 686, 13),
woosh.Token(woosh.NAME, '_data', 686, 13, 686, 18),
woosh.Token(woosh.OP, '[', 686, 18, 686, 19),
woosh.Token(woosh.NAME, 'key', 686, 19, 686, 22),
woosh.Token(woosh.OP, ']', 686, 22, 686, 23),
woosh.Token(woosh.OP, '=', 686, 24, 686, 25),
woosh.Token(woosh.NAME, 'value', 686, 26, 686, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 686, 31, 687, 0),
woosh.Token(woosh.DEDENT, '    ', 688, 0, 688, 4),
woosh.Token(woosh.NAME, 'def', 688, 4, 688, 7),
woosh.Token(woosh.NAME, '__delitem__', 688, 8, 688, 19),
woosh.Token(woosh.OP, '(', 688, 19, 688, 20),
woosh.Token(woosh.NAME, 'self', 688, 20, 688, 24),
woosh.Token(woosh.OP, ',', 688, 24, 688, 25),
woosh.Token(woosh.NAME, 'key', 688, 26, 688, 29),
woosh.Token(woosh.OP, ')', 688, 29, 688, 30),
woosh.Token(woosh.OP, ':', 688, 30, 688, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 31, 689, 0),
woosh.Token(woosh.INDENT, '        ', 689, 0, 689, 8),
woosh.Token(woosh.NAME, 'encodedkey', 689, 8, 689, 18),
woosh.Token(woosh.OP, '=', 689, 19, 689, 20),
woosh.Token(woosh.NAME, 'self', 689, 21, 689, 25),
woosh.Token(woosh.OP, '.', 689, 25, 689, 26),
woosh.Token(woosh.NAME, 'encodekey', 689, 26, 689, 35),
woosh.Token(woosh.OP, '(', 689, 35, 689, 36),
woosh.Token(woosh.NAME, 'key', 689, 36, 689, 39),
woosh.Token(woosh.OP, ')', 689, 39, 689, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 689, 40, 690, 0),
woosh.Token(woosh.NAME, 'unsetenv', 690, 8, 690, 16),
woosh.Token(woosh.OP, '(', 690, 16, 690, 17),
woosh.Token(woosh.NAME, 'encodedkey', 690, 17, 690, 27),
woosh.Token(woosh.OP, ')', 690, 27, 690, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 690, 28, 691, 0),
woosh.Token(woosh.NAME, 'try', 691, 8, 691, 11),
woosh.Token(woosh.OP, ':', 691, 11, 691, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 691, 12, 692, 0),
woosh.Token(woosh.INDENT, '            ', 692, 0, 692, 12),
woosh.Token(woosh.NAME, 'del', 692, 12, 692, 15),
woosh.Token(woosh.NAME, 'self', 692, 16, 692, 20),
woosh.Token(woosh.OP, '.', 692, 20, 692, 21),
woosh.Token(woosh.NAME, '_data', 692, 21, 692, 26),
woosh.Token(woosh.OP, '[', 692, 26, 692, 27),
woosh.Token(woosh.NAME, 'encodedkey', 692, 27, 692, 37),
woosh.Token(woosh.OP, ']', 692, 37, 692, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 692, 38, 693, 0),
woosh.Token(woosh.DEDENT, '        ', 693, 0, 693, 8),
woosh.Token(woosh.NAME, 'except', 693, 8, 693, 14),
woosh.Token(woosh.NAME, 'KeyError', 693, 15, 693, 23),
woosh.Token(woosh.OP, ':', 693, 23, 693, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 693, 24, 694, 0),
woosh.Token(woosh.COMMENT, '# raise KeyError with the original key value', 694, 12, 694, 56),
woosh.Token(woosh.INDENT, '            ', 695, 0, 695, 12),
woosh.Token(woosh.NAME, 'raise', 695, 12, 695, 17),
woosh.Token(woosh.NAME, 'KeyError', 695, 18, 695, 26),
woosh.Token(woosh.OP, '(', 695, 26, 695, 27),
woosh.Token(woosh.NAME, 'key', 695, 27, 695, 30),
woosh.Token(woosh.OP, ')', 695, 30, 695, 31),
woosh.Token(woosh.NAME, 'from', 695, 32, 695, 36),
woosh.Token(woosh.NAME, 'None', 695, 37, 695, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 695, 41, 696, 0),
woosh.Token(woosh.DEDENT, '    ', 697, 0, 697, 4),
woosh.Token(woosh.DEDENT, '', 697, 4, 697, 4),
woosh.Token(woosh.NAME, 'def', 697, 4, 697, 7),
woosh.Token(woosh.NAME, '__iter__', 697, 8, 697, 16),
woosh.Token(woosh.OP, '(', 697, 16, 697, 17),
woosh.Token(woosh.NAME, 'self', 697, 17, 697, 21),
woosh.Token(woosh.OP, ')', 697, 21, 697, 22),
woosh.Token(woosh.OP, ':', 697, 22, 697, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 697, 23, 698, 0),
woosh.Token(woosh.COMMENT, '# list() from dict object is an atomic operation', 698, 8, 698, 56),
woosh.Token(woosh.INDENT, '        ', 699, 0, 699, 8),
woosh.Token(woosh.NAME, 'keys', 699, 8, 699, 12),
woosh.Token(woosh.OP, '=', 699, 13, 699, 14),
woosh.Token(woosh.NAME, 'list', 699, 15, 699, 19),
woosh.Token(woosh.OP, '(', 699, 19, 699, 20),
woosh.Token(woosh.NAME, 'self', 699, 20, 699, 24),
woosh.Token(woosh.OP, '.', 699, 24, 699, 25),
woosh.Token(woosh.NAME, '_data', 699, 25, 699, 30),
woosh.Token(woosh.OP, ')', 699, 30, 699, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 31, 700, 0),
woosh.Token(woosh.NAME, 'for', 700, 8, 700, 11),
woosh.Token(woosh.NAME, 'key', 700, 12, 700, 15),
woosh.Token(woosh.NAME, 'in', 700, 16, 700, 18),
woosh.Token(woosh.NAME, 'keys', 700, 19, 700, 23),
woosh.Token(woosh.OP, ':', 700, 23, 700, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 24, 701, 0),
woosh.Token(woosh.INDENT, '            ', 701, 0, 701, 12),
woosh.Token(woosh.NAME, 'yield', 701, 12, 701, 17),
woosh.Token(woosh.NAME, 'self', 701, 18, 701, 22),
woosh.Token(woosh.OP, '.', 701, 22, 701, 23),
woosh.Token(woosh.NAME, 'decodekey', 701, 23, 701, 32),
woosh.Token(woosh.OP, '(', 701, 32, 701, 33),
woosh.Token(woosh.NAME, 'key', 701, 33, 701, 36),
woosh.Token(woosh.OP, ')', 701, 36, 701, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 701, 37, 702, 0),
woosh.Token(woosh.DEDENT, '    ', 703, 0, 703, 4),
woosh.Token(woosh.DEDENT, '', 703, 4, 703, 4),
woosh.Token(woosh.NAME, 'def', 703, 4, 703, 7),
woosh.Token(woosh.NAME, '__len__', 703, 8, 703, 15),
woosh.Token(woosh.OP, '(', 703, 15, 703, 16),
woosh.Token(woosh.NAME, 'self', 703, 16, 703, 20),
woosh.Token(woosh.OP, ')', 703, 20, 703, 21),
woosh.Token(woosh.OP, ':', 703, 21, 703, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 703, 22, 704, 0),
woosh.Token(woosh.INDENT, '        ', 704, 0, 704, 8),
woosh.Token(woosh.NAME, 'return', 704, 8, 704, 14),
woosh.Token(woosh.NAME, 'len', 704, 15, 704, 18),
woosh.Token(woosh.OP, '(', 704, 18, 704, 19),
woosh.Token(woosh.NAME, 'self', 704, 19, 704, 23),
woosh.Token(woosh.OP, '.', 704, 23, 704, 24),
woosh.Token(woosh.NAME, '_data', 704, 24, 704, 29),
woosh.Token(woosh.OP, ')', 704, 29, 704, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 704, 30, 705, 0),
woosh.Token(woosh.DEDENT, '    ', 706, 0, 706, 4),
woosh.Token(woosh.NAME, 'def', 706, 4, 706, 7),
woosh.Token(woosh.NAME, '__repr__', 706, 8, 706, 16),
woosh.Token(woosh.OP, '(', 706, 16, 706, 17),
woosh.Token(woosh.NAME, 'self', 706, 17, 706, 21),
woosh.Token(woosh.OP, ')', 706, 21, 706, 22),
woosh.Token(woosh.OP, ':', 706, 22, 706, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 706, 23, 707, 0),
woosh.Token(woosh.INDENT, '        ', 707, 0, 707, 8),
woosh.Token(woosh.NAME, 'return', 707, 8, 707, 14),
woosh.Token(woosh.STRING, "'environ({{{}}})'", 707, 15, 707, 32),
woosh.Token(woosh.OP, '.', 707, 32, 707, 33),
woosh.Token(woosh.NAME, 'format', 707, 33, 707, 39),
woosh.Token(woosh.OP, '(', 707, 39, 707, 40),
woosh.Token(woosh.STRING, "', '", 707, 40, 707, 44),
woosh.Token(woosh.OP, '.', 707, 44, 707, 45),
woosh.Token(woosh.NAME, 'join', 707, 45, 707, 49),
woosh.Token(woosh.OP, '(', 707, 49, 707, 50),
woosh.Token(woosh.OP, '(', 708, 12, 708, 13),
woosh.Token(woosh.STRING, "'{!r}: {!r}'", 708, 13, 708, 25),
woosh.Token(woosh.OP, '.', 708, 25, 708, 26),
woosh.Token(woosh.NAME, 'format', 708, 26, 708, 32),
woosh.Token(woosh.OP, '(', 708, 32, 708, 33),
woosh.Token(woosh.NAME, 'self', 708, 33, 708, 37),
woosh.Token(woosh.OP, '.', 708, 37, 708, 38),
woosh.Token(woosh.NAME, 'decodekey', 708, 38, 708, 47),
woosh.Token(woosh.OP, '(', 708, 47, 708, 48),
woosh.Token(woosh.NAME, 'key', 708, 48, 708, 51),
woosh.Token(woosh.OP, ')', 708, 51, 708, 52),
woosh.Token(woosh.OP, ',', 708, 52, 708, 53),
woosh.Token(woosh.NAME, 'self', 708, 54, 708, 58),
woosh.Token(woosh.OP, '.', 708, 58, 708, 59),
woosh.Token(woosh.NAME, 'decodevalue', 708, 59, 708, 70),
woosh.Token(woosh.OP, '(', 708, 70, 708, 71),
woosh.Token(woosh.NAME, 'value', 708, 71, 708, 76),
woosh.Token(woosh.OP, ')', 708, 76, 708, 77),
woosh.Token(woosh.OP, ')', 708, 77, 708, 78),
woosh.Token(woosh.NAME, 'for', 709, 12, 709, 15),
woosh.Token(woosh.NAME, 'key', 709, 16, 709, 19),
woosh.Token(woosh.OP, ',', 709, 19, 709, 20),
woosh.Token(woosh.NAME, 'value', 709, 21, 709, 26),
woosh.Token(woosh.NAME, 'in', 709, 27, 709, 29),
woosh.Token(woosh.NAME, 'self', 709, 30, 709, 34),
woosh.Token(woosh.OP, '.', 709, 34, 709, 35),
woosh.Token(woosh.NAME, '_data', 709, 35, 709, 40),
woosh.Token(woosh.OP, '.', 709, 40, 709, 41),
woosh.Token(woosh.NAME, 'items', 709, 41, 709, 46),
woosh.Token(woosh.OP, '(', 709, 46, 709, 47),
woosh.Token(woosh.OP, ')', 709, 47, 709, 48),
woosh.Token(woosh.OP, ')', 709, 48, 709, 49),
woosh.Token(woosh.OP, ')', 709, 49, 709, 50),
woosh.Token(woosh.OP, ')', 709, 50, 709, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 51, 710, 0),
woosh.Token(woosh.DEDENT, '    ', 711, 0, 711, 4),
woosh.Token(woosh.NAME, 'def', 711, 4, 711, 7),
woosh.Token(woosh.NAME, 'copy', 711, 8, 711, 12),
woosh.Token(woosh.OP, '(', 711, 12, 711, 13),
woosh.Token(woosh.NAME, 'self', 711, 13, 711, 17),
woosh.Token(woosh.OP, ')', 711, 17, 711, 18),
woosh.Token(woosh.OP, ':', 711, 18, 711, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 19, 712, 0),
woosh.Token(woosh.INDENT, '        ', 712, 0, 712, 8),
woosh.Token(woosh.NAME, 'return', 712, 8, 712, 14),
woosh.Token(woosh.NAME, 'dict', 712, 15, 712, 19),
woosh.Token(woosh.OP, '(', 712, 19, 712, 20),
woosh.Token(woosh.NAME, 'self', 712, 20, 712, 24),
woosh.Token(woosh.OP, ')', 712, 24, 712, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 712, 25, 713, 0),
woosh.Token(woosh.DEDENT, '    ', 714, 0, 714, 4),
woosh.Token(woosh.NAME, 'def', 714, 4, 714, 7),
woosh.Token(woosh.NAME, 'setdefault', 714, 8, 714, 18),
woosh.Token(woosh.OP, '(', 714, 18, 714, 19),
woosh.Token(woosh.NAME, 'self', 714, 19, 714, 23),
woosh.Token(woosh.OP, ',', 714, 23, 714, 24),
woosh.Token(woosh.NAME, 'key', 714, 25, 714, 28),
woosh.Token(woosh.OP, ',', 714, 28, 714, 29),
woosh.Token(woosh.NAME, 'value', 714, 30, 714, 35),
woosh.Token(woosh.OP, ')', 714, 35, 714, 36),
woosh.Token(woosh.OP, ':', 714, 36, 714, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 37, 715, 0),
woosh.Token(woosh.INDENT, '        ', 715, 0, 715, 8),
woosh.Token(woosh.NAME, 'if', 715, 8, 715, 10),
woosh.Token(woosh.NAME, 'key', 715, 11, 715, 14),
woosh.Token(woosh.NAME, 'not', 715, 15, 715, 18),
woosh.Token(woosh.NAME, 'in', 715, 19, 715, 21),
woosh.Token(woosh.NAME, 'self', 715, 22, 715, 26),
woosh.Token(woosh.OP, ':', 715, 26, 715, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 27, 716, 0),
woosh.Token(woosh.INDENT, '            ', 716, 0, 716, 12),
woosh.Token(woosh.NAME, 'self', 716, 12, 716, 16),
woosh.Token(woosh.OP, '[', 716, 16, 716, 17),
woosh.Token(woosh.NAME, 'key', 716, 17, 716, 20),
woosh.Token(woosh.OP, ']', 716, 20, 716, 21),
woosh.Token(woosh.OP, '=', 716, 22, 716, 23),
woosh.Token(woosh.NAME, 'value', 716, 24, 716, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 29, 717, 0),
woosh.Token(woosh.DEDENT, '        ', 717, 0, 717, 8),
woosh.Token(woosh.NAME, 'return', 717, 8, 717, 14),
woosh.Token(woosh.NAME, 'self', 717, 15, 717, 19),
woosh.Token(woosh.OP, '[', 717, 19, 717, 20),
woosh.Token(woosh.NAME, 'key', 717, 20, 717, 23),
woosh.Token(woosh.OP, ']', 717, 23, 717, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 24, 718, 0),
woosh.Token(woosh.DEDENT, '    ', 719, 0, 719, 4),
woosh.Token(woosh.NAME, 'def', 719, 4, 719, 7),
woosh.Token(woosh.NAME, '__ior__', 719, 8, 719, 15),
woosh.Token(woosh.OP, '(', 719, 15, 719, 16),
woosh.Token(woosh.NAME, 'self', 719, 16, 719, 20),
woosh.Token(woosh.OP, ',', 719, 20, 719, 21),
woosh.Token(woosh.NAME, 'other', 719, 22, 719, 27),
woosh.Token(woosh.OP, ')', 719, 27, 719, 28),
woosh.Token(woosh.OP, ':', 719, 28, 719, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 719, 29, 720, 0),
woosh.Token(woosh.INDENT, '        ', 720, 0, 720, 8),
woosh.Token(woosh.NAME, 'self', 720, 8, 720, 12),
woosh.Token(woosh.OP, '.', 720, 12, 720, 13),
woosh.Token(woosh.NAME, 'update', 720, 13, 720, 19),
woosh.Token(woosh.OP, '(', 720, 19, 720, 20),
woosh.Token(woosh.NAME, 'other', 720, 20, 720, 25),
woosh.Token(woosh.OP, ')', 720, 25, 720, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 26, 721, 0),
woosh.Token(woosh.NAME, 'return', 721, 8, 721, 14),
woosh.Token(woosh.NAME, 'self', 721, 15, 721, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 19, 722, 0),
woosh.Token(woosh.DEDENT, '    ', 723, 0, 723, 4),
woosh.Token(woosh.NAME, 'def', 723, 4, 723, 7),
woosh.Token(woosh.NAME, '__or__', 723, 8, 723, 14),
woosh.Token(woosh.OP, '(', 723, 14, 723, 15),
woosh.Token(woosh.NAME, 'self', 723, 15, 723, 19),
woosh.Token(woosh.OP, ',', 723, 19, 723, 20),
woosh.Token(woosh.NAME, 'other', 723, 21, 723, 26),
woosh.Token(woosh.OP, ')', 723, 26, 723, 27),
woosh.Token(woosh.OP, ':', 723, 27, 723, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 28, 724, 0),
woosh.Token(woosh.INDENT, '        ', 724, 0, 724, 8),
woosh.Token(woosh.NAME, 'if', 724, 8, 724, 10),
woosh.Token(woosh.NAME, 'not', 724, 11, 724, 14),
woosh.Token(woosh.NAME, 'isinstance', 724, 15, 724, 25),
woosh.Token(woosh.OP, '(', 724, 25, 724, 26),
woosh.Token(woosh.NAME, 'other', 724, 26, 724, 31),
woosh.Token(woosh.OP, ',', 724, 31, 724, 32),
woosh.Token(woosh.NAME, 'Mapping', 724, 33, 724, 40),
woosh.Token(woosh.OP, ')', 724, 40, 724, 41),
woosh.Token(woosh.OP, ':', 724, 41, 724, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 724, 42, 725, 0),
woosh.Token(woosh.INDENT, '            ', 725, 0, 725, 12),
woosh.Token(woosh.NAME, 'return', 725, 12, 725, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 725, 19, 725, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 33, 726, 0),
woosh.Token(woosh.DEDENT, '        ', 726, 0, 726, 8),
woosh.Token(woosh.NAME, 'new', 726, 8, 726, 11),
woosh.Token(woosh.OP, '=', 726, 12, 726, 13),
woosh.Token(woosh.NAME, 'dict', 726, 14, 726, 18),
woosh.Token(woosh.OP, '(', 726, 18, 726, 19),
woosh.Token(woosh.NAME, 'self', 726, 19, 726, 23),
woosh.Token(woosh.OP, ')', 726, 23, 726, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 24, 727, 0),
woosh.Token(woosh.NAME, 'new', 727, 8, 727, 11),
woosh.Token(woosh.OP, '.', 727, 11, 727, 12),
woosh.Token(woosh.NAME, 'update', 727, 12, 727, 18),
woosh.Token(woosh.OP, '(', 727, 18, 727, 19),
woosh.Token(woosh.NAME, 'other', 727, 19, 727, 24),
woosh.Token(woosh.OP, ')', 727, 24, 727, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 25, 728, 0),
woosh.Token(woosh.NAME, 'return', 728, 8, 728, 14),
woosh.Token(woosh.NAME, 'new', 728, 15, 728, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 18, 729, 0),
woosh.Token(woosh.DEDENT, '    ', 730, 0, 730, 4),
woosh.Token(woosh.NAME, 'def', 730, 4, 730, 7),
woosh.Token(woosh.NAME, '__ror__', 730, 8, 730, 15),
woosh.Token(woosh.OP, '(', 730, 15, 730, 16),
woosh.Token(woosh.NAME, 'self', 730, 16, 730, 20),
woosh.Token(woosh.OP, ',', 730, 20, 730, 21),
woosh.Token(woosh.NAME, 'other', 730, 22, 730, 27),
woosh.Token(woosh.OP, ')', 730, 27, 730, 28),
woosh.Token(woosh.OP, ':', 730, 28, 730, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 730, 29, 731, 0),
woosh.Token(woosh.INDENT, '        ', 731, 0, 731, 8),
woosh.Token(woosh.NAME, 'if', 731, 8, 731, 10),
woosh.Token(woosh.NAME, 'not', 731, 11, 731, 14),
woosh.Token(woosh.NAME, 'isinstance', 731, 15, 731, 25),
woosh.Token(woosh.OP, '(', 731, 25, 731, 26),
woosh.Token(woosh.NAME, 'other', 731, 26, 731, 31),
woosh.Token(woosh.OP, ',', 731, 31, 731, 32),
woosh.Token(woosh.NAME, 'Mapping', 731, 33, 731, 40),
woosh.Token(woosh.OP, ')', 731, 40, 731, 41),
woosh.Token(woosh.OP, ':', 731, 41, 731, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 731, 42, 732, 0),
woosh.Token(woosh.INDENT, '            ', 732, 0, 732, 12),
woosh.Token(woosh.NAME, 'return', 732, 12, 732, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 732, 19, 732, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 732, 33, 733, 0),
woosh.Token(woosh.DEDENT, '        ', 733, 0, 733, 8),
woosh.Token(woosh.NAME, 'new', 733, 8, 733, 11),
woosh.Token(woosh.OP, '=', 733, 12, 733, 13),
woosh.Token(woosh.NAME, 'dict', 733, 14, 733, 18),
woosh.Token(woosh.OP, '(', 733, 18, 733, 19),
woosh.Token(woosh.NAME, 'other', 733, 19, 733, 24),
woosh.Token(woosh.OP, ')', 733, 24, 733, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 733, 25, 734, 0),
woosh.Token(woosh.NAME, 'new', 734, 8, 734, 11),
woosh.Token(woosh.OP, '.', 734, 11, 734, 12),
woosh.Token(woosh.NAME, 'update', 734, 12, 734, 18),
woosh.Token(woosh.OP, '(', 734, 18, 734, 19),
woosh.Token(woosh.NAME, 'self', 734, 19, 734, 23),
woosh.Token(woosh.OP, ')', 734, 23, 734, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 24, 735, 0),
woosh.Token(woosh.NAME, 'return', 735, 8, 735, 14),
woosh.Token(woosh.NAME, 'new', 735, 15, 735, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 735, 18, 736, 0),
woosh.Token(woosh.DEDENT, '', 737, 0, 737, 0),
woosh.Token(woosh.DEDENT, '', 737, 0, 737, 0),
woosh.Token(woosh.NAME, 'def', 737, 0, 737, 3),
woosh.Token(woosh.NAME, '_createenviron', 737, 4, 737, 18),
woosh.Token(woosh.OP, '(', 737, 18, 737, 19),
woosh.Token(woosh.OP, ')', 737, 19, 737, 20),
woosh.Token(woosh.OP, ':', 737, 20, 737, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 737, 21, 738, 0),
woosh.Token(woosh.INDENT, '    ', 738, 0, 738, 4),
woosh.Token(woosh.NAME, 'if', 738, 4, 738, 6),
woosh.Token(woosh.NAME, 'name', 738, 7, 738, 11),
woosh.Token(woosh.OP, '==', 738, 12, 738, 14),
woosh.Token(woosh.STRING, "'nt'", 738, 15, 738, 19),
woosh.Token(woosh.OP, ':', 738, 19, 738, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 20, 739, 0),
woosh.Token(woosh.COMMENT, '# Where Env Var Names Must Be UPPERCASE', 739, 8, 739, 47),
woosh.Token(woosh.INDENT, '        ', 740, 0, 740, 8),
woosh.Token(woosh.NAME, 'def', 740, 8, 740, 11),
woosh.Token(woosh.NAME, 'check_str', 740, 12, 740, 21),
woosh.Token(woosh.OP, '(', 740, 21, 740, 22),
woosh.Token(woosh.NAME, 'value', 740, 22, 740, 27),
woosh.Token(woosh.OP, ')', 740, 27, 740, 28),
woosh.Token(woosh.OP, ':', 740, 28, 740, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 740, 29, 741, 0),
woosh.Token(woosh.INDENT, '            ', 741, 0, 741, 12),
woosh.Token(woosh.NAME, 'if', 741, 12, 741, 14),
woosh.Token(woosh.NAME, 'not', 741, 15, 741, 18),
woosh.Token(woosh.NAME, 'isinstance', 741, 19, 741, 29),
woosh.Token(woosh.OP, '(', 741, 29, 741, 30),
woosh.Token(woosh.NAME, 'value', 741, 30, 741, 35),
woosh.Token(woosh.OP, ',', 741, 35, 741, 36),
woosh.Token(woosh.NAME, 'str', 741, 37, 741, 40),
woosh.Token(woosh.OP, ')', 741, 40, 741, 41),
woosh.Token(woosh.OP, ':', 741, 41, 741, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 42, 742, 0),
woosh.Token(woosh.INDENT, '                ', 742, 0, 742, 16),
woosh.Token(woosh.NAME, 'raise', 742, 16, 742, 21),
woosh.Token(woosh.NAME, 'TypeError', 742, 22, 742, 31),
woosh.Token(woosh.OP, '(', 742, 31, 742, 32),
woosh.Token(woosh.STRING, '"str expected, not %s"', 742, 32, 742, 54),
woosh.Token(woosh.OP, '%', 742, 55, 742, 56),
woosh.Token(woosh.NAME, 'type', 742, 57, 742, 61),
woosh.Token(woosh.OP, '(', 742, 61, 742, 62),
woosh.Token(woosh.NAME, 'value', 742, 62, 742, 67),
woosh.Token(woosh.OP, ')', 742, 67, 742, 68),
woosh.Token(woosh.OP, '.', 742, 68, 742, 69),
woosh.Token(woosh.NAME, '__name__', 742, 69, 742, 77),
woosh.Token(woosh.OP, ')', 742, 77, 742, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 742, 78, 743, 0),
woosh.Token(woosh.DEDENT, '            ', 743, 0, 743, 12),
woosh.Token(woosh.NAME, 'return', 743, 12, 743, 18),
woosh.Token(woosh.NAME, 'value', 743, 19, 743, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 24, 744, 0),
woosh.Token(woosh.DEDENT, '        ', 744, 0, 744, 8),
woosh.Token(woosh.NAME, 'encode', 744, 8, 744, 14),
woosh.Token(woosh.OP, '=', 744, 15, 744, 16),
woosh.Token(woosh.NAME, 'check_str', 744, 17, 744, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 26, 745, 0),
woosh.Token(woosh.NAME, 'decode', 745, 8, 745, 14),
woosh.Token(woosh.OP, '=', 745, 15, 745, 16),
woosh.Token(woosh.NAME, 'str', 745, 17, 745, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 745, 20, 746, 0),
woosh.Token(woosh.NAME, 'def', 746, 8, 746, 11),
woosh.Token(woosh.NAME, 'encodekey', 746, 12, 746, 21),
woosh.Token(woosh.OP, '(', 746, 21, 746, 22),
woosh.Token(woosh.NAME, 'key', 746, 22, 746, 25),
woosh.Token(woosh.OP, ')', 746, 25, 746, 26),
woosh.Token(woosh.OP, ':', 746, 26, 746, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 27, 747, 0),
woosh.Token(woosh.INDENT, '            ', 747, 0, 747, 12),
woosh.Token(woosh.NAME, 'return', 747, 12, 747, 18),
woosh.Token(woosh.NAME, 'encode', 747, 19, 747, 25),
woosh.Token(woosh.OP, '(', 747, 25, 747, 26),
woosh.Token(woosh.NAME, 'key', 747, 26, 747, 29),
woosh.Token(woosh.OP, ')', 747, 29, 747, 30),
woosh.Token(woosh.OP, '.', 747, 30, 747, 31),
woosh.Token(woosh.NAME, 'upper', 747, 31, 747, 36),
woosh.Token(woosh.OP, '(', 747, 36, 747, 37),
woosh.Token(woosh.OP, ')', 747, 37, 747, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 38, 748, 0),
woosh.Token(woosh.DEDENT, '        ', 748, 0, 748, 8),
woosh.Token(woosh.NAME, 'data', 748, 8, 748, 12),
woosh.Token(woosh.OP, '=', 748, 13, 748, 14),
woosh.Token(woosh.OP, '{', 748, 15, 748, 16),
woosh.Token(woosh.OP, '}', 748, 16, 748, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 17, 749, 0),
woosh.Token(woosh.NAME, 'for', 749, 8, 749, 11),
woosh.Token(woosh.NAME, 'key', 749, 12, 749, 15),
woosh.Token(woosh.OP, ',', 749, 15, 749, 16),
woosh.Token(woosh.NAME, 'value', 749, 17, 749, 22),
woosh.Token(woosh.NAME, 'in', 749, 23, 749, 25),
woosh.Token(woosh.NAME, 'environ', 749, 26, 749, 33),
woosh.Token(woosh.OP, '.', 749, 33, 749, 34),
woosh.Token(woosh.NAME, 'items', 749, 34, 749, 39),
woosh.Token(woosh.OP, '(', 749, 39, 749, 40),
woosh.Token(woosh.OP, ')', 749, 40, 749, 41),
woosh.Token(woosh.OP, ':', 749, 41, 749, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 749, 42, 750, 0),
woosh.Token(woosh.INDENT, '            ', 750, 0, 750, 12),
woosh.Token(woosh.NAME, 'data', 750, 12, 750, 16),
woosh.Token(woosh.OP, '[', 750, 16, 750, 17),
woosh.Token(woosh.NAME, 'encodekey', 750, 17, 750, 26),
woosh.Token(woosh.OP, '(', 750, 26, 750, 27),
woosh.Token(woosh.NAME, 'key', 750, 27, 750, 30),
woosh.Token(woosh.OP, ')', 750, 30, 750, 31),
woosh.Token(woosh.OP, ']', 750, 31, 750, 32),
woosh.Token(woosh.OP, '=', 750, 33, 750, 34),
woosh.Token(woosh.NAME, 'value', 750, 35, 750, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 40, 751, 0),
woosh.Token(woosh.DEDENT, '    ', 751, 0, 751, 4),
woosh.Token(woosh.DEDENT, '', 751, 4, 751, 4),
woosh.Token(woosh.NAME, 'else', 751, 4, 751, 8),
woosh.Token(woosh.OP, ':', 751, 8, 751, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 751, 9, 752, 0),
woosh.Token(woosh.COMMENT, '# Where Env Var Names Can Be Mixed Case', 752, 8, 752, 47),
woosh.Token(woosh.INDENT, '        ', 753, 0, 753, 8),
woosh.Token(woosh.NAME, 'encoding', 753, 8, 753, 16),
woosh.Token(woosh.OP, '=', 753, 17, 753, 18),
woosh.Token(woosh.NAME, 'sys', 753, 19, 753, 22),
woosh.Token(woosh.OP, '.', 753, 22, 753, 23),
woosh.Token(woosh.NAME, 'getfilesystemencoding', 753, 23, 753, 44),
woosh.Token(woosh.OP, '(', 753, 44, 753, 45),
woosh.Token(woosh.OP, ')', 753, 45, 753, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 46, 754, 0),
woosh.Token(woosh.NAME, 'def', 754, 8, 754, 11),
woosh.Token(woosh.NAME, 'encode', 754, 12, 754, 18),
woosh.Token(woosh.OP, '(', 754, 18, 754, 19),
woosh.Token(woosh.NAME, 'value', 754, 19, 754, 24),
woosh.Token(woosh.OP, ')', 754, 24, 754, 25),
woosh.Token(woosh.OP, ':', 754, 25, 754, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 26, 755, 0),
woosh.Token(woosh.INDENT, '            ', 755, 0, 755, 12),
woosh.Token(woosh.NAME, 'if', 755, 12, 755, 14),
woosh.Token(woosh.NAME, 'not', 755, 15, 755, 18),
woosh.Token(woosh.NAME, 'isinstance', 755, 19, 755, 29),
woosh.Token(woosh.OP, '(', 755, 29, 755, 30),
woosh.Token(woosh.NAME, 'value', 755, 30, 755, 35),
woosh.Token(woosh.OP, ',', 755, 35, 755, 36),
woosh.Token(woosh.NAME, 'str', 755, 37, 755, 40),
woosh.Token(woosh.OP, ')', 755, 40, 755, 41),
woosh.Token(woosh.OP, ':', 755, 41, 755, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 755, 42, 756, 0),
woosh.Token(woosh.INDENT, '                ', 756, 0, 756, 16),
woosh.Token(woosh.NAME, 'raise', 756, 16, 756, 21),
woosh.Token(woosh.NAME, 'TypeError', 756, 22, 756, 31),
woosh.Token(woosh.OP, '(', 756, 31, 756, 32),
woosh.Token(woosh.STRING, '"str expected, not %s"', 756, 32, 756, 54),
woosh.Token(woosh.OP, '%', 756, 55, 756, 56),
woosh.Token(woosh.NAME, 'type', 756, 57, 756, 61),
woosh.Token(woosh.OP, '(', 756, 61, 756, 62),
woosh.Token(woosh.NAME, 'value', 756, 62, 756, 67),
woosh.Token(woosh.OP, ')', 756, 67, 756, 68),
woosh.Token(woosh.OP, '.', 756, 68, 756, 69),
woosh.Token(woosh.NAME, '__name__', 756, 69, 756, 77),
woosh.Token(woosh.OP, ')', 756, 77, 756, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 78, 757, 0),
woosh.Token(woosh.DEDENT, '            ', 757, 0, 757, 12),
woosh.Token(woosh.NAME, 'return', 757, 12, 757, 18),
woosh.Token(woosh.NAME, 'value', 757, 19, 757, 24),
woosh.Token(woosh.OP, '.', 757, 24, 757, 25),
woosh.Token(woosh.NAME, 'encode', 757, 25, 757, 31),
woosh.Token(woosh.OP, '(', 757, 31, 757, 32),
woosh.Token(woosh.NAME, 'encoding', 757, 32, 757, 40),
woosh.Token(woosh.OP, ',', 757, 40, 757, 41),
woosh.Token(woosh.STRING, "'surrogateescape'", 757, 42, 757, 59),
woosh.Token(woosh.OP, ')', 757, 59, 757, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 60, 758, 0),
woosh.Token(woosh.DEDENT, '        ', 758, 0, 758, 8),
woosh.Token(woosh.NAME, 'def', 758, 8, 758, 11),
woosh.Token(woosh.NAME, 'decode', 758, 12, 758, 18),
woosh.Token(woosh.OP, '(', 758, 18, 758, 19),
woosh.Token(woosh.NAME, 'value', 758, 19, 758, 24),
woosh.Token(woosh.OP, ')', 758, 24, 758, 25),
woosh.Token(woosh.OP, ':', 758, 25, 758, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 26, 759, 0),
woosh.Token(woosh.INDENT, '            ', 759, 0, 759, 12),
woosh.Token(woosh.NAME, 'return', 759, 12, 759, 18),
woosh.Token(woosh.NAME, 'value', 759, 19, 759, 24),
woosh.Token(woosh.OP, '.', 759, 24, 759, 25),
woosh.Token(woosh.NAME, 'decode', 759, 25, 759, 31),
woosh.Token(woosh.OP, '(', 759, 31, 759, 32),
woosh.Token(woosh.NAME, 'encoding', 759, 32, 759, 40),
woosh.Token(woosh.OP, ',', 759, 40, 759, 41),
woosh.Token(woosh.STRING, "'surrogateescape'", 759, 42, 759, 59),
woosh.Token(woosh.OP, ')', 759, 59, 759, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 60, 760, 0),
woosh.Token(woosh.DEDENT, '        ', 760, 0, 760, 8),
woosh.Token(woosh.NAME, 'encodekey', 760, 8, 760, 17),
woosh.Token(woosh.OP, '=', 760, 18, 760, 19),
woosh.Token(woosh.NAME, 'encode', 760, 20, 760, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 26, 761, 0),
woosh.Token(woosh.NAME, 'data', 761, 8, 761, 12),
woosh.Token(woosh.OP, '=', 761, 13, 761, 14),
woosh.Token(woosh.NAME, 'environ', 761, 15, 761, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 22, 762, 0),
woosh.Token(woosh.DEDENT, '    ', 762, 0, 762, 4),
woosh.Token(woosh.NAME, 'return', 762, 4, 762, 10),
woosh.Token(woosh.NAME, '_Environ', 762, 11, 762, 19),
woosh.Token(woosh.OP, '(', 762, 19, 762, 20),
woosh.Token(woosh.NAME, 'data', 762, 20, 762, 24),
woosh.Token(woosh.OP, ',', 762, 24, 762, 25),
woosh.Token(woosh.NAME, 'encodekey', 763, 8, 763, 17),
woosh.Token(woosh.OP, ',', 763, 17, 763, 18),
woosh.Token(woosh.NAME, 'decode', 763, 19, 763, 25),
woosh.Token(woosh.OP, ',', 763, 25, 763, 26),
woosh.Token(woosh.NAME, 'encode', 764, 8, 764, 14),
woosh.Token(woosh.OP, ',', 764, 14, 764, 15),
woosh.Token(woosh.NAME, 'decode', 764, 16, 764, 22),
woosh.Token(woosh.OP, ')', 764, 22, 764, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 764, 23, 765, 0),
woosh.Token(woosh.COMMENT, '# unicode environ', 766, 0, 766, 17),
woosh.Token(woosh.DEDENT, '', 767, 0, 767, 0),
woosh.Token(woosh.NAME, 'environ', 767, 0, 767, 7),
woosh.Token(woosh.OP, '=', 767, 8, 767, 9),
woosh.Token(woosh.NAME, '_createenviron', 767, 10, 767, 24),
woosh.Token(woosh.OP, '(', 767, 24, 767, 25),
woosh.Token(woosh.OP, ')', 767, 25, 767, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 767, 26, 768, 0),
woosh.Token(woosh.NAME, 'del', 768, 0, 768, 3),
woosh.Token(woosh.NAME, '_createenviron', 768, 4, 768, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 768, 18, 769, 0),
woosh.Token(woosh.NAME, 'def', 771, 0, 771, 3),
woosh.Token(woosh.NAME, 'getenv', 771, 4, 771, 10),
woosh.Token(woosh.OP, '(', 771, 10, 771, 11),
woosh.Token(woosh.NAME, 'key', 771, 11, 771, 14),
woosh.Token(woosh.OP, ',', 771, 14, 771, 15),
woosh.Token(woosh.NAME, 'default', 771, 16, 771, 23),
woosh.Token(woosh.OP, '=', 771, 23, 771, 24),
woosh.Token(woosh.NAME, 'None', 771, 24, 771, 28),
woosh.Token(woosh.OP, ')', 771, 28, 771, 29),
woosh.Token(woosh.OP, ':', 771, 29, 771, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 771, 30, 772, 0),
woosh.Token(woosh.INDENT, '    ', 772, 0, 772, 4),
woosh.Token(woosh.STRING, '"""Get an environment variable, return None if it doesn\'t exist.\r\n    The optional second argument can specify an alternate default.\r\n    key, default and the result are str."""', 772, 4, 774, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 43, 775, 0),
woosh.Token(woosh.NAME, 'return', 775, 4, 775, 10),
woosh.Token(woosh.NAME, 'environ', 775, 11, 775, 18),
woosh.Token(woosh.OP, '.', 775, 18, 775, 19),
woosh.Token(woosh.NAME, 'get', 775, 19, 775, 22),
woosh.Token(woosh.OP, '(', 775, 22, 775, 23),
woosh.Token(woosh.NAME, 'key', 775, 23, 775, 26),
woosh.Token(woosh.OP, ',', 775, 26, 775, 27),
woosh.Token(woosh.NAME, 'default', 775, 28, 775, 35),
woosh.Token(woosh.OP, ')', 775, 35, 775, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 36, 776, 0),
woosh.Token(woosh.DEDENT, '', 777, 0, 777, 0),
woosh.Token(woosh.NAME, 'supports_bytes_environ', 777, 0, 777, 22),
woosh.Token(woosh.OP, '=', 777, 23, 777, 24),
woosh.Token(woosh.OP, '(', 777, 25, 777, 26),
woosh.Token(woosh.NAME, 'name', 777, 26, 777, 30),
woosh.Token(woosh.OP, '!=', 777, 31, 777, 33),
woosh.Token(woosh.STRING, "'nt'", 777, 34, 777, 38),
woosh.Token(woosh.OP, ')', 777, 38, 777, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 39, 778, 0),
woosh.Token(woosh.NAME, '__all__', 778, 0, 778, 7),
woosh.Token(woosh.OP, '.', 778, 7, 778, 8),
woosh.Token(woosh.NAME, 'extend', 778, 8, 778, 14),
woosh.Token(woosh.OP, '(', 778, 14, 778, 15),
woosh.Token(woosh.OP, '(', 778, 15, 778, 16),
woosh.Token(woosh.STRING, '"getenv"', 778, 16, 778, 24),
woosh.Token(woosh.OP, ',', 778, 24, 778, 25),
woosh.Token(woosh.STRING, '"supports_bytes_environ"', 778, 26, 778, 50),
woosh.Token(woosh.OP, ')', 778, 50, 778, 51),
woosh.Token(woosh.OP, ')', 778, 51, 778, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 52, 779, 0),
woosh.Token(woosh.NAME, 'if', 780, 0, 780, 2),
woosh.Token(woosh.NAME, 'supports_bytes_environ', 780, 3, 780, 25),
woosh.Token(woosh.OP, ':', 780, 25, 780, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 780, 26, 781, 0),
woosh.Token(woosh.INDENT, '    ', 781, 0, 781, 4),
woosh.Token(woosh.NAME, 'def', 781, 4, 781, 7),
woosh.Token(woosh.NAME, '_check_bytes', 781, 8, 781, 20),
woosh.Token(woosh.OP, '(', 781, 20, 781, 21),
woosh.Token(woosh.NAME, 'value', 781, 21, 781, 26),
woosh.Token(woosh.OP, ')', 781, 26, 781, 27),
woosh.Token(woosh.OP, ':', 781, 27, 781, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 28, 782, 0),
woosh.Token(woosh.INDENT, '        ', 782, 0, 782, 8),
woosh.Token(woosh.NAME, 'if', 782, 8, 782, 10),
woosh.Token(woosh.NAME, 'not', 782, 11, 782, 14),
woosh.Token(woosh.NAME, 'isinstance', 782, 15, 782, 25),
woosh.Token(woosh.OP, '(', 782, 25, 782, 26),
woosh.Token(woosh.NAME, 'value', 782, 26, 782, 31),
woosh.Token(woosh.OP, ',', 782, 31, 782, 32),
woosh.Token(woosh.NAME, 'bytes', 782, 33, 782, 38),
woosh.Token(woosh.OP, ')', 782, 38, 782, 39),
woosh.Token(woosh.OP, ':', 782, 39, 782, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 40, 783, 0),
woosh.Token(woosh.INDENT, '            ', 783, 0, 783, 12),
woosh.Token(woosh.NAME, 'raise', 783, 12, 783, 17),
woosh.Token(woosh.NAME, 'TypeError', 783, 18, 783, 27),
woosh.Token(woosh.OP, '(', 783, 27, 783, 28),
woosh.Token(woosh.STRING, '"bytes expected, not %s"', 783, 28, 783, 52),
woosh.Token(woosh.OP, '%', 783, 53, 783, 54),
woosh.Token(woosh.NAME, 'type', 783, 55, 783, 59),
woosh.Token(woosh.OP, '(', 783, 59, 783, 60),
woosh.Token(woosh.NAME, 'value', 783, 60, 783, 65),
woosh.Token(woosh.OP, ')', 783, 65, 783, 66),
woosh.Token(woosh.OP, '.', 783, 66, 783, 67),
woosh.Token(woosh.NAME, '__name__', 783, 67, 783, 75),
woosh.Token(woosh.OP, ')', 783, 75, 783, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 783, 76, 784, 0),
woosh.Token(woosh.DEDENT, '        ', 784, 0, 784, 8),
woosh.Token(woosh.NAME, 'return', 784, 8, 784, 14),
woosh.Token(woosh.NAME, 'value', 784, 15, 784, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 784, 20, 785, 0),
woosh.Token(woosh.COMMENT, '# bytes environ', 786, 4, 786, 19),
woosh.Token(woosh.DEDENT, '    ', 787, 0, 787, 4),
woosh.Token(woosh.NAME, 'environb', 787, 4, 787, 12),
woosh.Token(woosh.OP, '=', 787, 13, 787, 14),
woosh.Token(woosh.NAME, '_Environ', 787, 15, 787, 23),
woosh.Token(woosh.OP, '(', 787, 23, 787, 24),
woosh.Token(woosh.NAME, 'environ', 787, 24, 787, 31),
woosh.Token(woosh.OP, '.', 787, 31, 787, 32),
woosh.Token(woosh.NAME, '_data', 787, 32, 787, 37),
woosh.Token(woosh.OP, ',', 787, 37, 787, 38),
woosh.Token(woosh.NAME, '_check_bytes', 788, 8, 788, 20),
woosh.Token(woosh.OP, ',', 788, 20, 788, 21),
woosh.Token(woosh.NAME, 'bytes', 788, 22, 788, 27),
woosh.Token(woosh.OP, ',', 788, 27, 788, 28),
woosh.Token(woosh.NAME, '_check_bytes', 789, 8, 789, 20),
woosh.Token(woosh.OP, ',', 789, 20, 789, 21),
woosh.Token(woosh.NAME, 'bytes', 789, 22, 789, 27),
woosh.Token(woosh.OP, ')', 789, 27, 789, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 789, 28, 790, 0),
woosh.Token(woosh.NAME, 'del', 790, 4, 790, 7),
woosh.Token(woosh.NAME, '_check_bytes', 790, 8, 790, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 20, 791, 0),
woosh.Token(woosh.NAME, 'def', 792, 4, 792, 7),
woosh.Token(woosh.NAME, 'getenvb', 792, 8, 792, 15),
woosh.Token(woosh.OP, '(', 792, 15, 792, 16),
woosh.Token(woosh.NAME, 'key', 792, 16, 792, 19),
woosh.Token(woosh.OP, ',', 792, 19, 792, 20),
woosh.Token(woosh.NAME, 'default', 792, 21, 792, 28),
woosh.Token(woosh.OP, '=', 792, 28, 792, 29),
woosh.Token(woosh.NAME, 'None', 792, 29, 792, 33),
woosh.Token(woosh.OP, ')', 792, 33, 792, 34),
woosh.Token(woosh.OP, ':', 792, 34, 792, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 35, 793, 0),
woosh.Token(woosh.INDENT, '        ', 793, 0, 793, 8),
woosh.Token(woosh.STRING, '"""Get an environment variable, return None if it doesn\'t exist.\r\n        The optional second argument can specify an alternate default.\r\n        key, default and the result are bytes."""', 793, 8, 795, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 49, 796, 0),
woosh.Token(woosh.NAME, 'return', 796, 8, 796, 14),
woosh.Token(woosh.NAME, 'environb', 796, 15, 796, 23),
woosh.Token(woosh.OP, '.', 796, 23, 796, 24),
woosh.Token(woosh.NAME, 'get', 796, 24, 796, 27),
woosh.Token(woosh.OP, '(', 796, 27, 796, 28),
woosh.Token(woosh.NAME, 'key', 796, 28, 796, 31),
woosh.Token(woosh.OP, ',', 796, 31, 796, 32),
woosh.Token(woosh.NAME, 'default', 796, 33, 796, 40),
woosh.Token(woosh.OP, ')', 796, 40, 796, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 41, 797, 0),
woosh.Token(woosh.DEDENT, '    ', 798, 0, 798, 4),
woosh.Token(woosh.NAME, '__all__', 798, 4, 798, 11),
woosh.Token(woosh.OP, '.', 798, 11, 798, 12),
woosh.Token(woosh.NAME, 'extend', 798, 12, 798, 18),
woosh.Token(woosh.OP, '(', 798, 18, 798, 19),
woosh.Token(woosh.OP, '(', 798, 19, 798, 20),
woosh.Token(woosh.STRING, '"environb"', 798, 20, 798, 30),
woosh.Token(woosh.OP, ',', 798, 30, 798, 31),
woosh.Token(woosh.STRING, '"getenvb"', 798, 32, 798, 41),
woosh.Token(woosh.OP, ')', 798, 41, 798, 42),
woosh.Token(woosh.OP, ')', 798, 42, 798, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 43, 799, 0),
woosh.Token(woosh.DEDENT, '', 800, 0, 800, 0),
woosh.Token(woosh.NAME, 'def', 800, 0, 800, 3),
woosh.Token(woosh.NAME, '_fscodec', 800, 4, 800, 12),
woosh.Token(woosh.OP, '(', 800, 12, 800, 13),
woosh.Token(woosh.OP, ')', 800, 13, 800, 14),
woosh.Token(woosh.OP, ':', 800, 14, 800, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 15, 801, 0),
woosh.Token(woosh.INDENT, '    ', 801, 0, 801, 4),
woosh.Token(woosh.NAME, 'encoding', 801, 4, 801, 12),
woosh.Token(woosh.OP, '=', 801, 13, 801, 14),
woosh.Token(woosh.NAME, 'sys', 801, 15, 801, 18),
woosh.Token(woosh.OP, '.', 801, 18, 801, 19),
woosh.Token(woosh.NAME, 'getfilesystemencoding', 801, 19, 801, 40),
woosh.Token(woosh.OP, '(', 801, 40, 801, 41),
woosh.Token(woosh.OP, ')', 801, 41, 801, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 801, 42, 802, 0),
woosh.Token(woosh.NAME, 'errors', 802, 4, 802, 10),
woosh.Token(woosh.OP, '=', 802, 11, 802, 12),
woosh.Token(woosh.NAME, 'sys', 802, 13, 802, 16),
woosh.Token(woosh.OP, '.', 802, 16, 802, 17),
woosh.Token(woosh.NAME, 'getfilesystemencodeerrors', 802, 17, 802, 42),
woosh.Token(woosh.OP, '(', 802, 42, 802, 43),
woosh.Token(woosh.OP, ')', 802, 43, 802, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 44, 803, 0),
woosh.Token(woosh.NAME, 'def', 804, 4, 804, 7),
woosh.Token(woosh.NAME, 'fsencode', 804, 8, 804, 16),
woosh.Token(woosh.OP, '(', 804, 16, 804, 17),
woosh.Token(woosh.NAME, 'filename', 804, 17, 804, 25),
woosh.Token(woosh.OP, ')', 804, 25, 804, 26),
woosh.Token(woosh.OP, ':', 804, 26, 804, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 804, 27, 805, 0),
woosh.Token(woosh.INDENT, '        ', 805, 0, 805, 8),
woosh.Token(woosh.STRING, '"""Encode filename (an os.PathLike, bytes, or str) to the filesystem\r\n        encoding with \'surrogateescape\' error handler, return bytes unchanged.\r\n        On Windows, use \'strict\' error handler if the file system encoding is\r\n        \'mbcs\' (which is the default encoding).\r\n        """', 805, 8, 809, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 809, 11, 810, 0),
woosh.Token(woosh.NAME, 'filename', 810, 8, 810, 16),
woosh.Token(woosh.OP, '=', 810, 17, 810, 18),
woosh.Token(woosh.NAME, 'fspath', 810, 19, 810, 25),
woosh.Token(woosh.OP, '(', 810, 25, 810, 26),
woosh.Token(woosh.NAME, 'filename', 810, 26, 810, 34),
woosh.Token(woosh.OP, ')', 810, 34, 810, 35),
woosh.Token(woosh.COMMENT, '# Does type-checking of `filename`.', 810, 37, 810, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 810, 72, 811, 0),
woosh.Token(woosh.NAME, 'if', 811, 8, 811, 10),
woosh.Token(woosh.NAME, 'isinstance', 811, 11, 811, 21),
woosh.Token(woosh.OP, '(', 811, 21, 811, 22),
woosh.Token(woosh.NAME, 'filename', 811, 22, 811, 30),
woosh.Token(woosh.OP, ',', 811, 30, 811, 31),
woosh.Token(woosh.NAME, 'str', 811, 32, 811, 35),
woosh.Token(woosh.OP, ')', 811, 35, 811, 36),
woosh.Token(woosh.OP, ':', 811, 36, 811, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 811, 37, 812, 0),
woosh.Token(woosh.INDENT, '            ', 812, 0, 812, 12),
woosh.Token(woosh.NAME, 'return', 812, 12, 812, 18),
woosh.Token(woosh.NAME, 'filename', 812, 19, 812, 27),
woosh.Token(woosh.OP, '.', 812, 27, 812, 28),
woosh.Token(woosh.NAME, 'encode', 812, 28, 812, 34),
woosh.Token(woosh.OP, '(', 812, 34, 812, 35),
woosh.Token(woosh.NAME, 'encoding', 812, 35, 812, 43),
woosh.Token(woosh.OP, ',', 812, 43, 812, 44),
woosh.Token(woosh.NAME, 'errors', 812, 45, 812, 51),
woosh.Token(woosh.OP, ')', 812, 51, 812, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 812, 52, 813, 0),
woosh.Token(woosh.DEDENT, '        ', 813, 0, 813, 8),
woosh.Token(woosh.NAME, 'else', 813, 8, 813, 12),
woosh.Token(woosh.OP, ':', 813, 12, 813, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 813, 13, 814, 0),
woosh.Token(woosh.INDENT, '            ', 814, 0, 814, 12),
woosh.Token(woosh.NAME, 'return', 814, 12, 814, 18),
woosh.Token(woosh.NAME, 'filename', 814, 19, 814, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 27, 815, 0),
woosh.Token(woosh.DEDENT, '    ', 816, 0, 816, 4),
woosh.Token(woosh.DEDENT, '', 816, 4, 816, 4),
woosh.Token(woosh.NAME, 'def', 816, 4, 816, 7),
woosh.Token(woosh.NAME, 'fsdecode', 816, 8, 816, 16),
woosh.Token(woosh.OP, '(', 816, 16, 816, 17),
woosh.Token(woosh.NAME, 'filename', 816, 17, 816, 25),
woosh.Token(woosh.OP, ')', 816, 25, 816, 26),
woosh.Token(woosh.OP, ':', 816, 26, 816, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 27, 817, 0),
woosh.Token(woosh.INDENT, '        ', 817, 0, 817, 8),
woosh.Token(woosh.STRING, '"""Decode filename (an os.PathLike, bytes, or str) from the filesystem\r\n        encoding with \'surrogateescape\' error handler, return str unchanged. On\r\n        Windows, use \'strict\' error handler if the file system encoding is\r\n        \'mbcs\' (which is the default encoding).\r\n        """', 817, 8, 821, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 11, 822, 0),
woosh.Token(woosh.NAME, 'filename', 822, 8, 822, 16),
woosh.Token(woosh.OP, '=', 822, 17, 822, 18),
woosh.Token(woosh.NAME, 'fspath', 822, 19, 822, 25),
woosh.Token(woosh.OP, '(', 822, 25, 822, 26),
woosh.Token(woosh.NAME, 'filename', 822, 26, 822, 34),
woosh.Token(woosh.OP, ')', 822, 34, 822, 35),
woosh.Token(woosh.COMMENT, '# Does type-checking of `filename`.', 822, 37, 822, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 72, 823, 0),
woosh.Token(woosh.NAME, 'if', 823, 8, 823, 10),
woosh.Token(woosh.NAME, 'isinstance', 823, 11, 823, 21),
woosh.Token(woosh.OP, '(', 823, 21, 823, 22),
woosh.Token(woosh.NAME, 'filename', 823, 22, 823, 30),
woosh.Token(woosh.OP, ',', 823, 30, 823, 31),
woosh.Token(woosh.NAME, 'bytes', 823, 32, 823, 37),
woosh.Token(woosh.OP, ')', 823, 37, 823, 38),
woosh.Token(woosh.OP, ':', 823, 38, 823, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 823, 39, 824, 0),
woosh.Token(woosh.INDENT, '            ', 824, 0, 824, 12),
woosh.Token(woosh.NAME, 'return', 824, 12, 824, 18),
woosh.Token(woosh.NAME, 'filename', 824, 19, 824, 27),
woosh.Token(woosh.OP, '.', 824, 27, 824, 28),
woosh.Token(woosh.NAME, 'decode', 824, 28, 824, 34),
woosh.Token(woosh.OP, '(', 824, 34, 824, 35),
woosh.Token(woosh.NAME, 'encoding', 824, 35, 824, 43),
woosh.Token(woosh.OP, ',', 824, 43, 824, 44),
woosh.Token(woosh.NAME, 'errors', 824, 45, 824, 51),
woosh.Token(woosh.OP, ')', 824, 51, 824, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 52, 825, 0),
woosh.Token(woosh.DEDENT, '        ', 825, 0, 825, 8),
woosh.Token(woosh.NAME, 'else', 825, 8, 825, 12),
woosh.Token(woosh.OP, ':', 825, 12, 825, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 13, 826, 0),
woosh.Token(woosh.INDENT, '            ', 826, 0, 826, 12),
woosh.Token(woosh.NAME, 'return', 826, 12, 826, 18),
woosh.Token(woosh.NAME, 'filename', 826, 19, 826, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 826, 27, 827, 0),
woosh.Token(woosh.DEDENT, '    ', 828, 0, 828, 4),
woosh.Token(woosh.DEDENT, '', 828, 4, 828, 4),
woosh.Token(woosh.NAME, 'return', 828, 4, 828, 10),
woosh.Token(woosh.NAME, 'fsencode', 828, 11, 828, 19),
woosh.Token(woosh.OP, ',', 828, 19, 828, 20),
woosh.Token(woosh.NAME, 'fsdecode', 828, 21, 828, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 828, 29, 829, 0),
woosh.Token(woosh.DEDENT, '', 830, 0, 830, 0),
woosh.Token(woosh.NAME, 'fsencode', 830, 0, 830, 8),
woosh.Token(woosh.OP, ',', 830, 8, 830, 9),
woosh.Token(woosh.NAME, 'fsdecode', 830, 10, 830, 18),
woosh.Token(woosh.OP, '=', 830, 19, 830, 20),
woosh.Token(woosh.NAME, '_fscodec', 830, 21, 830, 29),
woosh.Token(woosh.OP, '(', 830, 29, 830, 30),
woosh.Token(woosh.OP, ')', 830, 30, 830, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 830, 31, 831, 0),
woosh.Token(woosh.NAME, 'del', 831, 0, 831, 3),
woosh.Token(woosh.NAME, '_fscodec', 831, 4, 831, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 831, 12, 832, 0),
woosh.Token(woosh.COMMENT, '# Supply spawn*() (probably only for Unix)', 833, 0, 833, 42),
woosh.Token(woosh.NAME, 'if', 834, 0, 834, 2),
woosh.Token(woosh.NAME, '_exists', 834, 3, 834, 10),
woosh.Token(woosh.OP, '(', 834, 10, 834, 11),
woosh.Token(woosh.STRING, '"fork"', 834, 11, 834, 17),
woosh.Token(woosh.OP, ')', 834, 17, 834, 18),
woosh.Token(woosh.NAME, 'and', 834, 19, 834, 22),
woosh.Token(woosh.NAME, 'not', 834, 23, 834, 26),
woosh.Token(woosh.NAME, '_exists', 834, 27, 834, 34),
woosh.Token(woosh.OP, '(', 834, 34, 834, 35),
woosh.Token(woosh.STRING, '"spawnv"', 834, 35, 834, 43),
woosh.Token(woosh.OP, ')', 834, 43, 834, 44),
woosh.Token(woosh.NAME, 'and', 834, 45, 834, 48),
woosh.Token(woosh.NAME, '_exists', 834, 49, 834, 56),
woosh.Token(woosh.OP, '(', 834, 56, 834, 57),
woosh.Token(woosh.STRING, '"execv"', 834, 57, 834, 64),
woosh.Token(woosh.OP, ')', 834, 64, 834, 65),
woosh.Token(woosh.OP, ':', 834, 65, 834, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 66, 835, 0),
woosh.Token(woosh.INDENT, '    ', 836, 0, 836, 4),
woosh.Token(woosh.NAME, 'P_WAIT', 836, 4, 836, 10),
woosh.Token(woosh.OP, '=', 836, 11, 836, 12),
woosh.Token(woosh.NUMBER, '0', 836, 13, 836, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 836, 14, 837, 0),
woosh.Token(woosh.NAME, 'P_NOWAIT', 837, 4, 837, 12),
woosh.Token(woosh.OP, '=', 837, 13, 837, 14),
woosh.Token(woosh.NAME, 'P_NOWAITO', 837, 15, 837, 24),
woosh.Token(woosh.OP, '=', 837, 25, 837, 26),
woosh.Token(woosh.NUMBER, '1', 837, 27, 837, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 28, 838, 0),
woosh.Token(woosh.NAME, '__all__', 839, 4, 839, 11),
woosh.Token(woosh.OP, '.', 839, 11, 839, 12),
woosh.Token(woosh.NAME, 'extend', 839, 12, 839, 18),
woosh.Token(woosh.OP, '(', 839, 18, 839, 19),
woosh.Token(woosh.OP, '[', 839, 19, 839, 20),
woosh.Token(woosh.STRING, '"P_WAIT"', 839, 20, 839, 28),
woosh.Token(woosh.OP, ',', 839, 28, 839, 29),
woosh.Token(woosh.STRING, '"P_NOWAIT"', 839, 30, 839, 40),
woosh.Token(woosh.OP, ',', 839, 40, 839, 41),
woosh.Token(woosh.STRING, '"P_NOWAITO"', 839, 42, 839, 53),
woosh.Token(woosh.OP, ']', 839, 53, 839, 54),
woosh.Token(woosh.OP, ')', 839, 54, 839, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 55, 840, 0),
woosh.Token(woosh.COMMENT, '# XXX Should we support P_DETACH?  I suppose it could fork()**2', 841, 4, 841, 67),
woosh.Token(woosh.COMMENT, '# and close the std I/O streams.  Also, P_OVERLAY is the same', 842, 4, 842, 65),
woosh.Token(woosh.COMMENT, '# as execv*()?', 843, 4, 843, 18),
woosh.Token(woosh.NAME, 'def', 845, 4, 845, 7),
woosh.Token(woosh.NAME, '_spawnvef', 845, 8, 845, 17),
woosh.Token(woosh.OP, '(', 845, 17, 845, 18),
woosh.Token(woosh.NAME, 'mode', 845, 18, 845, 22),
woosh.Token(woosh.OP, ',', 845, 22, 845, 23),
woosh.Token(woosh.NAME, 'file', 845, 24, 845, 28),
woosh.Token(woosh.OP, ',', 845, 28, 845, 29),
woosh.Token(woosh.NAME, 'args', 845, 30, 845, 34),
woosh.Token(woosh.OP, ',', 845, 34, 845, 35),
woosh.Token(woosh.NAME, 'env', 845, 36, 845, 39),
woosh.Token(woosh.OP, ',', 845, 39, 845, 40),
woosh.Token(woosh.NAME, 'func', 845, 41, 845, 45),
woosh.Token(woosh.OP, ')', 845, 45, 845, 46),
woosh.Token(woosh.OP, ':', 845, 46, 845, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 845, 47, 846, 0),
woosh.Token(woosh.COMMENT, '# Internal helper; func is the exec*() function to use', 846, 8, 846, 62),
woosh.Token(woosh.INDENT, '        ', 847, 0, 847, 8),
woosh.Token(woosh.NAME, 'if', 847, 8, 847, 10),
woosh.Token(woosh.NAME, 'not', 847, 11, 847, 14),
woosh.Token(woosh.NAME, 'isinstance', 847, 15, 847, 25),
woosh.Token(woosh.OP, '(', 847, 25, 847, 26),
woosh.Token(woosh.NAME, 'args', 847, 26, 847, 30),
woosh.Token(woosh.OP, ',', 847, 30, 847, 31),
woosh.Token(woosh.OP, '(', 847, 32, 847, 33),
woosh.Token(woosh.NAME, 'tuple', 847, 33, 847, 38),
woosh.Token(woosh.OP, ',', 847, 38, 847, 39),
woosh.Token(woosh.NAME, 'list', 847, 40, 847, 44),
woosh.Token(woosh.OP, ')', 847, 44, 847, 45),
woosh.Token(woosh.OP, ')', 847, 45, 847, 46),
woosh.Token(woosh.OP, ':', 847, 46, 847, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 847, 47, 848, 0),
woosh.Token(woosh.INDENT, '            ', 848, 0, 848, 12),
woosh.Token(woosh.NAME, 'raise', 848, 12, 848, 17),
woosh.Token(woosh.NAME, 'TypeError', 848, 18, 848, 27),
woosh.Token(woosh.OP, '(', 848, 27, 848, 28),
woosh.Token(woosh.STRING, "'argv must be a tuple or a list'", 848, 28, 848, 60),
woosh.Token(woosh.OP, ')', 848, 60, 848, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 61, 849, 0),
woosh.Token(woosh.DEDENT, '        ', 849, 0, 849, 8),
woosh.Token(woosh.NAME, 'if', 849, 8, 849, 10),
woosh.Token(woosh.NAME, 'not', 849, 11, 849, 14),
woosh.Token(woosh.NAME, 'args', 849, 15, 849, 19),
woosh.Token(woosh.NAME, 'or', 849, 20, 849, 22),
woosh.Token(woosh.NAME, 'not', 849, 23, 849, 26),
woosh.Token(woosh.NAME, 'args', 849, 27, 849, 31),
woosh.Token(woosh.OP, '[', 849, 31, 849, 32),
woosh.Token(woosh.NUMBER, '0', 849, 32, 849, 33),
woosh.Token(woosh.OP, ']', 849, 33, 849, 34),
woosh.Token(woosh.OP, ':', 849, 34, 849, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 35, 850, 0),
woosh.Token(woosh.INDENT, '            ', 850, 0, 850, 12),
woosh.Token(woosh.NAME, 'raise', 850, 12, 850, 17),
woosh.Token(woosh.NAME, 'ValueError', 850, 18, 850, 28),
woosh.Token(woosh.OP, '(', 850, 28, 850, 29),
woosh.Token(woosh.STRING, "'argv first element cannot be empty'", 850, 29, 850, 65),
woosh.Token(woosh.OP, ')', 850, 65, 850, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 66, 851, 0),
woosh.Token(woosh.DEDENT, '        ', 851, 0, 851, 8),
woosh.Token(woosh.NAME, 'pid', 851, 8, 851, 11),
woosh.Token(woosh.OP, '=', 851, 12, 851, 13),
woosh.Token(woosh.NAME, 'fork', 851, 14, 851, 18),
woosh.Token(woosh.OP, '(', 851, 18, 851, 19),
woosh.Token(woosh.OP, ')', 851, 19, 851, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 20, 852, 0),
woosh.Token(woosh.NAME, 'if', 852, 8, 852, 10),
woosh.Token(woosh.NAME, 'not', 852, 11, 852, 14),
woosh.Token(woosh.NAME, 'pid', 852, 15, 852, 18),
woosh.Token(woosh.OP, ':', 852, 18, 852, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 852, 19, 853, 0),
woosh.Token(woosh.COMMENT, '# Child', 853, 12, 853, 19),
woosh.Token(woosh.INDENT, '            ', 854, 0, 854, 12),
woosh.Token(woosh.NAME, 'try', 854, 12, 854, 15),
woosh.Token(woosh.OP, ':', 854, 15, 854, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 16, 855, 0),
woosh.Token(woosh.INDENT, '                ', 855, 0, 855, 16),
woosh.Token(woosh.NAME, 'if', 855, 16, 855, 18),
woosh.Token(woosh.NAME, 'env', 855, 19, 855, 22),
woosh.Token(woosh.NAME, 'is', 855, 23, 855, 25),
woosh.Token(woosh.NAME, 'None', 855, 26, 855, 30),
woosh.Token(woosh.OP, ':', 855, 30, 855, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 855, 31, 856, 0),
woosh.Token(woosh.INDENT, '                    ', 856, 0, 856, 20),
woosh.Token(woosh.NAME, 'func', 856, 20, 856, 24),
woosh.Token(woosh.OP, '(', 856, 24, 856, 25),
woosh.Token(woosh.NAME, 'file', 856, 25, 856, 29),
woosh.Token(woosh.OP, ',', 856, 29, 856, 30),
woosh.Token(woosh.NAME, 'args', 856, 31, 856, 35),
woosh.Token(woosh.OP, ')', 856, 35, 856, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 36, 857, 0),
woosh.Token(woosh.DEDENT, '                ', 857, 0, 857, 16),
woosh.Token(woosh.NAME, 'else', 857, 16, 857, 20),
woosh.Token(woosh.OP, ':', 857, 20, 857, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 21, 858, 0),
woosh.Token(woosh.INDENT, '                    ', 858, 0, 858, 20),
woosh.Token(woosh.NAME, 'func', 858, 20, 858, 24),
woosh.Token(woosh.OP, '(', 858, 24, 858, 25),
woosh.Token(woosh.NAME, 'file', 858, 25, 858, 29),
woosh.Token(woosh.OP, ',', 858, 29, 858, 30),
woosh.Token(woosh.NAME, 'args', 858, 31, 858, 35),
woosh.Token(woosh.OP, ',', 858, 35, 858, 36),
woosh.Token(woosh.NAME, 'env', 858, 37, 858, 40),
woosh.Token(woosh.OP, ')', 858, 40, 858, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 41, 859, 0),
woosh.Token(woosh.DEDENT, '            ', 859, 0, 859, 12),
woosh.Token(woosh.DEDENT, '', 859, 12, 859, 12),
woosh.Token(woosh.NAME, 'except', 859, 12, 859, 18),
woosh.Token(woosh.OP, ':', 859, 18, 859, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 19, 860, 0),
woosh.Token(woosh.INDENT, '                ', 860, 0, 860, 16),
woosh.Token(woosh.NAME, '_exit', 860, 16, 860, 21),
woosh.Token(woosh.OP, '(', 860, 21, 860, 22),
woosh.Token(woosh.NUMBER, '127', 860, 22, 860, 25),
woosh.Token(woosh.OP, ')', 860, 25, 860, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 860, 26, 861, 0),
woosh.Token(woosh.DEDENT, '        ', 861, 0, 861, 8),
woosh.Token(woosh.DEDENT, '', 861, 8, 861, 8),
woosh.Token(woosh.NAME, 'else', 861, 8, 861, 12),
woosh.Token(woosh.OP, ':', 861, 12, 861, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 13, 862, 0),
woosh.Token(woosh.COMMENT, '# Parent', 862, 12, 862, 20),
woosh.Token(woosh.INDENT, '            ', 863, 0, 863, 12),
woosh.Token(woosh.NAME, 'if', 863, 12, 863, 14),
woosh.Token(woosh.NAME, 'mode', 863, 15, 863, 19),
woosh.Token(woosh.OP, '==', 863, 20, 863, 22),
woosh.Token(woosh.NAME, 'P_NOWAIT', 863, 23, 863, 31),
woosh.Token(woosh.OP, ':', 863, 31, 863, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 32, 864, 0),
woosh.Token(woosh.INDENT, '                ', 864, 0, 864, 16),
woosh.Token(woosh.NAME, 'return', 864, 16, 864, 22),
woosh.Token(woosh.NAME, 'pid', 864, 23, 864, 26),
woosh.Token(woosh.COMMENT, '# Caller is responsible for waiting!', 864, 27, 864, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 63, 865, 0),
woosh.Token(woosh.DEDENT, '            ', 865, 0, 865, 12),
woosh.Token(woosh.NAME, 'while', 865, 12, 865, 17),
woosh.Token(woosh.NUMBER, '1', 865, 18, 865, 19),
woosh.Token(woosh.OP, ':', 865, 19, 865, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 865, 20, 866, 0),
woosh.Token(woosh.INDENT, '                ', 866, 0, 866, 16),
woosh.Token(woosh.NAME, 'wpid', 866, 16, 866, 20),
woosh.Token(woosh.OP, ',', 866, 20, 866, 21),
woosh.Token(woosh.NAME, 'sts', 866, 22, 866, 25),
woosh.Token(woosh.OP, '=', 866, 26, 866, 27),
woosh.Token(woosh.NAME, 'waitpid', 866, 28, 866, 35),
woosh.Token(woosh.OP, '(', 866, 35, 866, 36),
woosh.Token(woosh.NAME, 'pid', 866, 36, 866, 39),
woosh.Token(woosh.OP, ',', 866, 39, 866, 40),
woosh.Token(woosh.NUMBER, '0', 866, 41, 866, 42),
woosh.Token(woosh.OP, ')', 866, 42, 866, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 866, 43, 867, 0),
woosh.Token(woosh.NAME, 'if', 867, 16, 867, 18),
woosh.Token(woosh.NAME, 'WIFSTOPPED', 867, 19, 867, 29),
woosh.Token(woosh.OP, '(', 867, 29, 867, 30),
woosh.Token(woosh.NAME, 'sts', 867, 30, 867, 33),
woosh.Token(woosh.OP, ')', 867, 33, 867, 34),
woosh.Token(woosh.OP, ':', 867, 34, 867, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 867, 35, 868, 0),
woosh.Token(woosh.INDENT, '                    ', 868, 0, 868, 20),
woosh.Token(woosh.NAME, 'continue', 868, 20, 868, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 868, 28, 869, 0),
woosh.Token(woosh.DEDENT, '                ', 870, 0, 870, 16),
woosh.Token(woosh.NAME, 'return', 870, 16, 870, 22),
woosh.Token(woosh.NAME, 'waitstatus_to_exitcode', 870, 23, 870, 45),
woosh.Token(woosh.OP, '(', 870, 45, 870, 46),
woosh.Token(woosh.NAME, 'sts', 870, 46, 870, 49),
woosh.Token(woosh.OP, ')', 870, 49, 870, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 870, 50, 871, 0),
woosh.Token(woosh.DEDENT, '    ', 872, 0, 872, 4),
woosh.Token(woosh.DEDENT, '', 872, 4, 872, 4),
woosh.Token(woosh.DEDENT, '', 872, 4, 872, 4),
woosh.Token(woosh.NAME, 'def', 872, 4, 872, 7),
woosh.Token(woosh.NAME, 'spawnv', 872, 8, 872, 14),
woosh.Token(woosh.OP, '(', 872, 14, 872, 15),
woosh.Token(woosh.NAME, 'mode', 872, 15, 872, 19),
woosh.Token(woosh.OP, ',', 872, 19, 872, 20),
woosh.Token(woosh.NAME, 'file', 872, 21, 872, 25),
woosh.Token(woosh.OP, ',', 872, 25, 872, 26),
woosh.Token(woosh.NAME, 'args', 872, 27, 872, 31),
woosh.Token(woosh.OP, ')', 872, 31, 872, 32),
woosh.Token(woosh.OP, ':', 872, 32, 872, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 33, 873, 0),
woosh.Token(woosh.INDENT, '        ', 873, 0, 873, 8),
woosh.Token(woosh.STRING, '"""spawnv(mode, file, args) -> integer\r\n\r\nExecute file with arguments from args in a subprocess.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 873, 8, 878, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 878, 66, 879, 0),
woosh.Token(woosh.NAME, 'return', 879, 8, 879, 14),
woosh.Token(woosh.NAME, '_spawnvef', 879, 15, 879, 24),
woosh.Token(woosh.OP, '(', 879, 24, 879, 25),
woosh.Token(woosh.NAME, 'mode', 879, 25, 879, 29),
woosh.Token(woosh.OP, ',', 879, 29, 879, 30),
woosh.Token(woosh.NAME, 'file', 879, 31, 879, 35),
woosh.Token(woosh.OP, ',', 879, 35, 879, 36),
woosh.Token(woosh.NAME, 'args', 879, 37, 879, 41),
woosh.Token(woosh.OP, ',', 879, 41, 879, 42),
woosh.Token(woosh.NAME, 'None', 879, 43, 879, 47),
woosh.Token(woosh.OP, ',', 879, 47, 879, 48),
woosh.Token(woosh.NAME, 'execv', 879, 49, 879, 54),
woosh.Token(woosh.OP, ')', 879, 54, 879, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 879, 55, 880, 0),
woosh.Token(woosh.DEDENT, '    ', 881, 0, 881, 4),
woosh.Token(woosh.NAME, 'def', 881, 4, 881, 7),
woosh.Token(woosh.NAME, 'spawnve', 881, 8, 881, 15),
woosh.Token(woosh.OP, '(', 881, 15, 881, 16),
woosh.Token(woosh.NAME, 'mode', 881, 16, 881, 20),
woosh.Token(woosh.OP, ',', 881, 20, 881, 21),
woosh.Token(woosh.NAME, 'file', 881, 22, 881, 26),
woosh.Token(woosh.OP, ',', 881, 26, 881, 27),
woosh.Token(woosh.NAME, 'args', 881, 28, 881, 32),
woosh.Token(woosh.OP, ',', 881, 32, 881, 33),
woosh.Token(woosh.NAME, 'env', 881, 34, 881, 37),
woosh.Token(woosh.OP, ')', 881, 37, 881, 38),
woosh.Token(woosh.OP, ':', 881, 38, 881, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 39, 882, 0),
woosh.Token(woosh.INDENT, '        ', 882, 0, 882, 8),
woosh.Token(woosh.STRING, '"""spawnve(mode, file, args, env) -> integer\r\n\r\nExecute file with arguments from args in a subprocess with the\r\nspecified environment.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 882, 8, 888, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 888, 66, 889, 0),
woosh.Token(woosh.NAME, 'return', 889, 8, 889, 14),
woosh.Token(woosh.NAME, '_spawnvef', 889, 15, 889, 24),
woosh.Token(woosh.OP, '(', 889, 24, 889, 25),
woosh.Token(woosh.NAME, 'mode', 889, 25, 889, 29),
woosh.Token(woosh.OP, ',', 889, 29, 889, 30),
woosh.Token(woosh.NAME, 'file', 889, 31, 889, 35),
woosh.Token(woosh.OP, ',', 889, 35, 889, 36),
woosh.Token(woosh.NAME, 'args', 889, 37, 889, 41),
woosh.Token(woosh.OP, ',', 889, 41, 889, 42),
woosh.Token(woosh.NAME, 'env', 889, 43, 889, 46),
woosh.Token(woosh.OP, ',', 889, 46, 889, 47),
woosh.Token(woosh.NAME, 'execve', 889, 48, 889, 54),
woosh.Token(woosh.OP, ')', 889, 54, 889, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 55, 890, 0),
woosh.Token(woosh.COMMENT, "# Note: spawnvp[e] isn't currently supported on Windows", 891, 4, 891, 59),
woosh.Token(woosh.DEDENT, '    ', 893, 0, 893, 4),
woosh.Token(woosh.NAME, 'def', 893, 4, 893, 7),
woosh.Token(woosh.NAME, 'spawnvp', 893, 8, 893, 15),
woosh.Token(woosh.OP, '(', 893, 15, 893, 16),
woosh.Token(woosh.NAME, 'mode', 893, 16, 893, 20),
woosh.Token(woosh.OP, ',', 893, 20, 893, 21),
woosh.Token(woosh.NAME, 'file', 893, 22, 893, 26),
woosh.Token(woosh.OP, ',', 893, 26, 893, 27),
woosh.Token(woosh.NAME, 'args', 893, 28, 893, 32),
woosh.Token(woosh.OP, ')', 893, 32, 893, 33),
woosh.Token(woosh.OP, ':', 893, 33, 893, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 34, 894, 0),
woosh.Token(woosh.INDENT, '        ', 894, 0, 894, 8),
woosh.Token(woosh.STRING, '"""spawnvp(mode, file, args) -> integer\r\n\r\nExecute file (which is looked for along $PATH) with arguments from\r\nargs in a subprocess.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 894, 8, 900, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 900, 66, 901, 0),
woosh.Token(woosh.NAME, 'return', 901, 8, 901, 14),
woosh.Token(woosh.NAME, '_spawnvef', 901, 15, 901, 24),
woosh.Token(woosh.OP, '(', 901, 24, 901, 25),
woosh.Token(woosh.NAME, 'mode', 901, 25, 901, 29),
woosh.Token(woosh.OP, ',', 901, 29, 901, 30),
woosh.Token(woosh.NAME, 'file', 901, 31, 901, 35),
woosh.Token(woosh.OP, ',', 901, 35, 901, 36),
woosh.Token(woosh.NAME, 'args', 901, 37, 901, 41),
woosh.Token(woosh.OP, ',', 901, 41, 901, 42),
woosh.Token(woosh.NAME, 'None', 901, 43, 901, 47),
woosh.Token(woosh.OP, ',', 901, 47, 901, 48),
woosh.Token(woosh.NAME, 'execvp', 901, 49, 901, 55),
woosh.Token(woosh.OP, ')', 901, 55, 901, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 56, 902, 0),
woosh.Token(woosh.DEDENT, '    ', 903, 0, 903, 4),
woosh.Token(woosh.NAME, 'def', 903, 4, 903, 7),
woosh.Token(woosh.NAME, 'spawnvpe', 903, 8, 903, 16),
woosh.Token(woosh.OP, '(', 903, 16, 903, 17),
woosh.Token(woosh.NAME, 'mode', 903, 17, 903, 21),
woosh.Token(woosh.OP, ',', 903, 21, 903, 22),
woosh.Token(woosh.NAME, 'file', 903, 23, 903, 27),
woosh.Token(woosh.OP, ',', 903, 27, 903, 28),
woosh.Token(woosh.NAME, 'args', 903, 29, 903, 33),
woosh.Token(woosh.OP, ',', 903, 33, 903, 34),
woosh.Token(woosh.NAME, 'env', 903, 35, 903, 38),
woosh.Token(woosh.OP, ')', 903, 38, 903, 39),
woosh.Token(woosh.OP, ':', 903, 39, 903, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 903, 40, 904, 0),
woosh.Token(woosh.INDENT, '        ', 904, 0, 904, 8),
woosh.Token(woosh.STRING, '"""spawnvpe(mode, file, args, env) -> integer\r\n\r\nExecute file (which is looked for along $PATH) with arguments from\r\nargs in a subprocess with the supplied environment.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 904, 8, 910, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 66, 911, 0),
woosh.Token(woosh.NAME, 'return', 911, 8, 911, 14),
woosh.Token(woosh.NAME, '_spawnvef', 911, 15, 911, 24),
woosh.Token(woosh.OP, '(', 911, 24, 911, 25),
woosh.Token(woosh.NAME, 'mode', 911, 25, 911, 29),
woosh.Token(woosh.OP, ',', 911, 29, 911, 30),
woosh.Token(woosh.NAME, 'file', 911, 31, 911, 35),
woosh.Token(woosh.OP, ',', 911, 35, 911, 36),
woosh.Token(woosh.NAME, 'args', 911, 37, 911, 41),
woosh.Token(woosh.OP, ',', 911, 41, 911, 42),
woosh.Token(woosh.NAME, 'env', 911, 43, 911, 46),
woosh.Token(woosh.OP, ',', 911, 46, 911, 47),
woosh.Token(woosh.NAME, 'execvpe', 911, 48, 911, 55),
woosh.Token(woosh.OP, ')', 911, 55, 911, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 56, 912, 0),
woosh.Token(woosh.DEDENT, '    ', 914, 0, 914, 4),
woosh.Token(woosh.NAME, '__all__', 914, 4, 914, 11),
woosh.Token(woosh.OP, '.', 914, 11, 914, 12),
woosh.Token(woosh.NAME, 'extend', 914, 12, 914, 18),
woosh.Token(woosh.OP, '(', 914, 18, 914, 19),
woosh.Token(woosh.OP, '[', 914, 19, 914, 20),
woosh.Token(woosh.STRING, '"spawnv"', 914, 20, 914, 28),
woosh.Token(woosh.OP, ',', 914, 28, 914, 29),
woosh.Token(woosh.STRING, '"spawnve"', 914, 30, 914, 39),
woosh.Token(woosh.OP, ',', 914, 39, 914, 40),
woosh.Token(woosh.STRING, '"spawnvp"', 914, 41, 914, 50),
woosh.Token(woosh.OP, ',', 914, 50, 914, 51),
woosh.Token(woosh.STRING, '"spawnvpe"', 914, 52, 914, 62),
woosh.Token(woosh.OP, ']', 914, 62, 914, 63),
woosh.Token(woosh.OP, ')', 914, 63, 914, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 914, 64, 915, 0),
woosh.Token(woosh.DEDENT, '', 917, 0, 917, 0),
woosh.Token(woosh.NAME, 'if', 917, 0, 917, 2),
woosh.Token(woosh.NAME, '_exists', 917, 3, 917, 10),
woosh.Token(woosh.OP, '(', 917, 10, 917, 11),
woosh.Token(woosh.STRING, '"spawnv"', 917, 11, 917, 19),
woosh.Token(woosh.OP, ')', 917, 19, 917, 20),
woosh.Token(woosh.OP, ':', 917, 20, 917, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 917, 21, 918, 0),
woosh.Token(woosh.COMMENT, "# These aren't supplied by the basic Windows code", 918, 4, 918, 53),
woosh.Token(woosh.COMMENT, '# but can be easily implemented in Python', 919, 4, 919, 45),
woosh.Token(woosh.INDENT, '    ', 921, 0, 921, 4),
woosh.Token(woosh.NAME, 'def', 921, 4, 921, 7),
woosh.Token(woosh.NAME, 'spawnl', 921, 8, 921, 14),
woosh.Token(woosh.OP, '(', 921, 14, 921, 15),
woosh.Token(woosh.NAME, 'mode', 921, 15, 921, 19),
woosh.Token(woosh.OP, ',', 921, 19, 921, 20),
woosh.Token(woosh.NAME, 'file', 921, 21, 921, 25),
woosh.Token(woosh.OP, ',', 921, 25, 921, 26),
woosh.Token(woosh.OP, '*', 921, 27, 921, 28),
woosh.Token(woosh.NAME, 'args', 921, 28, 921, 32),
woosh.Token(woosh.OP, ')', 921, 32, 921, 33),
woosh.Token(woosh.OP, ':', 921, 33, 921, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 921, 34, 922, 0),
woosh.Token(woosh.INDENT, '        ', 922, 0, 922, 8),
woosh.Token(woosh.STRING, '"""spawnl(mode, file, *args) -> integer\r\n\r\nExecute file with arguments from args in a subprocess.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 922, 8, 927, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 66, 928, 0),
woosh.Token(woosh.NAME, 'return', 928, 8, 928, 14),
woosh.Token(woosh.NAME, 'spawnv', 928, 15, 928, 21),
woosh.Token(woosh.OP, '(', 928, 21, 928, 22),
woosh.Token(woosh.NAME, 'mode', 928, 22, 928, 26),
woosh.Token(woosh.OP, ',', 928, 26, 928, 27),
woosh.Token(woosh.NAME, 'file', 928, 28, 928, 32),
woosh.Token(woosh.OP, ',', 928, 32, 928, 33),
woosh.Token(woosh.NAME, 'args', 928, 34, 928, 38),
woosh.Token(woosh.OP, ')', 928, 38, 928, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 928, 39, 929, 0),
woosh.Token(woosh.DEDENT, '    ', 930, 0, 930, 4),
woosh.Token(woosh.NAME, 'def', 930, 4, 930, 7),
woosh.Token(woosh.NAME, 'spawnle', 930, 8, 930, 15),
woosh.Token(woosh.OP, '(', 930, 15, 930, 16),
woosh.Token(woosh.NAME, 'mode', 930, 16, 930, 20),
woosh.Token(woosh.OP, ',', 930, 20, 930, 21),
woosh.Token(woosh.NAME, 'file', 930, 22, 930, 26),
woosh.Token(woosh.OP, ',', 930, 26, 930, 27),
woosh.Token(woosh.OP, '*', 930, 28, 930, 29),
woosh.Token(woosh.NAME, 'args', 930, 29, 930, 33),
woosh.Token(woosh.OP, ')', 930, 33, 930, 34),
woosh.Token(woosh.OP, ':', 930, 34, 930, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 930, 35, 931, 0),
woosh.Token(woosh.INDENT, '        ', 931, 0, 931, 8),
woosh.Token(woosh.STRING, '"""spawnle(mode, file, *args, env) -> integer\r\n\r\nExecute file with arguments from args in a subprocess with the\r\nsupplied environment.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 931, 8, 937, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 937, 66, 938, 0),
woosh.Token(woosh.NAME, 'env', 938, 8, 938, 11),
woosh.Token(woosh.OP, '=', 938, 12, 938, 13),
woosh.Token(woosh.NAME, 'args', 938, 14, 938, 18),
woosh.Token(woosh.OP, '[', 938, 18, 938, 19),
woosh.Token(woosh.OP, '-', 938, 19, 938, 20),
woosh.Token(woosh.NUMBER, '1', 938, 20, 938, 21),
woosh.Token(woosh.OP, ']', 938, 21, 938, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 22, 939, 0),
woosh.Token(woosh.NAME, 'return', 939, 8, 939, 14),
woosh.Token(woosh.NAME, 'spawnve', 939, 15, 939, 22),
woosh.Token(woosh.OP, '(', 939, 22, 939, 23),
woosh.Token(woosh.NAME, 'mode', 939, 23, 939, 27),
woosh.Token(woosh.OP, ',', 939, 27, 939, 28),
woosh.Token(woosh.NAME, 'file', 939, 29, 939, 33),
woosh.Token(woosh.OP, ',', 939, 33, 939, 34),
woosh.Token(woosh.NAME, 'args', 939, 35, 939, 39),
woosh.Token(woosh.OP, '[', 939, 39, 939, 40),
woosh.Token(woosh.OP, ':', 939, 40, 939, 41),
woosh.Token(woosh.OP, '-', 939, 41, 939, 42),
woosh.Token(woosh.NUMBER, '1', 939, 42, 939, 43),
woosh.Token(woosh.OP, ']', 939, 43, 939, 44),
woosh.Token(woosh.OP, ',', 939, 44, 939, 45),
woosh.Token(woosh.NAME, 'env', 939, 46, 939, 49),
woosh.Token(woosh.OP, ')', 939, 49, 939, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 50, 940, 0),
woosh.Token(woosh.DEDENT, '    ', 942, 0, 942, 4),
woosh.Token(woosh.NAME, '__all__', 942, 4, 942, 11),
woosh.Token(woosh.OP, '.', 942, 11, 942, 12),
woosh.Token(woosh.NAME, 'extend', 942, 12, 942, 18),
woosh.Token(woosh.OP, '(', 942, 18, 942, 19),
woosh.Token(woosh.OP, '[', 942, 19, 942, 20),
woosh.Token(woosh.STRING, '"spawnl"', 942, 20, 942, 28),
woosh.Token(woosh.OP, ',', 942, 28, 942, 29),
woosh.Token(woosh.STRING, '"spawnle"', 942, 30, 942, 39),
woosh.Token(woosh.OP, ']', 942, 39, 942, 40),
woosh.Token(woosh.OP, ')', 942, 40, 942, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 942, 41, 943, 0),
woosh.Token(woosh.DEDENT, '', 945, 0, 945, 0),
woosh.Token(woosh.NAME, 'if', 945, 0, 945, 2),
woosh.Token(woosh.NAME, '_exists', 945, 3, 945, 10),
woosh.Token(woosh.OP, '(', 945, 10, 945, 11),
woosh.Token(woosh.STRING, '"spawnvp"', 945, 11, 945, 20),
woosh.Token(woosh.OP, ')', 945, 20, 945, 21),
woosh.Token(woosh.OP, ':', 945, 21, 945, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 945, 22, 946, 0),
woosh.Token(woosh.COMMENT, "# At the moment, Windows doesn't implement spawnvp[e],", 946, 4, 946, 58),
woosh.Token(woosh.COMMENT, "# so it won't have spawnlp[e] either.", 947, 4, 947, 41),
woosh.Token(woosh.INDENT, '    ', 948, 0, 948, 4),
woosh.Token(woosh.NAME, 'def', 948, 4, 948, 7),
woosh.Token(woosh.NAME, 'spawnlp', 948, 8, 948, 15),
woosh.Token(woosh.OP, '(', 948, 15, 948, 16),
woosh.Token(woosh.NAME, 'mode', 948, 16, 948, 20),
woosh.Token(woosh.OP, ',', 948, 20, 948, 21),
woosh.Token(woosh.NAME, 'file', 948, 22, 948, 26),
woosh.Token(woosh.OP, ',', 948, 26, 948, 27),
woosh.Token(woosh.OP, '*', 948, 28, 948, 29),
woosh.Token(woosh.NAME, 'args', 948, 29, 948, 33),
woosh.Token(woosh.OP, ')', 948, 33, 948, 34),
woosh.Token(woosh.OP, ':', 948, 34, 948, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 948, 35, 949, 0),
woosh.Token(woosh.INDENT, '        ', 949, 0, 949, 8),
woosh.Token(woosh.STRING, '"""spawnlp(mode, file, *args) -> integer\r\n\r\nExecute file (which is looked for along $PATH) with arguments from\r\nargs in a subprocess with the supplied environment.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 949, 8, 955, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 66, 956, 0),
woosh.Token(woosh.NAME, 'return', 956, 8, 956, 14),
woosh.Token(woosh.NAME, 'spawnvp', 956, 15, 956, 22),
woosh.Token(woosh.OP, '(', 956, 22, 956, 23),
woosh.Token(woosh.NAME, 'mode', 956, 23, 956, 27),
woosh.Token(woosh.OP, ',', 956, 27, 956, 28),
woosh.Token(woosh.NAME, 'file', 956, 29, 956, 33),
woosh.Token(woosh.OP, ',', 956, 33, 956, 34),
woosh.Token(woosh.NAME, 'args', 956, 35, 956, 39),
woosh.Token(woosh.OP, ')', 956, 39, 956, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 956, 40, 957, 0),
woosh.Token(woosh.DEDENT, '    ', 958, 0, 958, 4),
woosh.Token(woosh.NAME, 'def', 958, 4, 958, 7),
woosh.Token(woosh.NAME, 'spawnlpe', 958, 8, 958, 16),
woosh.Token(woosh.OP, '(', 958, 16, 958, 17),
woosh.Token(woosh.NAME, 'mode', 958, 17, 958, 21),
woosh.Token(woosh.OP, ',', 958, 21, 958, 22),
woosh.Token(woosh.NAME, 'file', 958, 23, 958, 27),
woosh.Token(woosh.OP, ',', 958, 27, 958, 28),
woosh.Token(woosh.OP, '*', 958, 29, 958, 30),
woosh.Token(woosh.NAME, 'args', 958, 30, 958, 34),
woosh.Token(woosh.OP, ')', 958, 34, 958, 35),
woosh.Token(woosh.OP, ':', 958, 35, 958, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 36, 959, 0),
woosh.Token(woosh.INDENT, '        ', 959, 0, 959, 8),
woosh.Token(woosh.STRING, '"""spawnlpe(mode, file, *args, env) -> integer\r\n\r\nExecute file (which is looked for along $PATH) with arguments from\r\nargs in a subprocess with the supplied environment.\r\nIf mode == P_NOWAIT return the pid of the process.\r\nIf mode == P_WAIT return the process\'s exit code if it exits normally;\r\notherwise return -SIG, where SIG is the signal that killed it. """', 959, 8, 965, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 965, 66, 966, 0),
woosh.Token(woosh.NAME, 'env', 966, 8, 966, 11),
woosh.Token(woosh.OP, '=', 966, 12, 966, 13),
woosh.Token(woosh.NAME, 'args', 966, 14, 966, 18),
woosh.Token(woosh.OP, '[', 966, 18, 966, 19),
woosh.Token(woosh.OP, '-', 966, 19, 966, 20),
woosh.Token(woosh.NUMBER, '1', 966, 20, 966, 21),
woosh.Token(woosh.OP, ']', 966, 21, 966, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 22, 967, 0),
woosh.Token(woosh.NAME, 'return', 967, 8, 967, 14),
woosh.Token(woosh.NAME, 'spawnvpe', 967, 15, 967, 23),
woosh.Token(woosh.OP, '(', 967, 23, 967, 24),
woosh.Token(woosh.NAME, 'mode', 967, 24, 967, 28),
woosh.Token(woosh.OP, ',', 967, 28, 967, 29),
woosh.Token(woosh.NAME, 'file', 967, 30, 967, 34),
woosh.Token(woosh.OP, ',', 967, 34, 967, 35),
woosh.Token(woosh.NAME, 'args', 967, 36, 967, 40),
woosh.Token(woosh.OP, '[', 967, 40, 967, 41),
woosh.Token(woosh.OP, ':', 967, 41, 967, 42),
woosh.Token(woosh.OP, '-', 967, 42, 967, 43),
woosh.Token(woosh.NUMBER, '1', 967, 43, 967, 44),
woosh.Token(woosh.OP, ']', 967, 44, 967, 45),
woosh.Token(woosh.OP, ',', 967, 45, 967, 46),
woosh.Token(woosh.NAME, 'env', 967, 47, 967, 50),
woosh.Token(woosh.OP, ')', 967, 50, 967, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 967, 51, 968, 0),
woosh.Token(woosh.DEDENT, '    ', 970, 0, 970, 4),
woosh.Token(woosh.NAME, '__all__', 970, 4, 970, 11),
woosh.Token(woosh.OP, '.', 970, 11, 970, 12),
woosh.Token(woosh.NAME, 'extend', 970, 12, 970, 18),
woosh.Token(woosh.OP, '(', 970, 18, 970, 19),
woosh.Token(woosh.OP, '[', 970, 19, 970, 20),
woosh.Token(woosh.STRING, '"spawnlp"', 970, 20, 970, 29),
woosh.Token(woosh.OP, ',', 970, 29, 970, 30),
woosh.Token(woosh.STRING, '"spawnlpe"', 970, 31, 970, 41),
woosh.Token(woosh.OP, ']', 970, 41, 970, 42),
woosh.Token(woosh.OP, ')', 970, 42, 970, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 43, 971, 0),
woosh.Token(woosh.COMMENT, '# Supply os.popen()', 973, 0, 973, 19),
woosh.Token(woosh.DEDENT, '', 974, 0, 974, 0),
woosh.Token(woosh.NAME, 'def', 974, 0, 974, 3),
woosh.Token(woosh.NAME, 'popen', 974, 4, 974, 9),
woosh.Token(woosh.OP, '(', 974, 9, 974, 10),
woosh.Token(woosh.NAME, 'cmd', 974, 10, 974, 13),
woosh.Token(woosh.OP, ',', 974, 13, 974, 14),
woosh.Token(woosh.NAME, 'mode', 974, 15, 974, 19),
woosh.Token(woosh.OP, '=', 974, 19, 974, 20),
woosh.Token(woosh.STRING, '"r"', 974, 20, 974, 23),
woosh.Token(woosh.OP, ',', 974, 23, 974, 24),
woosh.Token(woosh.NAME, 'buffering', 974, 25, 974, 34),
woosh.Token(woosh.OP, '=', 974, 34, 974, 35),
woosh.Token(woosh.OP, '-', 974, 35, 974, 36),
woosh.Token(woosh.NUMBER, '1', 974, 36, 974, 37),
woosh.Token(woosh.OP, ')', 974, 37, 974, 38),
woosh.Token(woosh.OP, ':', 974, 38, 974, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 974, 39, 975, 0),
woosh.Token(woosh.INDENT, '    ', 975, 0, 975, 4),
woosh.Token(woosh.NAME, 'if', 975, 4, 975, 6),
woosh.Token(woosh.NAME, 'not', 975, 7, 975, 10),
woosh.Token(woosh.NAME, 'isinstance', 975, 11, 975, 21),
woosh.Token(woosh.OP, '(', 975, 21, 975, 22),
woosh.Token(woosh.NAME, 'cmd', 975, 22, 975, 25),
woosh.Token(woosh.OP, ',', 975, 25, 975, 26),
woosh.Token(woosh.NAME, 'str', 975, 27, 975, 30),
woosh.Token(woosh.OP, ')', 975, 30, 975, 31),
woosh.Token(woosh.OP, ':', 975, 31, 975, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 975, 32, 976, 0),
woosh.Token(woosh.INDENT, '        ', 976, 0, 976, 8),
woosh.Token(woosh.NAME, 'raise', 976, 8, 976, 13),
woosh.Token(woosh.NAME, 'TypeError', 976, 14, 976, 23),
woosh.Token(woosh.OP, '(', 976, 23, 976, 24),
woosh.Token(woosh.STRING, '"invalid cmd type (%s, expected string)"', 976, 24, 976, 64),
woosh.Token(woosh.OP, '%', 976, 65, 976, 66),
woosh.Token(woosh.NAME, 'type', 976, 67, 976, 71),
woosh.Token(woosh.OP, '(', 976, 71, 976, 72),
woosh.Token(woosh.NAME, 'cmd', 976, 72, 976, 75),
woosh.Token(woosh.OP, ')', 976, 75, 976, 76),
woosh.Token(woosh.OP, ')', 976, 76, 976, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 976, 77, 977, 0),
woosh.Token(woosh.DEDENT, '    ', 977, 0, 977, 4),
woosh.Token(woosh.NAME, 'if', 977, 4, 977, 6),
woosh.Token(woosh.NAME, 'mode', 977, 7, 977, 11),
woosh.Token(woosh.NAME, 'not', 977, 12, 977, 15),
woosh.Token(woosh.NAME, 'in', 977, 16, 977, 18),
woosh.Token(woosh.OP, '(', 977, 19, 977, 20),
woosh.Token(woosh.STRING, '"r"', 977, 20, 977, 23),
woosh.Token(woosh.OP, ',', 977, 23, 977, 24),
woosh.Token(woosh.STRING, '"w"', 977, 25, 977, 28),
woosh.Token(woosh.OP, ')', 977, 28, 977, 29),
woosh.Token(woosh.OP, ':', 977, 29, 977, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 977, 30, 978, 0),
woosh.Token(woosh.INDENT, '        ', 978, 0, 978, 8),
woosh.Token(woosh.NAME, 'raise', 978, 8, 978, 13),
woosh.Token(woosh.NAME, 'ValueError', 978, 14, 978, 24),
woosh.Token(woosh.OP, '(', 978, 24, 978, 25),
woosh.Token(woosh.STRING, '"invalid mode %r"', 978, 25, 978, 42),
woosh.Token(woosh.OP, '%', 978, 43, 978, 44),
woosh.Token(woosh.NAME, 'mode', 978, 45, 978, 49),
woosh.Token(woosh.OP, ')', 978, 49, 978, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 978, 50, 979, 0),
woosh.Token(woosh.DEDENT, '    ', 979, 0, 979, 4),
woosh.Token(woosh.NAME, 'if', 979, 4, 979, 6),
woosh.Token(woosh.NAME, 'buffering', 979, 7, 979, 16),
woosh.Token(woosh.OP, '==', 979, 17, 979, 19),
woosh.Token(woosh.NUMBER, '0', 979, 20, 979, 21),
woosh.Token(woosh.NAME, 'or', 979, 22, 979, 24),
woosh.Token(woosh.NAME, 'buffering', 979, 25, 979, 34),
woosh.Token(woosh.NAME, 'is', 979, 35, 979, 37),
woosh.Token(woosh.NAME, 'None', 979, 38, 979, 42),
woosh.Token(woosh.OP, ':', 979, 42, 979, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 979, 43, 980, 0),
woosh.Token(woosh.INDENT, '        ', 980, 0, 980, 8),
woosh.Token(woosh.NAME, 'raise', 980, 8, 980, 13),
woosh.Token(woosh.NAME, 'ValueError', 980, 14, 980, 24),
woosh.Token(woosh.OP, '(', 980, 24, 980, 25),
woosh.Token(woosh.STRING, '"popen() does not support unbuffered streams"', 980, 25, 980, 70),
woosh.Token(woosh.OP, ')', 980, 70, 980, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 980, 71, 981, 0),
woosh.Token(woosh.DEDENT, '    ', 981, 0, 981, 4),
woosh.Token(woosh.NAME, 'import', 981, 4, 981, 10),
woosh.Token(woosh.NAME, 'subprocess', 981, 11, 981, 21),
woosh.Token(woosh.OP, ',', 981, 21, 981, 22),
woosh.Token(woosh.NAME, 'io', 981, 23, 981, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 981, 25, 982, 0),
woosh.Token(woosh.NAME, 'if', 982, 4, 982, 6),
woosh.Token(woosh.NAME, 'mode', 982, 7, 982, 11),
woosh.Token(woosh.OP, '==', 982, 12, 982, 14),
woosh.Token(woosh.STRING, '"r"', 982, 15, 982, 18),
woosh.Token(woosh.OP, ':', 982, 18, 982, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 982, 19, 983, 0),
woosh.Token(woosh.INDENT, '        ', 983, 0, 983, 8),
woosh.Token(woosh.NAME, 'proc', 983, 8, 983, 12),
woosh.Token(woosh.OP, '=', 983, 13, 983, 14),
woosh.Token(woosh.NAME, 'subprocess', 983, 15, 983, 25),
woosh.Token(woosh.OP, '.', 983, 25, 983, 26),
woosh.Token(woosh.NAME, 'Popen', 983, 26, 983, 31),
woosh.Token(woosh.OP, '(', 983, 31, 983, 32),
woosh.Token(woosh.NAME, 'cmd', 983, 32, 983, 35),
woosh.Token(woosh.OP, ',', 983, 35, 983, 36),
woosh.Token(woosh.NAME, 'shell', 984, 32, 984, 37),
woosh.Token(woosh.OP, '=', 984, 37, 984, 38),
woosh.Token(woosh.NAME, 'True', 984, 38, 984, 42),
woosh.Token(woosh.OP, ',', 984, 42, 984, 43),
woosh.Token(woosh.NAME, 'stdout', 985, 32, 985, 38),
woosh.Token(woosh.OP, '=', 985, 38, 985, 39),
woosh.Token(woosh.NAME, 'subprocess', 985, 39, 985, 49),
woosh.Token(woosh.OP, '.', 985, 49, 985, 50),
woosh.Token(woosh.NAME, 'PIPE', 985, 50, 985, 54),
woosh.Token(woosh.OP, ',', 985, 54, 985, 55),
woosh.Token(woosh.NAME, 'bufsize', 986, 32, 986, 39),
woosh.Token(woosh.OP, '=', 986, 39, 986, 40),
woosh.Token(woosh.NAME, 'buffering', 986, 40, 986, 49),
woosh.Token(woosh.OP, ')', 986, 49, 986, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 986, 50, 987, 0),
woosh.Token(woosh.NAME, 'return', 987, 8, 987, 14),
woosh.Token(woosh.NAME, '_wrap_close', 987, 15, 987, 26),
woosh.Token(woosh.OP, '(', 987, 26, 987, 27),
woosh.Token(woosh.NAME, 'io', 987, 27, 987, 29),
woosh.Token(woosh.OP, '.', 987, 29, 987, 30),
woosh.Token(woosh.NAME, 'TextIOWrapper', 987, 30, 987, 43),
woosh.Token(woosh.OP, '(', 987, 43, 987, 44),
woosh.Token(woosh.NAME, 'proc', 987, 44, 987, 48),
woosh.Token(woosh.OP, '.', 987, 48, 987, 49),
woosh.Token(woosh.NAME, 'stdout', 987, 49, 987, 55),
woosh.Token(woosh.OP, ')', 987, 55, 987, 56),
woosh.Token(woosh.OP, ',', 987, 56, 987, 57),
woosh.Token(woosh.NAME, 'proc', 987, 58, 987, 62),
woosh.Token(woosh.OP, ')', 987, 62, 987, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 987, 63, 988, 0),
woosh.Token(woosh.DEDENT, '    ', 988, 0, 988, 4),
woosh.Token(woosh.NAME, 'else', 988, 4, 988, 8),
woosh.Token(woosh.OP, ':', 988, 8, 988, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 988, 9, 989, 0),
woosh.Token(woosh.INDENT, '        ', 989, 0, 989, 8),
woosh.Token(woosh.NAME, 'proc', 989, 8, 989, 12),
woosh.Token(woosh.OP, '=', 989, 13, 989, 14),
woosh.Token(woosh.NAME, 'subprocess', 989, 15, 989, 25),
woosh.Token(woosh.OP, '.', 989, 25, 989, 26),
woosh.Token(woosh.NAME, 'Popen', 989, 26, 989, 31),
woosh.Token(woosh.OP, '(', 989, 31, 989, 32),
woosh.Token(woosh.NAME, 'cmd', 989, 32, 989, 35),
woosh.Token(woosh.OP, ',', 989, 35, 989, 36),
woosh.Token(woosh.NAME, 'shell', 990, 32, 990, 37),
woosh.Token(woosh.OP, '=', 990, 37, 990, 38),
woosh.Token(woosh.NAME, 'True', 990, 38, 990, 42),
woosh.Token(woosh.OP, ',', 990, 42, 990, 43),
woosh.Token(woosh.NAME, 'stdin', 991, 32, 991, 37),
woosh.Token(woosh.OP, '=', 991, 37, 991, 38),
woosh.Token(woosh.NAME, 'subprocess', 991, 38, 991, 48),
woosh.Token(woosh.OP, '.', 991, 48, 991, 49),
woosh.Token(woosh.NAME, 'PIPE', 991, 49, 991, 53),
woosh.Token(woosh.OP, ',', 991, 53, 991, 54),
woosh.Token(woosh.NAME, 'bufsize', 992, 32, 992, 39),
woosh.Token(woosh.OP, '=', 992, 39, 992, 40),
woosh.Token(woosh.NAME, 'buffering', 992, 40, 992, 49),
woosh.Token(woosh.OP, ')', 992, 49, 992, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 992, 50, 993, 0),
woosh.Token(woosh.NAME, 'return', 993, 8, 993, 14),
woosh.Token(woosh.NAME, '_wrap_close', 993, 15, 993, 26),
woosh.Token(woosh.OP, '(', 993, 26, 993, 27),
woosh.Token(woosh.NAME, 'io', 993, 27, 993, 29),
woosh.Token(woosh.OP, '.', 993, 29, 993, 30),
woosh.Token(woosh.NAME, 'TextIOWrapper', 993, 30, 993, 43),
woosh.Token(woosh.OP, '(', 993, 43, 993, 44),
woosh.Token(woosh.NAME, 'proc', 993, 44, 993, 48),
woosh.Token(woosh.OP, '.', 993, 48, 993, 49),
woosh.Token(woosh.NAME, 'stdin', 993, 49, 993, 54),
woosh.Token(woosh.OP, ')', 993, 54, 993, 55),
woosh.Token(woosh.OP, ',', 993, 55, 993, 56),
woosh.Token(woosh.NAME, 'proc', 993, 57, 993, 61),
woosh.Token(woosh.OP, ')', 993, 61, 993, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 993, 62, 994, 0),
woosh.Token(woosh.COMMENT, '# Helper for popen() -- a proxy for a file whose close waits for the process', 995, 0, 995, 76),
woosh.Token(woosh.DEDENT, '', 996, 0, 996, 0),
woosh.Token(woosh.DEDENT, '', 996, 0, 996, 0),
woosh.Token(woosh.NAME, 'class', 996, 0, 996, 5),
woosh.Token(woosh.NAME, '_wrap_close', 996, 6, 996, 17),
woosh.Token(woosh.OP, ':', 996, 17, 996, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 996, 18, 997, 0),
woosh.Token(woosh.INDENT, '    ', 997, 0, 997, 4),
woosh.Token(woosh.NAME, 'def', 997, 4, 997, 7),
woosh.Token(woosh.NAME, '__init__', 997, 8, 997, 16),
woosh.Token(woosh.OP, '(', 997, 16, 997, 17),
woosh.Token(woosh.NAME, 'self', 997, 17, 997, 21),
woosh.Token(woosh.OP, ',', 997, 21, 997, 22),
woosh.Token(woosh.NAME, 'stream', 997, 23, 997, 29),
woosh.Token(woosh.OP, ',', 997, 29, 997, 30),
woosh.Token(woosh.NAME, 'proc', 997, 31, 997, 35),
woosh.Token(woosh.OP, ')', 997, 35, 997, 36),
woosh.Token(woosh.OP, ':', 997, 36, 997, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 997, 37, 998, 0),
woosh.Token(woosh.INDENT, '        ', 998, 0, 998, 8),
woosh.Token(woosh.NAME, 'self', 998, 8, 998, 12),
woosh.Token(woosh.OP, '.', 998, 12, 998, 13),
woosh.Token(woosh.NAME, '_stream', 998, 13, 998, 20),
woosh.Token(woosh.OP, '=', 998, 21, 998, 22),
woosh.Token(woosh.NAME, 'stream', 998, 23, 998, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 998, 29, 999, 0),
woosh.Token(woosh.NAME, 'self', 999, 8, 999, 12),
woosh.Token(woosh.OP, '.', 999, 12, 999, 13),
woosh.Token(woosh.NAME, '_proc', 999, 13, 999, 18),
woosh.Token(woosh.OP, '=', 999, 19, 999, 20),
woosh.Token(woosh.NAME, 'proc', 999, 21, 999, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 999, 25, 1000, 0),
woosh.Token(woosh.DEDENT, '    ', 1000, 0, 1000, 4),
woosh.Token(woosh.NAME, 'def', 1000, 4, 1000, 7),
woosh.Token(woosh.NAME, 'close', 1000, 8, 1000, 13),
woosh.Token(woosh.OP, '(', 1000, 13, 1000, 14),
woosh.Token(woosh.NAME, 'self', 1000, 14, 1000, 18),
woosh.Token(woosh.OP, ')', 1000, 18, 1000, 19),
woosh.Token(woosh.OP, ':', 1000, 19, 1000, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1000, 20, 1001, 0),
woosh.Token(woosh.INDENT, '        ', 1001, 0, 1001, 8),
woosh.Token(woosh.NAME, 'self', 1001, 8, 1001, 12),
woosh.Token(woosh.OP, '.', 1001, 12, 1001, 13),
woosh.Token(woosh.NAME, '_stream', 1001, 13, 1001, 20),
woosh.Token(woosh.OP, '.', 1001, 20, 1001, 21),
woosh.Token(woosh.NAME, 'close', 1001, 21, 1001, 26),
woosh.Token(woosh.OP, '(', 1001, 26, 1001, 27),
woosh.Token(woosh.OP, ')', 1001, 27, 1001, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1001, 28, 1002, 0),
woosh.Token(woosh.NAME, 'returncode', 1002, 8, 1002, 18),
woosh.Token(woosh.OP, '=', 1002, 19, 1002, 20),
woosh.Token(woosh.NAME, 'self', 1002, 21, 1002, 25),
woosh.Token(woosh.OP, '.', 1002, 25, 1002, 26),
woosh.Token(woosh.NAME, '_proc', 1002, 26, 1002, 31),
woosh.Token(woosh.OP, '.', 1002, 31, 1002, 32),
woosh.Token(woosh.NAME, 'wait', 1002, 32, 1002, 36),
woosh.Token(woosh.OP, '(', 1002, 36, 1002, 37),
woosh.Token(woosh.OP, ')', 1002, 37, 1002, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1002, 38, 1003, 0),
woosh.Token(woosh.NAME, 'if', 1003, 8, 1003, 10),
woosh.Token(woosh.NAME, 'returncode', 1003, 11, 1003, 21),
woosh.Token(woosh.OP, '==', 1003, 22, 1003, 24),
woosh.Token(woosh.NUMBER, '0', 1003, 25, 1003, 26),
woosh.Token(woosh.OP, ':', 1003, 26, 1003, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1003, 27, 1004, 0),
woosh.Token(woosh.INDENT, '            ', 1004, 0, 1004, 12),
woosh.Token(woosh.NAME, 'return', 1004, 12, 1004, 18),
woosh.Token(woosh.NAME, 'None', 1004, 19, 1004, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1004, 23, 1005, 0),
woosh.Token(woosh.DEDENT, '        ', 1005, 0, 1005, 8),
woosh.Token(woosh.NAME, 'if', 1005, 8, 1005, 10),
woosh.Token(woosh.NAME, 'name', 1005, 11, 1005, 15),
woosh.Token(woosh.OP, '==', 1005, 16, 1005, 18),
woosh.Token(woosh.STRING, "'nt'", 1005, 19, 1005, 23),
woosh.Token(woosh.OP, ':', 1005, 23, 1005, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1005, 24, 1006, 0),
woosh.Token(woosh.INDENT, '            ', 1006, 0, 1006, 12),
woosh.Token(woosh.NAME, 'return', 1006, 12, 1006, 18),
woosh.Token(woosh.NAME, 'returncode', 1006, 19, 1006, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1006, 29, 1007, 0),
woosh.Token(woosh.DEDENT, '        ', 1007, 0, 1007, 8),
woosh.Token(woosh.NAME, 'else', 1007, 8, 1007, 12),
woosh.Token(woosh.OP, ':', 1007, 12, 1007, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1007, 13, 1008, 0),
woosh.Token(woosh.INDENT, '            ', 1008, 0, 1008, 12),
woosh.Token(woosh.NAME, 'return', 1008, 12, 1008, 18),
woosh.Token(woosh.NAME, 'returncode', 1008, 19, 1008, 29),
woosh.Token(woosh.OP, '<<', 1008, 30, 1008, 32),
woosh.Token(woosh.NUMBER, '8', 1008, 33, 1008, 34),
woosh.Token(woosh.COMMENT, '# Shift left to match old behavior', 1008, 36, 1008, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1008, 70, 1009, 0),
woosh.Token(woosh.DEDENT, '    ', 1009, 0, 1009, 4),
woosh.Token(woosh.DEDENT, '', 1009, 4, 1009, 4),
woosh.Token(woosh.NAME, 'def', 1009, 4, 1009, 7),
woosh.Token(woosh.NAME, '__enter__', 1009, 8, 1009, 17),
woosh.Token(woosh.OP, '(', 1009, 17, 1009, 18),
woosh.Token(woosh.NAME, 'self', 1009, 18, 1009, 22),
woosh.Token(woosh.OP, ')', 1009, 22, 1009, 23),
woosh.Token(woosh.OP, ':', 1009, 23, 1009, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1009, 24, 1010, 0),
woosh.Token(woosh.INDENT, '        ', 1010, 0, 1010, 8),
woosh.Token(woosh.NAME, 'return', 1010, 8, 1010, 14),
woosh.Token(woosh.NAME, 'self', 1010, 15, 1010, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1010, 19, 1011, 0),
woosh.Token(woosh.DEDENT, '    ', 1011, 0, 1011, 4),
woosh.Token(woosh.NAME, 'def', 1011, 4, 1011, 7),
woosh.Token(woosh.NAME, '__exit__', 1011, 8, 1011, 16),
woosh.Token(woosh.OP, '(', 1011, 16, 1011, 17),
woosh.Token(woosh.NAME, 'self', 1011, 17, 1011, 21),
woosh.Token(woosh.OP, ',', 1011, 21, 1011, 22),
woosh.Token(woosh.OP, '*', 1011, 23, 1011, 24),
woosh.Token(woosh.NAME, 'args', 1011, 24, 1011, 28),
woosh.Token(woosh.OP, ')', 1011, 28, 1011, 29),
woosh.Token(woosh.OP, ':', 1011, 29, 1011, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1011, 30, 1012, 0),
woosh.Token(woosh.INDENT, '        ', 1012, 0, 1012, 8),
woosh.Token(woosh.NAME, 'self', 1012, 8, 1012, 12),
woosh.Token(woosh.OP, '.', 1012, 12, 1012, 13),
woosh.Token(woosh.NAME, 'close', 1012, 13, 1012, 18),
woosh.Token(woosh.OP, '(', 1012, 18, 1012, 19),
woosh.Token(woosh.OP, ')', 1012, 19, 1012, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1012, 20, 1013, 0),
woosh.Token(woosh.DEDENT, '    ', 1013, 0, 1013, 4),
woosh.Token(woosh.NAME, 'def', 1013, 4, 1013, 7),
woosh.Token(woosh.NAME, '__getattr__', 1013, 8, 1013, 19),
woosh.Token(woosh.OP, '(', 1013, 19, 1013, 20),
woosh.Token(woosh.NAME, 'self', 1013, 20, 1013, 24),
woosh.Token(woosh.OP, ',', 1013, 24, 1013, 25),
woosh.Token(woosh.NAME, 'name', 1013, 26, 1013, 30),
woosh.Token(woosh.OP, ')', 1013, 30, 1013, 31),
woosh.Token(woosh.OP, ':', 1013, 31, 1013, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1013, 32, 1014, 0),
woosh.Token(woosh.INDENT, '        ', 1014, 0, 1014, 8),
woosh.Token(woosh.NAME, 'return', 1014, 8, 1014, 14),
woosh.Token(woosh.NAME, 'getattr', 1014, 15, 1014, 22),
woosh.Token(woosh.OP, '(', 1014, 22, 1014, 23),
woosh.Token(woosh.NAME, 'self', 1014, 23, 1014, 27),
woosh.Token(woosh.OP, '.', 1014, 27, 1014, 28),
woosh.Token(woosh.NAME, '_stream', 1014, 28, 1014, 35),
woosh.Token(woosh.OP, ',', 1014, 35, 1014, 36),
woosh.Token(woosh.NAME, 'name', 1014, 37, 1014, 41),
woosh.Token(woosh.OP, ')', 1014, 41, 1014, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1014, 42, 1015, 0),
woosh.Token(woosh.DEDENT, '    ', 1015, 0, 1015, 4),
woosh.Token(woosh.NAME, 'def', 1015, 4, 1015, 7),
woosh.Token(woosh.NAME, '__iter__', 1015, 8, 1015, 16),
woosh.Token(woosh.OP, '(', 1015, 16, 1015, 17),
woosh.Token(woosh.NAME, 'self', 1015, 17, 1015, 21),
woosh.Token(woosh.OP, ')', 1015, 21, 1015, 22),
woosh.Token(woosh.OP, ':', 1015, 22, 1015, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1015, 23, 1016, 0),
woosh.Token(woosh.INDENT, '        ', 1016, 0, 1016, 8),
woosh.Token(woosh.NAME, 'return', 1016, 8, 1016, 14),
woosh.Token(woosh.NAME, 'iter', 1016, 15, 1016, 19),
woosh.Token(woosh.OP, '(', 1016, 19, 1016, 20),
woosh.Token(woosh.NAME, 'self', 1016, 20, 1016, 24),
woosh.Token(woosh.OP, '.', 1016, 24, 1016, 25),
woosh.Token(woosh.NAME, '_stream', 1016, 25, 1016, 32),
woosh.Token(woosh.OP, ')', 1016, 32, 1016, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 33, 1017, 0),
woosh.Token(woosh.COMMENT, '# Supply os.fdopen()', 1018, 0, 1018, 20),
woosh.Token(woosh.DEDENT, '', 1019, 0, 1019, 0),
woosh.Token(woosh.DEDENT, '', 1019, 0, 1019, 0),
woosh.Token(woosh.NAME, 'def', 1019, 0, 1019, 3),
woosh.Token(woosh.NAME, 'fdopen', 1019, 4, 1019, 10),
woosh.Token(woosh.OP, '(', 1019, 10, 1019, 11),
woosh.Token(woosh.NAME, 'fd', 1019, 11, 1019, 13),
woosh.Token(woosh.OP, ',', 1019, 13, 1019, 14),
woosh.Token(woosh.OP, '*', 1019, 15, 1019, 16),
woosh.Token(woosh.NAME, 'args', 1019, 16, 1019, 20),
woosh.Token(woosh.OP, ',', 1019, 20, 1019, 21),
woosh.Token(woosh.OP, '**', 1019, 22, 1019, 24),
woosh.Token(woosh.NAME, 'kwargs', 1019, 24, 1019, 30),
woosh.Token(woosh.OP, ')', 1019, 30, 1019, 31),
woosh.Token(woosh.OP, ':', 1019, 31, 1019, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1019, 32, 1020, 0),
woosh.Token(woosh.INDENT, '    ', 1020, 0, 1020, 4),
woosh.Token(woosh.NAME, 'if', 1020, 4, 1020, 6),
woosh.Token(woosh.NAME, 'not', 1020, 7, 1020, 10),
woosh.Token(woosh.NAME, 'isinstance', 1020, 11, 1020, 21),
woosh.Token(woosh.OP, '(', 1020, 21, 1020, 22),
woosh.Token(woosh.NAME, 'fd', 1020, 22, 1020, 24),
woosh.Token(woosh.OP, ',', 1020, 24, 1020, 25),
woosh.Token(woosh.NAME, 'int', 1020, 26, 1020, 29),
woosh.Token(woosh.OP, ')', 1020, 29, 1020, 30),
woosh.Token(woosh.OP, ':', 1020, 30, 1020, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1020, 31, 1021, 0),
woosh.Token(woosh.INDENT, '        ', 1021, 0, 1021, 8),
woosh.Token(woosh.NAME, 'raise', 1021, 8, 1021, 13),
woosh.Token(woosh.NAME, 'TypeError', 1021, 14, 1021, 23),
woosh.Token(woosh.OP, '(', 1021, 23, 1021, 24),
woosh.Token(woosh.STRING, '"invalid fd type (%s, expected integer)"', 1021, 24, 1021, 64),
woosh.Token(woosh.OP, '%', 1021, 65, 1021, 66),
woosh.Token(woosh.NAME, 'type', 1021, 67, 1021, 71),
woosh.Token(woosh.OP, '(', 1021, 71, 1021, 72),
woosh.Token(woosh.NAME, 'fd', 1021, 72, 1021, 74),
woosh.Token(woosh.OP, ')', 1021, 74, 1021, 75),
woosh.Token(woosh.OP, ')', 1021, 75, 1021, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1021, 76, 1022, 0),
woosh.Token(woosh.DEDENT, '    ', 1022, 0, 1022, 4),
woosh.Token(woosh.NAME, 'import', 1022, 4, 1022, 10),
woosh.Token(woosh.NAME, 'io', 1022, 11, 1022, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1022, 13, 1023, 0),
woosh.Token(woosh.NAME, 'return', 1023, 4, 1023, 10),
woosh.Token(woosh.NAME, 'io', 1023, 11, 1023, 13),
woosh.Token(woosh.OP, '.', 1023, 13, 1023, 14),
woosh.Token(woosh.NAME, 'open', 1023, 14, 1023, 18),
woosh.Token(woosh.OP, '(', 1023, 18, 1023, 19),
woosh.Token(woosh.NAME, 'fd', 1023, 19, 1023, 21),
woosh.Token(woosh.OP, ',', 1023, 21, 1023, 22),
woosh.Token(woosh.OP, '*', 1023, 23, 1023, 24),
woosh.Token(woosh.NAME, 'args', 1023, 24, 1023, 28),
woosh.Token(woosh.OP, ',', 1023, 28, 1023, 29),
woosh.Token(woosh.OP, '**', 1023, 30, 1023, 32),
woosh.Token(woosh.NAME, 'kwargs', 1023, 32, 1023, 38),
woosh.Token(woosh.OP, ')', 1023, 38, 1023, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1023, 39, 1024, 0),
woosh.Token(woosh.COMMENT, '# For testing purposes, make sure the function is available when the C', 1026, 0, 1026, 70),
woosh.Token(woosh.COMMENT, '# implementation exists.', 1027, 0, 1027, 24),
woosh.Token(woosh.DEDENT, '', 1028, 0, 1028, 0),
woosh.Token(woosh.NAME, 'def', 1028, 0, 1028, 3),
woosh.Token(woosh.NAME, '_fspath', 1028, 4, 1028, 11),
woosh.Token(woosh.OP, '(', 1028, 11, 1028, 12),
woosh.Token(woosh.NAME, 'path', 1028, 12, 1028, 16),
woosh.Token(woosh.OP, ')', 1028, 16, 1028, 17),
woosh.Token(woosh.OP, ':', 1028, 17, 1028, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1028, 18, 1029, 0),
woosh.Token(woosh.INDENT, '    ', 1029, 0, 1029, 4),
woosh.Token(woosh.STRING, '"""Return the path representation of a path-like object.\r\n\r\n    If str or bytes is passed in, it is returned unchanged. Otherwise the\r\n    os.PathLike interface is used to get the path representation. If the\r\n    path representation is not str or bytes, TypeError is raised. If the\r\n    provided path is not str, bytes, or os.PathLike, TypeError is raised.\r\n    """', 1029, 4, 1035, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1035, 7, 1036, 0),
woosh.Token(woosh.NAME, 'if', 1036, 4, 1036, 6),
woosh.Token(woosh.NAME, 'isinstance', 1036, 7, 1036, 17),
woosh.Token(woosh.OP, '(', 1036, 17, 1036, 18),
woosh.Token(woosh.NAME, 'path', 1036, 18, 1036, 22),
woosh.Token(woosh.OP, ',', 1036, 22, 1036, 23),
woosh.Token(woosh.OP, '(', 1036, 24, 1036, 25),
woosh.Token(woosh.NAME, 'str', 1036, 25, 1036, 28),
woosh.Token(woosh.OP, ',', 1036, 28, 1036, 29),
woosh.Token(woosh.NAME, 'bytes', 1036, 30, 1036, 35),
woosh.Token(woosh.OP, ')', 1036, 35, 1036, 36),
woosh.Token(woosh.OP, ')', 1036, 36, 1036, 37),
woosh.Token(woosh.OP, ':', 1036, 37, 1036, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1036, 38, 1037, 0),
woosh.Token(woosh.INDENT, '        ', 1037, 0, 1037, 8),
woosh.Token(woosh.NAME, 'return', 1037, 8, 1037, 14),
woosh.Token(woosh.NAME, 'path', 1037, 15, 1037, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1037, 19, 1038, 0),
woosh.Token(woosh.COMMENT, "# Work from the object's type to match method resolution of other magic", 1039, 4, 1039, 75),
woosh.Token(woosh.COMMENT, '# methods.', 1040, 4, 1040, 14),
woosh.Token(woosh.DEDENT, '    ', 1041, 0, 1041, 4),
woosh.Token(woosh.NAME, 'path_type', 1041, 4, 1041, 13),
woosh.Token(woosh.OP, '=', 1041, 14, 1041, 15),
woosh.Token(woosh.NAME, 'type', 1041, 16, 1041, 20),
woosh.Token(woosh.OP, '(', 1041, 20, 1041, 21),
woosh.Token(woosh.NAME, 'path', 1041, 21, 1041, 25),
woosh.Token(woosh.OP, ')', 1041, 25, 1041, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1041, 26, 1042, 0),
woosh.Token(woosh.NAME, 'try', 1042, 4, 1042, 7),
woosh.Token(woosh.OP, ':', 1042, 7, 1042, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1042, 8, 1043, 0),
woosh.Token(woosh.INDENT, '        ', 1043, 0, 1043, 8),
woosh.Token(woosh.NAME, 'path_repr', 1043, 8, 1043, 17),
woosh.Token(woosh.OP, '=', 1043, 18, 1043, 19),
woosh.Token(woosh.NAME, 'path_type', 1043, 20, 1043, 29),
woosh.Token(woosh.OP, '.', 1043, 29, 1043, 30),
woosh.Token(woosh.NAME, '__fspath__', 1043, 30, 1043, 40),
woosh.Token(woosh.OP, '(', 1043, 40, 1043, 41),
woosh.Token(woosh.NAME, 'path', 1043, 41, 1043, 45),
woosh.Token(woosh.OP, ')', 1043, 45, 1043, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1043, 46, 1044, 0),
woosh.Token(woosh.DEDENT, '    ', 1044, 0, 1044, 4),
woosh.Token(woosh.NAME, 'except', 1044, 4, 1044, 10),
woosh.Token(woosh.NAME, 'AttributeError', 1044, 11, 1044, 25),
woosh.Token(woosh.OP, ':', 1044, 25, 1044, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1044, 26, 1045, 0),
woosh.Token(woosh.INDENT, '        ', 1045, 0, 1045, 8),
woosh.Token(woosh.NAME, 'if', 1045, 8, 1045, 10),
woosh.Token(woosh.NAME, 'hasattr', 1045, 11, 1045, 18),
woosh.Token(woosh.OP, '(', 1045, 18, 1045, 19),
woosh.Token(woosh.NAME, 'path_type', 1045, 19, 1045, 28),
woosh.Token(woosh.OP, ',', 1045, 28, 1045, 29),
woosh.Token(woosh.STRING, "'__fspath__'", 1045, 30, 1045, 42),
woosh.Token(woosh.OP, ')', 1045, 42, 1045, 43),
woosh.Token(woosh.OP, ':', 1045, 43, 1045, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1045, 44, 1046, 0),
woosh.Token(woosh.INDENT, '            ', 1046, 0, 1046, 12),
woosh.Token(woosh.NAME, 'raise', 1046, 12, 1046, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1046, 17, 1047, 0),
woosh.Token(woosh.DEDENT, '        ', 1047, 0, 1047, 8),
woosh.Token(woosh.NAME, 'else', 1047, 8, 1047, 12),
woosh.Token(woosh.OP, ':', 1047, 12, 1047, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 13, 1048, 0),
woosh.Token(woosh.INDENT, '            ', 1048, 0, 1048, 12),
woosh.Token(woosh.NAME, 'raise', 1048, 12, 1048, 17),
woosh.Token(woosh.NAME, 'TypeError', 1048, 18, 1048, 27),
woosh.Token(woosh.OP, '(', 1048, 27, 1048, 28),
woosh.Token(woosh.STRING, '"expected str, bytes or os.PathLike object, "', 1048, 28, 1048, 73),
woosh.Token(woosh.STRING, '"not "', 1049, 28, 1049, 34),
woosh.Token(woosh.OP, '+', 1049, 35, 1049, 36),
woosh.Token(woosh.NAME, 'path_type', 1049, 37, 1049, 46),
woosh.Token(woosh.OP, '.', 1049, 46, 1049, 47),
woosh.Token(woosh.NAME, '__name__', 1049, 47, 1049, 55),
woosh.Token(woosh.OP, ')', 1049, 55, 1049, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1049, 56, 1050, 0),
woosh.Token(woosh.DEDENT, '    ', 1050, 0, 1050, 4),
woosh.Token(woosh.DEDENT, '', 1050, 4, 1050, 4),
woosh.Token(woosh.NAME, 'if', 1050, 4, 1050, 6),
woosh.Token(woosh.NAME, 'isinstance', 1050, 7, 1050, 17),
woosh.Token(woosh.OP, '(', 1050, 17, 1050, 18),
woosh.Token(woosh.NAME, 'path_repr', 1050, 18, 1050, 27),
woosh.Token(woosh.OP, ',', 1050, 27, 1050, 28),
woosh.Token(woosh.OP, '(', 1050, 29, 1050, 30),
woosh.Token(woosh.NAME, 'str', 1050, 30, 1050, 33),
woosh.Token(woosh.OP, ',', 1050, 33, 1050, 34),
woosh.Token(woosh.NAME, 'bytes', 1050, 35, 1050, 40),
woosh.Token(woosh.OP, ')', 1050, 40, 1050, 41),
woosh.Token(woosh.OP, ')', 1050, 41, 1050, 42),
woosh.Token(woosh.OP, ':', 1050, 42, 1050, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1050, 43, 1051, 0),
woosh.Token(woosh.INDENT, '        ', 1051, 0, 1051, 8),
woosh.Token(woosh.NAME, 'return', 1051, 8, 1051, 14),
woosh.Token(woosh.NAME, 'path_repr', 1051, 15, 1051, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1051, 24, 1052, 0),
woosh.Token(woosh.DEDENT, '    ', 1052, 0, 1052, 4),
woosh.Token(woosh.NAME, 'else', 1052, 4, 1052, 8),
woosh.Token(woosh.OP, ':', 1052, 8, 1052, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1052, 9, 1053, 0),
woosh.Token(woosh.INDENT, '        ', 1053, 0, 1053, 8),
woosh.Token(woosh.NAME, 'raise', 1053, 8, 1053, 13),
woosh.Token(woosh.NAME, 'TypeError', 1053, 14, 1053, 23),
woosh.Token(woosh.OP, '(', 1053, 23, 1053, 24),
woosh.Token(woosh.STRING, '"expected {}.__fspath__() to return str or bytes, "', 1053, 24, 1053, 75),
woosh.Token(woosh.STRING, '"not {}"', 1054, 24, 1054, 32),
woosh.Token(woosh.OP, '.', 1054, 32, 1054, 33),
woosh.Token(woosh.NAME, 'format', 1054, 33, 1054, 39),
woosh.Token(woosh.OP, '(', 1054, 39, 1054, 40),
woosh.Token(woosh.NAME, 'path_type', 1054, 40, 1054, 49),
woosh.Token(woosh.OP, '.', 1054, 49, 1054, 50),
woosh.Token(woosh.NAME, '__name__', 1054, 50, 1054, 58),
woosh.Token(woosh.OP, ',', 1054, 58, 1054, 59),
woosh.Token(woosh.NAME, 'type', 1055, 40, 1055, 44),
woosh.Token(woosh.OP, '(', 1055, 44, 1055, 45),
woosh.Token(woosh.NAME, 'path_repr', 1055, 45, 1055, 54),
woosh.Token(woosh.OP, ')', 1055, 54, 1055, 55),
woosh.Token(woosh.OP, '.', 1055, 55, 1055, 56),
woosh.Token(woosh.NAME, '__name__', 1055, 56, 1055, 64),
woosh.Token(woosh.OP, ')', 1055, 64, 1055, 65),
woosh.Token(woosh.OP, ')', 1055, 65, 1055, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1055, 66, 1056, 0),
woosh.Token(woosh.COMMENT, '# If there is no C implementation, make the pure Python version the', 1057, 0, 1057, 67),
woosh.Token(woosh.COMMENT, '# implementation as transparently as possible.', 1058, 0, 1058, 46),
woosh.Token(woosh.DEDENT, '', 1059, 0, 1059, 0),
woosh.Token(woosh.DEDENT, '', 1059, 0, 1059, 0),
woosh.Token(woosh.NAME, 'if', 1059, 0, 1059, 2),
woosh.Token(woosh.NAME, 'not', 1059, 3, 1059, 6),
woosh.Token(woosh.NAME, '_exists', 1059, 7, 1059, 14),
woosh.Token(woosh.OP, '(', 1059, 14, 1059, 15),
woosh.Token(woosh.STRING, "'fspath'", 1059, 15, 1059, 23),
woosh.Token(woosh.OP, ')', 1059, 23, 1059, 24),
woosh.Token(woosh.OP, ':', 1059, 24, 1059, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1059, 25, 1060, 0),
woosh.Token(woosh.INDENT, '    ', 1060, 0, 1060, 4),
woosh.Token(woosh.NAME, 'fspath', 1060, 4, 1060, 10),
woosh.Token(woosh.OP, '=', 1060, 11, 1060, 12),
woosh.Token(woosh.NAME, '_fspath', 1060, 13, 1060, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1060, 20, 1061, 0),
woosh.Token(woosh.NAME, 'fspath', 1061, 4, 1061, 10),
woosh.Token(woosh.OP, '.', 1061, 10, 1061, 11),
woosh.Token(woosh.NAME, '__name__', 1061, 11, 1061, 19),
woosh.Token(woosh.OP, '=', 1061, 20, 1061, 21),
woosh.Token(woosh.STRING, '"fspath"', 1061, 22, 1061, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1061, 30, 1062, 0),
woosh.Token(woosh.DEDENT, '', 1064, 0, 1064, 0),
woosh.Token(woosh.NAME, 'class', 1064, 0, 1064, 5),
woosh.Token(woosh.NAME, 'PathLike', 1064, 6, 1064, 14),
woosh.Token(woosh.OP, '(', 1064, 14, 1064, 15),
woosh.Token(woosh.NAME, 'abc', 1064, 15, 1064, 18),
woosh.Token(woosh.OP, '.', 1064, 18, 1064, 19),
woosh.Token(woosh.NAME, 'ABC', 1064, 19, 1064, 22),
woosh.Token(woosh.OP, ')', 1064, 22, 1064, 23),
woosh.Token(woosh.OP, ':', 1064, 23, 1064, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1064, 24, 1065, 0),
woosh.Token(woosh.INDENT, '    ', 1066, 0, 1066, 4),
woosh.Token(woosh.STRING, '"""Abstract base class for implementing the file system path protocol."""', 1066, 4, 1066, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 1066, 77, 1067, 0),
woosh.Token(woosh.OP, '@', 1068, 4, 1068, 5),
woosh.Token(woosh.NAME, 'abc', 1068, 5, 1068, 8),
woosh.Token(woosh.OP, '.', 1068, 8, 1068, 9),
woosh.Token(woosh.NAME, 'abstractmethod', 1068, 9, 1068, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1068, 23, 1069, 0),
woosh.Token(woosh.NAME, 'def', 1069, 4, 1069, 7),
woosh.Token(woosh.NAME, '__fspath__', 1069, 8, 1069, 18),
woosh.Token(woosh.OP, '(', 1069, 18, 1069, 19),
woosh.Token(woosh.NAME, 'self', 1069, 19, 1069, 23),
woosh.Token(woosh.OP, ')', 1069, 23, 1069, 24),
woosh.Token(woosh.OP, ':', 1069, 24, 1069, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1069, 25, 1070, 0),
woosh.Token(woosh.INDENT, '        ', 1070, 0, 1070, 8),
woosh.Token(woosh.STRING, '"""Return the file system path representation of the object."""', 1070, 8, 1070, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1070, 71, 1071, 0),
woosh.Token(woosh.NAME, 'raise', 1071, 8, 1071, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 1071, 14, 1071, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1071, 33, 1072, 0),
woosh.Token(woosh.DEDENT, '    ', 1073, 0, 1073, 4),
woosh.Token(woosh.OP, '@', 1073, 4, 1073, 5),
woosh.Token(woosh.NAME, 'classmethod', 1073, 5, 1073, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1073, 16, 1074, 0),
woosh.Token(woosh.NAME, 'def', 1074, 4, 1074, 7),
woosh.Token(woosh.NAME, '__subclasshook__', 1074, 8, 1074, 24),
woosh.Token(woosh.OP, '(', 1074, 24, 1074, 25),
woosh.Token(woosh.NAME, 'cls', 1074, 25, 1074, 28),
woosh.Token(woosh.OP, ',', 1074, 28, 1074, 29),
woosh.Token(woosh.NAME, 'subclass', 1074, 30, 1074, 38),
woosh.Token(woosh.OP, ')', 1074, 38, 1074, 39),
woosh.Token(woosh.OP, ':', 1074, 39, 1074, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 40, 1075, 0),
woosh.Token(woosh.INDENT, '        ', 1075, 0, 1075, 8),
woosh.Token(woosh.NAME, 'if', 1075, 8, 1075, 10),
woosh.Token(woosh.NAME, 'cls', 1075, 11, 1075, 14),
woosh.Token(woosh.NAME, 'is', 1075, 15, 1075, 17),
woosh.Token(woosh.NAME, 'PathLike', 1075, 18, 1075, 26),
woosh.Token(woosh.OP, ':', 1075, 26, 1075, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1075, 27, 1076, 0),
woosh.Token(woosh.INDENT, '            ', 1076, 0, 1076, 12),
woosh.Token(woosh.NAME, 'return', 1076, 12, 1076, 18),
woosh.Token(woosh.NAME, '_check_methods', 1076, 19, 1076, 33),
woosh.Token(woosh.OP, '(', 1076, 33, 1076, 34),
woosh.Token(woosh.NAME, 'subclass', 1076, 34, 1076, 42),
woosh.Token(woosh.OP, ',', 1076, 42, 1076, 43),
woosh.Token(woosh.STRING, "'__fspath__'", 1076, 44, 1076, 56),
woosh.Token(woosh.OP, ')', 1076, 56, 1076, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1076, 57, 1077, 0),
woosh.Token(woosh.DEDENT, '        ', 1077, 0, 1077, 8),
woosh.Token(woosh.NAME, 'return', 1077, 8, 1077, 14),
woosh.Token(woosh.NAME, 'NotImplemented', 1077, 15, 1077, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1077, 29, 1078, 0),
woosh.Token(woosh.DEDENT, '    ', 1079, 0, 1079, 4),
woosh.Token(woosh.NAME, '__class_getitem__', 1079, 4, 1079, 21),
woosh.Token(woosh.OP, '=', 1079, 22, 1079, 23),
woosh.Token(woosh.NAME, 'classmethod', 1079, 24, 1079, 35),
woosh.Token(woosh.OP, '(', 1079, 35, 1079, 36),
woosh.Token(woosh.NAME, 'GenericAlias', 1079, 36, 1079, 48),
woosh.Token(woosh.OP, ')', 1079, 48, 1079, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1079, 49, 1080, 0),
woosh.Token(woosh.DEDENT, '', 1082, 0, 1082, 0),
woosh.Token(woosh.NAME, 'if', 1082, 0, 1082, 2),
woosh.Token(woosh.NAME, 'name', 1082, 3, 1082, 7),
woosh.Token(woosh.OP, '==', 1082, 8, 1082, 10),
woosh.Token(woosh.STRING, "'nt'", 1082, 11, 1082, 15),
woosh.Token(woosh.OP, ':', 1082, 15, 1082, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1082, 16, 1083, 0),
woosh.Token(woosh.INDENT, '    ', 1083, 0, 1083, 4),
woosh.Token(woosh.NAME, 'class', 1083, 4, 1083, 9),
woosh.Token(woosh.NAME, '_AddedDllDirectory', 1083, 10, 1083, 28),
woosh.Token(woosh.OP, ':', 1083, 28, 1083, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1083, 29, 1084, 0),
woosh.Token(woosh.INDENT, '        ', 1084, 0, 1084, 8),
woosh.Token(woosh.NAME, 'def', 1084, 8, 1084, 11),
woosh.Token(woosh.NAME, '__init__', 1084, 12, 1084, 20),
woosh.Token(woosh.OP, '(', 1084, 20, 1084, 21),
woosh.Token(woosh.NAME, 'self', 1084, 21, 1084, 25),
woosh.Token(woosh.OP, ',', 1084, 25, 1084, 26),
woosh.Token(woosh.NAME, 'path', 1084, 27, 1084, 31),
woosh.Token(woosh.OP, ',', 1084, 31, 1084, 32),
woosh.Token(woosh.NAME, 'cookie', 1084, 33, 1084, 39),
woosh.Token(woosh.OP, ',', 1084, 39, 1084, 40),
woosh.Token(woosh.NAME, 'remove_dll_directory', 1084, 41, 1084, 61),
woosh.Token(woosh.OP, ')', 1084, 61, 1084, 62),
woosh.Token(woosh.OP, ':', 1084, 62, 1084, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1084, 63, 1085, 0),
woosh.Token(woosh.INDENT, '            ', 1085, 0, 1085, 12),
woosh.Token(woosh.NAME, 'self', 1085, 12, 1085, 16),
woosh.Token(woosh.OP, '.', 1085, 16, 1085, 17),
woosh.Token(woosh.NAME, 'path', 1085, 17, 1085, 21),
woosh.Token(woosh.OP, '=', 1085, 22, 1085, 23),
woosh.Token(woosh.NAME, 'path', 1085, 24, 1085, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1085, 28, 1086, 0),
woosh.Token(woosh.NAME, 'self', 1086, 12, 1086, 16),
woosh.Token(woosh.OP, '.', 1086, 16, 1086, 17),
woosh.Token(woosh.NAME, '_cookie', 1086, 17, 1086, 24),
woosh.Token(woosh.OP, '=', 1086, 25, 1086, 26),
woosh.Token(woosh.NAME, 'cookie', 1086, 27, 1086, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1086, 33, 1087, 0),
woosh.Token(woosh.NAME, 'self', 1087, 12, 1087, 16),
woosh.Token(woosh.OP, '.', 1087, 16, 1087, 17),
woosh.Token(woosh.NAME, '_remove_dll_directory', 1087, 17, 1087, 38),
woosh.Token(woosh.OP, '=', 1087, 39, 1087, 40),
woosh.Token(woosh.NAME, 'remove_dll_directory', 1087, 41, 1087, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1087, 61, 1088, 0),
woosh.Token(woosh.DEDENT, '        ', 1088, 0, 1088, 8),
woosh.Token(woosh.NAME, 'def', 1088, 8, 1088, 11),
woosh.Token(woosh.NAME, 'close', 1088, 12, 1088, 17),
woosh.Token(woosh.OP, '(', 1088, 17, 1088, 18),
woosh.Token(woosh.NAME, 'self', 1088, 18, 1088, 22),
woosh.Token(woosh.OP, ')', 1088, 22, 1088, 23),
woosh.Token(woosh.OP, ':', 1088, 23, 1088, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1088, 24, 1089, 0),
woosh.Token(woosh.INDENT, '            ', 1089, 0, 1089, 12),
woosh.Token(woosh.NAME, 'self', 1089, 12, 1089, 16),
woosh.Token(woosh.OP, '.', 1089, 16, 1089, 17),
woosh.Token(woosh.NAME, '_remove_dll_directory', 1089, 17, 1089, 38),
woosh.Token(woosh.OP, '(', 1089, 38, 1089, 39),
woosh.Token(woosh.NAME, 'self', 1089, 39, 1089, 43),
woosh.Token(woosh.OP, '.', 1089, 43, 1089, 44),
woosh.Token(woosh.NAME, '_cookie', 1089, 44, 1089, 51),
woosh.Token(woosh.OP, ')', 1089, 51, 1089, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1089, 52, 1090, 0),
woosh.Token(woosh.NAME, 'self', 1090, 12, 1090, 16),
woosh.Token(woosh.OP, '.', 1090, 16, 1090, 17),
woosh.Token(woosh.NAME, 'path', 1090, 17, 1090, 21),
woosh.Token(woosh.OP, '=', 1090, 22, 1090, 23),
woosh.Token(woosh.NAME, 'None', 1090, 24, 1090, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1090, 28, 1091, 0),
woosh.Token(woosh.DEDENT, '        ', 1091, 0, 1091, 8),
woosh.Token(woosh.NAME, 'def', 1091, 8, 1091, 11),
woosh.Token(woosh.NAME, '__enter__', 1091, 12, 1091, 21),
woosh.Token(woosh.OP, '(', 1091, 21, 1091, 22),
woosh.Token(woosh.NAME, 'self', 1091, 22, 1091, 26),
woosh.Token(woosh.OP, ')', 1091, 26, 1091, 27),
woosh.Token(woosh.OP, ':', 1091, 27, 1091, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1091, 28, 1092, 0),
woosh.Token(woosh.INDENT, '            ', 1092, 0, 1092, 12),
woosh.Token(woosh.NAME, 'return', 1092, 12, 1092, 18),
woosh.Token(woosh.NAME, 'self', 1092, 19, 1092, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1092, 23, 1093, 0),
woosh.Token(woosh.DEDENT, '        ', 1093, 0, 1093, 8),
woosh.Token(woosh.NAME, 'def', 1093, 8, 1093, 11),
woosh.Token(woosh.NAME, '__exit__', 1093, 12, 1093, 20),
woosh.Token(woosh.OP, '(', 1093, 20, 1093, 21),
woosh.Token(woosh.NAME, 'self', 1093, 21, 1093, 25),
woosh.Token(woosh.OP, ',', 1093, 25, 1093, 26),
woosh.Token(woosh.OP, '*', 1093, 27, 1093, 28),
woosh.Token(woosh.NAME, 'args', 1093, 28, 1093, 32),
woosh.Token(woosh.OP, ')', 1093, 32, 1093, 33),
woosh.Token(woosh.OP, ':', 1093, 33, 1093, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1093, 34, 1094, 0),
woosh.Token(woosh.INDENT, '            ', 1094, 0, 1094, 12),
woosh.Token(woosh.NAME, 'self', 1094, 12, 1094, 16),
woosh.Token(woosh.OP, '.', 1094, 16, 1094, 17),
woosh.Token(woosh.NAME, 'close', 1094, 17, 1094, 22),
woosh.Token(woosh.OP, '(', 1094, 22, 1094, 23),
woosh.Token(woosh.OP, ')', 1094, 23, 1094, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1094, 24, 1095, 0),
woosh.Token(woosh.DEDENT, '        ', 1095, 0, 1095, 8),
woosh.Token(woosh.NAME, 'def', 1095, 8, 1095, 11),
woosh.Token(woosh.NAME, '__repr__', 1095, 12, 1095, 20),
woosh.Token(woosh.OP, '(', 1095, 20, 1095, 21),
woosh.Token(woosh.NAME, 'self', 1095, 21, 1095, 25),
woosh.Token(woosh.OP, ')', 1095, 25, 1095, 26),
woosh.Token(woosh.OP, ':', 1095, 26, 1095, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1095, 27, 1096, 0),
woosh.Token(woosh.INDENT, '            ', 1096, 0, 1096, 12),
woosh.Token(woosh.NAME, 'if', 1096, 12, 1096, 14),
woosh.Token(woosh.NAME, 'self', 1096, 15, 1096, 19),
woosh.Token(woosh.OP, '.', 1096, 19, 1096, 20),
woosh.Token(woosh.NAME, 'path', 1096, 20, 1096, 24),
woosh.Token(woosh.OP, ':', 1096, 24, 1096, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1096, 25, 1097, 0),
woosh.Token(woosh.INDENT, '                ', 1097, 0, 1097, 16),
woosh.Token(woosh.NAME, 'return', 1097, 16, 1097, 22),
woosh.Token(woosh.STRING, '"<AddedDllDirectory({!r})>"', 1097, 23, 1097, 50),
woosh.Token(woosh.OP, '.', 1097, 50, 1097, 51),
woosh.Token(woosh.NAME, 'format', 1097, 51, 1097, 57),
woosh.Token(woosh.OP, '(', 1097, 57, 1097, 58),
woosh.Token(woosh.NAME, 'self', 1097, 58, 1097, 62),
woosh.Token(woosh.OP, '.', 1097, 62, 1097, 63),
woosh.Token(woosh.NAME, 'path', 1097, 63, 1097, 67),
woosh.Token(woosh.OP, ')', 1097, 67, 1097, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1097, 68, 1098, 0),
woosh.Token(woosh.DEDENT, '            ', 1098, 0, 1098, 12),
woosh.Token(woosh.NAME, 'return', 1098, 12, 1098, 18),
woosh.Token(woosh.STRING, '"<AddedDllDirectory()>"', 1098, 19, 1098, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1098, 42, 1099, 0),
woosh.Token(woosh.DEDENT, '    ', 1100, 0, 1100, 4),
woosh.Token(woosh.DEDENT, '', 1100, 4, 1100, 4),
woosh.Token(woosh.NAME, 'def', 1100, 4, 1100, 7),
woosh.Token(woosh.NAME, 'add_dll_directory', 1100, 8, 1100, 25),
woosh.Token(woosh.OP, '(', 1100, 25, 1100, 26),
woosh.Token(woosh.NAME, 'path', 1100, 26, 1100, 30),
woosh.Token(woosh.OP, ')', 1100, 30, 1100, 31),
woosh.Token(woosh.OP, ':', 1100, 31, 1100, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1100, 32, 1101, 0),
woosh.Token(woosh.INDENT, '        ', 1101, 0, 1101, 8),
woosh.Token(woosh.STRING, '"""Add a path to the DLL search path.\r\n\r\n        This search path is used when resolving dependencies for imported\r\n        extension modules (the module itself is resolved through sys.path),\r\n        and also by ctypes.\r\n\r\n        Remove the directory by calling close() on the returned object or\r\n        using it in a with statement.\r\n        """', 1101, 8, 1109, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1109, 11, 1110, 0),
woosh.Token(woosh.NAME, 'import', 1110, 8, 1110, 14),
woosh.Token(woosh.NAME, 'nt', 1110, 15, 1110, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1110, 17, 1111, 0),
woosh.Token(woosh.NAME, 'cookie', 1111, 8, 1111, 14),
woosh.Token(woosh.OP, '=', 1111, 15, 1111, 16),
woosh.Token(woosh.NAME, 'nt', 1111, 17, 1111, 19),
woosh.Token(woosh.OP, '.', 1111, 19, 1111, 20),
woosh.Token(woosh.NAME, '_add_dll_directory', 1111, 20, 1111, 38),
woosh.Token(woosh.OP, '(', 1111, 38, 1111, 39),
woosh.Token(woosh.NAME, 'path', 1111, 39, 1111, 43),
woosh.Token(woosh.OP, ')', 1111, 43, 1111, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1111, 44, 1112, 0),
woosh.Token(woosh.NAME, 'return', 1112, 8, 1112, 14),
woosh.Token(woosh.NAME, '_AddedDllDirectory', 1112, 15, 1112, 33),
woosh.Token(woosh.OP, '(', 1112, 33, 1112, 34),
woosh.Token(woosh.NAME, 'path', 1113, 12, 1113, 16),
woosh.Token(woosh.OP, ',', 1113, 16, 1113, 17),
woosh.Token(woosh.NAME, 'cookie', 1114, 12, 1114, 18),
woosh.Token(woosh.OP, ',', 1114, 18, 1114, 19),
woosh.Token(woosh.NAME, 'nt', 1115, 12, 1115, 14),
woosh.Token(woosh.OP, '.', 1115, 14, 1115, 15),
woosh.Token(woosh.NAME, '_remove_dll_directory', 1115, 15, 1115, 36),
woosh.Token(woosh.OP, ')', 1116, 8, 1116, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1116, 9, 1117, 0),
woosh.Token(woosh.DEDENT, '', 1117, 0, 1117, 0),
woosh.Token(woosh.DEDENT, '', 1117, 0, 1117, 0),
woosh.Token(woosh.EOF, '', 1117, 0, 1117, 0),
]
