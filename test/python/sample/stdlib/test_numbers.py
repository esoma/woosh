
# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/numbers.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.COMMENT, '# Copyright 2007 Google, Inc. All Rights Reserved.', 1, 0, 1, 50),
woosh.Token(woosh.COMMENT, '# Licensed to PSF under a Contributor Agreement.', 2, 0, 2, 48),
woosh.Token(woosh.STRING, '"""Abstract Base Classes (ABCs) for numbers, according to PEP 3141.\r\n\r\nTODO: Fill out more detailed documentation on the operators."""', 4, 0, 6, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 6, 63, 7, 0),
woosh.Token(woosh.NAME, 'from', 8, 0, 8, 4),
woosh.Token(woosh.NAME, 'abc', 8, 5, 8, 8),
woosh.Token(woosh.NAME, 'import', 8, 9, 8, 15),
woosh.Token(woosh.NAME, 'ABCMeta', 8, 16, 8, 23),
woosh.Token(woosh.OP, ',', 8, 23, 8, 24),
woosh.Token(woosh.NAME, 'abstractmethod', 8, 25, 8, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 8, 39, 9, 0),
woosh.Token(woosh.NAME, '__all__', 10, 0, 10, 7),
woosh.Token(woosh.OP, '=', 10, 8, 10, 9),
woosh.Token(woosh.OP, '[', 10, 10, 10, 11),
woosh.Token(woosh.STRING, '"Number"', 10, 11, 10, 19),
woosh.Token(woosh.OP, ',', 10, 19, 10, 20),
woosh.Token(woosh.STRING, '"Complex"', 10, 21, 10, 30),
woosh.Token(woosh.OP, ',', 10, 30, 10, 31),
woosh.Token(woosh.STRING, '"Real"', 10, 32, 10, 38),
woosh.Token(woosh.OP, ',', 10, 38, 10, 39),
woosh.Token(woosh.STRING, '"Rational"', 10, 40, 10, 50),
woosh.Token(woosh.OP, ',', 10, 50, 10, 51),
woosh.Token(woosh.STRING, '"Integral"', 10, 52, 10, 62),
woosh.Token(woosh.OP, ']', 10, 62, 10, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 10, 63, 11, 0),
woosh.Token(woosh.NAME, 'class', 12, 0, 12, 5),
woosh.Token(woosh.NAME, 'Number', 12, 6, 12, 12),
woosh.Token(woosh.OP, '(', 12, 12, 12, 13),
woosh.Token(woosh.NAME, 'metaclass', 12, 13, 12, 22),
woosh.Token(woosh.OP, '=', 12, 22, 12, 23),
woosh.Token(woosh.NAME, 'ABCMeta', 12, 23, 12, 30),
woosh.Token(woosh.OP, ')', 12, 30, 12, 31),
woosh.Token(woosh.OP, ':', 12, 31, 12, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 12, 32, 13, 0),
woosh.Token(woosh.INDENT, '    ', 13, 0, 13, 4),
woosh.Token(woosh.STRING, '"""All numbers inherit from this class.\r\n\r\n    If you just want to check if an argument x is a number, without\r\n    caring what kind, use isinstance(x, Number).\r\n    """', 13, 4, 17, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 17, 7, 18, 0),
woosh.Token(woosh.NAME, '__slots__', 18, 4, 18, 13),
woosh.Token(woosh.OP, '=', 18, 14, 18, 15),
woosh.Token(woosh.OP, '(', 18, 16, 18, 17),
woosh.Token(woosh.OP, ')', 18, 17, 18, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 18, 18, 19, 0),
woosh.Token(woosh.COMMENT, '# Concrete numeric types must provide their own hash implementation', 20, 4, 20, 71),
woosh.Token(woosh.NAME, '__hash__', 21, 4, 21, 12),
woosh.Token(woosh.OP, '=', 21, 13, 21, 14),
woosh.Token(woosh.NAME, 'None', 21, 15, 21, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 19, 22, 0),
woosh.Token(woosh.COMMENT, '## Notes on Decimal', 24, 0, 24, 19),
woosh.Token(woosh.COMMENT, '## ----------------', 25, 0, 25, 19),
woosh.Token(woosh.COMMENT, '## Decimal has all of the methods specified by the Real abc, but it should', 26, 0, 26, 74),
woosh.Token(woosh.COMMENT, '## not be registered as a Real because decimals do not interoperate with', 27, 0, 27, 72),
woosh.Token(woosh.COMMENT, "## binary floats (i.e.  Decimal('3.14') + 2.71828 is undefined).  But,", 28, 0, 28, 70),
woosh.Token(woosh.COMMENT, '## abstract reals are expected to interoperate (i.e. R1 + R2 should be', 29, 0, 29, 70),
woosh.Token(woosh.COMMENT, '## expected to work if R1 and R2 are both Reals).', 30, 0, 30, 49),
woosh.Token(woosh.DEDENT, '', 32, 0, 32, 0),
woosh.Token(woosh.NAME, 'class', 32, 0, 32, 5),
woosh.Token(woosh.NAME, 'Complex', 32, 6, 32, 13),
woosh.Token(woosh.OP, '(', 32, 13, 32, 14),
woosh.Token(woosh.NAME, 'Number', 32, 14, 32, 20),
woosh.Token(woosh.OP, ')', 32, 20, 32, 21),
woosh.Token(woosh.OP, ':', 32, 21, 32, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 32, 22, 33, 0),
woosh.Token(woosh.INDENT, '    ', 33, 0, 33, 4),
woosh.Token(woosh.STRING, '"""Complex defines the operations that work on the builtin complex type.\r\n\r\n    In short, those are: a conversion to complex, .real, .imag, +, -,\r\n    *, /, abs(), .conjugate, ==, and !=.\r\n\r\n    If it is given heterogeneous arguments, and doesn\'t have special\r\n    knowledge about them, it should fall back to the builtin complex\r\n    type as described below.\r\n    """', 33, 4, 41, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 41, 7, 42, 0),
woosh.Token(woosh.NAME, '__slots__', 43, 4, 43, 13),
woosh.Token(woosh.OP, '=', 43, 14, 43, 15),
woosh.Token(woosh.OP, '(', 43, 16, 43, 17),
woosh.Token(woosh.OP, ')', 43, 17, 43, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 43, 18, 44, 0),
woosh.Token(woosh.OP, '@', 45, 4, 45, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 45, 5, 45, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 45, 19, 46, 0),
woosh.Token(woosh.NAME, 'def', 46, 4, 46, 7),
woosh.Token(woosh.NAME, '__complex__', 46, 8, 46, 19),
woosh.Token(woosh.OP, '(', 46, 19, 46, 20),
woosh.Token(woosh.NAME, 'self', 46, 20, 46, 24),
woosh.Token(woosh.OP, ')', 46, 24, 46, 25),
woosh.Token(woosh.OP, ':', 46, 25, 46, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 26, 47, 0),
woosh.Token(woosh.INDENT, '        ', 47, 0, 47, 8),
woosh.Token(woosh.STRING, '"""Return a builtin complex instance. Called for complex(self)."""', 47, 8, 47, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 74, 48, 0),
woosh.Token(woosh.DEDENT, '    ', 49, 0, 49, 4),
woosh.Token(woosh.NAME, 'def', 49, 4, 49, 7),
woosh.Token(woosh.NAME, '__bool__', 49, 8, 49, 16),
woosh.Token(woosh.OP, '(', 49, 16, 49, 17),
woosh.Token(woosh.NAME, 'self', 49, 17, 49, 21),
woosh.Token(woosh.OP, ')', 49, 21, 49, 22),
woosh.Token(woosh.OP, ':', 49, 22, 49, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 49, 23, 50, 0),
woosh.Token(woosh.INDENT, '        ', 50, 0, 50, 8),
woosh.Token(woosh.STRING, '"""True if self != 0. Called for bool(self)."""', 50, 8, 50, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 50, 55, 51, 0),
woosh.Token(woosh.NAME, 'return', 51, 8, 51, 14),
woosh.Token(woosh.NAME, 'self', 51, 15, 51, 19),
woosh.Token(woosh.OP, '!=', 51, 20, 51, 22),
woosh.Token(woosh.NUMBER, '0', 51, 23, 51, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 51, 24, 52, 0),
woosh.Token(woosh.DEDENT, '    ', 53, 0, 53, 4),
woosh.Token(woosh.OP, '@', 53, 4, 53, 5),
woosh.Token(woosh.NAME, 'property', 53, 5, 53, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 13, 54, 0),
woosh.Token(woosh.OP, '@', 54, 4, 54, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 54, 5, 54, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 19, 55, 0),
woosh.Token(woosh.NAME, 'def', 55, 4, 55, 7),
woosh.Token(woosh.NAME, 'real', 55, 8, 55, 12),
woosh.Token(woosh.OP, '(', 55, 12, 55, 13),
woosh.Token(woosh.NAME, 'self', 55, 13, 55, 17),
woosh.Token(woosh.OP, ')', 55, 17, 55, 18),
woosh.Token(woosh.OP, ':', 55, 18, 55, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 19, 56, 0),
woosh.Token(woosh.INDENT, '        ', 56, 0, 56, 8),
woosh.Token(woosh.STRING, '"""Retrieve the real component of this number.\r\n\r\n        This should subclass Real.\r\n        """', 56, 8, 59, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 11, 60, 0),
woosh.Token(woosh.NAME, 'raise', 60, 8, 60, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 60, 14, 60, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 33, 61, 0),
woosh.Token(woosh.DEDENT, '    ', 62, 0, 62, 4),
woosh.Token(woosh.OP, '@', 62, 4, 62, 5),
woosh.Token(woosh.NAME, 'property', 62, 5, 62, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 62, 13, 63, 0),
woosh.Token(woosh.OP, '@', 63, 4, 63, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 63, 5, 63, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 63, 19, 64, 0),
woosh.Token(woosh.NAME, 'def', 64, 4, 64, 7),
woosh.Token(woosh.NAME, 'imag', 64, 8, 64, 12),
woosh.Token(woosh.OP, '(', 64, 12, 64, 13),
woosh.Token(woosh.NAME, 'self', 64, 13, 64, 17),
woosh.Token(woosh.OP, ')', 64, 17, 64, 18),
woosh.Token(woosh.OP, ':', 64, 18, 64, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 64, 19, 65, 0),
woosh.Token(woosh.INDENT, '        ', 65, 0, 65, 8),
woosh.Token(woosh.STRING, '"""Retrieve the imaginary component of this number.\r\n\r\n        This should subclass Real.\r\n        """', 65, 8, 68, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 68, 11, 69, 0),
woosh.Token(woosh.NAME, 'raise', 69, 8, 69, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 69, 14, 69, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 33, 70, 0),
woosh.Token(woosh.DEDENT, '    ', 71, 0, 71, 4),
woosh.Token(woosh.OP, '@', 71, 4, 71, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 71, 5, 71, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 19, 72, 0),
woosh.Token(woosh.NAME, 'def', 72, 4, 72, 7),
woosh.Token(woosh.NAME, '__add__', 72, 8, 72, 15),
woosh.Token(woosh.OP, '(', 72, 15, 72, 16),
woosh.Token(woosh.NAME, 'self', 72, 16, 72, 20),
woosh.Token(woosh.OP, ',', 72, 20, 72, 21),
woosh.Token(woosh.NAME, 'other', 72, 22, 72, 27),
woosh.Token(woosh.OP, ')', 72, 27, 72, 28),
woosh.Token(woosh.OP, ':', 72, 28, 72, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 29, 73, 0),
woosh.Token(woosh.INDENT, '        ', 73, 0, 73, 8),
woosh.Token(woosh.STRING, '"""self + other"""', 73, 8, 73, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 26, 74, 0),
woosh.Token(woosh.NAME, 'raise', 74, 8, 74, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 74, 14, 74, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 33, 75, 0),
woosh.Token(woosh.DEDENT, '    ', 76, 0, 76, 4),
woosh.Token(woosh.OP, '@', 76, 4, 76, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 76, 5, 76, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 19, 77, 0),
woosh.Token(woosh.NAME, 'def', 77, 4, 77, 7),
woosh.Token(woosh.NAME, '__radd__', 77, 8, 77, 16),
woosh.Token(woosh.OP, '(', 77, 16, 77, 17),
woosh.Token(woosh.NAME, 'self', 77, 17, 77, 21),
woosh.Token(woosh.OP, ',', 77, 21, 77, 22),
woosh.Token(woosh.NAME, 'other', 77, 23, 77, 28),
woosh.Token(woosh.OP, ')', 77, 28, 77, 29),
woosh.Token(woosh.OP, ':', 77, 29, 77, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 30, 78, 0),
woosh.Token(woosh.INDENT, '        ', 78, 0, 78, 8),
woosh.Token(woosh.STRING, '"""other + self"""', 78, 8, 78, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 26, 79, 0),
woosh.Token(woosh.NAME, 'raise', 79, 8, 79, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 79, 14, 79, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 79, 33, 80, 0),
woosh.Token(woosh.DEDENT, '    ', 81, 0, 81, 4),
woosh.Token(woosh.OP, '@', 81, 4, 81, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 81, 5, 81, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 81, 19, 82, 0),
woosh.Token(woosh.NAME, 'def', 82, 4, 82, 7),
woosh.Token(woosh.NAME, '__neg__', 82, 8, 82, 15),
woosh.Token(woosh.OP, '(', 82, 15, 82, 16),
woosh.Token(woosh.NAME, 'self', 82, 16, 82, 20),
woosh.Token(woosh.OP, ')', 82, 20, 82, 21),
woosh.Token(woosh.OP, ':', 82, 21, 82, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 82, 22, 83, 0),
woosh.Token(woosh.INDENT, '        ', 83, 0, 83, 8),
woosh.Token(woosh.STRING, '"""-self"""', 83, 8, 83, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 83, 19, 84, 0),
woosh.Token(woosh.NAME, 'raise', 84, 8, 84, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 84, 14, 84, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 84, 33, 85, 0),
woosh.Token(woosh.DEDENT, '    ', 86, 0, 86, 4),
woosh.Token(woosh.OP, '@', 86, 4, 86, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 86, 5, 86, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 86, 19, 87, 0),
woosh.Token(woosh.NAME, 'def', 87, 4, 87, 7),
woosh.Token(woosh.NAME, '__pos__', 87, 8, 87, 15),
woosh.Token(woosh.OP, '(', 87, 15, 87, 16),
woosh.Token(woosh.NAME, 'self', 87, 16, 87, 20),
woosh.Token(woosh.OP, ')', 87, 20, 87, 21),
woosh.Token(woosh.OP, ':', 87, 21, 87, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 22, 88, 0),
woosh.Token(woosh.INDENT, '        ', 88, 0, 88, 8),
woosh.Token(woosh.STRING, '"""+self"""', 88, 8, 88, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 19, 89, 0),
woosh.Token(woosh.NAME, 'raise', 89, 8, 89, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 89, 14, 89, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 89, 33, 90, 0),
woosh.Token(woosh.DEDENT, '    ', 91, 0, 91, 4),
woosh.Token(woosh.NAME, 'def', 91, 4, 91, 7),
woosh.Token(woosh.NAME, '__sub__', 91, 8, 91, 15),
woosh.Token(woosh.OP, '(', 91, 15, 91, 16),
woosh.Token(woosh.NAME, 'self', 91, 16, 91, 20),
woosh.Token(woosh.OP, ',', 91, 20, 91, 21),
woosh.Token(woosh.NAME, 'other', 91, 22, 91, 27),
woosh.Token(woosh.OP, ')', 91, 27, 91, 28),
woosh.Token(woosh.OP, ':', 91, 28, 91, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 91, 29, 92, 0),
woosh.Token(woosh.INDENT, '        ', 92, 0, 92, 8),
woosh.Token(woosh.STRING, '"""self - other"""', 92, 8, 92, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 26, 93, 0),
woosh.Token(woosh.NAME, 'return', 93, 8, 93, 14),
woosh.Token(woosh.NAME, 'self', 93, 15, 93, 19),
woosh.Token(woosh.OP, '+', 93, 20, 93, 21),
woosh.Token(woosh.OP, '-', 93, 22, 93, 23),
woosh.Token(woosh.NAME, 'other', 93, 23, 93, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 28, 94, 0),
woosh.Token(woosh.DEDENT, '    ', 95, 0, 95, 4),
woosh.Token(woosh.NAME, 'def', 95, 4, 95, 7),
woosh.Token(woosh.NAME, '__rsub__', 95, 8, 95, 16),
woosh.Token(woosh.OP, '(', 95, 16, 95, 17),
woosh.Token(woosh.NAME, 'self', 95, 17, 95, 21),
woosh.Token(woosh.OP, ',', 95, 21, 95, 22),
woosh.Token(woosh.NAME, 'other', 95, 23, 95, 28),
woosh.Token(woosh.OP, ')', 95, 28, 95, 29),
woosh.Token(woosh.OP, ':', 95, 29, 95, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 30, 96, 0),
woosh.Token(woosh.INDENT, '        ', 96, 0, 96, 8),
woosh.Token(woosh.STRING, '"""other - self"""', 96, 8, 96, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 26, 97, 0),
woosh.Token(woosh.NAME, 'return', 97, 8, 97, 14),
woosh.Token(woosh.OP, '-', 97, 15, 97, 16),
woosh.Token(woosh.NAME, 'self', 97, 16, 97, 20),
woosh.Token(woosh.OP, '+', 97, 21, 97, 22),
woosh.Token(woosh.NAME, 'other', 97, 23, 97, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 28, 98, 0),
woosh.Token(woosh.DEDENT, '    ', 99, 0, 99, 4),
woosh.Token(woosh.OP, '@', 99, 4, 99, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 99, 5, 99, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 19, 100, 0),
woosh.Token(woosh.NAME, 'def', 100, 4, 100, 7),
woosh.Token(woosh.NAME, '__mul__', 100, 8, 100, 15),
woosh.Token(woosh.OP, '(', 100, 15, 100, 16),
woosh.Token(woosh.NAME, 'self', 100, 16, 100, 20),
woosh.Token(woosh.OP, ',', 100, 20, 100, 21),
woosh.Token(woosh.NAME, 'other', 100, 22, 100, 27),
woosh.Token(woosh.OP, ')', 100, 27, 100, 28),
woosh.Token(woosh.OP, ':', 100, 28, 100, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 29, 101, 0),
woosh.Token(woosh.INDENT, '        ', 101, 0, 101, 8),
woosh.Token(woosh.STRING, '"""self * other"""', 101, 8, 101, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 101, 26, 102, 0),
woosh.Token(woosh.NAME, 'raise', 102, 8, 102, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 102, 14, 102, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 33, 103, 0),
woosh.Token(woosh.DEDENT, '    ', 104, 0, 104, 4),
woosh.Token(woosh.OP, '@', 104, 4, 104, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 104, 5, 104, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 19, 105, 0),
woosh.Token(woosh.NAME, 'def', 105, 4, 105, 7),
woosh.Token(woosh.NAME, '__rmul__', 105, 8, 105, 16),
woosh.Token(woosh.OP, '(', 105, 16, 105, 17),
woosh.Token(woosh.NAME, 'self', 105, 17, 105, 21),
woosh.Token(woosh.OP, ',', 105, 21, 105, 22),
woosh.Token(woosh.NAME, 'other', 105, 23, 105, 28),
woosh.Token(woosh.OP, ')', 105, 28, 105, 29),
woosh.Token(woosh.OP, ':', 105, 29, 105, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 30, 106, 0),
woosh.Token(woosh.INDENT, '        ', 106, 0, 106, 8),
woosh.Token(woosh.STRING, '"""other * self"""', 106, 8, 106, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 26, 107, 0),
woosh.Token(woosh.NAME, 'raise', 107, 8, 107, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 107, 14, 107, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 33, 108, 0),
woosh.Token(woosh.DEDENT, '    ', 109, 0, 109, 4),
woosh.Token(woosh.OP, '@', 109, 4, 109, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 109, 5, 109, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 19, 110, 0),
woosh.Token(woosh.NAME, 'def', 110, 4, 110, 7),
woosh.Token(woosh.NAME, '__truediv__', 110, 8, 110, 19),
woosh.Token(woosh.OP, '(', 110, 19, 110, 20),
woosh.Token(woosh.NAME, 'self', 110, 20, 110, 24),
woosh.Token(woosh.OP, ',', 110, 24, 110, 25),
woosh.Token(woosh.NAME, 'other', 110, 26, 110, 31),
woosh.Token(woosh.OP, ')', 110, 31, 110, 32),
woosh.Token(woosh.OP, ':', 110, 32, 110, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 33, 111, 0),
woosh.Token(woosh.INDENT, '        ', 111, 0, 111, 8),
woosh.Token(woosh.STRING, '"""self / other: Should promote to float when necessary."""', 111, 8, 111, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 67, 112, 0),
woosh.Token(woosh.NAME, 'raise', 112, 8, 112, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 112, 14, 112, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 33, 113, 0),
woosh.Token(woosh.DEDENT, '    ', 114, 0, 114, 4),
woosh.Token(woosh.OP, '@', 114, 4, 114, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 114, 5, 114, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 19, 115, 0),
woosh.Token(woosh.NAME, 'def', 115, 4, 115, 7),
woosh.Token(woosh.NAME, '__rtruediv__', 115, 8, 115, 20),
woosh.Token(woosh.OP, '(', 115, 20, 115, 21),
woosh.Token(woosh.NAME, 'self', 115, 21, 115, 25),
woosh.Token(woosh.OP, ',', 115, 25, 115, 26),
woosh.Token(woosh.NAME, 'other', 115, 27, 115, 32),
woosh.Token(woosh.OP, ')', 115, 32, 115, 33),
woosh.Token(woosh.OP, ':', 115, 33, 115, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 34, 116, 0),
woosh.Token(woosh.INDENT, '        ', 116, 0, 116, 8),
woosh.Token(woosh.STRING, '"""other / self"""', 116, 8, 116, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 26, 117, 0),
woosh.Token(woosh.NAME, 'raise', 117, 8, 117, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 117, 14, 117, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 33, 118, 0),
woosh.Token(woosh.DEDENT, '    ', 119, 0, 119, 4),
woosh.Token(woosh.OP, '@', 119, 4, 119, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 119, 5, 119, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 19, 120, 0),
woosh.Token(woosh.NAME, 'def', 120, 4, 120, 7),
woosh.Token(woosh.NAME, '__pow__', 120, 8, 120, 15),
woosh.Token(woosh.OP, '(', 120, 15, 120, 16),
woosh.Token(woosh.NAME, 'self', 120, 16, 120, 20),
woosh.Token(woosh.OP, ',', 120, 20, 120, 21),
woosh.Token(woosh.NAME, 'exponent', 120, 22, 120, 30),
woosh.Token(woosh.OP, ')', 120, 30, 120, 31),
woosh.Token(woosh.OP, ':', 120, 31, 120, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 32, 121, 0),
woosh.Token(woosh.INDENT, '        ', 121, 0, 121, 8),
woosh.Token(woosh.STRING, '"""self**exponent; should promote to float or complex when necessary."""', 121, 8, 121, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 80, 122, 0),
woosh.Token(woosh.NAME, 'raise', 122, 8, 122, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 122, 14, 122, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 33, 123, 0),
woosh.Token(woosh.DEDENT, '    ', 124, 0, 124, 4),
woosh.Token(woosh.OP, '@', 124, 4, 124, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 124, 5, 124, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 19, 125, 0),
woosh.Token(woosh.NAME, 'def', 125, 4, 125, 7),
woosh.Token(woosh.NAME, '__rpow__', 125, 8, 125, 16),
woosh.Token(woosh.OP, '(', 125, 16, 125, 17),
woosh.Token(woosh.NAME, 'self', 125, 17, 125, 21),
woosh.Token(woosh.OP, ',', 125, 21, 125, 22),
woosh.Token(woosh.NAME, 'base', 125, 23, 125, 27),
woosh.Token(woosh.OP, ')', 125, 27, 125, 28),
woosh.Token(woosh.OP, ':', 125, 28, 125, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 29, 126, 0),
woosh.Token(woosh.INDENT, '        ', 126, 0, 126, 8),
woosh.Token(woosh.STRING, '"""base ** self"""', 126, 8, 126, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 26, 127, 0),
woosh.Token(woosh.NAME, 'raise', 127, 8, 127, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 127, 14, 127, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 33, 128, 0),
woosh.Token(woosh.DEDENT, '    ', 129, 0, 129, 4),
woosh.Token(woosh.OP, '@', 129, 4, 129, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 129, 5, 129, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 19, 130, 0),
woosh.Token(woosh.NAME, 'def', 130, 4, 130, 7),
woosh.Token(woosh.NAME, '__abs__', 130, 8, 130, 15),
woosh.Token(woosh.OP, '(', 130, 15, 130, 16),
woosh.Token(woosh.NAME, 'self', 130, 16, 130, 20),
woosh.Token(woosh.OP, ')', 130, 20, 130, 21),
woosh.Token(woosh.OP, ':', 130, 21, 130, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 22, 131, 0),
woosh.Token(woosh.INDENT, '        ', 131, 0, 131, 8),
woosh.Token(woosh.STRING, '"""Returns the Real distance from 0. Called for abs(self)."""', 131, 8, 131, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 69, 132, 0),
woosh.Token(woosh.NAME, 'raise', 132, 8, 132, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 132, 14, 132, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 33, 133, 0),
woosh.Token(woosh.DEDENT, '    ', 134, 0, 134, 4),
woosh.Token(woosh.OP, '@', 134, 4, 134, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 134, 5, 134, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 19, 135, 0),
woosh.Token(woosh.NAME, 'def', 135, 4, 135, 7),
woosh.Token(woosh.NAME, 'conjugate', 135, 8, 135, 17),
woosh.Token(woosh.OP, '(', 135, 17, 135, 18),
woosh.Token(woosh.NAME, 'self', 135, 18, 135, 22),
woosh.Token(woosh.OP, ')', 135, 22, 135, 23),
woosh.Token(woosh.OP, ':', 135, 23, 135, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 24, 136, 0),
woosh.Token(woosh.INDENT, '        ', 136, 0, 136, 8),
woosh.Token(woosh.STRING, '"""(x+y*i).conjugate() returns (x-y*i)."""', 136, 8, 136, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 50, 137, 0),
woosh.Token(woosh.NAME, 'raise', 137, 8, 137, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 137, 14, 137, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 33, 138, 0),
woosh.Token(woosh.DEDENT, '    ', 139, 0, 139, 4),
woosh.Token(woosh.OP, '@', 139, 4, 139, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 139, 5, 139, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 19, 140, 0),
woosh.Token(woosh.NAME, 'def', 140, 4, 140, 7),
woosh.Token(woosh.NAME, '__eq__', 140, 8, 140, 14),
woosh.Token(woosh.OP, '(', 140, 14, 140, 15),
woosh.Token(woosh.NAME, 'self', 140, 15, 140, 19),
woosh.Token(woosh.OP, ',', 140, 19, 140, 20),
woosh.Token(woosh.NAME, 'other', 140, 21, 140, 26),
woosh.Token(woosh.OP, ')', 140, 26, 140, 27),
woosh.Token(woosh.OP, ':', 140, 27, 140, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 28, 141, 0),
woosh.Token(woosh.INDENT, '        ', 141, 0, 141, 8),
woosh.Token(woosh.STRING, '"""self == other"""', 141, 8, 141, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 27, 142, 0),
woosh.Token(woosh.NAME, 'raise', 142, 8, 142, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 142, 14, 142, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 33, 143, 0),
woosh.Token(woosh.DEDENT, '', 144, 0, 144, 0),
woosh.Token(woosh.DEDENT, '', 144, 0, 144, 0),
woosh.Token(woosh.NAME, 'Complex', 144, 0, 144, 7),
woosh.Token(woosh.OP, '.', 144, 7, 144, 8),
woosh.Token(woosh.NAME, 'register', 144, 8, 144, 16),
woosh.Token(woosh.OP, '(', 144, 16, 144, 17),
woosh.Token(woosh.NAME, 'complex', 144, 17, 144, 24),
woosh.Token(woosh.OP, ')', 144, 24, 144, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 25, 145, 0),
woosh.Token(woosh.NAME, 'class', 147, 0, 147, 5),
woosh.Token(woosh.NAME, 'Real', 147, 6, 147, 10),
woosh.Token(woosh.OP, '(', 147, 10, 147, 11),
woosh.Token(woosh.NAME, 'Complex', 147, 11, 147, 18),
woosh.Token(woosh.OP, ')', 147, 18, 147, 19),
woosh.Token(woosh.OP, ':', 147, 19, 147, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 20, 148, 0),
woosh.Token(woosh.INDENT, '    ', 148, 0, 148, 4),
woosh.Token(woosh.STRING, '"""To Complex, Real adds the operations that work on real numbers.\r\n\r\n    In short, those are: a conversion to float, trunc(), divmod,\r\n    is_integer, %, <, <=, >, and >=.\r\n\r\n    Real also provides defaults for the derived operations.\r\n    """', 148, 4, 154, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 7, 155, 0),
woosh.Token(woosh.NAME, '__slots__', 156, 4, 156, 13),
woosh.Token(woosh.OP, '=', 156, 14, 156, 15),
woosh.Token(woosh.OP, '(', 156, 16, 156, 17),
woosh.Token(woosh.OP, ')', 156, 17, 156, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 18, 157, 0),
woosh.Token(woosh.OP, '@', 158, 4, 158, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 158, 5, 158, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 19, 159, 0),
woosh.Token(woosh.NAME, 'def', 159, 4, 159, 7),
woosh.Token(woosh.NAME, '__float__', 159, 8, 159, 17),
woosh.Token(woosh.OP, '(', 159, 17, 159, 18),
woosh.Token(woosh.NAME, 'self', 159, 18, 159, 22),
woosh.Token(woosh.OP, ')', 159, 22, 159, 23),
woosh.Token(woosh.OP, ':', 159, 23, 159, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 159, 24, 160, 0),
woosh.Token(woosh.INDENT, '        ', 160, 0, 160, 8),
woosh.Token(woosh.STRING, '"""Any Real can be converted to a native float object.\r\n\r\n        Called for float(self)."""', 160, 8, 162, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 34, 163, 0),
woosh.Token(woosh.NAME, 'raise', 163, 8, 163, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 163, 14, 163, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 33, 164, 0),
woosh.Token(woosh.DEDENT, '    ', 165, 0, 165, 4),
woosh.Token(woosh.OP, '@', 165, 4, 165, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 165, 5, 165, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 19, 166, 0),
woosh.Token(woosh.NAME, 'def', 166, 4, 166, 7),
woosh.Token(woosh.NAME, '__trunc__', 166, 8, 166, 17),
woosh.Token(woosh.OP, '(', 166, 17, 166, 18),
woosh.Token(woosh.NAME, 'self', 166, 18, 166, 22),
woosh.Token(woosh.OP, ')', 166, 22, 166, 23),
woosh.Token(woosh.OP, ':', 166, 23, 166, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 24, 167, 0),
woosh.Token(woosh.INDENT, '        ', 167, 0, 167, 8),
woosh.Token(woosh.STRING, '"""trunc(self): Truncates self to an Integral.\r\n\r\n        Returns an Integral i such that:\r\n          * i>0 iff self>0;\r\n          * abs(i) <= abs(self);\r\n          * for any Integral j satisfying the first two conditions,\r\n            abs(i) >= abs(j) [i.e. i has "maximal" abs among those].\r\n        i.e. "truncate towards 0".\r\n        """', 167, 8, 175, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 11, 176, 0),
woosh.Token(woosh.NAME, 'raise', 176, 8, 176, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 176, 14, 176, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 33, 177, 0),
woosh.Token(woosh.DEDENT, '    ', 178, 0, 178, 4),
woosh.Token(woosh.OP, '@', 178, 4, 178, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 178, 5, 178, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 19, 179, 0),
woosh.Token(woosh.NAME, 'def', 179, 4, 179, 7),
woosh.Token(woosh.NAME, '__floor__', 179, 8, 179, 17),
woosh.Token(woosh.OP, '(', 179, 17, 179, 18),
woosh.Token(woosh.NAME, 'self', 179, 18, 179, 22),
woosh.Token(woosh.OP, ')', 179, 22, 179, 23),
woosh.Token(woosh.OP, ':', 179, 23, 179, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 24, 180, 0),
woosh.Token(woosh.INDENT, '        ', 180, 0, 180, 8),
woosh.Token(woosh.STRING, '"""Finds the greatest Integral <= self."""', 180, 8, 180, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 50, 181, 0),
woosh.Token(woosh.NAME, 'raise', 181, 8, 181, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 181, 14, 181, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 33, 182, 0),
woosh.Token(woosh.DEDENT, '    ', 183, 0, 183, 4),
woosh.Token(woosh.OP, '@', 183, 4, 183, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 183, 5, 183, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 19, 184, 0),
woosh.Token(woosh.NAME, 'def', 184, 4, 184, 7),
woosh.Token(woosh.NAME, '__ceil__', 184, 8, 184, 16),
woosh.Token(woosh.OP, '(', 184, 16, 184, 17),
woosh.Token(woosh.NAME, 'self', 184, 17, 184, 21),
woosh.Token(woosh.OP, ')', 184, 21, 184, 22),
woosh.Token(woosh.OP, ':', 184, 22, 184, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 23, 185, 0),
woosh.Token(woosh.INDENT, '        ', 185, 0, 185, 8),
woosh.Token(woosh.STRING, '"""Finds the least Integral >= self."""', 185, 8, 185, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 47, 186, 0),
woosh.Token(woosh.NAME, 'raise', 186, 8, 186, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 186, 14, 186, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 33, 187, 0),
woosh.Token(woosh.DEDENT, '    ', 188, 0, 188, 4),
woosh.Token(woosh.OP, '@', 188, 4, 188, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 188, 5, 188, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 19, 189, 0),
woosh.Token(woosh.NAME, 'def', 189, 4, 189, 7),
woosh.Token(woosh.NAME, '__round__', 189, 8, 189, 17),
woosh.Token(woosh.OP, '(', 189, 17, 189, 18),
woosh.Token(woosh.NAME, 'self', 189, 18, 189, 22),
woosh.Token(woosh.OP, ',', 189, 22, 189, 23),
woosh.Token(woosh.NAME, 'ndigits', 189, 24, 189, 31),
woosh.Token(woosh.OP, '=', 189, 31, 189, 32),
woosh.Token(woosh.NAME, 'None', 189, 32, 189, 36),
woosh.Token(woosh.OP, ')', 189, 36, 189, 37),
woosh.Token(woosh.OP, ':', 189, 37, 189, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 189, 38, 190, 0),
woosh.Token(woosh.INDENT, '        ', 190, 0, 190, 8),
woosh.Token(woosh.STRING, '"""Rounds self to ndigits decimal places, defaulting to 0.\r\n\r\n        If ndigits is omitted or None, returns an Integral, otherwise\r\n        returns a Real. Rounds half toward even.\r\n        """', 190, 8, 194, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 11, 195, 0),
woosh.Token(woosh.NAME, 'raise', 195, 8, 195, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 195, 14, 195, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 33, 196, 0),
woosh.Token(woosh.DEDENT, '    ', 197, 0, 197, 4),
woosh.Token(woosh.NAME, 'def', 197, 4, 197, 7),
woosh.Token(woosh.NAME, '__divmod__', 197, 8, 197, 18),
woosh.Token(woosh.OP, '(', 197, 18, 197, 19),
woosh.Token(woosh.NAME, 'self', 197, 19, 197, 23),
woosh.Token(woosh.OP, ',', 197, 23, 197, 24),
woosh.Token(woosh.NAME, 'other', 197, 25, 197, 30),
woosh.Token(woosh.OP, ')', 197, 30, 197, 31),
woosh.Token(woosh.OP, ':', 197, 31, 197, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 32, 198, 0),
woosh.Token(woosh.INDENT, '        ', 198, 0, 198, 8),
woosh.Token(woosh.STRING, '"""divmod(self, other): The pair (self // other, self % other).\r\n\r\n        Sometimes this can be computed faster than the pair of\r\n        operations.\r\n        """', 198, 8, 202, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 202, 11, 203, 0),
woosh.Token(woosh.NAME, 'return', 203, 8, 203, 14),
woosh.Token(woosh.OP, '(', 203, 15, 203, 16),
woosh.Token(woosh.NAME, 'self', 203, 16, 203, 20),
woosh.Token(woosh.OP, '//', 203, 21, 203, 23),
woosh.Token(woosh.NAME, 'other', 203, 24, 203, 29),
woosh.Token(woosh.OP, ',', 203, 29, 203, 30),
woosh.Token(woosh.NAME, 'self', 203, 31, 203, 35),
woosh.Token(woosh.OP, '%', 203, 36, 203, 37),
woosh.Token(woosh.NAME, 'other', 203, 38, 203, 43),
woosh.Token(woosh.OP, ')', 203, 43, 203, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 44, 204, 0),
woosh.Token(woosh.DEDENT, '    ', 205, 0, 205, 4),
woosh.Token(woosh.NAME, 'def', 205, 4, 205, 7),
woosh.Token(woosh.NAME, '__rdivmod__', 205, 8, 205, 19),
woosh.Token(woosh.OP, '(', 205, 19, 205, 20),
woosh.Token(woosh.NAME, 'self', 205, 20, 205, 24),
woosh.Token(woosh.OP, ',', 205, 24, 205, 25),
woosh.Token(woosh.NAME, 'other', 205, 26, 205, 31),
woosh.Token(woosh.OP, ')', 205, 31, 205, 32),
woosh.Token(woosh.OP, ':', 205, 32, 205, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 33, 206, 0),
woosh.Token(woosh.INDENT, '        ', 206, 0, 206, 8),
woosh.Token(woosh.STRING, '"""divmod(other, self): The pair (self // other, self % other).\r\n\r\n        Sometimes this can be computed faster than the pair of\r\n        operations.\r\n        """', 206, 8, 210, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 11, 211, 0),
woosh.Token(woosh.NAME, 'return', 211, 8, 211, 14),
woosh.Token(woosh.OP, '(', 211, 15, 211, 16),
woosh.Token(woosh.NAME, 'other', 211, 16, 211, 21),
woosh.Token(woosh.OP, '//', 211, 22, 211, 24),
woosh.Token(woosh.NAME, 'self', 211, 25, 211, 29),
woosh.Token(woosh.OP, ',', 211, 29, 211, 30),
woosh.Token(woosh.NAME, 'other', 211, 31, 211, 36),
woosh.Token(woosh.OP, '%', 211, 37, 211, 38),
woosh.Token(woosh.NAME, 'self', 211, 39, 211, 43),
woosh.Token(woosh.OP, ')', 211, 43, 211, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 44, 212, 0),
woosh.Token(woosh.DEDENT, '    ', 213, 0, 213, 4),
woosh.Token(woosh.OP, '@', 213, 4, 213, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 213, 5, 213, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 19, 214, 0),
woosh.Token(woosh.NAME, 'def', 214, 4, 214, 7),
woosh.Token(woosh.NAME, '__floordiv__', 214, 8, 214, 20),
woosh.Token(woosh.OP, '(', 214, 20, 214, 21),
woosh.Token(woosh.NAME, 'self', 214, 21, 214, 25),
woosh.Token(woosh.OP, ',', 214, 25, 214, 26),
woosh.Token(woosh.NAME, 'other', 214, 27, 214, 32),
woosh.Token(woosh.OP, ')', 214, 32, 214, 33),
woosh.Token(woosh.OP, ':', 214, 33, 214, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 34, 215, 0),
woosh.Token(woosh.INDENT, '        ', 215, 0, 215, 8),
woosh.Token(woosh.STRING, '"""self // other: The floor() of self/other."""', 215, 8, 215, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 55, 216, 0),
woosh.Token(woosh.NAME, 'raise', 216, 8, 216, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 216, 14, 216, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 33, 217, 0),
woosh.Token(woosh.DEDENT, '    ', 218, 0, 218, 4),
woosh.Token(woosh.OP, '@', 218, 4, 218, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 218, 5, 218, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 19, 219, 0),
woosh.Token(woosh.NAME, 'def', 219, 4, 219, 7),
woosh.Token(woosh.NAME, '__rfloordiv__', 219, 8, 219, 21),
woosh.Token(woosh.OP, '(', 219, 21, 219, 22),
woosh.Token(woosh.NAME, 'self', 219, 22, 219, 26),
woosh.Token(woosh.OP, ',', 219, 26, 219, 27),
woosh.Token(woosh.NAME, 'other', 219, 28, 219, 33),
woosh.Token(woosh.OP, ')', 219, 33, 219, 34),
woosh.Token(woosh.OP, ':', 219, 34, 219, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 35, 220, 0),
woosh.Token(woosh.INDENT, '        ', 220, 0, 220, 8),
woosh.Token(woosh.STRING, '"""other // self: The floor() of other/self."""', 220, 8, 220, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 55, 221, 0),
woosh.Token(woosh.NAME, 'raise', 221, 8, 221, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 221, 14, 221, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 33, 222, 0),
woosh.Token(woosh.DEDENT, '    ', 223, 0, 223, 4),
woosh.Token(woosh.OP, '@', 223, 4, 223, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 223, 5, 223, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 19, 224, 0),
woosh.Token(woosh.NAME, 'def', 224, 4, 224, 7),
woosh.Token(woosh.NAME, '__mod__', 224, 8, 224, 15),
woosh.Token(woosh.OP, '(', 224, 15, 224, 16),
woosh.Token(woosh.NAME, 'self', 224, 16, 224, 20),
woosh.Token(woosh.OP, ',', 224, 20, 224, 21),
woosh.Token(woosh.NAME, 'other', 224, 22, 224, 27),
woosh.Token(woosh.OP, ')', 224, 27, 224, 28),
woosh.Token(woosh.OP, ':', 224, 28, 224, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 29, 225, 0),
woosh.Token(woosh.INDENT, '        ', 225, 0, 225, 8),
woosh.Token(woosh.STRING, '"""self % other"""', 225, 8, 225, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 26, 226, 0),
woosh.Token(woosh.NAME, 'raise', 226, 8, 226, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 226, 14, 226, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 33, 227, 0),
woosh.Token(woosh.DEDENT, '    ', 228, 0, 228, 4),
woosh.Token(woosh.OP, '@', 228, 4, 228, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 228, 5, 228, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 19, 229, 0),
woosh.Token(woosh.NAME, 'def', 229, 4, 229, 7),
woosh.Token(woosh.NAME, '__rmod__', 229, 8, 229, 16),
woosh.Token(woosh.OP, '(', 229, 16, 229, 17),
woosh.Token(woosh.NAME, 'self', 229, 17, 229, 21),
woosh.Token(woosh.OP, ',', 229, 21, 229, 22),
woosh.Token(woosh.NAME, 'other', 229, 23, 229, 28),
woosh.Token(woosh.OP, ')', 229, 28, 229, 29),
woosh.Token(woosh.OP, ':', 229, 29, 229, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 30, 230, 0),
woosh.Token(woosh.INDENT, '        ', 230, 0, 230, 8),
woosh.Token(woosh.STRING, '"""other % self"""', 230, 8, 230, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 26, 231, 0),
woosh.Token(woosh.NAME, 'raise', 231, 8, 231, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 231, 14, 231, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 33, 232, 0),
woosh.Token(woosh.DEDENT, '    ', 233, 0, 233, 4),
woosh.Token(woosh.OP, '@', 233, 4, 233, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 233, 5, 233, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 19, 234, 0),
woosh.Token(woosh.NAME, 'def', 234, 4, 234, 7),
woosh.Token(woosh.NAME, '__lt__', 234, 8, 234, 14),
woosh.Token(woosh.OP, '(', 234, 14, 234, 15),
woosh.Token(woosh.NAME, 'self', 234, 15, 234, 19),
woosh.Token(woosh.OP, ',', 234, 19, 234, 20),
woosh.Token(woosh.NAME, 'other', 234, 21, 234, 26),
woosh.Token(woosh.OP, ')', 234, 26, 234, 27),
woosh.Token(woosh.OP, ':', 234, 27, 234, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 28, 235, 0),
woosh.Token(woosh.INDENT, '        ', 235, 0, 235, 8),
woosh.Token(woosh.STRING, '"""self < other\r\n\r\n        < on Reals defines a total ordering, except perhaps for NaN."""', 235, 8, 237, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 71, 238, 0),
woosh.Token(woosh.NAME, 'raise', 238, 8, 238, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 238, 14, 238, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 33, 239, 0),
woosh.Token(woosh.DEDENT, '    ', 240, 0, 240, 4),
woosh.Token(woosh.OP, '@', 240, 4, 240, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 240, 5, 240, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 19, 241, 0),
woosh.Token(woosh.NAME, 'def', 241, 4, 241, 7),
woosh.Token(woosh.NAME, '__le__', 241, 8, 241, 14),
woosh.Token(woosh.OP, '(', 241, 14, 241, 15),
woosh.Token(woosh.NAME, 'self', 241, 15, 241, 19),
woosh.Token(woosh.OP, ',', 241, 19, 241, 20),
woosh.Token(woosh.NAME, 'other', 241, 21, 241, 26),
woosh.Token(woosh.OP, ')', 241, 26, 241, 27),
woosh.Token(woosh.OP, ':', 241, 27, 241, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 28, 242, 0),
woosh.Token(woosh.INDENT, '        ', 242, 0, 242, 8),
woosh.Token(woosh.STRING, '"""self <= other"""', 242, 8, 242, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 27, 243, 0),
woosh.Token(woosh.NAME, 'raise', 243, 8, 243, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 243, 14, 243, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 33, 244, 0),
woosh.Token(woosh.DEDENT, '    ', 245, 0, 245, 4),
woosh.Token(woosh.NAME, 'def', 245, 4, 245, 7),
woosh.Token(woosh.NAME, 'is_integer', 245, 8, 245, 18),
woosh.Token(woosh.OP, '(', 245, 18, 245, 19),
woosh.Token(woosh.NAME, 'self', 245, 19, 245, 23),
woosh.Token(woosh.OP, ')', 245, 23, 245, 24),
woosh.Token(woosh.OP, ':', 245, 24, 245, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 25, 246, 0),
woosh.Token(woosh.INDENT, '        ', 246, 0, 246, 8),
woosh.Token(woosh.STRING, '"""Return True if the Real is integral; otherwise return False.\r\n\r\n        This default implementation can be overridden in subclasses\r\n        for performance reasons or to deal with values such as NaN,\r\n        which would otherwise cause an exception to be raised.\r\n        """', 246, 8, 251, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 11, 252, 0),
woosh.Token(woosh.COMMENT, '# Although __int__ is not defined at this level, the int', 252, 8, 252, 64),
woosh.Token(woosh.COMMENT, '# constructor falls back to __trunc__, which we do have.', 253, 8, 253, 64),
woosh.Token(woosh.NAME, 'return', 254, 8, 254, 14),
woosh.Token(woosh.NAME, 'self', 254, 15, 254, 19),
woosh.Token(woosh.OP, '==', 254, 20, 254, 22),
woosh.Token(woosh.NAME, 'int', 254, 23, 254, 26),
woosh.Token(woosh.OP, '(', 254, 26, 254, 27),
woosh.Token(woosh.NAME, 'self', 254, 27, 254, 31),
woosh.Token(woosh.OP, ')', 254, 31, 254, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 32, 255, 0),
woosh.Token(woosh.COMMENT, '# Concrete implementations of Complex abstract methods.', 256, 4, 256, 59),
woosh.Token(woosh.DEDENT, '    ', 257, 0, 257, 4),
woosh.Token(woosh.NAME, 'def', 257, 4, 257, 7),
woosh.Token(woosh.NAME, '__complex__', 257, 8, 257, 19),
woosh.Token(woosh.OP, '(', 257, 19, 257, 20),
woosh.Token(woosh.NAME, 'self', 257, 20, 257, 24),
woosh.Token(woosh.OP, ')', 257, 24, 257, 25),
woosh.Token(woosh.OP, ':', 257, 25, 257, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 26, 258, 0),
woosh.Token(woosh.INDENT, '        ', 258, 0, 258, 8),
woosh.Token(woosh.STRING, '"""complex(self) == complex(float(self), 0)"""', 258, 8, 258, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 54, 259, 0),
woosh.Token(woosh.NAME, 'return', 259, 8, 259, 14),
woosh.Token(woosh.NAME, 'complex', 259, 15, 259, 22),
woosh.Token(woosh.OP, '(', 259, 22, 259, 23),
woosh.Token(woosh.NAME, 'float', 259, 23, 259, 28),
woosh.Token(woosh.OP, '(', 259, 28, 259, 29),
woosh.Token(woosh.NAME, 'self', 259, 29, 259, 33),
woosh.Token(woosh.OP, ')', 259, 33, 259, 34),
woosh.Token(woosh.OP, ')', 259, 34, 259, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 35, 260, 0),
woosh.Token(woosh.DEDENT, '    ', 261, 0, 261, 4),
woosh.Token(woosh.OP, '@', 261, 4, 261, 5),
woosh.Token(woosh.NAME, 'property', 261, 5, 261, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 13, 262, 0),
woosh.Token(woosh.NAME, 'def', 262, 4, 262, 7),
woosh.Token(woosh.NAME, 'real', 262, 8, 262, 12),
woosh.Token(woosh.OP, '(', 262, 12, 262, 13),
woosh.Token(woosh.NAME, 'self', 262, 13, 262, 17),
woosh.Token(woosh.OP, ')', 262, 17, 262, 18),
woosh.Token(woosh.OP, ':', 262, 18, 262, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 19, 263, 0),
woosh.Token(woosh.INDENT, '        ', 263, 0, 263, 8),
woosh.Token(woosh.STRING, '"""Real numbers are their real component."""', 263, 8, 263, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 52, 264, 0),
woosh.Token(woosh.NAME, 'return', 264, 8, 264, 14),
woosh.Token(woosh.OP, '+', 264, 15, 264, 16),
woosh.Token(woosh.NAME, 'self', 264, 16, 264, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 264, 20, 265, 0),
woosh.Token(woosh.DEDENT, '    ', 266, 0, 266, 4),
woosh.Token(woosh.OP, '@', 266, 4, 266, 5),
woosh.Token(woosh.NAME, 'property', 266, 5, 266, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 13, 267, 0),
woosh.Token(woosh.NAME, 'def', 267, 4, 267, 7),
woosh.Token(woosh.NAME, 'imag', 267, 8, 267, 12),
woosh.Token(woosh.OP, '(', 267, 12, 267, 13),
woosh.Token(woosh.NAME, 'self', 267, 13, 267, 17),
woosh.Token(woosh.OP, ')', 267, 17, 267, 18),
woosh.Token(woosh.OP, ':', 267, 18, 267, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 19, 268, 0),
woosh.Token(woosh.INDENT, '        ', 268, 0, 268, 8),
woosh.Token(woosh.STRING, '"""Real numbers have no imaginary component."""', 268, 8, 268, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 55, 269, 0),
woosh.Token(woosh.NAME, 'return', 269, 8, 269, 14),
woosh.Token(woosh.NUMBER, '0', 269, 15, 269, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 16, 270, 0),
woosh.Token(woosh.DEDENT, '    ', 271, 0, 271, 4),
woosh.Token(woosh.NAME, 'def', 271, 4, 271, 7),
woosh.Token(woosh.NAME, 'conjugate', 271, 8, 271, 17),
woosh.Token(woosh.OP, '(', 271, 17, 271, 18),
woosh.Token(woosh.NAME, 'self', 271, 18, 271, 22),
woosh.Token(woosh.OP, ')', 271, 22, 271, 23),
woosh.Token(woosh.OP, ':', 271, 23, 271, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 24, 272, 0),
woosh.Token(woosh.INDENT, '        ', 272, 0, 272, 8),
woosh.Token(woosh.STRING, '"""Conjugate is a no-op for Reals."""', 272, 8, 272, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 45, 273, 0),
woosh.Token(woosh.NAME, 'return', 273, 8, 273, 14),
woosh.Token(woosh.OP, '+', 273, 15, 273, 16),
woosh.Token(woosh.NAME, 'self', 273, 16, 273, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 20, 274, 0),
woosh.Token(woosh.DEDENT, '', 275, 0, 275, 0),
woosh.Token(woosh.DEDENT, '', 275, 0, 275, 0),
woosh.Token(woosh.NAME, 'Real', 275, 0, 275, 4),
woosh.Token(woosh.OP, '.', 275, 4, 275, 5),
woosh.Token(woosh.NAME, 'register', 275, 5, 275, 13),
woosh.Token(woosh.OP, '(', 275, 13, 275, 14),
woosh.Token(woosh.NAME, 'float', 275, 14, 275, 19),
woosh.Token(woosh.OP, ')', 275, 19, 275, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 20, 276, 0),
woosh.Token(woosh.NAME, 'class', 278, 0, 278, 5),
woosh.Token(woosh.NAME, 'Rational', 278, 6, 278, 14),
woosh.Token(woosh.OP, '(', 278, 14, 278, 15),
woosh.Token(woosh.NAME, 'Real', 278, 15, 278, 19),
woosh.Token(woosh.OP, ')', 278, 19, 278, 20),
woosh.Token(woosh.OP, ':', 278, 20, 278, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 21, 279, 0),
woosh.Token(woosh.INDENT, '    ', 279, 0, 279, 4),
woosh.Token(woosh.STRING, '""".numerator and .denominator should be in lowest terms."""', 279, 4, 279, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 64, 280, 0),
woosh.Token(woosh.NAME, '__slots__', 281, 4, 281, 13),
woosh.Token(woosh.OP, '=', 281, 14, 281, 15),
woosh.Token(woosh.OP, '(', 281, 16, 281, 17),
woosh.Token(woosh.OP, ')', 281, 17, 281, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 18, 282, 0),
woosh.Token(woosh.OP, '@', 283, 4, 283, 5),
woosh.Token(woosh.NAME, 'property', 283, 5, 283, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 283, 13, 284, 0),
woosh.Token(woosh.OP, '@', 284, 4, 284, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 284, 5, 284, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 19, 285, 0),
woosh.Token(woosh.NAME, 'def', 285, 4, 285, 7),
woosh.Token(woosh.NAME, 'numerator', 285, 8, 285, 17),
woosh.Token(woosh.OP, '(', 285, 17, 285, 18),
woosh.Token(woosh.NAME, 'self', 285, 18, 285, 22),
woosh.Token(woosh.OP, ')', 285, 22, 285, 23),
woosh.Token(woosh.OP, ':', 285, 23, 285, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 285, 24, 286, 0),
woosh.Token(woosh.INDENT, '        ', 286, 0, 286, 8),
woosh.Token(woosh.NAME, 'raise', 286, 8, 286, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 286, 14, 286, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 33, 287, 0),
woosh.Token(woosh.DEDENT, '    ', 288, 0, 288, 4),
woosh.Token(woosh.OP, '@', 288, 4, 288, 5),
woosh.Token(woosh.NAME, 'property', 288, 5, 288, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 288, 13, 289, 0),
woosh.Token(woosh.OP, '@', 289, 4, 289, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 289, 5, 289, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 289, 19, 290, 0),
woosh.Token(woosh.NAME, 'def', 290, 4, 290, 7),
woosh.Token(woosh.NAME, 'denominator', 290, 8, 290, 19),
woosh.Token(woosh.OP, '(', 290, 19, 290, 20),
woosh.Token(woosh.NAME, 'self', 290, 20, 290, 24),
woosh.Token(woosh.OP, ')', 290, 24, 290, 25),
woosh.Token(woosh.OP, ':', 290, 25, 290, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 26, 291, 0),
woosh.Token(woosh.INDENT, '        ', 291, 0, 291, 8),
woosh.Token(woosh.NAME, 'raise', 291, 8, 291, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 291, 14, 291, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 33, 292, 0),
woosh.Token(woosh.COMMENT, "# Concrete implementation of Real's conversion to float.", 293, 4, 293, 60),
woosh.Token(woosh.DEDENT, '    ', 294, 0, 294, 4),
woosh.Token(woosh.NAME, 'def', 294, 4, 294, 7),
woosh.Token(woosh.NAME, '__float__', 294, 8, 294, 17),
woosh.Token(woosh.OP, '(', 294, 17, 294, 18),
woosh.Token(woosh.NAME, 'self', 294, 18, 294, 22),
woosh.Token(woosh.OP, ')', 294, 22, 294, 23),
woosh.Token(woosh.OP, ':', 294, 23, 294, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 24, 295, 0),
woosh.Token(woosh.INDENT, '        ', 295, 0, 295, 8),
woosh.Token(woosh.STRING, '"""float(self) = self.numerator / self.denominator\r\n\r\n        It\'s important that this conversion use the integer\'s "true"\r\n        division rather than casting one side to float before dividing\r\n        so that ratios of huge integers convert without overflowing.\r\n\r\n        """', 295, 8, 301, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 301, 11, 302, 0),
woosh.Token(woosh.NAME, 'return', 302, 8, 302, 14),
woosh.Token(woosh.NAME, 'self', 302, 15, 302, 19),
woosh.Token(woosh.OP, '.', 302, 19, 302, 20),
woosh.Token(woosh.NAME, 'numerator', 302, 20, 302, 29),
woosh.Token(woosh.OP, '/', 302, 30, 302, 31),
woosh.Token(woosh.NAME, 'self', 302, 32, 302, 36),
woosh.Token(woosh.OP, '.', 302, 36, 302, 37),
woosh.Token(woosh.NAME, 'denominator', 302, 37, 302, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 302, 48, 303, 0),
woosh.Token(woosh.DEDENT, '    ', 304, 0, 304, 4),
woosh.Token(woosh.NAME, 'def', 304, 4, 304, 7),
woosh.Token(woosh.NAME, 'is_integer', 304, 8, 304, 18),
woosh.Token(woosh.OP, '(', 304, 18, 304, 19),
woosh.Token(woosh.NAME, 'self', 304, 19, 304, 23),
woosh.Token(woosh.OP, ')', 304, 23, 304, 24),
woosh.Token(woosh.OP, ':', 304, 24, 304, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 25, 305, 0),
woosh.Token(woosh.INDENT, '        ', 305, 0, 305, 8),
woosh.Token(woosh.STRING, '"""Return True if the Rational is integral; otherwise return False."""', 305, 8, 305, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 78, 306, 0),
woosh.Token(woosh.NAME, 'return', 306, 8, 306, 14),
woosh.Token(woosh.NAME, 'self', 306, 15, 306, 19),
woosh.Token(woosh.OP, '.', 306, 19, 306, 20),
woosh.Token(woosh.NAME, 'denominator', 306, 20, 306, 31),
woosh.Token(woosh.OP, '==', 306, 32, 306, 34),
woosh.Token(woosh.NUMBER, '1', 306, 35, 306, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 36, 307, 0),
woosh.Token(woosh.DEDENT, '', 309, 0, 309, 0),
woosh.Token(woosh.DEDENT, '', 309, 0, 309, 0),
woosh.Token(woosh.NAME, 'class', 309, 0, 309, 5),
woosh.Token(woosh.NAME, 'Integral', 309, 6, 309, 14),
woosh.Token(woosh.OP, '(', 309, 14, 309, 15),
woosh.Token(woosh.NAME, 'Rational', 309, 15, 309, 23),
woosh.Token(woosh.OP, ')', 309, 23, 309, 24),
woosh.Token(woosh.OP, ':', 309, 24, 309, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 309, 25, 310, 0),
woosh.Token(woosh.INDENT, '    ', 310, 0, 310, 4),
woosh.Token(woosh.STRING, '"""Integral adds a conversion to int and the bit-string operations."""', 310, 4, 310, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 74, 311, 0),
woosh.Token(woosh.NAME, '__slots__', 312, 4, 312, 13),
woosh.Token(woosh.OP, '=', 312, 14, 312, 15),
woosh.Token(woosh.OP, '(', 312, 16, 312, 17),
woosh.Token(woosh.OP, ')', 312, 17, 312, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 18, 313, 0),
woosh.Token(woosh.OP, '@', 314, 4, 314, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 314, 5, 314, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 19, 315, 0),
woosh.Token(woosh.NAME, 'def', 315, 4, 315, 7),
woosh.Token(woosh.NAME, '__int__', 315, 8, 315, 15),
woosh.Token(woosh.OP, '(', 315, 15, 315, 16),
woosh.Token(woosh.NAME, 'self', 315, 16, 315, 20),
woosh.Token(woosh.OP, ')', 315, 20, 315, 21),
woosh.Token(woosh.OP, ':', 315, 21, 315, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 22, 316, 0),
woosh.Token(woosh.INDENT, '        ', 316, 0, 316, 8),
woosh.Token(woosh.STRING, '"""int(self)"""', 316, 8, 316, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 23, 317, 0),
woosh.Token(woosh.NAME, 'raise', 317, 8, 317, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 317, 14, 317, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 33, 318, 0),
woosh.Token(woosh.DEDENT, '    ', 319, 0, 319, 4),
woosh.Token(woosh.NAME, 'def', 319, 4, 319, 7),
woosh.Token(woosh.NAME, '__index__', 319, 8, 319, 17),
woosh.Token(woosh.OP, '(', 319, 17, 319, 18),
woosh.Token(woosh.NAME, 'self', 319, 18, 319, 22),
woosh.Token(woosh.OP, ')', 319, 22, 319, 23),
woosh.Token(woosh.OP, ':', 319, 23, 319, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 24, 320, 0),
woosh.Token(woosh.INDENT, '        ', 320, 0, 320, 8),
woosh.Token(woosh.STRING, '"""Called whenever an index is needed, such as in slicing"""', 320, 8, 320, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 68, 321, 0),
woosh.Token(woosh.NAME, 'return', 321, 8, 321, 14),
woosh.Token(woosh.NAME, 'int', 321, 15, 321, 18),
woosh.Token(woosh.OP, '(', 321, 18, 321, 19),
woosh.Token(woosh.NAME, 'self', 321, 19, 321, 23),
woosh.Token(woosh.OP, ')', 321, 23, 321, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 321, 24, 322, 0),
woosh.Token(woosh.DEDENT, '    ', 323, 0, 323, 4),
woosh.Token(woosh.OP, '@', 323, 4, 323, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 323, 5, 323, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 19, 324, 0),
woosh.Token(woosh.NAME, 'def', 324, 4, 324, 7),
woosh.Token(woosh.NAME, '__pow__', 324, 8, 324, 15),
woosh.Token(woosh.OP, '(', 324, 15, 324, 16),
woosh.Token(woosh.NAME, 'self', 324, 16, 324, 20),
woosh.Token(woosh.OP, ',', 324, 20, 324, 21),
woosh.Token(woosh.NAME, 'exponent', 324, 22, 324, 30),
woosh.Token(woosh.OP, ',', 324, 30, 324, 31),
woosh.Token(woosh.NAME, 'modulus', 324, 32, 324, 39),
woosh.Token(woosh.OP, '=', 324, 39, 324, 40),
woosh.Token(woosh.NAME, 'None', 324, 40, 324, 44),
woosh.Token(woosh.OP, ')', 324, 44, 324, 45),
woosh.Token(woosh.OP, ':', 324, 45, 324, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 46, 325, 0),
woosh.Token(woosh.INDENT, '        ', 325, 0, 325, 8),
woosh.Token(woosh.STRING, '"""self ** exponent % modulus, but maybe faster.\r\n\r\n        Accept the modulus argument if you want to support the\r\n        3-argument version of pow(). Raise a TypeError if exponent < 0\r\n        or any argument isn\'t Integral. Otherwise, just implement the\r\n        2-argument version described in Complex.\r\n        """', 325, 8, 331, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 331, 11, 332, 0),
woosh.Token(woosh.NAME, 'raise', 332, 8, 332, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 332, 14, 332, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 33, 333, 0),
woosh.Token(woosh.DEDENT, '    ', 334, 0, 334, 4),
woosh.Token(woosh.OP, '@', 334, 4, 334, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 334, 5, 334, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 334, 19, 335, 0),
woosh.Token(woosh.NAME, 'def', 335, 4, 335, 7),
woosh.Token(woosh.NAME, '__lshift__', 335, 8, 335, 18),
woosh.Token(woosh.OP, '(', 335, 18, 335, 19),
woosh.Token(woosh.NAME, 'self', 335, 19, 335, 23),
woosh.Token(woosh.OP, ',', 335, 23, 335, 24),
woosh.Token(woosh.NAME, 'other', 335, 25, 335, 30),
woosh.Token(woosh.OP, ')', 335, 30, 335, 31),
woosh.Token(woosh.OP, ':', 335, 31, 335, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 335, 32, 336, 0),
woosh.Token(woosh.INDENT, '        ', 336, 0, 336, 8),
woosh.Token(woosh.STRING, '"""self << other"""', 336, 8, 336, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 27, 337, 0),
woosh.Token(woosh.NAME, 'raise', 337, 8, 337, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 337, 14, 337, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 337, 33, 338, 0),
woosh.Token(woosh.DEDENT, '    ', 339, 0, 339, 4),
woosh.Token(woosh.OP, '@', 339, 4, 339, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 339, 5, 339, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 339, 19, 340, 0),
woosh.Token(woosh.NAME, 'def', 340, 4, 340, 7),
woosh.Token(woosh.NAME, '__rlshift__', 340, 8, 340, 19),
woosh.Token(woosh.OP, '(', 340, 19, 340, 20),
woosh.Token(woosh.NAME, 'self', 340, 20, 340, 24),
woosh.Token(woosh.OP, ',', 340, 24, 340, 25),
woosh.Token(woosh.NAME, 'other', 340, 26, 340, 31),
woosh.Token(woosh.OP, ')', 340, 31, 340, 32),
woosh.Token(woosh.OP, ':', 340, 32, 340, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 33, 341, 0),
woosh.Token(woosh.INDENT, '        ', 341, 0, 341, 8),
woosh.Token(woosh.STRING, '"""other << self"""', 341, 8, 341, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 27, 342, 0),
woosh.Token(woosh.NAME, 'raise', 342, 8, 342, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 342, 14, 342, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 33, 343, 0),
woosh.Token(woosh.DEDENT, '    ', 344, 0, 344, 4),
woosh.Token(woosh.OP, '@', 344, 4, 344, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 344, 5, 344, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 19, 345, 0),
woosh.Token(woosh.NAME, 'def', 345, 4, 345, 7),
woosh.Token(woosh.NAME, '__rshift__', 345, 8, 345, 18),
woosh.Token(woosh.OP, '(', 345, 18, 345, 19),
woosh.Token(woosh.NAME, 'self', 345, 19, 345, 23),
woosh.Token(woosh.OP, ',', 345, 23, 345, 24),
woosh.Token(woosh.NAME, 'other', 345, 25, 345, 30),
woosh.Token(woosh.OP, ')', 345, 30, 345, 31),
woosh.Token(woosh.OP, ':', 345, 31, 345, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 32, 346, 0),
woosh.Token(woosh.INDENT, '        ', 346, 0, 346, 8),
woosh.Token(woosh.STRING, '"""self >> other"""', 346, 8, 346, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 27, 347, 0),
woosh.Token(woosh.NAME, 'raise', 347, 8, 347, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 347, 14, 347, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 33, 348, 0),
woosh.Token(woosh.DEDENT, '    ', 349, 0, 349, 4),
woosh.Token(woosh.OP, '@', 349, 4, 349, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 349, 5, 349, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 19, 350, 0),
woosh.Token(woosh.NAME, 'def', 350, 4, 350, 7),
woosh.Token(woosh.NAME, '__rrshift__', 350, 8, 350, 19),
woosh.Token(woosh.OP, '(', 350, 19, 350, 20),
woosh.Token(woosh.NAME, 'self', 350, 20, 350, 24),
woosh.Token(woosh.OP, ',', 350, 24, 350, 25),
woosh.Token(woosh.NAME, 'other', 350, 26, 350, 31),
woosh.Token(woosh.OP, ')', 350, 31, 350, 32),
woosh.Token(woosh.OP, ':', 350, 32, 350, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 33, 351, 0),
woosh.Token(woosh.INDENT, '        ', 351, 0, 351, 8),
woosh.Token(woosh.STRING, '"""other >> self"""', 351, 8, 351, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 27, 352, 0),
woosh.Token(woosh.NAME, 'raise', 352, 8, 352, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 352, 14, 352, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 352, 33, 353, 0),
woosh.Token(woosh.DEDENT, '    ', 354, 0, 354, 4),
woosh.Token(woosh.OP, '@', 354, 4, 354, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 354, 5, 354, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 354, 19, 355, 0),
woosh.Token(woosh.NAME, 'def', 355, 4, 355, 7),
woosh.Token(woosh.NAME, '__and__', 355, 8, 355, 15),
woosh.Token(woosh.OP, '(', 355, 15, 355, 16),
woosh.Token(woosh.NAME, 'self', 355, 16, 355, 20),
woosh.Token(woosh.OP, ',', 355, 20, 355, 21),
woosh.Token(woosh.NAME, 'other', 355, 22, 355, 27),
woosh.Token(woosh.OP, ')', 355, 27, 355, 28),
woosh.Token(woosh.OP, ':', 355, 28, 355, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 355, 29, 356, 0),
woosh.Token(woosh.INDENT, '        ', 356, 0, 356, 8),
woosh.Token(woosh.STRING, '"""self & other"""', 356, 8, 356, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 356, 26, 357, 0),
woosh.Token(woosh.NAME, 'raise', 357, 8, 357, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 357, 14, 357, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 33, 358, 0),
woosh.Token(woosh.DEDENT, '    ', 359, 0, 359, 4),
woosh.Token(woosh.OP, '@', 359, 4, 359, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 359, 5, 359, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 19, 360, 0),
woosh.Token(woosh.NAME, 'def', 360, 4, 360, 7),
woosh.Token(woosh.NAME, '__rand__', 360, 8, 360, 16),
woosh.Token(woosh.OP, '(', 360, 16, 360, 17),
woosh.Token(woosh.NAME, 'self', 360, 17, 360, 21),
woosh.Token(woosh.OP, ',', 360, 21, 360, 22),
woosh.Token(woosh.NAME, 'other', 360, 23, 360, 28),
woosh.Token(woosh.OP, ')', 360, 28, 360, 29),
woosh.Token(woosh.OP, ':', 360, 29, 360, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 30, 361, 0),
woosh.Token(woosh.INDENT, '        ', 361, 0, 361, 8),
woosh.Token(woosh.STRING, '"""other & self"""', 361, 8, 361, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 26, 362, 0),
woosh.Token(woosh.NAME, 'raise', 362, 8, 362, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 362, 14, 362, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 362, 33, 363, 0),
woosh.Token(woosh.DEDENT, '    ', 364, 0, 364, 4),
woosh.Token(woosh.OP, '@', 364, 4, 364, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 364, 5, 364, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 19, 365, 0),
woosh.Token(woosh.NAME, 'def', 365, 4, 365, 7),
woosh.Token(woosh.NAME, '__xor__', 365, 8, 365, 15),
woosh.Token(woosh.OP, '(', 365, 15, 365, 16),
woosh.Token(woosh.NAME, 'self', 365, 16, 365, 20),
woosh.Token(woosh.OP, ',', 365, 20, 365, 21),
woosh.Token(woosh.NAME, 'other', 365, 22, 365, 27),
woosh.Token(woosh.OP, ')', 365, 27, 365, 28),
woosh.Token(woosh.OP, ':', 365, 28, 365, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 29, 366, 0),
woosh.Token(woosh.INDENT, '        ', 366, 0, 366, 8),
woosh.Token(woosh.STRING, '"""self ^ other"""', 366, 8, 366, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 26, 367, 0),
woosh.Token(woosh.NAME, 'raise', 367, 8, 367, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 367, 14, 367, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 33, 368, 0),
woosh.Token(woosh.DEDENT, '    ', 369, 0, 369, 4),
woosh.Token(woosh.OP, '@', 369, 4, 369, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 369, 5, 369, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 19, 370, 0),
woosh.Token(woosh.NAME, 'def', 370, 4, 370, 7),
woosh.Token(woosh.NAME, '__rxor__', 370, 8, 370, 16),
woosh.Token(woosh.OP, '(', 370, 16, 370, 17),
woosh.Token(woosh.NAME, 'self', 370, 17, 370, 21),
woosh.Token(woosh.OP, ',', 370, 21, 370, 22),
woosh.Token(woosh.NAME, 'other', 370, 23, 370, 28),
woosh.Token(woosh.OP, ')', 370, 28, 370, 29),
woosh.Token(woosh.OP, ':', 370, 29, 370, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 30, 371, 0),
woosh.Token(woosh.INDENT, '        ', 371, 0, 371, 8),
woosh.Token(woosh.STRING, '"""other ^ self"""', 371, 8, 371, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 26, 372, 0),
woosh.Token(woosh.NAME, 'raise', 372, 8, 372, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 372, 14, 372, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 372, 33, 373, 0),
woosh.Token(woosh.DEDENT, '    ', 374, 0, 374, 4),
woosh.Token(woosh.OP, '@', 374, 4, 374, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 374, 5, 374, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 19, 375, 0),
woosh.Token(woosh.NAME, 'def', 375, 4, 375, 7),
woosh.Token(woosh.NAME, '__or__', 375, 8, 375, 14),
woosh.Token(woosh.OP, '(', 375, 14, 375, 15),
woosh.Token(woosh.NAME, 'self', 375, 15, 375, 19),
woosh.Token(woosh.OP, ',', 375, 19, 375, 20),
woosh.Token(woosh.NAME, 'other', 375, 21, 375, 26),
woosh.Token(woosh.OP, ')', 375, 26, 375, 27),
woosh.Token(woosh.OP, ':', 375, 27, 375, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 28, 376, 0),
woosh.Token(woosh.INDENT, '        ', 376, 0, 376, 8),
woosh.Token(woosh.STRING, '"""self | other"""', 376, 8, 376, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 26, 377, 0),
woosh.Token(woosh.NAME, 'raise', 377, 8, 377, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 377, 14, 377, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 33, 378, 0),
woosh.Token(woosh.DEDENT, '    ', 379, 0, 379, 4),
woosh.Token(woosh.OP, '@', 379, 4, 379, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 379, 5, 379, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 19, 380, 0),
woosh.Token(woosh.NAME, 'def', 380, 4, 380, 7),
woosh.Token(woosh.NAME, '__ror__', 380, 8, 380, 15),
woosh.Token(woosh.OP, '(', 380, 15, 380, 16),
woosh.Token(woosh.NAME, 'self', 380, 16, 380, 20),
woosh.Token(woosh.OP, ',', 380, 20, 380, 21),
woosh.Token(woosh.NAME, 'other', 380, 22, 380, 27),
woosh.Token(woosh.OP, ')', 380, 27, 380, 28),
woosh.Token(woosh.OP, ':', 380, 28, 380, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 29, 381, 0),
woosh.Token(woosh.INDENT, '        ', 381, 0, 381, 8),
woosh.Token(woosh.STRING, '"""other | self"""', 381, 8, 381, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 26, 382, 0),
woosh.Token(woosh.NAME, 'raise', 382, 8, 382, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 382, 14, 382, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 33, 383, 0),
woosh.Token(woosh.DEDENT, '    ', 384, 0, 384, 4),
woosh.Token(woosh.OP, '@', 384, 4, 384, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 384, 5, 384, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 19, 385, 0),
woosh.Token(woosh.NAME, 'def', 385, 4, 385, 7),
woosh.Token(woosh.NAME, '__invert__', 385, 8, 385, 18),
woosh.Token(woosh.OP, '(', 385, 18, 385, 19),
woosh.Token(woosh.NAME, 'self', 385, 19, 385, 23),
woosh.Token(woosh.OP, ')', 385, 23, 385, 24),
woosh.Token(woosh.OP, ':', 385, 24, 385, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 25, 386, 0),
woosh.Token(woosh.INDENT, '        ', 386, 0, 386, 8),
woosh.Token(woosh.STRING, '"""~self"""', 386, 8, 386, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 19, 387, 0),
woosh.Token(woosh.NAME, 'raise', 387, 8, 387, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 387, 14, 387, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 33, 388, 0),
woosh.Token(woosh.COMMENT, '# Concrete implementations of Rational and Real abstract methods.', 389, 4, 389, 69),
woosh.Token(woosh.DEDENT, '    ', 390, 0, 390, 4),
woosh.Token(woosh.NAME, 'def', 390, 4, 390, 7),
woosh.Token(woosh.NAME, '__float__', 390, 8, 390, 17),
woosh.Token(woosh.OP, '(', 390, 17, 390, 18),
woosh.Token(woosh.NAME, 'self', 390, 18, 390, 22),
woosh.Token(woosh.OP, ')', 390, 22, 390, 23),
woosh.Token(woosh.OP, ':', 390, 23, 390, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 24, 391, 0),
woosh.Token(woosh.INDENT, '        ', 391, 0, 391, 8),
woosh.Token(woosh.STRING, '"""float(self) == float(int(self))"""', 391, 8, 391, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 45, 392, 0),
woosh.Token(woosh.NAME, 'return', 392, 8, 392, 14),
woosh.Token(woosh.NAME, 'float', 392, 15, 392, 20),
woosh.Token(woosh.OP, '(', 392, 20, 392, 21),
woosh.Token(woosh.NAME, 'int', 392, 21, 392, 24),
woosh.Token(woosh.OP, '(', 392, 24, 392, 25),
woosh.Token(woosh.NAME, 'self', 392, 25, 392, 29),
woosh.Token(woosh.OP, ')', 392, 29, 392, 30),
woosh.Token(woosh.OP, ')', 392, 30, 392, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 392, 31, 393, 0),
woosh.Token(woosh.DEDENT, '    ', 394, 0, 394, 4),
woosh.Token(woosh.OP, '@', 394, 4, 394, 5),
woosh.Token(woosh.NAME, 'property', 394, 5, 394, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 13, 395, 0),
woosh.Token(woosh.NAME, 'def', 395, 4, 395, 7),
woosh.Token(woosh.NAME, 'numerator', 395, 8, 395, 17),
woosh.Token(woosh.OP, '(', 395, 17, 395, 18),
woosh.Token(woosh.NAME, 'self', 395, 18, 395, 22),
woosh.Token(woosh.OP, ')', 395, 22, 395, 23),
woosh.Token(woosh.OP, ':', 395, 23, 395, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 24, 396, 0),
woosh.Token(woosh.INDENT, '        ', 396, 0, 396, 8),
woosh.Token(woosh.STRING, '"""Integers are their own numerators."""', 396, 8, 396, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 396, 48, 397, 0),
woosh.Token(woosh.NAME, 'return', 397, 8, 397, 14),
woosh.Token(woosh.OP, '+', 397, 15, 397, 16),
woosh.Token(woosh.NAME, 'self', 397, 16, 397, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 397, 20, 398, 0),
woosh.Token(woosh.DEDENT, '    ', 399, 0, 399, 4),
woosh.Token(woosh.OP, '@', 399, 4, 399, 5),
woosh.Token(woosh.NAME, 'property', 399, 5, 399, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 13, 400, 0),
woosh.Token(woosh.NAME, 'def', 400, 4, 400, 7),
woosh.Token(woosh.NAME, 'denominator', 400, 8, 400, 19),
woosh.Token(woosh.OP, '(', 400, 19, 400, 20),
woosh.Token(woosh.NAME, 'self', 400, 20, 400, 24),
woosh.Token(woosh.OP, ')', 400, 24, 400, 25),
woosh.Token(woosh.OP, ':', 400, 25, 400, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 26, 401, 0),
woosh.Token(woosh.INDENT, '        ', 401, 0, 401, 8),
woosh.Token(woosh.STRING, '"""Integers have a denominator of 1."""', 401, 8, 401, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 401, 47, 402, 0),
woosh.Token(woosh.NAME, 'return', 402, 8, 402, 14),
woosh.Token(woosh.NUMBER, '1', 402, 15, 402, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 402, 16, 403, 0),
woosh.Token(woosh.DEDENT, '    ', 404, 0, 404, 4),
woosh.Token(woosh.NAME, 'def', 404, 4, 404, 7),
woosh.Token(woosh.NAME, 'is_integer', 404, 8, 404, 18),
woosh.Token(woosh.OP, '(', 404, 18, 404, 19),
woosh.Token(woosh.NAME, 'self', 404, 19, 404, 23),
woosh.Token(woosh.OP, ')', 404, 23, 404, 24),
woosh.Token(woosh.OP, ':', 404, 24, 404, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 25, 405, 0),
woosh.Token(woosh.INDENT, '        ', 405, 0, 405, 8),
woosh.Token(woosh.STRING, '"""Return True; all Integrals represent an integral value."""', 405, 8, 405, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 69, 406, 0),
woosh.Token(woosh.NAME, 'return', 406, 8, 406, 14),
woosh.Token(woosh.NAME, 'True', 406, 15, 406, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 19, 407, 0),
woosh.Token(woosh.DEDENT, '', 408, 0, 408, 0),
woosh.Token(woosh.DEDENT, '', 408, 0, 408, 0),
woosh.Token(woosh.NAME, 'Integral', 408, 0, 408, 8),
woosh.Token(woosh.OP, '.', 408, 8, 408, 9),
woosh.Token(woosh.NAME, 'register', 408, 9, 408, 17),
woosh.Token(woosh.OP, '(', 408, 17, 408, 18),
woosh.Token(woosh.NAME, 'int', 408, 18, 408, 21),
woosh.Token(woosh.OP, ')', 408, 21, 408, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 22, 409, 0),
woosh.Token(woosh.EOF, '', 409, 0, 409, 0),
]
