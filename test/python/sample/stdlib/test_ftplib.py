
# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/ftplib.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""An FTP client class and some helper functions.\r\n\r\nBased on RFC 959: File Transfer Protocol (FTP), by J. Postel and J. Reynolds\r\n\r\nExample:\r\n\r\n>>> from ftplib import FTP\r\n>>> ftp = FTP(\'ftp.python.org\') # connect to host, default port\r\n>>> ftp.login() # default, i.e.: user anonymous, passwd anonymous@\r\n\'230 Guest login ok, access restrictions apply.\'\r\n>>> ftp.retrlines(\'LIST\') # list directory contents\r\ntotal 9\r\ndrwxr-xr-x   8 root     wheel        1024 Jan  3  1994 .\r\ndrwxr-xr-x   8 root     wheel        1024 Jan  3  1994 ..\r\ndrwxr-xr-x   2 root     wheel        1024 Jan  3  1994 bin\r\ndrwxr-xr-x   2 root     wheel        1024 Jan  3  1994 etc\r\nd-wxrwxr-x   2 ftp      wheel        1024 Sep  5 13:43 incoming\r\ndrwxr-xr-x   2 root     wheel        1024 Nov 17  1993 lib\r\ndrwxr-xr-x   6 1094     wheel        1024 Sep 13 19:07 pub\r\ndrwxr-xr-x   3 root     wheel        1024 Jan  3  1994 usr\r\n-rw-r--r--   1 root     root          312 Aug  1  1994 welcome.msg\r\n\'226 Transfer complete.\'\r\n>>> ftp.quit()\r\n\'221 Goodbye.\'\r\n>>>\r\n\r\nA nice test that reveals some of the network dialogue would be:\r\npython ftplib.py -d localhost -l -p -l\r\n"""', 1, 0, 29, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 3, 30, 0),
woosh.Token(woosh.COMMENT, '#', 31, 0, 31, 1),
woosh.Token(woosh.COMMENT, '# Changes and improvements suggested by Steve Majewski.', 32, 0, 32, 55),
woosh.Token(woosh.COMMENT, '# Modified by Jack to work on the mac.', 33, 0, 33, 38),
woosh.Token(woosh.COMMENT, '# Modified by Siebren to support docstrings and PASV.', 34, 0, 34, 53),
woosh.Token(woosh.COMMENT, '# Modified by Phil Schwartz to add storbinary and storlines callbacks.', 35, 0, 35, 70),
woosh.Token(woosh.COMMENT, "# Modified by Giampaolo Rodola' to add TLS support.", 36, 0, 36, 51),
woosh.Token(woosh.COMMENT, '#', 37, 0, 37, 1),
woosh.Token(woosh.NAME, 'import', 39, 0, 39, 6),
woosh.Token(woosh.NAME, 'sys', 39, 7, 39, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 39, 10, 40, 0),
woosh.Token(woosh.NAME, 'import', 40, 0, 40, 6),
woosh.Token(woosh.NAME, 'socket', 40, 7, 40, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 40, 13, 41, 0),
woosh.Token(woosh.NAME, 'from', 41, 0, 41, 4),
woosh.Token(woosh.NAME, 'socket', 41, 5, 41, 11),
woosh.Token(woosh.NAME, 'import', 41, 12, 41, 18),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 41, 19, 41, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 41, 42, 42, 0),
woosh.Token(woosh.NAME, '__all__', 43, 0, 43, 7),
woosh.Token(woosh.OP, '=', 43, 8, 43, 9),
woosh.Token(woosh.OP, '[', 43, 10, 43, 11),
woosh.Token(woosh.STRING, '"FTP"', 43, 11, 43, 16),
woosh.Token(woosh.OP, ',', 43, 16, 43, 17),
woosh.Token(woosh.STRING, '"error_reply"', 43, 18, 43, 31),
woosh.Token(woosh.OP, ',', 43, 31, 43, 32),
woosh.Token(woosh.STRING, '"error_temp"', 43, 33, 43, 45),
woosh.Token(woosh.OP, ',', 43, 45, 43, 46),
woosh.Token(woosh.STRING, '"error_perm"', 43, 47, 43, 59),
woosh.Token(woosh.OP, ',', 43, 59, 43, 60),
woosh.Token(woosh.STRING, '"error_proto"', 43, 61, 43, 74),
woosh.Token(woosh.OP, ',', 43, 74, 43, 75),
woosh.Token(woosh.STRING, '"all_errors"', 44, 11, 44, 23),
woosh.Token(woosh.OP, ']', 44, 23, 44, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 44, 24, 45, 0),
woosh.Token(woosh.COMMENT, '# Magic number from <socket.h>', 46, 0, 46, 30),
woosh.Token(woosh.NAME, 'MSG_OOB', 47, 0, 47, 7),
woosh.Token(woosh.OP, '=', 47, 8, 47, 9),
woosh.Token(woosh.NUMBER, '0x1', 47, 10, 47, 13),
woosh.Token(woosh.COMMENT, '# Process data out of band', 47, 40, 47, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 66, 48, 0),
woosh.Token(woosh.COMMENT, '# The standard FTP server control port', 50, 0, 50, 38),
woosh.Token(woosh.NAME, 'FTP_PORT', 51, 0, 51, 8),
woosh.Token(woosh.OP, '=', 51, 9, 51, 10),
woosh.Token(woosh.NUMBER, '21', 51, 11, 51, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 51, 13, 52, 0),
woosh.Token(woosh.COMMENT, '# The sizehint parameter passed to readline() calls', 52, 0, 52, 51),
woosh.Token(woosh.NAME, 'MAXLINE', 53, 0, 53, 7),
woosh.Token(woosh.OP, '=', 53, 8, 53, 9),
woosh.Token(woosh.NUMBER, '8192', 53, 10, 53, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 14, 54, 0),
woosh.Token(woosh.COMMENT, '# Exception raised when an error or invalid response is received', 56, 0, 56, 64),
woosh.Token(woosh.NAME, 'class', 57, 0, 57, 5),
woosh.Token(woosh.NAME, 'Error', 57, 6, 57, 11),
woosh.Token(woosh.OP, '(', 57, 11, 57, 12),
woosh.Token(woosh.NAME, 'Exception', 57, 12, 57, 21),
woosh.Token(woosh.OP, ')', 57, 21, 57, 22),
woosh.Token(woosh.OP, ':', 57, 22, 57, 23),
woosh.Token(woosh.NAME, 'pass', 57, 24, 57, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 28, 58, 0),
woosh.Token(woosh.NAME, 'class', 58, 0, 58, 5),
woosh.Token(woosh.NAME, 'error_reply', 58, 6, 58, 17),
woosh.Token(woosh.OP, '(', 58, 17, 58, 18),
woosh.Token(woosh.NAME, 'Error', 58, 18, 58, 23),
woosh.Token(woosh.OP, ')', 58, 23, 58, 24),
woosh.Token(woosh.OP, ':', 58, 24, 58, 25),
woosh.Token(woosh.NAME, 'pass', 58, 26, 58, 30),
woosh.Token(woosh.COMMENT, '# unexpected [123]xx reply', 58, 40, 58, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 66, 59, 0),
woosh.Token(woosh.NAME, 'class', 59, 0, 59, 5),
woosh.Token(woosh.NAME, 'error_temp', 59, 6, 59, 16),
woosh.Token(woosh.OP, '(', 59, 16, 59, 17),
woosh.Token(woosh.NAME, 'Error', 59, 17, 59, 22),
woosh.Token(woosh.OP, ')', 59, 22, 59, 23),
woosh.Token(woosh.OP, ':', 59, 23, 59, 24),
woosh.Token(woosh.NAME, 'pass', 59, 25, 59, 29),
woosh.Token(woosh.COMMENT, '# 4xx errors', 59, 40, 59, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 52, 60, 0),
woosh.Token(woosh.NAME, 'class', 60, 0, 60, 5),
woosh.Token(woosh.NAME, 'error_perm', 60, 6, 60, 16),
woosh.Token(woosh.OP, '(', 60, 16, 60, 17),
woosh.Token(woosh.NAME, 'Error', 60, 17, 60, 22),
woosh.Token(woosh.OP, ')', 60, 22, 60, 23),
woosh.Token(woosh.OP, ':', 60, 23, 60, 24),
woosh.Token(woosh.NAME, 'pass', 60, 25, 60, 29),
woosh.Token(woosh.COMMENT, '# 5xx errors', 60, 40, 60, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 52, 61, 0),
woosh.Token(woosh.NAME, 'class', 61, 0, 61, 5),
woosh.Token(woosh.NAME, 'error_proto', 61, 6, 61, 17),
woosh.Token(woosh.OP, '(', 61, 17, 61, 18),
woosh.Token(woosh.NAME, 'Error', 61, 18, 61, 23),
woosh.Token(woosh.OP, ')', 61, 23, 61, 24),
woosh.Token(woosh.OP, ':', 61, 24, 61, 25),
woosh.Token(woosh.NAME, 'pass', 61, 26, 61, 30),
woosh.Token(woosh.COMMENT, '# response does not begin with [1-5]', 61, 40, 61, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 76, 62, 0),
woosh.Token(woosh.COMMENT, "# All exceptions (hopefully) that may be raised here and that aren't", 64, 0, 64, 68),
woosh.Token(woosh.COMMENT, '# (always) programming errors on our side', 65, 0, 65, 41),
woosh.Token(woosh.NAME, 'all_errors', 66, 0, 66, 10),
woosh.Token(woosh.OP, '=', 66, 11, 66, 12),
woosh.Token(woosh.OP, '(', 66, 13, 66, 14),
woosh.Token(woosh.NAME, 'Error', 66, 14, 66, 19),
woosh.Token(woosh.OP, ',', 66, 19, 66, 20),
woosh.Token(woosh.NAME, 'OSError', 66, 21, 66, 28),
woosh.Token(woosh.OP, ',', 66, 28, 66, 29),
woosh.Token(woosh.NAME, 'EOFError', 66, 30, 66, 38),
woosh.Token(woosh.OP, ')', 66, 38, 66, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 39, 67, 0),
woosh.Token(woosh.COMMENT, '# Line terminators (we always output CRLF, but accept any of CRLF, CR, LF)', 69, 0, 69, 74),
woosh.Token(woosh.NAME, 'CRLF', 70, 0, 70, 4),
woosh.Token(woosh.OP, '=', 70, 5, 70, 6),
woosh.Token(woosh.STRING, "'\\r\\n'", 70, 7, 70, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 13, 71, 0),
woosh.Token(woosh.NAME, 'B_CRLF', 71, 0, 71, 6),
woosh.Token(woosh.OP, '=', 71, 7, 71, 8),
woosh.Token(woosh.STRING, "b'\\r\\n'", 71, 9, 71, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 16, 72, 0),
woosh.Token(woosh.COMMENT, '# The class itself', 73, 0, 73, 18),
woosh.Token(woosh.NAME, 'class', 74, 0, 74, 5),
woosh.Token(woosh.NAME, 'FTP', 74, 6, 74, 9),
woosh.Token(woosh.OP, ':', 74, 9, 74, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 10, 75, 0),
woosh.Token(woosh.INDENT, '    ', 75, 0, 75, 4),
woosh.Token(woosh.STRING, "'''An FTP client class.\r\n\r\n    To create a connection, call the class using these arguments:\r\n            host, user, passwd, acct, timeout, source_address, encoding\r\n\r\n    The first four arguments are all strings, and have default value ''.\r\n    The parameter ´timeout´ must be numeric and defaults to None if not\r\n    passed, meaning that no timeout will be set on any ftp socket(s).\r\n    If a timeout is passed, then this is now the default timeout for all ftp\r\n    socket operations for this instance.\r\n    The last parameter is the encoding of filenames, which defaults to utf-8.\r\n\r\n    Then use self.connect() with optional host and port argument.\r\n\r\n    To download a file, use ftp.retrlines('RETR ' + filename),\r\n    or ftp.retrbinary() with slightly different arguments.\r\n    To upload a file, use ftp.storlines() or ftp.storbinary(),\r\n    which have an open file as argument (see their definitions\r\n    below for details).\r\n    The download/upload functions first issue appropriate TYPE\r\n    and PORT or PASV commands.\r\n    '''", 75, 4, 96, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 7, 97, 0),
woosh.Token(woosh.NAME, 'debugging', 98, 4, 98, 13),
woosh.Token(woosh.OP, '=', 98, 14, 98, 15),
woosh.Token(woosh.NUMBER, '0', 98, 16, 98, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 17, 99, 0),
woosh.Token(woosh.NAME, 'host', 99, 4, 99, 8),
woosh.Token(woosh.OP, '=', 99, 9, 99, 10),
woosh.Token(woosh.STRING, "''", 99, 11, 99, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 13, 100, 0),
woosh.Token(woosh.NAME, 'port', 100, 4, 100, 8),
woosh.Token(woosh.OP, '=', 100, 9, 100, 10),
woosh.Token(woosh.NAME, 'FTP_PORT', 100, 11, 100, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 19, 101, 0),
woosh.Token(woosh.NAME, 'maxline', 101, 4, 101, 11),
woosh.Token(woosh.OP, '=', 101, 12, 101, 13),
woosh.Token(woosh.NAME, 'MAXLINE', 101, 14, 101, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 101, 21, 102, 0),
woosh.Token(woosh.NAME, 'sock', 102, 4, 102, 8),
woosh.Token(woosh.OP, '=', 102, 9, 102, 10),
woosh.Token(woosh.NAME, 'None', 102, 11, 102, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 15, 103, 0),
woosh.Token(woosh.NAME, 'file', 103, 4, 103, 8),
woosh.Token(woosh.OP, '=', 103, 9, 103, 10),
woosh.Token(woosh.NAME, 'None', 103, 11, 103, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 103, 15, 104, 0),
woosh.Token(woosh.NAME, 'welcome', 104, 4, 104, 11),
woosh.Token(woosh.OP, '=', 104, 12, 104, 13),
woosh.Token(woosh.NAME, 'None', 104, 14, 104, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 18, 105, 0),
woosh.Token(woosh.NAME, 'passiveserver', 105, 4, 105, 17),
woosh.Token(woosh.OP, '=', 105, 18, 105, 19),
woosh.Token(woosh.NUMBER, '1', 105, 20, 105, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 21, 106, 0),
woosh.Token(woosh.NAME, 'def', 107, 4, 107, 7),
woosh.Token(woosh.NAME, '__init__', 107, 8, 107, 16),
woosh.Token(woosh.OP, '(', 107, 16, 107, 17),
woosh.Token(woosh.NAME, 'self', 107, 17, 107, 21),
woosh.Token(woosh.OP, ',', 107, 21, 107, 22),
woosh.Token(woosh.NAME, 'host', 107, 23, 107, 27),
woosh.Token(woosh.OP, '=', 107, 27, 107, 28),
woosh.Token(woosh.STRING, "''", 107, 28, 107, 30),
woosh.Token(woosh.OP, ',', 107, 30, 107, 31),
woosh.Token(woosh.NAME, 'user', 107, 32, 107, 36),
woosh.Token(woosh.OP, '=', 107, 36, 107, 37),
woosh.Token(woosh.STRING, "''", 107, 37, 107, 39),
woosh.Token(woosh.OP, ',', 107, 39, 107, 40),
woosh.Token(woosh.NAME, 'passwd', 107, 41, 107, 47),
woosh.Token(woosh.OP, '=', 107, 47, 107, 48),
woosh.Token(woosh.STRING, "''", 107, 48, 107, 50),
woosh.Token(woosh.OP, ',', 107, 50, 107, 51),
woosh.Token(woosh.NAME, 'acct', 107, 52, 107, 56),
woosh.Token(woosh.OP, '=', 107, 56, 107, 57),
woosh.Token(woosh.STRING, "''", 107, 57, 107, 59),
woosh.Token(woosh.OP, ',', 107, 59, 107, 60),
woosh.Token(woosh.NAME, 'timeout', 108, 17, 108, 24),
woosh.Token(woosh.OP, '=', 108, 24, 108, 25),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 108, 25, 108, 48),
woosh.Token(woosh.OP, ',', 108, 48, 108, 49),
woosh.Token(woosh.NAME, 'source_address', 108, 50, 108, 64),
woosh.Token(woosh.OP, '=', 108, 64, 108, 65),
woosh.Token(woosh.NAME, 'None', 108, 65, 108, 69),
woosh.Token(woosh.OP, ',', 108, 69, 108, 70),
woosh.Token(woosh.OP, '*', 108, 71, 108, 72),
woosh.Token(woosh.OP, ',', 108, 72, 108, 73),
woosh.Token(woosh.NAME, 'encoding', 109, 17, 109, 25),
woosh.Token(woosh.OP, '=', 109, 25, 109, 26),
woosh.Token(woosh.STRING, "'utf-8'", 109, 26, 109, 33),
woosh.Token(woosh.OP, ')', 109, 33, 109, 34),
woosh.Token(woosh.OP, ':', 109, 34, 109, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 35, 110, 0),
woosh.Token(woosh.INDENT, '        ', 110, 0, 110, 8),
woosh.Token(woosh.STRING, '"""Initialization method (called by class instantiation).\r\n        Initialize host to localhost, port to standard ftp port.\r\n        Optional arguments are host (for connect()),\r\n        and user, passwd, acct (for login()).\r\n        """', 110, 8, 114, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 11, 115, 0),
woosh.Token(woosh.NAME, 'self', 115, 8, 115, 12),
woosh.Token(woosh.OP, '.', 115, 12, 115, 13),
woosh.Token(woosh.NAME, 'encoding', 115, 13, 115, 21),
woosh.Token(woosh.OP, '=', 115, 22, 115, 23),
woosh.Token(woosh.NAME, 'encoding', 115, 24, 115, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 32, 116, 0),
woosh.Token(woosh.NAME, 'self', 116, 8, 116, 12),
woosh.Token(woosh.OP, '.', 116, 12, 116, 13),
woosh.Token(woosh.NAME, 'source_address', 116, 13, 116, 27),
woosh.Token(woosh.OP, '=', 116, 28, 116, 29),
woosh.Token(woosh.NAME, 'source_address', 116, 30, 116, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 44, 117, 0),
woosh.Token(woosh.NAME, 'self', 117, 8, 117, 12),
woosh.Token(woosh.OP, '.', 117, 12, 117, 13),
woosh.Token(woosh.NAME, 'timeout', 117, 13, 117, 20),
woosh.Token(woosh.OP, '=', 117, 21, 117, 22),
woosh.Token(woosh.NAME, 'timeout', 117, 23, 117, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 30, 118, 0),
woosh.Token(woosh.NAME, 'if', 118, 8, 118, 10),
woosh.Token(woosh.NAME, 'host', 118, 11, 118, 15),
woosh.Token(woosh.OP, ':', 118, 15, 118, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 16, 119, 0),
woosh.Token(woosh.INDENT, '            ', 119, 0, 119, 12),
woosh.Token(woosh.NAME, 'self', 119, 12, 119, 16),
woosh.Token(woosh.OP, '.', 119, 16, 119, 17),
woosh.Token(woosh.NAME, 'connect', 119, 17, 119, 24),
woosh.Token(woosh.OP, '(', 119, 24, 119, 25),
woosh.Token(woosh.NAME, 'host', 119, 25, 119, 29),
woosh.Token(woosh.OP, ')', 119, 29, 119, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 30, 120, 0),
woosh.Token(woosh.NAME, 'if', 120, 12, 120, 14),
woosh.Token(woosh.NAME, 'user', 120, 15, 120, 19),
woosh.Token(woosh.OP, ':', 120, 19, 120, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 20, 121, 0),
woosh.Token(woosh.INDENT, '                ', 121, 0, 121, 16),
woosh.Token(woosh.NAME, 'self', 121, 16, 121, 20),
woosh.Token(woosh.OP, '.', 121, 20, 121, 21),
woosh.Token(woosh.NAME, 'login', 121, 21, 121, 26),
woosh.Token(woosh.OP, '(', 121, 26, 121, 27),
woosh.Token(woosh.NAME, 'user', 121, 27, 121, 31),
woosh.Token(woosh.OP, ',', 121, 31, 121, 32),
woosh.Token(woosh.NAME, 'passwd', 121, 33, 121, 39),
woosh.Token(woosh.OP, ',', 121, 39, 121, 40),
woosh.Token(woosh.NAME, 'acct', 121, 41, 121, 45),
woosh.Token(woosh.OP, ')', 121, 45, 121, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 46, 122, 0),
woosh.Token(woosh.DEDENT, '    ', 123, 0, 123, 4),
woosh.Token(woosh.DEDENT, '', 123, 4, 123, 4),
woosh.Token(woosh.DEDENT, '', 123, 4, 123, 4),
woosh.Token(woosh.NAME, 'def', 123, 4, 123, 7),
woosh.Token(woosh.NAME, '__enter__', 123, 8, 123, 17),
woosh.Token(woosh.OP, '(', 123, 17, 123, 18),
woosh.Token(woosh.NAME, 'self', 123, 18, 123, 22),
woosh.Token(woosh.OP, ')', 123, 22, 123, 23),
woosh.Token(woosh.OP, ':', 123, 23, 123, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 24, 124, 0),
woosh.Token(woosh.INDENT, '        ', 124, 0, 124, 8),
woosh.Token(woosh.NAME, 'return', 124, 8, 124, 14),
woosh.Token(woosh.NAME, 'self', 124, 15, 124, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 19, 125, 0),
woosh.Token(woosh.COMMENT, '# Context management protocol: try to quit() if active', 126, 4, 126, 58),
woosh.Token(woosh.DEDENT, '    ', 127, 0, 127, 4),
woosh.Token(woosh.NAME, 'def', 127, 4, 127, 7),
woosh.Token(woosh.NAME, '__exit__', 127, 8, 127, 16),
woosh.Token(woosh.OP, '(', 127, 16, 127, 17),
woosh.Token(woosh.NAME, 'self', 127, 17, 127, 21),
woosh.Token(woosh.OP, ',', 127, 21, 127, 22),
woosh.Token(woosh.OP, '*', 127, 23, 127, 24),
woosh.Token(woosh.NAME, 'args', 127, 24, 127, 28),
woosh.Token(woosh.OP, ')', 127, 28, 127, 29),
woosh.Token(woosh.OP, ':', 127, 29, 127, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 30, 128, 0),
woosh.Token(woosh.INDENT, '        ', 128, 0, 128, 8),
woosh.Token(woosh.NAME, 'if', 128, 8, 128, 10),
woosh.Token(woosh.NAME, 'self', 128, 11, 128, 15),
woosh.Token(woosh.OP, '.', 128, 15, 128, 16),
woosh.Token(woosh.NAME, 'sock', 128, 16, 128, 20),
woosh.Token(woosh.NAME, 'is', 128, 21, 128, 23),
woosh.Token(woosh.NAME, 'not', 128, 24, 128, 27),
woosh.Token(woosh.NAME, 'None', 128, 28, 128, 32),
woosh.Token(woosh.OP, ':', 128, 32, 128, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 33, 129, 0),
woosh.Token(woosh.INDENT, '            ', 129, 0, 129, 12),
woosh.Token(woosh.NAME, 'try', 129, 12, 129, 15),
woosh.Token(woosh.OP, ':', 129, 15, 129, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 16, 130, 0),
woosh.Token(woosh.INDENT, '                ', 130, 0, 130, 16),
woosh.Token(woosh.NAME, 'self', 130, 16, 130, 20),
woosh.Token(woosh.OP, '.', 130, 20, 130, 21),
woosh.Token(woosh.NAME, 'quit', 130, 21, 130, 25),
woosh.Token(woosh.OP, '(', 130, 25, 130, 26),
woosh.Token(woosh.OP, ')', 130, 26, 130, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 27, 131, 0),
woosh.Token(woosh.DEDENT, '            ', 131, 0, 131, 12),
woosh.Token(woosh.NAME, 'except', 131, 12, 131, 18),
woosh.Token(woosh.OP, '(', 131, 19, 131, 20),
woosh.Token(woosh.NAME, 'OSError', 131, 20, 131, 27),
woosh.Token(woosh.OP, ',', 131, 27, 131, 28),
woosh.Token(woosh.NAME, 'EOFError', 131, 29, 131, 37),
woosh.Token(woosh.OP, ')', 131, 37, 131, 38),
woosh.Token(woosh.OP, ':', 131, 38, 131, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 39, 132, 0),
woosh.Token(woosh.INDENT, '                ', 132, 0, 132, 16),
woosh.Token(woosh.NAME, 'pass', 132, 16, 132, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 20, 133, 0),
woosh.Token(woosh.DEDENT, '            ', 133, 0, 133, 12),
woosh.Token(woosh.NAME, 'finally', 133, 12, 133, 19),
woosh.Token(woosh.OP, ':', 133, 19, 133, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 20, 134, 0),
woosh.Token(woosh.INDENT, '                ', 134, 0, 134, 16),
woosh.Token(woosh.NAME, 'if', 134, 16, 134, 18),
woosh.Token(woosh.NAME, 'self', 134, 19, 134, 23),
woosh.Token(woosh.OP, '.', 134, 23, 134, 24),
woosh.Token(woosh.NAME, 'sock', 134, 24, 134, 28),
woosh.Token(woosh.NAME, 'is', 134, 29, 134, 31),
woosh.Token(woosh.NAME, 'not', 134, 32, 134, 35),
woosh.Token(woosh.NAME, 'None', 134, 36, 134, 40),
woosh.Token(woosh.OP, ':', 134, 40, 134, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 41, 135, 0),
woosh.Token(woosh.INDENT, '                    ', 135, 0, 135, 20),
woosh.Token(woosh.NAME, 'self', 135, 20, 135, 24),
woosh.Token(woosh.OP, '.', 135, 24, 135, 25),
woosh.Token(woosh.NAME, 'close', 135, 25, 135, 30),
woosh.Token(woosh.OP, '(', 135, 30, 135, 31),
woosh.Token(woosh.OP, ')', 135, 31, 135, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 32, 136, 0),
woosh.Token(woosh.DEDENT, '    ', 137, 0, 137, 4),
woosh.Token(woosh.DEDENT, '', 137, 4, 137, 4),
woosh.Token(woosh.DEDENT, '', 137, 4, 137, 4),
woosh.Token(woosh.DEDENT, '', 137, 4, 137, 4),
woosh.Token(woosh.NAME, 'def', 137, 4, 137, 7),
woosh.Token(woosh.NAME, 'connect', 137, 8, 137, 15),
woosh.Token(woosh.OP, '(', 137, 15, 137, 16),
woosh.Token(woosh.NAME, 'self', 137, 16, 137, 20),
woosh.Token(woosh.OP, ',', 137, 20, 137, 21),
woosh.Token(woosh.NAME, 'host', 137, 22, 137, 26),
woosh.Token(woosh.OP, '=', 137, 26, 137, 27),
woosh.Token(woosh.STRING, "''", 137, 27, 137, 29),
woosh.Token(woosh.OP, ',', 137, 29, 137, 30),
woosh.Token(woosh.NAME, 'port', 137, 31, 137, 35),
woosh.Token(woosh.OP, '=', 137, 35, 137, 36),
woosh.Token(woosh.NUMBER, '0', 137, 36, 137, 37),
woosh.Token(woosh.OP, ',', 137, 37, 137, 38),
woosh.Token(woosh.NAME, 'timeout', 137, 39, 137, 46),
woosh.Token(woosh.OP, '=', 137, 46, 137, 47),
woosh.Token(woosh.OP, '-', 137, 47, 137, 48),
woosh.Token(woosh.NUMBER, '999', 137, 48, 137, 51),
woosh.Token(woosh.OP, ',', 137, 51, 137, 52),
woosh.Token(woosh.NAME, 'source_address', 137, 53, 137, 67),
woosh.Token(woosh.OP, '=', 137, 67, 137, 68),
woosh.Token(woosh.NAME, 'None', 137, 68, 137, 72),
woosh.Token(woosh.OP, ')', 137, 72, 137, 73),
woosh.Token(woosh.OP, ':', 137, 73, 137, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 74, 138, 0),
woosh.Token(woosh.INDENT, '        ', 138, 0, 138, 8),
woosh.Token(woosh.STRING, "'''Connect to host.  Arguments are:\r\n         - host: hostname to connect to (string, default previous host)\r\n         - port: port to connect to (integer, default previous port)\r\n         - timeout: the timeout to set against the ftp socket(s)\r\n         - source_address: a 2-tuple (host, port) for the socket to bind\r\n           to as its source address before connecting.\r\n        '''", 138, 8, 144, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 11, 145, 0),
woosh.Token(woosh.NAME, 'if', 145, 8, 145, 10),
woosh.Token(woosh.NAME, 'host', 145, 11, 145, 15),
woosh.Token(woosh.OP, '!=', 145, 16, 145, 18),
woosh.Token(woosh.STRING, "''", 145, 19, 145, 21),
woosh.Token(woosh.OP, ':', 145, 21, 145, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 22, 146, 0),
woosh.Token(woosh.INDENT, '            ', 146, 0, 146, 12),
woosh.Token(woosh.NAME, 'self', 146, 12, 146, 16),
woosh.Token(woosh.OP, '.', 146, 16, 146, 17),
woosh.Token(woosh.NAME, 'host', 146, 17, 146, 21),
woosh.Token(woosh.OP, '=', 146, 22, 146, 23),
woosh.Token(woosh.NAME, 'host', 146, 24, 146, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 28, 147, 0),
woosh.Token(woosh.DEDENT, '        ', 147, 0, 147, 8),
woosh.Token(woosh.NAME, 'if', 147, 8, 147, 10),
woosh.Token(woosh.NAME, 'port', 147, 11, 147, 15),
woosh.Token(woosh.OP, '>', 147, 16, 147, 17),
woosh.Token(woosh.NUMBER, '0', 147, 18, 147, 19),
woosh.Token(woosh.OP, ':', 147, 19, 147, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 20, 148, 0),
woosh.Token(woosh.INDENT, '            ', 148, 0, 148, 12),
woosh.Token(woosh.NAME, 'self', 148, 12, 148, 16),
woosh.Token(woosh.OP, '.', 148, 16, 148, 17),
woosh.Token(woosh.NAME, 'port', 148, 17, 148, 21),
woosh.Token(woosh.OP, '=', 148, 22, 148, 23),
woosh.Token(woosh.NAME, 'port', 148, 24, 148, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 28, 149, 0),
woosh.Token(woosh.DEDENT, '        ', 149, 0, 149, 8),
woosh.Token(woosh.NAME, 'if', 149, 8, 149, 10),
woosh.Token(woosh.NAME, 'timeout', 149, 11, 149, 18),
woosh.Token(woosh.OP, '!=', 149, 19, 149, 21),
woosh.Token(woosh.OP, '-', 149, 22, 149, 23),
woosh.Token(woosh.NUMBER, '999', 149, 23, 149, 26),
woosh.Token(woosh.OP, ':', 149, 26, 149, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 27, 150, 0),
woosh.Token(woosh.INDENT, '            ', 150, 0, 150, 12),
woosh.Token(woosh.NAME, 'self', 150, 12, 150, 16),
woosh.Token(woosh.OP, '.', 150, 16, 150, 17),
woosh.Token(woosh.NAME, 'timeout', 150, 17, 150, 24),
woosh.Token(woosh.OP, '=', 150, 25, 150, 26),
woosh.Token(woosh.NAME, 'timeout', 150, 27, 150, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 34, 151, 0),
woosh.Token(woosh.DEDENT, '        ', 151, 0, 151, 8),
woosh.Token(woosh.NAME, 'if', 151, 8, 151, 10),
woosh.Token(woosh.NAME, 'self', 151, 11, 151, 15),
woosh.Token(woosh.OP, '.', 151, 15, 151, 16),
woosh.Token(woosh.NAME, 'timeout', 151, 16, 151, 23),
woosh.Token(woosh.NAME, 'is', 151, 24, 151, 26),
woosh.Token(woosh.NAME, 'not', 151, 27, 151, 30),
woosh.Token(woosh.NAME, 'None', 151, 31, 151, 35),
woosh.Token(woosh.NAME, 'and', 151, 36, 151, 39),
woosh.Token(woosh.NAME, 'not', 151, 40, 151, 43),
woosh.Token(woosh.NAME, 'self', 151, 44, 151, 48),
woosh.Token(woosh.OP, '.', 151, 48, 151, 49),
woosh.Token(woosh.NAME, 'timeout', 151, 49, 151, 56),
woosh.Token(woosh.OP, ':', 151, 56, 151, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 57, 152, 0),
woosh.Token(woosh.INDENT, '            ', 152, 0, 152, 12),
woosh.Token(woosh.NAME, 'raise', 152, 12, 152, 17),
woosh.Token(woosh.NAME, 'ValueError', 152, 18, 152, 28),
woosh.Token(woosh.OP, '(', 152, 28, 152, 29),
woosh.Token(woosh.STRING, "'Non-blocking socket (timeout=0) is not supported'", 152, 29, 152, 79),
woosh.Token(woosh.OP, ')', 152, 79, 152, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 80, 153, 0),
woosh.Token(woosh.DEDENT, '        ', 153, 0, 153, 8),
woosh.Token(woosh.NAME, 'if', 153, 8, 153, 10),
woosh.Token(woosh.NAME, 'source_address', 153, 11, 153, 25),
woosh.Token(woosh.NAME, 'is', 153, 26, 153, 28),
woosh.Token(woosh.NAME, 'not', 153, 29, 153, 32),
woosh.Token(woosh.NAME, 'None', 153, 33, 153, 37),
woosh.Token(woosh.OP, ':', 153, 37, 153, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 38, 154, 0),
woosh.Token(woosh.INDENT, '            ', 154, 0, 154, 12),
woosh.Token(woosh.NAME, 'self', 154, 12, 154, 16),
woosh.Token(woosh.OP, '.', 154, 16, 154, 17),
woosh.Token(woosh.NAME, 'source_address', 154, 17, 154, 31),
woosh.Token(woosh.OP, '=', 154, 32, 154, 33),
woosh.Token(woosh.NAME, 'source_address', 154, 34, 154, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 48, 155, 0),
woosh.Token(woosh.DEDENT, '        ', 155, 0, 155, 8),
woosh.Token(woosh.NAME, 'sys', 155, 8, 155, 11),
woosh.Token(woosh.OP, '.', 155, 11, 155, 12),
woosh.Token(woosh.NAME, 'audit', 155, 12, 155, 17),
woosh.Token(woosh.OP, '(', 155, 17, 155, 18),
woosh.Token(woosh.STRING, '"ftplib.connect"', 155, 18, 155, 34),
woosh.Token(woosh.OP, ',', 155, 34, 155, 35),
woosh.Token(woosh.NAME, 'self', 155, 36, 155, 40),
woosh.Token(woosh.OP, ',', 155, 40, 155, 41),
woosh.Token(woosh.NAME, 'self', 155, 42, 155, 46),
woosh.Token(woosh.OP, '.', 155, 46, 155, 47),
woosh.Token(woosh.NAME, 'host', 155, 47, 155, 51),
woosh.Token(woosh.OP, ',', 155, 51, 155, 52),
woosh.Token(woosh.NAME, 'self', 155, 53, 155, 57),
woosh.Token(woosh.OP, '.', 155, 57, 155, 58),
woosh.Token(woosh.NAME, 'port', 155, 58, 155, 62),
woosh.Token(woosh.OP, ')', 155, 62, 155, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 155, 63, 156, 0),
woosh.Token(woosh.NAME, 'self', 156, 8, 156, 12),
woosh.Token(woosh.OP, '.', 156, 12, 156, 13),
woosh.Token(woosh.NAME, 'sock', 156, 13, 156, 17),
woosh.Token(woosh.OP, '=', 156, 18, 156, 19),
woosh.Token(woosh.NAME, 'socket', 156, 20, 156, 26),
woosh.Token(woosh.OP, '.', 156, 26, 156, 27),
woosh.Token(woosh.NAME, 'create_connection', 156, 27, 156, 44),
woosh.Token(woosh.OP, '(', 156, 44, 156, 45),
woosh.Token(woosh.OP, '(', 156, 45, 156, 46),
woosh.Token(woosh.NAME, 'self', 156, 46, 156, 50),
woosh.Token(woosh.OP, '.', 156, 50, 156, 51),
woosh.Token(woosh.NAME, 'host', 156, 51, 156, 55),
woosh.Token(woosh.OP, ',', 156, 55, 156, 56),
woosh.Token(woosh.NAME, 'self', 156, 57, 156, 61),
woosh.Token(woosh.OP, '.', 156, 61, 156, 62),
woosh.Token(woosh.NAME, 'port', 156, 62, 156, 66),
woosh.Token(woosh.OP, ')', 156, 66, 156, 67),
woosh.Token(woosh.OP, ',', 156, 67, 156, 68),
woosh.Token(woosh.NAME, 'self', 156, 69, 156, 73),
woosh.Token(woosh.OP, '.', 156, 73, 156, 74),
woosh.Token(woosh.NAME, 'timeout', 156, 74, 156, 81),
woosh.Token(woosh.OP, ',', 156, 81, 156, 82),
woosh.Token(woosh.NAME, 'source_address', 157, 45, 157, 59),
woosh.Token(woosh.OP, '=', 157, 59, 157, 60),
woosh.Token(woosh.NAME, 'self', 157, 60, 157, 64),
woosh.Token(woosh.OP, '.', 157, 64, 157, 65),
woosh.Token(woosh.NAME, 'source_address', 157, 65, 157, 79),
woosh.Token(woosh.OP, ')', 157, 79, 157, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 157, 80, 158, 0),
woosh.Token(woosh.NAME, 'self', 158, 8, 158, 12),
woosh.Token(woosh.OP, '.', 158, 12, 158, 13),
woosh.Token(woosh.NAME, 'af', 158, 13, 158, 15),
woosh.Token(woosh.OP, '=', 158, 16, 158, 17),
woosh.Token(woosh.NAME, 'self', 158, 18, 158, 22),
woosh.Token(woosh.OP, '.', 158, 22, 158, 23),
woosh.Token(woosh.NAME, 'sock', 158, 23, 158, 27),
woosh.Token(woosh.OP, '.', 158, 27, 158, 28),
woosh.Token(woosh.NAME, 'family', 158, 28, 158, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 34, 159, 0),
woosh.Token(woosh.NAME, 'self', 159, 8, 159, 12),
woosh.Token(woosh.OP, '.', 159, 12, 159, 13),
woosh.Token(woosh.NAME, 'file', 159, 13, 159, 17),
woosh.Token(woosh.OP, '=', 159, 18, 159, 19),
woosh.Token(woosh.NAME, 'self', 159, 20, 159, 24),
woosh.Token(woosh.OP, '.', 159, 24, 159, 25),
woosh.Token(woosh.NAME, 'sock', 159, 25, 159, 29),
woosh.Token(woosh.OP, '.', 159, 29, 159, 30),
woosh.Token(woosh.NAME, 'makefile', 159, 30, 159, 38),
woosh.Token(woosh.OP, '(', 159, 38, 159, 39),
woosh.Token(woosh.STRING, "'r'", 159, 39, 159, 42),
woosh.Token(woosh.OP, ',', 159, 42, 159, 43),
woosh.Token(woosh.NAME, 'encoding', 159, 44, 159, 52),
woosh.Token(woosh.OP, '=', 159, 52, 159, 53),
woosh.Token(woosh.NAME, 'self', 159, 53, 159, 57),
woosh.Token(woosh.OP, '.', 159, 57, 159, 58),
woosh.Token(woosh.NAME, 'encoding', 159, 58, 159, 66),
woosh.Token(woosh.OP, ')', 159, 66, 159, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 159, 67, 160, 0),
woosh.Token(woosh.NAME, 'self', 160, 8, 160, 12),
woosh.Token(woosh.OP, '.', 160, 12, 160, 13),
woosh.Token(woosh.NAME, 'welcome', 160, 13, 160, 20),
woosh.Token(woosh.OP, '=', 160, 21, 160, 22),
woosh.Token(woosh.NAME, 'self', 160, 23, 160, 27),
woosh.Token(woosh.OP, '.', 160, 27, 160, 28),
woosh.Token(woosh.NAME, 'getresp', 160, 28, 160, 35),
woosh.Token(woosh.OP, '(', 160, 35, 160, 36),
woosh.Token(woosh.OP, ')', 160, 36, 160, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 37, 161, 0),
woosh.Token(woosh.NAME, 'return', 161, 8, 161, 14),
woosh.Token(woosh.NAME, 'self', 161, 15, 161, 19),
woosh.Token(woosh.OP, '.', 161, 19, 161, 20),
woosh.Token(woosh.NAME, 'welcome', 161, 20, 161, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 161, 27, 162, 0),
woosh.Token(woosh.DEDENT, '    ', 163, 0, 163, 4),
woosh.Token(woosh.NAME, 'def', 163, 4, 163, 7),
woosh.Token(woosh.NAME, 'getwelcome', 163, 8, 163, 18),
woosh.Token(woosh.OP, '(', 163, 18, 163, 19),
woosh.Token(woosh.NAME, 'self', 163, 19, 163, 23),
woosh.Token(woosh.OP, ')', 163, 23, 163, 24),
woosh.Token(woosh.OP, ':', 163, 24, 163, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 25, 164, 0),
woosh.Token(woosh.INDENT, '        ', 164, 0, 164, 8),
woosh.Token(woosh.STRING, "'''Get the welcome message from the server.\r\n        (this is read and squirreled away by connect())'''", 164, 8, 165, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 58, 166, 0),
woosh.Token(woosh.NAME, 'if', 166, 8, 166, 10),
woosh.Token(woosh.NAME, 'self', 166, 11, 166, 15),
woosh.Token(woosh.OP, '.', 166, 15, 166, 16),
woosh.Token(woosh.NAME, 'debugging', 166, 16, 166, 25),
woosh.Token(woosh.OP, ':', 166, 25, 166, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 26, 167, 0),
woosh.Token(woosh.INDENT, '            ', 167, 0, 167, 12),
woosh.Token(woosh.NAME, 'print', 167, 12, 167, 17),
woosh.Token(woosh.OP, '(', 167, 17, 167, 18),
woosh.Token(woosh.STRING, "'*welcome*'", 167, 18, 167, 29),
woosh.Token(woosh.OP, ',', 167, 29, 167, 30),
woosh.Token(woosh.NAME, 'self', 167, 31, 167, 35),
woosh.Token(woosh.OP, '.', 167, 35, 167, 36),
woosh.Token(woosh.NAME, 'sanitize', 167, 36, 167, 44),
woosh.Token(woosh.OP, '(', 167, 44, 167, 45),
woosh.Token(woosh.NAME, 'self', 167, 45, 167, 49),
woosh.Token(woosh.OP, '.', 167, 49, 167, 50),
woosh.Token(woosh.NAME, 'welcome', 167, 50, 167, 57),
woosh.Token(woosh.OP, ')', 167, 57, 167, 58),
woosh.Token(woosh.OP, ')', 167, 58, 167, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 59, 168, 0),
woosh.Token(woosh.DEDENT, '        ', 168, 0, 168, 8),
woosh.Token(woosh.NAME, 'return', 168, 8, 168, 14),
woosh.Token(woosh.NAME, 'self', 168, 15, 168, 19),
woosh.Token(woosh.OP, '.', 168, 19, 168, 20),
woosh.Token(woosh.NAME, 'welcome', 168, 20, 168, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 27, 169, 0),
woosh.Token(woosh.DEDENT, '    ', 170, 0, 170, 4),
woosh.Token(woosh.NAME, 'def', 170, 4, 170, 7),
woosh.Token(woosh.NAME, 'set_debuglevel', 170, 8, 170, 22),
woosh.Token(woosh.OP, '(', 170, 22, 170, 23),
woosh.Token(woosh.NAME, 'self', 170, 23, 170, 27),
woosh.Token(woosh.OP, ',', 170, 27, 170, 28),
woosh.Token(woosh.NAME, 'level', 170, 29, 170, 34),
woosh.Token(woosh.OP, ')', 170, 34, 170, 35),
woosh.Token(woosh.OP, ':', 170, 35, 170, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 36, 171, 0),
woosh.Token(woosh.INDENT, '        ', 171, 0, 171, 8),
woosh.Token(woosh.STRING, "'''Set the debugging level.\r\n        The required argument level means:\r\n        0: no debugging output (default)\r\n        1: print commands and responses but not body text etc.\r\n        2: also print raw lines read and sent before stripping CR/LF'''", 171, 8, 175, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 71, 176, 0),
woosh.Token(woosh.NAME, 'self', 176, 8, 176, 12),
woosh.Token(woosh.OP, '.', 176, 12, 176, 13),
woosh.Token(woosh.NAME, 'debugging', 176, 13, 176, 22),
woosh.Token(woosh.OP, '=', 176, 23, 176, 24),
woosh.Token(woosh.NAME, 'level', 176, 25, 176, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 30, 177, 0),
woosh.Token(woosh.DEDENT, '    ', 177, 0, 177, 4),
woosh.Token(woosh.NAME, 'debug', 177, 4, 177, 9),
woosh.Token(woosh.OP, '=', 177, 10, 177, 11),
woosh.Token(woosh.NAME, 'set_debuglevel', 177, 12, 177, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 26, 178, 0),
woosh.Token(woosh.NAME, 'def', 179, 4, 179, 7),
woosh.Token(woosh.NAME, 'set_pasv', 179, 8, 179, 16),
woosh.Token(woosh.OP, '(', 179, 16, 179, 17),
woosh.Token(woosh.NAME, 'self', 179, 17, 179, 21),
woosh.Token(woosh.OP, ',', 179, 21, 179, 22),
woosh.Token(woosh.NAME, 'val', 179, 23, 179, 26),
woosh.Token(woosh.OP, ')', 179, 26, 179, 27),
woosh.Token(woosh.OP, ':', 179, 27, 179, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 28, 180, 0),
woosh.Token(woosh.INDENT, '        ', 180, 0, 180, 8),
woosh.Token(woosh.STRING, "'''Use passive or active mode for data transfers.\r\n        With a false argument, use the normal PORT mode,\r\n        With a true argument, use the PASV command.'''", 180, 8, 182, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 54, 183, 0),
woosh.Token(woosh.NAME, 'self', 183, 8, 183, 12),
woosh.Token(woosh.OP, '.', 183, 12, 183, 13),
woosh.Token(woosh.NAME, 'passiveserver', 183, 13, 183, 26),
woosh.Token(woosh.OP, '=', 183, 27, 183, 28),
woosh.Token(woosh.NAME, 'val', 183, 29, 183, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 32, 184, 0),
woosh.Token(woosh.COMMENT, '# Internal: "sanitize" a string for printing', 185, 4, 185, 48),
woosh.Token(woosh.DEDENT, '    ', 186, 0, 186, 4),
woosh.Token(woosh.NAME, 'def', 186, 4, 186, 7),
woosh.Token(woosh.NAME, 'sanitize', 186, 8, 186, 16),
woosh.Token(woosh.OP, '(', 186, 16, 186, 17),
woosh.Token(woosh.NAME, 'self', 186, 17, 186, 21),
woosh.Token(woosh.OP, ',', 186, 21, 186, 22),
woosh.Token(woosh.NAME, 's', 186, 23, 186, 24),
woosh.Token(woosh.OP, ')', 186, 24, 186, 25),
woosh.Token(woosh.OP, ':', 186, 25, 186, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 26, 187, 0),
woosh.Token(woosh.INDENT, '        ', 187, 0, 187, 8),
woosh.Token(woosh.NAME, 'if', 187, 8, 187, 10),
woosh.Token(woosh.NAME, 's', 187, 11, 187, 12),
woosh.Token(woosh.OP, '[', 187, 12, 187, 13),
woosh.Token(woosh.OP, ':', 187, 13, 187, 14),
woosh.Token(woosh.NUMBER, '5', 187, 14, 187, 15),
woosh.Token(woosh.OP, ']', 187, 15, 187, 16),
woosh.Token(woosh.NAME, 'in', 187, 17, 187, 19),
woosh.Token(woosh.OP, '{', 187, 20, 187, 21),
woosh.Token(woosh.STRING, "'pass '", 187, 21, 187, 28),
woosh.Token(woosh.OP, ',', 187, 28, 187, 29),
woosh.Token(woosh.STRING, "'PASS '", 187, 30, 187, 37),
woosh.Token(woosh.OP, '}', 187, 37, 187, 38),
woosh.Token(woosh.OP, ':', 187, 38, 187, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 39, 188, 0),
woosh.Token(woosh.INDENT, '            ', 188, 0, 188, 12),
woosh.Token(woosh.NAME, 'i', 188, 12, 188, 13),
woosh.Token(woosh.OP, '=', 188, 14, 188, 15),
woosh.Token(woosh.NAME, 'len', 188, 16, 188, 19),
woosh.Token(woosh.OP, '(', 188, 19, 188, 20),
woosh.Token(woosh.NAME, 's', 188, 20, 188, 21),
woosh.Token(woosh.OP, '.', 188, 21, 188, 22),
woosh.Token(woosh.NAME, 'rstrip', 188, 22, 188, 28),
woosh.Token(woosh.OP, '(', 188, 28, 188, 29),
woosh.Token(woosh.STRING, "'\\r\\n'", 188, 29, 188, 35),
woosh.Token(woosh.OP, ')', 188, 35, 188, 36),
woosh.Token(woosh.OP, ')', 188, 36, 188, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 37, 189, 0),
woosh.Token(woosh.NAME, 's', 189, 12, 189, 13),
woosh.Token(woosh.OP, '=', 189, 14, 189, 15),
woosh.Token(woosh.NAME, 's', 189, 16, 189, 17),
woosh.Token(woosh.OP, '[', 189, 17, 189, 18),
woosh.Token(woosh.OP, ':', 189, 18, 189, 19),
woosh.Token(woosh.NUMBER, '5', 189, 19, 189, 20),
woosh.Token(woosh.OP, ']', 189, 20, 189, 21),
woosh.Token(woosh.OP, '+', 189, 22, 189, 23),
woosh.Token(woosh.STRING, "'*'", 189, 24, 189, 27),
woosh.Token(woosh.OP, '*', 189, 27, 189, 28),
woosh.Token(woosh.OP, '(', 189, 28, 189, 29),
woosh.Token(woosh.NAME, 'i', 189, 29, 189, 30),
woosh.Token(woosh.OP, '-', 189, 30, 189, 31),
woosh.Token(woosh.NUMBER, '5', 189, 31, 189, 32),
woosh.Token(woosh.OP, ')', 189, 32, 189, 33),
woosh.Token(woosh.OP, '+', 189, 34, 189, 35),
woosh.Token(woosh.NAME, 's', 189, 36, 189, 37),
woosh.Token(woosh.OP, '[', 189, 37, 189, 38),
woosh.Token(woosh.NAME, 'i', 189, 38, 189, 39),
woosh.Token(woosh.OP, ':', 189, 39, 189, 40),
woosh.Token(woosh.OP, ']', 189, 40, 189, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 189, 41, 190, 0),
woosh.Token(woosh.DEDENT, '        ', 190, 0, 190, 8),
woosh.Token(woosh.NAME, 'return', 190, 8, 190, 14),
woosh.Token(woosh.NAME, 'repr', 190, 15, 190, 19),
woosh.Token(woosh.OP, '(', 190, 19, 190, 20),
woosh.Token(woosh.NAME, 's', 190, 20, 190, 21),
woosh.Token(woosh.OP, ')', 190, 21, 190, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 22, 191, 0),
woosh.Token(woosh.COMMENT, '# Internal: send one line to the server, appending CRLF', 192, 4, 192, 59),
woosh.Token(woosh.DEDENT, '    ', 193, 0, 193, 4),
woosh.Token(woosh.NAME, 'def', 193, 4, 193, 7),
woosh.Token(woosh.NAME, 'putline', 193, 8, 193, 15),
woosh.Token(woosh.OP, '(', 193, 15, 193, 16),
woosh.Token(woosh.NAME, 'self', 193, 16, 193, 20),
woosh.Token(woosh.OP, ',', 193, 20, 193, 21),
woosh.Token(woosh.NAME, 'line', 193, 22, 193, 26),
woosh.Token(woosh.OP, ')', 193, 26, 193, 27),
woosh.Token(woosh.OP, ':', 193, 27, 193, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 28, 194, 0),
woosh.Token(woosh.INDENT, '        ', 194, 0, 194, 8),
woosh.Token(woosh.NAME, 'if', 194, 8, 194, 10),
woosh.Token(woosh.STRING, "'\\r'", 194, 11, 194, 15),
woosh.Token(woosh.NAME, 'in', 194, 16, 194, 18),
woosh.Token(woosh.NAME, 'line', 194, 19, 194, 23),
woosh.Token(woosh.NAME, 'or', 194, 24, 194, 26),
woosh.Token(woosh.STRING, "'\\n'", 194, 27, 194, 31),
woosh.Token(woosh.NAME, 'in', 194, 32, 194, 34),
woosh.Token(woosh.NAME, 'line', 194, 35, 194, 39),
woosh.Token(woosh.OP, ':', 194, 39, 194, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 40, 195, 0),
woosh.Token(woosh.INDENT, '            ', 195, 0, 195, 12),
woosh.Token(woosh.NAME, 'raise', 195, 12, 195, 17),
woosh.Token(woosh.NAME, 'ValueError', 195, 18, 195, 28),
woosh.Token(woosh.OP, '(', 195, 28, 195, 29),
woosh.Token(woosh.STRING, "'an illegal newline character should not be contained'", 195, 29, 195, 83),
woosh.Token(woosh.OP, ')', 195, 83, 195, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 84, 196, 0),
woosh.Token(woosh.DEDENT, '        ', 196, 0, 196, 8),
woosh.Token(woosh.NAME, 'sys', 196, 8, 196, 11),
woosh.Token(woosh.OP, '.', 196, 11, 196, 12),
woosh.Token(woosh.NAME, 'audit', 196, 12, 196, 17),
woosh.Token(woosh.OP, '(', 196, 17, 196, 18),
woosh.Token(woosh.STRING, '"ftplib.sendcmd"', 196, 18, 196, 34),
woosh.Token(woosh.OP, ',', 196, 34, 196, 35),
woosh.Token(woosh.NAME, 'self', 196, 36, 196, 40),
woosh.Token(woosh.OP, ',', 196, 40, 196, 41),
woosh.Token(woosh.NAME, 'line', 196, 42, 196, 46),
woosh.Token(woosh.OP, ')', 196, 46, 196, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 47, 197, 0),
woosh.Token(woosh.NAME, 'line', 197, 8, 197, 12),
woosh.Token(woosh.OP, '=', 197, 13, 197, 14),
woosh.Token(woosh.NAME, 'line', 197, 15, 197, 19),
woosh.Token(woosh.OP, '+', 197, 20, 197, 21),
woosh.Token(woosh.NAME, 'CRLF', 197, 22, 197, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 26, 198, 0),
woosh.Token(woosh.NAME, 'if', 198, 8, 198, 10),
woosh.Token(woosh.NAME, 'self', 198, 11, 198, 15),
woosh.Token(woosh.OP, '.', 198, 15, 198, 16),
woosh.Token(woosh.NAME, 'debugging', 198, 16, 198, 25),
woosh.Token(woosh.OP, '>', 198, 26, 198, 27),
woosh.Token(woosh.NUMBER, '1', 198, 28, 198, 29),
woosh.Token(woosh.OP, ':', 198, 29, 198, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 30, 199, 0),
woosh.Token(woosh.INDENT, '            ', 199, 0, 199, 12),
woosh.Token(woosh.NAME, 'print', 199, 12, 199, 17),
woosh.Token(woosh.OP, '(', 199, 17, 199, 18),
woosh.Token(woosh.STRING, "'*put*'", 199, 18, 199, 25),
woosh.Token(woosh.OP, ',', 199, 25, 199, 26),
woosh.Token(woosh.NAME, 'self', 199, 27, 199, 31),
woosh.Token(woosh.OP, '.', 199, 31, 199, 32),
woosh.Token(woosh.NAME, 'sanitize', 199, 32, 199, 40),
woosh.Token(woosh.OP, '(', 199, 40, 199, 41),
woosh.Token(woosh.NAME, 'line', 199, 41, 199, 45),
woosh.Token(woosh.OP, ')', 199, 45, 199, 46),
woosh.Token(woosh.OP, ')', 199, 46, 199, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 199, 47, 200, 0),
woosh.Token(woosh.DEDENT, '        ', 200, 0, 200, 8),
woosh.Token(woosh.NAME, 'self', 200, 8, 200, 12),
woosh.Token(woosh.OP, '.', 200, 12, 200, 13),
woosh.Token(woosh.NAME, 'sock', 200, 13, 200, 17),
woosh.Token(woosh.OP, '.', 200, 17, 200, 18),
woosh.Token(woosh.NAME, 'sendall', 200, 18, 200, 25),
woosh.Token(woosh.OP, '(', 200, 25, 200, 26),
woosh.Token(woosh.NAME, 'line', 200, 26, 200, 30),
woosh.Token(woosh.OP, '.', 200, 30, 200, 31),
woosh.Token(woosh.NAME, 'encode', 200, 31, 200, 37),
woosh.Token(woosh.OP, '(', 200, 37, 200, 38),
woosh.Token(woosh.NAME, 'self', 200, 38, 200, 42),
woosh.Token(woosh.OP, '.', 200, 42, 200, 43),
woosh.Token(woosh.NAME, 'encoding', 200, 43, 200, 51),
woosh.Token(woosh.OP, ')', 200, 51, 200, 52),
woosh.Token(woosh.OP, ')', 200, 52, 200, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 53, 201, 0),
woosh.Token(woosh.COMMENT, '# Internal: send one command to the server (through putline())', 202, 4, 202, 66),
woosh.Token(woosh.DEDENT, '    ', 203, 0, 203, 4),
woosh.Token(woosh.NAME, 'def', 203, 4, 203, 7),
woosh.Token(woosh.NAME, 'putcmd', 203, 8, 203, 14),
woosh.Token(woosh.OP, '(', 203, 14, 203, 15),
woosh.Token(woosh.NAME, 'self', 203, 15, 203, 19),
woosh.Token(woosh.OP, ',', 203, 19, 203, 20),
woosh.Token(woosh.NAME, 'line', 203, 21, 203, 25),
woosh.Token(woosh.OP, ')', 203, 25, 203, 26),
woosh.Token(woosh.OP, ':', 203, 26, 203, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 27, 204, 0),
woosh.Token(woosh.INDENT, '        ', 204, 0, 204, 8),
woosh.Token(woosh.NAME, 'if', 204, 8, 204, 10),
woosh.Token(woosh.NAME, 'self', 204, 11, 204, 15),
woosh.Token(woosh.OP, '.', 204, 15, 204, 16),
woosh.Token(woosh.NAME, 'debugging', 204, 16, 204, 25),
woosh.Token(woosh.OP, ':', 204, 25, 204, 26),
woosh.Token(woosh.NAME, 'print', 204, 27, 204, 32),
woosh.Token(woosh.OP, '(', 204, 32, 204, 33),
woosh.Token(woosh.STRING, "'*cmd*'", 204, 33, 204, 40),
woosh.Token(woosh.OP, ',', 204, 40, 204, 41),
woosh.Token(woosh.NAME, 'self', 204, 42, 204, 46),
woosh.Token(woosh.OP, '.', 204, 46, 204, 47),
woosh.Token(woosh.NAME, 'sanitize', 204, 47, 204, 55),
woosh.Token(woosh.OP, '(', 204, 55, 204, 56),
woosh.Token(woosh.NAME, 'line', 204, 56, 204, 60),
woosh.Token(woosh.OP, ')', 204, 60, 204, 61),
woosh.Token(woosh.OP, ')', 204, 61, 204, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 62, 205, 0),
woosh.Token(woosh.NAME, 'self', 205, 8, 205, 12),
woosh.Token(woosh.OP, '.', 205, 12, 205, 13),
woosh.Token(woosh.NAME, 'putline', 205, 13, 205, 20),
woosh.Token(woosh.OP, '(', 205, 20, 205, 21),
woosh.Token(woosh.NAME, 'line', 205, 21, 205, 25),
woosh.Token(woosh.OP, ')', 205, 25, 205, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 26, 206, 0),
woosh.Token(woosh.COMMENT, '# Internal: return one line from the server, stripping CRLF.', 207, 4, 207, 64),
woosh.Token(woosh.COMMENT, '# Raise EOFError if the connection is closed', 208, 4, 208, 48),
woosh.Token(woosh.DEDENT, '    ', 209, 0, 209, 4),
woosh.Token(woosh.NAME, 'def', 209, 4, 209, 7),
woosh.Token(woosh.NAME, 'getline', 209, 8, 209, 15),
woosh.Token(woosh.OP, '(', 209, 15, 209, 16),
woosh.Token(woosh.NAME, 'self', 209, 16, 209, 20),
woosh.Token(woosh.OP, ')', 209, 20, 209, 21),
woosh.Token(woosh.OP, ':', 209, 21, 209, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 22, 210, 0),
woosh.Token(woosh.INDENT, '        ', 210, 0, 210, 8),
woosh.Token(woosh.NAME, 'line', 210, 8, 210, 12),
woosh.Token(woosh.OP, '=', 210, 13, 210, 14),
woosh.Token(woosh.NAME, 'self', 210, 15, 210, 19),
woosh.Token(woosh.OP, '.', 210, 19, 210, 20),
woosh.Token(woosh.NAME, 'file', 210, 20, 210, 24),
woosh.Token(woosh.OP, '.', 210, 24, 210, 25),
woosh.Token(woosh.NAME, 'readline', 210, 25, 210, 33),
woosh.Token(woosh.OP, '(', 210, 33, 210, 34),
woosh.Token(woosh.NAME, 'self', 210, 34, 210, 38),
woosh.Token(woosh.OP, '.', 210, 38, 210, 39),
woosh.Token(woosh.NAME, 'maxline', 210, 39, 210, 46),
woosh.Token(woosh.OP, '+', 210, 47, 210, 48),
woosh.Token(woosh.NUMBER, '1', 210, 49, 210, 50),
woosh.Token(woosh.OP, ')', 210, 50, 210, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 51, 211, 0),
woosh.Token(woosh.NAME, 'if', 211, 8, 211, 10),
woosh.Token(woosh.NAME, 'len', 211, 11, 211, 14),
woosh.Token(woosh.OP, '(', 211, 14, 211, 15),
woosh.Token(woosh.NAME, 'line', 211, 15, 211, 19),
woosh.Token(woosh.OP, ')', 211, 19, 211, 20),
woosh.Token(woosh.OP, '>', 211, 21, 211, 22),
woosh.Token(woosh.NAME, 'self', 211, 23, 211, 27),
woosh.Token(woosh.OP, '.', 211, 27, 211, 28),
woosh.Token(woosh.NAME, 'maxline', 211, 28, 211, 35),
woosh.Token(woosh.OP, ':', 211, 35, 211, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 36, 212, 0),
woosh.Token(woosh.INDENT, '            ', 212, 0, 212, 12),
woosh.Token(woosh.NAME, 'raise', 212, 12, 212, 17),
woosh.Token(woosh.NAME, 'Error', 212, 18, 212, 23),
woosh.Token(woosh.OP, '(', 212, 23, 212, 24),
woosh.Token(woosh.STRING, '"got more than %d bytes"', 212, 24, 212, 48),
woosh.Token(woosh.OP, '%', 212, 49, 212, 50),
woosh.Token(woosh.NAME, 'self', 212, 51, 212, 55),
woosh.Token(woosh.OP, '.', 212, 55, 212, 56),
woosh.Token(woosh.NAME, 'maxline', 212, 56, 212, 63),
woosh.Token(woosh.OP, ')', 212, 63, 212, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 64, 213, 0),
woosh.Token(woosh.DEDENT, '        ', 213, 0, 213, 8),
woosh.Token(woosh.NAME, 'if', 213, 8, 213, 10),
woosh.Token(woosh.NAME, 'self', 213, 11, 213, 15),
woosh.Token(woosh.OP, '.', 213, 15, 213, 16),
woosh.Token(woosh.NAME, 'debugging', 213, 16, 213, 25),
woosh.Token(woosh.OP, '>', 213, 26, 213, 27),
woosh.Token(woosh.NUMBER, '1', 213, 28, 213, 29),
woosh.Token(woosh.OP, ':', 213, 29, 213, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 30, 214, 0),
woosh.Token(woosh.INDENT, '            ', 214, 0, 214, 12),
woosh.Token(woosh.NAME, 'print', 214, 12, 214, 17),
woosh.Token(woosh.OP, '(', 214, 17, 214, 18),
woosh.Token(woosh.STRING, "'*get*'", 214, 18, 214, 25),
woosh.Token(woosh.OP, ',', 214, 25, 214, 26),
woosh.Token(woosh.NAME, 'self', 214, 27, 214, 31),
woosh.Token(woosh.OP, '.', 214, 31, 214, 32),
woosh.Token(woosh.NAME, 'sanitize', 214, 32, 214, 40),
woosh.Token(woosh.OP, '(', 214, 40, 214, 41),
woosh.Token(woosh.NAME, 'line', 214, 41, 214, 45),
woosh.Token(woosh.OP, ')', 214, 45, 214, 46),
woosh.Token(woosh.OP, ')', 214, 46, 214, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 47, 215, 0),
woosh.Token(woosh.DEDENT, '        ', 215, 0, 215, 8),
woosh.Token(woosh.NAME, 'if', 215, 8, 215, 10),
woosh.Token(woosh.NAME, 'not', 215, 11, 215, 14),
woosh.Token(woosh.NAME, 'line', 215, 15, 215, 19),
woosh.Token(woosh.OP, ':', 215, 19, 215, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 20, 216, 0),
woosh.Token(woosh.INDENT, '            ', 216, 0, 216, 12),
woosh.Token(woosh.NAME, 'raise', 216, 12, 216, 17),
woosh.Token(woosh.NAME, 'EOFError', 216, 18, 216, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 26, 217, 0),
woosh.Token(woosh.DEDENT, '        ', 217, 0, 217, 8),
woosh.Token(woosh.NAME, 'if', 217, 8, 217, 10),
woosh.Token(woosh.NAME, 'line', 217, 11, 217, 15),
woosh.Token(woosh.OP, '[', 217, 15, 217, 16),
woosh.Token(woosh.OP, '-', 217, 16, 217, 17),
woosh.Token(woosh.NUMBER, '2', 217, 17, 217, 18),
woosh.Token(woosh.OP, ':', 217, 18, 217, 19),
woosh.Token(woosh.OP, ']', 217, 19, 217, 20),
woosh.Token(woosh.OP, '==', 217, 21, 217, 23),
woosh.Token(woosh.NAME, 'CRLF', 217, 24, 217, 28),
woosh.Token(woosh.OP, ':', 217, 28, 217, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 29, 218, 0),
woosh.Token(woosh.INDENT, '            ', 218, 0, 218, 12),
woosh.Token(woosh.NAME, 'line', 218, 12, 218, 16),
woosh.Token(woosh.OP, '=', 218, 17, 218, 18),
woosh.Token(woosh.NAME, 'line', 218, 19, 218, 23),
woosh.Token(woosh.OP, '[', 218, 23, 218, 24),
woosh.Token(woosh.OP, ':', 218, 24, 218, 25),
woosh.Token(woosh.OP, '-', 218, 25, 218, 26),
woosh.Token(woosh.NUMBER, '2', 218, 26, 218, 27),
woosh.Token(woosh.OP, ']', 218, 27, 218, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 28, 219, 0),
woosh.Token(woosh.DEDENT, '        ', 219, 0, 219, 8),
woosh.Token(woosh.NAME, 'elif', 219, 8, 219, 12),
woosh.Token(woosh.NAME, 'line', 219, 13, 219, 17),
woosh.Token(woosh.OP, '[', 219, 17, 219, 18),
woosh.Token(woosh.OP, '-', 219, 18, 219, 19),
woosh.Token(woosh.NUMBER, '1', 219, 19, 219, 20),
woosh.Token(woosh.OP, ':', 219, 20, 219, 21),
woosh.Token(woosh.OP, ']', 219, 21, 219, 22),
woosh.Token(woosh.NAME, 'in', 219, 23, 219, 25),
woosh.Token(woosh.NAME, 'CRLF', 219, 26, 219, 30),
woosh.Token(woosh.OP, ':', 219, 30, 219, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 31, 220, 0),
woosh.Token(woosh.INDENT, '            ', 220, 0, 220, 12),
woosh.Token(woosh.NAME, 'line', 220, 12, 220, 16),
woosh.Token(woosh.OP, '=', 220, 17, 220, 18),
woosh.Token(woosh.NAME, 'line', 220, 19, 220, 23),
woosh.Token(woosh.OP, '[', 220, 23, 220, 24),
woosh.Token(woosh.OP, ':', 220, 24, 220, 25),
woosh.Token(woosh.OP, '-', 220, 25, 220, 26),
woosh.Token(woosh.NUMBER, '1', 220, 26, 220, 27),
woosh.Token(woosh.OP, ']', 220, 27, 220, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 28, 221, 0),
woosh.Token(woosh.DEDENT, '        ', 221, 0, 221, 8),
woosh.Token(woosh.NAME, 'return', 221, 8, 221, 14),
woosh.Token(woosh.NAME, 'line', 221, 15, 221, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 19, 222, 0),
woosh.Token(woosh.COMMENT, '# Internal: get a response from the server, which may possibly', 223, 4, 223, 66),
woosh.Token(woosh.COMMENT, '# consist of multiple lines.  Return a single string with no', 224, 4, 224, 64),
woosh.Token(woosh.COMMENT, '# trailing CRLF.  If the response consists of multiple lines,', 225, 4, 225, 65),
woosh.Token(woosh.COMMENT, "# these are separated by '\\n' characters in the string", 226, 4, 226, 58),
woosh.Token(woosh.DEDENT, '    ', 227, 0, 227, 4),
woosh.Token(woosh.NAME, 'def', 227, 4, 227, 7),
woosh.Token(woosh.NAME, 'getmultiline', 227, 8, 227, 20),
woosh.Token(woosh.OP, '(', 227, 20, 227, 21),
woosh.Token(woosh.NAME, 'self', 227, 21, 227, 25),
woosh.Token(woosh.OP, ')', 227, 25, 227, 26),
woosh.Token(woosh.OP, ':', 227, 26, 227, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 27, 228, 0),
woosh.Token(woosh.INDENT, '        ', 228, 0, 228, 8),
woosh.Token(woosh.NAME, 'line', 228, 8, 228, 12),
woosh.Token(woosh.OP, '=', 228, 13, 228, 14),
woosh.Token(woosh.NAME, 'self', 228, 15, 228, 19),
woosh.Token(woosh.OP, '.', 228, 19, 228, 20),
woosh.Token(woosh.NAME, 'getline', 228, 20, 228, 27),
woosh.Token(woosh.OP, '(', 228, 27, 228, 28),
woosh.Token(woosh.OP, ')', 228, 28, 228, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 29, 229, 0),
woosh.Token(woosh.NAME, 'if', 229, 8, 229, 10),
woosh.Token(woosh.NAME, 'line', 229, 11, 229, 15),
woosh.Token(woosh.OP, '[', 229, 15, 229, 16),
woosh.Token(woosh.NUMBER, '3', 229, 16, 229, 17),
woosh.Token(woosh.OP, ':', 229, 17, 229, 18),
woosh.Token(woosh.NUMBER, '4', 229, 18, 229, 19),
woosh.Token(woosh.OP, ']', 229, 19, 229, 20),
woosh.Token(woosh.OP, '==', 229, 21, 229, 23),
woosh.Token(woosh.STRING, "'-'", 229, 24, 229, 27),
woosh.Token(woosh.OP, ':', 229, 27, 229, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 28, 230, 0),
woosh.Token(woosh.INDENT, '            ', 230, 0, 230, 12),
woosh.Token(woosh.NAME, 'code', 230, 12, 230, 16),
woosh.Token(woosh.OP, '=', 230, 17, 230, 18),
woosh.Token(woosh.NAME, 'line', 230, 19, 230, 23),
woosh.Token(woosh.OP, '[', 230, 23, 230, 24),
woosh.Token(woosh.OP, ':', 230, 24, 230, 25),
woosh.Token(woosh.NUMBER, '3', 230, 25, 230, 26),
woosh.Token(woosh.OP, ']', 230, 26, 230, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 27, 231, 0),
woosh.Token(woosh.NAME, 'while', 231, 12, 231, 17),
woosh.Token(woosh.NUMBER, '1', 231, 18, 231, 19),
woosh.Token(woosh.OP, ':', 231, 19, 231, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 20, 232, 0),
woosh.Token(woosh.INDENT, '                ', 232, 0, 232, 16),
woosh.Token(woosh.NAME, 'nextline', 232, 16, 232, 24),
woosh.Token(woosh.OP, '=', 232, 25, 232, 26),
woosh.Token(woosh.NAME, 'self', 232, 27, 232, 31),
woosh.Token(woosh.OP, '.', 232, 31, 232, 32),
woosh.Token(woosh.NAME, 'getline', 232, 32, 232, 39),
woosh.Token(woosh.OP, '(', 232, 39, 232, 40),
woosh.Token(woosh.OP, ')', 232, 40, 232, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 41, 233, 0),
woosh.Token(woosh.NAME, 'line', 233, 16, 233, 20),
woosh.Token(woosh.OP, '=', 233, 21, 233, 22),
woosh.Token(woosh.NAME, 'line', 233, 23, 233, 27),
woosh.Token(woosh.OP, '+', 233, 28, 233, 29),
woosh.Token(woosh.OP, '(', 233, 30, 233, 31),
woosh.Token(woosh.STRING, "'\\n'", 233, 31, 233, 35),
woosh.Token(woosh.OP, '+', 233, 36, 233, 37),
woosh.Token(woosh.NAME, 'nextline', 233, 38, 233, 46),
woosh.Token(woosh.OP, ')', 233, 46, 233, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 47, 234, 0),
woosh.Token(woosh.NAME, 'if', 234, 16, 234, 18),
woosh.Token(woosh.NAME, 'nextline', 234, 19, 234, 27),
woosh.Token(woosh.OP, '[', 234, 27, 234, 28),
woosh.Token(woosh.OP, ':', 234, 28, 234, 29),
woosh.Token(woosh.NUMBER, '3', 234, 29, 234, 30),
woosh.Token(woosh.OP, ']', 234, 30, 234, 31),
woosh.Token(woosh.OP, '==', 234, 32, 234, 34),
woosh.Token(woosh.NAME, 'code', 234, 35, 234, 39),
woosh.Token(woosh.NAME, 'and', 234, 40, 234, 43),
woosh.Token(woosh.NAME, 'nextline', 235, 24, 235, 32),
woosh.Token(woosh.OP, '[', 235, 32, 235, 33),
woosh.Token(woosh.NUMBER, '3', 235, 33, 235, 34),
woosh.Token(woosh.OP, ':', 235, 34, 235, 35),
woosh.Token(woosh.NUMBER, '4', 235, 35, 235, 36),
woosh.Token(woosh.OP, ']', 235, 36, 235, 37),
woosh.Token(woosh.OP, '!=', 235, 38, 235, 40),
woosh.Token(woosh.STRING, "'-'", 235, 41, 235, 44),
woosh.Token(woosh.OP, ':', 235, 44, 235, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 45, 236, 0),
woosh.Token(woosh.INDENT, '                    ', 236, 0, 236, 20),
woosh.Token(woosh.NAME, 'break', 236, 20, 236, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 25, 237, 0),
woosh.Token(woosh.DEDENT, '        ', 237, 0, 237, 8),
woosh.Token(woosh.DEDENT, '', 237, 8, 237, 8),
woosh.Token(woosh.DEDENT, '', 237, 8, 237, 8),
woosh.Token(woosh.NAME, 'return', 237, 8, 237, 14),
woosh.Token(woosh.NAME, 'line', 237, 15, 237, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 19, 238, 0),
woosh.Token(woosh.COMMENT, '# Internal: get a response from the server.', 239, 4, 239, 47),
woosh.Token(woosh.COMMENT, '# Raise various errors if the response indicates an error', 240, 4, 240, 61),
woosh.Token(woosh.DEDENT, '    ', 241, 0, 241, 4),
woosh.Token(woosh.NAME, 'def', 241, 4, 241, 7),
woosh.Token(woosh.NAME, 'getresp', 241, 8, 241, 15),
woosh.Token(woosh.OP, '(', 241, 15, 241, 16),
woosh.Token(woosh.NAME, 'self', 241, 16, 241, 20),
woosh.Token(woosh.OP, ')', 241, 20, 241, 21),
woosh.Token(woosh.OP, ':', 241, 21, 241, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 22, 242, 0),
woosh.Token(woosh.INDENT, '        ', 242, 0, 242, 8),
woosh.Token(woosh.NAME, 'resp', 242, 8, 242, 12),
woosh.Token(woosh.OP, '=', 242, 13, 242, 14),
woosh.Token(woosh.NAME, 'self', 242, 15, 242, 19),
woosh.Token(woosh.OP, '.', 242, 19, 242, 20),
woosh.Token(woosh.NAME, 'getmultiline', 242, 20, 242, 32),
woosh.Token(woosh.OP, '(', 242, 32, 242, 33),
woosh.Token(woosh.OP, ')', 242, 33, 242, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 34, 243, 0),
woosh.Token(woosh.NAME, 'if', 243, 8, 243, 10),
woosh.Token(woosh.NAME, 'self', 243, 11, 243, 15),
woosh.Token(woosh.OP, '.', 243, 15, 243, 16),
woosh.Token(woosh.NAME, 'debugging', 243, 16, 243, 25),
woosh.Token(woosh.OP, ':', 243, 25, 243, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 26, 244, 0),
woosh.Token(woosh.INDENT, '            ', 244, 0, 244, 12),
woosh.Token(woosh.NAME, 'print', 244, 12, 244, 17),
woosh.Token(woosh.OP, '(', 244, 17, 244, 18),
woosh.Token(woosh.STRING, "'*resp*'", 244, 18, 244, 26),
woosh.Token(woosh.OP, ',', 244, 26, 244, 27),
woosh.Token(woosh.NAME, 'self', 244, 28, 244, 32),
woosh.Token(woosh.OP, '.', 244, 32, 244, 33),
woosh.Token(woosh.NAME, 'sanitize', 244, 33, 244, 41),
woosh.Token(woosh.OP, '(', 244, 41, 244, 42),
woosh.Token(woosh.NAME, 'resp', 244, 42, 244, 46),
woosh.Token(woosh.OP, ')', 244, 46, 244, 47),
woosh.Token(woosh.OP, ')', 244, 47, 244, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 48, 245, 0),
woosh.Token(woosh.DEDENT, '        ', 245, 0, 245, 8),
woosh.Token(woosh.NAME, 'self', 245, 8, 245, 12),
woosh.Token(woosh.OP, '.', 245, 12, 245, 13),
woosh.Token(woosh.NAME, 'lastresp', 245, 13, 245, 21),
woosh.Token(woosh.OP, '=', 245, 22, 245, 23),
woosh.Token(woosh.NAME, 'resp', 245, 24, 245, 28),
woosh.Token(woosh.OP, '[', 245, 28, 245, 29),
woosh.Token(woosh.OP, ':', 245, 29, 245, 30),
woosh.Token(woosh.NUMBER, '3', 245, 30, 245, 31),
woosh.Token(woosh.OP, ']', 245, 31, 245, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 32, 246, 0),
woosh.Token(woosh.NAME, 'c', 246, 8, 246, 9),
woosh.Token(woosh.OP, '=', 246, 10, 246, 11),
woosh.Token(woosh.NAME, 'resp', 246, 12, 246, 16),
woosh.Token(woosh.OP, '[', 246, 16, 246, 17),
woosh.Token(woosh.OP, ':', 246, 17, 246, 18),
woosh.Token(woosh.NUMBER, '1', 246, 18, 246, 19),
woosh.Token(woosh.OP, ']', 246, 19, 246, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 20, 247, 0),
woosh.Token(woosh.NAME, 'if', 247, 8, 247, 10),
woosh.Token(woosh.NAME, 'c', 247, 11, 247, 12),
woosh.Token(woosh.NAME, 'in', 247, 13, 247, 15),
woosh.Token(woosh.OP, '{', 247, 16, 247, 17),
woosh.Token(woosh.STRING, "'1'", 247, 17, 247, 20),
woosh.Token(woosh.OP, ',', 247, 20, 247, 21),
woosh.Token(woosh.STRING, "'2'", 247, 22, 247, 25),
woosh.Token(woosh.OP, ',', 247, 25, 247, 26),
woosh.Token(woosh.STRING, "'3'", 247, 27, 247, 30),
woosh.Token(woosh.OP, '}', 247, 30, 247, 31),
woosh.Token(woosh.OP, ':', 247, 31, 247, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 32, 248, 0),
woosh.Token(woosh.INDENT, '            ', 248, 0, 248, 12),
woosh.Token(woosh.NAME, 'return', 248, 12, 248, 18),
woosh.Token(woosh.NAME, 'resp', 248, 19, 248, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 23, 249, 0),
woosh.Token(woosh.DEDENT, '        ', 249, 0, 249, 8),
woosh.Token(woosh.NAME, 'if', 249, 8, 249, 10),
woosh.Token(woosh.NAME, 'c', 249, 11, 249, 12),
woosh.Token(woosh.OP, '==', 249, 13, 249, 15),
woosh.Token(woosh.STRING, "'4'", 249, 16, 249, 19),
woosh.Token(woosh.OP, ':', 249, 19, 249, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 20, 250, 0),
woosh.Token(woosh.INDENT, '            ', 250, 0, 250, 12),
woosh.Token(woosh.NAME, 'raise', 250, 12, 250, 17),
woosh.Token(woosh.NAME, 'error_temp', 250, 18, 250, 28),
woosh.Token(woosh.OP, '(', 250, 28, 250, 29),
woosh.Token(woosh.NAME, 'resp', 250, 29, 250, 33),
woosh.Token(woosh.OP, ')', 250, 33, 250, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 34, 251, 0),
woosh.Token(woosh.DEDENT, '        ', 251, 0, 251, 8),
woosh.Token(woosh.NAME, 'if', 251, 8, 251, 10),
woosh.Token(woosh.NAME, 'c', 251, 11, 251, 12),
woosh.Token(woosh.OP, '==', 251, 13, 251, 15),
woosh.Token(woosh.STRING, "'5'", 251, 16, 251, 19),
woosh.Token(woosh.OP, ':', 251, 19, 251, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 20, 252, 0),
woosh.Token(woosh.INDENT, '            ', 252, 0, 252, 12),
woosh.Token(woosh.NAME, 'raise', 252, 12, 252, 17),
woosh.Token(woosh.NAME, 'error_perm', 252, 18, 252, 28),
woosh.Token(woosh.OP, '(', 252, 28, 252, 29),
woosh.Token(woosh.NAME, 'resp', 252, 29, 252, 33),
woosh.Token(woosh.OP, ')', 252, 33, 252, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 34, 253, 0),
woosh.Token(woosh.DEDENT, '        ', 253, 0, 253, 8),
woosh.Token(woosh.NAME, 'raise', 253, 8, 253, 13),
woosh.Token(woosh.NAME, 'error_proto', 253, 14, 253, 25),
woosh.Token(woosh.OP, '(', 253, 25, 253, 26),
woosh.Token(woosh.NAME, 'resp', 253, 26, 253, 30),
woosh.Token(woosh.OP, ')', 253, 30, 253, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 253, 31, 254, 0),
woosh.Token(woosh.DEDENT, '    ', 255, 0, 255, 4),
woosh.Token(woosh.NAME, 'def', 255, 4, 255, 7),
woosh.Token(woosh.NAME, 'voidresp', 255, 8, 255, 16),
woosh.Token(woosh.OP, '(', 255, 16, 255, 17),
woosh.Token(woosh.NAME, 'self', 255, 17, 255, 21),
woosh.Token(woosh.OP, ')', 255, 21, 255, 22),
woosh.Token(woosh.OP, ':', 255, 22, 255, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 23, 256, 0),
woosh.Token(woosh.INDENT, '        ', 256, 0, 256, 8),
woosh.Token(woosh.STRING, '"""Expect a response beginning with \'2\'."""', 256, 8, 256, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 51, 257, 0),
woosh.Token(woosh.NAME, 'resp', 257, 8, 257, 12),
woosh.Token(woosh.OP, '=', 257, 13, 257, 14),
woosh.Token(woosh.NAME, 'self', 257, 15, 257, 19),
woosh.Token(woosh.OP, '.', 257, 19, 257, 20),
woosh.Token(woosh.NAME, 'getresp', 257, 20, 257, 27),
woosh.Token(woosh.OP, '(', 257, 27, 257, 28),
woosh.Token(woosh.OP, ')', 257, 28, 257, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 29, 258, 0),
woosh.Token(woosh.NAME, 'if', 258, 8, 258, 10),
woosh.Token(woosh.NAME, 'resp', 258, 11, 258, 15),
woosh.Token(woosh.OP, '[', 258, 15, 258, 16),
woosh.Token(woosh.OP, ':', 258, 16, 258, 17),
woosh.Token(woosh.NUMBER, '1', 258, 17, 258, 18),
woosh.Token(woosh.OP, ']', 258, 18, 258, 19),
woosh.Token(woosh.OP, '!=', 258, 20, 258, 22),
woosh.Token(woosh.STRING, "'2'", 258, 23, 258, 26),
woosh.Token(woosh.OP, ':', 258, 26, 258, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 27, 259, 0),
woosh.Token(woosh.INDENT, '            ', 259, 0, 259, 12),
woosh.Token(woosh.NAME, 'raise', 259, 12, 259, 17),
woosh.Token(woosh.NAME, 'error_reply', 259, 18, 259, 29),
woosh.Token(woosh.OP, '(', 259, 29, 259, 30),
woosh.Token(woosh.NAME, 'resp', 259, 30, 259, 34),
woosh.Token(woosh.OP, ')', 259, 34, 259, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 35, 260, 0),
woosh.Token(woosh.DEDENT, '        ', 260, 0, 260, 8),
woosh.Token(woosh.NAME, 'return', 260, 8, 260, 14),
woosh.Token(woosh.NAME, 'resp', 260, 15, 260, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 260, 19, 261, 0),
woosh.Token(woosh.DEDENT, '    ', 262, 0, 262, 4),
woosh.Token(woosh.NAME, 'def', 262, 4, 262, 7),
woosh.Token(woosh.NAME, 'abort', 262, 8, 262, 13),
woosh.Token(woosh.OP, '(', 262, 13, 262, 14),
woosh.Token(woosh.NAME, 'self', 262, 14, 262, 18),
woosh.Token(woosh.OP, ')', 262, 18, 262, 19),
woosh.Token(woosh.OP, ':', 262, 19, 262, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 20, 263, 0),
woosh.Token(woosh.INDENT, '        ', 263, 0, 263, 8),
woosh.Token(woosh.STRING, "'''Abort a file transfer.  Uses out-of-band data.\r\n        This does not follow the procedure from the RFC to send Telnet\r\n        IP and Synch; that doesn't seem to work with the servers I've\r\n        tried.  Instead, just send the ABOR command as OOB data.'''", 263, 8, 266, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 67, 267, 0),
woosh.Token(woosh.NAME, 'line', 267, 8, 267, 12),
woosh.Token(woosh.OP, '=', 267, 13, 267, 14),
woosh.Token(woosh.STRING, "b'ABOR'", 267, 15, 267, 22),
woosh.Token(woosh.OP, '+', 267, 23, 267, 24),
woosh.Token(woosh.NAME, 'B_CRLF', 267, 25, 267, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 31, 268, 0),
woosh.Token(woosh.NAME, 'if', 268, 8, 268, 10),
woosh.Token(woosh.NAME, 'self', 268, 11, 268, 15),
woosh.Token(woosh.OP, '.', 268, 15, 268, 16),
woosh.Token(woosh.NAME, 'debugging', 268, 16, 268, 25),
woosh.Token(woosh.OP, '>', 268, 26, 268, 27),
woosh.Token(woosh.NUMBER, '1', 268, 28, 268, 29),
woosh.Token(woosh.OP, ':', 268, 29, 268, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 30, 269, 0),
woosh.Token(woosh.INDENT, '            ', 269, 0, 269, 12),
woosh.Token(woosh.NAME, 'print', 269, 12, 269, 17),
woosh.Token(woosh.OP, '(', 269, 17, 269, 18),
woosh.Token(woosh.STRING, "'*put urgent*'", 269, 18, 269, 32),
woosh.Token(woosh.OP, ',', 269, 32, 269, 33),
woosh.Token(woosh.NAME, 'self', 269, 34, 269, 38),
woosh.Token(woosh.OP, '.', 269, 38, 269, 39),
woosh.Token(woosh.NAME, 'sanitize', 269, 39, 269, 47),
woosh.Token(woosh.OP, '(', 269, 47, 269, 48),
woosh.Token(woosh.NAME, 'line', 269, 48, 269, 52),
woosh.Token(woosh.OP, ')', 269, 52, 269, 53),
woosh.Token(woosh.OP, ')', 269, 53, 269, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 54, 270, 0),
woosh.Token(woosh.DEDENT, '        ', 270, 0, 270, 8),
woosh.Token(woosh.NAME, 'self', 270, 8, 270, 12),
woosh.Token(woosh.OP, '.', 270, 12, 270, 13),
woosh.Token(woosh.NAME, 'sock', 270, 13, 270, 17),
woosh.Token(woosh.OP, '.', 270, 17, 270, 18),
woosh.Token(woosh.NAME, 'sendall', 270, 18, 270, 25),
woosh.Token(woosh.OP, '(', 270, 25, 270, 26),
woosh.Token(woosh.NAME, 'line', 270, 26, 270, 30),
woosh.Token(woosh.OP, ',', 270, 30, 270, 31),
woosh.Token(woosh.NAME, 'MSG_OOB', 270, 32, 270, 39),
woosh.Token(woosh.OP, ')', 270, 39, 270, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 40, 271, 0),
woosh.Token(woosh.NAME, 'resp', 271, 8, 271, 12),
woosh.Token(woosh.OP, '=', 271, 13, 271, 14),
woosh.Token(woosh.NAME, 'self', 271, 15, 271, 19),
woosh.Token(woosh.OP, '.', 271, 19, 271, 20),
woosh.Token(woosh.NAME, 'getmultiline', 271, 20, 271, 32),
woosh.Token(woosh.OP, '(', 271, 32, 271, 33),
woosh.Token(woosh.OP, ')', 271, 33, 271, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 34, 272, 0),
woosh.Token(woosh.NAME, 'if', 272, 8, 272, 10),
woosh.Token(woosh.NAME, 'resp', 272, 11, 272, 15),
woosh.Token(woosh.OP, '[', 272, 15, 272, 16),
woosh.Token(woosh.OP, ':', 272, 16, 272, 17),
woosh.Token(woosh.NUMBER, '3', 272, 17, 272, 18),
woosh.Token(woosh.OP, ']', 272, 18, 272, 19),
woosh.Token(woosh.NAME, 'not', 272, 20, 272, 23),
woosh.Token(woosh.NAME, 'in', 272, 24, 272, 26),
woosh.Token(woosh.OP, '{', 272, 27, 272, 28),
woosh.Token(woosh.STRING, "'426'", 272, 28, 272, 33),
woosh.Token(woosh.OP, ',', 272, 33, 272, 34),
woosh.Token(woosh.STRING, "'225'", 272, 35, 272, 40),
woosh.Token(woosh.OP, ',', 272, 40, 272, 41),
woosh.Token(woosh.STRING, "'226'", 272, 42, 272, 47),
woosh.Token(woosh.OP, '}', 272, 47, 272, 48),
woosh.Token(woosh.OP, ':', 272, 48, 272, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 49, 273, 0),
woosh.Token(woosh.INDENT, '            ', 273, 0, 273, 12),
woosh.Token(woosh.NAME, 'raise', 273, 12, 273, 17),
woosh.Token(woosh.NAME, 'error_proto', 273, 18, 273, 29),
woosh.Token(woosh.OP, '(', 273, 29, 273, 30),
woosh.Token(woosh.NAME, 'resp', 273, 30, 273, 34),
woosh.Token(woosh.OP, ')', 273, 34, 273, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 35, 274, 0),
woosh.Token(woosh.DEDENT, '        ', 274, 0, 274, 8),
woosh.Token(woosh.NAME, 'return', 274, 8, 274, 14),
woosh.Token(woosh.NAME, 'resp', 274, 15, 274, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 274, 19, 275, 0),
woosh.Token(woosh.DEDENT, '    ', 276, 0, 276, 4),
woosh.Token(woosh.NAME, 'def', 276, 4, 276, 7),
woosh.Token(woosh.NAME, 'sendcmd', 276, 8, 276, 15),
woosh.Token(woosh.OP, '(', 276, 15, 276, 16),
woosh.Token(woosh.NAME, 'self', 276, 16, 276, 20),
woosh.Token(woosh.OP, ',', 276, 20, 276, 21),
woosh.Token(woosh.NAME, 'cmd', 276, 22, 276, 25),
woosh.Token(woosh.OP, ')', 276, 25, 276, 26),
woosh.Token(woosh.OP, ':', 276, 26, 276, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 27, 277, 0),
woosh.Token(woosh.INDENT, '        ', 277, 0, 277, 8),
woosh.Token(woosh.STRING, "'''Send a command and return the response.'''", 277, 8, 277, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 53, 278, 0),
woosh.Token(woosh.NAME, 'self', 278, 8, 278, 12),
woosh.Token(woosh.OP, '.', 278, 12, 278, 13),
woosh.Token(woosh.NAME, 'putcmd', 278, 13, 278, 19),
woosh.Token(woosh.OP, '(', 278, 19, 278, 20),
woosh.Token(woosh.NAME, 'cmd', 278, 20, 278, 23),
woosh.Token(woosh.OP, ')', 278, 23, 278, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 24, 279, 0),
woosh.Token(woosh.NAME, 'return', 279, 8, 279, 14),
woosh.Token(woosh.NAME, 'self', 279, 15, 279, 19),
woosh.Token(woosh.OP, '.', 279, 19, 279, 20),
woosh.Token(woosh.NAME, 'getresp', 279, 20, 279, 27),
woosh.Token(woosh.OP, '(', 279, 27, 279, 28),
woosh.Token(woosh.OP, ')', 279, 28, 279, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 29, 280, 0),
woosh.Token(woosh.DEDENT, '    ', 281, 0, 281, 4),
woosh.Token(woosh.NAME, 'def', 281, 4, 281, 7),
woosh.Token(woosh.NAME, 'voidcmd', 281, 8, 281, 15),
woosh.Token(woosh.OP, '(', 281, 15, 281, 16),
woosh.Token(woosh.NAME, 'self', 281, 16, 281, 20),
woosh.Token(woosh.OP, ',', 281, 20, 281, 21),
woosh.Token(woosh.NAME, 'cmd', 281, 22, 281, 25),
woosh.Token(woosh.OP, ')', 281, 25, 281, 26),
woosh.Token(woosh.OP, ':', 281, 26, 281, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 27, 282, 0),
woosh.Token(woosh.INDENT, '        ', 282, 0, 282, 8),
woosh.Token(woosh.STRING, '"""Send a command and expect a response beginning with \'2\'."""', 282, 8, 282, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 70, 283, 0),
woosh.Token(woosh.NAME, 'self', 283, 8, 283, 12),
woosh.Token(woosh.OP, '.', 283, 12, 283, 13),
woosh.Token(woosh.NAME, 'putcmd', 283, 13, 283, 19),
woosh.Token(woosh.OP, '(', 283, 19, 283, 20),
woosh.Token(woosh.NAME, 'cmd', 283, 20, 283, 23),
woosh.Token(woosh.OP, ')', 283, 23, 283, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 283, 24, 284, 0),
woosh.Token(woosh.NAME, 'return', 284, 8, 284, 14),
woosh.Token(woosh.NAME, 'self', 284, 15, 284, 19),
woosh.Token(woosh.OP, '.', 284, 19, 284, 20),
woosh.Token(woosh.NAME, 'voidresp', 284, 20, 284, 28),
woosh.Token(woosh.OP, '(', 284, 28, 284, 29),
woosh.Token(woosh.OP, ')', 284, 29, 284, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 30, 285, 0),
woosh.Token(woosh.DEDENT, '    ', 286, 0, 286, 4),
woosh.Token(woosh.NAME, 'def', 286, 4, 286, 7),
woosh.Token(woosh.NAME, 'sendport', 286, 8, 286, 16),
woosh.Token(woosh.OP, '(', 286, 16, 286, 17),
woosh.Token(woosh.NAME, 'self', 286, 17, 286, 21),
woosh.Token(woosh.OP, ',', 286, 21, 286, 22),
woosh.Token(woosh.NAME, 'host', 286, 23, 286, 27),
woosh.Token(woosh.OP, ',', 286, 27, 286, 28),
woosh.Token(woosh.NAME, 'port', 286, 29, 286, 33),
woosh.Token(woosh.OP, ')', 286, 33, 286, 34),
woosh.Token(woosh.OP, ':', 286, 34, 286, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 35, 287, 0),
woosh.Token(woosh.INDENT, '        ', 287, 0, 287, 8),
woosh.Token(woosh.STRING, "'''Send a PORT command with the current host and the given\r\n        port number.\r\n        '''", 287, 8, 289, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 289, 11, 290, 0),
woosh.Token(woosh.NAME, 'hbytes', 290, 8, 290, 14),
woosh.Token(woosh.OP, '=', 290, 15, 290, 16),
woosh.Token(woosh.NAME, 'host', 290, 17, 290, 21),
woosh.Token(woosh.OP, '.', 290, 21, 290, 22),
woosh.Token(woosh.NAME, 'split', 290, 22, 290, 27),
woosh.Token(woosh.OP, '(', 290, 27, 290, 28),
woosh.Token(woosh.STRING, "'.'", 290, 28, 290, 31),
woosh.Token(woosh.OP, ')', 290, 31, 290, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 32, 291, 0),
woosh.Token(woosh.NAME, 'pbytes', 291, 8, 291, 14),
woosh.Token(woosh.OP, '=', 291, 15, 291, 16),
woosh.Token(woosh.OP, '[', 291, 17, 291, 18),
woosh.Token(woosh.NAME, 'repr', 291, 18, 291, 22),
woosh.Token(woosh.OP, '(', 291, 22, 291, 23),
woosh.Token(woosh.NAME, 'port', 291, 23, 291, 27),
woosh.Token(woosh.OP, '//', 291, 27, 291, 29),
woosh.Token(woosh.NUMBER, '256', 291, 29, 291, 32),
woosh.Token(woosh.OP, ')', 291, 32, 291, 33),
woosh.Token(woosh.OP, ',', 291, 33, 291, 34),
woosh.Token(woosh.NAME, 'repr', 291, 35, 291, 39),
woosh.Token(woosh.OP, '(', 291, 39, 291, 40),
woosh.Token(woosh.NAME, 'port', 291, 40, 291, 44),
woosh.Token(woosh.OP, '%', 291, 44, 291, 45),
woosh.Token(woosh.NUMBER, '256', 291, 45, 291, 48),
woosh.Token(woosh.OP, ')', 291, 48, 291, 49),
woosh.Token(woosh.OP, ']', 291, 49, 291, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 50, 292, 0),
woosh.Token(woosh.NAME, 'bytes', 292, 8, 292, 13),
woosh.Token(woosh.OP, '=', 292, 14, 292, 15),
woosh.Token(woosh.NAME, 'hbytes', 292, 16, 292, 22),
woosh.Token(woosh.OP, '+', 292, 23, 292, 24),
woosh.Token(woosh.NAME, 'pbytes', 292, 25, 292, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 31, 293, 0),
woosh.Token(woosh.NAME, 'cmd', 293, 8, 293, 11),
woosh.Token(woosh.OP, '=', 293, 12, 293, 13),
woosh.Token(woosh.STRING, "'PORT '", 293, 14, 293, 21),
woosh.Token(woosh.OP, '+', 293, 22, 293, 23),
woosh.Token(woosh.STRING, "','", 293, 24, 293, 27),
woosh.Token(woosh.OP, '.', 293, 27, 293, 28),
woosh.Token(woosh.NAME, 'join', 293, 28, 293, 32),
woosh.Token(woosh.OP, '(', 293, 32, 293, 33),
woosh.Token(woosh.NAME, 'bytes', 293, 33, 293, 38),
woosh.Token(woosh.OP, ')', 293, 38, 293, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 39, 294, 0),
woosh.Token(woosh.NAME, 'return', 294, 8, 294, 14),
woosh.Token(woosh.NAME, 'self', 294, 15, 294, 19),
woosh.Token(woosh.OP, '.', 294, 19, 294, 20),
woosh.Token(woosh.NAME, 'voidcmd', 294, 20, 294, 27),
woosh.Token(woosh.OP, '(', 294, 27, 294, 28),
woosh.Token(woosh.NAME, 'cmd', 294, 28, 294, 31),
woosh.Token(woosh.OP, ')', 294, 31, 294, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 32, 295, 0),
woosh.Token(woosh.DEDENT, '    ', 296, 0, 296, 4),
woosh.Token(woosh.NAME, 'def', 296, 4, 296, 7),
woosh.Token(woosh.NAME, 'sendeprt', 296, 8, 296, 16),
woosh.Token(woosh.OP, '(', 296, 16, 296, 17),
woosh.Token(woosh.NAME, 'self', 296, 17, 296, 21),
woosh.Token(woosh.OP, ',', 296, 21, 296, 22),
woosh.Token(woosh.NAME, 'host', 296, 23, 296, 27),
woosh.Token(woosh.OP, ',', 296, 27, 296, 28),
woosh.Token(woosh.NAME, 'port', 296, 29, 296, 33),
woosh.Token(woosh.OP, ')', 296, 33, 296, 34),
woosh.Token(woosh.OP, ':', 296, 34, 296, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 296, 35, 297, 0),
woosh.Token(woosh.INDENT, '        ', 297, 0, 297, 8),
woosh.Token(woosh.STRING, "'''Send an EPRT command with the current host and the given port number.'''", 297, 8, 297, 83),
woosh.Token(woosh.NEWLINE, '\r\n', 297, 83, 298, 0),
woosh.Token(woosh.NAME, 'af', 298, 8, 298, 10),
woosh.Token(woosh.OP, '=', 298, 11, 298, 12),
woosh.Token(woosh.NUMBER, '0', 298, 13, 298, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 14, 299, 0),
woosh.Token(woosh.NAME, 'if', 299, 8, 299, 10),
woosh.Token(woosh.NAME, 'self', 299, 11, 299, 15),
woosh.Token(woosh.OP, '.', 299, 15, 299, 16),
woosh.Token(woosh.NAME, 'af', 299, 16, 299, 18),
woosh.Token(woosh.OP, '==', 299, 19, 299, 21),
woosh.Token(woosh.NAME, 'socket', 299, 22, 299, 28),
woosh.Token(woosh.OP, '.', 299, 28, 299, 29),
woosh.Token(woosh.NAME, 'AF_INET', 299, 29, 299, 36),
woosh.Token(woosh.OP, ':', 299, 36, 299, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 299, 37, 300, 0),
woosh.Token(woosh.INDENT, '            ', 300, 0, 300, 12),
woosh.Token(woosh.NAME, 'af', 300, 12, 300, 14),
woosh.Token(woosh.OP, '=', 300, 15, 300, 16),
woosh.Token(woosh.NUMBER, '1', 300, 17, 300, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 18, 301, 0),
woosh.Token(woosh.DEDENT, '        ', 301, 0, 301, 8),
woosh.Token(woosh.NAME, 'if', 301, 8, 301, 10),
woosh.Token(woosh.NAME, 'self', 301, 11, 301, 15),
woosh.Token(woosh.OP, '.', 301, 15, 301, 16),
woosh.Token(woosh.NAME, 'af', 301, 16, 301, 18),
woosh.Token(woosh.OP, '==', 301, 19, 301, 21),
woosh.Token(woosh.NAME, 'socket', 301, 22, 301, 28),
woosh.Token(woosh.OP, '.', 301, 28, 301, 29),
woosh.Token(woosh.NAME, 'AF_INET6', 301, 29, 301, 37),
woosh.Token(woosh.OP, ':', 301, 37, 301, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 301, 38, 302, 0),
woosh.Token(woosh.INDENT, '            ', 302, 0, 302, 12),
woosh.Token(woosh.NAME, 'af', 302, 12, 302, 14),
woosh.Token(woosh.OP, '=', 302, 15, 302, 16),
woosh.Token(woosh.NUMBER, '2', 302, 17, 302, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 302, 18, 303, 0),
woosh.Token(woosh.DEDENT, '        ', 303, 0, 303, 8),
woosh.Token(woosh.NAME, 'if', 303, 8, 303, 10),
woosh.Token(woosh.NAME, 'af', 303, 11, 303, 13),
woosh.Token(woosh.OP, '==', 303, 14, 303, 16),
woosh.Token(woosh.NUMBER, '0', 303, 17, 303, 18),
woosh.Token(woosh.OP, ':', 303, 18, 303, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 19, 304, 0),
woosh.Token(woosh.INDENT, '            ', 304, 0, 304, 12),
woosh.Token(woosh.NAME, 'raise', 304, 12, 304, 17),
woosh.Token(woosh.NAME, 'error_proto', 304, 18, 304, 29),
woosh.Token(woosh.OP, '(', 304, 29, 304, 30),
woosh.Token(woosh.STRING, "'unsupported address family'", 304, 30, 304, 58),
woosh.Token(woosh.OP, ')', 304, 58, 304, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 59, 305, 0),
woosh.Token(woosh.DEDENT, '        ', 305, 0, 305, 8),
woosh.Token(woosh.NAME, 'fields', 305, 8, 305, 14),
woosh.Token(woosh.OP, '=', 305, 15, 305, 16),
woosh.Token(woosh.OP, '[', 305, 17, 305, 18),
woosh.Token(woosh.STRING, "''", 305, 18, 305, 20),
woosh.Token(woosh.OP, ',', 305, 20, 305, 21),
woosh.Token(woosh.NAME, 'repr', 305, 22, 305, 26),
woosh.Token(woosh.OP, '(', 305, 26, 305, 27),
woosh.Token(woosh.NAME, 'af', 305, 27, 305, 29),
woosh.Token(woosh.OP, ')', 305, 29, 305, 30),
woosh.Token(woosh.OP, ',', 305, 30, 305, 31),
woosh.Token(woosh.NAME, 'host', 305, 32, 305, 36),
woosh.Token(woosh.OP, ',', 305, 36, 305, 37),
woosh.Token(woosh.NAME, 'repr', 305, 38, 305, 42),
woosh.Token(woosh.OP, '(', 305, 42, 305, 43),
woosh.Token(woosh.NAME, 'port', 305, 43, 305, 47),
woosh.Token(woosh.OP, ')', 305, 47, 305, 48),
woosh.Token(woosh.OP, ',', 305, 48, 305, 49),
woosh.Token(woosh.STRING, "''", 305, 50, 305, 52),
woosh.Token(woosh.OP, ']', 305, 52, 305, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 53, 306, 0),
woosh.Token(woosh.NAME, 'cmd', 306, 8, 306, 11),
woosh.Token(woosh.OP, '=', 306, 12, 306, 13),
woosh.Token(woosh.STRING, "'EPRT '", 306, 14, 306, 21),
woosh.Token(woosh.OP, '+', 306, 22, 306, 23),
woosh.Token(woosh.STRING, "'|'", 306, 24, 306, 27),
woosh.Token(woosh.OP, '.', 306, 27, 306, 28),
woosh.Token(woosh.NAME, 'join', 306, 28, 306, 32),
woosh.Token(woosh.OP, '(', 306, 32, 306, 33),
woosh.Token(woosh.NAME, 'fields', 306, 33, 306, 39),
woosh.Token(woosh.OP, ')', 306, 39, 306, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 40, 307, 0),
woosh.Token(woosh.NAME, 'return', 307, 8, 307, 14),
woosh.Token(woosh.NAME, 'self', 307, 15, 307, 19),
woosh.Token(woosh.OP, '.', 307, 19, 307, 20),
woosh.Token(woosh.NAME, 'voidcmd', 307, 20, 307, 27),
woosh.Token(woosh.OP, '(', 307, 27, 307, 28),
woosh.Token(woosh.NAME, 'cmd', 307, 28, 307, 31),
woosh.Token(woosh.OP, ')', 307, 31, 307, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 307, 32, 308, 0),
woosh.Token(woosh.DEDENT, '    ', 309, 0, 309, 4),
woosh.Token(woosh.NAME, 'def', 309, 4, 309, 7),
woosh.Token(woosh.NAME, 'makeport', 309, 8, 309, 16),
woosh.Token(woosh.OP, '(', 309, 16, 309, 17),
woosh.Token(woosh.NAME, 'self', 309, 17, 309, 21),
woosh.Token(woosh.OP, ')', 309, 21, 309, 22),
woosh.Token(woosh.OP, ':', 309, 22, 309, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 309, 23, 310, 0),
woosh.Token(woosh.INDENT, '        ', 310, 0, 310, 8),
woosh.Token(woosh.STRING, "'''Create a new socket and send a PORT command for it.'''", 310, 8, 310, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 65, 311, 0),
woosh.Token(woosh.NAME, 'sock', 311, 8, 311, 12),
woosh.Token(woosh.OP, '=', 311, 13, 311, 14),
woosh.Token(woosh.NAME, 'socket', 311, 15, 311, 21),
woosh.Token(woosh.OP, '.', 311, 21, 311, 22),
woosh.Token(woosh.NAME, 'create_server', 311, 22, 311, 35),
woosh.Token(woosh.OP, '(', 311, 35, 311, 36),
woosh.Token(woosh.OP, '(', 311, 36, 311, 37),
woosh.Token(woosh.STRING, '""', 311, 37, 311, 39),
woosh.Token(woosh.OP, ',', 311, 39, 311, 40),
woosh.Token(woosh.NUMBER, '0', 311, 41, 311, 42),
woosh.Token(woosh.OP, ')', 311, 42, 311, 43),
woosh.Token(woosh.OP, ',', 311, 43, 311, 44),
woosh.Token(woosh.NAME, 'family', 311, 45, 311, 51),
woosh.Token(woosh.OP, '=', 311, 51, 311, 52),
woosh.Token(woosh.NAME, 'self', 311, 52, 311, 56),
woosh.Token(woosh.OP, '.', 311, 56, 311, 57),
woosh.Token(woosh.NAME, 'af', 311, 57, 311, 59),
woosh.Token(woosh.OP, ',', 311, 59, 311, 60),
woosh.Token(woosh.NAME, 'backlog', 311, 61, 311, 68),
woosh.Token(woosh.OP, '=', 311, 68, 311, 69),
woosh.Token(woosh.NUMBER, '1', 311, 69, 311, 70),
woosh.Token(woosh.OP, ')', 311, 70, 311, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 71, 312, 0),
woosh.Token(woosh.NAME, 'port', 312, 8, 312, 12),
woosh.Token(woosh.OP, '=', 312, 13, 312, 14),
woosh.Token(woosh.NAME, 'sock', 312, 15, 312, 19),
woosh.Token(woosh.OP, '.', 312, 19, 312, 20),
woosh.Token(woosh.NAME, 'getsockname', 312, 20, 312, 31),
woosh.Token(woosh.OP, '(', 312, 31, 312, 32),
woosh.Token(woosh.OP, ')', 312, 32, 312, 33),
woosh.Token(woosh.OP, '[', 312, 33, 312, 34),
woosh.Token(woosh.NUMBER, '1', 312, 34, 312, 35),
woosh.Token(woosh.OP, ']', 312, 35, 312, 36),
woosh.Token(woosh.COMMENT, '# Get proper port', 312, 37, 312, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 54, 313, 0),
woosh.Token(woosh.NAME, 'host', 313, 8, 313, 12),
woosh.Token(woosh.OP, '=', 313, 13, 313, 14),
woosh.Token(woosh.NAME, 'self', 313, 15, 313, 19),
woosh.Token(woosh.OP, '.', 313, 19, 313, 20),
woosh.Token(woosh.NAME, 'sock', 313, 20, 313, 24),
woosh.Token(woosh.OP, '.', 313, 24, 313, 25),
woosh.Token(woosh.NAME, 'getsockname', 313, 25, 313, 36),
woosh.Token(woosh.OP, '(', 313, 36, 313, 37),
woosh.Token(woosh.OP, ')', 313, 37, 313, 38),
woosh.Token(woosh.OP, '[', 313, 38, 313, 39),
woosh.Token(woosh.NUMBER, '0', 313, 39, 313, 40),
woosh.Token(woosh.OP, ']', 313, 40, 313, 41),
woosh.Token(woosh.COMMENT, '# Get proper host', 313, 42, 313, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 313, 59, 314, 0),
woosh.Token(woosh.NAME, 'if', 314, 8, 314, 10),
woosh.Token(woosh.NAME, 'self', 314, 11, 314, 15),
woosh.Token(woosh.OP, '.', 314, 15, 314, 16),
woosh.Token(woosh.NAME, 'af', 314, 16, 314, 18),
woosh.Token(woosh.OP, '==', 314, 19, 314, 21),
woosh.Token(woosh.NAME, 'socket', 314, 22, 314, 28),
woosh.Token(woosh.OP, '.', 314, 28, 314, 29),
woosh.Token(woosh.NAME, 'AF_INET', 314, 29, 314, 36),
woosh.Token(woosh.OP, ':', 314, 36, 314, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 37, 315, 0),
woosh.Token(woosh.INDENT, '            ', 315, 0, 315, 12),
woosh.Token(woosh.NAME, 'resp', 315, 12, 315, 16),
woosh.Token(woosh.OP, '=', 315, 17, 315, 18),
woosh.Token(woosh.NAME, 'self', 315, 19, 315, 23),
woosh.Token(woosh.OP, '.', 315, 23, 315, 24),
woosh.Token(woosh.NAME, 'sendport', 315, 24, 315, 32),
woosh.Token(woosh.OP, '(', 315, 32, 315, 33),
woosh.Token(woosh.NAME, 'host', 315, 33, 315, 37),
woosh.Token(woosh.OP, ',', 315, 37, 315, 38),
woosh.Token(woosh.NAME, 'port', 315, 39, 315, 43),
woosh.Token(woosh.OP, ')', 315, 43, 315, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 44, 316, 0),
woosh.Token(woosh.DEDENT, '        ', 316, 0, 316, 8),
woosh.Token(woosh.NAME, 'else', 316, 8, 316, 12),
woosh.Token(woosh.OP, ':', 316, 12, 316, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 13, 317, 0),
woosh.Token(woosh.INDENT, '            ', 317, 0, 317, 12),
woosh.Token(woosh.NAME, 'resp', 317, 12, 317, 16),
woosh.Token(woosh.OP, '=', 317, 17, 317, 18),
woosh.Token(woosh.NAME, 'self', 317, 19, 317, 23),
woosh.Token(woosh.OP, '.', 317, 23, 317, 24),
woosh.Token(woosh.NAME, 'sendeprt', 317, 24, 317, 32),
woosh.Token(woosh.OP, '(', 317, 32, 317, 33),
woosh.Token(woosh.NAME, 'host', 317, 33, 317, 37),
woosh.Token(woosh.OP, ',', 317, 37, 317, 38),
woosh.Token(woosh.NAME, 'port', 317, 39, 317, 43),
woosh.Token(woosh.OP, ')', 317, 43, 317, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 44, 318, 0),
woosh.Token(woosh.DEDENT, '        ', 318, 0, 318, 8),
woosh.Token(woosh.NAME, 'if', 318, 8, 318, 10),
woosh.Token(woosh.NAME, 'self', 318, 11, 318, 15),
woosh.Token(woosh.OP, '.', 318, 15, 318, 16),
woosh.Token(woosh.NAME, 'timeout', 318, 16, 318, 23),
woosh.Token(woosh.NAME, 'is', 318, 24, 318, 26),
woosh.Token(woosh.NAME, 'not', 318, 27, 318, 30),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 318, 31, 318, 54),
woosh.Token(woosh.OP, ':', 318, 54, 318, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 55, 319, 0),
woosh.Token(woosh.INDENT, '            ', 319, 0, 319, 12),
woosh.Token(woosh.NAME, 'sock', 319, 12, 319, 16),
woosh.Token(woosh.OP, '.', 319, 16, 319, 17),
woosh.Token(woosh.NAME, 'settimeout', 319, 17, 319, 27),
woosh.Token(woosh.OP, '(', 319, 27, 319, 28),
woosh.Token(woosh.NAME, 'self', 319, 28, 319, 32),
woosh.Token(woosh.OP, '.', 319, 32, 319, 33),
woosh.Token(woosh.NAME, 'timeout', 319, 33, 319, 40),
woosh.Token(woosh.OP, ')', 319, 40, 319, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 41, 320, 0),
woosh.Token(woosh.DEDENT, '        ', 320, 0, 320, 8),
woosh.Token(woosh.NAME, 'return', 320, 8, 320, 14),
woosh.Token(woosh.NAME, 'sock', 320, 15, 320, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 19, 321, 0),
woosh.Token(woosh.DEDENT, '    ', 322, 0, 322, 4),
woosh.Token(woosh.NAME, 'def', 322, 4, 322, 7),
woosh.Token(woosh.NAME, 'makepasv', 322, 8, 322, 16),
woosh.Token(woosh.OP, '(', 322, 16, 322, 17),
woosh.Token(woosh.NAME, 'self', 322, 17, 322, 21),
woosh.Token(woosh.OP, ')', 322, 21, 322, 22),
woosh.Token(woosh.OP, ':', 322, 22, 322, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 23, 323, 0),
woosh.Token(woosh.INDENT, '        ', 323, 0, 323, 8),
woosh.Token(woosh.NAME, 'if', 323, 8, 323, 10),
woosh.Token(woosh.NAME, 'self', 323, 11, 323, 15),
woosh.Token(woosh.OP, '.', 323, 15, 323, 16),
woosh.Token(woosh.NAME, 'af', 323, 16, 323, 18),
woosh.Token(woosh.OP, '==', 323, 19, 323, 21),
woosh.Token(woosh.NAME, 'socket', 323, 22, 323, 28),
woosh.Token(woosh.OP, '.', 323, 28, 323, 29),
woosh.Token(woosh.NAME, 'AF_INET', 323, 29, 323, 36),
woosh.Token(woosh.OP, ':', 323, 36, 323, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 37, 324, 0),
woosh.Token(woosh.INDENT, '            ', 324, 0, 324, 12),
woosh.Token(woosh.NAME, 'host', 324, 12, 324, 16),
woosh.Token(woosh.OP, ',', 324, 16, 324, 17),
woosh.Token(woosh.NAME, 'port', 324, 18, 324, 22),
woosh.Token(woosh.OP, '=', 324, 23, 324, 24),
woosh.Token(woosh.NAME, 'parse227', 324, 25, 324, 33),
woosh.Token(woosh.OP, '(', 324, 33, 324, 34),
woosh.Token(woosh.NAME, 'self', 324, 34, 324, 38),
woosh.Token(woosh.OP, '.', 324, 38, 324, 39),
woosh.Token(woosh.NAME, 'sendcmd', 324, 39, 324, 46),
woosh.Token(woosh.OP, '(', 324, 46, 324, 47),
woosh.Token(woosh.STRING, "'PASV'", 324, 47, 324, 53),
woosh.Token(woosh.OP, ')', 324, 53, 324, 54),
woosh.Token(woosh.OP, ')', 324, 54, 324, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 55, 325, 0),
woosh.Token(woosh.DEDENT, '        ', 325, 0, 325, 8),
woosh.Token(woosh.NAME, 'else', 325, 8, 325, 12),
woosh.Token(woosh.OP, ':', 325, 12, 325, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 13, 326, 0),
woosh.Token(woosh.INDENT, '            ', 326, 0, 326, 12),
woosh.Token(woosh.NAME, 'host', 326, 12, 326, 16),
woosh.Token(woosh.OP, ',', 326, 16, 326, 17),
woosh.Token(woosh.NAME, 'port', 326, 18, 326, 22),
woosh.Token(woosh.OP, '=', 326, 23, 326, 24),
woosh.Token(woosh.NAME, 'parse229', 326, 25, 326, 33),
woosh.Token(woosh.OP, '(', 326, 33, 326, 34),
woosh.Token(woosh.NAME, 'self', 326, 34, 326, 38),
woosh.Token(woosh.OP, '.', 326, 38, 326, 39),
woosh.Token(woosh.NAME, 'sendcmd', 326, 39, 326, 46),
woosh.Token(woosh.OP, '(', 326, 46, 326, 47),
woosh.Token(woosh.STRING, "'EPSV'", 326, 47, 326, 53),
woosh.Token(woosh.OP, ')', 326, 53, 326, 54),
woosh.Token(woosh.OP, ',', 326, 54, 326, 55),
woosh.Token(woosh.NAME, 'self', 326, 56, 326, 60),
woosh.Token(woosh.OP, '.', 326, 60, 326, 61),
woosh.Token(woosh.NAME, 'sock', 326, 61, 326, 65),
woosh.Token(woosh.OP, '.', 326, 65, 326, 66),
woosh.Token(woosh.NAME, 'getpeername', 326, 66, 326, 77),
woosh.Token(woosh.OP, '(', 326, 77, 326, 78),
woosh.Token(woosh.OP, ')', 326, 78, 326, 79),
woosh.Token(woosh.OP, ')', 326, 79, 326, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 80, 327, 0),
woosh.Token(woosh.DEDENT, '        ', 327, 0, 327, 8),
woosh.Token(woosh.NAME, 'return', 327, 8, 327, 14),
woosh.Token(woosh.NAME, 'host', 327, 15, 327, 19),
woosh.Token(woosh.OP, ',', 327, 19, 327, 20),
woosh.Token(woosh.NAME, 'port', 327, 21, 327, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 25, 328, 0),
woosh.Token(woosh.DEDENT, '    ', 329, 0, 329, 4),
woosh.Token(woosh.NAME, 'def', 329, 4, 329, 7),
woosh.Token(woosh.NAME, 'ntransfercmd', 329, 8, 329, 20),
woosh.Token(woosh.OP, '(', 329, 20, 329, 21),
woosh.Token(woosh.NAME, 'self', 329, 21, 329, 25),
woosh.Token(woosh.OP, ',', 329, 25, 329, 26),
woosh.Token(woosh.NAME, 'cmd', 329, 27, 329, 30),
woosh.Token(woosh.OP, ',', 329, 30, 329, 31),
woosh.Token(woosh.NAME, 'rest', 329, 32, 329, 36),
woosh.Token(woosh.OP, '=', 329, 36, 329, 37),
woosh.Token(woosh.NAME, 'None', 329, 37, 329, 41),
woosh.Token(woosh.OP, ')', 329, 41, 329, 42),
woosh.Token(woosh.OP, ':', 329, 42, 329, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 329, 43, 330, 0),
woosh.Token(woosh.INDENT, '        ', 330, 0, 330, 8),
woosh.Token(woosh.STRING, '"""Initiate a transfer over the data connection.\r\n\r\n        If the transfer is active, send a port command and the\r\n        transfer command, and accept the connection.  If the server is\r\n        passive, send a pasv command, connect to it, and start the\r\n        transfer command.  Either way, return the socket for the\r\n        connection and the expected size of the transfer.  The\r\n        expected size may be None if it could not be determined.\r\n\r\n        Optional `rest\' argument can be a string that is sent as the\r\n        argument to a REST command.  This is essentially a server\r\n        marker used to tell the server to skip over any data up to the\r\n        given marker.\r\n        """', 330, 8, 343, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 343, 11, 344, 0),
woosh.Token(woosh.NAME, 'size', 344, 8, 344, 12),
woosh.Token(woosh.OP, '=', 344, 13, 344, 14),
woosh.Token(woosh.NAME, 'None', 344, 15, 344, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 19, 345, 0),
woosh.Token(woosh.NAME, 'if', 345, 8, 345, 10),
woosh.Token(woosh.NAME, 'self', 345, 11, 345, 15),
woosh.Token(woosh.OP, '.', 345, 15, 345, 16),
woosh.Token(woosh.NAME, 'passiveserver', 345, 16, 345, 29),
woosh.Token(woosh.OP, ':', 345, 29, 345, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 30, 346, 0),
woosh.Token(woosh.INDENT, '            ', 346, 0, 346, 12),
woosh.Token(woosh.NAME, 'host', 346, 12, 346, 16),
woosh.Token(woosh.OP, ',', 346, 16, 346, 17),
woosh.Token(woosh.NAME, 'port', 346, 18, 346, 22),
woosh.Token(woosh.OP, '=', 346, 23, 346, 24),
woosh.Token(woosh.NAME, 'self', 346, 25, 346, 29),
woosh.Token(woosh.OP, '.', 346, 29, 346, 30),
woosh.Token(woosh.NAME, 'makepasv', 346, 30, 346, 38),
woosh.Token(woosh.OP, '(', 346, 38, 346, 39),
woosh.Token(woosh.OP, ')', 346, 39, 346, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 40, 347, 0),
woosh.Token(woosh.NAME, 'conn', 347, 12, 347, 16),
woosh.Token(woosh.OP, '=', 347, 17, 347, 18),
woosh.Token(woosh.NAME, 'socket', 347, 19, 347, 25),
woosh.Token(woosh.OP, '.', 347, 25, 347, 26),
woosh.Token(woosh.NAME, 'create_connection', 347, 26, 347, 43),
woosh.Token(woosh.OP, '(', 347, 43, 347, 44),
woosh.Token(woosh.OP, '(', 347, 44, 347, 45),
woosh.Token(woosh.NAME, 'host', 347, 45, 347, 49),
woosh.Token(woosh.OP, ',', 347, 49, 347, 50),
woosh.Token(woosh.NAME, 'port', 347, 51, 347, 55),
woosh.Token(woosh.OP, ')', 347, 55, 347, 56),
woosh.Token(woosh.OP, ',', 347, 56, 347, 57),
woosh.Token(woosh.NAME, 'self', 347, 58, 347, 62),
woosh.Token(woosh.OP, '.', 347, 62, 347, 63),
woosh.Token(woosh.NAME, 'timeout', 347, 63, 347, 70),
woosh.Token(woosh.OP, ',', 347, 70, 347, 71),
woosh.Token(woosh.NAME, 'source_address', 348, 44, 348, 58),
woosh.Token(woosh.OP, '=', 348, 58, 348, 59),
woosh.Token(woosh.NAME, 'self', 348, 59, 348, 63),
woosh.Token(woosh.OP, '.', 348, 63, 348, 64),
woosh.Token(woosh.NAME, 'source_address', 348, 64, 348, 78),
woosh.Token(woosh.OP, ')', 348, 78, 348, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 79, 349, 0),
woosh.Token(woosh.NAME, 'try', 349, 12, 349, 15),
woosh.Token(woosh.OP, ':', 349, 15, 349, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 16, 350, 0),
woosh.Token(woosh.INDENT, '                ', 350, 0, 350, 16),
woosh.Token(woosh.NAME, 'if', 350, 16, 350, 18),
woosh.Token(woosh.NAME, 'rest', 350, 19, 350, 23),
woosh.Token(woosh.NAME, 'is', 350, 24, 350, 26),
woosh.Token(woosh.NAME, 'not', 350, 27, 350, 30),
woosh.Token(woosh.NAME, 'None', 350, 31, 350, 35),
woosh.Token(woosh.OP, ':', 350, 35, 350, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 36, 351, 0),
woosh.Token(woosh.INDENT, '                    ', 351, 0, 351, 20),
woosh.Token(woosh.NAME, 'self', 351, 20, 351, 24),
woosh.Token(woosh.OP, '.', 351, 24, 351, 25),
woosh.Token(woosh.NAME, 'sendcmd', 351, 25, 351, 32),
woosh.Token(woosh.OP, '(', 351, 32, 351, 33),
woosh.Token(woosh.STRING, '"REST %s"', 351, 33, 351, 42),
woosh.Token(woosh.OP, '%', 351, 43, 351, 44),
woosh.Token(woosh.NAME, 'rest', 351, 45, 351, 49),
woosh.Token(woosh.OP, ')', 351, 49, 351, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 50, 352, 0),
woosh.Token(woosh.DEDENT, '                ', 352, 0, 352, 16),
woosh.Token(woosh.NAME, 'resp', 352, 16, 352, 20),
woosh.Token(woosh.OP, '=', 352, 21, 352, 22),
woosh.Token(woosh.NAME, 'self', 352, 23, 352, 27),
woosh.Token(woosh.OP, '.', 352, 27, 352, 28),
woosh.Token(woosh.NAME, 'sendcmd', 352, 28, 352, 35),
woosh.Token(woosh.OP, '(', 352, 35, 352, 36),
woosh.Token(woosh.NAME, 'cmd', 352, 36, 352, 39),
woosh.Token(woosh.OP, ')', 352, 39, 352, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 352, 40, 353, 0),
woosh.Token(woosh.COMMENT, '# Some servers apparently send a 200 reply to', 353, 16, 353, 61),
woosh.Token(woosh.COMMENT, '# a LIST or STOR command, before the 150 reply', 354, 16, 354, 62),
woosh.Token(woosh.COMMENT, '# (and way before the 226 reply). This seems to', 355, 16, 355, 63),
woosh.Token(woosh.COMMENT, '# be in violation of the protocol (which only allows', 356, 16, 356, 68),
woosh.Token(woosh.COMMENT, '# 1xx or error messages for LIST), so we just discard', 357, 16, 357, 69),
woosh.Token(woosh.COMMENT, '# this response.', 358, 16, 358, 32),
woosh.Token(woosh.NAME, 'if', 359, 16, 359, 18),
woosh.Token(woosh.NAME, 'resp', 359, 19, 359, 23),
woosh.Token(woosh.OP, '[', 359, 23, 359, 24),
woosh.Token(woosh.NUMBER, '0', 359, 24, 359, 25),
woosh.Token(woosh.OP, ']', 359, 25, 359, 26),
woosh.Token(woosh.OP, '==', 359, 27, 359, 29),
woosh.Token(woosh.STRING, "'2'", 359, 30, 359, 33),
woosh.Token(woosh.OP, ':', 359, 33, 359, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 34, 360, 0),
woosh.Token(woosh.INDENT, '                    ', 360, 0, 360, 20),
woosh.Token(woosh.NAME, 'resp', 360, 20, 360, 24),
woosh.Token(woosh.OP, '=', 360, 25, 360, 26),
woosh.Token(woosh.NAME, 'self', 360, 27, 360, 31),
woosh.Token(woosh.OP, '.', 360, 31, 360, 32),
woosh.Token(woosh.NAME, 'getresp', 360, 32, 360, 39),
woosh.Token(woosh.OP, '(', 360, 39, 360, 40),
woosh.Token(woosh.OP, ')', 360, 40, 360, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 41, 361, 0),
woosh.Token(woosh.DEDENT, '                ', 361, 0, 361, 16),
woosh.Token(woosh.NAME, 'if', 361, 16, 361, 18),
woosh.Token(woosh.NAME, 'resp', 361, 19, 361, 23),
woosh.Token(woosh.OP, '[', 361, 23, 361, 24),
woosh.Token(woosh.NUMBER, '0', 361, 24, 361, 25),
woosh.Token(woosh.OP, ']', 361, 25, 361, 26),
woosh.Token(woosh.OP, '!=', 361, 27, 361, 29),
woosh.Token(woosh.STRING, "'1'", 361, 30, 361, 33),
woosh.Token(woosh.OP, ':', 361, 33, 361, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 34, 362, 0),
woosh.Token(woosh.INDENT, '                    ', 362, 0, 362, 20),
woosh.Token(woosh.NAME, 'raise', 362, 20, 362, 25),
woosh.Token(woosh.NAME, 'error_reply', 362, 26, 362, 37),
woosh.Token(woosh.OP, '(', 362, 37, 362, 38),
woosh.Token(woosh.NAME, 'resp', 362, 38, 362, 42),
woosh.Token(woosh.OP, ')', 362, 42, 362, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 362, 43, 363, 0),
woosh.Token(woosh.DEDENT, '            ', 363, 0, 363, 12),
woosh.Token(woosh.DEDENT, '', 363, 12, 363, 12),
woosh.Token(woosh.NAME, 'except', 363, 12, 363, 18),
woosh.Token(woosh.OP, ':', 363, 18, 363, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 19, 364, 0),
woosh.Token(woosh.INDENT, '                ', 364, 0, 364, 16),
woosh.Token(woosh.NAME, 'conn', 364, 16, 364, 20),
woosh.Token(woosh.OP, '.', 364, 20, 364, 21),
woosh.Token(woosh.NAME, 'close', 364, 21, 364, 26),
woosh.Token(woosh.OP, '(', 364, 26, 364, 27),
woosh.Token(woosh.OP, ')', 364, 27, 364, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 28, 365, 0),
woosh.Token(woosh.NAME, 'raise', 365, 16, 365, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 21, 366, 0),
woosh.Token(woosh.DEDENT, '        ', 366, 0, 366, 8),
woosh.Token(woosh.DEDENT, '', 366, 8, 366, 8),
woosh.Token(woosh.NAME, 'else', 366, 8, 366, 12),
woosh.Token(woosh.OP, ':', 366, 12, 366, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 13, 367, 0),
woosh.Token(woosh.INDENT, '            ', 367, 0, 367, 12),
woosh.Token(woosh.NAME, 'with', 367, 12, 367, 16),
woosh.Token(woosh.NAME, 'self', 367, 17, 367, 21),
woosh.Token(woosh.OP, '.', 367, 21, 367, 22),
woosh.Token(woosh.NAME, 'makeport', 367, 22, 367, 30),
woosh.Token(woosh.OP, '(', 367, 30, 367, 31),
woosh.Token(woosh.OP, ')', 367, 31, 367, 32),
woosh.Token(woosh.NAME, 'as', 367, 33, 367, 35),
woosh.Token(woosh.NAME, 'sock', 367, 36, 367, 40),
woosh.Token(woosh.OP, ':', 367, 40, 367, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 41, 368, 0),
woosh.Token(woosh.INDENT, '                ', 368, 0, 368, 16),
woosh.Token(woosh.NAME, 'if', 368, 16, 368, 18),
woosh.Token(woosh.NAME, 'rest', 368, 19, 368, 23),
woosh.Token(woosh.NAME, 'is', 368, 24, 368, 26),
woosh.Token(woosh.NAME, 'not', 368, 27, 368, 30),
woosh.Token(woosh.NAME, 'None', 368, 31, 368, 35),
woosh.Token(woosh.OP, ':', 368, 35, 368, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 36, 369, 0),
woosh.Token(woosh.INDENT, '                    ', 369, 0, 369, 20),
woosh.Token(woosh.NAME, 'self', 369, 20, 369, 24),
woosh.Token(woosh.OP, '.', 369, 24, 369, 25),
woosh.Token(woosh.NAME, 'sendcmd', 369, 25, 369, 32),
woosh.Token(woosh.OP, '(', 369, 32, 369, 33),
woosh.Token(woosh.STRING, '"REST %s"', 369, 33, 369, 42),
woosh.Token(woosh.OP, '%', 369, 43, 369, 44),
woosh.Token(woosh.NAME, 'rest', 369, 45, 369, 49),
woosh.Token(woosh.OP, ')', 369, 49, 369, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 50, 370, 0),
woosh.Token(woosh.DEDENT, '                ', 370, 0, 370, 16),
woosh.Token(woosh.NAME, 'resp', 370, 16, 370, 20),
woosh.Token(woosh.OP, '=', 370, 21, 370, 22),
woosh.Token(woosh.NAME, 'self', 370, 23, 370, 27),
woosh.Token(woosh.OP, '.', 370, 27, 370, 28),
woosh.Token(woosh.NAME, 'sendcmd', 370, 28, 370, 35),
woosh.Token(woosh.OP, '(', 370, 35, 370, 36),
woosh.Token(woosh.NAME, 'cmd', 370, 36, 370, 39),
woosh.Token(woosh.OP, ')', 370, 39, 370, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 40, 371, 0),
woosh.Token(woosh.COMMENT, '# See above.', 371, 16, 371, 28),
woosh.Token(woosh.NAME, 'if', 372, 16, 372, 18),
woosh.Token(woosh.NAME, 'resp', 372, 19, 372, 23),
woosh.Token(woosh.OP, '[', 372, 23, 372, 24),
woosh.Token(woosh.NUMBER, '0', 372, 24, 372, 25),
woosh.Token(woosh.OP, ']', 372, 25, 372, 26),
woosh.Token(woosh.OP, '==', 372, 27, 372, 29),
woosh.Token(woosh.STRING, "'2'", 372, 30, 372, 33),
woosh.Token(woosh.OP, ':', 372, 33, 372, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 372, 34, 373, 0),
woosh.Token(woosh.INDENT, '                    ', 373, 0, 373, 20),
woosh.Token(woosh.NAME, 'resp', 373, 20, 373, 24),
woosh.Token(woosh.OP, '=', 373, 25, 373, 26),
woosh.Token(woosh.NAME, 'self', 373, 27, 373, 31),
woosh.Token(woosh.OP, '.', 373, 31, 373, 32),
woosh.Token(woosh.NAME, 'getresp', 373, 32, 373, 39),
woosh.Token(woosh.OP, '(', 373, 39, 373, 40),
woosh.Token(woosh.OP, ')', 373, 40, 373, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 41, 374, 0),
woosh.Token(woosh.DEDENT, '                ', 374, 0, 374, 16),
woosh.Token(woosh.NAME, 'if', 374, 16, 374, 18),
woosh.Token(woosh.NAME, 'resp', 374, 19, 374, 23),
woosh.Token(woosh.OP, '[', 374, 23, 374, 24),
woosh.Token(woosh.NUMBER, '0', 374, 24, 374, 25),
woosh.Token(woosh.OP, ']', 374, 25, 374, 26),
woosh.Token(woosh.OP, '!=', 374, 27, 374, 29),
woosh.Token(woosh.STRING, "'1'", 374, 30, 374, 33),
woosh.Token(woosh.OP, ':', 374, 33, 374, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 34, 375, 0),
woosh.Token(woosh.INDENT, '                    ', 375, 0, 375, 20),
woosh.Token(woosh.NAME, 'raise', 375, 20, 375, 25),
woosh.Token(woosh.NAME, 'error_reply', 375, 26, 375, 37),
woosh.Token(woosh.OP, '(', 375, 37, 375, 38),
woosh.Token(woosh.NAME, 'resp', 375, 38, 375, 42),
woosh.Token(woosh.OP, ')', 375, 42, 375, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 43, 376, 0),
woosh.Token(woosh.DEDENT, '                ', 376, 0, 376, 16),
woosh.Token(woosh.NAME, 'conn', 376, 16, 376, 20),
woosh.Token(woosh.OP, ',', 376, 20, 376, 21),
woosh.Token(woosh.NAME, 'sockaddr', 376, 22, 376, 30),
woosh.Token(woosh.OP, '=', 376, 31, 376, 32),
woosh.Token(woosh.NAME, 'sock', 376, 33, 376, 37),
woosh.Token(woosh.OP, '.', 376, 37, 376, 38),
woosh.Token(woosh.NAME, 'accept', 376, 38, 376, 44),
woosh.Token(woosh.OP, '(', 376, 44, 376, 45),
woosh.Token(woosh.OP, ')', 376, 45, 376, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 46, 377, 0),
woosh.Token(woosh.NAME, 'if', 377, 16, 377, 18),
woosh.Token(woosh.NAME, 'self', 377, 19, 377, 23),
woosh.Token(woosh.OP, '.', 377, 23, 377, 24),
woosh.Token(woosh.NAME, 'timeout', 377, 24, 377, 31),
woosh.Token(woosh.NAME, 'is', 377, 32, 377, 34),
woosh.Token(woosh.NAME, 'not', 377, 35, 377, 38),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 377, 39, 377, 62),
woosh.Token(woosh.OP, ':', 377, 62, 377, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 63, 378, 0),
woosh.Token(woosh.INDENT, '                    ', 378, 0, 378, 20),
woosh.Token(woosh.NAME, 'conn', 378, 20, 378, 24),
woosh.Token(woosh.OP, '.', 378, 24, 378, 25),
woosh.Token(woosh.NAME, 'settimeout', 378, 25, 378, 35),
woosh.Token(woosh.OP, '(', 378, 35, 378, 36),
woosh.Token(woosh.NAME, 'self', 378, 36, 378, 40),
woosh.Token(woosh.OP, '.', 378, 40, 378, 41),
woosh.Token(woosh.NAME, 'timeout', 378, 41, 378, 48),
woosh.Token(woosh.OP, ')', 378, 48, 378, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 49, 379, 0),
woosh.Token(woosh.DEDENT, '        ', 379, 0, 379, 8),
woosh.Token(woosh.DEDENT, '', 379, 8, 379, 8),
woosh.Token(woosh.DEDENT, '', 379, 8, 379, 8),
woosh.Token(woosh.NAME, 'if', 379, 8, 379, 10),
woosh.Token(woosh.NAME, 'resp', 379, 11, 379, 15),
woosh.Token(woosh.OP, '[', 379, 15, 379, 16),
woosh.Token(woosh.OP, ':', 379, 16, 379, 17),
woosh.Token(woosh.NUMBER, '3', 379, 17, 379, 18),
woosh.Token(woosh.OP, ']', 379, 18, 379, 19),
woosh.Token(woosh.OP, '==', 379, 20, 379, 22),
woosh.Token(woosh.STRING, "'150'", 379, 23, 379, 28),
woosh.Token(woosh.OP, ':', 379, 28, 379, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 29, 380, 0),
woosh.Token(woosh.COMMENT, '# this is conditional in case we received a 125', 380, 12, 380, 59),
woosh.Token(woosh.INDENT, '            ', 381, 0, 381, 12),
woosh.Token(woosh.NAME, 'size', 381, 12, 381, 16),
woosh.Token(woosh.OP, '=', 381, 17, 381, 18),
woosh.Token(woosh.NAME, 'parse150', 381, 19, 381, 27),
woosh.Token(woosh.OP, '(', 381, 27, 381, 28),
woosh.Token(woosh.NAME, 'resp', 381, 28, 381, 32),
woosh.Token(woosh.OP, ')', 381, 32, 381, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 33, 382, 0),
woosh.Token(woosh.DEDENT, '        ', 382, 0, 382, 8),
woosh.Token(woosh.NAME, 'return', 382, 8, 382, 14),
woosh.Token(woosh.NAME, 'conn', 382, 15, 382, 19),
woosh.Token(woosh.OP, ',', 382, 19, 382, 20),
woosh.Token(woosh.NAME, 'size', 382, 21, 382, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 25, 383, 0),
woosh.Token(woosh.DEDENT, '    ', 384, 0, 384, 4),
woosh.Token(woosh.NAME, 'def', 384, 4, 384, 7),
woosh.Token(woosh.NAME, 'transfercmd', 384, 8, 384, 19),
woosh.Token(woosh.OP, '(', 384, 19, 384, 20),
woosh.Token(woosh.NAME, 'self', 384, 20, 384, 24),
woosh.Token(woosh.OP, ',', 384, 24, 384, 25),
woosh.Token(woosh.NAME, 'cmd', 384, 26, 384, 29),
woosh.Token(woosh.OP, ',', 384, 29, 384, 30),
woosh.Token(woosh.NAME, 'rest', 384, 31, 384, 35),
woosh.Token(woosh.OP, '=', 384, 35, 384, 36),
woosh.Token(woosh.NAME, 'None', 384, 36, 384, 40),
woosh.Token(woosh.OP, ')', 384, 40, 384, 41),
woosh.Token(woosh.OP, ':', 384, 41, 384, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 42, 385, 0),
woosh.Token(woosh.INDENT, '        ', 385, 0, 385, 8),
woosh.Token(woosh.STRING, '"""Like ntransfercmd() but returns only the socket."""', 385, 8, 385, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 62, 386, 0),
woosh.Token(woosh.NAME, 'return', 386, 8, 386, 14),
woosh.Token(woosh.NAME, 'self', 386, 15, 386, 19),
woosh.Token(woosh.OP, '.', 386, 19, 386, 20),
woosh.Token(woosh.NAME, 'ntransfercmd', 386, 20, 386, 32),
woosh.Token(woosh.OP, '(', 386, 32, 386, 33),
woosh.Token(woosh.NAME, 'cmd', 386, 33, 386, 36),
woosh.Token(woosh.OP, ',', 386, 36, 386, 37),
woosh.Token(woosh.NAME, 'rest', 386, 38, 386, 42),
woosh.Token(woosh.OP, ')', 386, 42, 386, 43),
woosh.Token(woosh.OP, '[', 386, 43, 386, 44),
woosh.Token(woosh.NUMBER, '0', 386, 44, 386, 45),
woosh.Token(woosh.OP, ']', 386, 45, 386, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 46, 387, 0),
woosh.Token(woosh.DEDENT, '    ', 388, 0, 388, 4),
woosh.Token(woosh.NAME, 'def', 388, 4, 388, 7),
woosh.Token(woosh.NAME, 'login', 388, 8, 388, 13),
woosh.Token(woosh.OP, '(', 388, 13, 388, 14),
woosh.Token(woosh.NAME, 'self', 388, 14, 388, 18),
woosh.Token(woosh.OP, ',', 388, 18, 388, 19),
woosh.Token(woosh.NAME, 'user', 388, 20, 388, 24),
woosh.Token(woosh.OP, '=', 388, 25, 388, 26),
woosh.Token(woosh.STRING, "''", 388, 27, 388, 29),
woosh.Token(woosh.OP, ',', 388, 29, 388, 30),
woosh.Token(woosh.NAME, 'passwd', 388, 31, 388, 37),
woosh.Token(woosh.OP, '=', 388, 38, 388, 39),
woosh.Token(woosh.STRING, "''", 388, 40, 388, 42),
woosh.Token(woosh.OP, ',', 388, 42, 388, 43),
woosh.Token(woosh.NAME, 'acct', 388, 44, 388, 48),
woosh.Token(woosh.OP, '=', 388, 49, 388, 50),
woosh.Token(woosh.STRING, "''", 388, 51, 388, 53),
woosh.Token(woosh.OP, ')', 388, 53, 388, 54),
woosh.Token(woosh.OP, ':', 388, 54, 388, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 388, 55, 389, 0),
woosh.Token(woosh.INDENT, '        ', 389, 0, 389, 8),
woosh.Token(woosh.STRING, "'''Login, default anonymous.'''", 389, 8, 389, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 389, 39, 390, 0),
woosh.Token(woosh.NAME, 'if', 390, 8, 390, 10),
woosh.Token(woosh.NAME, 'not', 390, 11, 390, 14),
woosh.Token(woosh.NAME, 'user', 390, 15, 390, 19),
woosh.Token(woosh.OP, ':', 390, 19, 390, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 20, 391, 0),
woosh.Token(woosh.INDENT, '            ', 391, 0, 391, 12),
woosh.Token(woosh.NAME, 'user', 391, 12, 391, 16),
woosh.Token(woosh.OP, '=', 391, 17, 391, 18),
woosh.Token(woosh.STRING, "'anonymous'", 391, 19, 391, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 30, 392, 0),
woosh.Token(woosh.DEDENT, '        ', 392, 0, 392, 8),
woosh.Token(woosh.NAME, 'if', 392, 8, 392, 10),
woosh.Token(woosh.NAME, 'not', 392, 11, 392, 14),
woosh.Token(woosh.NAME, 'passwd', 392, 15, 392, 21),
woosh.Token(woosh.OP, ':', 392, 21, 392, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 392, 22, 393, 0),
woosh.Token(woosh.INDENT, '            ', 393, 0, 393, 12),
woosh.Token(woosh.NAME, 'passwd', 393, 12, 393, 18),
woosh.Token(woosh.OP, '=', 393, 19, 393, 20),
woosh.Token(woosh.STRING, "''", 393, 21, 393, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 23, 394, 0),
woosh.Token(woosh.DEDENT, '        ', 394, 0, 394, 8),
woosh.Token(woosh.NAME, 'if', 394, 8, 394, 10),
woosh.Token(woosh.NAME, 'not', 394, 11, 394, 14),
woosh.Token(woosh.NAME, 'acct', 394, 15, 394, 19),
woosh.Token(woosh.OP, ':', 394, 19, 394, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 20, 395, 0),
woosh.Token(woosh.INDENT, '            ', 395, 0, 395, 12),
woosh.Token(woosh.NAME, 'acct', 395, 12, 395, 16),
woosh.Token(woosh.OP, '=', 395, 17, 395, 18),
woosh.Token(woosh.STRING, "''", 395, 19, 395, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 21, 396, 0),
woosh.Token(woosh.DEDENT, '        ', 396, 0, 396, 8),
woosh.Token(woosh.NAME, 'if', 396, 8, 396, 10),
woosh.Token(woosh.NAME, 'user', 396, 11, 396, 15),
woosh.Token(woosh.OP, '==', 396, 16, 396, 18),
woosh.Token(woosh.STRING, "'anonymous'", 396, 19, 396, 30),
woosh.Token(woosh.NAME, 'and', 396, 31, 396, 34),
woosh.Token(woosh.NAME, 'passwd', 396, 35, 396, 41),
woosh.Token(woosh.NAME, 'in', 396, 42, 396, 44),
woosh.Token(woosh.OP, '{', 396, 45, 396, 46),
woosh.Token(woosh.STRING, "''", 396, 46, 396, 48),
woosh.Token(woosh.OP, ',', 396, 48, 396, 49),
woosh.Token(woosh.STRING, "'-'", 396, 50, 396, 53),
woosh.Token(woosh.OP, '}', 396, 53, 396, 54),
woosh.Token(woosh.OP, ':', 396, 54, 396, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 396, 55, 397, 0),
woosh.Token(woosh.COMMENT, '# If there is no anonymous ftp password specified', 397, 12, 397, 61),
woosh.Token(woosh.COMMENT, "# then we'll just use anonymous@", 398, 12, 398, 44),
woosh.Token(woosh.COMMENT, "# We don't send any other thing because:", 399, 12, 399, 52),
woosh.Token(woosh.COMMENT, '# - We want to remain anonymous', 400, 12, 400, 43),
woosh.Token(woosh.COMMENT, '# - We want to stop SPAM', 401, 12, 401, 36),
woosh.Token(woosh.COMMENT, "# - We don't want to let ftp sites to discriminate by the user,", 402, 12, 402, 75),
woosh.Token(woosh.COMMENT, '#   host or country.', 403, 12, 403, 32),
woosh.Token(woosh.INDENT, '            ', 404, 0, 404, 12),
woosh.Token(woosh.NAME, 'passwd', 404, 12, 404, 18),
woosh.Token(woosh.OP, '=', 404, 19, 404, 20),
woosh.Token(woosh.NAME, 'passwd', 404, 21, 404, 27),
woosh.Token(woosh.OP, '+', 404, 28, 404, 29),
woosh.Token(woosh.STRING, "'anonymous@'", 404, 30, 404, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 42, 405, 0),
woosh.Token(woosh.DEDENT, '        ', 405, 0, 405, 8),
woosh.Token(woosh.NAME, 'resp', 405, 8, 405, 12),
woosh.Token(woosh.OP, '=', 405, 13, 405, 14),
woosh.Token(woosh.NAME, 'self', 405, 15, 405, 19),
woosh.Token(woosh.OP, '.', 405, 19, 405, 20),
woosh.Token(woosh.NAME, 'sendcmd', 405, 20, 405, 27),
woosh.Token(woosh.OP, '(', 405, 27, 405, 28),
woosh.Token(woosh.STRING, "'USER '", 405, 28, 405, 35),
woosh.Token(woosh.OP, '+', 405, 36, 405, 37),
woosh.Token(woosh.NAME, 'user', 405, 38, 405, 42),
woosh.Token(woosh.OP, ')', 405, 42, 405, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 43, 406, 0),
woosh.Token(woosh.NAME, 'if', 406, 8, 406, 10),
woosh.Token(woosh.NAME, 'resp', 406, 11, 406, 15),
woosh.Token(woosh.OP, '[', 406, 15, 406, 16),
woosh.Token(woosh.NUMBER, '0', 406, 16, 406, 17),
woosh.Token(woosh.OP, ']', 406, 17, 406, 18),
woosh.Token(woosh.OP, '==', 406, 19, 406, 21),
woosh.Token(woosh.STRING, "'3'", 406, 22, 406, 25),
woosh.Token(woosh.OP, ':', 406, 25, 406, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 26, 407, 0),
woosh.Token(woosh.INDENT, '            ', 407, 0, 407, 12),
woosh.Token(woosh.NAME, 'resp', 407, 12, 407, 16),
woosh.Token(woosh.OP, '=', 407, 17, 407, 18),
woosh.Token(woosh.NAME, 'self', 407, 19, 407, 23),
woosh.Token(woosh.OP, '.', 407, 23, 407, 24),
woosh.Token(woosh.NAME, 'sendcmd', 407, 24, 407, 31),
woosh.Token(woosh.OP, '(', 407, 31, 407, 32),
woosh.Token(woosh.STRING, "'PASS '", 407, 32, 407, 39),
woosh.Token(woosh.OP, '+', 407, 40, 407, 41),
woosh.Token(woosh.NAME, 'passwd', 407, 42, 407, 48),
woosh.Token(woosh.OP, ')', 407, 48, 407, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 49, 408, 0),
woosh.Token(woosh.DEDENT, '        ', 408, 0, 408, 8),
woosh.Token(woosh.NAME, 'if', 408, 8, 408, 10),
woosh.Token(woosh.NAME, 'resp', 408, 11, 408, 15),
woosh.Token(woosh.OP, '[', 408, 15, 408, 16),
woosh.Token(woosh.NUMBER, '0', 408, 16, 408, 17),
woosh.Token(woosh.OP, ']', 408, 17, 408, 18),
woosh.Token(woosh.OP, '==', 408, 19, 408, 21),
woosh.Token(woosh.STRING, "'3'", 408, 22, 408, 25),
woosh.Token(woosh.OP, ':', 408, 25, 408, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 26, 409, 0),
woosh.Token(woosh.INDENT, '            ', 409, 0, 409, 12),
woosh.Token(woosh.NAME, 'resp', 409, 12, 409, 16),
woosh.Token(woosh.OP, '=', 409, 17, 409, 18),
woosh.Token(woosh.NAME, 'self', 409, 19, 409, 23),
woosh.Token(woosh.OP, '.', 409, 23, 409, 24),
woosh.Token(woosh.NAME, 'sendcmd', 409, 24, 409, 31),
woosh.Token(woosh.OP, '(', 409, 31, 409, 32),
woosh.Token(woosh.STRING, "'ACCT '", 409, 32, 409, 39),
woosh.Token(woosh.OP, '+', 409, 40, 409, 41),
woosh.Token(woosh.NAME, 'acct', 409, 42, 409, 46),
woosh.Token(woosh.OP, ')', 409, 46, 409, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 409, 47, 410, 0),
woosh.Token(woosh.DEDENT, '        ', 410, 0, 410, 8),
woosh.Token(woosh.NAME, 'if', 410, 8, 410, 10),
woosh.Token(woosh.NAME, 'resp', 410, 11, 410, 15),
woosh.Token(woosh.OP, '[', 410, 15, 410, 16),
woosh.Token(woosh.NUMBER, '0', 410, 16, 410, 17),
woosh.Token(woosh.OP, ']', 410, 17, 410, 18),
woosh.Token(woosh.OP, '!=', 410, 19, 410, 21),
woosh.Token(woosh.STRING, "'2'", 410, 22, 410, 25),
woosh.Token(woosh.OP, ':', 410, 25, 410, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 26, 411, 0),
woosh.Token(woosh.INDENT, '            ', 411, 0, 411, 12),
woosh.Token(woosh.NAME, 'raise', 411, 12, 411, 17),
woosh.Token(woosh.NAME, 'error_reply', 411, 18, 411, 29),
woosh.Token(woosh.OP, '(', 411, 29, 411, 30),
woosh.Token(woosh.NAME, 'resp', 411, 30, 411, 34),
woosh.Token(woosh.OP, ')', 411, 34, 411, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 35, 412, 0),
woosh.Token(woosh.DEDENT, '        ', 412, 0, 412, 8),
woosh.Token(woosh.NAME, 'return', 412, 8, 412, 14),
woosh.Token(woosh.NAME, 'resp', 412, 15, 412, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 19, 413, 0),
woosh.Token(woosh.DEDENT, '    ', 414, 0, 414, 4),
woosh.Token(woosh.NAME, 'def', 414, 4, 414, 7),
woosh.Token(woosh.NAME, 'retrbinary', 414, 8, 414, 18),
woosh.Token(woosh.OP, '(', 414, 18, 414, 19),
woosh.Token(woosh.NAME, 'self', 414, 19, 414, 23),
woosh.Token(woosh.OP, ',', 414, 23, 414, 24),
woosh.Token(woosh.NAME, 'cmd', 414, 25, 414, 28),
woosh.Token(woosh.OP, ',', 414, 28, 414, 29),
woosh.Token(woosh.NAME, 'callback', 414, 30, 414, 38),
woosh.Token(woosh.OP, ',', 414, 38, 414, 39),
woosh.Token(woosh.NAME, 'blocksize', 414, 40, 414, 49),
woosh.Token(woosh.OP, '=', 414, 49, 414, 50),
woosh.Token(woosh.NUMBER, '8192', 414, 50, 414, 54),
woosh.Token(woosh.OP, ',', 414, 54, 414, 55),
woosh.Token(woosh.NAME, 'rest', 414, 56, 414, 60),
woosh.Token(woosh.OP, '=', 414, 60, 414, 61),
woosh.Token(woosh.NAME, 'None', 414, 61, 414, 65),
woosh.Token(woosh.OP, ')', 414, 65, 414, 66),
woosh.Token(woosh.OP, ':', 414, 66, 414, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 67, 415, 0),
woosh.Token(woosh.INDENT, '        ', 415, 0, 415, 8),
woosh.Token(woosh.STRING, '"""Retrieve data in binary mode.  A new port is created for you.\r\n\r\n        Args:\r\n          cmd: A RETR command.\r\n          callback: A single parameter callable to be called on each\r\n                    block of data read.\r\n          blocksize: The maximum number of bytes to read from the\r\n                     socket at one time.  [default: 8192]\r\n          rest: Passed to transfercmd().  [default: None]\r\n\r\n        Returns:\r\n          The response code.\r\n        """', 415, 8, 427, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 427, 11, 428, 0),
woosh.Token(woosh.NAME, 'self', 428, 8, 428, 12),
woosh.Token(woosh.OP, '.', 428, 12, 428, 13),
woosh.Token(woosh.NAME, 'voidcmd', 428, 13, 428, 20),
woosh.Token(woosh.OP, '(', 428, 20, 428, 21),
woosh.Token(woosh.STRING, "'TYPE I'", 428, 21, 428, 29),
woosh.Token(woosh.OP, ')', 428, 29, 428, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 428, 30, 429, 0),
woosh.Token(woosh.NAME, 'with', 429, 8, 429, 12),
woosh.Token(woosh.NAME, 'self', 429, 13, 429, 17),
woosh.Token(woosh.OP, '.', 429, 17, 429, 18),
woosh.Token(woosh.NAME, 'transfercmd', 429, 18, 429, 29),
woosh.Token(woosh.OP, '(', 429, 29, 429, 30),
woosh.Token(woosh.NAME, 'cmd', 429, 30, 429, 33),
woosh.Token(woosh.OP, ',', 429, 33, 429, 34),
woosh.Token(woosh.NAME, 'rest', 429, 35, 429, 39),
woosh.Token(woosh.OP, ')', 429, 39, 429, 40),
woosh.Token(woosh.NAME, 'as', 429, 41, 429, 43),
woosh.Token(woosh.NAME, 'conn', 429, 44, 429, 48),
woosh.Token(woosh.OP, ':', 429, 48, 429, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 49, 430, 0),
woosh.Token(woosh.INDENT, '            ', 430, 0, 430, 12),
woosh.Token(woosh.NAME, 'while', 430, 12, 430, 17),
woosh.Token(woosh.NUMBER, '1', 430, 18, 430, 19),
woosh.Token(woosh.OP, ':', 430, 19, 430, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 430, 20, 431, 0),
woosh.Token(woosh.INDENT, '                ', 431, 0, 431, 16),
woosh.Token(woosh.NAME, 'data', 431, 16, 431, 20),
woosh.Token(woosh.OP, '=', 431, 21, 431, 22),
woosh.Token(woosh.NAME, 'conn', 431, 23, 431, 27),
woosh.Token(woosh.OP, '.', 431, 27, 431, 28),
woosh.Token(woosh.NAME, 'recv', 431, 28, 431, 32),
woosh.Token(woosh.OP, '(', 431, 32, 431, 33),
woosh.Token(woosh.NAME, 'blocksize', 431, 33, 431, 42),
woosh.Token(woosh.OP, ')', 431, 42, 431, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 431, 43, 432, 0),
woosh.Token(woosh.NAME, 'if', 432, 16, 432, 18),
woosh.Token(woosh.NAME, 'not', 432, 19, 432, 22),
woosh.Token(woosh.NAME, 'data', 432, 23, 432, 27),
woosh.Token(woosh.OP, ':', 432, 27, 432, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 432, 28, 433, 0),
woosh.Token(woosh.INDENT, '                    ', 433, 0, 433, 20),
woosh.Token(woosh.NAME, 'break', 433, 20, 433, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 25, 434, 0),
woosh.Token(woosh.DEDENT, '                ', 434, 0, 434, 16),
woosh.Token(woosh.NAME, 'callback', 434, 16, 434, 24),
woosh.Token(woosh.OP, '(', 434, 24, 434, 25),
woosh.Token(woosh.NAME, 'data', 434, 25, 434, 29),
woosh.Token(woosh.OP, ')', 434, 29, 434, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 434, 30, 435, 0),
woosh.Token(woosh.COMMENT, '# shutdown ssl layer', 435, 12, 435, 32),
woosh.Token(woosh.DEDENT, '            ', 436, 0, 436, 12),
woosh.Token(woosh.NAME, 'if', 436, 12, 436, 14),
woosh.Token(woosh.NAME, '_SSLSocket', 436, 15, 436, 25),
woosh.Token(woosh.NAME, 'is', 436, 26, 436, 28),
woosh.Token(woosh.NAME, 'not', 436, 29, 436, 32),
woosh.Token(woosh.NAME, 'None', 436, 33, 436, 37),
woosh.Token(woosh.NAME, 'and', 436, 38, 436, 41),
woosh.Token(woosh.NAME, 'isinstance', 436, 42, 436, 52),
woosh.Token(woosh.OP, '(', 436, 52, 436, 53),
woosh.Token(woosh.NAME, 'conn', 436, 53, 436, 57),
woosh.Token(woosh.OP, ',', 436, 57, 436, 58),
woosh.Token(woosh.NAME, '_SSLSocket', 436, 59, 436, 69),
woosh.Token(woosh.OP, ')', 436, 69, 436, 70),
woosh.Token(woosh.OP, ':', 436, 70, 436, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 71, 437, 0),
woosh.Token(woosh.INDENT, '                ', 437, 0, 437, 16),
woosh.Token(woosh.NAME, 'conn', 437, 16, 437, 20),
woosh.Token(woosh.OP, '.', 437, 20, 437, 21),
woosh.Token(woosh.NAME, 'unwrap', 437, 21, 437, 27),
woosh.Token(woosh.OP, '(', 437, 27, 437, 28),
woosh.Token(woosh.OP, ')', 437, 28, 437, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 437, 29, 438, 0),
woosh.Token(woosh.DEDENT, '        ', 438, 0, 438, 8),
woosh.Token(woosh.DEDENT, '', 438, 8, 438, 8),
woosh.Token(woosh.NAME, 'return', 438, 8, 438, 14),
woosh.Token(woosh.NAME, 'self', 438, 15, 438, 19),
woosh.Token(woosh.OP, '.', 438, 19, 438, 20),
woosh.Token(woosh.NAME, 'voidresp', 438, 20, 438, 28),
woosh.Token(woosh.OP, '(', 438, 28, 438, 29),
woosh.Token(woosh.OP, ')', 438, 29, 438, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 438, 30, 439, 0),
woosh.Token(woosh.DEDENT, '    ', 440, 0, 440, 4),
woosh.Token(woosh.NAME, 'def', 440, 4, 440, 7),
woosh.Token(woosh.NAME, 'retrlines', 440, 8, 440, 17),
woosh.Token(woosh.OP, '(', 440, 17, 440, 18),
woosh.Token(woosh.NAME, 'self', 440, 18, 440, 22),
woosh.Token(woosh.OP, ',', 440, 22, 440, 23),
woosh.Token(woosh.NAME, 'cmd', 440, 24, 440, 27),
woosh.Token(woosh.OP, ',', 440, 27, 440, 28),
woosh.Token(woosh.NAME, 'callback', 440, 29, 440, 37),
woosh.Token(woosh.OP, '=', 440, 38, 440, 39),
woosh.Token(woosh.NAME, 'None', 440, 40, 440, 44),
woosh.Token(woosh.OP, ')', 440, 44, 440, 45),
woosh.Token(woosh.OP, ':', 440, 45, 440, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 440, 46, 441, 0),
woosh.Token(woosh.INDENT, '        ', 441, 0, 441, 8),
woosh.Token(woosh.STRING, '"""Retrieve data in line mode.  A new port is created for you.\r\n\r\n        Args:\r\n          cmd: A RETR, LIST, or NLST command.\r\n          callback: An optional single parameter callable that is called\r\n                    for each line with the trailing CRLF stripped.\r\n                    [default: print_line()]\r\n\r\n        Returns:\r\n          The response code.\r\n        """', 441, 8, 451, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 451, 11, 452, 0),
woosh.Token(woosh.NAME, 'if', 452, 8, 452, 10),
woosh.Token(woosh.NAME, 'callback', 452, 11, 452, 19),
woosh.Token(woosh.NAME, 'is', 452, 20, 452, 22),
woosh.Token(woosh.NAME, 'None', 452, 23, 452, 27),
woosh.Token(woosh.OP, ':', 452, 27, 452, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 452, 28, 453, 0),
woosh.Token(woosh.INDENT, '            ', 453, 0, 453, 12),
woosh.Token(woosh.NAME, 'callback', 453, 12, 453, 20),
woosh.Token(woosh.OP, '=', 453, 21, 453, 22),
woosh.Token(woosh.NAME, 'print_line', 453, 23, 453, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 453, 33, 454, 0),
woosh.Token(woosh.DEDENT, '        ', 454, 0, 454, 8),
woosh.Token(woosh.NAME, 'resp', 454, 8, 454, 12),
woosh.Token(woosh.OP, '=', 454, 13, 454, 14),
woosh.Token(woosh.NAME, 'self', 454, 15, 454, 19),
woosh.Token(woosh.OP, '.', 454, 19, 454, 20),
woosh.Token(woosh.NAME, 'sendcmd', 454, 20, 454, 27),
woosh.Token(woosh.OP, '(', 454, 27, 454, 28),
woosh.Token(woosh.STRING, "'TYPE A'", 454, 28, 454, 36),
woosh.Token(woosh.OP, ')', 454, 36, 454, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 37, 455, 0),
woosh.Token(woosh.NAME, 'with', 455, 8, 455, 12),
woosh.Token(woosh.NAME, 'self', 455, 13, 455, 17),
woosh.Token(woosh.OP, '.', 455, 17, 455, 18),
woosh.Token(woosh.NAME, 'transfercmd', 455, 18, 455, 29),
woosh.Token(woosh.OP, '(', 455, 29, 455, 30),
woosh.Token(woosh.NAME, 'cmd', 455, 30, 455, 33),
woosh.Token(woosh.OP, ')', 455, 33, 455, 34),
woosh.Token(woosh.NAME, 'as', 455, 35, 455, 37),
woosh.Token(woosh.NAME, 'conn', 455, 38, 455, 42),
woosh.Token(woosh.OP, ',', 455, 42, 455, 43),
woosh.Token(woosh.NAME, 'conn', 456, 17, 456, 21),
woosh.Token(woosh.OP, '.', 456, 21, 456, 22),
woosh.Token(woosh.NAME, 'makefile', 456, 22, 456, 30),
woosh.Token(woosh.OP, '(', 456, 30, 456, 31),
woosh.Token(woosh.STRING, "'r'", 456, 31, 456, 34),
woosh.Token(woosh.OP, ',', 456, 34, 456, 35),
woosh.Token(woosh.NAME, 'encoding', 456, 36, 456, 44),
woosh.Token(woosh.OP, '=', 456, 44, 456, 45),
woosh.Token(woosh.NAME, 'self', 456, 45, 456, 49),
woosh.Token(woosh.OP, '.', 456, 49, 456, 50),
woosh.Token(woosh.NAME, 'encoding', 456, 50, 456, 58),
woosh.Token(woosh.OP, ')', 456, 58, 456, 59),
woosh.Token(woosh.NAME, 'as', 456, 60, 456, 62),
woosh.Token(woosh.NAME, 'fp', 456, 63, 456, 65),
woosh.Token(woosh.OP, ':', 456, 65, 456, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 456, 66, 457, 0),
woosh.Token(woosh.INDENT, '            ', 457, 0, 457, 12),
woosh.Token(woosh.NAME, 'while', 457, 12, 457, 17),
woosh.Token(woosh.NUMBER, '1', 457, 18, 457, 19),
woosh.Token(woosh.OP, ':', 457, 19, 457, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 457, 20, 458, 0),
woosh.Token(woosh.INDENT, '                ', 458, 0, 458, 16),
woosh.Token(woosh.NAME, 'line', 458, 16, 458, 20),
woosh.Token(woosh.OP, '=', 458, 21, 458, 22),
woosh.Token(woosh.NAME, 'fp', 458, 23, 458, 25),
woosh.Token(woosh.OP, '.', 458, 25, 458, 26),
woosh.Token(woosh.NAME, 'readline', 458, 26, 458, 34),
woosh.Token(woosh.OP, '(', 458, 34, 458, 35),
woosh.Token(woosh.NAME, 'self', 458, 35, 458, 39),
woosh.Token(woosh.OP, '.', 458, 39, 458, 40),
woosh.Token(woosh.NAME, 'maxline', 458, 40, 458, 47),
woosh.Token(woosh.OP, '+', 458, 48, 458, 49),
woosh.Token(woosh.NUMBER, '1', 458, 50, 458, 51),
woosh.Token(woosh.OP, ')', 458, 51, 458, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 458, 52, 459, 0),
woosh.Token(woosh.NAME, 'if', 459, 16, 459, 18),
woosh.Token(woosh.NAME, 'len', 459, 19, 459, 22),
woosh.Token(woosh.OP, '(', 459, 22, 459, 23),
woosh.Token(woosh.NAME, 'line', 459, 23, 459, 27),
woosh.Token(woosh.OP, ')', 459, 27, 459, 28),
woosh.Token(woosh.OP, '>', 459, 29, 459, 30),
woosh.Token(woosh.NAME, 'self', 459, 31, 459, 35),
woosh.Token(woosh.OP, '.', 459, 35, 459, 36),
woosh.Token(woosh.NAME, 'maxline', 459, 36, 459, 43),
woosh.Token(woosh.OP, ':', 459, 43, 459, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 459, 44, 460, 0),
woosh.Token(woosh.INDENT, '                    ', 460, 0, 460, 20),
woosh.Token(woosh.NAME, 'raise', 460, 20, 460, 25),
woosh.Token(woosh.NAME, 'Error', 460, 26, 460, 31),
woosh.Token(woosh.OP, '(', 460, 31, 460, 32),
woosh.Token(woosh.STRING, '"got more than %d bytes"', 460, 32, 460, 56),
woosh.Token(woosh.OP, '%', 460, 57, 460, 58),
woosh.Token(woosh.NAME, 'self', 460, 59, 460, 63),
woosh.Token(woosh.OP, '.', 460, 63, 460, 64),
woosh.Token(woosh.NAME, 'maxline', 460, 64, 460, 71),
woosh.Token(woosh.OP, ')', 460, 71, 460, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 460, 72, 461, 0),
woosh.Token(woosh.DEDENT, '                ', 461, 0, 461, 16),
woosh.Token(woosh.NAME, 'if', 461, 16, 461, 18),
woosh.Token(woosh.NAME, 'self', 461, 19, 461, 23),
woosh.Token(woosh.OP, '.', 461, 23, 461, 24),
woosh.Token(woosh.NAME, 'debugging', 461, 24, 461, 33),
woosh.Token(woosh.OP, '>', 461, 34, 461, 35),
woosh.Token(woosh.NUMBER, '2', 461, 36, 461, 37),
woosh.Token(woosh.OP, ':', 461, 37, 461, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 461, 38, 462, 0),
woosh.Token(woosh.INDENT, '                    ', 462, 0, 462, 20),
woosh.Token(woosh.NAME, 'print', 462, 20, 462, 25),
woosh.Token(woosh.OP, '(', 462, 25, 462, 26),
woosh.Token(woosh.STRING, "'*retr*'", 462, 26, 462, 34),
woosh.Token(woosh.OP, ',', 462, 34, 462, 35),
woosh.Token(woosh.NAME, 'repr', 462, 36, 462, 40),
woosh.Token(woosh.OP, '(', 462, 40, 462, 41),
woosh.Token(woosh.NAME, 'line', 462, 41, 462, 45),
woosh.Token(woosh.OP, ')', 462, 45, 462, 46),
woosh.Token(woosh.OP, ')', 462, 46, 462, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 47, 463, 0),
woosh.Token(woosh.DEDENT, '                ', 463, 0, 463, 16),
woosh.Token(woosh.NAME, 'if', 463, 16, 463, 18),
woosh.Token(woosh.NAME, 'not', 463, 19, 463, 22),
woosh.Token(woosh.NAME, 'line', 463, 23, 463, 27),
woosh.Token(woosh.OP, ':', 463, 27, 463, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 28, 464, 0),
woosh.Token(woosh.INDENT, '                    ', 464, 0, 464, 20),
woosh.Token(woosh.NAME, 'break', 464, 20, 464, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 25, 465, 0),
woosh.Token(woosh.DEDENT, '                ', 465, 0, 465, 16),
woosh.Token(woosh.NAME, 'if', 465, 16, 465, 18),
woosh.Token(woosh.NAME, 'line', 465, 19, 465, 23),
woosh.Token(woosh.OP, '[', 465, 23, 465, 24),
woosh.Token(woosh.OP, '-', 465, 24, 465, 25),
woosh.Token(woosh.NUMBER, '2', 465, 25, 465, 26),
woosh.Token(woosh.OP, ':', 465, 26, 465, 27),
woosh.Token(woosh.OP, ']', 465, 27, 465, 28),
woosh.Token(woosh.OP, '==', 465, 29, 465, 31),
woosh.Token(woosh.NAME, 'CRLF', 465, 32, 465, 36),
woosh.Token(woosh.OP, ':', 465, 36, 465, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 465, 37, 466, 0),
woosh.Token(woosh.INDENT, '                    ', 466, 0, 466, 20),
woosh.Token(woosh.NAME, 'line', 466, 20, 466, 24),
woosh.Token(woosh.OP, '=', 466, 25, 466, 26),
woosh.Token(woosh.NAME, 'line', 466, 27, 466, 31),
woosh.Token(woosh.OP, '[', 466, 31, 466, 32),
woosh.Token(woosh.OP, ':', 466, 32, 466, 33),
woosh.Token(woosh.OP, '-', 466, 33, 466, 34),
woosh.Token(woosh.NUMBER, '2', 466, 34, 466, 35),
woosh.Token(woosh.OP, ']', 466, 35, 466, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 466, 36, 467, 0),
woosh.Token(woosh.DEDENT, '                ', 467, 0, 467, 16),
woosh.Token(woosh.NAME, 'elif', 467, 16, 467, 20),
woosh.Token(woosh.NAME, 'line', 467, 21, 467, 25),
woosh.Token(woosh.OP, '[', 467, 25, 467, 26),
woosh.Token(woosh.OP, '-', 467, 26, 467, 27),
woosh.Token(woosh.NUMBER, '1', 467, 27, 467, 28),
woosh.Token(woosh.OP, ':', 467, 28, 467, 29),
woosh.Token(woosh.OP, ']', 467, 29, 467, 30),
woosh.Token(woosh.OP, '==', 467, 31, 467, 33),
woosh.Token(woosh.STRING, "'\\n'", 467, 34, 467, 38),
woosh.Token(woosh.OP, ':', 467, 38, 467, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 467, 39, 468, 0),
woosh.Token(woosh.INDENT, '                    ', 468, 0, 468, 20),
woosh.Token(woosh.NAME, 'line', 468, 20, 468, 24),
woosh.Token(woosh.OP, '=', 468, 25, 468, 26),
woosh.Token(woosh.NAME, 'line', 468, 27, 468, 31),
woosh.Token(woosh.OP, '[', 468, 31, 468, 32),
woosh.Token(woosh.OP, ':', 468, 32, 468, 33),
woosh.Token(woosh.OP, '-', 468, 33, 468, 34),
woosh.Token(woosh.NUMBER, '1', 468, 34, 468, 35),
woosh.Token(woosh.OP, ']', 468, 35, 468, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 468, 36, 469, 0),
woosh.Token(woosh.DEDENT, '                ', 469, 0, 469, 16),
woosh.Token(woosh.NAME, 'callback', 469, 16, 469, 24),
woosh.Token(woosh.OP, '(', 469, 24, 469, 25),
woosh.Token(woosh.NAME, 'line', 469, 25, 469, 29),
woosh.Token(woosh.OP, ')', 469, 29, 469, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 469, 30, 470, 0),
woosh.Token(woosh.COMMENT, '# shutdown ssl layer', 470, 12, 470, 32),
woosh.Token(woosh.DEDENT, '            ', 471, 0, 471, 12),
woosh.Token(woosh.NAME, 'if', 471, 12, 471, 14),
woosh.Token(woosh.NAME, '_SSLSocket', 471, 15, 471, 25),
woosh.Token(woosh.NAME, 'is', 471, 26, 471, 28),
woosh.Token(woosh.NAME, 'not', 471, 29, 471, 32),
woosh.Token(woosh.NAME, 'None', 471, 33, 471, 37),
woosh.Token(woosh.NAME, 'and', 471, 38, 471, 41),
woosh.Token(woosh.NAME, 'isinstance', 471, 42, 471, 52),
woosh.Token(woosh.OP, '(', 471, 52, 471, 53),
woosh.Token(woosh.NAME, 'conn', 471, 53, 471, 57),
woosh.Token(woosh.OP, ',', 471, 57, 471, 58),
woosh.Token(woosh.NAME, '_SSLSocket', 471, 59, 471, 69),
woosh.Token(woosh.OP, ')', 471, 69, 471, 70),
woosh.Token(woosh.OP, ':', 471, 70, 471, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 471, 71, 472, 0),
woosh.Token(woosh.INDENT, '                ', 472, 0, 472, 16),
woosh.Token(woosh.NAME, 'conn', 472, 16, 472, 20),
woosh.Token(woosh.OP, '.', 472, 20, 472, 21),
woosh.Token(woosh.NAME, 'unwrap', 472, 21, 472, 27),
woosh.Token(woosh.OP, '(', 472, 27, 472, 28),
woosh.Token(woosh.OP, ')', 472, 28, 472, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 472, 29, 473, 0),
woosh.Token(woosh.DEDENT, '        ', 473, 0, 473, 8),
woosh.Token(woosh.DEDENT, '', 473, 8, 473, 8),
woosh.Token(woosh.NAME, 'return', 473, 8, 473, 14),
woosh.Token(woosh.NAME, 'self', 473, 15, 473, 19),
woosh.Token(woosh.OP, '.', 473, 19, 473, 20),
woosh.Token(woosh.NAME, 'voidresp', 473, 20, 473, 28),
woosh.Token(woosh.OP, '(', 473, 28, 473, 29),
woosh.Token(woosh.OP, ')', 473, 29, 473, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 473, 30, 474, 0),
woosh.Token(woosh.DEDENT, '    ', 475, 0, 475, 4),
woosh.Token(woosh.NAME, 'def', 475, 4, 475, 7),
woosh.Token(woosh.NAME, 'storbinary', 475, 8, 475, 18),
woosh.Token(woosh.OP, '(', 475, 18, 475, 19),
woosh.Token(woosh.NAME, 'self', 475, 19, 475, 23),
woosh.Token(woosh.OP, ',', 475, 23, 475, 24),
woosh.Token(woosh.NAME, 'cmd', 475, 25, 475, 28),
woosh.Token(woosh.OP, ',', 475, 28, 475, 29),
woosh.Token(woosh.NAME, 'fp', 475, 30, 475, 32),
woosh.Token(woosh.OP, ',', 475, 32, 475, 33),
woosh.Token(woosh.NAME, 'blocksize', 475, 34, 475, 43),
woosh.Token(woosh.OP, '=', 475, 43, 475, 44),
woosh.Token(woosh.NUMBER, '8192', 475, 44, 475, 48),
woosh.Token(woosh.OP, ',', 475, 48, 475, 49),
woosh.Token(woosh.NAME, 'callback', 475, 50, 475, 58),
woosh.Token(woosh.OP, '=', 475, 58, 475, 59),
woosh.Token(woosh.NAME, 'None', 475, 59, 475, 63),
woosh.Token(woosh.OP, ',', 475, 63, 475, 64),
woosh.Token(woosh.NAME, 'rest', 475, 65, 475, 69),
woosh.Token(woosh.OP, '=', 475, 69, 475, 70),
woosh.Token(woosh.NAME, 'None', 475, 70, 475, 74),
woosh.Token(woosh.OP, ')', 475, 74, 475, 75),
woosh.Token(woosh.OP, ':', 475, 75, 475, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 76, 476, 0),
woosh.Token(woosh.INDENT, '        ', 476, 0, 476, 8),
woosh.Token(woosh.STRING, '"""Store a file in binary mode.  A new port is created for you.\r\n\r\n        Args:\r\n          cmd: A STOR command.\r\n          fp: A file-like object with a read(num_bytes) method.\r\n          blocksize: The maximum data size to read from fp and send over\r\n                     the connection at once.  [default: 8192]\r\n          callback: An optional single parameter callable that is called on\r\n                    each block of data after it is sent.  [default: None]\r\n          rest: Passed to transfercmd().  [default: None]\r\n\r\n        Returns:\r\n          The response code.\r\n        """', 476, 8, 489, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 11, 490, 0),
woosh.Token(woosh.NAME, 'self', 490, 8, 490, 12),
woosh.Token(woosh.OP, '.', 490, 12, 490, 13),
woosh.Token(woosh.NAME, 'voidcmd', 490, 13, 490, 20),
woosh.Token(woosh.OP, '(', 490, 20, 490, 21),
woosh.Token(woosh.STRING, "'TYPE I'", 490, 21, 490, 29),
woosh.Token(woosh.OP, ')', 490, 29, 490, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 30, 491, 0),
woosh.Token(woosh.NAME, 'with', 491, 8, 491, 12),
woosh.Token(woosh.NAME, 'self', 491, 13, 491, 17),
woosh.Token(woosh.OP, '.', 491, 17, 491, 18),
woosh.Token(woosh.NAME, 'transfercmd', 491, 18, 491, 29),
woosh.Token(woosh.OP, '(', 491, 29, 491, 30),
woosh.Token(woosh.NAME, 'cmd', 491, 30, 491, 33),
woosh.Token(woosh.OP, ',', 491, 33, 491, 34),
woosh.Token(woosh.NAME, 'rest', 491, 35, 491, 39),
woosh.Token(woosh.OP, ')', 491, 39, 491, 40),
woosh.Token(woosh.NAME, 'as', 491, 41, 491, 43),
woosh.Token(woosh.NAME, 'conn', 491, 44, 491, 48),
woosh.Token(woosh.OP, ':', 491, 48, 491, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 49, 492, 0),
woosh.Token(woosh.INDENT, '            ', 492, 0, 492, 12),
woosh.Token(woosh.NAME, 'while', 492, 12, 492, 17),
woosh.Token(woosh.NUMBER, '1', 492, 18, 492, 19),
woosh.Token(woosh.OP, ':', 492, 19, 492, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 492, 20, 493, 0),
woosh.Token(woosh.INDENT, '                ', 493, 0, 493, 16),
woosh.Token(woosh.NAME, 'buf', 493, 16, 493, 19),
woosh.Token(woosh.OP, '=', 493, 20, 493, 21),
woosh.Token(woosh.NAME, 'fp', 493, 22, 493, 24),
woosh.Token(woosh.OP, '.', 493, 24, 493, 25),
woosh.Token(woosh.NAME, 'read', 493, 25, 493, 29),
woosh.Token(woosh.OP, '(', 493, 29, 493, 30),
woosh.Token(woosh.NAME, 'blocksize', 493, 30, 493, 39),
woosh.Token(woosh.OP, ')', 493, 39, 493, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 493, 40, 494, 0),
woosh.Token(woosh.NAME, 'if', 494, 16, 494, 18),
woosh.Token(woosh.NAME, 'not', 494, 19, 494, 22),
woosh.Token(woosh.NAME, 'buf', 494, 23, 494, 26),
woosh.Token(woosh.OP, ':', 494, 26, 494, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 494, 27, 495, 0),
woosh.Token(woosh.INDENT, '                    ', 495, 0, 495, 20),
woosh.Token(woosh.NAME, 'break', 495, 20, 495, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 495, 25, 496, 0),
woosh.Token(woosh.DEDENT, '                ', 496, 0, 496, 16),
woosh.Token(woosh.NAME, 'conn', 496, 16, 496, 20),
woosh.Token(woosh.OP, '.', 496, 20, 496, 21),
woosh.Token(woosh.NAME, 'sendall', 496, 21, 496, 28),
woosh.Token(woosh.OP, '(', 496, 28, 496, 29),
woosh.Token(woosh.NAME, 'buf', 496, 29, 496, 32),
woosh.Token(woosh.OP, ')', 496, 32, 496, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 496, 33, 497, 0),
woosh.Token(woosh.NAME, 'if', 497, 16, 497, 18),
woosh.Token(woosh.NAME, 'callback', 497, 19, 497, 27),
woosh.Token(woosh.OP, ':', 497, 27, 497, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 28, 498, 0),
woosh.Token(woosh.INDENT, '                    ', 498, 0, 498, 20),
woosh.Token(woosh.NAME, 'callback', 498, 20, 498, 28),
woosh.Token(woosh.OP, '(', 498, 28, 498, 29),
woosh.Token(woosh.NAME, 'buf', 498, 29, 498, 32),
woosh.Token(woosh.OP, ')', 498, 32, 498, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 33, 499, 0),
woosh.Token(woosh.COMMENT, '# shutdown ssl layer', 499, 12, 499, 32),
woosh.Token(woosh.DEDENT, '            ', 500, 0, 500, 12),
woosh.Token(woosh.DEDENT, '', 500, 12, 500, 12),
woosh.Token(woosh.NAME, 'if', 500, 12, 500, 14),
woosh.Token(woosh.NAME, '_SSLSocket', 500, 15, 500, 25),
woosh.Token(woosh.NAME, 'is', 500, 26, 500, 28),
woosh.Token(woosh.NAME, 'not', 500, 29, 500, 32),
woosh.Token(woosh.NAME, 'None', 500, 33, 500, 37),
woosh.Token(woosh.NAME, 'and', 500, 38, 500, 41),
woosh.Token(woosh.NAME, 'isinstance', 500, 42, 500, 52),
woosh.Token(woosh.OP, '(', 500, 52, 500, 53),
woosh.Token(woosh.NAME, 'conn', 500, 53, 500, 57),
woosh.Token(woosh.OP, ',', 500, 57, 500, 58),
woosh.Token(woosh.NAME, '_SSLSocket', 500, 59, 500, 69),
woosh.Token(woosh.OP, ')', 500, 69, 500, 70),
woosh.Token(woosh.OP, ':', 500, 70, 500, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 71, 501, 0),
woosh.Token(woosh.INDENT, '                ', 501, 0, 501, 16),
woosh.Token(woosh.NAME, 'conn', 501, 16, 501, 20),
woosh.Token(woosh.OP, '.', 501, 20, 501, 21),
woosh.Token(woosh.NAME, 'unwrap', 501, 21, 501, 27),
woosh.Token(woosh.OP, '(', 501, 27, 501, 28),
woosh.Token(woosh.OP, ')', 501, 28, 501, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 29, 502, 0),
woosh.Token(woosh.DEDENT, '        ', 502, 0, 502, 8),
woosh.Token(woosh.DEDENT, '', 502, 8, 502, 8),
woosh.Token(woosh.NAME, 'return', 502, 8, 502, 14),
woosh.Token(woosh.NAME, 'self', 502, 15, 502, 19),
woosh.Token(woosh.OP, '.', 502, 19, 502, 20),
woosh.Token(woosh.NAME, 'voidresp', 502, 20, 502, 28),
woosh.Token(woosh.OP, '(', 502, 28, 502, 29),
woosh.Token(woosh.OP, ')', 502, 29, 502, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 30, 503, 0),
woosh.Token(woosh.DEDENT, '    ', 504, 0, 504, 4),
woosh.Token(woosh.NAME, 'def', 504, 4, 504, 7),
woosh.Token(woosh.NAME, 'storlines', 504, 8, 504, 17),
woosh.Token(woosh.OP, '(', 504, 17, 504, 18),
woosh.Token(woosh.NAME, 'self', 504, 18, 504, 22),
woosh.Token(woosh.OP, ',', 504, 22, 504, 23),
woosh.Token(woosh.NAME, 'cmd', 504, 24, 504, 27),
woosh.Token(woosh.OP, ',', 504, 27, 504, 28),
woosh.Token(woosh.NAME, 'fp', 504, 29, 504, 31),
woosh.Token(woosh.OP, ',', 504, 31, 504, 32),
woosh.Token(woosh.NAME, 'callback', 504, 33, 504, 41),
woosh.Token(woosh.OP, '=', 504, 41, 504, 42),
woosh.Token(woosh.NAME, 'None', 504, 42, 504, 46),
woosh.Token(woosh.OP, ')', 504, 46, 504, 47),
woosh.Token(woosh.OP, ':', 504, 47, 504, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 504, 48, 505, 0),
woosh.Token(woosh.INDENT, '        ', 505, 0, 505, 8),
woosh.Token(woosh.STRING, '"""Store a file in line mode.  A new port is created for you.\r\n\r\n        Args:\r\n          cmd: A STOR command.\r\n          fp: A file-like object with a readline() method.\r\n          callback: An optional single parameter callable that is called on\r\n                    each line after it is sent.  [default: None]\r\n\r\n        Returns:\r\n          The response code.\r\n        """', 505, 8, 515, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 515, 11, 516, 0),
woosh.Token(woosh.NAME, 'self', 516, 8, 516, 12),
woosh.Token(woosh.OP, '.', 516, 12, 516, 13),
woosh.Token(woosh.NAME, 'voidcmd', 516, 13, 516, 20),
woosh.Token(woosh.OP, '(', 516, 20, 516, 21),
woosh.Token(woosh.STRING, "'TYPE A'", 516, 21, 516, 29),
woosh.Token(woosh.OP, ')', 516, 29, 516, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 516, 30, 517, 0),
woosh.Token(woosh.NAME, 'with', 517, 8, 517, 12),
woosh.Token(woosh.NAME, 'self', 517, 13, 517, 17),
woosh.Token(woosh.OP, '.', 517, 17, 517, 18),
woosh.Token(woosh.NAME, 'transfercmd', 517, 18, 517, 29),
woosh.Token(woosh.OP, '(', 517, 29, 517, 30),
woosh.Token(woosh.NAME, 'cmd', 517, 30, 517, 33),
woosh.Token(woosh.OP, ')', 517, 33, 517, 34),
woosh.Token(woosh.NAME, 'as', 517, 35, 517, 37),
woosh.Token(woosh.NAME, 'conn', 517, 38, 517, 42),
woosh.Token(woosh.OP, ':', 517, 42, 517, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 517, 43, 518, 0),
woosh.Token(woosh.INDENT, '            ', 518, 0, 518, 12),
woosh.Token(woosh.NAME, 'while', 518, 12, 518, 17),
woosh.Token(woosh.NUMBER, '1', 518, 18, 518, 19),
woosh.Token(woosh.OP, ':', 518, 19, 518, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 518, 20, 519, 0),
woosh.Token(woosh.INDENT, '                ', 519, 0, 519, 16),
woosh.Token(woosh.NAME, 'buf', 519, 16, 519, 19),
woosh.Token(woosh.OP, '=', 519, 20, 519, 21),
woosh.Token(woosh.NAME, 'fp', 519, 22, 519, 24),
woosh.Token(woosh.OP, '.', 519, 24, 519, 25),
woosh.Token(woosh.NAME, 'readline', 519, 25, 519, 33),
woosh.Token(woosh.OP, '(', 519, 33, 519, 34),
woosh.Token(woosh.NAME, 'self', 519, 34, 519, 38),
woosh.Token(woosh.OP, '.', 519, 38, 519, 39),
woosh.Token(woosh.NAME, 'maxline', 519, 39, 519, 46),
woosh.Token(woosh.OP, '+', 519, 47, 519, 48),
woosh.Token(woosh.NUMBER, '1', 519, 49, 519, 50),
woosh.Token(woosh.OP, ')', 519, 50, 519, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 51, 520, 0),
woosh.Token(woosh.NAME, 'if', 520, 16, 520, 18),
woosh.Token(woosh.NAME, 'len', 520, 19, 520, 22),
woosh.Token(woosh.OP, '(', 520, 22, 520, 23),
woosh.Token(woosh.NAME, 'buf', 520, 23, 520, 26),
woosh.Token(woosh.OP, ')', 520, 26, 520, 27),
woosh.Token(woosh.OP, '>', 520, 28, 520, 29),
woosh.Token(woosh.NAME, 'self', 520, 30, 520, 34),
woosh.Token(woosh.OP, '.', 520, 34, 520, 35),
woosh.Token(woosh.NAME, 'maxline', 520, 35, 520, 42),
woosh.Token(woosh.OP, ':', 520, 42, 520, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 520, 43, 521, 0),
woosh.Token(woosh.INDENT, '                    ', 521, 0, 521, 20),
woosh.Token(woosh.NAME, 'raise', 521, 20, 521, 25),
woosh.Token(woosh.NAME, 'Error', 521, 26, 521, 31),
woosh.Token(woosh.OP, '(', 521, 31, 521, 32),
woosh.Token(woosh.STRING, '"got more than %d bytes"', 521, 32, 521, 56),
woosh.Token(woosh.OP, '%', 521, 57, 521, 58),
woosh.Token(woosh.NAME, 'self', 521, 59, 521, 63),
woosh.Token(woosh.OP, '.', 521, 63, 521, 64),
woosh.Token(woosh.NAME, 'maxline', 521, 64, 521, 71),
woosh.Token(woosh.OP, ')', 521, 71, 521, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 521, 72, 522, 0),
woosh.Token(woosh.DEDENT, '                ', 522, 0, 522, 16),
woosh.Token(woosh.NAME, 'if', 522, 16, 522, 18),
woosh.Token(woosh.NAME, 'not', 522, 19, 522, 22),
woosh.Token(woosh.NAME, 'buf', 522, 23, 522, 26),
woosh.Token(woosh.OP, ':', 522, 26, 522, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 27, 523, 0),
woosh.Token(woosh.INDENT, '                    ', 523, 0, 523, 20),
woosh.Token(woosh.NAME, 'break', 523, 20, 523, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 523, 25, 524, 0),
woosh.Token(woosh.DEDENT, '                ', 524, 0, 524, 16),
woosh.Token(woosh.NAME, 'if', 524, 16, 524, 18),
woosh.Token(woosh.NAME, 'buf', 524, 19, 524, 22),
woosh.Token(woosh.OP, '[', 524, 22, 524, 23),
woosh.Token(woosh.OP, '-', 524, 23, 524, 24),
woosh.Token(woosh.NUMBER, '2', 524, 24, 524, 25),
woosh.Token(woosh.OP, ':', 524, 25, 524, 26),
woosh.Token(woosh.OP, ']', 524, 26, 524, 27),
woosh.Token(woosh.OP, '!=', 524, 28, 524, 30),
woosh.Token(woosh.NAME, 'B_CRLF', 524, 31, 524, 37),
woosh.Token(woosh.OP, ':', 524, 37, 524, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 524, 38, 525, 0),
woosh.Token(woosh.INDENT, '                    ', 525, 0, 525, 20),
woosh.Token(woosh.NAME, 'if', 525, 20, 525, 22),
woosh.Token(woosh.NAME, 'buf', 525, 23, 525, 26),
woosh.Token(woosh.OP, '[', 525, 26, 525, 27),
woosh.Token(woosh.OP, '-', 525, 27, 525, 28),
woosh.Token(woosh.NUMBER, '1', 525, 28, 525, 29),
woosh.Token(woosh.OP, ']', 525, 29, 525, 30),
woosh.Token(woosh.NAME, 'in', 525, 31, 525, 33),
woosh.Token(woosh.NAME, 'B_CRLF', 525, 34, 525, 40),
woosh.Token(woosh.OP, ':', 525, 40, 525, 41),
woosh.Token(woosh.NAME, 'buf', 525, 42, 525, 45),
woosh.Token(woosh.OP, '=', 525, 46, 525, 47),
woosh.Token(woosh.NAME, 'buf', 525, 48, 525, 51),
woosh.Token(woosh.OP, '[', 525, 51, 525, 52),
woosh.Token(woosh.OP, ':', 525, 52, 525, 53),
woosh.Token(woosh.OP, '-', 525, 53, 525, 54),
woosh.Token(woosh.NUMBER, '1', 525, 54, 525, 55),
woosh.Token(woosh.OP, ']', 525, 55, 525, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 56, 526, 0),
woosh.Token(woosh.NAME, 'buf', 526, 20, 526, 23),
woosh.Token(woosh.OP, '=', 526, 24, 526, 25),
woosh.Token(woosh.NAME, 'buf', 526, 26, 526, 29),
woosh.Token(woosh.OP, '+', 526, 30, 526, 31),
woosh.Token(woosh.NAME, 'B_CRLF', 526, 32, 526, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 38, 527, 0),
woosh.Token(woosh.DEDENT, '                ', 527, 0, 527, 16),
woosh.Token(woosh.NAME, 'conn', 527, 16, 527, 20),
woosh.Token(woosh.OP, '.', 527, 20, 527, 21),
woosh.Token(woosh.NAME, 'sendall', 527, 21, 527, 28),
woosh.Token(woosh.OP, '(', 527, 28, 527, 29),
woosh.Token(woosh.NAME, 'buf', 527, 29, 527, 32),
woosh.Token(woosh.OP, ')', 527, 32, 527, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 527, 33, 528, 0),
woosh.Token(woosh.NAME, 'if', 528, 16, 528, 18),
woosh.Token(woosh.NAME, 'callback', 528, 19, 528, 27),
woosh.Token(woosh.OP, ':', 528, 27, 528, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 28, 529, 0),
woosh.Token(woosh.INDENT, '                    ', 529, 0, 529, 20),
woosh.Token(woosh.NAME, 'callback', 529, 20, 529, 28),
woosh.Token(woosh.OP, '(', 529, 28, 529, 29),
woosh.Token(woosh.NAME, 'buf', 529, 29, 529, 32),
woosh.Token(woosh.OP, ')', 529, 32, 529, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 33, 530, 0),
woosh.Token(woosh.COMMENT, '# shutdown ssl layer', 530, 12, 530, 32),
woosh.Token(woosh.DEDENT, '            ', 531, 0, 531, 12),
woosh.Token(woosh.DEDENT, '', 531, 12, 531, 12),
woosh.Token(woosh.NAME, 'if', 531, 12, 531, 14),
woosh.Token(woosh.NAME, '_SSLSocket', 531, 15, 531, 25),
woosh.Token(woosh.NAME, 'is', 531, 26, 531, 28),
woosh.Token(woosh.NAME, 'not', 531, 29, 531, 32),
woosh.Token(woosh.NAME, 'None', 531, 33, 531, 37),
woosh.Token(woosh.NAME, 'and', 531, 38, 531, 41),
woosh.Token(woosh.NAME, 'isinstance', 531, 42, 531, 52),
woosh.Token(woosh.OP, '(', 531, 52, 531, 53),
woosh.Token(woosh.NAME, 'conn', 531, 53, 531, 57),
woosh.Token(woosh.OP, ',', 531, 57, 531, 58),
woosh.Token(woosh.NAME, '_SSLSocket', 531, 59, 531, 69),
woosh.Token(woosh.OP, ')', 531, 69, 531, 70),
woosh.Token(woosh.OP, ':', 531, 70, 531, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 531, 71, 532, 0),
woosh.Token(woosh.INDENT, '                ', 532, 0, 532, 16),
woosh.Token(woosh.NAME, 'conn', 532, 16, 532, 20),
woosh.Token(woosh.OP, '.', 532, 20, 532, 21),
woosh.Token(woosh.NAME, 'unwrap', 532, 21, 532, 27),
woosh.Token(woosh.OP, '(', 532, 27, 532, 28),
woosh.Token(woosh.OP, ')', 532, 28, 532, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 29, 533, 0),
woosh.Token(woosh.DEDENT, '        ', 533, 0, 533, 8),
woosh.Token(woosh.DEDENT, '', 533, 8, 533, 8),
woosh.Token(woosh.NAME, 'return', 533, 8, 533, 14),
woosh.Token(woosh.NAME, 'self', 533, 15, 533, 19),
woosh.Token(woosh.OP, '.', 533, 19, 533, 20),
woosh.Token(woosh.NAME, 'voidresp', 533, 20, 533, 28),
woosh.Token(woosh.OP, '(', 533, 28, 533, 29),
woosh.Token(woosh.OP, ')', 533, 29, 533, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 533, 30, 534, 0),
woosh.Token(woosh.DEDENT, '    ', 535, 0, 535, 4),
woosh.Token(woosh.NAME, 'def', 535, 4, 535, 7),
woosh.Token(woosh.NAME, 'acct', 535, 8, 535, 12),
woosh.Token(woosh.OP, '(', 535, 12, 535, 13),
woosh.Token(woosh.NAME, 'self', 535, 13, 535, 17),
woosh.Token(woosh.OP, ',', 535, 17, 535, 18),
woosh.Token(woosh.NAME, 'password', 535, 19, 535, 27),
woosh.Token(woosh.OP, ')', 535, 27, 535, 28),
woosh.Token(woosh.OP, ':', 535, 28, 535, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 29, 536, 0),
woosh.Token(woosh.INDENT, '        ', 536, 0, 536, 8),
woosh.Token(woosh.STRING, "'''Send new account name.'''", 536, 8, 536, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 36, 537, 0),
woosh.Token(woosh.NAME, 'cmd', 537, 8, 537, 11),
woosh.Token(woosh.OP, '=', 537, 12, 537, 13),
woosh.Token(woosh.STRING, "'ACCT '", 537, 14, 537, 21),
woosh.Token(woosh.OP, '+', 537, 22, 537, 23),
woosh.Token(woosh.NAME, 'password', 537, 24, 537, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 537, 32, 538, 0),
woosh.Token(woosh.NAME, 'return', 538, 8, 538, 14),
woosh.Token(woosh.NAME, 'self', 538, 15, 538, 19),
woosh.Token(woosh.OP, '.', 538, 19, 538, 20),
woosh.Token(woosh.NAME, 'voidcmd', 538, 20, 538, 27),
woosh.Token(woosh.OP, '(', 538, 27, 538, 28),
woosh.Token(woosh.NAME, 'cmd', 538, 28, 538, 31),
woosh.Token(woosh.OP, ')', 538, 31, 538, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 538, 32, 539, 0),
woosh.Token(woosh.DEDENT, '    ', 540, 0, 540, 4),
woosh.Token(woosh.NAME, 'def', 540, 4, 540, 7),
woosh.Token(woosh.NAME, 'nlst', 540, 8, 540, 12),
woosh.Token(woosh.OP, '(', 540, 12, 540, 13),
woosh.Token(woosh.NAME, 'self', 540, 13, 540, 17),
woosh.Token(woosh.OP, ',', 540, 17, 540, 18),
woosh.Token(woosh.OP, '*', 540, 19, 540, 20),
woosh.Token(woosh.NAME, 'args', 540, 20, 540, 24),
woosh.Token(woosh.OP, ')', 540, 24, 540, 25),
woosh.Token(woosh.OP, ':', 540, 25, 540, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 540, 26, 541, 0),
woosh.Token(woosh.INDENT, '        ', 541, 0, 541, 8),
woosh.Token(woosh.STRING, "'''Return a list of files in a given directory (default the current).'''", 541, 8, 541, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 541, 80, 542, 0),
woosh.Token(woosh.NAME, 'cmd', 542, 8, 542, 11),
woosh.Token(woosh.OP, '=', 542, 12, 542, 13),
woosh.Token(woosh.STRING, "'NLST'", 542, 14, 542, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 20, 543, 0),
woosh.Token(woosh.NAME, 'for', 543, 8, 543, 11),
woosh.Token(woosh.NAME, 'arg', 543, 12, 543, 15),
woosh.Token(woosh.NAME, 'in', 543, 16, 543, 18),
woosh.Token(woosh.NAME, 'args', 543, 19, 543, 23),
woosh.Token(woosh.OP, ':', 543, 23, 543, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 24, 544, 0),
woosh.Token(woosh.INDENT, '            ', 544, 0, 544, 12),
woosh.Token(woosh.NAME, 'cmd', 544, 12, 544, 15),
woosh.Token(woosh.OP, '=', 544, 16, 544, 17),
woosh.Token(woosh.NAME, 'cmd', 544, 18, 544, 21),
woosh.Token(woosh.OP, '+', 544, 22, 544, 23),
woosh.Token(woosh.OP, '(', 544, 24, 544, 25),
woosh.Token(woosh.STRING, "' '", 544, 25, 544, 28),
woosh.Token(woosh.OP, '+', 544, 29, 544, 30),
woosh.Token(woosh.NAME, 'arg', 544, 31, 544, 34),
woosh.Token(woosh.OP, ')', 544, 34, 544, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 35, 545, 0),
woosh.Token(woosh.DEDENT, '        ', 545, 0, 545, 8),
woosh.Token(woosh.NAME, 'files', 545, 8, 545, 13),
woosh.Token(woosh.OP, '=', 545, 14, 545, 15),
woosh.Token(woosh.OP, '[', 545, 16, 545, 17),
woosh.Token(woosh.OP, ']', 545, 17, 545, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 18, 546, 0),
woosh.Token(woosh.NAME, 'self', 546, 8, 546, 12),
woosh.Token(woosh.OP, '.', 546, 12, 546, 13),
woosh.Token(woosh.NAME, 'retrlines', 546, 13, 546, 22),
woosh.Token(woosh.OP, '(', 546, 22, 546, 23),
woosh.Token(woosh.NAME, 'cmd', 546, 23, 546, 26),
woosh.Token(woosh.OP, ',', 546, 26, 546, 27),
woosh.Token(woosh.NAME, 'files', 546, 28, 546, 33),
woosh.Token(woosh.OP, '.', 546, 33, 546, 34),
woosh.Token(woosh.NAME, 'append', 546, 34, 546, 40),
woosh.Token(woosh.OP, ')', 546, 40, 546, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 41, 547, 0),
woosh.Token(woosh.NAME, 'return', 547, 8, 547, 14),
woosh.Token(woosh.NAME, 'files', 547, 15, 547, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 20, 548, 0),
woosh.Token(woosh.DEDENT, '    ', 549, 0, 549, 4),
woosh.Token(woosh.NAME, 'def', 549, 4, 549, 7),
woosh.Token(woosh.NAME, 'dir', 549, 8, 549, 11),
woosh.Token(woosh.OP, '(', 549, 11, 549, 12),
woosh.Token(woosh.NAME, 'self', 549, 12, 549, 16),
woosh.Token(woosh.OP, ',', 549, 16, 549, 17),
woosh.Token(woosh.OP, '*', 549, 18, 549, 19),
woosh.Token(woosh.NAME, 'args', 549, 19, 549, 23),
woosh.Token(woosh.OP, ')', 549, 23, 549, 24),
woosh.Token(woosh.OP, ':', 549, 24, 549, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 549, 25, 550, 0),
woosh.Token(woosh.INDENT, '        ', 550, 0, 550, 8),
woosh.Token(woosh.STRING, "'''List a directory in long form.\r\n        By default list current directory to stdout.\r\n        Optional last argument is callback function; all\r\n        non-empty arguments before it are concatenated to the\r\n        LIST command.  (This *should* only be used for a pathname.)'''", 550, 8, 554, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 70, 555, 0),
woosh.Token(woosh.NAME, 'cmd', 555, 8, 555, 11),
woosh.Token(woosh.OP, '=', 555, 12, 555, 13),
woosh.Token(woosh.STRING, "'LIST'", 555, 14, 555, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 20, 556, 0),
woosh.Token(woosh.NAME, 'func', 556, 8, 556, 12),
woosh.Token(woosh.OP, '=', 556, 13, 556, 14),
woosh.Token(woosh.NAME, 'None', 556, 15, 556, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 19, 557, 0),
woosh.Token(woosh.NAME, 'if', 557, 8, 557, 10),
woosh.Token(woosh.NAME, 'args', 557, 11, 557, 15),
woosh.Token(woosh.OP, '[', 557, 15, 557, 16),
woosh.Token(woosh.OP, '-', 557, 16, 557, 17),
woosh.Token(woosh.NUMBER, '1', 557, 17, 557, 18),
woosh.Token(woosh.OP, ':', 557, 18, 557, 19),
woosh.Token(woosh.OP, ']', 557, 19, 557, 20),
woosh.Token(woosh.NAME, 'and', 557, 21, 557, 24),
woosh.Token(woosh.NAME, 'type', 557, 25, 557, 29),
woosh.Token(woosh.OP, '(', 557, 29, 557, 30),
woosh.Token(woosh.NAME, 'args', 557, 30, 557, 34),
woosh.Token(woosh.OP, '[', 557, 34, 557, 35),
woosh.Token(woosh.OP, '-', 557, 35, 557, 36),
woosh.Token(woosh.NUMBER, '1', 557, 36, 557, 37),
woosh.Token(woosh.OP, ']', 557, 37, 557, 38),
woosh.Token(woosh.OP, ')', 557, 38, 557, 39),
woosh.Token(woosh.OP, '!=', 557, 40, 557, 42),
woosh.Token(woosh.NAME, 'type', 557, 43, 557, 47),
woosh.Token(woosh.OP, '(', 557, 47, 557, 48),
woosh.Token(woosh.STRING, "''", 557, 48, 557, 50),
woosh.Token(woosh.OP, ')', 557, 50, 557, 51),
woosh.Token(woosh.OP, ':', 557, 51, 557, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 52, 558, 0),
woosh.Token(woosh.INDENT, '            ', 558, 0, 558, 12),
woosh.Token(woosh.NAME, 'args', 558, 12, 558, 16),
woosh.Token(woosh.OP, ',', 558, 16, 558, 17),
woosh.Token(woosh.NAME, 'func', 558, 18, 558, 22),
woosh.Token(woosh.OP, '=', 558, 23, 558, 24),
woosh.Token(woosh.NAME, 'args', 558, 25, 558, 29),
woosh.Token(woosh.OP, '[', 558, 29, 558, 30),
woosh.Token(woosh.OP, ':', 558, 30, 558, 31),
woosh.Token(woosh.OP, '-', 558, 31, 558, 32),
woosh.Token(woosh.NUMBER, '1', 558, 32, 558, 33),
woosh.Token(woosh.OP, ']', 558, 33, 558, 34),
woosh.Token(woosh.OP, ',', 558, 34, 558, 35),
woosh.Token(woosh.NAME, 'args', 558, 36, 558, 40),
woosh.Token(woosh.OP, '[', 558, 40, 558, 41),
woosh.Token(woosh.OP, '-', 558, 41, 558, 42),
woosh.Token(woosh.NUMBER, '1', 558, 42, 558, 43),
woosh.Token(woosh.OP, ']', 558, 43, 558, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 558, 44, 559, 0),
woosh.Token(woosh.DEDENT, '        ', 559, 0, 559, 8),
woosh.Token(woosh.NAME, 'for', 559, 8, 559, 11),
woosh.Token(woosh.NAME, 'arg', 559, 12, 559, 15),
woosh.Token(woosh.NAME, 'in', 559, 16, 559, 18),
woosh.Token(woosh.NAME, 'args', 559, 19, 559, 23),
woosh.Token(woosh.OP, ':', 559, 23, 559, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 559, 24, 560, 0),
woosh.Token(woosh.INDENT, '            ', 560, 0, 560, 12),
woosh.Token(woosh.NAME, 'if', 560, 12, 560, 14),
woosh.Token(woosh.NAME, 'arg', 560, 15, 560, 18),
woosh.Token(woosh.OP, ':', 560, 18, 560, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 560, 19, 561, 0),
woosh.Token(woosh.INDENT, '                ', 561, 0, 561, 16),
woosh.Token(woosh.NAME, 'cmd', 561, 16, 561, 19),
woosh.Token(woosh.OP, '=', 561, 20, 561, 21),
woosh.Token(woosh.NAME, 'cmd', 561, 22, 561, 25),
woosh.Token(woosh.OP, '+', 561, 26, 561, 27),
woosh.Token(woosh.OP, '(', 561, 28, 561, 29),
woosh.Token(woosh.STRING, "' '", 561, 29, 561, 32),
woosh.Token(woosh.OP, '+', 561, 33, 561, 34),
woosh.Token(woosh.NAME, 'arg', 561, 35, 561, 38),
woosh.Token(woosh.OP, ')', 561, 38, 561, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 561, 39, 562, 0),
woosh.Token(woosh.DEDENT, '        ', 562, 0, 562, 8),
woosh.Token(woosh.DEDENT, '', 562, 8, 562, 8),
woosh.Token(woosh.NAME, 'self', 562, 8, 562, 12),
woosh.Token(woosh.OP, '.', 562, 12, 562, 13),
woosh.Token(woosh.NAME, 'retrlines', 562, 13, 562, 22),
woosh.Token(woosh.OP, '(', 562, 22, 562, 23),
woosh.Token(woosh.NAME, 'cmd', 562, 23, 562, 26),
woosh.Token(woosh.OP, ',', 562, 26, 562, 27),
woosh.Token(woosh.NAME, 'func', 562, 28, 562, 32),
woosh.Token(woosh.OP, ')', 562, 32, 562, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 562, 33, 563, 0),
woosh.Token(woosh.DEDENT, '    ', 564, 0, 564, 4),
woosh.Token(woosh.NAME, 'def', 564, 4, 564, 7),
woosh.Token(woosh.NAME, 'mlsd', 564, 8, 564, 12),
woosh.Token(woosh.OP, '(', 564, 12, 564, 13),
woosh.Token(woosh.NAME, 'self', 564, 13, 564, 17),
woosh.Token(woosh.OP, ',', 564, 17, 564, 18),
woosh.Token(woosh.NAME, 'path', 564, 19, 564, 23),
woosh.Token(woosh.OP, '=', 564, 23, 564, 24),
woosh.Token(woosh.STRING, '""', 564, 24, 564, 26),
woosh.Token(woosh.OP, ',', 564, 26, 564, 27),
woosh.Token(woosh.NAME, 'facts', 564, 28, 564, 33),
woosh.Token(woosh.OP, '=', 564, 33, 564, 34),
woosh.Token(woosh.OP, '[', 564, 34, 564, 35),
woosh.Token(woosh.OP, ']', 564, 35, 564, 36),
woosh.Token(woosh.OP, ')', 564, 36, 564, 37),
woosh.Token(woosh.OP, ':', 564, 37, 564, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 564, 38, 565, 0),
woosh.Token(woosh.INDENT, '        ', 565, 0, 565, 8),
woosh.Token(woosh.STRING, '\'\'\'List a directory in a standardized format by using MLSD\r\n        command (RFC-3659). If path is omitted the current directory\r\n        is assumed. "facts" is a list of strings representing the type\r\n        of information desired (e.g. ["type", "size", "perm"]).\r\n\r\n        Return a generator object yielding a tuple of two elements\r\n        for every file found in path.\r\n        First element is the file name, the second one is a dictionary\r\n        including a variable number of "facts" depending on the server\r\n        and whether "facts" argument has been provided.\r\n        \'\'\'', 565, 8, 575, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 575, 11, 576, 0),
woosh.Token(woosh.NAME, 'if', 576, 8, 576, 10),
woosh.Token(woosh.NAME, 'facts', 576, 11, 576, 16),
woosh.Token(woosh.OP, ':', 576, 16, 576, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 17, 577, 0),
woosh.Token(woosh.INDENT, '            ', 577, 0, 577, 12),
woosh.Token(woosh.NAME, 'self', 577, 12, 577, 16),
woosh.Token(woosh.OP, '.', 577, 16, 577, 17),
woosh.Token(woosh.NAME, 'sendcmd', 577, 17, 577, 24),
woosh.Token(woosh.OP, '(', 577, 24, 577, 25),
woosh.Token(woosh.STRING, '"OPTS MLST "', 577, 25, 577, 37),
woosh.Token(woosh.OP, '+', 577, 38, 577, 39),
woosh.Token(woosh.STRING, '";"', 577, 40, 577, 43),
woosh.Token(woosh.OP, '.', 577, 43, 577, 44),
woosh.Token(woosh.NAME, 'join', 577, 44, 577, 48),
woosh.Token(woosh.OP, '(', 577, 48, 577, 49),
woosh.Token(woosh.NAME, 'facts', 577, 49, 577, 54),
woosh.Token(woosh.OP, ')', 577, 54, 577, 55),
woosh.Token(woosh.OP, '+', 577, 56, 577, 57),
woosh.Token(woosh.STRING, '";"', 577, 58, 577, 61),
woosh.Token(woosh.OP, ')', 577, 61, 577, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 577, 62, 578, 0),
woosh.Token(woosh.DEDENT, '        ', 578, 0, 578, 8),
woosh.Token(woosh.NAME, 'if', 578, 8, 578, 10),
woosh.Token(woosh.NAME, 'path', 578, 11, 578, 15),
woosh.Token(woosh.OP, ':', 578, 15, 578, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 578, 16, 579, 0),
woosh.Token(woosh.INDENT, '            ', 579, 0, 579, 12),
woosh.Token(woosh.NAME, 'cmd', 579, 12, 579, 15),
woosh.Token(woosh.OP, '=', 579, 16, 579, 17),
woosh.Token(woosh.STRING, '"MLSD %s"', 579, 18, 579, 27),
woosh.Token(woosh.OP, '%', 579, 28, 579, 29),
woosh.Token(woosh.NAME, 'path', 579, 30, 579, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 34, 580, 0),
woosh.Token(woosh.DEDENT, '        ', 580, 0, 580, 8),
woosh.Token(woosh.NAME, 'else', 580, 8, 580, 12),
woosh.Token(woosh.OP, ':', 580, 12, 580, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 580, 13, 581, 0),
woosh.Token(woosh.INDENT, '            ', 581, 0, 581, 12),
woosh.Token(woosh.NAME, 'cmd', 581, 12, 581, 15),
woosh.Token(woosh.OP, '=', 581, 16, 581, 17),
woosh.Token(woosh.STRING, '"MLSD"', 581, 18, 581, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 24, 582, 0),
woosh.Token(woosh.DEDENT, '        ', 582, 0, 582, 8),
woosh.Token(woosh.NAME, 'lines', 582, 8, 582, 13),
woosh.Token(woosh.OP, '=', 582, 14, 582, 15),
woosh.Token(woosh.OP, '[', 582, 16, 582, 17),
woosh.Token(woosh.OP, ']', 582, 17, 582, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 18, 583, 0),
woosh.Token(woosh.NAME, 'self', 583, 8, 583, 12),
woosh.Token(woosh.OP, '.', 583, 12, 583, 13),
woosh.Token(woosh.NAME, 'retrlines', 583, 13, 583, 22),
woosh.Token(woosh.OP, '(', 583, 22, 583, 23),
woosh.Token(woosh.NAME, 'cmd', 583, 23, 583, 26),
woosh.Token(woosh.OP, ',', 583, 26, 583, 27),
woosh.Token(woosh.NAME, 'lines', 583, 28, 583, 33),
woosh.Token(woosh.OP, '.', 583, 33, 583, 34),
woosh.Token(woosh.NAME, 'append', 583, 34, 583, 40),
woosh.Token(woosh.OP, ')', 583, 40, 583, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 41, 584, 0),
woosh.Token(woosh.NAME, 'for', 584, 8, 584, 11),
woosh.Token(woosh.NAME, 'line', 584, 12, 584, 16),
woosh.Token(woosh.NAME, 'in', 584, 17, 584, 19),
woosh.Token(woosh.NAME, 'lines', 584, 20, 584, 25),
woosh.Token(woosh.OP, ':', 584, 25, 584, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 584, 26, 585, 0),
woosh.Token(woosh.INDENT, '            ', 585, 0, 585, 12),
woosh.Token(woosh.NAME, 'facts_found', 585, 12, 585, 23),
woosh.Token(woosh.OP, ',', 585, 23, 585, 24),
woosh.Token(woosh.NAME, '_', 585, 25, 585, 26),
woosh.Token(woosh.OP, ',', 585, 26, 585, 27),
woosh.Token(woosh.NAME, 'name', 585, 28, 585, 32),
woosh.Token(woosh.OP, '=', 585, 33, 585, 34),
woosh.Token(woosh.NAME, 'line', 585, 35, 585, 39),
woosh.Token(woosh.OP, '.', 585, 39, 585, 40),
woosh.Token(woosh.NAME, 'rstrip', 585, 40, 585, 46),
woosh.Token(woosh.OP, '(', 585, 46, 585, 47),
woosh.Token(woosh.NAME, 'CRLF', 585, 47, 585, 51),
woosh.Token(woosh.OP, ')', 585, 51, 585, 52),
woosh.Token(woosh.OP, '.', 585, 52, 585, 53),
woosh.Token(woosh.NAME, 'partition', 585, 53, 585, 62),
woosh.Token(woosh.OP, '(', 585, 62, 585, 63),
woosh.Token(woosh.STRING, "' '", 585, 63, 585, 66),
woosh.Token(woosh.OP, ')', 585, 66, 585, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 67, 586, 0),
woosh.Token(woosh.NAME, 'entry', 586, 12, 586, 17),
woosh.Token(woosh.OP, '=', 586, 18, 586, 19),
woosh.Token(woosh.OP, '{', 586, 20, 586, 21),
woosh.Token(woosh.OP, '}', 586, 21, 586, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 586, 22, 587, 0),
woosh.Token(woosh.NAME, 'for', 587, 12, 587, 15),
woosh.Token(woosh.NAME, 'fact', 587, 16, 587, 20),
woosh.Token(woosh.NAME, 'in', 587, 21, 587, 23),
woosh.Token(woosh.NAME, 'facts_found', 587, 24, 587, 35),
woosh.Token(woosh.OP, '[', 587, 35, 587, 36),
woosh.Token(woosh.OP, ':', 587, 36, 587, 37),
woosh.Token(woosh.OP, '-', 587, 37, 587, 38),
woosh.Token(woosh.NUMBER, '1', 587, 38, 587, 39),
woosh.Token(woosh.OP, ']', 587, 39, 587, 40),
woosh.Token(woosh.OP, '.', 587, 40, 587, 41),
woosh.Token(woosh.NAME, 'split', 587, 41, 587, 46),
woosh.Token(woosh.OP, '(', 587, 46, 587, 47),
woosh.Token(woosh.STRING, '";"', 587, 47, 587, 50),
woosh.Token(woosh.OP, ')', 587, 50, 587, 51),
woosh.Token(woosh.OP, ':', 587, 51, 587, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 52, 588, 0),
woosh.Token(woosh.INDENT, '                ', 588, 0, 588, 16),
woosh.Token(woosh.NAME, 'key', 588, 16, 588, 19),
woosh.Token(woosh.OP, ',', 588, 19, 588, 20),
woosh.Token(woosh.NAME, '_', 588, 21, 588, 22),
woosh.Token(woosh.OP, ',', 588, 22, 588, 23),
woosh.Token(woosh.NAME, 'value', 588, 24, 588, 29),
woosh.Token(woosh.OP, '=', 588, 30, 588, 31),
woosh.Token(woosh.NAME, 'fact', 588, 32, 588, 36),
woosh.Token(woosh.OP, '.', 588, 36, 588, 37),
woosh.Token(woosh.NAME, 'partition', 588, 37, 588, 46),
woosh.Token(woosh.OP, '(', 588, 46, 588, 47),
woosh.Token(woosh.STRING, '"="', 588, 47, 588, 50),
woosh.Token(woosh.OP, ')', 588, 50, 588, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 588, 51, 589, 0),
woosh.Token(woosh.NAME, 'entry', 589, 16, 589, 21),
woosh.Token(woosh.OP, '[', 589, 21, 589, 22),
woosh.Token(woosh.NAME, 'key', 589, 22, 589, 25),
woosh.Token(woosh.OP, '.', 589, 25, 589, 26),
woosh.Token(woosh.NAME, 'lower', 589, 26, 589, 31),
woosh.Token(woosh.OP, '(', 589, 31, 589, 32),
woosh.Token(woosh.OP, ')', 589, 32, 589, 33),
woosh.Token(woosh.OP, ']', 589, 33, 589, 34),
woosh.Token(woosh.OP, '=', 589, 35, 589, 36),
woosh.Token(woosh.NAME, 'value', 589, 37, 589, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 42, 590, 0),
woosh.Token(woosh.DEDENT, '            ', 590, 0, 590, 12),
woosh.Token(woosh.NAME, 'yield', 590, 12, 590, 17),
woosh.Token(woosh.OP, '(', 590, 18, 590, 19),
woosh.Token(woosh.NAME, 'name', 590, 19, 590, 23),
woosh.Token(woosh.OP, ',', 590, 23, 590, 24),
woosh.Token(woosh.NAME, 'entry', 590, 25, 590, 30),
woosh.Token(woosh.OP, ')', 590, 30, 590, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 31, 591, 0),
woosh.Token(woosh.DEDENT, '    ', 592, 0, 592, 4),
woosh.Token(woosh.DEDENT, '', 592, 4, 592, 4),
woosh.Token(woosh.NAME, 'def', 592, 4, 592, 7),
woosh.Token(woosh.NAME, 'rename', 592, 8, 592, 14),
woosh.Token(woosh.OP, '(', 592, 14, 592, 15),
woosh.Token(woosh.NAME, 'self', 592, 15, 592, 19),
woosh.Token(woosh.OP, ',', 592, 19, 592, 20),
woosh.Token(woosh.NAME, 'fromname', 592, 21, 592, 29),
woosh.Token(woosh.OP, ',', 592, 29, 592, 30),
woosh.Token(woosh.NAME, 'toname', 592, 31, 592, 37),
woosh.Token(woosh.OP, ')', 592, 37, 592, 38),
woosh.Token(woosh.OP, ':', 592, 38, 592, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 39, 593, 0),
woosh.Token(woosh.INDENT, '        ', 593, 0, 593, 8),
woosh.Token(woosh.STRING, "'''Rename a file.'''", 593, 8, 593, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 593, 28, 594, 0),
woosh.Token(woosh.NAME, 'resp', 594, 8, 594, 12),
woosh.Token(woosh.OP, '=', 594, 13, 594, 14),
woosh.Token(woosh.NAME, 'self', 594, 15, 594, 19),
woosh.Token(woosh.OP, '.', 594, 19, 594, 20),
woosh.Token(woosh.NAME, 'sendcmd', 594, 20, 594, 27),
woosh.Token(woosh.OP, '(', 594, 27, 594, 28),
woosh.Token(woosh.STRING, "'RNFR '", 594, 28, 594, 35),
woosh.Token(woosh.OP, '+', 594, 36, 594, 37),
woosh.Token(woosh.NAME, 'fromname', 594, 38, 594, 46),
woosh.Token(woosh.OP, ')', 594, 46, 594, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 47, 595, 0),
woosh.Token(woosh.NAME, 'if', 595, 8, 595, 10),
woosh.Token(woosh.NAME, 'resp', 595, 11, 595, 15),
woosh.Token(woosh.OP, '[', 595, 15, 595, 16),
woosh.Token(woosh.NUMBER, '0', 595, 16, 595, 17),
woosh.Token(woosh.OP, ']', 595, 17, 595, 18),
woosh.Token(woosh.OP, '!=', 595, 19, 595, 21),
woosh.Token(woosh.STRING, "'3'", 595, 22, 595, 25),
woosh.Token(woosh.OP, ':', 595, 25, 595, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 595, 26, 596, 0),
woosh.Token(woosh.INDENT, '            ', 596, 0, 596, 12),
woosh.Token(woosh.NAME, 'raise', 596, 12, 596, 17),
woosh.Token(woosh.NAME, 'error_reply', 596, 18, 596, 29),
woosh.Token(woosh.OP, '(', 596, 29, 596, 30),
woosh.Token(woosh.NAME, 'resp', 596, 30, 596, 34),
woosh.Token(woosh.OP, ')', 596, 34, 596, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 35, 597, 0),
woosh.Token(woosh.DEDENT, '        ', 597, 0, 597, 8),
woosh.Token(woosh.NAME, 'return', 597, 8, 597, 14),
woosh.Token(woosh.NAME, 'self', 597, 15, 597, 19),
woosh.Token(woosh.OP, '.', 597, 19, 597, 20),
woosh.Token(woosh.NAME, 'voidcmd', 597, 20, 597, 27),
woosh.Token(woosh.OP, '(', 597, 27, 597, 28),
woosh.Token(woosh.STRING, "'RNTO '", 597, 28, 597, 35),
woosh.Token(woosh.OP, '+', 597, 36, 597, 37),
woosh.Token(woosh.NAME, 'toname', 597, 38, 597, 44),
woosh.Token(woosh.OP, ')', 597, 44, 597, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 45, 598, 0),
woosh.Token(woosh.DEDENT, '    ', 599, 0, 599, 4),
woosh.Token(woosh.NAME, 'def', 599, 4, 599, 7),
woosh.Token(woosh.NAME, 'delete', 599, 8, 599, 14),
woosh.Token(woosh.OP, '(', 599, 14, 599, 15),
woosh.Token(woosh.NAME, 'self', 599, 15, 599, 19),
woosh.Token(woosh.OP, ',', 599, 19, 599, 20),
woosh.Token(woosh.NAME, 'filename', 599, 21, 599, 29),
woosh.Token(woosh.OP, ')', 599, 29, 599, 30),
woosh.Token(woosh.OP, ':', 599, 30, 599, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 31, 600, 0),
woosh.Token(woosh.INDENT, '        ', 600, 0, 600, 8),
woosh.Token(woosh.STRING, "'''Delete a file.'''", 600, 8, 600, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 28, 601, 0),
woosh.Token(woosh.NAME, 'resp', 601, 8, 601, 12),
woosh.Token(woosh.OP, '=', 601, 13, 601, 14),
woosh.Token(woosh.NAME, 'self', 601, 15, 601, 19),
woosh.Token(woosh.OP, '.', 601, 19, 601, 20),
woosh.Token(woosh.NAME, 'sendcmd', 601, 20, 601, 27),
woosh.Token(woosh.OP, '(', 601, 27, 601, 28),
woosh.Token(woosh.STRING, "'DELE '", 601, 28, 601, 35),
woosh.Token(woosh.OP, '+', 601, 36, 601, 37),
woosh.Token(woosh.NAME, 'filename', 601, 38, 601, 46),
woosh.Token(woosh.OP, ')', 601, 46, 601, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 47, 602, 0),
woosh.Token(woosh.NAME, 'if', 602, 8, 602, 10),
woosh.Token(woosh.NAME, 'resp', 602, 11, 602, 15),
woosh.Token(woosh.OP, '[', 602, 15, 602, 16),
woosh.Token(woosh.OP, ':', 602, 16, 602, 17),
woosh.Token(woosh.NUMBER, '3', 602, 17, 602, 18),
woosh.Token(woosh.OP, ']', 602, 18, 602, 19),
woosh.Token(woosh.NAME, 'in', 602, 20, 602, 22),
woosh.Token(woosh.OP, '{', 602, 23, 602, 24),
woosh.Token(woosh.STRING, "'250'", 602, 24, 602, 29),
woosh.Token(woosh.OP, ',', 602, 29, 602, 30),
woosh.Token(woosh.STRING, "'200'", 602, 31, 602, 36),
woosh.Token(woosh.OP, '}', 602, 36, 602, 37),
woosh.Token(woosh.OP, ':', 602, 37, 602, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 38, 603, 0),
woosh.Token(woosh.INDENT, '            ', 603, 0, 603, 12),
woosh.Token(woosh.NAME, 'return', 603, 12, 603, 18),
woosh.Token(woosh.NAME, 'resp', 603, 19, 603, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 23, 604, 0),
woosh.Token(woosh.DEDENT, '        ', 604, 0, 604, 8),
woosh.Token(woosh.NAME, 'else', 604, 8, 604, 12),
woosh.Token(woosh.OP, ':', 604, 12, 604, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 13, 605, 0),
woosh.Token(woosh.INDENT, '            ', 605, 0, 605, 12),
woosh.Token(woosh.NAME, 'raise', 605, 12, 605, 17),
woosh.Token(woosh.NAME, 'error_reply', 605, 18, 605, 29),
woosh.Token(woosh.OP, '(', 605, 29, 605, 30),
woosh.Token(woosh.NAME, 'resp', 605, 30, 605, 34),
woosh.Token(woosh.OP, ')', 605, 34, 605, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 35, 606, 0),
woosh.Token(woosh.DEDENT, '    ', 607, 0, 607, 4),
woosh.Token(woosh.DEDENT, '', 607, 4, 607, 4),
woosh.Token(woosh.NAME, 'def', 607, 4, 607, 7),
woosh.Token(woosh.NAME, 'cwd', 607, 8, 607, 11),
woosh.Token(woosh.OP, '(', 607, 11, 607, 12),
woosh.Token(woosh.NAME, 'self', 607, 12, 607, 16),
woosh.Token(woosh.OP, ',', 607, 16, 607, 17),
woosh.Token(woosh.NAME, 'dirname', 607, 18, 607, 25),
woosh.Token(woosh.OP, ')', 607, 25, 607, 26),
woosh.Token(woosh.OP, ':', 607, 26, 607, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 27, 608, 0),
woosh.Token(woosh.INDENT, '        ', 608, 0, 608, 8),
woosh.Token(woosh.STRING, "'''Change to a directory.'''", 608, 8, 608, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 36, 609, 0),
woosh.Token(woosh.NAME, 'if', 609, 8, 609, 10),
woosh.Token(woosh.NAME, 'dirname', 609, 11, 609, 18),
woosh.Token(woosh.OP, '==', 609, 19, 609, 21),
woosh.Token(woosh.STRING, "'..'", 609, 22, 609, 26),
woosh.Token(woosh.OP, ':', 609, 26, 609, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 27, 610, 0),
woosh.Token(woosh.INDENT, '            ', 610, 0, 610, 12),
woosh.Token(woosh.NAME, 'try', 610, 12, 610, 15),
woosh.Token(woosh.OP, ':', 610, 15, 610, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 610, 16, 611, 0),
woosh.Token(woosh.INDENT, '                ', 611, 0, 611, 16),
woosh.Token(woosh.NAME, 'return', 611, 16, 611, 22),
woosh.Token(woosh.NAME, 'self', 611, 23, 611, 27),
woosh.Token(woosh.OP, '.', 611, 27, 611, 28),
woosh.Token(woosh.NAME, 'voidcmd', 611, 28, 611, 35),
woosh.Token(woosh.OP, '(', 611, 35, 611, 36),
woosh.Token(woosh.STRING, "'CDUP'", 611, 36, 611, 42),
woosh.Token(woosh.OP, ')', 611, 42, 611, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 43, 612, 0),
woosh.Token(woosh.DEDENT, '            ', 612, 0, 612, 12),
woosh.Token(woosh.NAME, 'except', 612, 12, 612, 18),
woosh.Token(woosh.NAME, 'error_perm', 612, 19, 612, 29),
woosh.Token(woosh.NAME, 'as', 612, 30, 612, 32),
woosh.Token(woosh.NAME, 'msg', 612, 33, 612, 36),
woosh.Token(woosh.OP, ':', 612, 36, 612, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 612, 37, 613, 0),
woosh.Token(woosh.INDENT, '                ', 613, 0, 613, 16),
woosh.Token(woosh.NAME, 'if', 613, 16, 613, 18),
woosh.Token(woosh.NAME, 'msg', 613, 19, 613, 22),
woosh.Token(woosh.OP, '.', 613, 22, 613, 23),
woosh.Token(woosh.NAME, 'args', 613, 23, 613, 27),
woosh.Token(woosh.OP, '[', 613, 27, 613, 28),
woosh.Token(woosh.NUMBER, '0', 613, 28, 613, 29),
woosh.Token(woosh.OP, ']', 613, 29, 613, 30),
woosh.Token(woosh.OP, '[', 613, 30, 613, 31),
woosh.Token(woosh.OP, ':', 613, 31, 613, 32),
woosh.Token(woosh.NUMBER, '3', 613, 32, 613, 33),
woosh.Token(woosh.OP, ']', 613, 33, 613, 34),
woosh.Token(woosh.OP, '!=', 613, 35, 613, 37),
woosh.Token(woosh.STRING, "'500'", 613, 38, 613, 43),
woosh.Token(woosh.OP, ':', 613, 43, 613, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 613, 44, 614, 0),
woosh.Token(woosh.INDENT, '                    ', 614, 0, 614, 20),
woosh.Token(woosh.NAME, 'raise', 614, 20, 614, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 25, 615, 0),
woosh.Token(woosh.DEDENT, '        ', 615, 0, 615, 8),
woosh.Token(woosh.DEDENT, '', 615, 8, 615, 8),
woosh.Token(woosh.DEDENT, '', 615, 8, 615, 8),
woosh.Token(woosh.NAME, 'elif', 615, 8, 615, 12),
woosh.Token(woosh.NAME, 'dirname', 615, 13, 615, 20),
woosh.Token(woosh.OP, '==', 615, 21, 615, 23),
woosh.Token(woosh.STRING, "''", 615, 24, 615, 26),
woosh.Token(woosh.OP, ':', 615, 26, 615, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 615, 27, 616, 0),
woosh.Token(woosh.INDENT, '            ', 616, 0, 616, 12),
woosh.Token(woosh.NAME, 'dirname', 616, 12, 616, 19),
woosh.Token(woosh.OP, '=', 616, 20, 616, 21),
woosh.Token(woosh.STRING, "'.'", 616, 22, 616, 25),
woosh.Token(woosh.COMMENT, '# does nothing, but could return error', 616, 27, 616, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 616, 65, 617, 0),
woosh.Token(woosh.DEDENT, '        ', 617, 0, 617, 8),
woosh.Token(woosh.NAME, 'cmd', 617, 8, 617, 11),
woosh.Token(woosh.OP, '=', 617, 12, 617, 13),
woosh.Token(woosh.STRING, "'CWD '", 617, 14, 617, 20),
woosh.Token(woosh.OP, '+', 617, 21, 617, 22),
woosh.Token(woosh.NAME, 'dirname', 617, 23, 617, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 617, 30, 618, 0),
woosh.Token(woosh.NAME, 'return', 618, 8, 618, 14),
woosh.Token(woosh.NAME, 'self', 618, 15, 618, 19),
woosh.Token(woosh.OP, '.', 618, 19, 618, 20),
woosh.Token(woosh.NAME, 'voidcmd', 618, 20, 618, 27),
woosh.Token(woosh.OP, '(', 618, 27, 618, 28),
woosh.Token(woosh.NAME, 'cmd', 618, 28, 618, 31),
woosh.Token(woosh.OP, ')', 618, 31, 618, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 618, 32, 619, 0),
woosh.Token(woosh.DEDENT, '    ', 620, 0, 620, 4),
woosh.Token(woosh.NAME, 'def', 620, 4, 620, 7),
woosh.Token(woosh.NAME, 'size', 620, 8, 620, 12),
woosh.Token(woosh.OP, '(', 620, 12, 620, 13),
woosh.Token(woosh.NAME, 'self', 620, 13, 620, 17),
woosh.Token(woosh.OP, ',', 620, 17, 620, 18),
woosh.Token(woosh.NAME, 'filename', 620, 19, 620, 27),
woosh.Token(woosh.OP, ')', 620, 27, 620, 28),
woosh.Token(woosh.OP, ':', 620, 28, 620, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 620, 29, 621, 0),
woosh.Token(woosh.INDENT, '        ', 621, 0, 621, 8),
woosh.Token(woosh.STRING, "'''Retrieve the size of a file.'''", 621, 8, 621, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 42, 622, 0),
woosh.Token(woosh.COMMENT, '# The SIZE command is defined in RFC-3659', 622, 8, 622, 49),
woosh.Token(woosh.NAME, 'resp', 623, 8, 623, 12),
woosh.Token(woosh.OP, '=', 623, 13, 623, 14),
woosh.Token(woosh.NAME, 'self', 623, 15, 623, 19),
woosh.Token(woosh.OP, '.', 623, 19, 623, 20),
woosh.Token(woosh.NAME, 'sendcmd', 623, 20, 623, 27),
woosh.Token(woosh.OP, '(', 623, 27, 623, 28),
woosh.Token(woosh.STRING, "'SIZE '", 623, 28, 623, 35),
woosh.Token(woosh.OP, '+', 623, 36, 623, 37),
woosh.Token(woosh.NAME, 'filename', 623, 38, 623, 46),
woosh.Token(woosh.OP, ')', 623, 46, 623, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 623, 47, 624, 0),
woosh.Token(woosh.NAME, 'if', 624, 8, 624, 10),
woosh.Token(woosh.NAME, 'resp', 624, 11, 624, 15),
woosh.Token(woosh.OP, '[', 624, 15, 624, 16),
woosh.Token(woosh.OP, ':', 624, 16, 624, 17),
woosh.Token(woosh.NUMBER, '3', 624, 17, 624, 18),
woosh.Token(woosh.OP, ']', 624, 18, 624, 19),
woosh.Token(woosh.OP, '==', 624, 20, 624, 22),
woosh.Token(woosh.STRING, "'213'", 624, 23, 624, 28),
woosh.Token(woosh.OP, ':', 624, 28, 624, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 29, 625, 0),
woosh.Token(woosh.INDENT, '            ', 625, 0, 625, 12),
woosh.Token(woosh.NAME, 's', 625, 12, 625, 13),
woosh.Token(woosh.OP, '=', 625, 14, 625, 15),
woosh.Token(woosh.NAME, 'resp', 625, 16, 625, 20),
woosh.Token(woosh.OP, '[', 625, 20, 625, 21),
woosh.Token(woosh.NUMBER, '3', 625, 21, 625, 22),
woosh.Token(woosh.OP, ':', 625, 22, 625, 23),
woosh.Token(woosh.OP, ']', 625, 23, 625, 24),
woosh.Token(woosh.OP, '.', 625, 24, 625, 25),
woosh.Token(woosh.NAME, 'strip', 625, 25, 625, 30),
woosh.Token(woosh.OP, '(', 625, 30, 625, 31),
woosh.Token(woosh.OP, ')', 625, 31, 625, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 32, 626, 0),
woosh.Token(woosh.NAME, 'return', 626, 12, 626, 18),
woosh.Token(woosh.NAME, 'int', 626, 19, 626, 22),
woosh.Token(woosh.OP, '(', 626, 22, 626, 23),
woosh.Token(woosh.NAME, 's', 626, 23, 626, 24),
woosh.Token(woosh.OP, ')', 626, 24, 626, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 626, 25, 627, 0),
woosh.Token(woosh.DEDENT, '    ', 628, 0, 628, 4),
woosh.Token(woosh.DEDENT, '', 628, 4, 628, 4),
woosh.Token(woosh.NAME, 'def', 628, 4, 628, 7),
woosh.Token(woosh.NAME, 'mkd', 628, 8, 628, 11),
woosh.Token(woosh.OP, '(', 628, 11, 628, 12),
woosh.Token(woosh.NAME, 'self', 628, 12, 628, 16),
woosh.Token(woosh.OP, ',', 628, 16, 628, 17),
woosh.Token(woosh.NAME, 'dirname', 628, 18, 628, 25),
woosh.Token(woosh.OP, ')', 628, 25, 628, 26),
woosh.Token(woosh.OP, ':', 628, 26, 628, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 628, 27, 629, 0),
woosh.Token(woosh.INDENT, '        ', 629, 0, 629, 8),
woosh.Token(woosh.STRING, "'''Make a directory, return its full pathname.'''", 629, 8, 629, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 57, 630, 0),
woosh.Token(woosh.NAME, 'resp', 630, 8, 630, 12),
woosh.Token(woosh.OP, '=', 630, 13, 630, 14),
woosh.Token(woosh.NAME, 'self', 630, 15, 630, 19),
woosh.Token(woosh.OP, '.', 630, 19, 630, 20),
woosh.Token(woosh.NAME, 'voidcmd', 630, 20, 630, 27),
woosh.Token(woosh.OP, '(', 630, 27, 630, 28),
woosh.Token(woosh.STRING, "'MKD '", 630, 28, 630, 34),
woosh.Token(woosh.OP, '+', 630, 35, 630, 36),
woosh.Token(woosh.NAME, 'dirname', 630, 37, 630, 44),
woosh.Token(woosh.OP, ')', 630, 44, 630, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 630, 45, 631, 0),
woosh.Token(woosh.COMMENT, '# fix around non-compliant implementations such as IIS shipped', 631, 8, 631, 70),
woosh.Token(woosh.COMMENT, '# with Windows server 2003', 632, 8, 632, 34),
woosh.Token(woosh.NAME, 'if', 633, 8, 633, 10),
woosh.Token(woosh.NAME, 'not', 633, 11, 633, 14),
woosh.Token(woosh.NAME, 'resp', 633, 15, 633, 19),
woosh.Token(woosh.OP, '.', 633, 19, 633, 20),
woosh.Token(woosh.NAME, 'startswith', 633, 20, 633, 30),
woosh.Token(woosh.OP, '(', 633, 30, 633, 31),
woosh.Token(woosh.STRING, "'257'", 633, 31, 633, 36),
woosh.Token(woosh.OP, ')', 633, 36, 633, 37),
woosh.Token(woosh.OP, ':', 633, 37, 633, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 633, 38, 634, 0),
woosh.Token(woosh.INDENT, '            ', 634, 0, 634, 12),
woosh.Token(woosh.NAME, 'return', 634, 12, 634, 18),
woosh.Token(woosh.STRING, "''", 634, 19, 634, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 21, 635, 0),
woosh.Token(woosh.DEDENT, '        ', 635, 0, 635, 8),
woosh.Token(woosh.NAME, 'return', 635, 8, 635, 14),
woosh.Token(woosh.NAME, 'parse257', 635, 15, 635, 23),
woosh.Token(woosh.OP, '(', 635, 23, 635, 24),
woosh.Token(woosh.NAME, 'resp', 635, 24, 635, 28),
woosh.Token(woosh.OP, ')', 635, 28, 635, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 635, 29, 636, 0),
woosh.Token(woosh.DEDENT, '    ', 637, 0, 637, 4),
woosh.Token(woosh.NAME, 'def', 637, 4, 637, 7),
woosh.Token(woosh.NAME, 'rmd', 637, 8, 637, 11),
woosh.Token(woosh.OP, '(', 637, 11, 637, 12),
woosh.Token(woosh.NAME, 'self', 637, 12, 637, 16),
woosh.Token(woosh.OP, ',', 637, 16, 637, 17),
woosh.Token(woosh.NAME, 'dirname', 637, 18, 637, 25),
woosh.Token(woosh.OP, ')', 637, 25, 637, 26),
woosh.Token(woosh.OP, ':', 637, 26, 637, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 27, 638, 0),
woosh.Token(woosh.INDENT, '        ', 638, 0, 638, 8),
woosh.Token(woosh.STRING, "'''Remove a directory.'''", 638, 8, 638, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 33, 639, 0),
woosh.Token(woosh.NAME, 'return', 639, 8, 639, 14),
woosh.Token(woosh.NAME, 'self', 639, 15, 639, 19),
woosh.Token(woosh.OP, '.', 639, 19, 639, 20),
woosh.Token(woosh.NAME, 'voidcmd', 639, 20, 639, 27),
woosh.Token(woosh.OP, '(', 639, 27, 639, 28),
woosh.Token(woosh.STRING, "'RMD '", 639, 28, 639, 34),
woosh.Token(woosh.OP, '+', 639, 35, 639, 36),
woosh.Token(woosh.NAME, 'dirname', 639, 37, 639, 44),
woosh.Token(woosh.OP, ')', 639, 44, 639, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 45, 640, 0),
woosh.Token(woosh.DEDENT, '    ', 641, 0, 641, 4),
woosh.Token(woosh.NAME, 'def', 641, 4, 641, 7),
woosh.Token(woosh.NAME, 'pwd', 641, 8, 641, 11),
woosh.Token(woosh.OP, '(', 641, 11, 641, 12),
woosh.Token(woosh.NAME, 'self', 641, 12, 641, 16),
woosh.Token(woosh.OP, ')', 641, 16, 641, 17),
woosh.Token(woosh.OP, ':', 641, 17, 641, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 18, 642, 0),
woosh.Token(woosh.INDENT, '        ', 642, 0, 642, 8),
woosh.Token(woosh.STRING, "'''Return current working directory.'''", 642, 8, 642, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 47, 643, 0),
woosh.Token(woosh.NAME, 'resp', 643, 8, 643, 12),
woosh.Token(woosh.OP, '=', 643, 13, 643, 14),
woosh.Token(woosh.NAME, 'self', 643, 15, 643, 19),
woosh.Token(woosh.OP, '.', 643, 19, 643, 20),
woosh.Token(woosh.NAME, 'voidcmd', 643, 20, 643, 27),
woosh.Token(woosh.OP, '(', 643, 27, 643, 28),
woosh.Token(woosh.STRING, "'PWD'", 643, 28, 643, 33),
woosh.Token(woosh.OP, ')', 643, 33, 643, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 643, 34, 644, 0),
woosh.Token(woosh.COMMENT, '# fix around non-compliant implementations such as IIS shipped', 644, 8, 644, 70),
woosh.Token(woosh.COMMENT, '# with Windows server 2003', 645, 8, 645, 34),
woosh.Token(woosh.NAME, 'if', 646, 8, 646, 10),
woosh.Token(woosh.NAME, 'not', 646, 11, 646, 14),
woosh.Token(woosh.NAME, 'resp', 646, 15, 646, 19),
woosh.Token(woosh.OP, '.', 646, 19, 646, 20),
woosh.Token(woosh.NAME, 'startswith', 646, 20, 646, 30),
woosh.Token(woosh.OP, '(', 646, 30, 646, 31),
woosh.Token(woosh.STRING, "'257'", 646, 31, 646, 36),
woosh.Token(woosh.OP, ')', 646, 36, 646, 37),
woosh.Token(woosh.OP, ':', 646, 37, 646, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 646, 38, 647, 0),
woosh.Token(woosh.INDENT, '            ', 647, 0, 647, 12),
woosh.Token(woosh.NAME, 'return', 647, 12, 647, 18),
woosh.Token(woosh.STRING, "''", 647, 19, 647, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 647, 21, 648, 0),
woosh.Token(woosh.DEDENT, '        ', 648, 0, 648, 8),
woosh.Token(woosh.NAME, 'return', 648, 8, 648, 14),
woosh.Token(woosh.NAME, 'parse257', 648, 15, 648, 23),
woosh.Token(woosh.OP, '(', 648, 23, 648, 24),
woosh.Token(woosh.NAME, 'resp', 648, 24, 648, 28),
woosh.Token(woosh.OP, ')', 648, 28, 648, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 648, 29, 649, 0),
woosh.Token(woosh.DEDENT, '    ', 650, 0, 650, 4),
woosh.Token(woosh.NAME, 'def', 650, 4, 650, 7),
woosh.Token(woosh.NAME, 'quit', 650, 8, 650, 12),
woosh.Token(woosh.OP, '(', 650, 12, 650, 13),
woosh.Token(woosh.NAME, 'self', 650, 13, 650, 17),
woosh.Token(woosh.OP, ')', 650, 17, 650, 18),
woosh.Token(woosh.OP, ':', 650, 18, 650, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 650, 19, 651, 0),
woosh.Token(woosh.INDENT, '        ', 651, 0, 651, 8),
woosh.Token(woosh.STRING, "'''Quit, and close the connection.'''", 651, 8, 651, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 651, 45, 652, 0),
woosh.Token(woosh.NAME, 'resp', 652, 8, 652, 12),
woosh.Token(woosh.OP, '=', 652, 13, 652, 14),
woosh.Token(woosh.NAME, 'self', 652, 15, 652, 19),
woosh.Token(woosh.OP, '.', 652, 19, 652, 20),
woosh.Token(woosh.NAME, 'voidcmd', 652, 20, 652, 27),
woosh.Token(woosh.OP, '(', 652, 27, 652, 28),
woosh.Token(woosh.STRING, "'QUIT'", 652, 28, 652, 34),
woosh.Token(woosh.OP, ')', 652, 34, 652, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 652, 35, 653, 0),
woosh.Token(woosh.NAME, 'self', 653, 8, 653, 12),
woosh.Token(woosh.OP, '.', 653, 12, 653, 13),
woosh.Token(woosh.NAME, 'close', 653, 13, 653, 18),
woosh.Token(woosh.OP, '(', 653, 18, 653, 19),
woosh.Token(woosh.OP, ')', 653, 19, 653, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 20, 654, 0),
woosh.Token(woosh.NAME, 'return', 654, 8, 654, 14),
woosh.Token(woosh.NAME, 'resp', 654, 15, 654, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 654, 19, 655, 0),
woosh.Token(woosh.DEDENT, '    ', 656, 0, 656, 4),
woosh.Token(woosh.NAME, 'def', 656, 4, 656, 7),
woosh.Token(woosh.NAME, 'close', 656, 8, 656, 13),
woosh.Token(woosh.OP, '(', 656, 13, 656, 14),
woosh.Token(woosh.NAME, 'self', 656, 14, 656, 18),
woosh.Token(woosh.OP, ')', 656, 18, 656, 19),
woosh.Token(woosh.OP, ':', 656, 19, 656, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 20, 657, 0),
woosh.Token(woosh.INDENT, '        ', 657, 0, 657, 8),
woosh.Token(woosh.STRING, "'''Close the connection without assuming anything about it.'''", 657, 8, 657, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 657, 70, 658, 0),
woosh.Token(woosh.NAME, 'try', 658, 8, 658, 11),
woosh.Token(woosh.OP, ':', 658, 11, 658, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 658, 12, 659, 0),
woosh.Token(woosh.INDENT, '            ', 659, 0, 659, 12),
woosh.Token(woosh.NAME, 'file', 659, 12, 659, 16),
woosh.Token(woosh.OP, '=', 659, 17, 659, 18),
woosh.Token(woosh.NAME, 'self', 659, 19, 659, 23),
woosh.Token(woosh.OP, '.', 659, 23, 659, 24),
woosh.Token(woosh.NAME, 'file', 659, 24, 659, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 28, 660, 0),
woosh.Token(woosh.NAME, 'self', 660, 12, 660, 16),
woosh.Token(woosh.OP, '.', 660, 16, 660, 17),
woosh.Token(woosh.NAME, 'file', 660, 17, 660, 21),
woosh.Token(woosh.OP, '=', 660, 22, 660, 23),
woosh.Token(woosh.NAME, 'None', 660, 24, 660, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 28, 661, 0),
woosh.Token(woosh.NAME, 'if', 661, 12, 661, 14),
woosh.Token(woosh.NAME, 'file', 661, 15, 661, 19),
woosh.Token(woosh.NAME, 'is', 661, 20, 661, 22),
woosh.Token(woosh.NAME, 'not', 661, 23, 661, 26),
woosh.Token(woosh.NAME, 'None', 661, 27, 661, 31),
woosh.Token(woosh.OP, ':', 661, 31, 661, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 32, 662, 0),
woosh.Token(woosh.INDENT, '                ', 662, 0, 662, 16),
woosh.Token(woosh.NAME, 'file', 662, 16, 662, 20),
woosh.Token(woosh.OP, '.', 662, 20, 662, 21),
woosh.Token(woosh.NAME, 'close', 662, 21, 662, 26),
woosh.Token(woosh.OP, '(', 662, 26, 662, 27),
woosh.Token(woosh.OP, ')', 662, 27, 662, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 662, 28, 663, 0),
woosh.Token(woosh.DEDENT, '        ', 663, 0, 663, 8),
woosh.Token(woosh.DEDENT, '', 663, 8, 663, 8),
woosh.Token(woosh.NAME, 'finally', 663, 8, 663, 15),
woosh.Token(woosh.OP, ':', 663, 15, 663, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 16, 664, 0),
woosh.Token(woosh.INDENT, '            ', 664, 0, 664, 12),
woosh.Token(woosh.NAME, 'sock', 664, 12, 664, 16),
woosh.Token(woosh.OP, '=', 664, 17, 664, 18),
woosh.Token(woosh.NAME, 'self', 664, 19, 664, 23),
woosh.Token(woosh.OP, '.', 664, 23, 664, 24),
woosh.Token(woosh.NAME, 'sock', 664, 24, 664, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 28, 665, 0),
woosh.Token(woosh.NAME, 'self', 665, 12, 665, 16),
woosh.Token(woosh.OP, '.', 665, 16, 665, 17),
woosh.Token(woosh.NAME, 'sock', 665, 17, 665, 21),
woosh.Token(woosh.OP, '=', 665, 22, 665, 23),
woosh.Token(woosh.NAME, 'None', 665, 24, 665, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 665, 28, 666, 0),
woosh.Token(woosh.NAME, 'if', 666, 12, 666, 14),
woosh.Token(woosh.NAME, 'sock', 666, 15, 666, 19),
woosh.Token(woosh.NAME, 'is', 666, 20, 666, 22),
woosh.Token(woosh.NAME, 'not', 666, 23, 666, 26),
woosh.Token(woosh.NAME, 'None', 666, 27, 666, 31),
woosh.Token(woosh.OP, ':', 666, 31, 666, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 666, 32, 667, 0),
woosh.Token(woosh.INDENT, '                ', 667, 0, 667, 16),
woosh.Token(woosh.NAME, 'sock', 667, 16, 667, 20),
woosh.Token(woosh.OP, '.', 667, 20, 667, 21),
woosh.Token(woosh.NAME, 'close', 667, 21, 667, 26),
woosh.Token(woosh.OP, '(', 667, 26, 667, 27),
woosh.Token(woosh.OP, ')', 667, 27, 667, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 28, 668, 0),
woosh.Token(woosh.DEDENT, '', 669, 0, 669, 0),
woosh.Token(woosh.DEDENT, '', 669, 0, 669, 0),
woosh.Token(woosh.DEDENT, '', 669, 0, 669, 0),
woosh.Token(woosh.DEDENT, '', 669, 0, 669, 0),
woosh.Token(woosh.NAME, 'try', 669, 0, 669, 3),
woosh.Token(woosh.OP, ':', 669, 3, 669, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 669, 4, 670, 0),
woosh.Token(woosh.INDENT, '    ', 670, 0, 670, 4),
woosh.Token(woosh.NAME, 'import', 670, 4, 670, 10),
woosh.Token(woosh.NAME, 'ssl', 670, 11, 670, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 670, 14, 671, 0),
woosh.Token(woosh.DEDENT, '', 671, 0, 671, 0),
woosh.Token(woosh.NAME, 'except', 671, 0, 671, 6),
woosh.Token(woosh.NAME, 'ImportError', 671, 7, 671, 18),
woosh.Token(woosh.OP, ':', 671, 18, 671, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 19, 672, 0),
woosh.Token(woosh.INDENT, '    ', 672, 0, 672, 4),
woosh.Token(woosh.NAME, '_SSLSocket', 672, 4, 672, 14),
woosh.Token(woosh.OP, '=', 672, 15, 672, 16),
woosh.Token(woosh.NAME, 'None', 672, 17, 672, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 672, 21, 673, 0),
woosh.Token(woosh.DEDENT, '', 673, 0, 673, 0),
woosh.Token(woosh.NAME, 'else', 673, 0, 673, 4),
woosh.Token(woosh.OP, ':', 673, 4, 673, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 673, 5, 674, 0),
woosh.Token(woosh.INDENT, '    ', 674, 0, 674, 4),
woosh.Token(woosh.NAME, '_SSLSocket', 674, 4, 674, 14),
woosh.Token(woosh.OP, '=', 674, 15, 674, 16),
woosh.Token(woosh.NAME, 'ssl', 674, 17, 674, 20),
woosh.Token(woosh.OP, '.', 674, 20, 674, 21),
woosh.Token(woosh.NAME, 'SSLSocket', 674, 21, 674, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 674, 30, 675, 0),
woosh.Token(woosh.NAME, 'class', 676, 4, 676, 9),
woosh.Token(woosh.NAME, 'FTP_TLS', 676, 10, 676, 17),
woosh.Token(woosh.OP, '(', 676, 17, 676, 18),
woosh.Token(woosh.NAME, 'FTP', 676, 18, 676, 21),
woosh.Token(woosh.OP, ')', 676, 21, 676, 22),
woosh.Token(woosh.OP, ':', 676, 22, 676, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 23, 677, 0),
woosh.Token(woosh.INDENT, '        ', 677, 0, 677, 8),
woosh.Token(woosh.STRING, "'''A FTP subclass which adds TLS support to FTP as described\r\n        in RFC-4217.\r\n\r\n        Connect as usual to port 21 implicitly securing the FTP control\r\n        connection before authenticating.\r\n\r\n        Securing the data connection requires user to explicitly ask\r\n        for it by calling prot_p() method.\r\n\r\n        Usage example:\r\n        >>> from ftplib import FTP_TLS\r\n        >>> ftps = FTP_TLS('ftp.python.org')\r\n        >>> ftps.login()  # login anonymously previously securing control channel\r\n        '230 Guest login ok, access restrictions apply.'\r\n        >>> ftps.prot_p()  # switch to secure data connection\r\n        '200 Protection level set to P'\r\n        >>> ftps.retrlines('LIST')  # list directory content securely\r\n        total 9\r\n        drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 .\r\n        drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 ..\r\n        drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 bin\r\n        drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 etc\r\n        d-wxrwxr-x   2 ftp      wheel        1024 Sep  5 13:43 incoming\r\n        drwxr-xr-x   2 root     wheel        1024 Nov 17  1993 lib\r\n        drwxr-xr-x   6 1094     wheel        1024 Sep 13 19:07 pub\r\n        drwxr-xr-x   3 root     wheel        1024 Jan  3  1994 usr\r\n        -rw-r--r--   1 root     root          312 Aug  1  1994 welcome.msg\r\n        '226 Transfer complete.'\r\n        >>> ftps.quit()\r\n        '221 Goodbye.'\r\n        >>>\r\n        '''", 677, 8, 708, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 708, 11, 709, 0),
woosh.Token(woosh.NAME, 'ssl_version', 709, 8, 709, 19),
woosh.Token(woosh.OP, '=', 709, 20, 709, 21),
woosh.Token(woosh.NAME, 'ssl', 709, 22, 709, 25),
woosh.Token(woosh.OP, '.', 709, 25, 709, 26),
woosh.Token(woosh.NAME, 'PROTOCOL_TLS_CLIENT', 709, 26, 709, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 45, 710, 0),
woosh.Token(woosh.NAME, 'def', 711, 8, 711, 11),
woosh.Token(woosh.NAME, '__init__', 711, 12, 711, 20),
woosh.Token(woosh.OP, '(', 711, 20, 711, 21),
woosh.Token(woosh.NAME, 'self', 711, 21, 711, 25),
woosh.Token(woosh.OP, ',', 711, 25, 711, 26),
woosh.Token(woosh.NAME, 'host', 711, 27, 711, 31),
woosh.Token(woosh.OP, '=', 711, 31, 711, 32),
woosh.Token(woosh.STRING, "''", 711, 32, 711, 34),
woosh.Token(woosh.OP, ',', 711, 34, 711, 35),
woosh.Token(woosh.NAME, 'user', 711, 36, 711, 40),
woosh.Token(woosh.OP, '=', 711, 40, 711, 41),
woosh.Token(woosh.STRING, "''", 711, 41, 711, 43),
woosh.Token(woosh.OP, ',', 711, 43, 711, 44),
woosh.Token(woosh.NAME, 'passwd', 711, 45, 711, 51),
woosh.Token(woosh.OP, '=', 711, 51, 711, 52),
woosh.Token(woosh.STRING, "''", 711, 52, 711, 54),
woosh.Token(woosh.OP, ',', 711, 54, 711, 55),
woosh.Token(woosh.NAME, 'acct', 711, 56, 711, 60),
woosh.Token(woosh.OP, '=', 711, 60, 711, 61),
woosh.Token(woosh.STRING, "''", 711, 61, 711, 63),
woosh.Token(woosh.OP, ',', 711, 63, 711, 64),
woosh.Token(woosh.NAME, 'keyfile', 712, 21, 712, 28),
woosh.Token(woosh.OP, '=', 712, 28, 712, 29),
woosh.Token(woosh.NAME, 'None', 712, 29, 712, 33),
woosh.Token(woosh.OP, ',', 712, 33, 712, 34),
woosh.Token(woosh.NAME, 'certfile', 712, 35, 712, 43),
woosh.Token(woosh.OP, '=', 712, 43, 712, 44),
woosh.Token(woosh.NAME, 'None', 712, 44, 712, 48),
woosh.Token(woosh.OP, ',', 712, 48, 712, 49),
woosh.Token(woosh.NAME, 'context', 712, 50, 712, 57),
woosh.Token(woosh.OP, '=', 712, 57, 712, 58),
woosh.Token(woosh.NAME, 'None', 712, 58, 712, 62),
woosh.Token(woosh.OP, ',', 712, 62, 712, 63),
woosh.Token(woosh.NAME, 'timeout', 713, 21, 713, 28),
woosh.Token(woosh.OP, '=', 713, 28, 713, 29),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 713, 29, 713, 52),
woosh.Token(woosh.OP, ',', 713, 52, 713, 53),
woosh.Token(woosh.NAME, 'source_address', 713, 54, 713, 68),
woosh.Token(woosh.OP, '=', 713, 68, 713, 69),
woosh.Token(woosh.NAME, 'None', 713, 69, 713, 73),
woosh.Token(woosh.OP, ',', 713, 73, 713, 74),
woosh.Token(woosh.OP, '*', 713, 75, 713, 76),
woosh.Token(woosh.OP, ',', 713, 76, 713, 77),
woosh.Token(woosh.NAME, 'encoding', 714, 21, 714, 29),
woosh.Token(woosh.OP, '=', 714, 29, 714, 30),
woosh.Token(woosh.STRING, "'utf-8'", 714, 30, 714, 37),
woosh.Token(woosh.OP, ')', 714, 37, 714, 38),
woosh.Token(woosh.OP, ':', 714, 38, 714, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 39, 715, 0),
woosh.Token(woosh.INDENT, '            ', 715, 0, 715, 12),
woosh.Token(woosh.NAME, 'if', 715, 12, 715, 14),
woosh.Token(woosh.NAME, 'context', 715, 15, 715, 22),
woosh.Token(woosh.NAME, 'is', 715, 23, 715, 25),
woosh.Token(woosh.NAME, 'not', 715, 26, 715, 29),
woosh.Token(woosh.NAME, 'None', 715, 30, 715, 34),
woosh.Token(woosh.NAME, 'and', 715, 35, 715, 38),
woosh.Token(woosh.NAME, 'keyfile', 715, 39, 715, 46),
woosh.Token(woosh.NAME, 'is', 715, 47, 715, 49),
woosh.Token(woosh.NAME, 'not', 715, 50, 715, 53),
woosh.Token(woosh.NAME, 'None', 715, 54, 715, 58),
woosh.Token(woosh.OP, ':', 715, 58, 715, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 59, 716, 0),
woosh.Token(woosh.INDENT, '                ', 716, 0, 716, 16),
woosh.Token(woosh.NAME, 'raise', 716, 16, 716, 21),
woosh.Token(woosh.NAME, 'ValueError', 716, 22, 716, 32),
woosh.Token(woosh.OP, '(', 716, 32, 716, 33),
woosh.Token(woosh.STRING, '"context and keyfile arguments are mutually "', 716, 33, 716, 78),
woosh.Token(woosh.STRING, '"exclusive"', 717, 33, 717, 44),
woosh.Token(woosh.OP, ')', 717, 44, 717, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 45, 718, 0),
woosh.Token(woosh.DEDENT, '            ', 718, 0, 718, 12),
woosh.Token(woosh.NAME, 'if', 718, 12, 718, 14),
woosh.Token(woosh.NAME, 'context', 718, 15, 718, 22),
woosh.Token(woosh.NAME, 'is', 718, 23, 718, 25),
woosh.Token(woosh.NAME, 'not', 718, 26, 718, 29),
woosh.Token(woosh.NAME, 'None', 718, 30, 718, 34),
woosh.Token(woosh.NAME, 'and', 718, 35, 718, 38),
woosh.Token(woosh.NAME, 'certfile', 718, 39, 718, 47),
woosh.Token(woosh.NAME, 'is', 718, 48, 718, 50),
woosh.Token(woosh.NAME, 'not', 718, 51, 718, 54),
woosh.Token(woosh.NAME, 'None', 718, 55, 718, 59),
woosh.Token(woosh.OP, ':', 718, 59, 718, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 718, 60, 719, 0),
woosh.Token(woosh.INDENT, '                ', 719, 0, 719, 16),
woosh.Token(woosh.NAME, 'raise', 719, 16, 719, 21),
woosh.Token(woosh.NAME, 'ValueError', 719, 22, 719, 32),
woosh.Token(woosh.OP, '(', 719, 32, 719, 33),
woosh.Token(woosh.STRING, '"context and certfile arguments are mutually "', 719, 33, 719, 79),
woosh.Token(woosh.STRING, '"exclusive"', 720, 33, 720, 44),
woosh.Token(woosh.OP, ')', 720, 44, 720, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 45, 721, 0),
woosh.Token(woosh.DEDENT, '            ', 721, 0, 721, 12),
woosh.Token(woosh.NAME, 'if', 721, 12, 721, 14),
woosh.Token(woosh.NAME, 'keyfile', 721, 15, 721, 22),
woosh.Token(woosh.NAME, 'is', 721, 23, 721, 25),
woosh.Token(woosh.NAME, 'not', 721, 26, 721, 29),
woosh.Token(woosh.NAME, 'None', 721, 30, 721, 34),
woosh.Token(woosh.NAME, 'or', 721, 35, 721, 37),
woosh.Token(woosh.NAME, 'certfile', 721, 38, 721, 46),
woosh.Token(woosh.NAME, 'is', 721, 47, 721, 49),
woosh.Token(woosh.NAME, 'not', 721, 50, 721, 53),
woosh.Token(woosh.NAME, 'None', 721, 54, 721, 58),
woosh.Token(woosh.OP, ':', 721, 58, 721, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 59, 722, 0),
woosh.Token(woosh.INDENT, '                ', 722, 0, 722, 16),
woosh.Token(woosh.NAME, 'import', 722, 16, 722, 22),
woosh.Token(woosh.NAME, 'warnings', 722, 23, 722, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 722, 31, 723, 0),
woosh.Token(woosh.NAME, 'warnings', 723, 16, 723, 24),
woosh.Token(woosh.OP, '.', 723, 24, 723, 25),
woosh.Token(woosh.NAME, 'warn', 723, 25, 723, 29),
woosh.Token(woosh.OP, '(', 723, 29, 723, 30),
woosh.Token(woosh.STRING, '"keyfile and certfile are deprecated, use a "', 723, 30, 723, 75),
woosh.Token(woosh.STRING, '"custom context instead"', 724, 30, 724, 54),
woosh.Token(woosh.OP, ',', 724, 54, 724, 55),
woosh.Token(woosh.NAME, 'DeprecationWarning', 724, 56, 724, 74),
woosh.Token(woosh.OP, ',', 724, 74, 724, 75),
woosh.Token(woosh.NUMBER, '2', 724, 76, 724, 77),
woosh.Token(woosh.OP, ')', 724, 77, 724, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 724, 78, 725, 0),
woosh.Token(woosh.DEDENT, '            ', 725, 0, 725, 12),
woosh.Token(woosh.NAME, 'self', 725, 12, 725, 16),
woosh.Token(woosh.OP, '.', 725, 16, 725, 17),
woosh.Token(woosh.NAME, 'keyfile', 725, 17, 725, 24),
woosh.Token(woosh.OP, '=', 725, 25, 725, 26),
woosh.Token(woosh.NAME, 'keyfile', 725, 27, 725, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 34, 726, 0),
woosh.Token(woosh.NAME, 'self', 726, 12, 726, 16),
woosh.Token(woosh.OP, '.', 726, 16, 726, 17),
woosh.Token(woosh.NAME, 'certfile', 726, 17, 726, 25),
woosh.Token(woosh.OP, '=', 726, 26, 726, 27),
woosh.Token(woosh.NAME, 'certfile', 726, 28, 726, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 36, 727, 0),
woosh.Token(woosh.NAME, 'if', 727, 12, 727, 14),
woosh.Token(woosh.NAME, 'context', 727, 15, 727, 22),
woosh.Token(woosh.NAME, 'is', 727, 23, 727, 25),
woosh.Token(woosh.NAME, 'None', 727, 26, 727, 30),
woosh.Token(woosh.OP, ':', 727, 30, 727, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 31, 728, 0),
woosh.Token(woosh.INDENT, '                ', 728, 0, 728, 16),
woosh.Token(woosh.NAME, 'context', 728, 16, 728, 23),
woosh.Token(woosh.OP, '=', 728, 24, 728, 25),
woosh.Token(woosh.NAME, 'ssl', 728, 26, 728, 29),
woosh.Token(woosh.OP, '.', 728, 29, 728, 30),
woosh.Token(woosh.NAME, '_create_stdlib_context', 728, 30, 728, 52),
woosh.Token(woosh.OP, '(', 728, 52, 728, 53),
woosh.Token(woosh.NAME, 'self', 728, 53, 728, 57),
woosh.Token(woosh.OP, '.', 728, 57, 728, 58),
woosh.Token(woosh.NAME, 'ssl_version', 728, 58, 728, 69),
woosh.Token(woosh.OP, ',', 728, 69, 728, 70),
woosh.Token(woosh.NAME, 'certfile', 729, 53, 729, 61),
woosh.Token(woosh.OP, '=', 729, 61, 729, 62),
woosh.Token(woosh.NAME, 'certfile', 729, 62, 729, 70),
woosh.Token(woosh.OP, ',', 729, 70, 729, 71),
woosh.Token(woosh.NAME, 'keyfile', 730, 53, 730, 60),
woosh.Token(woosh.OP, '=', 730, 60, 730, 61),
woosh.Token(woosh.NAME, 'keyfile', 730, 61, 730, 68),
woosh.Token(woosh.OP, ')', 730, 68, 730, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 730, 69, 731, 0),
woosh.Token(woosh.DEDENT, '            ', 731, 0, 731, 12),
woosh.Token(woosh.NAME, 'self', 731, 12, 731, 16),
woosh.Token(woosh.OP, '.', 731, 16, 731, 17),
woosh.Token(woosh.NAME, 'context', 731, 17, 731, 24),
woosh.Token(woosh.OP, '=', 731, 25, 731, 26),
woosh.Token(woosh.NAME, 'context', 731, 27, 731, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 731, 34, 732, 0),
woosh.Token(woosh.NAME, 'self', 732, 12, 732, 16),
woosh.Token(woosh.OP, '.', 732, 16, 732, 17),
woosh.Token(woosh.NAME, '_prot_p', 732, 17, 732, 24),
woosh.Token(woosh.OP, '=', 732, 25, 732, 26),
woosh.Token(woosh.NAME, 'False', 732, 27, 732, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 732, 32, 733, 0),
woosh.Token(woosh.NAME, 'super', 733, 12, 733, 17),
woosh.Token(woosh.OP, '(', 733, 17, 733, 18),
woosh.Token(woosh.OP, ')', 733, 18, 733, 19),
woosh.Token(woosh.OP, '.', 733, 19, 733, 20),
woosh.Token(woosh.NAME, '__init__', 733, 20, 733, 28),
woosh.Token(woosh.OP, '(', 733, 28, 733, 29),
woosh.Token(woosh.NAME, 'host', 733, 29, 733, 33),
woosh.Token(woosh.OP, ',', 733, 33, 733, 34),
woosh.Token(woosh.NAME, 'user', 733, 35, 733, 39),
woosh.Token(woosh.OP, ',', 733, 39, 733, 40),
woosh.Token(woosh.NAME, 'passwd', 733, 41, 733, 47),
woosh.Token(woosh.OP, ',', 733, 47, 733, 48),
woosh.Token(woosh.NAME, 'acct', 733, 49, 733, 53),
woosh.Token(woosh.OP, ',', 733, 53, 733, 54),
woosh.Token(woosh.NAME, 'timeout', 734, 29, 734, 36),
woosh.Token(woosh.OP, ',', 734, 36, 734, 37),
woosh.Token(woosh.NAME, 'source_address', 734, 38, 734, 52),
woosh.Token(woosh.OP, ',', 734, 52, 734, 53),
woosh.Token(woosh.NAME, 'encoding', 734, 54, 734, 62),
woosh.Token(woosh.OP, '=', 734, 62, 734, 63),
woosh.Token(woosh.NAME, 'encoding', 734, 63, 734, 71),
woosh.Token(woosh.OP, ')', 734, 71, 734, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 72, 735, 0),
woosh.Token(woosh.DEDENT, '        ', 736, 0, 736, 8),
woosh.Token(woosh.NAME, 'def', 736, 8, 736, 11),
woosh.Token(woosh.NAME, 'login', 736, 12, 736, 17),
woosh.Token(woosh.OP, '(', 736, 17, 736, 18),
woosh.Token(woosh.NAME, 'self', 736, 18, 736, 22),
woosh.Token(woosh.OP, ',', 736, 22, 736, 23),
woosh.Token(woosh.NAME, 'user', 736, 24, 736, 28),
woosh.Token(woosh.OP, '=', 736, 28, 736, 29),
woosh.Token(woosh.STRING, "''", 736, 29, 736, 31),
woosh.Token(woosh.OP, ',', 736, 31, 736, 32),
woosh.Token(woosh.NAME, 'passwd', 736, 33, 736, 39),
woosh.Token(woosh.OP, '=', 736, 39, 736, 40),
woosh.Token(woosh.STRING, "''", 736, 40, 736, 42),
woosh.Token(woosh.OP, ',', 736, 42, 736, 43),
woosh.Token(woosh.NAME, 'acct', 736, 44, 736, 48),
woosh.Token(woosh.OP, '=', 736, 48, 736, 49),
woosh.Token(woosh.STRING, "''", 736, 49, 736, 51),
woosh.Token(woosh.OP, ',', 736, 51, 736, 52),
woosh.Token(woosh.NAME, 'secure', 736, 53, 736, 59),
woosh.Token(woosh.OP, '=', 736, 59, 736, 60),
woosh.Token(woosh.NAME, 'True', 736, 60, 736, 64),
woosh.Token(woosh.OP, ')', 736, 64, 736, 65),
woosh.Token(woosh.OP, ':', 736, 65, 736, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 66, 737, 0),
woosh.Token(woosh.INDENT, '            ', 737, 0, 737, 12),
woosh.Token(woosh.NAME, 'if', 737, 12, 737, 14),
woosh.Token(woosh.NAME, 'secure', 737, 15, 737, 21),
woosh.Token(woosh.NAME, 'and', 737, 22, 737, 25),
woosh.Token(woosh.NAME, 'not', 737, 26, 737, 29),
woosh.Token(woosh.NAME, 'isinstance', 737, 30, 737, 40),
woosh.Token(woosh.OP, '(', 737, 40, 737, 41),
woosh.Token(woosh.NAME, 'self', 737, 41, 737, 45),
woosh.Token(woosh.OP, '.', 737, 45, 737, 46),
woosh.Token(woosh.NAME, 'sock', 737, 46, 737, 50),
woosh.Token(woosh.OP, ',', 737, 50, 737, 51),
woosh.Token(woosh.NAME, 'ssl', 737, 52, 737, 55),
woosh.Token(woosh.OP, '.', 737, 55, 737, 56),
woosh.Token(woosh.NAME, 'SSLSocket', 737, 56, 737, 65),
woosh.Token(woosh.OP, ')', 737, 65, 737, 66),
woosh.Token(woosh.OP, ':', 737, 66, 737, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 737, 67, 738, 0),
woosh.Token(woosh.INDENT, '                ', 738, 0, 738, 16),
woosh.Token(woosh.NAME, 'self', 738, 16, 738, 20),
woosh.Token(woosh.OP, '.', 738, 20, 738, 21),
woosh.Token(woosh.NAME, 'auth', 738, 21, 738, 25),
woosh.Token(woosh.OP, '(', 738, 25, 738, 26),
woosh.Token(woosh.OP, ')', 738, 26, 738, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 27, 739, 0),
woosh.Token(woosh.DEDENT, '            ', 739, 0, 739, 12),
woosh.Token(woosh.NAME, 'return', 739, 12, 739, 18),
woosh.Token(woosh.NAME, 'super', 739, 19, 739, 24),
woosh.Token(woosh.OP, '(', 739, 24, 739, 25),
woosh.Token(woosh.OP, ')', 739, 25, 739, 26),
woosh.Token(woosh.OP, '.', 739, 26, 739, 27),
woosh.Token(woosh.NAME, 'login', 739, 27, 739, 32),
woosh.Token(woosh.OP, '(', 739, 32, 739, 33),
woosh.Token(woosh.NAME, 'user', 739, 33, 739, 37),
woosh.Token(woosh.OP, ',', 739, 37, 739, 38),
woosh.Token(woosh.NAME, 'passwd', 739, 39, 739, 45),
woosh.Token(woosh.OP, ',', 739, 45, 739, 46),
woosh.Token(woosh.NAME, 'acct', 739, 47, 739, 51),
woosh.Token(woosh.OP, ')', 739, 51, 739, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 52, 740, 0),
woosh.Token(woosh.DEDENT, '        ', 741, 0, 741, 8),
woosh.Token(woosh.NAME, 'def', 741, 8, 741, 11),
woosh.Token(woosh.NAME, 'auth', 741, 12, 741, 16),
woosh.Token(woosh.OP, '(', 741, 16, 741, 17),
woosh.Token(woosh.NAME, 'self', 741, 17, 741, 21),
woosh.Token(woosh.OP, ')', 741, 21, 741, 22),
woosh.Token(woosh.OP, ':', 741, 22, 741, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 23, 742, 0),
woosh.Token(woosh.INDENT, '            ', 742, 0, 742, 12),
woosh.Token(woosh.STRING, "'''Set up secure control connection by using TLS/SSL.'''", 742, 12, 742, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 742, 68, 743, 0),
woosh.Token(woosh.NAME, 'if', 743, 12, 743, 14),
woosh.Token(woosh.NAME, 'isinstance', 743, 15, 743, 25),
woosh.Token(woosh.OP, '(', 743, 25, 743, 26),
woosh.Token(woosh.NAME, 'self', 743, 26, 743, 30),
woosh.Token(woosh.OP, '.', 743, 30, 743, 31),
woosh.Token(woosh.NAME, 'sock', 743, 31, 743, 35),
woosh.Token(woosh.OP, ',', 743, 35, 743, 36),
woosh.Token(woosh.NAME, 'ssl', 743, 37, 743, 40),
woosh.Token(woosh.OP, '.', 743, 40, 743, 41),
woosh.Token(woosh.NAME, 'SSLSocket', 743, 41, 743, 50),
woosh.Token(woosh.OP, ')', 743, 50, 743, 51),
woosh.Token(woosh.OP, ':', 743, 51, 743, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 52, 744, 0),
woosh.Token(woosh.INDENT, '                ', 744, 0, 744, 16),
woosh.Token(woosh.NAME, 'raise', 744, 16, 744, 21),
woosh.Token(woosh.NAME, 'ValueError', 744, 22, 744, 32),
woosh.Token(woosh.OP, '(', 744, 32, 744, 33),
woosh.Token(woosh.STRING, '"Already using TLS"', 744, 33, 744, 52),
woosh.Token(woosh.OP, ')', 744, 52, 744, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 53, 745, 0),
woosh.Token(woosh.DEDENT, '            ', 745, 0, 745, 12),
woosh.Token(woosh.NAME, 'if', 745, 12, 745, 14),
woosh.Token(woosh.NAME, 'self', 745, 15, 745, 19),
woosh.Token(woosh.OP, '.', 745, 19, 745, 20),
woosh.Token(woosh.NAME, 'ssl_version', 745, 20, 745, 31),
woosh.Token(woosh.OP, '>=', 745, 32, 745, 34),
woosh.Token(woosh.NAME, 'ssl', 745, 35, 745, 38),
woosh.Token(woosh.OP, '.', 745, 38, 745, 39),
woosh.Token(woosh.NAME, 'PROTOCOL_TLS', 745, 39, 745, 51),
woosh.Token(woosh.OP, ':', 745, 51, 745, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 745, 52, 746, 0),
woosh.Token(woosh.INDENT, '                ', 746, 0, 746, 16),
woosh.Token(woosh.NAME, 'resp', 746, 16, 746, 20),
woosh.Token(woosh.OP, '=', 746, 21, 746, 22),
woosh.Token(woosh.NAME, 'self', 746, 23, 746, 27),
woosh.Token(woosh.OP, '.', 746, 27, 746, 28),
woosh.Token(woosh.NAME, 'voidcmd', 746, 28, 746, 35),
woosh.Token(woosh.OP, '(', 746, 35, 746, 36),
woosh.Token(woosh.STRING, "'AUTH TLS'", 746, 36, 746, 46),
woosh.Token(woosh.OP, ')', 746, 46, 746, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 47, 747, 0),
woosh.Token(woosh.DEDENT, '            ', 747, 0, 747, 12),
woosh.Token(woosh.NAME, 'else', 747, 12, 747, 16),
woosh.Token(woosh.OP, ':', 747, 16, 747, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 17, 748, 0),
woosh.Token(woosh.INDENT, '                ', 748, 0, 748, 16),
woosh.Token(woosh.NAME, 'resp', 748, 16, 748, 20),
woosh.Token(woosh.OP, '=', 748, 21, 748, 22),
woosh.Token(woosh.NAME, 'self', 748, 23, 748, 27),
woosh.Token(woosh.OP, '.', 748, 27, 748, 28),
woosh.Token(woosh.NAME, 'voidcmd', 748, 28, 748, 35),
woosh.Token(woosh.OP, '(', 748, 35, 748, 36),
woosh.Token(woosh.STRING, "'AUTH SSL'", 748, 36, 748, 46),
woosh.Token(woosh.OP, ')', 748, 46, 748, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 47, 749, 0),
woosh.Token(woosh.DEDENT, '            ', 749, 0, 749, 12),
woosh.Token(woosh.NAME, 'self', 749, 12, 749, 16),
woosh.Token(woosh.OP, '.', 749, 16, 749, 17),
woosh.Token(woosh.NAME, 'sock', 749, 17, 749, 21),
woosh.Token(woosh.OP, '=', 749, 22, 749, 23),
woosh.Token(woosh.NAME, 'self', 749, 24, 749, 28),
woosh.Token(woosh.OP, '.', 749, 28, 749, 29),
woosh.Token(woosh.NAME, 'context', 749, 29, 749, 36),
woosh.Token(woosh.OP, '.', 749, 36, 749, 37),
woosh.Token(woosh.NAME, 'wrap_socket', 749, 37, 749, 48),
woosh.Token(woosh.OP, '(', 749, 48, 749, 49),
woosh.Token(woosh.NAME, 'self', 749, 49, 749, 53),
woosh.Token(woosh.OP, '.', 749, 53, 749, 54),
woosh.Token(woosh.NAME, 'sock', 749, 54, 749, 58),
woosh.Token(woosh.OP, ',', 749, 58, 749, 59),
woosh.Token(woosh.NAME, 'server_hostname', 749, 60, 749, 75),
woosh.Token(woosh.OP, '=', 749, 75, 749, 76),
woosh.Token(woosh.NAME, 'self', 749, 76, 749, 80),
woosh.Token(woosh.OP, '.', 749, 80, 749, 81),
woosh.Token(woosh.NAME, 'host', 749, 81, 749, 85),
woosh.Token(woosh.OP, ')', 749, 85, 749, 86),
woosh.Token(woosh.NEWLINE, '\r\n', 749, 86, 750, 0),
woosh.Token(woosh.NAME, 'self', 750, 12, 750, 16),
woosh.Token(woosh.OP, '.', 750, 16, 750, 17),
woosh.Token(woosh.NAME, 'file', 750, 17, 750, 21),
woosh.Token(woosh.OP, '=', 750, 22, 750, 23),
woosh.Token(woosh.NAME, 'self', 750, 24, 750, 28),
woosh.Token(woosh.OP, '.', 750, 28, 750, 29),
woosh.Token(woosh.NAME, 'sock', 750, 29, 750, 33),
woosh.Token(woosh.OP, '.', 750, 33, 750, 34),
woosh.Token(woosh.NAME, 'makefile', 750, 34, 750, 42),
woosh.Token(woosh.OP, '(', 750, 42, 750, 43),
woosh.Token(woosh.NAME, 'mode', 750, 43, 750, 47),
woosh.Token(woosh.OP, '=', 750, 47, 750, 48),
woosh.Token(woosh.STRING, "'r'", 750, 48, 750, 51),
woosh.Token(woosh.OP, ',', 750, 51, 750, 52),
woosh.Token(woosh.NAME, 'encoding', 750, 53, 750, 61),
woosh.Token(woosh.OP, '=', 750, 61, 750, 62),
woosh.Token(woosh.NAME, 'self', 750, 62, 750, 66),
woosh.Token(woosh.OP, '.', 750, 66, 750, 67),
woosh.Token(woosh.NAME, 'encoding', 750, 67, 750, 75),
woosh.Token(woosh.OP, ')', 750, 75, 750, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 76, 751, 0),
woosh.Token(woosh.NAME, 'return', 751, 12, 751, 18),
woosh.Token(woosh.NAME, 'resp', 751, 19, 751, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 751, 23, 752, 0),
woosh.Token(woosh.DEDENT, '        ', 753, 0, 753, 8),
woosh.Token(woosh.NAME, 'def', 753, 8, 753, 11),
woosh.Token(woosh.NAME, 'ccc', 753, 12, 753, 15),
woosh.Token(woosh.OP, '(', 753, 15, 753, 16),
woosh.Token(woosh.NAME, 'self', 753, 16, 753, 20),
woosh.Token(woosh.OP, ')', 753, 20, 753, 21),
woosh.Token(woosh.OP, ':', 753, 21, 753, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 22, 754, 0),
woosh.Token(woosh.INDENT, '            ', 754, 0, 754, 12),
woosh.Token(woosh.STRING, "'''Switch back to a clear-text control connection.'''", 754, 12, 754, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 65, 755, 0),
woosh.Token(woosh.NAME, 'if', 755, 12, 755, 14),
woosh.Token(woosh.NAME, 'not', 755, 15, 755, 18),
woosh.Token(woosh.NAME, 'isinstance', 755, 19, 755, 29),
woosh.Token(woosh.OP, '(', 755, 29, 755, 30),
woosh.Token(woosh.NAME, 'self', 755, 30, 755, 34),
woosh.Token(woosh.OP, '.', 755, 34, 755, 35),
woosh.Token(woosh.NAME, 'sock', 755, 35, 755, 39),
woosh.Token(woosh.OP, ',', 755, 39, 755, 40),
woosh.Token(woosh.NAME, 'ssl', 755, 41, 755, 44),
woosh.Token(woosh.OP, '.', 755, 44, 755, 45),
woosh.Token(woosh.NAME, 'SSLSocket', 755, 45, 755, 54),
woosh.Token(woosh.OP, ')', 755, 54, 755, 55),
woosh.Token(woosh.OP, ':', 755, 55, 755, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 755, 56, 756, 0),
woosh.Token(woosh.INDENT, '                ', 756, 0, 756, 16),
woosh.Token(woosh.NAME, 'raise', 756, 16, 756, 21),
woosh.Token(woosh.NAME, 'ValueError', 756, 22, 756, 32),
woosh.Token(woosh.OP, '(', 756, 32, 756, 33),
woosh.Token(woosh.STRING, '"not using TLS"', 756, 33, 756, 48),
woosh.Token(woosh.OP, ')', 756, 48, 756, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 49, 757, 0),
woosh.Token(woosh.DEDENT, '            ', 757, 0, 757, 12),
woosh.Token(woosh.NAME, 'resp', 757, 12, 757, 16),
woosh.Token(woosh.OP, '=', 757, 17, 757, 18),
woosh.Token(woosh.NAME, 'self', 757, 19, 757, 23),
woosh.Token(woosh.OP, '.', 757, 23, 757, 24),
woosh.Token(woosh.NAME, 'voidcmd', 757, 24, 757, 31),
woosh.Token(woosh.OP, '(', 757, 31, 757, 32),
woosh.Token(woosh.STRING, "'CCC'", 757, 32, 757, 37),
woosh.Token(woosh.OP, ')', 757, 37, 757, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 38, 758, 0),
woosh.Token(woosh.NAME, 'self', 758, 12, 758, 16),
woosh.Token(woosh.OP, '.', 758, 16, 758, 17),
woosh.Token(woosh.NAME, 'sock', 758, 17, 758, 21),
woosh.Token(woosh.OP, '=', 758, 22, 758, 23),
woosh.Token(woosh.NAME, 'self', 758, 24, 758, 28),
woosh.Token(woosh.OP, '.', 758, 28, 758, 29),
woosh.Token(woosh.NAME, 'sock', 758, 29, 758, 33),
woosh.Token(woosh.OP, '.', 758, 33, 758, 34),
woosh.Token(woosh.NAME, 'unwrap', 758, 34, 758, 40),
woosh.Token(woosh.OP, '(', 758, 40, 758, 41),
woosh.Token(woosh.OP, ')', 758, 41, 758, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 42, 759, 0),
woosh.Token(woosh.NAME, 'return', 759, 12, 759, 18),
woosh.Token(woosh.NAME, 'resp', 759, 19, 759, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 23, 760, 0),
woosh.Token(woosh.DEDENT, '        ', 761, 0, 761, 8),
woosh.Token(woosh.NAME, 'def', 761, 8, 761, 11),
woosh.Token(woosh.NAME, 'prot_p', 761, 12, 761, 18),
woosh.Token(woosh.OP, '(', 761, 18, 761, 19),
woosh.Token(woosh.NAME, 'self', 761, 19, 761, 23),
woosh.Token(woosh.OP, ')', 761, 23, 761, 24),
woosh.Token(woosh.OP, ':', 761, 24, 761, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 25, 762, 0),
woosh.Token(woosh.INDENT, '            ', 762, 0, 762, 12),
woosh.Token(woosh.STRING, "'''Set up secure data connection.'''", 762, 12, 762, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 762, 48, 763, 0),
woosh.Token(woosh.COMMENT, '# PROT defines whether or not the data channel is to be protected.', 763, 12, 763, 78),
woosh.Token(woosh.COMMENT, '# Though RFC-2228 defines four possible protection levels,', 764, 12, 764, 70),
woosh.Token(woosh.COMMENT, '# RFC-4217 only recommends two, Clear and Private.', 765, 12, 765, 62),
woosh.Token(woosh.COMMENT, '# Clear (PROT C) means that no security is to be used on the', 766, 12, 766, 72),
woosh.Token(woosh.COMMENT, '# data-channel, Private (PROT P) means that the data-channel', 767, 12, 767, 72),
woosh.Token(woosh.COMMENT, '# should be protected by TLS.', 768, 12, 768, 41),
woosh.Token(woosh.COMMENT, '# PBSZ command MUST still be issued, but must have a parameter of', 769, 12, 769, 77),
woosh.Token(woosh.COMMENT, "# '0' to indicate that no buffering is taking place and the data", 770, 12, 770, 76),
woosh.Token(woosh.COMMENT, '# connection should not be encapsulated.', 771, 12, 771, 52),
woosh.Token(woosh.NAME, 'self', 772, 12, 772, 16),
woosh.Token(woosh.OP, '.', 772, 16, 772, 17),
woosh.Token(woosh.NAME, 'voidcmd', 772, 17, 772, 24),
woosh.Token(woosh.OP, '(', 772, 24, 772, 25),
woosh.Token(woosh.STRING, "'PBSZ 0'", 772, 25, 772, 33),
woosh.Token(woosh.OP, ')', 772, 33, 772, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 772, 34, 773, 0),
woosh.Token(woosh.NAME, 'resp', 773, 12, 773, 16),
woosh.Token(woosh.OP, '=', 773, 17, 773, 18),
woosh.Token(woosh.NAME, 'self', 773, 19, 773, 23),
woosh.Token(woosh.OP, '.', 773, 23, 773, 24),
woosh.Token(woosh.NAME, 'voidcmd', 773, 24, 773, 31),
woosh.Token(woosh.OP, '(', 773, 31, 773, 32),
woosh.Token(woosh.STRING, "'PROT P'", 773, 32, 773, 40),
woosh.Token(woosh.OP, ')', 773, 40, 773, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 773, 41, 774, 0),
woosh.Token(woosh.NAME, 'self', 774, 12, 774, 16),
woosh.Token(woosh.OP, '.', 774, 16, 774, 17),
woosh.Token(woosh.NAME, '_prot_p', 774, 17, 774, 24),
woosh.Token(woosh.OP, '=', 774, 25, 774, 26),
woosh.Token(woosh.NAME, 'True', 774, 27, 774, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 31, 775, 0),
woosh.Token(woosh.NAME, 'return', 775, 12, 775, 18),
woosh.Token(woosh.NAME, 'resp', 775, 19, 775, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 23, 776, 0),
woosh.Token(woosh.DEDENT, '        ', 777, 0, 777, 8),
woosh.Token(woosh.NAME, 'def', 777, 8, 777, 11),
woosh.Token(woosh.NAME, 'prot_c', 777, 12, 777, 18),
woosh.Token(woosh.OP, '(', 777, 18, 777, 19),
woosh.Token(woosh.NAME, 'self', 777, 19, 777, 23),
woosh.Token(woosh.OP, ')', 777, 23, 777, 24),
woosh.Token(woosh.OP, ':', 777, 24, 777, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 25, 778, 0),
woosh.Token(woosh.INDENT, '            ', 778, 0, 778, 12),
woosh.Token(woosh.STRING, "'''Set up clear text data connection.'''", 778, 12, 778, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 52, 779, 0),
woosh.Token(woosh.NAME, 'resp', 779, 12, 779, 16),
woosh.Token(woosh.OP, '=', 779, 17, 779, 18),
woosh.Token(woosh.NAME, 'self', 779, 19, 779, 23),
woosh.Token(woosh.OP, '.', 779, 23, 779, 24),
woosh.Token(woosh.NAME, 'voidcmd', 779, 24, 779, 31),
woosh.Token(woosh.OP, '(', 779, 31, 779, 32),
woosh.Token(woosh.STRING, "'PROT C'", 779, 32, 779, 40),
woosh.Token(woosh.OP, ')', 779, 40, 779, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 41, 780, 0),
woosh.Token(woosh.NAME, 'self', 780, 12, 780, 16),
woosh.Token(woosh.OP, '.', 780, 16, 780, 17),
woosh.Token(woosh.NAME, '_prot_p', 780, 17, 780, 24),
woosh.Token(woosh.OP, '=', 780, 25, 780, 26),
woosh.Token(woosh.NAME, 'False', 780, 27, 780, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 780, 32, 781, 0),
woosh.Token(woosh.NAME, 'return', 781, 12, 781, 18),
woosh.Token(woosh.NAME, 'resp', 781, 19, 781, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 23, 782, 0),
woosh.Token(woosh.COMMENT, '# --- Overridden FTP methods', 783, 8, 783, 36),
woosh.Token(woosh.DEDENT, '        ', 785, 0, 785, 8),
woosh.Token(woosh.NAME, 'def', 785, 8, 785, 11),
woosh.Token(woosh.NAME, 'ntransfercmd', 785, 12, 785, 24),
woosh.Token(woosh.OP, '(', 785, 24, 785, 25),
woosh.Token(woosh.NAME, 'self', 785, 25, 785, 29),
woosh.Token(woosh.OP, ',', 785, 29, 785, 30),
woosh.Token(woosh.NAME, 'cmd', 785, 31, 785, 34),
woosh.Token(woosh.OP, ',', 785, 34, 785, 35),
woosh.Token(woosh.NAME, 'rest', 785, 36, 785, 40),
woosh.Token(woosh.OP, '=', 785, 40, 785, 41),
woosh.Token(woosh.NAME, 'None', 785, 41, 785, 45),
woosh.Token(woosh.OP, ')', 785, 45, 785, 46),
woosh.Token(woosh.OP, ':', 785, 46, 785, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 785, 47, 786, 0),
woosh.Token(woosh.INDENT, '            ', 786, 0, 786, 12),
woosh.Token(woosh.NAME, 'conn', 786, 12, 786, 16),
woosh.Token(woosh.OP, ',', 786, 16, 786, 17),
woosh.Token(woosh.NAME, 'size', 786, 18, 786, 22),
woosh.Token(woosh.OP, '=', 786, 23, 786, 24),
woosh.Token(woosh.NAME, 'super', 786, 25, 786, 30),
woosh.Token(woosh.OP, '(', 786, 30, 786, 31),
woosh.Token(woosh.OP, ')', 786, 31, 786, 32),
woosh.Token(woosh.OP, '.', 786, 32, 786, 33),
woosh.Token(woosh.NAME, 'ntransfercmd', 786, 33, 786, 45),
woosh.Token(woosh.OP, '(', 786, 45, 786, 46),
woosh.Token(woosh.NAME, 'cmd', 786, 46, 786, 49),
woosh.Token(woosh.OP, ',', 786, 49, 786, 50),
woosh.Token(woosh.NAME, 'rest', 786, 51, 786, 55),
woosh.Token(woosh.OP, ')', 786, 55, 786, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 786, 56, 787, 0),
woosh.Token(woosh.NAME, 'if', 787, 12, 787, 14),
woosh.Token(woosh.NAME, 'self', 787, 15, 787, 19),
woosh.Token(woosh.OP, '.', 787, 19, 787, 20),
woosh.Token(woosh.NAME, '_prot_p', 787, 20, 787, 27),
woosh.Token(woosh.OP, ':', 787, 27, 787, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 28, 788, 0),
woosh.Token(woosh.INDENT, '                ', 788, 0, 788, 16),
woosh.Token(woosh.NAME, 'conn', 788, 16, 788, 20),
woosh.Token(woosh.OP, '=', 788, 21, 788, 22),
woosh.Token(woosh.NAME, 'self', 788, 23, 788, 27),
woosh.Token(woosh.OP, '.', 788, 27, 788, 28),
woosh.Token(woosh.NAME, 'context', 788, 28, 788, 35),
woosh.Token(woosh.OP, '.', 788, 35, 788, 36),
woosh.Token(woosh.NAME, 'wrap_socket', 788, 36, 788, 47),
woosh.Token(woosh.OP, '(', 788, 47, 788, 48),
woosh.Token(woosh.NAME, 'conn', 788, 48, 788, 52),
woosh.Token(woosh.OP, ',', 788, 52, 788, 53),
woosh.Token(woosh.NAME, 'server_hostname', 789, 48, 789, 63),
woosh.Token(woosh.OP, '=', 789, 63, 789, 64),
woosh.Token(woosh.NAME, 'self', 789, 64, 789, 68),
woosh.Token(woosh.OP, '.', 789, 68, 789, 69),
woosh.Token(woosh.NAME, 'host', 789, 69, 789, 73),
woosh.Token(woosh.OP, ')', 789, 73, 789, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 789, 74, 790, 0),
woosh.Token(woosh.DEDENT, '            ', 790, 0, 790, 12),
woosh.Token(woosh.NAME, 'return', 790, 12, 790, 18),
woosh.Token(woosh.NAME, 'conn', 790, 19, 790, 23),
woosh.Token(woosh.OP, ',', 790, 23, 790, 24),
woosh.Token(woosh.NAME, 'size', 790, 25, 790, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 29, 791, 0),
woosh.Token(woosh.DEDENT, '        ', 792, 0, 792, 8),
woosh.Token(woosh.NAME, 'def', 792, 8, 792, 11),
woosh.Token(woosh.NAME, 'abort', 792, 12, 792, 17),
woosh.Token(woosh.OP, '(', 792, 17, 792, 18),
woosh.Token(woosh.NAME, 'self', 792, 18, 792, 22),
woosh.Token(woosh.OP, ')', 792, 22, 792, 23),
woosh.Token(woosh.OP, ':', 792, 23, 792, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 24, 793, 0),
woosh.Token(woosh.COMMENT, "# overridden as we can't pass MSG_OOB flag to sendall()", 793, 12, 793, 67),
woosh.Token(woosh.INDENT, '            ', 794, 0, 794, 12),
woosh.Token(woosh.NAME, 'line', 794, 12, 794, 16),
woosh.Token(woosh.OP, '=', 794, 17, 794, 18),
woosh.Token(woosh.STRING, "b'ABOR'", 794, 19, 794, 26),
woosh.Token(woosh.OP, '+', 794, 27, 794, 28),
woosh.Token(woosh.NAME, 'B_CRLF', 794, 29, 794, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 794, 35, 795, 0),
woosh.Token(woosh.NAME, 'self', 795, 12, 795, 16),
woosh.Token(woosh.OP, '.', 795, 16, 795, 17),
woosh.Token(woosh.NAME, 'sock', 795, 17, 795, 21),
woosh.Token(woosh.OP, '.', 795, 21, 795, 22),
woosh.Token(woosh.NAME, 'sendall', 795, 22, 795, 29),
woosh.Token(woosh.OP, '(', 795, 29, 795, 30),
woosh.Token(woosh.NAME, 'line', 795, 30, 795, 34),
woosh.Token(woosh.OP, ')', 795, 34, 795, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 35, 796, 0),
woosh.Token(woosh.NAME, 'resp', 796, 12, 796, 16),
woosh.Token(woosh.OP, '=', 796, 17, 796, 18),
woosh.Token(woosh.NAME, 'self', 796, 19, 796, 23),
woosh.Token(woosh.OP, '.', 796, 23, 796, 24),
woosh.Token(woosh.NAME, 'getmultiline', 796, 24, 796, 36),
woosh.Token(woosh.OP, '(', 796, 36, 796, 37),
woosh.Token(woosh.OP, ')', 796, 37, 796, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 38, 797, 0),
woosh.Token(woosh.NAME, 'if', 797, 12, 797, 14),
woosh.Token(woosh.NAME, 'resp', 797, 15, 797, 19),
woosh.Token(woosh.OP, '[', 797, 19, 797, 20),
woosh.Token(woosh.OP, ':', 797, 20, 797, 21),
woosh.Token(woosh.NUMBER, '3', 797, 21, 797, 22),
woosh.Token(woosh.OP, ']', 797, 22, 797, 23),
woosh.Token(woosh.NAME, 'not', 797, 24, 797, 27),
woosh.Token(woosh.NAME, 'in', 797, 28, 797, 30),
woosh.Token(woosh.OP, '{', 797, 31, 797, 32),
woosh.Token(woosh.STRING, "'426'", 797, 32, 797, 37),
woosh.Token(woosh.OP, ',', 797, 37, 797, 38),
woosh.Token(woosh.STRING, "'225'", 797, 39, 797, 44),
woosh.Token(woosh.OP, ',', 797, 44, 797, 45),
woosh.Token(woosh.STRING, "'226'", 797, 46, 797, 51),
woosh.Token(woosh.OP, '}', 797, 51, 797, 52),
woosh.Token(woosh.OP, ':', 797, 52, 797, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 53, 798, 0),
woosh.Token(woosh.INDENT, '                ', 798, 0, 798, 16),
woosh.Token(woosh.NAME, 'raise', 798, 16, 798, 21),
woosh.Token(woosh.NAME, 'error_proto', 798, 22, 798, 33),
woosh.Token(woosh.OP, '(', 798, 33, 798, 34),
woosh.Token(woosh.NAME, 'resp', 798, 34, 798, 38),
woosh.Token(woosh.OP, ')', 798, 38, 798, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 39, 799, 0),
woosh.Token(woosh.DEDENT, '            ', 799, 0, 799, 12),
woosh.Token(woosh.NAME, 'return', 799, 12, 799, 18),
woosh.Token(woosh.NAME, 'resp', 799, 19, 799, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 799, 23, 800, 0),
woosh.Token(woosh.DEDENT, '    ', 801, 0, 801, 4),
woosh.Token(woosh.DEDENT, '', 801, 4, 801, 4),
woosh.Token(woosh.NAME, '__all__', 801, 4, 801, 11),
woosh.Token(woosh.OP, '.', 801, 11, 801, 12),
woosh.Token(woosh.NAME, 'append', 801, 12, 801, 18),
woosh.Token(woosh.OP, '(', 801, 18, 801, 19),
woosh.Token(woosh.STRING, "'FTP_TLS'", 801, 19, 801, 28),
woosh.Token(woosh.OP, ')', 801, 28, 801, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 801, 29, 802, 0),
woosh.Token(woosh.NAME, 'all_errors', 802, 4, 802, 14),
woosh.Token(woosh.OP, '=', 802, 15, 802, 16),
woosh.Token(woosh.OP, '(', 802, 17, 802, 18),
woosh.Token(woosh.NAME, 'Error', 802, 18, 802, 23),
woosh.Token(woosh.OP, ',', 802, 23, 802, 24),
woosh.Token(woosh.NAME, 'OSError', 802, 25, 802, 32),
woosh.Token(woosh.OP, ',', 802, 32, 802, 33),
woosh.Token(woosh.NAME, 'EOFError', 802, 34, 802, 42),
woosh.Token(woosh.OP, ',', 802, 42, 802, 43),
woosh.Token(woosh.NAME, 'ssl', 802, 44, 802, 47),
woosh.Token(woosh.OP, '.', 802, 47, 802, 48),
woosh.Token(woosh.NAME, 'SSLError', 802, 48, 802, 56),
woosh.Token(woosh.OP, ')', 802, 56, 802, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 57, 803, 0),
woosh.Token(woosh.DEDENT, '', 805, 0, 805, 0),
woosh.Token(woosh.NAME, '_150_re', 805, 0, 805, 7),
woosh.Token(woosh.OP, '=', 805, 8, 805, 9),
woosh.Token(woosh.NAME, 'None', 805, 10, 805, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 805, 14, 806, 0),
woosh.Token(woosh.NAME, 'def', 807, 0, 807, 3),
woosh.Token(woosh.NAME, 'parse150', 807, 4, 807, 12),
woosh.Token(woosh.OP, '(', 807, 12, 807, 13),
woosh.Token(woosh.NAME, 'resp', 807, 13, 807, 17),
woosh.Token(woosh.OP, ')', 807, 17, 807, 18),
woosh.Token(woosh.OP, ':', 807, 18, 807, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 19, 808, 0),
woosh.Token(woosh.INDENT, '    ', 808, 0, 808, 4),
woosh.Token(woosh.STRING, "'''Parse the '150' response for a RETR request.\r\n    Returns the expected transfer size or None; size is not guaranteed to\r\n    be present in the 150 message.\r\n    '''", 808, 4, 811, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 811, 7, 812, 0),
woosh.Token(woosh.NAME, 'if', 812, 4, 812, 6),
woosh.Token(woosh.NAME, 'resp', 812, 7, 812, 11),
woosh.Token(woosh.OP, '[', 812, 11, 812, 12),
woosh.Token(woosh.OP, ':', 812, 12, 812, 13),
woosh.Token(woosh.NUMBER, '3', 812, 13, 812, 14),
woosh.Token(woosh.OP, ']', 812, 14, 812, 15),
woosh.Token(woosh.OP, '!=', 812, 16, 812, 18),
woosh.Token(woosh.STRING, "'150'", 812, 19, 812, 24),
woosh.Token(woosh.OP, ':', 812, 24, 812, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 812, 25, 813, 0),
woosh.Token(woosh.INDENT, '        ', 813, 0, 813, 8),
woosh.Token(woosh.NAME, 'raise', 813, 8, 813, 13),
woosh.Token(woosh.NAME, 'error_reply', 813, 14, 813, 25),
woosh.Token(woosh.OP, '(', 813, 25, 813, 26),
woosh.Token(woosh.NAME, 'resp', 813, 26, 813, 30),
woosh.Token(woosh.OP, ')', 813, 30, 813, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 813, 31, 814, 0),
woosh.Token(woosh.DEDENT, '    ', 814, 0, 814, 4),
woosh.Token(woosh.NAME, 'global', 814, 4, 814, 10),
woosh.Token(woosh.NAME, '_150_re', 814, 11, 814, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 18, 815, 0),
woosh.Token(woosh.NAME, 'if', 815, 4, 815, 6),
woosh.Token(woosh.NAME, '_150_re', 815, 7, 815, 14),
woosh.Token(woosh.NAME, 'is', 815, 15, 815, 17),
woosh.Token(woosh.NAME, 'None', 815, 18, 815, 22),
woosh.Token(woosh.OP, ':', 815, 22, 815, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 815, 23, 816, 0),
woosh.Token(woosh.INDENT, '        ', 816, 0, 816, 8),
woosh.Token(woosh.NAME, 'import', 816, 8, 816, 14),
woosh.Token(woosh.NAME, 're', 816, 15, 816, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 17, 817, 0),
woosh.Token(woosh.NAME, '_150_re', 817, 8, 817, 15),
woosh.Token(woosh.OP, '=', 817, 16, 817, 17),
woosh.Token(woosh.NAME, 're', 817, 18, 817, 20),
woosh.Token(woosh.OP, '.', 817, 20, 817, 21),
woosh.Token(woosh.NAME, 'compile', 817, 21, 817, 28),
woosh.Token(woosh.OP, '(', 817, 28, 817, 29),
woosh.Token(woosh.STRING, 'r"150 .* \\((\\d+) bytes\\)"', 818, 12, 818, 37),
woosh.Token(woosh.OP, ',', 818, 37, 818, 38),
woosh.Token(woosh.NAME, 're', 818, 39, 818, 41),
woosh.Token(woosh.OP, '.', 818, 41, 818, 42),
woosh.Token(woosh.NAME, 'IGNORECASE', 818, 42, 818, 52),
woosh.Token(woosh.OP, '|', 818, 53, 818, 54),
woosh.Token(woosh.NAME, 're', 818, 55, 818, 57),
woosh.Token(woosh.OP, '.', 818, 57, 818, 58),
woosh.Token(woosh.NAME, 'ASCII', 818, 58, 818, 63),
woosh.Token(woosh.OP, ')', 818, 63, 818, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 818, 64, 819, 0),
woosh.Token(woosh.DEDENT, '    ', 819, 0, 819, 4),
woosh.Token(woosh.NAME, 'm', 819, 4, 819, 5),
woosh.Token(woosh.OP, '=', 819, 6, 819, 7),
woosh.Token(woosh.NAME, '_150_re', 819, 8, 819, 15),
woosh.Token(woosh.OP, '.', 819, 15, 819, 16),
woosh.Token(woosh.NAME, 'match', 819, 16, 819, 21),
woosh.Token(woosh.OP, '(', 819, 21, 819, 22),
woosh.Token(woosh.NAME, 'resp', 819, 22, 819, 26),
woosh.Token(woosh.OP, ')', 819, 26, 819, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 819, 27, 820, 0),
woosh.Token(woosh.NAME, 'if', 820, 4, 820, 6),
woosh.Token(woosh.NAME, 'not', 820, 7, 820, 10),
woosh.Token(woosh.NAME, 'm', 820, 11, 820, 12),
woosh.Token(woosh.OP, ':', 820, 12, 820, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 820, 13, 821, 0),
woosh.Token(woosh.INDENT, '        ', 821, 0, 821, 8),
woosh.Token(woosh.NAME, 'return', 821, 8, 821, 14),
woosh.Token(woosh.NAME, 'None', 821, 15, 821, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 19, 822, 0),
woosh.Token(woosh.DEDENT, '    ', 822, 0, 822, 4),
woosh.Token(woosh.NAME, 'return', 822, 4, 822, 10),
woosh.Token(woosh.NAME, 'int', 822, 11, 822, 14),
woosh.Token(woosh.OP, '(', 822, 14, 822, 15),
woosh.Token(woosh.NAME, 'm', 822, 15, 822, 16),
woosh.Token(woosh.OP, '.', 822, 16, 822, 17),
woosh.Token(woosh.NAME, 'group', 822, 17, 822, 22),
woosh.Token(woosh.OP, '(', 822, 22, 822, 23),
woosh.Token(woosh.NUMBER, '1', 822, 23, 822, 24),
woosh.Token(woosh.OP, ')', 822, 24, 822, 25),
woosh.Token(woosh.OP, ')', 822, 25, 822, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 26, 823, 0),
woosh.Token(woosh.DEDENT, '', 825, 0, 825, 0),
woosh.Token(woosh.NAME, '_227_re', 825, 0, 825, 7),
woosh.Token(woosh.OP, '=', 825, 8, 825, 9),
woosh.Token(woosh.NAME, 'None', 825, 10, 825, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 14, 826, 0),
woosh.Token(woosh.NAME, 'def', 827, 0, 827, 3),
woosh.Token(woosh.NAME, 'parse227', 827, 4, 827, 12),
woosh.Token(woosh.OP, '(', 827, 12, 827, 13),
woosh.Token(woosh.NAME, 'resp', 827, 13, 827, 17),
woosh.Token(woosh.OP, ')', 827, 17, 827, 18),
woosh.Token(woosh.OP, ':', 827, 18, 827, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 827, 19, 828, 0),
woosh.Token(woosh.INDENT, '    ', 828, 0, 828, 4),
woosh.Token(woosh.STRING, "'''Parse the '227' response for a PASV request.\r\n    Raises error_proto if it does not contain '(h1,h2,h3,h4,p1,p2)'\r\n    Return ('host.addr.as.numbers', port#) tuple.'''", 828, 4, 830, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 830, 52, 831, 0),
woosh.Token(woosh.NAME, 'if', 831, 4, 831, 6),
woosh.Token(woosh.NAME, 'resp', 831, 7, 831, 11),
woosh.Token(woosh.OP, '[', 831, 11, 831, 12),
woosh.Token(woosh.OP, ':', 831, 12, 831, 13),
woosh.Token(woosh.NUMBER, '3', 831, 13, 831, 14),
woosh.Token(woosh.OP, ']', 831, 14, 831, 15),
woosh.Token(woosh.OP, '!=', 831, 16, 831, 18),
woosh.Token(woosh.STRING, "'227'", 831, 19, 831, 24),
woosh.Token(woosh.OP, ':', 831, 24, 831, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 831, 25, 832, 0),
woosh.Token(woosh.INDENT, '        ', 832, 0, 832, 8),
woosh.Token(woosh.NAME, 'raise', 832, 8, 832, 13),
woosh.Token(woosh.NAME, 'error_reply', 832, 14, 832, 25),
woosh.Token(woosh.OP, '(', 832, 25, 832, 26),
woosh.Token(woosh.NAME, 'resp', 832, 26, 832, 30),
woosh.Token(woosh.OP, ')', 832, 30, 832, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 832, 31, 833, 0),
woosh.Token(woosh.DEDENT, '    ', 833, 0, 833, 4),
woosh.Token(woosh.NAME, 'global', 833, 4, 833, 10),
woosh.Token(woosh.NAME, '_227_re', 833, 11, 833, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 833, 18, 834, 0),
woosh.Token(woosh.NAME, 'if', 834, 4, 834, 6),
woosh.Token(woosh.NAME, '_227_re', 834, 7, 834, 14),
woosh.Token(woosh.NAME, 'is', 834, 15, 834, 17),
woosh.Token(woosh.NAME, 'None', 834, 18, 834, 22),
woosh.Token(woosh.OP, ':', 834, 22, 834, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 23, 835, 0),
woosh.Token(woosh.INDENT, '        ', 835, 0, 835, 8),
woosh.Token(woosh.NAME, 'import', 835, 8, 835, 14),
woosh.Token(woosh.NAME, 're', 835, 15, 835, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 835, 17, 836, 0),
woosh.Token(woosh.NAME, '_227_re', 836, 8, 836, 15),
woosh.Token(woosh.OP, '=', 836, 16, 836, 17),
woosh.Token(woosh.NAME, 're', 836, 18, 836, 20),
woosh.Token(woosh.OP, '.', 836, 20, 836, 21),
woosh.Token(woosh.NAME, 'compile', 836, 21, 836, 28),
woosh.Token(woosh.OP, '(', 836, 28, 836, 29),
woosh.Token(woosh.STRING, "r'(\\d+),(\\d+),(\\d+),(\\d+),(\\d+),(\\d+)'", 836, 29, 836, 67),
woosh.Token(woosh.OP, ',', 836, 67, 836, 68),
woosh.Token(woosh.NAME, 're', 836, 69, 836, 71),
woosh.Token(woosh.OP, '.', 836, 71, 836, 72),
woosh.Token(woosh.NAME, 'ASCII', 836, 72, 836, 77),
woosh.Token(woosh.OP, ')', 836, 77, 836, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 836, 78, 837, 0),
woosh.Token(woosh.DEDENT, '    ', 837, 0, 837, 4),
woosh.Token(woosh.NAME, 'm', 837, 4, 837, 5),
woosh.Token(woosh.OP, '=', 837, 6, 837, 7),
woosh.Token(woosh.NAME, '_227_re', 837, 8, 837, 15),
woosh.Token(woosh.OP, '.', 837, 15, 837, 16),
woosh.Token(woosh.NAME, 'search', 837, 16, 837, 22),
woosh.Token(woosh.OP, '(', 837, 22, 837, 23),
woosh.Token(woosh.NAME, 'resp', 837, 23, 837, 27),
woosh.Token(woosh.OP, ')', 837, 27, 837, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 28, 838, 0),
woosh.Token(woosh.NAME, 'if', 838, 4, 838, 6),
woosh.Token(woosh.NAME, 'not', 838, 7, 838, 10),
woosh.Token(woosh.NAME, 'm', 838, 11, 838, 12),
woosh.Token(woosh.OP, ':', 838, 12, 838, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 13, 839, 0),
woosh.Token(woosh.INDENT, '        ', 839, 0, 839, 8),
woosh.Token(woosh.NAME, 'raise', 839, 8, 839, 13),
woosh.Token(woosh.NAME, 'error_proto', 839, 14, 839, 25),
woosh.Token(woosh.OP, '(', 839, 25, 839, 26),
woosh.Token(woosh.NAME, 'resp', 839, 26, 839, 30),
woosh.Token(woosh.OP, ')', 839, 30, 839, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 31, 840, 0),
woosh.Token(woosh.DEDENT, '    ', 840, 0, 840, 4),
woosh.Token(woosh.NAME, 'numbers', 840, 4, 840, 11),
woosh.Token(woosh.OP, '=', 840, 12, 840, 13),
woosh.Token(woosh.NAME, 'm', 840, 14, 840, 15),
woosh.Token(woosh.OP, '.', 840, 15, 840, 16),
woosh.Token(woosh.NAME, 'groups', 840, 16, 840, 22),
woosh.Token(woosh.OP, '(', 840, 22, 840, 23),
woosh.Token(woosh.OP, ')', 840, 23, 840, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 24, 841, 0),
woosh.Token(woosh.NAME, 'host', 841, 4, 841, 8),
woosh.Token(woosh.OP, '=', 841, 9, 841, 10),
woosh.Token(woosh.STRING, "'.'", 841, 11, 841, 14),
woosh.Token(woosh.OP, '.', 841, 14, 841, 15),
woosh.Token(woosh.NAME, 'join', 841, 15, 841, 19),
woosh.Token(woosh.OP, '(', 841, 19, 841, 20),
woosh.Token(woosh.NAME, 'numbers', 841, 20, 841, 27),
woosh.Token(woosh.OP, '[', 841, 27, 841, 28),
woosh.Token(woosh.OP, ':', 841, 28, 841, 29),
woosh.Token(woosh.NUMBER, '4', 841, 29, 841, 30),
woosh.Token(woosh.OP, ']', 841, 30, 841, 31),
woosh.Token(woosh.OP, ')', 841, 31, 841, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 32, 842, 0),
woosh.Token(woosh.NAME, 'port', 842, 4, 842, 8),
woosh.Token(woosh.OP, '=', 842, 9, 842, 10),
woosh.Token(woosh.OP, '(', 842, 11, 842, 12),
woosh.Token(woosh.NAME, 'int', 842, 12, 842, 15),
woosh.Token(woosh.OP, '(', 842, 15, 842, 16),
woosh.Token(woosh.NAME, 'numbers', 842, 16, 842, 23),
woosh.Token(woosh.OP, '[', 842, 23, 842, 24),
woosh.Token(woosh.NUMBER, '4', 842, 24, 842, 25),
woosh.Token(woosh.OP, ']', 842, 25, 842, 26),
woosh.Token(woosh.OP, ')', 842, 26, 842, 27),
woosh.Token(woosh.OP, '<<', 842, 28, 842, 30),
woosh.Token(woosh.NUMBER, '8', 842, 31, 842, 32),
woosh.Token(woosh.OP, ')', 842, 32, 842, 33),
woosh.Token(woosh.OP, '+', 842, 34, 842, 35),
woosh.Token(woosh.NAME, 'int', 842, 36, 842, 39),
woosh.Token(woosh.OP, '(', 842, 39, 842, 40),
woosh.Token(woosh.NAME, 'numbers', 842, 40, 842, 47),
woosh.Token(woosh.OP, '[', 842, 47, 842, 48),
woosh.Token(woosh.NUMBER, '5', 842, 48, 842, 49),
woosh.Token(woosh.OP, ']', 842, 49, 842, 50),
woosh.Token(woosh.OP, ')', 842, 50, 842, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 51, 843, 0),
woosh.Token(woosh.NAME, 'return', 843, 4, 843, 10),
woosh.Token(woosh.NAME, 'host', 843, 11, 843, 15),
woosh.Token(woosh.OP, ',', 843, 15, 843, 16),
woosh.Token(woosh.NAME, 'port', 843, 17, 843, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 21, 844, 0),
woosh.Token(woosh.DEDENT, '', 846, 0, 846, 0),
woosh.Token(woosh.NAME, 'def', 846, 0, 846, 3),
woosh.Token(woosh.NAME, 'parse229', 846, 4, 846, 12),
woosh.Token(woosh.OP, '(', 846, 12, 846, 13),
woosh.Token(woosh.NAME, 'resp', 846, 13, 846, 17),
woosh.Token(woosh.OP, ',', 846, 17, 846, 18),
woosh.Token(woosh.NAME, 'peer', 846, 19, 846, 23),
woosh.Token(woosh.OP, ')', 846, 23, 846, 24),
woosh.Token(woosh.OP, ':', 846, 24, 846, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 846, 25, 847, 0),
woosh.Token(woosh.INDENT, '    ', 847, 0, 847, 4),
woosh.Token(woosh.STRING, "'''Parse the '229' response for an EPSV request.\r\n    Raises error_proto if it does not contain '(|||port|)'\r\n    Return ('host.addr.as.numbers', port#) tuple.'''", 847, 4, 849, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 52, 850, 0),
woosh.Token(woosh.NAME, 'if', 850, 4, 850, 6),
woosh.Token(woosh.NAME, 'resp', 850, 7, 850, 11),
woosh.Token(woosh.OP, '[', 850, 11, 850, 12),
woosh.Token(woosh.OP, ':', 850, 12, 850, 13),
woosh.Token(woosh.NUMBER, '3', 850, 13, 850, 14),
woosh.Token(woosh.OP, ']', 850, 14, 850, 15),
woosh.Token(woosh.OP, '!=', 850, 16, 850, 18),
woosh.Token(woosh.STRING, "'229'", 850, 19, 850, 24),
woosh.Token(woosh.OP, ':', 850, 24, 850, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 25, 851, 0),
woosh.Token(woosh.INDENT, '        ', 851, 0, 851, 8),
woosh.Token(woosh.NAME, 'raise', 851, 8, 851, 13),
woosh.Token(woosh.NAME, 'error_reply', 851, 14, 851, 25),
woosh.Token(woosh.OP, '(', 851, 25, 851, 26),
woosh.Token(woosh.NAME, 'resp', 851, 26, 851, 30),
woosh.Token(woosh.OP, ')', 851, 30, 851, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 31, 852, 0),
woosh.Token(woosh.DEDENT, '    ', 852, 0, 852, 4),
woosh.Token(woosh.NAME, 'left', 852, 4, 852, 8),
woosh.Token(woosh.OP, '=', 852, 9, 852, 10),
woosh.Token(woosh.NAME, 'resp', 852, 11, 852, 15),
woosh.Token(woosh.OP, '.', 852, 15, 852, 16),
woosh.Token(woosh.NAME, 'find', 852, 16, 852, 20),
woosh.Token(woosh.OP, '(', 852, 20, 852, 21),
woosh.Token(woosh.STRING, "'('", 852, 21, 852, 24),
woosh.Token(woosh.OP, ')', 852, 24, 852, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 852, 25, 853, 0),
woosh.Token(woosh.NAME, 'if', 853, 4, 853, 6),
woosh.Token(woosh.NAME, 'left', 853, 7, 853, 11),
woosh.Token(woosh.OP, '<', 853, 12, 853, 13),
woosh.Token(woosh.NUMBER, '0', 853, 14, 853, 15),
woosh.Token(woosh.OP, ':', 853, 15, 853, 16),
woosh.Token(woosh.NAME, 'raise', 853, 17, 853, 22),
woosh.Token(woosh.NAME, 'error_proto', 853, 23, 853, 34),
woosh.Token(woosh.OP, '(', 853, 34, 853, 35),
woosh.Token(woosh.NAME, 'resp', 853, 35, 853, 39),
woosh.Token(woosh.OP, ')', 853, 39, 853, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 853, 40, 854, 0),
woosh.Token(woosh.NAME, 'right', 854, 4, 854, 9),
woosh.Token(woosh.OP, '=', 854, 10, 854, 11),
woosh.Token(woosh.NAME, 'resp', 854, 12, 854, 16),
woosh.Token(woosh.OP, '.', 854, 16, 854, 17),
woosh.Token(woosh.NAME, 'find', 854, 17, 854, 21),
woosh.Token(woosh.OP, '(', 854, 21, 854, 22),
woosh.Token(woosh.STRING, "')'", 854, 22, 854, 25),
woosh.Token(woosh.OP, ',', 854, 25, 854, 26),
woosh.Token(woosh.NAME, 'left', 854, 27, 854, 31),
woosh.Token(woosh.OP, '+', 854, 32, 854, 33),
woosh.Token(woosh.NUMBER, '1', 854, 34, 854, 35),
woosh.Token(woosh.OP, ')', 854, 35, 854, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 36, 855, 0),
woosh.Token(woosh.NAME, 'if', 855, 4, 855, 6),
woosh.Token(woosh.NAME, 'right', 855, 7, 855, 12),
woosh.Token(woosh.OP, '<', 855, 13, 855, 14),
woosh.Token(woosh.NUMBER, '0', 855, 15, 855, 16),
woosh.Token(woosh.OP, ':', 855, 16, 855, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 855, 17, 856, 0),
woosh.Token(woosh.INDENT, '        ', 856, 0, 856, 8),
woosh.Token(woosh.NAME, 'raise', 856, 8, 856, 13),
woosh.Token(woosh.NAME, 'error_proto', 856, 14, 856, 25),
woosh.Token(woosh.OP, '(', 856, 25, 856, 26),
woosh.Token(woosh.NAME, 'resp', 856, 26, 856, 30),
woosh.Token(woosh.OP, ')', 856, 30, 856, 31),
woosh.Token(woosh.COMMENT, "# should contain '(|||port|)'", 856, 32, 856, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 61, 857, 0),
woosh.Token(woosh.DEDENT, '    ', 857, 0, 857, 4),
woosh.Token(woosh.NAME, 'if', 857, 4, 857, 6),
woosh.Token(woosh.NAME, 'resp', 857, 7, 857, 11),
woosh.Token(woosh.OP, '[', 857, 11, 857, 12),
woosh.Token(woosh.NAME, 'left', 857, 12, 857, 16),
woosh.Token(woosh.OP, '+', 857, 17, 857, 18),
woosh.Token(woosh.NUMBER, '1', 857, 19, 857, 20),
woosh.Token(woosh.OP, ']', 857, 20, 857, 21),
woosh.Token(woosh.OP, '!=', 857, 22, 857, 24),
woosh.Token(woosh.NAME, 'resp', 857, 25, 857, 29),
woosh.Token(woosh.OP, '[', 857, 29, 857, 30),
woosh.Token(woosh.NAME, 'right', 857, 30, 857, 35),
woosh.Token(woosh.OP, '-', 857, 36, 857, 37),
woosh.Token(woosh.NUMBER, '1', 857, 38, 857, 39),
woosh.Token(woosh.OP, ']', 857, 39, 857, 40),
woosh.Token(woosh.OP, ':', 857, 40, 857, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 41, 858, 0),
woosh.Token(woosh.INDENT, '        ', 858, 0, 858, 8),
woosh.Token(woosh.NAME, 'raise', 858, 8, 858, 13),
woosh.Token(woosh.NAME, 'error_proto', 858, 14, 858, 25),
woosh.Token(woosh.OP, '(', 858, 25, 858, 26),
woosh.Token(woosh.NAME, 'resp', 858, 26, 858, 30),
woosh.Token(woosh.OP, ')', 858, 30, 858, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 31, 859, 0),
woosh.Token(woosh.DEDENT, '    ', 859, 0, 859, 4),
woosh.Token(woosh.NAME, 'parts', 859, 4, 859, 9),
woosh.Token(woosh.OP, '=', 859, 10, 859, 11),
woosh.Token(woosh.NAME, 'resp', 859, 12, 859, 16),
woosh.Token(woosh.OP, '[', 859, 16, 859, 17),
woosh.Token(woosh.NAME, 'left', 859, 17, 859, 21),
woosh.Token(woosh.OP, '+', 859, 22, 859, 23),
woosh.Token(woosh.NUMBER, '1', 859, 24, 859, 25),
woosh.Token(woosh.OP, ':', 859, 25, 859, 26),
woosh.Token(woosh.NAME, 'right', 859, 26, 859, 31),
woosh.Token(woosh.OP, ']', 859, 31, 859, 32),
woosh.Token(woosh.OP, '.', 859, 32, 859, 33),
woosh.Token(woosh.NAME, 'split', 859, 33, 859, 38),
woosh.Token(woosh.OP, '(', 859, 38, 859, 39),
woosh.Token(woosh.NAME, 'resp', 859, 39, 859, 43),
woosh.Token(woosh.OP, '[', 859, 43, 859, 44),
woosh.Token(woosh.NAME, 'left', 859, 44, 859, 48),
woosh.Token(woosh.OP, '+', 859, 48, 859, 49),
woosh.Token(woosh.NUMBER, '1', 859, 49, 859, 50),
woosh.Token(woosh.OP, ']', 859, 50, 859, 51),
woosh.Token(woosh.OP, ')', 859, 51, 859, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 52, 860, 0),
woosh.Token(woosh.NAME, 'if', 860, 4, 860, 6),
woosh.Token(woosh.NAME, 'len', 860, 7, 860, 10),
woosh.Token(woosh.OP, '(', 860, 10, 860, 11),
woosh.Token(woosh.NAME, 'parts', 860, 11, 860, 16),
woosh.Token(woosh.OP, ')', 860, 16, 860, 17),
woosh.Token(woosh.OP, '!=', 860, 18, 860, 20),
woosh.Token(woosh.NUMBER, '5', 860, 21, 860, 22),
woosh.Token(woosh.OP, ':', 860, 22, 860, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 860, 23, 861, 0),
woosh.Token(woosh.INDENT, '        ', 861, 0, 861, 8),
woosh.Token(woosh.NAME, 'raise', 861, 8, 861, 13),
woosh.Token(woosh.NAME, 'error_proto', 861, 14, 861, 25),
woosh.Token(woosh.OP, '(', 861, 25, 861, 26),
woosh.Token(woosh.NAME, 'resp', 861, 26, 861, 30),
woosh.Token(woosh.OP, ')', 861, 30, 861, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 31, 862, 0),
woosh.Token(woosh.DEDENT, '    ', 862, 0, 862, 4),
woosh.Token(woosh.NAME, 'host', 862, 4, 862, 8),
woosh.Token(woosh.OP, '=', 862, 9, 862, 10),
woosh.Token(woosh.NAME, 'peer', 862, 11, 862, 15),
woosh.Token(woosh.OP, '[', 862, 15, 862, 16),
woosh.Token(woosh.NUMBER, '0', 862, 16, 862, 17),
woosh.Token(woosh.OP, ']', 862, 17, 862, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 862, 18, 863, 0),
woosh.Token(woosh.NAME, 'port', 863, 4, 863, 8),
woosh.Token(woosh.OP, '=', 863, 9, 863, 10),
woosh.Token(woosh.NAME, 'int', 863, 11, 863, 14),
woosh.Token(woosh.OP, '(', 863, 14, 863, 15),
woosh.Token(woosh.NAME, 'parts', 863, 15, 863, 20),
woosh.Token(woosh.OP, '[', 863, 20, 863, 21),
woosh.Token(woosh.NUMBER, '3', 863, 21, 863, 22),
woosh.Token(woosh.OP, ']', 863, 22, 863, 23),
woosh.Token(woosh.OP, ')', 863, 23, 863, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 24, 864, 0),
woosh.Token(woosh.NAME, 'return', 864, 4, 864, 10),
woosh.Token(woosh.NAME, 'host', 864, 11, 864, 15),
woosh.Token(woosh.OP, ',', 864, 15, 864, 16),
woosh.Token(woosh.NAME, 'port', 864, 17, 864, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 21, 865, 0),
woosh.Token(woosh.DEDENT, '', 867, 0, 867, 0),
woosh.Token(woosh.NAME, 'def', 867, 0, 867, 3),
woosh.Token(woosh.NAME, 'parse257', 867, 4, 867, 12),
woosh.Token(woosh.OP, '(', 867, 12, 867, 13),
woosh.Token(woosh.NAME, 'resp', 867, 13, 867, 17),
woosh.Token(woosh.OP, ')', 867, 17, 867, 18),
woosh.Token(woosh.OP, ':', 867, 18, 867, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 867, 19, 868, 0),
woosh.Token(woosh.INDENT, '    ', 868, 0, 868, 4),
woosh.Token(woosh.STRING, "'''Parse the '257' response for a MKD or PWD request.\r\n    This is a response to a MKD or PWD request: a directory name.\r\n    Returns the directoryname in the 257 reply.'''", 868, 4, 870, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 870, 50, 871, 0),
woosh.Token(woosh.NAME, 'if', 871, 4, 871, 6),
woosh.Token(woosh.NAME, 'resp', 871, 7, 871, 11),
woosh.Token(woosh.OP, '[', 871, 11, 871, 12),
woosh.Token(woosh.OP, ':', 871, 12, 871, 13),
woosh.Token(woosh.NUMBER, '3', 871, 13, 871, 14),
woosh.Token(woosh.OP, ']', 871, 14, 871, 15),
woosh.Token(woosh.OP, '!=', 871, 16, 871, 18),
woosh.Token(woosh.STRING, "'257'", 871, 19, 871, 24),
woosh.Token(woosh.OP, ':', 871, 24, 871, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 871, 25, 872, 0),
woosh.Token(woosh.INDENT, '        ', 872, 0, 872, 8),
woosh.Token(woosh.NAME, 'raise', 872, 8, 872, 13),
woosh.Token(woosh.NAME, 'error_reply', 872, 14, 872, 25),
woosh.Token(woosh.OP, '(', 872, 25, 872, 26),
woosh.Token(woosh.NAME, 'resp', 872, 26, 872, 30),
woosh.Token(woosh.OP, ')', 872, 30, 872, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 31, 873, 0),
woosh.Token(woosh.DEDENT, '    ', 873, 0, 873, 4),
woosh.Token(woosh.NAME, 'if', 873, 4, 873, 6),
woosh.Token(woosh.NAME, 'resp', 873, 7, 873, 11),
woosh.Token(woosh.OP, '[', 873, 11, 873, 12),
woosh.Token(woosh.NUMBER, '3', 873, 12, 873, 13),
woosh.Token(woosh.OP, ':', 873, 13, 873, 14),
woosh.Token(woosh.NUMBER, '5', 873, 14, 873, 15),
woosh.Token(woosh.OP, ']', 873, 15, 873, 16),
woosh.Token(woosh.OP, '!=', 873, 17, 873, 19),
woosh.Token(woosh.STRING, '\' "\'', 873, 20, 873, 24),
woosh.Token(woosh.OP, ':', 873, 24, 873, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 873, 25, 874, 0),
woosh.Token(woosh.INDENT, '        ', 874, 0, 874, 8),
woosh.Token(woosh.NAME, 'return', 874, 8, 874, 14),
woosh.Token(woosh.STRING, "''", 874, 15, 874, 17),
woosh.Token(woosh.COMMENT, '# Not compliant to RFC 959, but UNIX ftpd does this', 874, 18, 874, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 874, 69, 875, 0),
woosh.Token(woosh.DEDENT, '    ', 875, 0, 875, 4),
woosh.Token(woosh.NAME, 'dirname', 875, 4, 875, 11),
woosh.Token(woosh.OP, '=', 875, 12, 875, 13),
woosh.Token(woosh.STRING, "''", 875, 14, 875, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 875, 16, 876, 0),
woosh.Token(woosh.NAME, 'i', 876, 4, 876, 5),
woosh.Token(woosh.OP, '=', 876, 6, 876, 7),
woosh.Token(woosh.NUMBER, '5', 876, 8, 876, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 876, 9, 877, 0),
woosh.Token(woosh.NAME, 'n', 877, 4, 877, 5),
woosh.Token(woosh.OP, '=', 877, 6, 877, 7),
woosh.Token(woosh.NAME, 'len', 877, 8, 877, 11),
woosh.Token(woosh.OP, '(', 877, 11, 877, 12),
woosh.Token(woosh.NAME, 'resp', 877, 12, 877, 16),
woosh.Token(woosh.OP, ')', 877, 16, 877, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 877, 17, 878, 0),
woosh.Token(woosh.NAME, 'while', 878, 4, 878, 9),
woosh.Token(woosh.NAME, 'i', 878, 10, 878, 11),
woosh.Token(woosh.OP, '<', 878, 12, 878, 13),
woosh.Token(woosh.NAME, 'n', 878, 14, 878, 15),
woosh.Token(woosh.OP, ':', 878, 15, 878, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 878, 16, 879, 0),
woosh.Token(woosh.INDENT, '        ', 879, 0, 879, 8),
woosh.Token(woosh.NAME, 'c', 879, 8, 879, 9),
woosh.Token(woosh.OP, '=', 879, 10, 879, 11),
woosh.Token(woosh.NAME, 'resp', 879, 12, 879, 16),
woosh.Token(woosh.OP, '[', 879, 16, 879, 17),
woosh.Token(woosh.NAME, 'i', 879, 17, 879, 18),
woosh.Token(woosh.OP, ']', 879, 18, 879, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 879, 19, 880, 0),
woosh.Token(woosh.NAME, 'i', 880, 8, 880, 9),
woosh.Token(woosh.OP, '=', 880, 10, 880, 11),
woosh.Token(woosh.NAME, 'i', 880, 12, 880, 13),
woosh.Token(woosh.OP, '+', 880, 13, 880, 14),
woosh.Token(woosh.NUMBER, '1', 880, 14, 880, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 880, 15, 881, 0),
woosh.Token(woosh.NAME, 'if', 881, 8, 881, 10),
woosh.Token(woosh.NAME, 'c', 881, 11, 881, 12),
woosh.Token(woosh.OP, '==', 881, 13, 881, 15),
woosh.Token(woosh.STRING, '\'"\'', 881, 16, 881, 19),
woosh.Token(woosh.OP, ':', 881, 19, 881, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 20, 882, 0),
woosh.Token(woosh.INDENT, '            ', 882, 0, 882, 12),
woosh.Token(woosh.NAME, 'if', 882, 12, 882, 14),
woosh.Token(woosh.NAME, 'i', 882, 15, 882, 16),
woosh.Token(woosh.OP, '>=', 882, 17, 882, 19),
woosh.Token(woosh.NAME, 'n', 882, 20, 882, 21),
woosh.Token(woosh.NAME, 'or', 882, 22, 882, 24),
woosh.Token(woosh.NAME, 'resp', 882, 25, 882, 29),
woosh.Token(woosh.OP, '[', 882, 29, 882, 30),
woosh.Token(woosh.NAME, 'i', 882, 30, 882, 31),
woosh.Token(woosh.OP, ']', 882, 31, 882, 32),
woosh.Token(woosh.OP, '!=', 882, 33, 882, 35),
woosh.Token(woosh.STRING, '\'"\'', 882, 36, 882, 39),
woosh.Token(woosh.OP, ':', 882, 39, 882, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 882, 40, 883, 0),
woosh.Token(woosh.INDENT, '                ', 883, 0, 883, 16),
woosh.Token(woosh.NAME, 'break', 883, 16, 883, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 883, 21, 884, 0),
woosh.Token(woosh.DEDENT, '            ', 884, 0, 884, 12),
woosh.Token(woosh.NAME, 'i', 884, 12, 884, 13),
woosh.Token(woosh.OP, '=', 884, 14, 884, 15),
woosh.Token(woosh.NAME, 'i', 884, 16, 884, 17),
woosh.Token(woosh.OP, '+', 884, 17, 884, 18),
woosh.Token(woosh.NUMBER, '1', 884, 18, 884, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 884, 19, 885, 0),
woosh.Token(woosh.DEDENT, '        ', 885, 0, 885, 8),
woosh.Token(woosh.NAME, 'dirname', 885, 8, 885, 15),
woosh.Token(woosh.OP, '=', 885, 16, 885, 17),
woosh.Token(woosh.NAME, 'dirname', 885, 18, 885, 25),
woosh.Token(woosh.OP, '+', 885, 26, 885, 27),
woosh.Token(woosh.NAME, 'c', 885, 28, 885, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 885, 29, 886, 0),
woosh.Token(woosh.DEDENT, '    ', 886, 0, 886, 4),
woosh.Token(woosh.NAME, 'return', 886, 4, 886, 10),
woosh.Token(woosh.NAME, 'dirname', 886, 11, 886, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 18, 887, 0),
woosh.Token(woosh.DEDENT, '', 889, 0, 889, 0),
woosh.Token(woosh.NAME, 'def', 889, 0, 889, 3),
woosh.Token(woosh.NAME, 'print_line', 889, 4, 889, 14),
woosh.Token(woosh.OP, '(', 889, 14, 889, 15),
woosh.Token(woosh.NAME, 'line', 889, 15, 889, 19),
woosh.Token(woosh.OP, ')', 889, 19, 889, 20),
woosh.Token(woosh.OP, ':', 889, 20, 889, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 21, 890, 0),
woosh.Token(woosh.INDENT, '    ', 890, 0, 890, 4),
woosh.Token(woosh.STRING, "'''Default retrlines callback to print a line.'''", 890, 4, 890, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 890, 53, 891, 0),
woosh.Token(woosh.NAME, 'print', 891, 4, 891, 9),
woosh.Token(woosh.OP, '(', 891, 9, 891, 10),
woosh.Token(woosh.NAME, 'line', 891, 10, 891, 14),
woosh.Token(woosh.OP, ')', 891, 14, 891, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 15, 892, 0),
woosh.Token(woosh.DEDENT, '', 894, 0, 894, 0),
woosh.Token(woosh.NAME, 'def', 894, 0, 894, 3),
woosh.Token(woosh.NAME, 'ftpcp', 894, 4, 894, 9),
woosh.Token(woosh.OP, '(', 894, 9, 894, 10),
woosh.Token(woosh.NAME, 'source', 894, 10, 894, 16),
woosh.Token(woosh.OP, ',', 894, 16, 894, 17),
woosh.Token(woosh.NAME, 'sourcename', 894, 18, 894, 28),
woosh.Token(woosh.OP, ',', 894, 28, 894, 29),
woosh.Token(woosh.NAME, 'target', 894, 30, 894, 36),
woosh.Token(woosh.OP, ',', 894, 36, 894, 37),
woosh.Token(woosh.NAME, 'targetname', 894, 38, 894, 48),
woosh.Token(woosh.OP, '=', 894, 49, 894, 50),
woosh.Token(woosh.STRING, "''", 894, 51, 894, 53),
woosh.Token(woosh.OP, ',', 894, 53, 894, 54),
woosh.Token(woosh.NAME, 'type', 894, 55, 894, 59),
woosh.Token(woosh.OP, '=', 894, 60, 894, 61),
woosh.Token(woosh.STRING, "'I'", 894, 62, 894, 65),
woosh.Token(woosh.OP, ')', 894, 65, 894, 66),
woosh.Token(woosh.OP, ':', 894, 66, 894, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 67, 895, 0),
woosh.Token(woosh.INDENT, '    ', 895, 0, 895, 4),
woosh.Token(woosh.STRING, "'''Copy file from one FTP-instance to another.'''", 895, 4, 895, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 895, 53, 896, 0),
woosh.Token(woosh.NAME, 'if', 896, 4, 896, 6),
woosh.Token(woosh.NAME, 'not', 896, 7, 896, 10),
woosh.Token(woosh.NAME, 'targetname', 896, 11, 896, 21),
woosh.Token(woosh.OP, ':', 896, 21, 896, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 896, 22, 897, 0),
woosh.Token(woosh.INDENT, '        ', 897, 0, 897, 8),
woosh.Token(woosh.NAME, 'targetname', 897, 8, 897, 18),
woosh.Token(woosh.OP, '=', 897, 19, 897, 20),
woosh.Token(woosh.NAME, 'sourcename', 897, 21, 897, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 897, 31, 898, 0),
woosh.Token(woosh.DEDENT, '    ', 898, 0, 898, 4),
woosh.Token(woosh.NAME, 'type', 898, 4, 898, 8),
woosh.Token(woosh.OP, '=', 898, 9, 898, 10),
woosh.Token(woosh.STRING, "'TYPE '", 898, 11, 898, 18),
woosh.Token(woosh.OP, '+', 898, 19, 898, 20),
woosh.Token(woosh.NAME, 'type', 898, 21, 898, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 898, 25, 899, 0),
woosh.Token(woosh.NAME, 'source', 899, 4, 899, 10),
woosh.Token(woosh.OP, '.', 899, 10, 899, 11),
woosh.Token(woosh.NAME, 'voidcmd', 899, 11, 899, 18),
woosh.Token(woosh.OP, '(', 899, 18, 899, 19),
woosh.Token(woosh.NAME, 'type', 899, 19, 899, 23),
woosh.Token(woosh.OP, ')', 899, 23, 899, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 24, 900, 0),
woosh.Token(woosh.NAME, 'target', 900, 4, 900, 10),
woosh.Token(woosh.OP, '.', 900, 10, 900, 11),
woosh.Token(woosh.NAME, 'voidcmd', 900, 11, 900, 18),
woosh.Token(woosh.OP, '(', 900, 18, 900, 19),
woosh.Token(woosh.NAME, 'type', 900, 19, 900, 23),
woosh.Token(woosh.OP, ')', 900, 23, 900, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 900, 24, 901, 0),
woosh.Token(woosh.NAME, 'sourcehost', 901, 4, 901, 14),
woosh.Token(woosh.OP, ',', 901, 14, 901, 15),
woosh.Token(woosh.NAME, 'sourceport', 901, 16, 901, 26),
woosh.Token(woosh.OP, '=', 901, 27, 901, 28),
woosh.Token(woosh.NAME, 'parse227', 901, 29, 901, 37),
woosh.Token(woosh.OP, '(', 901, 37, 901, 38),
woosh.Token(woosh.NAME, 'source', 901, 38, 901, 44),
woosh.Token(woosh.OP, '.', 901, 44, 901, 45),
woosh.Token(woosh.NAME, 'sendcmd', 901, 45, 901, 52),
woosh.Token(woosh.OP, '(', 901, 52, 901, 53),
woosh.Token(woosh.STRING, "'PASV'", 901, 53, 901, 59),
woosh.Token(woosh.OP, ')', 901, 59, 901, 60),
woosh.Token(woosh.OP, ')', 901, 60, 901, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 61, 902, 0),
woosh.Token(woosh.NAME, 'target', 902, 4, 902, 10),
woosh.Token(woosh.OP, '.', 902, 10, 902, 11),
woosh.Token(woosh.NAME, 'sendport', 902, 11, 902, 19),
woosh.Token(woosh.OP, '(', 902, 19, 902, 20),
woosh.Token(woosh.NAME, 'sourcehost', 902, 20, 902, 30),
woosh.Token(woosh.OP, ',', 902, 30, 902, 31),
woosh.Token(woosh.NAME, 'sourceport', 902, 32, 902, 42),
woosh.Token(woosh.OP, ')', 902, 42, 902, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 902, 43, 903, 0),
woosh.Token(woosh.COMMENT, '# RFC 959: the user must "listen" [...] BEFORE sending the', 903, 4, 903, 62),
woosh.Token(woosh.COMMENT, '# transfer request.', 904, 4, 904, 23),
woosh.Token(woosh.COMMENT, '# So: STOR before RETR, because here the target is a "user".', 905, 4, 905, 64),
woosh.Token(woosh.NAME, 'treply', 906, 4, 906, 10),
woosh.Token(woosh.OP, '=', 906, 11, 906, 12),
woosh.Token(woosh.NAME, 'target', 906, 13, 906, 19),
woosh.Token(woosh.OP, '.', 906, 19, 906, 20),
woosh.Token(woosh.NAME, 'sendcmd', 906, 20, 906, 27),
woosh.Token(woosh.OP, '(', 906, 27, 906, 28),
woosh.Token(woosh.STRING, "'STOR '", 906, 28, 906, 35),
woosh.Token(woosh.OP, '+', 906, 36, 906, 37),
woosh.Token(woosh.NAME, 'targetname', 906, 38, 906, 48),
woosh.Token(woosh.OP, ')', 906, 48, 906, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 906, 49, 907, 0),
woosh.Token(woosh.NAME, 'if', 907, 4, 907, 6),
woosh.Token(woosh.NAME, 'treply', 907, 7, 907, 13),
woosh.Token(woosh.OP, '[', 907, 13, 907, 14),
woosh.Token(woosh.OP, ':', 907, 14, 907, 15),
woosh.Token(woosh.NUMBER, '3', 907, 15, 907, 16),
woosh.Token(woosh.OP, ']', 907, 16, 907, 17),
woosh.Token(woosh.NAME, 'not', 907, 18, 907, 21),
woosh.Token(woosh.NAME, 'in', 907, 22, 907, 24),
woosh.Token(woosh.OP, '{', 907, 25, 907, 26),
woosh.Token(woosh.STRING, "'125'", 907, 26, 907, 31),
woosh.Token(woosh.OP, ',', 907, 31, 907, 32),
woosh.Token(woosh.STRING, "'150'", 907, 33, 907, 38),
woosh.Token(woosh.OP, '}', 907, 38, 907, 39),
woosh.Token(woosh.OP, ':', 907, 39, 907, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 907, 40, 908, 0),
woosh.Token(woosh.INDENT, '        ', 908, 0, 908, 8),
woosh.Token(woosh.NAME, 'raise', 908, 8, 908, 13),
woosh.Token(woosh.NAME, 'error_proto', 908, 14, 908, 25),
woosh.Token(woosh.COMMENT, '# RFC 959', 908, 27, 908, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 908, 36, 909, 0),
woosh.Token(woosh.DEDENT, '    ', 909, 0, 909, 4),
woosh.Token(woosh.NAME, 'sreply', 909, 4, 909, 10),
woosh.Token(woosh.OP, '=', 909, 11, 909, 12),
woosh.Token(woosh.NAME, 'source', 909, 13, 909, 19),
woosh.Token(woosh.OP, '.', 909, 19, 909, 20),
woosh.Token(woosh.NAME, 'sendcmd', 909, 20, 909, 27),
woosh.Token(woosh.OP, '(', 909, 27, 909, 28),
woosh.Token(woosh.STRING, "'RETR '", 909, 28, 909, 35),
woosh.Token(woosh.OP, '+', 909, 36, 909, 37),
woosh.Token(woosh.NAME, 'sourcename', 909, 38, 909, 48),
woosh.Token(woosh.OP, ')', 909, 48, 909, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 909, 49, 910, 0),
woosh.Token(woosh.NAME, 'if', 910, 4, 910, 6),
woosh.Token(woosh.NAME, 'sreply', 910, 7, 910, 13),
woosh.Token(woosh.OP, '[', 910, 13, 910, 14),
woosh.Token(woosh.OP, ':', 910, 14, 910, 15),
woosh.Token(woosh.NUMBER, '3', 910, 15, 910, 16),
woosh.Token(woosh.OP, ']', 910, 16, 910, 17),
woosh.Token(woosh.NAME, 'not', 910, 18, 910, 21),
woosh.Token(woosh.NAME, 'in', 910, 22, 910, 24),
woosh.Token(woosh.OP, '{', 910, 25, 910, 26),
woosh.Token(woosh.STRING, "'125'", 910, 26, 910, 31),
woosh.Token(woosh.OP, ',', 910, 31, 910, 32),
woosh.Token(woosh.STRING, "'150'", 910, 33, 910, 38),
woosh.Token(woosh.OP, '}', 910, 38, 910, 39),
woosh.Token(woosh.OP, ':', 910, 39, 910, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 40, 911, 0),
woosh.Token(woosh.INDENT, '        ', 911, 0, 911, 8),
woosh.Token(woosh.NAME, 'raise', 911, 8, 911, 13),
woosh.Token(woosh.NAME, 'error_proto', 911, 14, 911, 25),
woosh.Token(woosh.COMMENT, '# RFC 959', 911, 27, 911, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 36, 912, 0),
woosh.Token(woosh.DEDENT, '    ', 912, 0, 912, 4),
woosh.Token(woosh.NAME, 'source', 912, 4, 912, 10),
woosh.Token(woosh.OP, '.', 912, 10, 912, 11),
woosh.Token(woosh.NAME, 'voidresp', 912, 11, 912, 19),
woosh.Token(woosh.OP, '(', 912, 19, 912, 20),
woosh.Token(woosh.OP, ')', 912, 20, 912, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 21, 913, 0),
woosh.Token(woosh.NAME, 'target', 913, 4, 913, 10),
woosh.Token(woosh.OP, '.', 913, 10, 913, 11),
woosh.Token(woosh.NAME, 'voidresp', 913, 11, 913, 19),
woosh.Token(woosh.OP, '(', 913, 19, 913, 20),
woosh.Token(woosh.OP, ')', 913, 20, 913, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 913, 21, 914, 0),
woosh.Token(woosh.DEDENT, '', 916, 0, 916, 0),
woosh.Token(woosh.NAME, 'def', 916, 0, 916, 3),
woosh.Token(woosh.NAME, 'test', 916, 4, 916, 8),
woosh.Token(woosh.OP, '(', 916, 8, 916, 9),
woosh.Token(woosh.OP, ')', 916, 9, 916, 10),
woosh.Token(woosh.OP, ':', 916, 10, 916, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 916, 11, 917, 0),
woosh.Token(woosh.INDENT, '    ', 917, 0, 917, 4),
woosh.Token(woosh.STRING, "'''Test program.\r\n    Usage: ftp [-d] [-r[file]] host [-l[dir]] [-d[dir]] [-p] [file] ...\r\n\r\n    -d dir\r\n    -l list\r\n    -p password\r\n    '''", 917, 4, 923, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 923, 7, 924, 0),
woosh.Token(woosh.NAME, 'if', 925, 4, 925, 6),
woosh.Token(woosh.NAME, 'len', 925, 7, 925, 10),
woosh.Token(woosh.OP, '(', 925, 10, 925, 11),
woosh.Token(woosh.NAME, 'sys', 925, 11, 925, 14),
woosh.Token(woosh.OP, '.', 925, 14, 925, 15),
woosh.Token(woosh.NAME, 'argv', 925, 15, 925, 19),
woosh.Token(woosh.OP, ')', 925, 19, 925, 20),
woosh.Token(woosh.OP, '<', 925, 21, 925, 22),
woosh.Token(woosh.NUMBER, '2', 925, 23, 925, 24),
woosh.Token(woosh.OP, ':', 925, 24, 925, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 25, 926, 0),
woosh.Token(woosh.INDENT, '        ', 926, 0, 926, 8),
woosh.Token(woosh.NAME, 'print', 926, 8, 926, 13),
woosh.Token(woosh.OP, '(', 926, 13, 926, 14),
woosh.Token(woosh.NAME, 'test', 926, 14, 926, 18),
woosh.Token(woosh.OP, '.', 926, 18, 926, 19),
woosh.Token(woosh.NAME, '__doc__', 926, 19, 926, 26),
woosh.Token(woosh.OP, ')', 926, 26, 926, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 926, 27, 927, 0),
woosh.Token(woosh.NAME, 'sys', 927, 8, 927, 11),
woosh.Token(woosh.OP, '.', 927, 11, 927, 12),
woosh.Token(woosh.NAME, 'exit', 927, 12, 927, 16),
woosh.Token(woosh.OP, '(', 927, 16, 927, 17),
woosh.Token(woosh.NUMBER, '0', 927, 17, 927, 18),
woosh.Token(woosh.OP, ')', 927, 18, 927, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 19, 928, 0),
woosh.Token(woosh.DEDENT, '    ', 929, 0, 929, 4),
woosh.Token(woosh.NAME, 'import', 929, 4, 929, 10),
woosh.Token(woosh.NAME, 'netrc', 929, 11, 929, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 929, 16, 930, 0),
woosh.Token(woosh.NAME, 'debugging', 931, 4, 931, 13),
woosh.Token(woosh.OP, '=', 931, 14, 931, 15),
woosh.Token(woosh.NUMBER, '0', 931, 16, 931, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 931, 17, 932, 0),
woosh.Token(woosh.NAME, 'rcfile', 932, 4, 932, 10),
woosh.Token(woosh.OP, '=', 932, 11, 932, 12),
woosh.Token(woosh.NAME, 'None', 932, 13, 932, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 17, 933, 0),
woosh.Token(woosh.NAME, 'while', 933, 4, 933, 9),
woosh.Token(woosh.NAME, 'sys', 933, 10, 933, 13),
woosh.Token(woosh.OP, '.', 933, 13, 933, 14),
woosh.Token(woosh.NAME, 'argv', 933, 14, 933, 18),
woosh.Token(woosh.OP, '[', 933, 18, 933, 19),
woosh.Token(woosh.NUMBER, '1', 933, 19, 933, 20),
woosh.Token(woosh.OP, ']', 933, 20, 933, 21),
woosh.Token(woosh.OP, '==', 933, 22, 933, 24),
woosh.Token(woosh.STRING, "'-d'", 933, 25, 933, 29),
woosh.Token(woosh.OP, ':', 933, 29, 933, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 933, 30, 934, 0),
woosh.Token(woosh.INDENT, '        ', 934, 0, 934, 8),
woosh.Token(woosh.NAME, 'debugging', 934, 8, 934, 17),
woosh.Token(woosh.OP, '=', 934, 18, 934, 19),
woosh.Token(woosh.NAME, 'debugging', 934, 20, 934, 29),
woosh.Token(woosh.OP, '+', 934, 29, 934, 30),
woosh.Token(woosh.NUMBER, '1', 934, 30, 934, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 934, 31, 935, 0),
woosh.Token(woosh.NAME, 'del', 935, 8, 935, 11),
woosh.Token(woosh.NAME, 'sys', 935, 12, 935, 15),
woosh.Token(woosh.OP, '.', 935, 15, 935, 16),
woosh.Token(woosh.NAME, 'argv', 935, 16, 935, 20),
woosh.Token(woosh.OP, '[', 935, 20, 935, 21),
woosh.Token(woosh.NUMBER, '1', 935, 21, 935, 22),
woosh.Token(woosh.OP, ']', 935, 22, 935, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 935, 23, 936, 0),
woosh.Token(woosh.DEDENT, '    ', 936, 0, 936, 4),
woosh.Token(woosh.NAME, 'if', 936, 4, 936, 6),
woosh.Token(woosh.NAME, 'sys', 936, 7, 936, 10),
woosh.Token(woosh.OP, '.', 936, 10, 936, 11),
woosh.Token(woosh.NAME, 'argv', 936, 11, 936, 15),
woosh.Token(woosh.OP, '[', 936, 15, 936, 16),
woosh.Token(woosh.NUMBER, '1', 936, 16, 936, 17),
woosh.Token(woosh.OP, ']', 936, 17, 936, 18),
woosh.Token(woosh.OP, '[', 936, 18, 936, 19),
woosh.Token(woosh.OP, ':', 936, 19, 936, 20),
woosh.Token(woosh.NUMBER, '2', 936, 20, 936, 21),
woosh.Token(woosh.OP, ']', 936, 21, 936, 22),
woosh.Token(woosh.OP, '==', 936, 23, 936, 25),
woosh.Token(woosh.STRING, "'-r'", 936, 26, 936, 30),
woosh.Token(woosh.OP, ':', 936, 30, 936, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 936, 31, 937, 0),
woosh.Token(woosh.COMMENT, '# get name of alternate ~/.netrc file:', 937, 8, 937, 46),
woosh.Token(woosh.INDENT, '        ', 938, 0, 938, 8),
woosh.Token(woosh.NAME, 'rcfile', 938, 8, 938, 14),
woosh.Token(woosh.OP, '=', 938, 15, 938, 16),
woosh.Token(woosh.NAME, 'sys', 938, 17, 938, 20),
woosh.Token(woosh.OP, '.', 938, 20, 938, 21),
woosh.Token(woosh.NAME, 'argv', 938, 21, 938, 25),
woosh.Token(woosh.OP, '[', 938, 25, 938, 26),
woosh.Token(woosh.NUMBER, '1', 938, 26, 938, 27),
woosh.Token(woosh.OP, ']', 938, 27, 938, 28),
woosh.Token(woosh.OP, '[', 938, 28, 938, 29),
woosh.Token(woosh.NUMBER, '2', 938, 29, 938, 30),
woosh.Token(woosh.OP, ':', 938, 30, 938, 31),
woosh.Token(woosh.OP, ']', 938, 31, 938, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 32, 939, 0),
woosh.Token(woosh.NAME, 'del', 939, 8, 939, 11),
woosh.Token(woosh.NAME, 'sys', 939, 12, 939, 15),
woosh.Token(woosh.OP, '.', 939, 15, 939, 16),
woosh.Token(woosh.NAME, 'argv', 939, 16, 939, 20),
woosh.Token(woosh.OP, '[', 939, 20, 939, 21),
woosh.Token(woosh.NUMBER, '1', 939, 21, 939, 22),
woosh.Token(woosh.OP, ']', 939, 22, 939, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 23, 940, 0),
woosh.Token(woosh.DEDENT, '    ', 940, 0, 940, 4),
woosh.Token(woosh.NAME, 'host', 940, 4, 940, 8),
woosh.Token(woosh.OP, '=', 940, 9, 940, 10),
woosh.Token(woosh.NAME, 'sys', 940, 11, 940, 14),
woosh.Token(woosh.OP, '.', 940, 14, 940, 15),
woosh.Token(woosh.NAME, 'argv', 940, 15, 940, 19),
woosh.Token(woosh.OP, '[', 940, 19, 940, 20),
woosh.Token(woosh.NUMBER, '1', 940, 20, 940, 21),
woosh.Token(woosh.OP, ']', 940, 21, 940, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 940, 22, 941, 0),
woosh.Token(woosh.NAME, 'ftp', 941, 4, 941, 7),
woosh.Token(woosh.OP, '=', 941, 8, 941, 9),
woosh.Token(woosh.NAME, 'FTP', 941, 10, 941, 13),
woosh.Token(woosh.OP, '(', 941, 13, 941, 14),
woosh.Token(woosh.NAME, 'host', 941, 14, 941, 18),
woosh.Token(woosh.OP, ')', 941, 18, 941, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 941, 19, 942, 0),
woosh.Token(woosh.NAME, 'ftp', 942, 4, 942, 7),
woosh.Token(woosh.OP, '.', 942, 7, 942, 8),
woosh.Token(woosh.NAME, 'set_debuglevel', 942, 8, 942, 22),
woosh.Token(woosh.OP, '(', 942, 22, 942, 23),
woosh.Token(woosh.NAME, 'debugging', 942, 23, 942, 32),
woosh.Token(woosh.OP, ')', 942, 32, 942, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 942, 33, 943, 0),
woosh.Token(woosh.NAME, 'userid', 943, 4, 943, 10),
woosh.Token(woosh.OP, '=', 943, 11, 943, 12),
woosh.Token(woosh.NAME, 'passwd', 943, 13, 943, 19),
woosh.Token(woosh.OP, '=', 943, 20, 943, 21),
woosh.Token(woosh.NAME, 'acct', 943, 22, 943, 26),
woosh.Token(woosh.OP, '=', 943, 27, 943, 28),
woosh.Token(woosh.STRING, "''", 943, 29, 943, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 943, 31, 944, 0),
woosh.Token(woosh.NAME, 'try', 944, 4, 944, 7),
woosh.Token(woosh.OP, ':', 944, 7, 944, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 8, 945, 0),
woosh.Token(woosh.INDENT, '        ', 945, 0, 945, 8),
woosh.Token(woosh.NAME, 'netrcobj', 945, 8, 945, 16),
woosh.Token(woosh.OP, '=', 945, 17, 945, 18),
woosh.Token(woosh.NAME, 'netrc', 945, 19, 945, 24),
woosh.Token(woosh.OP, '.', 945, 24, 945, 25),
woosh.Token(woosh.NAME, 'netrc', 945, 25, 945, 30),
woosh.Token(woosh.OP, '(', 945, 30, 945, 31),
woosh.Token(woosh.NAME, 'rcfile', 945, 31, 945, 37),
woosh.Token(woosh.OP, ')', 945, 37, 945, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 945, 38, 946, 0),
woosh.Token(woosh.DEDENT, '    ', 946, 0, 946, 4),
woosh.Token(woosh.NAME, 'except', 946, 4, 946, 10),
woosh.Token(woosh.NAME, 'OSError', 946, 11, 946, 18),
woosh.Token(woosh.OP, ':', 946, 18, 946, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 946, 19, 947, 0),
woosh.Token(woosh.INDENT, '        ', 947, 0, 947, 8),
woosh.Token(woosh.NAME, 'if', 947, 8, 947, 10),
woosh.Token(woosh.NAME, 'rcfile', 947, 11, 947, 17),
woosh.Token(woosh.NAME, 'is', 947, 18, 947, 20),
woosh.Token(woosh.NAME, 'not', 947, 21, 947, 24),
woosh.Token(woosh.NAME, 'None', 947, 25, 947, 29),
woosh.Token(woosh.OP, ':', 947, 29, 947, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 947, 30, 948, 0),
woosh.Token(woosh.INDENT, '            ', 948, 0, 948, 12),
woosh.Token(woosh.NAME, 'sys', 948, 12, 948, 15),
woosh.Token(woosh.OP, '.', 948, 15, 948, 16),
woosh.Token(woosh.NAME, 'stderr', 948, 16, 948, 22),
woosh.Token(woosh.OP, '.', 948, 22, 948, 23),
woosh.Token(woosh.NAME, 'write', 948, 23, 948, 28),
woosh.Token(woosh.OP, '(', 948, 28, 948, 29),
woosh.Token(woosh.STRING, '"Could not open account file"', 948, 29, 948, 58),
woosh.Token(woosh.STRING, '" -- using anonymous login."', 949, 29, 949, 57),
woosh.Token(woosh.OP, ')', 949, 57, 949, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 949, 58, 950, 0),
woosh.Token(woosh.DEDENT, '    ', 950, 0, 950, 4),
woosh.Token(woosh.DEDENT, '', 950, 4, 950, 4),
woosh.Token(woosh.NAME, 'else', 950, 4, 950, 8),
woosh.Token(woosh.OP, ':', 950, 8, 950, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 950, 9, 951, 0),
woosh.Token(woosh.INDENT, '        ', 951, 0, 951, 8),
woosh.Token(woosh.NAME, 'try', 951, 8, 951, 11),
woosh.Token(woosh.OP, ':', 951, 11, 951, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 12, 952, 0),
woosh.Token(woosh.INDENT, '            ', 952, 0, 952, 12),
woosh.Token(woosh.NAME, 'userid', 952, 12, 952, 18),
woosh.Token(woosh.OP, ',', 952, 18, 952, 19),
woosh.Token(woosh.NAME, 'acct', 952, 20, 952, 24),
woosh.Token(woosh.OP, ',', 952, 24, 952, 25),
woosh.Token(woosh.NAME, 'passwd', 952, 26, 952, 32),
woosh.Token(woosh.OP, '=', 952, 33, 952, 34),
woosh.Token(woosh.NAME, 'netrcobj', 952, 35, 952, 43),
woosh.Token(woosh.OP, '.', 952, 43, 952, 44),
woosh.Token(woosh.NAME, 'authenticators', 952, 44, 952, 58),
woosh.Token(woosh.OP, '(', 952, 58, 952, 59),
woosh.Token(woosh.NAME, 'host', 952, 59, 952, 63),
woosh.Token(woosh.OP, ')', 952, 63, 952, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 952, 64, 953, 0),
woosh.Token(woosh.DEDENT, '        ', 953, 0, 953, 8),
woosh.Token(woosh.NAME, 'except', 953, 8, 953, 14),
woosh.Token(woosh.NAME, 'KeyError', 953, 15, 953, 23),
woosh.Token(woosh.OP, ':', 953, 23, 953, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 24, 954, 0),
woosh.Token(woosh.COMMENT, '# no account for host', 954, 12, 954, 33),
woosh.Token(woosh.INDENT, '            ', 955, 0, 955, 12),
woosh.Token(woosh.NAME, 'sys', 955, 12, 955, 15),
woosh.Token(woosh.OP, '.', 955, 15, 955, 16),
woosh.Token(woosh.NAME, 'stderr', 955, 16, 955, 22),
woosh.Token(woosh.OP, '.', 955, 22, 955, 23),
woosh.Token(woosh.NAME, 'write', 955, 23, 955, 28),
woosh.Token(woosh.OP, '(', 955, 28, 955, 29),
woosh.Token(woosh.STRING, '"No account -- using anonymous login."', 956, 20, 956, 58),
woosh.Token(woosh.OP, ')', 956, 58, 956, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 956, 59, 957, 0),
woosh.Token(woosh.DEDENT, '    ', 957, 0, 957, 4),
woosh.Token(woosh.DEDENT, '', 957, 4, 957, 4),
woosh.Token(woosh.NAME, 'ftp', 957, 4, 957, 7),
woosh.Token(woosh.OP, '.', 957, 7, 957, 8),
woosh.Token(woosh.NAME, 'login', 957, 8, 957, 13),
woosh.Token(woosh.OP, '(', 957, 13, 957, 14),
woosh.Token(woosh.NAME, 'userid', 957, 14, 957, 20),
woosh.Token(woosh.OP, ',', 957, 20, 957, 21),
woosh.Token(woosh.NAME, 'passwd', 957, 22, 957, 28),
woosh.Token(woosh.OP, ',', 957, 28, 957, 29),
woosh.Token(woosh.NAME, 'acct', 957, 30, 957, 34),
woosh.Token(woosh.OP, ')', 957, 34, 957, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 957, 35, 958, 0),
woosh.Token(woosh.NAME, 'for', 958, 4, 958, 7),
woosh.Token(woosh.NAME, 'file', 958, 8, 958, 12),
woosh.Token(woosh.NAME, 'in', 958, 13, 958, 15),
woosh.Token(woosh.NAME, 'sys', 958, 16, 958, 19),
woosh.Token(woosh.OP, '.', 958, 19, 958, 20),
woosh.Token(woosh.NAME, 'argv', 958, 20, 958, 24),
woosh.Token(woosh.OP, '[', 958, 24, 958, 25),
woosh.Token(woosh.NUMBER, '2', 958, 25, 958, 26),
woosh.Token(woosh.OP, ':', 958, 26, 958, 27),
woosh.Token(woosh.OP, ']', 958, 27, 958, 28),
woosh.Token(woosh.OP, ':', 958, 28, 958, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 29, 959, 0),
woosh.Token(woosh.INDENT, '        ', 959, 0, 959, 8),
woosh.Token(woosh.NAME, 'if', 959, 8, 959, 10),
woosh.Token(woosh.NAME, 'file', 959, 11, 959, 15),
woosh.Token(woosh.OP, '[', 959, 15, 959, 16),
woosh.Token(woosh.OP, ':', 959, 16, 959, 17),
woosh.Token(woosh.NUMBER, '2', 959, 17, 959, 18),
woosh.Token(woosh.OP, ']', 959, 18, 959, 19),
woosh.Token(woosh.OP, '==', 959, 20, 959, 22),
woosh.Token(woosh.STRING, "'-l'", 959, 23, 959, 27),
woosh.Token(woosh.OP, ':', 959, 27, 959, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 959, 28, 960, 0),
woosh.Token(woosh.INDENT, '            ', 960, 0, 960, 12),
woosh.Token(woosh.NAME, 'ftp', 960, 12, 960, 15),
woosh.Token(woosh.OP, '.', 960, 15, 960, 16),
woosh.Token(woosh.NAME, 'dir', 960, 16, 960, 19),
woosh.Token(woosh.OP, '(', 960, 19, 960, 20),
woosh.Token(woosh.NAME, 'file', 960, 20, 960, 24),
woosh.Token(woosh.OP, '[', 960, 24, 960, 25),
woosh.Token(woosh.NUMBER, '2', 960, 25, 960, 26),
woosh.Token(woosh.OP, ':', 960, 26, 960, 27),
woosh.Token(woosh.OP, ']', 960, 27, 960, 28),
woosh.Token(woosh.OP, ')', 960, 28, 960, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 29, 961, 0),
woosh.Token(woosh.DEDENT, '        ', 961, 0, 961, 8),
woosh.Token(woosh.NAME, 'elif', 961, 8, 961, 12),
woosh.Token(woosh.NAME, 'file', 961, 13, 961, 17),
woosh.Token(woosh.OP, '[', 961, 17, 961, 18),
woosh.Token(woosh.OP, ':', 961, 18, 961, 19),
woosh.Token(woosh.NUMBER, '2', 961, 19, 961, 20),
woosh.Token(woosh.OP, ']', 961, 20, 961, 21),
woosh.Token(woosh.OP, '==', 961, 22, 961, 24),
woosh.Token(woosh.STRING, "'-d'", 961, 25, 961, 29),
woosh.Token(woosh.OP, ':', 961, 29, 961, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 30, 962, 0),
woosh.Token(woosh.INDENT, '            ', 962, 0, 962, 12),
woosh.Token(woosh.NAME, 'cmd', 962, 12, 962, 15),
woosh.Token(woosh.OP, '=', 962, 16, 962, 17),
woosh.Token(woosh.STRING, "'CWD'", 962, 18, 962, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 962, 23, 963, 0),
woosh.Token(woosh.NAME, 'if', 963, 12, 963, 14),
woosh.Token(woosh.NAME, 'file', 963, 15, 963, 19),
woosh.Token(woosh.OP, '[', 963, 19, 963, 20),
woosh.Token(woosh.NUMBER, '2', 963, 20, 963, 21),
woosh.Token(woosh.OP, ':', 963, 21, 963, 22),
woosh.Token(woosh.OP, ']', 963, 22, 963, 23),
woosh.Token(woosh.OP, ':', 963, 23, 963, 24),
woosh.Token(woosh.NAME, 'cmd', 963, 25, 963, 28),
woosh.Token(woosh.OP, '=', 963, 29, 963, 30),
woosh.Token(woosh.NAME, 'cmd', 963, 31, 963, 34),
woosh.Token(woosh.OP, '+', 963, 35, 963, 36),
woosh.Token(woosh.STRING, "' '", 963, 37, 963, 40),
woosh.Token(woosh.OP, '+', 963, 41, 963, 42),
woosh.Token(woosh.NAME, 'file', 963, 43, 963, 47),
woosh.Token(woosh.OP, '[', 963, 47, 963, 48),
woosh.Token(woosh.NUMBER, '2', 963, 48, 963, 49),
woosh.Token(woosh.OP, ':', 963, 49, 963, 50),
woosh.Token(woosh.OP, ']', 963, 50, 963, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 963, 51, 964, 0),
woosh.Token(woosh.NAME, 'resp', 964, 12, 964, 16),
woosh.Token(woosh.OP, '=', 964, 17, 964, 18),
woosh.Token(woosh.NAME, 'ftp', 964, 19, 964, 22),
woosh.Token(woosh.OP, '.', 964, 22, 964, 23),
woosh.Token(woosh.NAME, 'sendcmd', 964, 23, 964, 30),
woosh.Token(woosh.OP, '(', 964, 30, 964, 31),
woosh.Token(woosh.NAME, 'cmd', 964, 31, 964, 34),
woosh.Token(woosh.OP, ')', 964, 34, 964, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 964, 35, 965, 0),
woosh.Token(woosh.DEDENT, '        ', 965, 0, 965, 8),
woosh.Token(woosh.NAME, 'elif', 965, 8, 965, 12),
woosh.Token(woosh.NAME, 'file', 965, 13, 965, 17),
woosh.Token(woosh.OP, '==', 965, 18, 965, 20),
woosh.Token(woosh.STRING, "'-p'", 965, 21, 965, 25),
woosh.Token(woosh.OP, ':', 965, 25, 965, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 965, 26, 966, 0),
woosh.Token(woosh.INDENT, '            ', 966, 0, 966, 12),
woosh.Token(woosh.NAME, 'ftp', 966, 12, 966, 15),
woosh.Token(woosh.OP, '.', 966, 15, 966, 16),
woosh.Token(woosh.NAME, 'set_pasv', 966, 16, 966, 24),
woosh.Token(woosh.OP, '(', 966, 24, 966, 25),
woosh.Token(woosh.NAME, 'not', 966, 25, 966, 28),
woosh.Token(woosh.NAME, 'ftp', 966, 29, 966, 32),
woosh.Token(woosh.OP, '.', 966, 32, 966, 33),
woosh.Token(woosh.NAME, 'passiveserver', 966, 33, 966, 46),
woosh.Token(woosh.OP, ')', 966, 46, 966, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 47, 967, 0),
woosh.Token(woosh.DEDENT, '        ', 967, 0, 967, 8),
woosh.Token(woosh.NAME, 'else', 967, 8, 967, 12),
woosh.Token(woosh.OP, ':', 967, 12, 967, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 967, 13, 968, 0),
woosh.Token(woosh.INDENT, '            ', 968, 0, 968, 12),
woosh.Token(woosh.NAME, 'ftp', 968, 12, 968, 15),
woosh.Token(woosh.OP, '.', 968, 15, 968, 16),
woosh.Token(woosh.NAME, 'retrbinary', 968, 16, 968, 26),
woosh.Token(woosh.OP, '(', 968, 26, 968, 27),
woosh.Token(woosh.STRING, "'RETR '", 968, 27, 968, 34),
woosh.Token(woosh.OP, '+', 968, 35, 968, 36),
woosh.Token(woosh.NAME, 'file', 968, 37, 968, 41),
woosh.Token(woosh.OP, ',', 968, 41, 968, 42),
woosh.Token(woosh.NAME, 'sys', 969, 27, 969, 30),
woosh.Token(woosh.OP, '.', 969, 30, 969, 31),
woosh.Token(woosh.NAME, 'stdout', 969, 31, 969, 37),
woosh.Token(woosh.OP, '.', 969, 37, 969, 38),
woosh.Token(woosh.NAME, 'write', 969, 38, 969, 43),
woosh.Token(woosh.OP, ',', 969, 43, 969, 44),
woosh.Token(woosh.NUMBER, '1024', 969, 45, 969, 49),
woosh.Token(woosh.OP, ')', 969, 49, 969, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 969, 50, 970, 0),
woosh.Token(woosh.DEDENT, '    ', 970, 0, 970, 4),
woosh.Token(woosh.DEDENT, '', 970, 4, 970, 4),
woosh.Token(woosh.NAME, 'ftp', 970, 4, 970, 7),
woosh.Token(woosh.OP, '.', 970, 7, 970, 8),
woosh.Token(woosh.NAME, 'quit', 970, 8, 970, 12),
woosh.Token(woosh.OP, '(', 970, 12, 970, 13),
woosh.Token(woosh.OP, ')', 970, 13, 970, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 14, 971, 0),
woosh.Token(woosh.DEDENT, '', 973, 0, 973, 0),
woosh.Token(woosh.NAME, 'if', 973, 0, 973, 2),
woosh.Token(woosh.NAME, '__name__', 973, 3, 973, 11),
woosh.Token(woosh.OP, '==', 973, 12, 973, 14),
woosh.Token(woosh.STRING, "'__main__'", 973, 15, 973, 25),
woosh.Token(woosh.OP, ':', 973, 25, 973, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 973, 26, 974, 0),
woosh.Token(woosh.INDENT, '    ', 974, 0, 974, 4),
woosh.Token(woosh.NAME, 'test', 974, 4, 974, 8),
woosh.Token(woosh.OP, '(', 974, 8, 974, 9),
woosh.Token(woosh.OP, ')', 974, 9, 974, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 974, 10, 975, 0),
woosh.Token(woosh.DEDENT, '', 975, 0, 975, 0),
woosh.Token(woosh.EOF, '', 975, 0, 975, 0),
]
