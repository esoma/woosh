
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/queue.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, "'''A multi-producer, multi-consumer queue.'''", 1, 0, 1, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1, 45, 2, 0),
woosh.Token(woosh.NAME, 'import', 3, 0, 3, 6),
woosh.Token(woosh.NAME, 'threading', 3, 7, 3, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 3, 16, 4, 0),
woosh.Token(woosh.NAME, 'import', 4, 0, 4, 6),
woosh.Token(woosh.NAME, 'types', 4, 7, 4, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 4, 12, 5, 0),
woosh.Token(woosh.NAME, 'from', 5, 0, 5, 4),
woosh.Token(woosh.NAME, 'collections', 5, 5, 5, 16),
woosh.Token(woosh.NAME, 'import', 5, 17, 5, 23),
woosh.Token(woosh.NAME, 'deque', 5, 24, 5, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 5, 29, 6, 0),
woosh.Token(woosh.NAME, 'from', 6, 0, 6, 4),
woosh.Token(woosh.NAME, 'heapq', 6, 5, 6, 10),
woosh.Token(woosh.NAME, 'import', 6, 11, 6, 17),
woosh.Token(woosh.NAME, 'heappush', 6, 18, 6, 26),
woosh.Token(woosh.OP, ',', 6, 26, 6, 27),
woosh.Token(woosh.NAME, 'heappop', 6, 28, 6, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 6, 35, 7, 0),
woosh.Token(woosh.NAME, 'from', 7, 0, 7, 4),
woosh.Token(woosh.NAME, 'time', 7, 5, 7, 9),
woosh.Token(woosh.NAME, 'import', 7, 10, 7, 16),
woosh.Token(woosh.NAME, 'monotonic', 7, 17, 7, 26),
woosh.Token(woosh.NAME, 'as', 7, 27, 7, 29),
woosh.Token(woosh.NAME, 'time', 7, 30, 7, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 7, 34, 8, 0),
woosh.Token(woosh.NAME, 'try', 8, 0, 8, 3),
woosh.Token(woosh.OP, ':', 8, 3, 8, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 8, 4, 9, 0),
woosh.Token(woosh.INDENT, '    ', 9, 0, 9, 4),
woosh.Token(woosh.NAME, 'from', 9, 4, 9, 8),
woosh.Token(woosh.NAME, '_queue', 9, 9, 9, 15),
woosh.Token(woosh.NAME, 'import', 9, 16, 9, 22),
woosh.Token(woosh.NAME, 'SimpleQueue', 9, 23, 9, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 9, 34, 10, 0),
woosh.Token(woosh.DEDENT, '', 10, 0, 10, 0),
woosh.Token(woosh.NAME, 'except', 10, 0, 10, 6),
woosh.Token(woosh.NAME, 'ImportError', 10, 7, 10, 18),
woosh.Token(woosh.OP, ':', 10, 18, 10, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 10, 19, 11, 0),
woosh.Token(woosh.INDENT, '    ', 11, 0, 11, 4),
woosh.Token(woosh.NAME, 'SimpleQueue', 11, 4, 11, 15),
woosh.Token(woosh.OP, '=', 11, 16, 11, 17),
woosh.Token(woosh.NAME, 'None', 11, 18, 11, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 11, 22, 12, 0),
woosh.Token(woosh.DEDENT, '', 13, 0, 13, 0),
woosh.Token(woosh.NAME, '__all__', 13, 0, 13, 7),
woosh.Token(woosh.OP, '=', 13, 8, 13, 9),
woosh.Token(woosh.OP, '[', 13, 10, 13, 11),
woosh.Token(woosh.STRING, "'Empty'", 13, 11, 13, 18),
woosh.Token(woosh.OP, ',', 13, 18, 13, 19),
woosh.Token(woosh.STRING, "'Full'", 13, 20, 13, 26),
woosh.Token(woosh.OP, ',', 13, 26, 13, 27),
woosh.Token(woosh.STRING, "'Queue'", 13, 28, 13, 35),
woosh.Token(woosh.OP, ',', 13, 35, 13, 36),
woosh.Token(woosh.STRING, "'PriorityQueue'", 13, 37, 13, 52),
woosh.Token(woosh.OP, ',', 13, 52, 13, 53),
woosh.Token(woosh.STRING, "'LifoQueue'", 13, 54, 13, 65),
woosh.Token(woosh.OP, ',', 13, 65, 13, 66),
woosh.Token(woosh.STRING, "'SimpleQueue'", 13, 67, 13, 80),
woosh.Token(woosh.OP, ']', 13, 80, 13, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 13, 81, 14, 0),
woosh.Token(woosh.NAME, 'try', 16, 0, 16, 3),
woosh.Token(woosh.OP, ':', 16, 3, 16, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 16, 4, 17, 0),
woosh.Token(woosh.INDENT, '    ', 17, 0, 17, 4),
woosh.Token(woosh.NAME, 'from', 17, 4, 17, 8),
woosh.Token(woosh.NAME, '_queue', 17, 9, 17, 15),
woosh.Token(woosh.NAME, 'import', 17, 16, 17, 22),
woosh.Token(woosh.NAME, 'Empty', 17, 23, 17, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 17, 28, 18, 0),
woosh.Token(woosh.DEDENT, '', 18, 0, 18, 0),
woosh.Token(woosh.NAME, 'except', 18, 0, 18, 6),
woosh.Token(woosh.NAME, 'ImportError', 18, 7, 18, 18),
woosh.Token(woosh.OP, ':', 18, 18, 18, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 18, 19, 19, 0),
woosh.Token(woosh.INDENT, '    ', 19, 0, 19, 4),
woosh.Token(woosh.NAME, 'class', 19, 4, 19, 9),
woosh.Token(woosh.NAME, 'Empty', 19, 10, 19, 15),
woosh.Token(woosh.OP, '(', 19, 15, 19, 16),
woosh.Token(woosh.NAME, 'Exception', 19, 16, 19, 25),
woosh.Token(woosh.OP, ')', 19, 25, 19, 26),
woosh.Token(woosh.OP, ':', 19, 26, 19, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 19, 27, 20, 0),
woosh.Token(woosh.INDENT, '        ', 20, 0, 20, 8),
woosh.Token(woosh.STRING, "'Exception raised by Queue.get(block=0)/get_nowait().'", 20, 8, 20, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 20, 62, 21, 0),
woosh.Token(woosh.NAME, 'pass', 21, 8, 21, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 12, 22, 0),
woosh.Token(woosh.DEDENT, '', 23, 0, 23, 0),
woosh.Token(woosh.DEDENT, '', 23, 0, 23, 0),
woosh.Token(woosh.NAME, 'class', 23, 0, 23, 5),
woosh.Token(woosh.NAME, 'Full', 23, 6, 23, 10),
woosh.Token(woosh.OP, '(', 23, 10, 23, 11),
woosh.Token(woosh.NAME, 'Exception', 23, 11, 23, 20),
woosh.Token(woosh.OP, ')', 23, 20, 23, 21),
woosh.Token(woosh.OP, ':', 23, 21, 23, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 23, 22, 24, 0),
woosh.Token(woosh.INDENT, '    ', 24, 0, 24, 4),
woosh.Token(woosh.STRING, "'Exception raised by Queue.put(block=0)/put_nowait().'", 24, 4, 24, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 24, 58, 25, 0),
woosh.Token(woosh.NAME, 'pass', 25, 4, 25, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 25, 8, 26, 0),
woosh.Token(woosh.DEDENT, '', 28, 0, 28, 0),
woosh.Token(woosh.NAME, 'class', 28, 0, 28, 5),
woosh.Token(woosh.NAME, 'Queue', 28, 6, 28, 11),
woosh.Token(woosh.OP, ':', 28, 11, 28, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 28, 12, 29, 0),
woosh.Token(woosh.INDENT, '    ', 29, 0, 29, 4),
woosh.Token(woosh.STRING, "'''Create a queue object with a given maximum size.\r\n\r\n    If maxsize is <= 0, the queue size is infinite.\r\n    '''", 29, 4, 32, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 32, 7, 33, 0),
woosh.Token(woosh.NAME, 'def', 34, 4, 34, 7),
woosh.Token(woosh.NAME, '__init__', 34, 8, 34, 16),
woosh.Token(woosh.OP, '(', 34, 16, 34, 17),
woosh.Token(woosh.NAME, 'self', 34, 17, 34, 21),
woosh.Token(woosh.OP, ',', 34, 21, 34, 22),
woosh.Token(woosh.NAME, 'maxsize', 34, 23, 34, 30),
woosh.Token(woosh.OP, '=', 34, 30, 34, 31),
woosh.Token(woosh.NUMBER, '0', 34, 31, 34, 32),
woosh.Token(woosh.OP, ')', 34, 32, 34, 33),
woosh.Token(woosh.OP, ':', 34, 33, 34, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 34, 34, 35, 0),
woosh.Token(woosh.INDENT, '        ', 35, 0, 35, 8),
woosh.Token(woosh.NAME, 'self', 35, 8, 35, 12),
woosh.Token(woosh.OP, '.', 35, 12, 35, 13),
woosh.Token(woosh.NAME, 'maxsize', 35, 13, 35, 20),
woosh.Token(woosh.OP, '=', 35, 21, 35, 22),
woosh.Token(woosh.NAME, 'maxsize', 35, 23, 35, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 35, 30, 36, 0),
woosh.Token(woosh.NAME, 'self', 36, 8, 36, 12),
woosh.Token(woosh.OP, '.', 36, 12, 36, 13),
woosh.Token(woosh.NAME, '_init', 36, 13, 36, 18),
woosh.Token(woosh.OP, '(', 36, 18, 36, 19),
woosh.Token(woosh.NAME, 'maxsize', 36, 19, 36, 26),
woosh.Token(woosh.OP, ')', 36, 26, 36, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 36, 27, 37, 0),
woosh.Token(woosh.COMMENT, '# mutex must be held whenever the queue is mutating.  All methods', 38, 8, 38, 73),
woosh.Token(woosh.COMMENT, '# that acquire mutex must release it before returning.  mutex', 39, 8, 39, 69),
woosh.Token(woosh.COMMENT, '# is shared between the three conditions, so acquiring and', 40, 8, 40, 66),
woosh.Token(woosh.COMMENT, '# releasing the conditions also acquires and releases mutex.', 41, 8, 41, 68),
woosh.Token(woosh.NAME, 'self', 42, 8, 42, 12),
woosh.Token(woosh.OP, '.', 42, 12, 42, 13),
woosh.Token(woosh.NAME, 'mutex', 42, 13, 42, 18),
woosh.Token(woosh.OP, '=', 42, 19, 42, 20),
woosh.Token(woosh.NAME, 'threading', 42, 21, 42, 30),
woosh.Token(woosh.OP, '.', 42, 30, 42, 31),
woosh.Token(woosh.NAME, 'Lock', 42, 31, 42, 35),
woosh.Token(woosh.OP, '(', 42, 35, 42, 36),
woosh.Token(woosh.OP, ')', 42, 36, 42, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 42, 37, 43, 0),
woosh.Token(woosh.COMMENT, '# Notify not_empty whenever an item is added to the queue; a', 44, 8, 44, 68),
woosh.Token(woosh.COMMENT, '# thread waiting to get is notified then.', 45, 8, 45, 49),
woosh.Token(woosh.NAME, 'self', 46, 8, 46, 12),
woosh.Token(woosh.OP, '.', 46, 12, 46, 13),
woosh.Token(woosh.NAME, 'not_empty', 46, 13, 46, 22),
woosh.Token(woosh.OP, '=', 46, 23, 46, 24),
woosh.Token(woosh.NAME, 'threading', 46, 25, 46, 34),
woosh.Token(woosh.OP, '.', 46, 34, 46, 35),
woosh.Token(woosh.NAME, 'Condition', 46, 35, 46, 44),
woosh.Token(woosh.OP, '(', 46, 44, 46, 45),
woosh.Token(woosh.NAME, 'self', 46, 45, 46, 49),
woosh.Token(woosh.OP, '.', 46, 49, 46, 50),
woosh.Token(woosh.NAME, 'mutex', 46, 50, 46, 55),
woosh.Token(woosh.OP, ')', 46, 55, 46, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 56, 47, 0),
woosh.Token(woosh.COMMENT, '# Notify not_full whenever an item is removed from the queue;', 48, 8, 48, 69),
woosh.Token(woosh.COMMENT, '# a thread waiting to put is notified then.', 49, 8, 49, 51),
woosh.Token(woosh.NAME, 'self', 50, 8, 50, 12),
woosh.Token(woosh.OP, '.', 50, 12, 50, 13),
woosh.Token(woosh.NAME, 'not_full', 50, 13, 50, 21),
woosh.Token(woosh.OP, '=', 50, 22, 50, 23),
woosh.Token(woosh.NAME, 'threading', 50, 24, 50, 33),
woosh.Token(woosh.OP, '.', 50, 33, 50, 34),
woosh.Token(woosh.NAME, 'Condition', 50, 34, 50, 43),
woosh.Token(woosh.OP, '(', 50, 43, 50, 44),
woosh.Token(woosh.NAME, 'self', 50, 44, 50, 48),
woosh.Token(woosh.OP, '.', 50, 48, 50, 49),
woosh.Token(woosh.NAME, 'mutex', 50, 49, 50, 54),
woosh.Token(woosh.OP, ')', 50, 54, 50, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 50, 55, 51, 0),
woosh.Token(woosh.COMMENT, '# Notify all_tasks_done whenever the number of unfinished tasks', 52, 8, 52, 71),
woosh.Token(woosh.COMMENT, '# drops to zero; thread waiting to join() is notified to resume', 53, 8, 53, 71),
woosh.Token(woosh.NAME, 'self', 54, 8, 54, 12),
woosh.Token(woosh.OP, '.', 54, 12, 54, 13),
woosh.Token(woosh.NAME, 'all_tasks_done', 54, 13, 54, 27),
woosh.Token(woosh.OP, '=', 54, 28, 54, 29),
woosh.Token(woosh.NAME, 'threading', 54, 30, 54, 39),
woosh.Token(woosh.OP, '.', 54, 39, 54, 40),
woosh.Token(woosh.NAME, 'Condition', 54, 40, 54, 49),
woosh.Token(woosh.OP, '(', 54, 49, 54, 50),
woosh.Token(woosh.NAME, 'self', 54, 50, 54, 54),
woosh.Token(woosh.OP, '.', 54, 54, 54, 55),
woosh.Token(woosh.NAME, 'mutex', 54, 55, 54, 60),
woosh.Token(woosh.OP, ')', 54, 60, 54, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 61, 55, 0),
woosh.Token(woosh.NAME, 'self', 55, 8, 55, 12),
woosh.Token(woosh.OP, '.', 55, 12, 55, 13),
woosh.Token(woosh.NAME, 'unfinished_tasks', 55, 13, 55, 29),
woosh.Token(woosh.OP, '=', 55, 30, 55, 31),
woosh.Token(woosh.NUMBER, '0', 55, 32, 55, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 33, 56, 0),
woosh.Token(woosh.DEDENT, '    ', 57, 0, 57, 4),
woosh.Token(woosh.NAME, 'def', 57, 4, 57, 7),
woosh.Token(woosh.NAME, 'task_done', 57, 8, 57, 17),
woosh.Token(woosh.OP, '(', 57, 17, 57, 18),
woosh.Token(woosh.NAME, 'self', 57, 18, 57, 22),
woosh.Token(woosh.OP, ')', 57, 22, 57, 23),
woosh.Token(woosh.OP, ':', 57, 23, 57, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 24, 58, 0),
woosh.Token(woosh.INDENT, '        ', 58, 0, 58, 8),
woosh.Token(woosh.STRING, "'''Indicate that a formerly enqueued task is complete.\r\n\r\n        Used by Queue consumer threads.  For each get() used to fetch a task,\r\n        a subsequent call to task_done() tells the queue that the processing\r\n        on the task is complete.\r\n\r\n        If a join() is currently blocking, it will resume when all items\r\n        have been processed (meaning that a task_done() call was received\r\n        for every item that had been put() into the queue).\r\n\r\n        Raises a ValueError if called more times than there were items\r\n        placed in the queue.\r\n        '''", 58, 8, 70, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 11, 71, 0),
woosh.Token(woosh.NAME, 'with', 71, 8, 71, 12),
woosh.Token(woosh.NAME, 'self', 71, 13, 71, 17),
woosh.Token(woosh.OP, '.', 71, 17, 71, 18),
woosh.Token(woosh.NAME, 'all_tasks_done', 71, 18, 71, 32),
woosh.Token(woosh.OP, ':', 71, 32, 71, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 33, 72, 0),
woosh.Token(woosh.INDENT, '            ', 72, 0, 72, 12),
woosh.Token(woosh.NAME, 'unfinished', 72, 12, 72, 22),
woosh.Token(woosh.OP, '=', 72, 23, 72, 24),
woosh.Token(woosh.NAME, 'self', 72, 25, 72, 29),
woosh.Token(woosh.OP, '.', 72, 29, 72, 30),
woosh.Token(woosh.NAME, 'unfinished_tasks', 72, 30, 72, 46),
woosh.Token(woosh.OP, '-', 72, 47, 72, 48),
woosh.Token(woosh.NUMBER, '1', 72, 49, 72, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 50, 73, 0),
woosh.Token(woosh.NAME, 'if', 73, 12, 73, 14),
woosh.Token(woosh.NAME, 'unfinished', 73, 15, 73, 25),
woosh.Token(woosh.OP, '<=', 73, 26, 73, 28),
woosh.Token(woosh.NUMBER, '0', 73, 29, 73, 30),
woosh.Token(woosh.OP, ':', 73, 30, 73, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 31, 74, 0),
woosh.Token(woosh.INDENT, '                ', 74, 0, 74, 16),
woosh.Token(woosh.NAME, 'if', 74, 16, 74, 18),
woosh.Token(woosh.NAME, 'unfinished', 74, 19, 74, 29),
woosh.Token(woosh.OP, '<', 74, 30, 74, 31),
woosh.Token(woosh.NUMBER, '0', 74, 32, 74, 33),
woosh.Token(woosh.OP, ':', 74, 33, 74, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 34, 75, 0),
woosh.Token(woosh.INDENT, '                    ', 75, 0, 75, 20),
woosh.Token(woosh.NAME, 'raise', 75, 20, 75, 25),
woosh.Token(woosh.NAME, 'ValueError', 75, 26, 75, 36),
woosh.Token(woosh.OP, '(', 75, 36, 75, 37),
woosh.Token(woosh.STRING, "'task_done() called too many times'", 75, 37, 75, 72),
woosh.Token(woosh.OP, ')', 75, 72, 75, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 73, 76, 0),
woosh.Token(woosh.DEDENT, '                ', 76, 0, 76, 16),
woosh.Token(woosh.NAME, 'self', 76, 16, 76, 20),
woosh.Token(woosh.OP, '.', 76, 20, 76, 21),
woosh.Token(woosh.NAME, 'all_tasks_done', 76, 21, 76, 35),
woosh.Token(woosh.OP, '.', 76, 35, 76, 36),
woosh.Token(woosh.NAME, 'notify_all', 76, 36, 76, 46),
woosh.Token(woosh.OP, '(', 76, 46, 76, 47),
woosh.Token(woosh.OP, ')', 76, 47, 76, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 48, 77, 0),
woosh.Token(woosh.DEDENT, '            ', 77, 0, 77, 12),
woosh.Token(woosh.NAME, 'self', 77, 12, 77, 16),
woosh.Token(woosh.OP, '.', 77, 16, 77, 17),
woosh.Token(woosh.NAME, 'unfinished_tasks', 77, 17, 77, 33),
woosh.Token(woosh.OP, '=', 77, 34, 77, 35),
woosh.Token(woosh.NAME, 'unfinished', 77, 36, 77, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 46, 78, 0),
woosh.Token(woosh.DEDENT, '    ', 79, 0, 79, 4),
woosh.Token(woosh.DEDENT, '', 79, 4, 79, 4),
woosh.Token(woosh.NAME, 'def', 79, 4, 79, 7),
woosh.Token(woosh.NAME, 'join', 79, 8, 79, 12),
woosh.Token(woosh.OP, '(', 79, 12, 79, 13),
woosh.Token(woosh.NAME, 'self', 79, 13, 79, 17),
woosh.Token(woosh.OP, ')', 79, 17, 79, 18),
woosh.Token(woosh.OP, ':', 79, 18, 79, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 79, 19, 80, 0),
woosh.Token(woosh.INDENT, '        ', 80, 0, 80, 8),
woosh.Token(woosh.STRING, "'''Blocks until all items in the Queue have been gotten and processed.\r\n\r\n        The count of unfinished tasks goes up whenever an item is added to the\r\n        queue. The count goes down whenever a consumer thread calls task_done()\r\n        to indicate the item was retrieved and all work on it is complete.\r\n\r\n        When the count of unfinished tasks drops to zero, join() unblocks.\r\n        '''", 80, 8, 87, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 11, 88, 0),
woosh.Token(woosh.NAME, 'with', 88, 8, 88, 12),
woosh.Token(woosh.NAME, 'self', 88, 13, 88, 17),
woosh.Token(woosh.OP, '.', 88, 17, 88, 18),
woosh.Token(woosh.NAME, 'all_tasks_done', 88, 18, 88, 32),
woosh.Token(woosh.OP, ':', 88, 32, 88, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 33, 89, 0),
woosh.Token(woosh.INDENT, '            ', 89, 0, 89, 12),
woosh.Token(woosh.NAME, 'while', 89, 12, 89, 17),
woosh.Token(woosh.NAME, 'self', 89, 18, 89, 22),
woosh.Token(woosh.OP, '.', 89, 22, 89, 23),
woosh.Token(woosh.NAME, 'unfinished_tasks', 89, 23, 89, 39),
woosh.Token(woosh.OP, ':', 89, 39, 89, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 89, 40, 90, 0),
woosh.Token(woosh.INDENT, '                ', 90, 0, 90, 16),
woosh.Token(woosh.NAME, 'self', 90, 16, 90, 20),
woosh.Token(woosh.OP, '.', 90, 20, 90, 21),
woosh.Token(woosh.NAME, 'all_tasks_done', 90, 21, 90, 35),
woosh.Token(woosh.OP, '.', 90, 35, 90, 36),
woosh.Token(woosh.NAME, 'wait', 90, 36, 90, 40),
woosh.Token(woosh.OP, '(', 90, 40, 90, 41),
woosh.Token(woosh.OP, ')', 90, 41, 90, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 90, 42, 91, 0),
woosh.Token(woosh.DEDENT, '    ', 92, 0, 92, 4),
woosh.Token(woosh.DEDENT, '', 92, 4, 92, 4),
woosh.Token(woosh.DEDENT, '', 92, 4, 92, 4),
woosh.Token(woosh.NAME, 'def', 92, 4, 92, 7),
woosh.Token(woosh.NAME, 'qsize', 92, 8, 92, 13),
woosh.Token(woosh.OP, '(', 92, 13, 92, 14),
woosh.Token(woosh.NAME, 'self', 92, 14, 92, 18),
woosh.Token(woosh.OP, ')', 92, 18, 92, 19),
woosh.Token(woosh.OP, ':', 92, 19, 92, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 20, 93, 0),
woosh.Token(woosh.INDENT, '        ', 93, 0, 93, 8),
woosh.Token(woosh.STRING, "'''Return the approximate size of the queue (not reliable!).'''", 93, 8, 93, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 71, 94, 0),
woosh.Token(woosh.NAME, 'with', 94, 8, 94, 12),
woosh.Token(woosh.NAME, 'self', 94, 13, 94, 17),
woosh.Token(woosh.OP, '.', 94, 17, 94, 18),
woosh.Token(woosh.NAME, 'mutex', 94, 18, 94, 23),
woosh.Token(woosh.OP, ':', 94, 23, 94, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 24, 95, 0),
woosh.Token(woosh.INDENT, '            ', 95, 0, 95, 12),
woosh.Token(woosh.NAME, 'return', 95, 12, 95, 18),
woosh.Token(woosh.NAME, 'self', 95, 19, 95, 23),
woosh.Token(woosh.OP, '.', 95, 23, 95, 24),
woosh.Token(woosh.NAME, '_qsize', 95, 24, 95, 30),
woosh.Token(woosh.OP, '(', 95, 30, 95, 31),
woosh.Token(woosh.OP, ')', 95, 31, 95, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 32, 96, 0),
woosh.Token(woosh.DEDENT, '    ', 97, 0, 97, 4),
woosh.Token(woosh.DEDENT, '', 97, 4, 97, 4),
woosh.Token(woosh.NAME, 'def', 97, 4, 97, 7),
woosh.Token(woosh.NAME, 'empty', 97, 8, 97, 13),
woosh.Token(woosh.OP, '(', 97, 13, 97, 14),
woosh.Token(woosh.NAME, 'self', 97, 14, 97, 18),
woosh.Token(woosh.OP, ')', 97, 18, 97, 19),
woosh.Token(woosh.OP, ':', 97, 19, 97, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 20, 98, 0),
woosh.Token(woosh.INDENT, '        ', 98, 0, 98, 8),
woosh.Token(woosh.STRING, "'''Return True if the queue is empty, False otherwise (not reliable!).\r\n\r\n        This method is likely to be removed at some point.  Use qsize() == 0\r\n        as a direct substitute, but be aware that either approach risks a race\r\n        condition where a queue can grow before the result of empty() or\r\n        qsize() can be used.\r\n\r\n        To create code that needs to wait for all queued tasks to be\r\n        completed, the preferred technique is to use the join() method.\r\n        '''", 98, 8, 107, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 11, 108, 0),
woosh.Token(woosh.NAME, 'with', 108, 8, 108, 12),
woosh.Token(woosh.NAME, 'self', 108, 13, 108, 17),
woosh.Token(woosh.OP, '.', 108, 17, 108, 18),
woosh.Token(woosh.NAME, 'mutex', 108, 18, 108, 23),
woosh.Token(woosh.OP, ':', 108, 23, 108, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 24, 109, 0),
woosh.Token(woosh.INDENT, '            ', 109, 0, 109, 12),
woosh.Token(woosh.NAME, 'return', 109, 12, 109, 18),
woosh.Token(woosh.NAME, 'not', 109, 19, 109, 22),
woosh.Token(woosh.NAME, 'self', 109, 23, 109, 27),
woosh.Token(woosh.OP, '.', 109, 27, 109, 28),
woosh.Token(woosh.NAME, '_qsize', 109, 28, 109, 34),
woosh.Token(woosh.OP, '(', 109, 34, 109, 35),
woosh.Token(woosh.OP, ')', 109, 35, 109, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 36, 110, 0),
woosh.Token(woosh.DEDENT, '    ', 111, 0, 111, 4),
woosh.Token(woosh.DEDENT, '', 111, 4, 111, 4),
woosh.Token(woosh.NAME, 'def', 111, 4, 111, 7),
woosh.Token(woosh.NAME, 'full', 111, 8, 111, 12),
woosh.Token(woosh.OP, '(', 111, 12, 111, 13),
woosh.Token(woosh.NAME, 'self', 111, 13, 111, 17),
woosh.Token(woosh.OP, ')', 111, 17, 111, 18),
woosh.Token(woosh.OP, ':', 111, 18, 111, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 19, 112, 0),
woosh.Token(woosh.INDENT, '        ', 112, 0, 112, 8),
woosh.Token(woosh.STRING, "'''Return True if the queue is full, False otherwise (not reliable!).\r\n\r\n        This method is likely to be removed at some point.  Use qsize() >= n\r\n        as a direct substitute, but be aware that either approach risks a race\r\n        condition where a queue can shrink before the result of full() or\r\n        qsize() can be used.\r\n        '''", 112, 8, 118, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 11, 119, 0),
woosh.Token(woosh.NAME, 'with', 119, 8, 119, 12),
woosh.Token(woosh.NAME, 'self', 119, 13, 119, 17),
woosh.Token(woosh.OP, '.', 119, 17, 119, 18),
woosh.Token(woosh.NAME, 'mutex', 119, 18, 119, 23),
woosh.Token(woosh.OP, ':', 119, 23, 119, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 24, 120, 0),
woosh.Token(woosh.INDENT, '            ', 120, 0, 120, 12),
woosh.Token(woosh.NAME, 'return', 120, 12, 120, 18),
woosh.Token(woosh.NUMBER, '0', 120, 19, 120, 20),
woosh.Token(woosh.OP, '<', 120, 21, 120, 22),
woosh.Token(woosh.NAME, 'self', 120, 23, 120, 27),
woosh.Token(woosh.OP, '.', 120, 27, 120, 28),
woosh.Token(woosh.NAME, 'maxsize', 120, 28, 120, 35),
woosh.Token(woosh.OP, '<=', 120, 36, 120, 38),
woosh.Token(woosh.NAME, 'self', 120, 39, 120, 43),
woosh.Token(woosh.OP, '.', 120, 43, 120, 44),
woosh.Token(woosh.NAME, '_qsize', 120, 44, 120, 50),
woosh.Token(woosh.OP, '(', 120, 50, 120, 51),
woosh.Token(woosh.OP, ')', 120, 51, 120, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 52, 121, 0),
woosh.Token(woosh.DEDENT, '    ', 122, 0, 122, 4),
woosh.Token(woosh.DEDENT, '', 122, 4, 122, 4),
woosh.Token(woosh.NAME, 'def', 122, 4, 122, 7),
woosh.Token(woosh.NAME, 'put', 122, 8, 122, 11),
woosh.Token(woosh.OP, '(', 122, 11, 122, 12),
woosh.Token(woosh.NAME, 'self', 122, 12, 122, 16),
woosh.Token(woosh.OP, ',', 122, 16, 122, 17),
woosh.Token(woosh.NAME, 'item', 122, 18, 122, 22),
woosh.Token(woosh.OP, ',', 122, 22, 122, 23),
woosh.Token(woosh.NAME, 'block', 122, 24, 122, 29),
woosh.Token(woosh.OP, '=', 122, 29, 122, 30),
woosh.Token(woosh.NAME, 'True', 122, 30, 122, 34),
woosh.Token(woosh.OP, ',', 122, 34, 122, 35),
woosh.Token(woosh.NAME, 'timeout', 122, 36, 122, 43),
woosh.Token(woosh.OP, '=', 122, 43, 122, 44),
woosh.Token(woosh.NAME, 'None', 122, 44, 122, 48),
woosh.Token(woosh.OP, ')', 122, 48, 122, 49),
woosh.Token(woosh.OP, ':', 122, 49, 122, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 50, 123, 0),
woosh.Token(woosh.INDENT, '        ', 123, 0, 123, 8),
woosh.Token(woosh.STRING, "'''Put an item into the queue.\r\n\r\n        If optional args 'block' is true and 'timeout' is None (the default),\r\n        block if necessary until a free slot is available. If 'timeout' is\r\n        a non-negative number, it blocks at most 'timeout' seconds and raises\r\n        the Full exception if no free slot was available within that time.\r\n        Otherwise ('block' is false), put an item on the queue if a free slot\r\n        is immediately available, else raise the Full exception ('timeout'\r\n        is ignored in that case).\r\n        '''", 123, 8, 132, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 11, 133, 0),
woosh.Token(woosh.NAME, 'with', 133, 8, 133, 12),
woosh.Token(woosh.NAME, 'self', 133, 13, 133, 17),
woosh.Token(woosh.OP, '.', 133, 17, 133, 18),
woosh.Token(woosh.NAME, 'not_full', 133, 18, 133, 26),
woosh.Token(woosh.OP, ':', 133, 26, 133, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 27, 134, 0),
woosh.Token(woosh.INDENT, '            ', 134, 0, 134, 12),
woosh.Token(woosh.NAME, 'if', 134, 12, 134, 14),
woosh.Token(woosh.NAME, 'self', 134, 15, 134, 19),
woosh.Token(woosh.OP, '.', 134, 19, 134, 20),
woosh.Token(woosh.NAME, 'maxsize', 134, 20, 134, 27),
woosh.Token(woosh.OP, '>', 134, 28, 134, 29),
woosh.Token(woosh.NUMBER, '0', 134, 30, 134, 31),
woosh.Token(woosh.OP, ':', 134, 31, 134, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 32, 135, 0),
woosh.Token(woosh.INDENT, '                ', 135, 0, 135, 16),
woosh.Token(woosh.NAME, 'if', 135, 16, 135, 18),
woosh.Token(woosh.NAME, 'not', 135, 19, 135, 22),
woosh.Token(woosh.NAME, 'block', 135, 23, 135, 28),
woosh.Token(woosh.OP, ':', 135, 28, 135, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 29, 136, 0),
woosh.Token(woosh.INDENT, '                    ', 136, 0, 136, 20),
woosh.Token(woosh.NAME, 'if', 136, 20, 136, 22),
woosh.Token(woosh.NAME, 'self', 136, 23, 136, 27),
woosh.Token(woosh.OP, '.', 136, 27, 136, 28),
woosh.Token(woosh.NAME, '_qsize', 136, 28, 136, 34),
woosh.Token(woosh.OP, '(', 136, 34, 136, 35),
woosh.Token(woosh.OP, ')', 136, 35, 136, 36),
woosh.Token(woosh.OP, '>=', 136, 37, 136, 39),
woosh.Token(woosh.NAME, 'self', 136, 40, 136, 44),
woosh.Token(woosh.OP, '.', 136, 44, 136, 45),
woosh.Token(woosh.NAME, 'maxsize', 136, 45, 136, 52),
woosh.Token(woosh.OP, ':', 136, 52, 136, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 53, 137, 0),
woosh.Token(woosh.INDENT, '                        ', 137, 0, 137, 24),
woosh.Token(woosh.NAME, 'raise', 137, 24, 137, 29),
woosh.Token(woosh.NAME, 'Full', 137, 30, 137, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 34, 138, 0),
woosh.Token(woosh.DEDENT, '                ', 138, 0, 138, 16),
woosh.Token(woosh.DEDENT, '', 138, 16, 138, 16),
woosh.Token(woosh.NAME, 'elif', 138, 16, 138, 20),
woosh.Token(woosh.NAME, 'timeout', 138, 21, 138, 28),
woosh.Token(woosh.NAME, 'is', 138, 29, 138, 31),
woosh.Token(woosh.NAME, 'None', 138, 32, 138, 36),
woosh.Token(woosh.OP, ':', 138, 36, 138, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 37, 139, 0),
woosh.Token(woosh.INDENT, '                    ', 139, 0, 139, 20),
woosh.Token(woosh.NAME, 'while', 139, 20, 139, 25),
woosh.Token(woosh.NAME, 'self', 139, 26, 139, 30),
woosh.Token(woosh.OP, '.', 139, 30, 139, 31),
woosh.Token(woosh.NAME, '_qsize', 139, 31, 139, 37),
woosh.Token(woosh.OP, '(', 139, 37, 139, 38),
woosh.Token(woosh.OP, ')', 139, 38, 139, 39),
woosh.Token(woosh.OP, '>=', 139, 40, 139, 42),
woosh.Token(woosh.NAME, 'self', 139, 43, 139, 47),
woosh.Token(woosh.OP, '.', 139, 47, 139, 48),
woosh.Token(woosh.NAME, 'maxsize', 139, 48, 139, 55),
woosh.Token(woosh.OP, ':', 139, 55, 139, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 56, 140, 0),
woosh.Token(woosh.INDENT, '                        ', 140, 0, 140, 24),
woosh.Token(woosh.NAME, 'self', 140, 24, 140, 28),
woosh.Token(woosh.OP, '.', 140, 28, 140, 29),
woosh.Token(woosh.NAME, 'not_full', 140, 29, 140, 37),
woosh.Token(woosh.OP, '.', 140, 37, 140, 38),
woosh.Token(woosh.NAME, 'wait', 140, 38, 140, 42),
woosh.Token(woosh.OP, '(', 140, 42, 140, 43),
woosh.Token(woosh.OP, ')', 140, 43, 140, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 44, 141, 0),
woosh.Token(woosh.DEDENT, '                ', 141, 0, 141, 16),
woosh.Token(woosh.DEDENT, '', 141, 16, 141, 16),
woosh.Token(woosh.NAME, 'elif', 141, 16, 141, 20),
woosh.Token(woosh.NAME, 'timeout', 141, 21, 141, 28),
woosh.Token(woosh.OP, '<', 141, 29, 141, 30),
woosh.Token(woosh.NUMBER, '0', 141, 31, 141, 32),
woosh.Token(woosh.OP, ':', 141, 32, 141, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 33, 142, 0),
woosh.Token(woosh.INDENT, '                    ', 142, 0, 142, 20),
woosh.Token(woosh.NAME, 'raise', 142, 20, 142, 25),
woosh.Token(woosh.NAME, 'ValueError', 142, 26, 142, 36),
woosh.Token(woosh.OP, '(', 142, 36, 142, 37),
woosh.Token(woosh.STRING, '"\'timeout\' must be a non-negative number"', 142, 37, 142, 78),
woosh.Token(woosh.OP, ')', 142, 78, 142, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 79, 143, 0),
woosh.Token(woosh.DEDENT, '                ', 143, 0, 143, 16),
woosh.Token(woosh.NAME, 'else', 143, 16, 143, 20),
woosh.Token(woosh.OP, ':', 143, 20, 143, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 21, 144, 0),
woosh.Token(woosh.INDENT, '                    ', 144, 0, 144, 20),
woosh.Token(woosh.NAME, 'endtime', 144, 20, 144, 27),
woosh.Token(woosh.OP, '=', 144, 28, 144, 29),
woosh.Token(woosh.NAME, 'time', 144, 30, 144, 34),
woosh.Token(woosh.OP, '(', 144, 34, 144, 35),
woosh.Token(woosh.OP, ')', 144, 35, 144, 36),
woosh.Token(woosh.OP, '+', 144, 37, 144, 38),
woosh.Token(woosh.NAME, 'timeout', 144, 39, 144, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 46, 145, 0),
woosh.Token(woosh.NAME, 'while', 145, 20, 145, 25),
woosh.Token(woosh.NAME, 'self', 145, 26, 145, 30),
woosh.Token(woosh.OP, '.', 145, 30, 145, 31),
woosh.Token(woosh.NAME, '_qsize', 145, 31, 145, 37),
woosh.Token(woosh.OP, '(', 145, 37, 145, 38),
woosh.Token(woosh.OP, ')', 145, 38, 145, 39),
woosh.Token(woosh.OP, '>=', 145, 40, 145, 42),
woosh.Token(woosh.NAME, 'self', 145, 43, 145, 47),
woosh.Token(woosh.OP, '.', 145, 47, 145, 48),
woosh.Token(woosh.NAME, 'maxsize', 145, 48, 145, 55),
woosh.Token(woosh.OP, ':', 145, 55, 145, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 56, 146, 0),
woosh.Token(woosh.INDENT, '                        ', 146, 0, 146, 24),
woosh.Token(woosh.NAME, 'remaining', 146, 24, 146, 33),
woosh.Token(woosh.OP, '=', 146, 34, 146, 35),
woosh.Token(woosh.NAME, 'endtime', 146, 36, 146, 43),
woosh.Token(woosh.OP, '-', 146, 44, 146, 45),
woosh.Token(woosh.NAME, 'time', 146, 46, 146, 50),
woosh.Token(woosh.OP, '(', 146, 50, 146, 51),
woosh.Token(woosh.OP, ')', 146, 51, 146, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 52, 147, 0),
woosh.Token(woosh.NAME, 'if', 147, 24, 147, 26),
woosh.Token(woosh.NAME, 'remaining', 147, 27, 147, 36),
woosh.Token(woosh.OP, '<=', 147, 37, 147, 39),
woosh.Token(woosh.NUMBER, '0.0', 147, 40, 147, 43),
woosh.Token(woosh.OP, ':', 147, 43, 147, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 44, 148, 0),
woosh.Token(woosh.INDENT, '                            ', 148, 0, 148, 28),
woosh.Token(woosh.NAME, 'raise', 148, 28, 148, 33),
woosh.Token(woosh.NAME, 'Full', 148, 34, 148, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 38, 149, 0),
woosh.Token(woosh.DEDENT, '                        ', 149, 0, 149, 24),
woosh.Token(woosh.NAME, 'self', 149, 24, 149, 28),
woosh.Token(woosh.OP, '.', 149, 28, 149, 29),
woosh.Token(woosh.NAME, 'not_full', 149, 29, 149, 37),
woosh.Token(woosh.OP, '.', 149, 37, 149, 38),
woosh.Token(woosh.NAME, 'wait', 149, 38, 149, 42),
woosh.Token(woosh.OP, '(', 149, 42, 149, 43),
woosh.Token(woosh.NAME, 'remaining', 149, 43, 149, 52),
woosh.Token(woosh.OP, ')', 149, 52, 149, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 53, 150, 0),
woosh.Token(woosh.DEDENT, '            ', 150, 0, 150, 12),
woosh.Token(woosh.DEDENT, '', 150, 12, 150, 12),
woosh.Token(woosh.DEDENT, '', 150, 12, 150, 12),
woosh.Token(woosh.NAME, 'self', 150, 12, 150, 16),
woosh.Token(woosh.OP, '.', 150, 16, 150, 17),
woosh.Token(woosh.NAME, '_put', 150, 17, 150, 21),
woosh.Token(woosh.OP, '(', 150, 21, 150, 22),
woosh.Token(woosh.NAME, 'item', 150, 22, 150, 26),
woosh.Token(woosh.OP, ')', 150, 26, 150, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 27, 151, 0),
woosh.Token(woosh.NAME, 'self', 151, 12, 151, 16),
woosh.Token(woosh.OP, '.', 151, 16, 151, 17),
woosh.Token(woosh.NAME, 'unfinished_tasks', 151, 17, 151, 33),
woosh.Token(woosh.OP, '+=', 151, 34, 151, 36),
woosh.Token(woosh.NUMBER, '1', 151, 37, 151, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 38, 152, 0),
woosh.Token(woosh.NAME, 'self', 152, 12, 152, 16),
woosh.Token(woosh.OP, '.', 152, 16, 152, 17),
woosh.Token(woosh.NAME, 'not_empty', 152, 17, 152, 26),
woosh.Token(woosh.OP, '.', 152, 26, 152, 27),
woosh.Token(woosh.NAME, 'notify', 152, 27, 152, 33),
woosh.Token(woosh.OP, '(', 152, 33, 152, 34),
woosh.Token(woosh.OP, ')', 152, 34, 152, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 35, 153, 0),
woosh.Token(woosh.DEDENT, '    ', 154, 0, 154, 4),
woosh.Token(woosh.DEDENT, '', 154, 4, 154, 4),
woosh.Token(woosh.NAME, 'def', 154, 4, 154, 7),
woosh.Token(woosh.NAME, 'get', 154, 8, 154, 11),
woosh.Token(woosh.OP, '(', 154, 11, 154, 12),
woosh.Token(woosh.NAME, 'self', 154, 12, 154, 16),
woosh.Token(woosh.OP, ',', 154, 16, 154, 17),
woosh.Token(woosh.NAME, 'block', 154, 18, 154, 23),
woosh.Token(woosh.OP, '=', 154, 23, 154, 24),
woosh.Token(woosh.NAME, 'True', 154, 24, 154, 28),
woosh.Token(woosh.OP, ',', 154, 28, 154, 29),
woosh.Token(woosh.NAME, 'timeout', 154, 30, 154, 37),
woosh.Token(woosh.OP, '=', 154, 37, 154, 38),
woosh.Token(woosh.NAME, 'None', 154, 38, 154, 42),
woosh.Token(woosh.OP, ')', 154, 42, 154, 43),
woosh.Token(woosh.OP, ':', 154, 43, 154, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 44, 155, 0),
woosh.Token(woosh.INDENT, '        ', 155, 0, 155, 8),
woosh.Token(woosh.STRING, "'''Remove and return an item from the queue.\r\n\r\n        If optional args 'block' is true and 'timeout' is None (the default),\r\n        block if necessary until an item is available. If 'timeout' is\r\n        a non-negative number, it blocks at most 'timeout' seconds and raises\r\n        the Empty exception if no item was available within that time.\r\n        Otherwise ('block' is false), return an item if one is immediately\r\n        available, else raise the Empty exception ('timeout' is ignored\r\n        in that case).\r\n        '''", 155, 8, 164, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 11, 165, 0),
woosh.Token(woosh.NAME, 'with', 165, 8, 165, 12),
woosh.Token(woosh.NAME, 'self', 165, 13, 165, 17),
woosh.Token(woosh.OP, '.', 165, 17, 165, 18),
woosh.Token(woosh.NAME, 'not_empty', 165, 18, 165, 27),
woosh.Token(woosh.OP, ':', 165, 27, 165, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 28, 166, 0),
woosh.Token(woosh.INDENT, '            ', 166, 0, 166, 12),
woosh.Token(woosh.NAME, 'if', 166, 12, 166, 14),
woosh.Token(woosh.NAME, 'not', 166, 15, 166, 18),
woosh.Token(woosh.NAME, 'block', 166, 19, 166, 24),
woosh.Token(woosh.OP, ':', 166, 24, 166, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 25, 167, 0),
woosh.Token(woosh.INDENT, '                ', 167, 0, 167, 16),
woosh.Token(woosh.NAME, 'if', 167, 16, 167, 18),
woosh.Token(woosh.NAME, 'not', 167, 19, 167, 22),
woosh.Token(woosh.NAME, 'self', 167, 23, 167, 27),
woosh.Token(woosh.OP, '.', 167, 27, 167, 28),
woosh.Token(woosh.NAME, '_qsize', 167, 28, 167, 34),
woosh.Token(woosh.OP, '(', 167, 34, 167, 35),
woosh.Token(woosh.OP, ')', 167, 35, 167, 36),
woosh.Token(woosh.OP, ':', 167, 36, 167, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 37, 168, 0),
woosh.Token(woosh.INDENT, '                    ', 168, 0, 168, 20),
woosh.Token(woosh.NAME, 'raise', 168, 20, 168, 25),
woosh.Token(woosh.NAME, 'Empty', 168, 26, 168, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 31, 169, 0),
woosh.Token(woosh.DEDENT, '            ', 169, 0, 169, 12),
woosh.Token(woosh.DEDENT, '', 169, 12, 169, 12),
woosh.Token(woosh.NAME, 'elif', 169, 12, 169, 16),
woosh.Token(woosh.NAME, 'timeout', 169, 17, 169, 24),
woosh.Token(woosh.NAME, 'is', 169, 25, 169, 27),
woosh.Token(woosh.NAME, 'None', 169, 28, 169, 32),
woosh.Token(woosh.OP, ':', 169, 32, 169, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 33, 170, 0),
woosh.Token(woosh.INDENT, '                ', 170, 0, 170, 16),
woosh.Token(woosh.NAME, 'while', 170, 16, 170, 21),
woosh.Token(woosh.NAME, 'not', 170, 22, 170, 25),
woosh.Token(woosh.NAME, 'self', 170, 26, 170, 30),
woosh.Token(woosh.OP, '.', 170, 30, 170, 31),
woosh.Token(woosh.NAME, '_qsize', 170, 31, 170, 37),
woosh.Token(woosh.OP, '(', 170, 37, 170, 38),
woosh.Token(woosh.OP, ')', 170, 38, 170, 39),
woosh.Token(woosh.OP, ':', 170, 39, 170, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 40, 171, 0),
woosh.Token(woosh.INDENT, '                    ', 171, 0, 171, 20),
woosh.Token(woosh.NAME, 'self', 171, 20, 171, 24),
woosh.Token(woosh.OP, '.', 171, 24, 171, 25),
woosh.Token(woosh.NAME, 'not_empty', 171, 25, 171, 34),
woosh.Token(woosh.OP, '.', 171, 34, 171, 35),
woosh.Token(woosh.NAME, 'wait', 171, 35, 171, 39),
woosh.Token(woosh.OP, '(', 171, 39, 171, 40),
woosh.Token(woosh.OP, ')', 171, 40, 171, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 41, 172, 0),
woosh.Token(woosh.DEDENT, '            ', 172, 0, 172, 12),
woosh.Token(woosh.DEDENT, '', 172, 12, 172, 12),
woosh.Token(woosh.NAME, 'elif', 172, 12, 172, 16),
woosh.Token(woosh.NAME, 'timeout', 172, 17, 172, 24),
woosh.Token(woosh.OP, '<', 172, 25, 172, 26),
woosh.Token(woosh.NUMBER, '0', 172, 27, 172, 28),
woosh.Token(woosh.OP, ':', 172, 28, 172, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 29, 173, 0),
woosh.Token(woosh.INDENT, '                ', 173, 0, 173, 16),
woosh.Token(woosh.NAME, 'raise', 173, 16, 173, 21),
woosh.Token(woosh.NAME, 'ValueError', 173, 22, 173, 32),
woosh.Token(woosh.OP, '(', 173, 32, 173, 33),
woosh.Token(woosh.STRING, '"\'timeout\' must be a non-negative number"', 173, 33, 173, 74),
woosh.Token(woosh.OP, ')', 173, 74, 173, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 75, 174, 0),
woosh.Token(woosh.DEDENT, '            ', 174, 0, 174, 12),
woosh.Token(woosh.NAME, 'else', 174, 12, 174, 16),
woosh.Token(woosh.OP, ':', 174, 16, 174, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 17, 175, 0),
woosh.Token(woosh.INDENT, '                ', 175, 0, 175, 16),
woosh.Token(woosh.NAME, 'endtime', 175, 16, 175, 23),
woosh.Token(woosh.OP, '=', 175, 24, 175, 25),
woosh.Token(woosh.NAME, 'time', 175, 26, 175, 30),
woosh.Token(woosh.OP, '(', 175, 30, 175, 31),
woosh.Token(woosh.OP, ')', 175, 31, 175, 32),
woosh.Token(woosh.OP, '+', 175, 33, 175, 34),
woosh.Token(woosh.NAME, 'timeout', 175, 35, 175, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 42, 176, 0),
woosh.Token(woosh.NAME, 'while', 176, 16, 176, 21),
woosh.Token(woosh.NAME, 'not', 176, 22, 176, 25),
woosh.Token(woosh.NAME, 'self', 176, 26, 176, 30),
woosh.Token(woosh.OP, '.', 176, 30, 176, 31),
woosh.Token(woosh.NAME, '_qsize', 176, 31, 176, 37),
woosh.Token(woosh.OP, '(', 176, 37, 176, 38),
woosh.Token(woosh.OP, ')', 176, 38, 176, 39),
woosh.Token(woosh.OP, ':', 176, 39, 176, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 40, 177, 0),
woosh.Token(woosh.INDENT, '                    ', 177, 0, 177, 20),
woosh.Token(woosh.NAME, 'remaining', 177, 20, 177, 29),
woosh.Token(woosh.OP, '=', 177, 30, 177, 31),
woosh.Token(woosh.NAME, 'endtime', 177, 32, 177, 39),
woosh.Token(woosh.OP, '-', 177, 40, 177, 41),
woosh.Token(woosh.NAME, 'time', 177, 42, 177, 46),
woosh.Token(woosh.OP, '(', 177, 46, 177, 47),
woosh.Token(woosh.OP, ')', 177, 47, 177, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 48, 178, 0),
woosh.Token(woosh.NAME, 'if', 178, 20, 178, 22),
woosh.Token(woosh.NAME, 'remaining', 178, 23, 178, 32),
woosh.Token(woosh.OP, '<=', 178, 33, 178, 35),
woosh.Token(woosh.NUMBER, '0.0', 178, 36, 178, 39),
woosh.Token(woosh.OP, ':', 178, 39, 178, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 40, 179, 0),
woosh.Token(woosh.INDENT, '                        ', 179, 0, 179, 24),
woosh.Token(woosh.NAME, 'raise', 179, 24, 179, 29),
woosh.Token(woosh.NAME, 'Empty', 179, 30, 179, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 35, 180, 0),
woosh.Token(woosh.DEDENT, '                    ', 180, 0, 180, 20),
woosh.Token(woosh.NAME, 'self', 180, 20, 180, 24),
woosh.Token(woosh.OP, '.', 180, 24, 180, 25),
woosh.Token(woosh.NAME, 'not_empty', 180, 25, 180, 34),
woosh.Token(woosh.OP, '.', 180, 34, 180, 35),
woosh.Token(woosh.NAME, 'wait', 180, 35, 180, 39),
woosh.Token(woosh.OP, '(', 180, 39, 180, 40),
woosh.Token(woosh.NAME, 'remaining', 180, 40, 180, 49),
woosh.Token(woosh.OP, ')', 180, 49, 180, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 50, 181, 0),
woosh.Token(woosh.DEDENT, '            ', 181, 0, 181, 12),
woosh.Token(woosh.DEDENT, '', 181, 12, 181, 12),
woosh.Token(woosh.NAME, 'item', 181, 12, 181, 16),
woosh.Token(woosh.OP, '=', 181, 17, 181, 18),
woosh.Token(woosh.NAME, 'self', 181, 19, 181, 23),
woosh.Token(woosh.OP, '.', 181, 23, 181, 24),
woosh.Token(woosh.NAME, '_get', 181, 24, 181, 28),
woosh.Token(woosh.OP, '(', 181, 28, 181, 29),
woosh.Token(woosh.OP, ')', 181, 29, 181, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 30, 182, 0),
woosh.Token(woosh.NAME, 'self', 182, 12, 182, 16),
woosh.Token(woosh.OP, '.', 182, 16, 182, 17),
woosh.Token(woosh.NAME, 'not_full', 182, 17, 182, 25),
woosh.Token(woosh.OP, '.', 182, 25, 182, 26),
woosh.Token(woosh.NAME, 'notify', 182, 26, 182, 32),
woosh.Token(woosh.OP, '(', 182, 32, 182, 33),
woosh.Token(woosh.OP, ')', 182, 33, 182, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 34, 183, 0),
woosh.Token(woosh.NAME, 'return', 183, 12, 183, 18),
woosh.Token(woosh.NAME, 'item', 183, 19, 183, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 23, 184, 0),
woosh.Token(woosh.DEDENT, '    ', 185, 0, 185, 4),
woosh.Token(woosh.DEDENT, '', 185, 4, 185, 4),
woosh.Token(woosh.NAME, 'def', 185, 4, 185, 7),
woosh.Token(woosh.NAME, 'put_nowait', 185, 8, 185, 18),
woosh.Token(woosh.OP, '(', 185, 18, 185, 19),
woosh.Token(woosh.NAME, 'self', 185, 19, 185, 23),
woosh.Token(woosh.OP, ',', 185, 23, 185, 24),
woosh.Token(woosh.NAME, 'item', 185, 25, 185, 29),
woosh.Token(woosh.OP, ')', 185, 29, 185, 30),
woosh.Token(woosh.OP, ':', 185, 30, 185, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 31, 186, 0),
woosh.Token(woosh.INDENT, '        ', 186, 0, 186, 8),
woosh.Token(woosh.STRING, "'''Put an item into the queue without blocking.\r\n\r\n        Only enqueue the item if a free slot is immediately available.\r\n        Otherwise raise the Full exception.\r\n        '''", 186, 8, 190, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 11, 191, 0),
woosh.Token(woosh.NAME, 'return', 191, 8, 191, 14),
woosh.Token(woosh.NAME, 'self', 191, 15, 191, 19),
woosh.Token(woosh.OP, '.', 191, 19, 191, 20),
woosh.Token(woosh.NAME, 'put', 191, 20, 191, 23),
woosh.Token(woosh.OP, '(', 191, 23, 191, 24),
woosh.Token(woosh.NAME, 'item', 191, 24, 191, 28),
woosh.Token(woosh.OP, ',', 191, 28, 191, 29),
woosh.Token(woosh.NAME, 'block', 191, 30, 191, 35),
woosh.Token(woosh.OP, '=', 191, 35, 191, 36),
woosh.Token(woosh.NAME, 'False', 191, 36, 191, 41),
woosh.Token(woosh.OP, ')', 191, 41, 191, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 42, 192, 0),
woosh.Token(woosh.DEDENT, '    ', 193, 0, 193, 4),
woosh.Token(woosh.NAME, 'def', 193, 4, 193, 7),
woosh.Token(woosh.NAME, 'get_nowait', 193, 8, 193, 18),
woosh.Token(woosh.OP, '(', 193, 18, 193, 19),
woosh.Token(woosh.NAME, 'self', 193, 19, 193, 23),
woosh.Token(woosh.OP, ')', 193, 23, 193, 24),
woosh.Token(woosh.OP, ':', 193, 24, 193, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 25, 194, 0),
woosh.Token(woosh.INDENT, '        ', 194, 0, 194, 8),
woosh.Token(woosh.STRING, "'''Remove and return an item from the queue without blocking.\r\n\r\n        Only get an item if one is immediately available. Otherwise\r\n        raise the Empty exception.\r\n        '''", 194, 8, 198, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 11, 199, 0),
woosh.Token(woosh.NAME, 'return', 199, 8, 199, 14),
woosh.Token(woosh.NAME, 'self', 199, 15, 199, 19),
woosh.Token(woosh.OP, '.', 199, 19, 199, 20),
woosh.Token(woosh.NAME, 'get', 199, 20, 199, 23),
woosh.Token(woosh.OP, '(', 199, 23, 199, 24),
woosh.Token(woosh.NAME, 'block', 199, 24, 199, 29),
woosh.Token(woosh.OP, '=', 199, 29, 199, 30),
woosh.Token(woosh.NAME, 'False', 199, 30, 199, 35),
woosh.Token(woosh.OP, ')', 199, 35, 199, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 199, 36, 200, 0),
woosh.Token(woosh.COMMENT, '# Override these methods to implement other queue organizations', 201, 4, 201, 67),
woosh.Token(woosh.COMMENT, '# (e.g. stack or priority queue).', 202, 4, 202, 37),
woosh.Token(woosh.COMMENT, '# These will only be called with appropriate locks held', 203, 4, 203, 59),
woosh.Token(woosh.COMMENT, '# Initialize the queue representation', 205, 4, 205, 41),
woosh.Token(woosh.DEDENT, '    ', 206, 0, 206, 4),
woosh.Token(woosh.NAME, 'def', 206, 4, 206, 7),
woosh.Token(woosh.NAME, '_init', 206, 8, 206, 13),
woosh.Token(woosh.OP, '(', 206, 13, 206, 14),
woosh.Token(woosh.NAME, 'self', 206, 14, 206, 18),
woosh.Token(woosh.OP, ',', 206, 18, 206, 19),
woosh.Token(woosh.NAME, 'maxsize', 206, 20, 206, 27),
woosh.Token(woosh.OP, ')', 206, 27, 206, 28),
woosh.Token(woosh.OP, ':', 206, 28, 206, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 29, 207, 0),
woosh.Token(woosh.INDENT, '        ', 207, 0, 207, 8),
woosh.Token(woosh.NAME, 'self', 207, 8, 207, 12),
woosh.Token(woosh.OP, '.', 207, 12, 207, 13),
woosh.Token(woosh.NAME, 'queue', 207, 13, 207, 18),
woosh.Token(woosh.OP, '=', 207, 19, 207, 20),
woosh.Token(woosh.NAME, 'deque', 207, 21, 207, 26),
woosh.Token(woosh.OP, '(', 207, 26, 207, 27),
woosh.Token(woosh.OP, ')', 207, 27, 207, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 28, 208, 0),
woosh.Token(woosh.DEDENT, '    ', 209, 0, 209, 4),
woosh.Token(woosh.NAME, 'def', 209, 4, 209, 7),
woosh.Token(woosh.NAME, '_qsize', 209, 8, 209, 14),
woosh.Token(woosh.OP, '(', 209, 14, 209, 15),
woosh.Token(woosh.NAME, 'self', 209, 15, 209, 19),
woosh.Token(woosh.OP, ')', 209, 19, 209, 20),
woosh.Token(woosh.OP, ':', 209, 20, 209, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 21, 210, 0),
woosh.Token(woosh.INDENT, '        ', 210, 0, 210, 8),
woosh.Token(woosh.NAME, 'return', 210, 8, 210, 14),
woosh.Token(woosh.NAME, 'len', 210, 15, 210, 18),
woosh.Token(woosh.OP, '(', 210, 18, 210, 19),
woosh.Token(woosh.NAME, 'self', 210, 19, 210, 23),
woosh.Token(woosh.OP, '.', 210, 23, 210, 24),
woosh.Token(woosh.NAME, 'queue', 210, 24, 210, 29),
woosh.Token(woosh.OP, ')', 210, 29, 210, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 30, 211, 0),
woosh.Token(woosh.COMMENT, '# Put a new item in the queue', 212, 4, 212, 33),
woosh.Token(woosh.DEDENT, '    ', 213, 0, 213, 4),
woosh.Token(woosh.NAME, 'def', 213, 4, 213, 7),
woosh.Token(woosh.NAME, '_put', 213, 8, 213, 12),
woosh.Token(woosh.OP, '(', 213, 12, 213, 13),
woosh.Token(woosh.NAME, 'self', 213, 13, 213, 17),
woosh.Token(woosh.OP, ',', 213, 17, 213, 18),
woosh.Token(woosh.NAME, 'item', 213, 19, 213, 23),
woosh.Token(woosh.OP, ')', 213, 23, 213, 24),
woosh.Token(woosh.OP, ':', 213, 24, 213, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 25, 214, 0),
woosh.Token(woosh.INDENT, '        ', 214, 0, 214, 8),
woosh.Token(woosh.NAME, 'self', 214, 8, 214, 12),
woosh.Token(woosh.OP, '.', 214, 12, 214, 13),
woosh.Token(woosh.NAME, 'queue', 214, 13, 214, 18),
woosh.Token(woosh.OP, '.', 214, 18, 214, 19),
woosh.Token(woosh.NAME, 'append', 214, 19, 214, 25),
woosh.Token(woosh.OP, '(', 214, 25, 214, 26),
woosh.Token(woosh.NAME, 'item', 214, 26, 214, 30),
woosh.Token(woosh.OP, ')', 214, 30, 214, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 31, 215, 0),
woosh.Token(woosh.COMMENT, '# Get an item from the queue', 216, 4, 216, 32),
woosh.Token(woosh.DEDENT, '    ', 217, 0, 217, 4),
woosh.Token(woosh.NAME, 'def', 217, 4, 217, 7),
woosh.Token(woosh.NAME, '_get', 217, 8, 217, 12),
woosh.Token(woosh.OP, '(', 217, 12, 217, 13),
woosh.Token(woosh.NAME, 'self', 217, 13, 217, 17),
woosh.Token(woosh.OP, ')', 217, 17, 217, 18),
woosh.Token(woosh.OP, ':', 217, 18, 217, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 19, 218, 0),
woosh.Token(woosh.INDENT, '        ', 218, 0, 218, 8),
woosh.Token(woosh.NAME, 'return', 218, 8, 218, 14),
woosh.Token(woosh.NAME, 'self', 218, 15, 218, 19),
woosh.Token(woosh.OP, '.', 218, 19, 218, 20),
woosh.Token(woosh.NAME, 'queue', 218, 20, 218, 25),
woosh.Token(woosh.OP, '.', 218, 25, 218, 26),
woosh.Token(woosh.NAME, 'popleft', 218, 26, 218, 33),
woosh.Token(woosh.OP, '(', 218, 33, 218, 34),
woosh.Token(woosh.OP, ')', 218, 34, 218, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 35, 219, 0),
woosh.Token(woosh.DEDENT, '    ', 220, 0, 220, 4),
woosh.Token(woosh.NAME, '__class_getitem__', 220, 4, 220, 21),
woosh.Token(woosh.OP, '=', 220, 22, 220, 23),
woosh.Token(woosh.NAME, 'classmethod', 220, 24, 220, 35),
woosh.Token(woosh.OP, '(', 220, 35, 220, 36),
woosh.Token(woosh.NAME, 'types', 220, 36, 220, 41),
woosh.Token(woosh.OP, '.', 220, 41, 220, 42),
woosh.Token(woosh.NAME, 'GenericAlias', 220, 42, 220, 54),
woosh.Token(woosh.OP, ')', 220, 54, 220, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 55, 221, 0),
woosh.Token(woosh.DEDENT, '', 223, 0, 223, 0),
woosh.Token(woosh.NAME, 'class', 223, 0, 223, 5),
woosh.Token(woosh.NAME, 'PriorityQueue', 223, 6, 223, 19),
woosh.Token(woosh.OP, '(', 223, 19, 223, 20),
woosh.Token(woosh.NAME, 'Queue', 223, 20, 223, 25),
woosh.Token(woosh.OP, ')', 223, 25, 223, 26),
woosh.Token(woosh.OP, ':', 223, 26, 223, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 27, 224, 0),
woosh.Token(woosh.INDENT, '    ', 224, 0, 224, 4),
woosh.Token(woosh.STRING, "'''Variant of Queue that retrieves open entries in priority order (lowest first).\r\n\r\n    Entries are typically tuples of the form:  (priority number, data).\r\n    '''", 224, 4, 227, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 7, 228, 0),
woosh.Token(woosh.NAME, 'def', 229, 4, 229, 7),
woosh.Token(woosh.NAME, '_init', 229, 8, 229, 13),
woosh.Token(woosh.OP, '(', 229, 13, 229, 14),
woosh.Token(woosh.NAME, 'self', 229, 14, 229, 18),
woosh.Token(woosh.OP, ',', 229, 18, 229, 19),
woosh.Token(woosh.NAME, 'maxsize', 229, 20, 229, 27),
woosh.Token(woosh.OP, ')', 229, 27, 229, 28),
woosh.Token(woosh.OP, ':', 229, 28, 229, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 29, 230, 0),
woosh.Token(woosh.INDENT, '        ', 230, 0, 230, 8),
woosh.Token(woosh.NAME, 'self', 230, 8, 230, 12),
woosh.Token(woosh.OP, '.', 230, 12, 230, 13),
woosh.Token(woosh.NAME, 'queue', 230, 13, 230, 18),
woosh.Token(woosh.OP, '=', 230, 19, 230, 20),
woosh.Token(woosh.OP, '[', 230, 21, 230, 22),
woosh.Token(woosh.OP, ']', 230, 22, 230, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 23, 231, 0),
woosh.Token(woosh.DEDENT, '    ', 232, 0, 232, 4),
woosh.Token(woosh.NAME, 'def', 232, 4, 232, 7),
woosh.Token(woosh.NAME, '_qsize', 232, 8, 232, 14),
woosh.Token(woosh.OP, '(', 232, 14, 232, 15),
woosh.Token(woosh.NAME, 'self', 232, 15, 232, 19),
woosh.Token(woosh.OP, ')', 232, 19, 232, 20),
woosh.Token(woosh.OP, ':', 232, 20, 232, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 21, 233, 0),
woosh.Token(woosh.INDENT, '        ', 233, 0, 233, 8),
woosh.Token(woosh.NAME, 'return', 233, 8, 233, 14),
woosh.Token(woosh.NAME, 'len', 233, 15, 233, 18),
woosh.Token(woosh.OP, '(', 233, 18, 233, 19),
woosh.Token(woosh.NAME, 'self', 233, 19, 233, 23),
woosh.Token(woosh.OP, '.', 233, 23, 233, 24),
woosh.Token(woosh.NAME, 'queue', 233, 24, 233, 29),
woosh.Token(woosh.OP, ')', 233, 29, 233, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 30, 234, 0),
woosh.Token(woosh.DEDENT, '    ', 235, 0, 235, 4),
woosh.Token(woosh.NAME, 'def', 235, 4, 235, 7),
woosh.Token(woosh.NAME, '_put', 235, 8, 235, 12),
woosh.Token(woosh.OP, '(', 235, 12, 235, 13),
woosh.Token(woosh.NAME, 'self', 235, 13, 235, 17),
woosh.Token(woosh.OP, ',', 235, 17, 235, 18),
woosh.Token(woosh.NAME, 'item', 235, 19, 235, 23),
woosh.Token(woosh.OP, ')', 235, 23, 235, 24),
woosh.Token(woosh.OP, ':', 235, 24, 235, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 25, 236, 0),
woosh.Token(woosh.INDENT, '        ', 236, 0, 236, 8),
woosh.Token(woosh.NAME, 'heappush', 236, 8, 236, 16),
woosh.Token(woosh.OP, '(', 236, 16, 236, 17),
woosh.Token(woosh.NAME, 'self', 236, 17, 236, 21),
woosh.Token(woosh.OP, '.', 236, 21, 236, 22),
woosh.Token(woosh.NAME, 'queue', 236, 22, 236, 27),
woosh.Token(woosh.OP, ',', 236, 27, 236, 28),
woosh.Token(woosh.NAME, 'item', 236, 29, 236, 33),
woosh.Token(woosh.OP, ')', 236, 33, 236, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 34, 237, 0),
woosh.Token(woosh.DEDENT, '    ', 238, 0, 238, 4),
woosh.Token(woosh.NAME, 'def', 238, 4, 238, 7),
woosh.Token(woosh.NAME, '_get', 238, 8, 238, 12),
woosh.Token(woosh.OP, '(', 238, 12, 238, 13),
woosh.Token(woosh.NAME, 'self', 238, 13, 238, 17),
woosh.Token(woosh.OP, ')', 238, 17, 238, 18),
woosh.Token(woosh.OP, ':', 238, 18, 238, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 19, 239, 0),
woosh.Token(woosh.INDENT, '        ', 239, 0, 239, 8),
woosh.Token(woosh.NAME, 'return', 239, 8, 239, 14),
woosh.Token(woosh.NAME, 'heappop', 239, 15, 239, 22),
woosh.Token(woosh.OP, '(', 239, 22, 239, 23),
woosh.Token(woosh.NAME, 'self', 239, 23, 239, 27),
woosh.Token(woosh.OP, '.', 239, 27, 239, 28),
woosh.Token(woosh.NAME, 'queue', 239, 28, 239, 33),
woosh.Token(woosh.OP, ')', 239, 33, 239, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 34, 240, 0),
woosh.Token(woosh.DEDENT, '', 242, 0, 242, 0),
woosh.Token(woosh.DEDENT, '', 242, 0, 242, 0),
woosh.Token(woosh.NAME, 'class', 242, 0, 242, 5),
woosh.Token(woosh.NAME, 'LifoQueue', 242, 6, 242, 15),
woosh.Token(woosh.OP, '(', 242, 15, 242, 16),
woosh.Token(woosh.NAME, 'Queue', 242, 16, 242, 21),
woosh.Token(woosh.OP, ')', 242, 21, 242, 22),
woosh.Token(woosh.OP, ':', 242, 22, 242, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 23, 243, 0),
woosh.Token(woosh.INDENT, '    ', 243, 0, 243, 4),
woosh.Token(woosh.STRING, "'''Variant of Queue that retrieves most recently added entries first.'''", 243, 4, 243, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 76, 244, 0),
woosh.Token(woosh.NAME, 'def', 245, 4, 245, 7),
woosh.Token(woosh.NAME, '_init', 245, 8, 245, 13),
woosh.Token(woosh.OP, '(', 245, 13, 245, 14),
woosh.Token(woosh.NAME, 'self', 245, 14, 245, 18),
woosh.Token(woosh.OP, ',', 245, 18, 245, 19),
woosh.Token(woosh.NAME, 'maxsize', 245, 20, 245, 27),
woosh.Token(woosh.OP, ')', 245, 27, 245, 28),
woosh.Token(woosh.OP, ':', 245, 28, 245, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 29, 246, 0),
woosh.Token(woosh.INDENT, '        ', 246, 0, 246, 8),
woosh.Token(woosh.NAME, 'self', 246, 8, 246, 12),
woosh.Token(woosh.OP, '.', 246, 12, 246, 13),
woosh.Token(woosh.NAME, 'queue', 246, 13, 246, 18),
woosh.Token(woosh.OP, '=', 246, 19, 246, 20),
woosh.Token(woosh.OP, '[', 246, 21, 246, 22),
woosh.Token(woosh.OP, ']', 246, 22, 246, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 23, 247, 0),
woosh.Token(woosh.DEDENT, '    ', 248, 0, 248, 4),
woosh.Token(woosh.NAME, 'def', 248, 4, 248, 7),
woosh.Token(woosh.NAME, '_qsize', 248, 8, 248, 14),
woosh.Token(woosh.OP, '(', 248, 14, 248, 15),
woosh.Token(woosh.NAME, 'self', 248, 15, 248, 19),
woosh.Token(woosh.OP, ')', 248, 19, 248, 20),
woosh.Token(woosh.OP, ':', 248, 20, 248, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 21, 249, 0),
woosh.Token(woosh.INDENT, '        ', 249, 0, 249, 8),
woosh.Token(woosh.NAME, 'return', 249, 8, 249, 14),
woosh.Token(woosh.NAME, 'len', 249, 15, 249, 18),
woosh.Token(woosh.OP, '(', 249, 18, 249, 19),
woosh.Token(woosh.NAME, 'self', 249, 19, 249, 23),
woosh.Token(woosh.OP, '.', 249, 23, 249, 24),
woosh.Token(woosh.NAME, 'queue', 249, 24, 249, 29),
woosh.Token(woosh.OP, ')', 249, 29, 249, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 30, 250, 0),
woosh.Token(woosh.DEDENT, '    ', 251, 0, 251, 4),
woosh.Token(woosh.NAME, 'def', 251, 4, 251, 7),
woosh.Token(woosh.NAME, '_put', 251, 8, 251, 12),
woosh.Token(woosh.OP, '(', 251, 12, 251, 13),
woosh.Token(woosh.NAME, 'self', 251, 13, 251, 17),
woosh.Token(woosh.OP, ',', 251, 17, 251, 18),
woosh.Token(woosh.NAME, 'item', 251, 19, 251, 23),
woosh.Token(woosh.OP, ')', 251, 23, 251, 24),
woosh.Token(woosh.OP, ':', 251, 24, 251, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 25, 252, 0),
woosh.Token(woosh.INDENT, '        ', 252, 0, 252, 8),
woosh.Token(woosh.NAME, 'self', 252, 8, 252, 12),
woosh.Token(woosh.OP, '.', 252, 12, 252, 13),
woosh.Token(woosh.NAME, 'queue', 252, 13, 252, 18),
woosh.Token(woosh.OP, '.', 252, 18, 252, 19),
woosh.Token(woosh.NAME, 'append', 252, 19, 252, 25),
woosh.Token(woosh.OP, '(', 252, 25, 252, 26),
woosh.Token(woosh.NAME, 'item', 252, 26, 252, 30),
woosh.Token(woosh.OP, ')', 252, 30, 252, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 31, 253, 0),
woosh.Token(woosh.DEDENT, '    ', 254, 0, 254, 4),
woosh.Token(woosh.NAME, 'def', 254, 4, 254, 7),
woosh.Token(woosh.NAME, '_get', 254, 8, 254, 12),
woosh.Token(woosh.OP, '(', 254, 12, 254, 13),
woosh.Token(woosh.NAME, 'self', 254, 13, 254, 17),
woosh.Token(woosh.OP, ')', 254, 17, 254, 18),
woosh.Token(woosh.OP, ':', 254, 18, 254, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 19, 255, 0),
woosh.Token(woosh.INDENT, '        ', 255, 0, 255, 8),
woosh.Token(woosh.NAME, 'return', 255, 8, 255, 14),
woosh.Token(woosh.NAME, 'self', 255, 15, 255, 19),
woosh.Token(woosh.OP, '.', 255, 19, 255, 20),
woosh.Token(woosh.NAME, 'queue', 255, 20, 255, 25),
woosh.Token(woosh.OP, '.', 255, 25, 255, 26),
woosh.Token(woosh.NAME, 'pop', 255, 26, 255, 29),
woosh.Token(woosh.OP, '(', 255, 29, 255, 30),
woosh.Token(woosh.OP, ')', 255, 30, 255, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 31, 256, 0),
woosh.Token(woosh.DEDENT, '', 258, 0, 258, 0),
woosh.Token(woosh.DEDENT, '', 258, 0, 258, 0),
woosh.Token(woosh.NAME, 'class', 258, 0, 258, 5),
woosh.Token(woosh.NAME, '_PySimpleQueue', 258, 6, 258, 20),
woosh.Token(woosh.OP, ':', 258, 20, 258, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 21, 259, 0),
woosh.Token(woosh.INDENT, '    ', 259, 0, 259, 4),
woosh.Token(woosh.STRING, "'''Simple, unbounded FIFO queue.\r\n\r\n    This pure Python implementation is not reentrant.\r\n    '''", 259, 4, 262, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 7, 263, 0),
woosh.Token(woosh.COMMENT, '# Note: while this pure Python version provides fairness', 263, 4, 263, 60),
woosh.Token(woosh.COMMENT, '# (by using a threading.Semaphore which is itself fair, being based', 264, 4, 264, 71),
woosh.Token(woosh.COMMENT, '#  on threading.Condition), fairness is not part of the API contract.', 265, 4, 265, 73),
woosh.Token(woosh.COMMENT, '# This allows the C version to use a different implementation.', 266, 4, 266, 66),
woosh.Token(woosh.NAME, 'def', 268, 4, 268, 7),
woosh.Token(woosh.NAME, '__init__', 268, 8, 268, 16),
woosh.Token(woosh.OP, '(', 268, 16, 268, 17),
woosh.Token(woosh.NAME, 'self', 268, 17, 268, 21),
woosh.Token(woosh.OP, ')', 268, 21, 268, 22),
woosh.Token(woosh.OP, ':', 268, 22, 268, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 23, 269, 0),
woosh.Token(woosh.INDENT, '        ', 269, 0, 269, 8),
woosh.Token(woosh.NAME, 'self', 269, 8, 269, 12),
woosh.Token(woosh.OP, '.', 269, 12, 269, 13),
woosh.Token(woosh.NAME, '_queue', 269, 13, 269, 19),
woosh.Token(woosh.OP, '=', 269, 20, 269, 21),
woosh.Token(woosh.NAME, 'deque', 269, 22, 269, 27),
woosh.Token(woosh.OP, '(', 269, 27, 269, 28),
woosh.Token(woosh.OP, ')', 269, 28, 269, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 29, 270, 0),
woosh.Token(woosh.NAME, 'self', 270, 8, 270, 12),
woosh.Token(woosh.OP, '.', 270, 12, 270, 13),
woosh.Token(woosh.NAME, '_count', 270, 13, 270, 19),
woosh.Token(woosh.OP, '=', 270, 20, 270, 21),
woosh.Token(woosh.NAME, 'threading', 270, 22, 270, 31),
woosh.Token(woosh.OP, '.', 270, 31, 270, 32),
woosh.Token(woosh.NAME, 'Semaphore', 270, 32, 270, 41),
woosh.Token(woosh.OP, '(', 270, 41, 270, 42),
woosh.Token(woosh.NUMBER, '0', 270, 42, 270, 43),
woosh.Token(woosh.OP, ')', 270, 43, 270, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 44, 271, 0),
woosh.Token(woosh.DEDENT, '    ', 272, 0, 272, 4),
woosh.Token(woosh.NAME, 'def', 272, 4, 272, 7),
woosh.Token(woosh.NAME, 'put', 272, 8, 272, 11),
woosh.Token(woosh.OP, '(', 272, 11, 272, 12),
woosh.Token(woosh.NAME, 'self', 272, 12, 272, 16),
woosh.Token(woosh.OP, ',', 272, 16, 272, 17),
woosh.Token(woosh.NAME, 'item', 272, 18, 272, 22),
woosh.Token(woosh.OP, ',', 272, 22, 272, 23),
woosh.Token(woosh.NAME, 'block', 272, 24, 272, 29),
woosh.Token(woosh.OP, '=', 272, 29, 272, 30),
woosh.Token(woosh.NAME, 'True', 272, 30, 272, 34),
woosh.Token(woosh.OP, ',', 272, 34, 272, 35),
woosh.Token(woosh.NAME, 'timeout', 272, 36, 272, 43),
woosh.Token(woosh.OP, '=', 272, 43, 272, 44),
woosh.Token(woosh.NAME, 'None', 272, 44, 272, 48),
woosh.Token(woosh.OP, ')', 272, 48, 272, 49),
woosh.Token(woosh.OP, ':', 272, 49, 272, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 50, 273, 0),
woosh.Token(woosh.INDENT, '        ', 273, 0, 273, 8),
woosh.Token(woosh.STRING, "'''Put the item on the queue.\r\n\r\n        The optional 'block' and 'timeout' arguments are ignored, as this method\r\n        never blocks.  They are provided for compatibility with the Queue class.\r\n        '''", 273, 8, 277, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 11, 278, 0),
woosh.Token(woosh.NAME, 'self', 278, 8, 278, 12),
woosh.Token(woosh.OP, '.', 278, 12, 278, 13),
woosh.Token(woosh.NAME, '_queue', 278, 13, 278, 19),
woosh.Token(woosh.OP, '.', 278, 19, 278, 20),
woosh.Token(woosh.NAME, 'append', 278, 20, 278, 26),
woosh.Token(woosh.OP, '(', 278, 26, 278, 27),
woosh.Token(woosh.NAME, 'item', 278, 27, 278, 31),
woosh.Token(woosh.OP, ')', 278, 31, 278, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 32, 279, 0),
woosh.Token(woosh.NAME, 'self', 279, 8, 279, 12),
woosh.Token(woosh.OP, '.', 279, 12, 279, 13),
woosh.Token(woosh.NAME, '_count', 279, 13, 279, 19),
woosh.Token(woosh.OP, '.', 279, 19, 279, 20),
woosh.Token(woosh.NAME, 'release', 279, 20, 279, 27),
woosh.Token(woosh.OP, '(', 279, 27, 279, 28),
woosh.Token(woosh.OP, ')', 279, 28, 279, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 29, 280, 0),
woosh.Token(woosh.DEDENT, '    ', 281, 0, 281, 4),
woosh.Token(woosh.NAME, 'def', 281, 4, 281, 7),
woosh.Token(woosh.NAME, 'get', 281, 8, 281, 11),
woosh.Token(woosh.OP, '(', 281, 11, 281, 12),
woosh.Token(woosh.NAME, 'self', 281, 12, 281, 16),
woosh.Token(woosh.OP, ',', 281, 16, 281, 17),
woosh.Token(woosh.NAME, 'block', 281, 18, 281, 23),
woosh.Token(woosh.OP, '=', 281, 23, 281, 24),
woosh.Token(woosh.NAME, 'True', 281, 24, 281, 28),
woosh.Token(woosh.OP, ',', 281, 28, 281, 29),
woosh.Token(woosh.NAME, 'timeout', 281, 30, 281, 37),
woosh.Token(woosh.OP, '=', 281, 37, 281, 38),
woosh.Token(woosh.NAME, 'None', 281, 38, 281, 42),
woosh.Token(woosh.OP, ')', 281, 42, 281, 43),
woosh.Token(woosh.OP, ':', 281, 43, 281, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 44, 282, 0),
woosh.Token(woosh.INDENT, '        ', 282, 0, 282, 8),
woosh.Token(woosh.STRING, "'''Remove and return an item from the queue.\r\n\r\n        If optional args 'block' is true and 'timeout' is None (the default),\r\n        block if necessary until an item is available. If 'timeout' is\r\n        a non-negative number, it blocks at most 'timeout' seconds and raises\r\n        the Empty exception if no item was available within that time.\r\n        Otherwise ('block' is false), return an item if one is immediately\r\n        available, else raise the Empty exception ('timeout' is ignored\r\n        in that case).\r\n        '''", 282, 8, 291, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 11, 292, 0),
woosh.Token(woosh.NAME, 'if', 292, 8, 292, 10),
woosh.Token(woosh.NAME, 'timeout', 292, 11, 292, 18),
woosh.Token(woosh.NAME, 'is', 292, 19, 292, 21),
woosh.Token(woosh.NAME, 'not', 292, 22, 292, 25),
woosh.Token(woosh.NAME, 'None', 292, 26, 292, 30),
woosh.Token(woosh.NAME, 'and', 292, 31, 292, 34),
woosh.Token(woosh.NAME, 'timeout', 292, 35, 292, 42),
woosh.Token(woosh.OP, '<', 292, 43, 292, 44),
woosh.Token(woosh.NUMBER, '0', 292, 45, 292, 46),
woosh.Token(woosh.OP, ':', 292, 46, 292, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 47, 293, 0),
woosh.Token(woosh.INDENT, '            ', 293, 0, 293, 12),
woosh.Token(woosh.NAME, 'raise', 293, 12, 293, 17),
woosh.Token(woosh.NAME, 'ValueError', 293, 18, 293, 28),
woosh.Token(woosh.OP, '(', 293, 28, 293, 29),
woosh.Token(woosh.STRING, '"\'timeout\' must be a non-negative number"', 293, 29, 293, 70),
woosh.Token(woosh.OP, ')', 293, 70, 293, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 71, 294, 0),
woosh.Token(woosh.DEDENT, '        ', 294, 0, 294, 8),
woosh.Token(woosh.NAME, 'if', 294, 8, 294, 10),
woosh.Token(woosh.NAME, 'not', 294, 11, 294, 14),
woosh.Token(woosh.NAME, 'self', 294, 15, 294, 19),
woosh.Token(woosh.OP, '.', 294, 19, 294, 20),
woosh.Token(woosh.NAME, '_count', 294, 20, 294, 26),
woosh.Token(woosh.OP, '.', 294, 26, 294, 27),
woosh.Token(woosh.NAME, 'acquire', 294, 27, 294, 34),
woosh.Token(woosh.OP, '(', 294, 34, 294, 35),
woosh.Token(woosh.NAME, 'block', 294, 35, 294, 40),
woosh.Token(woosh.OP, ',', 294, 40, 294, 41),
woosh.Token(woosh.NAME, 'timeout', 294, 42, 294, 49),
woosh.Token(woosh.OP, ')', 294, 49, 294, 50),
woosh.Token(woosh.OP, ':', 294, 50, 294, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 51, 295, 0),
woosh.Token(woosh.INDENT, '            ', 295, 0, 295, 12),
woosh.Token(woosh.NAME, 'raise', 295, 12, 295, 17),
woosh.Token(woosh.NAME, 'Empty', 295, 18, 295, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 295, 23, 296, 0),
woosh.Token(woosh.DEDENT, '        ', 296, 0, 296, 8),
woosh.Token(woosh.NAME, 'return', 296, 8, 296, 14),
woosh.Token(woosh.NAME, 'self', 296, 15, 296, 19),
woosh.Token(woosh.OP, '.', 296, 19, 296, 20),
woosh.Token(woosh.NAME, '_queue', 296, 20, 296, 26),
woosh.Token(woosh.OP, '.', 296, 26, 296, 27),
woosh.Token(woosh.NAME, 'popleft', 296, 27, 296, 34),
woosh.Token(woosh.OP, '(', 296, 34, 296, 35),
woosh.Token(woosh.OP, ')', 296, 35, 296, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 296, 36, 297, 0),
woosh.Token(woosh.DEDENT, '    ', 298, 0, 298, 4),
woosh.Token(woosh.NAME, 'def', 298, 4, 298, 7),
woosh.Token(woosh.NAME, 'put_nowait', 298, 8, 298, 18),
woosh.Token(woosh.OP, '(', 298, 18, 298, 19),
woosh.Token(woosh.NAME, 'self', 298, 19, 298, 23),
woosh.Token(woosh.OP, ',', 298, 23, 298, 24),
woosh.Token(woosh.NAME, 'item', 298, 25, 298, 29),
woosh.Token(woosh.OP, ')', 298, 29, 298, 30),
woosh.Token(woosh.OP, ':', 298, 30, 298, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 31, 299, 0),
woosh.Token(woosh.INDENT, '        ', 299, 0, 299, 8),
woosh.Token(woosh.STRING, "'''Put an item into the queue without blocking.\r\n\r\n        This is exactly equivalent to `put(item)` and is only provided\r\n        for compatibility with the Queue class.\r\n        '''", 299, 8, 303, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 11, 304, 0),
woosh.Token(woosh.NAME, 'return', 304, 8, 304, 14),
woosh.Token(woosh.NAME, 'self', 304, 15, 304, 19),
woosh.Token(woosh.OP, '.', 304, 19, 304, 20),
woosh.Token(woosh.NAME, 'put', 304, 20, 304, 23),
woosh.Token(woosh.OP, '(', 304, 23, 304, 24),
woosh.Token(woosh.NAME, 'item', 304, 24, 304, 28),
woosh.Token(woosh.OP, ',', 304, 28, 304, 29),
woosh.Token(woosh.NAME, 'block', 304, 30, 304, 35),
woosh.Token(woosh.OP, '=', 304, 35, 304, 36),
woosh.Token(woosh.NAME, 'False', 304, 36, 304, 41),
woosh.Token(woosh.OP, ')', 304, 41, 304, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 42, 305, 0),
woosh.Token(woosh.DEDENT, '    ', 306, 0, 306, 4),
woosh.Token(woosh.NAME, 'def', 306, 4, 306, 7),
woosh.Token(woosh.NAME, 'get_nowait', 306, 8, 306, 18),
woosh.Token(woosh.OP, '(', 306, 18, 306, 19),
woosh.Token(woosh.NAME, 'self', 306, 19, 306, 23),
woosh.Token(woosh.OP, ')', 306, 23, 306, 24),
woosh.Token(woosh.OP, ':', 306, 24, 306, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 25, 307, 0),
woosh.Token(woosh.INDENT, '        ', 307, 0, 307, 8),
woosh.Token(woosh.STRING, "'''Remove and return an item from the queue without blocking.\r\n\r\n        Only get an item if one is immediately available. Otherwise\r\n        raise the Empty exception.\r\n        '''", 307, 8, 311, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 11, 312, 0),
woosh.Token(woosh.NAME, 'return', 312, 8, 312, 14),
woosh.Token(woosh.NAME, 'self', 312, 15, 312, 19),
woosh.Token(woosh.OP, '.', 312, 19, 312, 20),
woosh.Token(woosh.NAME, 'get', 312, 20, 312, 23),
woosh.Token(woosh.OP, '(', 312, 23, 312, 24),
woosh.Token(woosh.NAME, 'block', 312, 24, 312, 29),
woosh.Token(woosh.OP, '=', 312, 29, 312, 30),
woosh.Token(woosh.NAME, 'False', 312, 30, 312, 35),
woosh.Token(woosh.OP, ')', 312, 35, 312, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 36, 313, 0),
woosh.Token(woosh.DEDENT, '    ', 314, 0, 314, 4),
woosh.Token(woosh.NAME, 'def', 314, 4, 314, 7),
woosh.Token(woosh.NAME, 'empty', 314, 8, 314, 13),
woosh.Token(woosh.OP, '(', 314, 13, 314, 14),
woosh.Token(woosh.NAME, 'self', 314, 14, 314, 18),
woosh.Token(woosh.OP, ')', 314, 18, 314, 19),
woosh.Token(woosh.OP, ':', 314, 19, 314, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 20, 315, 0),
woosh.Token(woosh.INDENT, '        ', 315, 0, 315, 8),
woosh.Token(woosh.STRING, "'''Return True if the queue is empty, False otherwise (not reliable!).'''", 315, 8, 315, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 81, 316, 0),
woosh.Token(woosh.NAME, 'return', 316, 8, 316, 14),
woosh.Token(woosh.NAME, 'len', 316, 15, 316, 18),
woosh.Token(woosh.OP, '(', 316, 18, 316, 19),
woosh.Token(woosh.NAME, 'self', 316, 19, 316, 23),
woosh.Token(woosh.OP, '.', 316, 23, 316, 24),
woosh.Token(woosh.NAME, '_queue', 316, 24, 316, 30),
woosh.Token(woosh.OP, ')', 316, 30, 316, 31),
woosh.Token(woosh.OP, '==', 316, 32, 316, 34),
woosh.Token(woosh.NUMBER, '0', 316, 35, 316, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 36, 317, 0),
woosh.Token(woosh.DEDENT, '    ', 318, 0, 318, 4),
woosh.Token(woosh.NAME, 'def', 318, 4, 318, 7),
woosh.Token(woosh.NAME, 'qsize', 318, 8, 318, 13),
woosh.Token(woosh.OP, '(', 318, 13, 318, 14),
woosh.Token(woosh.NAME, 'self', 318, 14, 318, 18),
woosh.Token(woosh.OP, ')', 318, 18, 318, 19),
woosh.Token(woosh.OP, ':', 318, 19, 318, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 20, 319, 0),
woosh.Token(woosh.INDENT, '        ', 319, 0, 319, 8),
woosh.Token(woosh.STRING, "'''Return the approximate size of the queue (not reliable!).'''", 319, 8, 319, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 71, 320, 0),
woosh.Token(woosh.NAME, 'return', 320, 8, 320, 14),
woosh.Token(woosh.NAME, 'len', 320, 15, 320, 18),
woosh.Token(woosh.OP, '(', 320, 18, 320, 19),
woosh.Token(woosh.NAME, 'self', 320, 19, 320, 23),
woosh.Token(woosh.OP, '.', 320, 23, 320, 24),
woosh.Token(woosh.NAME, '_queue', 320, 24, 320, 30),
woosh.Token(woosh.OP, ')', 320, 30, 320, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 31, 321, 0),
woosh.Token(woosh.DEDENT, '    ', 322, 0, 322, 4),
woosh.Token(woosh.NAME, '__class_getitem__', 322, 4, 322, 21),
woosh.Token(woosh.OP, '=', 322, 22, 322, 23),
woosh.Token(woosh.NAME, 'classmethod', 322, 24, 322, 35),
woosh.Token(woosh.OP, '(', 322, 35, 322, 36),
woosh.Token(woosh.NAME, 'types', 322, 36, 322, 41),
woosh.Token(woosh.OP, '.', 322, 41, 322, 42),
woosh.Token(woosh.NAME, 'GenericAlias', 322, 42, 322, 54),
woosh.Token(woosh.OP, ')', 322, 54, 322, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 55, 323, 0),
woosh.Token(woosh.DEDENT, '', 325, 0, 325, 0),
woosh.Token(woosh.NAME, 'if', 325, 0, 325, 2),
woosh.Token(woosh.NAME, 'SimpleQueue', 325, 3, 325, 14),
woosh.Token(woosh.NAME, 'is', 325, 15, 325, 17),
woosh.Token(woosh.NAME, 'None', 325, 18, 325, 22),
woosh.Token(woosh.OP, ':', 325, 22, 325, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 23, 326, 0),
woosh.Token(woosh.INDENT, '    ', 326, 0, 326, 4),
woosh.Token(woosh.NAME, 'SimpleQueue', 326, 4, 326, 15),
woosh.Token(woosh.OP, '=', 326, 16, 326, 17),
woosh.Token(woosh.NAME, '_PySimpleQueue', 326, 18, 326, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 32, 327, 0),
woosh.Token(woosh.DEDENT, '', 327, 0, 327, 0),
woosh.Token(woosh.EOF, '', 327, 0, 327, 0),
]
