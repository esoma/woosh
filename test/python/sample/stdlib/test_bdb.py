
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/bdb.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""Debugger basics"""', 1, 0, 1, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1, 21, 2, 0),
woosh.Token(woosh.NAME, 'import', 3, 0, 3, 6),
woosh.Token(woosh.NAME, 'fnmatch', 3, 7, 3, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 3, 14, 4, 0),
woosh.Token(woosh.NAME, 'import', 4, 0, 4, 6),
woosh.Token(woosh.NAME, 'sys', 4, 7, 4, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 4, 10, 5, 0),
woosh.Token(woosh.NAME, 'import', 5, 0, 5, 6),
woosh.Token(woosh.NAME, 'os', 5, 7, 5, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 5, 9, 6, 0),
woosh.Token(woosh.NAME, 'from', 6, 0, 6, 4),
woosh.Token(woosh.NAME, 'inspect', 6, 5, 6, 12),
woosh.Token(woosh.NAME, 'import', 6, 13, 6, 19),
woosh.Token(woosh.NAME, 'CO_GENERATOR', 6, 20, 6, 32),
woosh.Token(woosh.OP, ',', 6, 32, 6, 33),
woosh.Token(woosh.NAME, 'CO_COROUTINE', 6, 34, 6, 46),
woosh.Token(woosh.OP, ',', 6, 46, 6, 47),
woosh.Token(woosh.NAME, 'CO_ASYNC_GENERATOR', 6, 48, 6, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 6, 66, 7, 0),
woosh.Token(woosh.NAME, '__all__', 8, 0, 8, 7),
woosh.Token(woosh.OP, '=', 8, 8, 8, 9),
woosh.Token(woosh.OP, '[', 8, 10, 8, 11),
woosh.Token(woosh.STRING, '"BdbQuit"', 8, 11, 8, 20),
woosh.Token(woosh.OP, ',', 8, 20, 8, 21),
woosh.Token(woosh.STRING, '"Bdb"', 8, 22, 8, 27),
woosh.Token(woosh.OP, ',', 8, 27, 8, 28),
woosh.Token(woosh.STRING, '"Breakpoint"', 8, 29, 8, 41),
woosh.Token(woosh.OP, ']', 8, 41, 8, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 8, 42, 9, 0),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 10, 0, 10, 29),
woosh.Token(woosh.OP, '=', 10, 30, 10, 31),
woosh.Token(woosh.NAME, 'CO_GENERATOR', 10, 32, 10, 44),
woosh.Token(woosh.OP, '|', 10, 45, 10, 46),
woosh.Token(woosh.NAME, 'CO_COROUTINE', 10, 47, 10, 59),
woosh.Token(woosh.OP, '|', 10, 60, 10, 61),
woosh.Token(woosh.NAME, 'CO_ASYNC_GENERATOR', 10, 62, 10, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 10, 80, 11, 0),
woosh.Token(woosh.NAME, 'class', 13, 0, 13, 5),
woosh.Token(woosh.NAME, 'BdbQuit', 13, 6, 13, 13),
woosh.Token(woosh.OP, '(', 13, 13, 13, 14),
woosh.Token(woosh.NAME, 'Exception', 13, 14, 13, 23),
woosh.Token(woosh.OP, ')', 13, 23, 13, 24),
woosh.Token(woosh.OP, ':', 13, 24, 13, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 13, 25, 14, 0),
woosh.Token(woosh.INDENT, '    ', 14, 0, 14, 4),
woosh.Token(woosh.STRING, '"""Exception to give up completely."""', 14, 4, 14, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 14, 42, 15, 0),
woosh.Token(woosh.DEDENT, '', 17, 0, 17, 0),
woosh.Token(woosh.NAME, 'class', 17, 0, 17, 5),
woosh.Token(woosh.NAME, 'Bdb', 17, 6, 17, 9),
woosh.Token(woosh.OP, ':', 17, 9, 17, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 17, 10, 18, 0),
woosh.Token(woosh.INDENT, '    ', 18, 0, 18, 4),
woosh.Token(woosh.STRING, '"""Generic Python debugger base class.\r\n\r\n    This class takes care of details of the trace facility;\r\n    a derived class should implement user interaction.\r\n    The standard debugger class (pdb.Pdb) is an example.\r\n\r\n    The optional skip argument must be an iterable of glob-style\r\n    module name patterns.  The debugger will not step into frames\r\n    that originate in a module that matches one of these patterns.\r\n    Whether a frame is considered to originate in a certain module\r\n    is determined by the __name__ in the frame globals.\r\n    """', 18, 4, 29, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 7, 30, 0),
woosh.Token(woosh.NAME, 'def', 31, 4, 31, 7),
woosh.Token(woosh.NAME, '__init__', 31, 8, 31, 16),
woosh.Token(woosh.OP, '(', 31, 16, 31, 17),
woosh.Token(woosh.NAME, 'self', 31, 17, 31, 21),
woosh.Token(woosh.OP, ',', 31, 21, 31, 22),
woosh.Token(woosh.NAME, 'skip', 31, 23, 31, 27),
woosh.Token(woosh.OP, '=', 31, 27, 31, 28),
woosh.Token(woosh.NAME, 'None', 31, 28, 31, 32),
woosh.Token(woosh.OP, ')', 31, 32, 31, 33),
woosh.Token(woosh.OP, ':', 31, 33, 31, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 31, 34, 32, 0),
woosh.Token(woosh.INDENT, '        ', 32, 0, 32, 8),
woosh.Token(woosh.NAME, 'self', 32, 8, 32, 12),
woosh.Token(woosh.OP, '.', 32, 12, 32, 13),
woosh.Token(woosh.NAME, 'skip', 32, 13, 32, 17),
woosh.Token(woosh.OP, '=', 32, 18, 32, 19),
woosh.Token(woosh.NAME, 'set', 32, 20, 32, 23),
woosh.Token(woosh.OP, '(', 32, 23, 32, 24),
woosh.Token(woosh.NAME, 'skip', 32, 24, 32, 28),
woosh.Token(woosh.OP, ')', 32, 28, 32, 29),
woosh.Token(woosh.NAME, 'if', 32, 30, 32, 32),
woosh.Token(woosh.NAME, 'skip', 32, 33, 32, 37),
woosh.Token(woosh.NAME, 'else', 32, 38, 32, 42),
woosh.Token(woosh.NAME, 'None', 32, 43, 32, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 32, 47, 33, 0),
woosh.Token(woosh.NAME, 'self', 33, 8, 33, 12),
woosh.Token(woosh.OP, '.', 33, 12, 33, 13),
woosh.Token(woosh.NAME, 'breaks', 33, 13, 33, 19),
woosh.Token(woosh.OP, '=', 33, 20, 33, 21),
woosh.Token(woosh.OP, '{', 33, 22, 33, 23),
woosh.Token(woosh.OP, '}', 33, 23, 33, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 33, 24, 34, 0),
woosh.Token(woosh.NAME, 'self', 34, 8, 34, 12),
woosh.Token(woosh.OP, '.', 34, 12, 34, 13),
woosh.Token(woosh.NAME, 'fncache', 34, 13, 34, 20),
woosh.Token(woosh.OP, '=', 34, 21, 34, 22),
woosh.Token(woosh.OP, '{', 34, 23, 34, 24),
woosh.Token(woosh.OP, '}', 34, 24, 34, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 34, 25, 35, 0),
woosh.Token(woosh.NAME, 'self', 35, 8, 35, 12),
woosh.Token(woosh.OP, '.', 35, 12, 35, 13),
woosh.Token(woosh.NAME, 'frame_returning', 35, 13, 35, 28),
woosh.Token(woosh.OP, '=', 35, 29, 35, 30),
woosh.Token(woosh.NAME, 'None', 35, 31, 35, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 35, 35, 36, 0),
woosh.Token(woosh.DEDENT, '    ', 37, 0, 37, 4),
woosh.Token(woosh.NAME, 'def', 37, 4, 37, 7),
woosh.Token(woosh.NAME, 'canonic', 37, 8, 37, 15),
woosh.Token(woosh.OP, '(', 37, 15, 37, 16),
woosh.Token(woosh.NAME, 'self', 37, 16, 37, 20),
woosh.Token(woosh.OP, ',', 37, 20, 37, 21),
woosh.Token(woosh.NAME, 'filename', 37, 22, 37, 30),
woosh.Token(woosh.OP, ')', 37, 30, 37, 31),
woosh.Token(woosh.OP, ':', 37, 31, 37, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 37, 32, 38, 0),
woosh.Token(woosh.INDENT, '        ', 38, 0, 38, 8),
woosh.Token(woosh.STRING, '"""Return canonical form of filename.\r\n\r\n        For real filenames, the canonical form is a case-normalized (on\r\n        case insensitive filesystems) absolute path.  \'Filenames\' with\r\n        angle brackets, such as "<stdin>", generated in interactive\r\n        mode, are returned unchanged.\r\n        """', 38, 8, 44, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 44, 11, 45, 0),
woosh.Token(woosh.NAME, 'if', 45, 8, 45, 10),
woosh.Token(woosh.NAME, 'filename', 45, 11, 45, 19),
woosh.Token(woosh.OP, '==', 45, 20, 45, 22),
woosh.Token(woosh.STRING, '"<"', 45, 23, 45, 26),
woosh.Token(woosh.OP, '+', 45, 27, 45, 28),
woosh.Token(woosh.NAME, 'filename', 45, 29, 45, 37),
woosh.Token(woosh.OP, '[', 45, 37, 45, 38),
woosh.Token(woosh.NUMBER, '1', 45, 38, 45, 39),
woosh.Token(woosh.OP, ':', 45, 39, 45, 40),
woosh.Token(woosh.OP, '-', 45, 40, 45, 41),
woosh.Token(woosh.NUMBER, '1', 45, 41, 45, 42),
woosh.Token(woosh.OP, ']', 45, 42, 45, 43),
woosh.Token(woosh.OP, '+', 45, 44, 45, 45),
woosh.Token(woosh.STRING, '">"', 45, 46, 45, 49),
woosh.Token(woosh.OP, ':', 45, 49, 45, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 45, 50, 46, 0),
woosh.Token(woosh.INDENT, '            ', 46, 0, 46, 12),
woosh.Token(woosh.NAME, 'return', 46, 12, 46, 18),
woosh.Token(woosh.NAME, 'filename', 46, 19, 46, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 27, 47, 0),
woosh.Token(woosh.DEDENT, '        ', 47, 0, 47, 8),
woosh.Token(woosh.NAME, 'canonic', 47, 8, 47, 15),
woosh.Token(woosh.OP, '=', 47, 16, 47, 17),
woosh.Token(woosh.NAME, 'self', 47, 18, 47, 22),
woosh.Token(woosh.OP, '.', 47, 22, 47, 23),
woosh.Token(woosh.NAME, 'fncache', 47, 23, 47, 30),
woosh.Token(woosh.OP, '.', 47, 30, 47, 31),
woosh.Token(woosh.NAME, 'get', 47, 31, 47, 34),
woosh.Token(woosh.OP, '(', 47, 34, 47, 35),
woosh.Token(woosh.NAME, 'filename', 47, 35, 47, 43),
woosh.Token(woosh.OP, ')', 47, 43, 47, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 44, 48, 0),
woosh.Token(woosh.NAME, 'if', 48, 8, 48, 10),
woosh.Token(woosh.NAME, 'not', 48, 11, 48, 14),
woosh.Token(woosh.NAME, 'canonic', 48, 15, 48, 22),
woosh.Token(woosh.OP, ':', 48, 22, 48, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 48, 23, 49, 0),
woosh.Token(woosh.INDENT, '            ', 49, 0, 49, 12),
woosh.Token(woosh.NAME, 'canonic', 49, 12, 49, 19),
woosh.Token(woosh.OP, '=', 49, 20, 49, 21),
woosh.Token(woosh.NAME, 'os', 49, 22, 49, 24),
woosh.Token(woosh.OP, '.', 49, 24, 49, 25),
woosh.Token(woosh.NAME, 'path', 49, 25, 49, 29),
woosh.Token(woosh.OP, '.', 49, 29, 49, 30),
woosh.Token(woosh.NAME, 'abspath', 49, 30, 49, 37),
woosh.Token(woosh.OP, '(', 49, 37, 49, 38),
woosh.Token(woosh.NAME, 'filename', 49, 38, 49, 46),
woosh.Token(woosh.OP, ')', 49, 46, 49, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 49, 47, 50, 0),
woosh.Token(woosh.NAME, 'canonic', 50, 12, 50, 19),
woosh.Token(woosh.OP, '=', 50, 20, 50, 21),
woosh.Token(woosh.NAME, 'os', 50, 22, 50, 24),
woosh.Token(woosh.OP, '.', 50, 24, 50, 25),
woosh.Token(woosh.NAME, 'path', 50, 25, 50, 29),
woosh.Token(woosh.OP, '.', 50, 29, 50, 30),
woosh.Token(woosh.NAME, 'normcase', 50, 30, 50, 38),
woosh.Token(woosh.OP, '(', 50, 38, 50, 39),
woosh.Token(woosh.NAME, 'canonic', 50, 39, 50, 46),
woosh.Token(woosh.OP, ')', 50, 46, 50, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 50, 47, 51, 0),
woosh.Token(woosh.NAME, 'self', 51, 12, 51, 16),
woosh.Token(woosh.OP, '.', 51, 16, 51, 17),
woosh.Token(woosh.NAME, 'fncache', 51, 17, 51, 24),
woosh.Token(woosh.OP, '[', 51, 24, 51, 25),
woosh.Token(woosh.NAME, 'filename', 51, 25, 51, 33),
woosh.Token(woosh.OP, ']', 51, 33, 51, 34),
woosh.Token(woosh.OP, '=', 51, 35, 51, 36),
woosh.Token(woosh.NAME, 'canonic', 51, 37, 51, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 51, 44, 52, 0),
woosh.Token(woosh.DEDENT, '        ', 52, 0, 52, 8),
woosh.Token(woosh.NAME, 'return', 52, 8, 52, 14),
woosh.Token(woosh.NAME, 'canonic', 52, 15, 52, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 22, 53, 0),
woosh.Token(woosh.DEDENT, '    ', 54, 0, 54, 4),
woosh.Token(woosh.NAME, 'def', 54, 4, 54, 7),
woosh.Token(woosh.NAME, 'reset', 54, 8, 54, 13),
woosh.Token(woosh.OP, '(', 54, 13, 54, 14),
woosh.Token(woosh.NAME, 'self', 54, 14, 54, 18),
woosh.Token(woosh.OP, ')', 54, 18, 54, 19),
woosh.Token(woosh.OP, ':', 54, 19, 54, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 20, 55, 0),
woosh.Token(woosh.INDENT, '        ', 55, 0, 55, 8),
woosh.Token(woosh.STRING, '"""Set values of attributes as ready to start debugging."""', 55, 8, 55, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 67, 56, 0),
woosh.Token(woosh.NAME, 'import', 56, 8, 56, 14),
woosh.Token(woosh.NAME, 'linecache', 56, 15, 56, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 56, 24, 57, 0),
woosh.Token(woosh.NAME, 'linecache', 57, 8, 57, 17),
woosh.Token(woosh.OP, '.', 57, 17, 57, 18),
woosh.Token(woosh.NAME, 'checkcache', 57, 18, 57, 28),
woosh.Token(woosh.OP, '(', 57, 28, 57, 29),
woosh.Token(woosh.OP, ')', 57, 29, 57, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 30, 58, 0),
woosh.Token(woosh.NAME, 'self', 58, 8, 58, 12),
woosh.Token(woosh.OP, '.', 58, 12, 58, 13),
woosh.Token(woosh.NAME, 'botframe', 58, 13, 58, 21),
woosh.Token(woosh.OP, '=', 58, 22, 58, 23),
woosh.Token(woosh.NAME, 'None', 58, 24, 58, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 28, 59, 0),
woosh.Token(woosh.NAME, 'self', 59, 8, 59, 12),
woosh.Token(woosh.OP, '.', 59, 12, 59, 13),
woosh.Token(woosh.NAME, '_set_stopinfo', 59, 13, 59, 26),
woosh.Token(woosh.OP, '(', 59, 26, 59, 27),
woosh.Token(woosh.NAME, 'None', 59, 27, 59, 31),
woosh.Token(woosh.OP, ',', 59, 31, 59, 32),
woosh.Token(woosh.NAME, 'None', 59, 33, 59, 37),
woosh.Token(woosh.OP, ')', 59, 37, 59, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 38, 60, 0),
woosh.Token(woosh.DEDENT, '    ', 61, 0, 61, 4),
woosh.Token(woosh.NAME, 'def', 61, 4, 61, 7),
woosh.Token(woosh.NAME, 'trace_dispatch', 61, 8, 61, 22),
woosh.Token(woosh.OP, '(', 61, 22, 61, 23),
woosh.Token(woosh.NAME, 'self', 61, 23, 61, 27),
woosh.Token(woosh.OP, ',', 61, 27, 61, 28),
woosh.Token(woosh.NAME, 'frame', 61, 29, 61, 34),
woosh.Token(woosh.OP, ',', 61, 34, 61, 35),
woosh.Token(woosh.NAME, 'event', 61, 36, 61, 41),
woosh.Token(woosh.OP, ',', 61, 41, 61, 42),
woosh.Token(woosh.NAME, 'arg', 61, 43, 61, 46),
woosh.Token(woosh.OP, ')', 61, 46, 61, 47),
woosh.Token(woosh.OP, ':', 61, 47, 61, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 48, 62, 0),
woosh.Token(woosh.INDENT, '        ', 62, 0, 62, 8),
woosh.Token(woosh.STRING, '"""Dispatch a trace function for debugged frames based on the event.\r\n\r\n        This function is installed as the trace function for debugged\r\n        frames. Its return value is the new trace function, which is\r\n        usually itself. The default implementation decides how to\r\n        dispatch a frame, depending on the type of event (passed in as a\r\n        string) that is about to be executed.\r\n\r\n        The event can be one of the following:\r\n            line: A new line of code is going to be executed.\r\n            call: A function is about to be called or another code block\r\n                  is entered.\r\n            return: A function or other code block is about to return.\r\n            exception: An exception has occurred.\r\n            c_call: A C function is about to be called.\r\n            c_return: A C function has returned.\r\n            c_exception: A C function has raised an exception.\r\n\r\n        For the Python events, specialized functions (see the dispatch_*()\r\n        methods) are called.  For the C events, no action is taken.\r\n\r\n        The arg parameter depends on the previous event.\r\n        """', 62, 8, 84, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 84, 11, 85, 0),
woosh.Token(woosh.NAME, 'if', 85, 8, 85, 10),
woosh.Token(woosh.NAME, 'self', 85, 11, 85, 15),
woosh.Token(woosh.OP, '.', 85, 15, 85, 16),
woosh.Token(woosh.NAME, 'quitting', 85, 16, 85, 24),
woosh.Token(woosh.OP, ':', 85, 24, 85, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 85, 25, 86, 0),
woosh.Token(woosh.INDENT, '            ', 86, 0, 86, 12),
woosh.Token(woosh.NAME, 'return', 86, 12, 86, 18),
woosh.Token(woosh.COMMENT, '# None', 86, 19, 86, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 86, 25, 87, 0),
woosh.Token(woosh.DEDENT, '        ', 87, 0, 87, 8),
woosh.Token(woosh.NAME, 'if', 87, 8, 87, 10),
woosh.Token(woosh.NAME, 'event', 87, 11, 87, 16),
woosh.Token(woosh.OP, '==', 87, 17, 87, 19),
woosh.Token(woosh.STRING, "'line'", 87, 20, 87, 26),
woosh.Token(woosh.OP, ':', 87, 26, 87, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 27, 88, 0),
woosh.Token(woosh.INDENT, '            ', 88, 0, 88, 12),
woosh.Token(woosh.NAME, 'return', 88, 12, 88, 18),
woosh.Token(woosh.NAME, 'self', 88, 19, 88, 23),
woosh.Token(woosh.OP, '.', 88, 23, 88, 24),
woosh.Token(woosh.NAME, 'dispatch_line', 88, 24, 88, 37),
woosh.Token(woosh.OP, '(', 88, 37, 88, 38),
woosh.Token(woosh.NAME, 'frame', 88, 38, 88, 43),
woosh.Token(woosh.OP, ')', 88, 43, 88, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 44, 89, 0),
woosh.Token(woosh.DEDENT, '        ', 89, 0, 89, 8),
woosh.Token(woosh.NAME, 'if', 89, 8, 89, 10),
woosh.Token(woosh.NAME, 'event', 89, 11, 89, 16),
woosh.Token(woosh.OP, '==', 89, 17, 89, 19),
woosh.Token(woosh.STRING, "'call'", 89, 20, 89, 26),
woosh.Token(woosh.OP, ':', 89, 26, 89, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 89, 27, 90, 0),
woosh.Token(woosh.INDENT, '            ', 90, 0, 90, 12),
woosh.Token(woosh.NAME, 'return', 90, 12, 90, 18),
woosh.Token(woosh.NAME, 'self', 90, 19, 90, 23),
woosh.Token(woosh.OP, '.', 90, 23, 90, 24),
woosh.Token(woosh.NAME, 'dispatch_call', 90, 24, 90, 37),
woosh.Token(woosh.OP, '(', 90, 37, 90, 38),
woosh.Token(woosh.NAME, 'frame', 90, 38, 90, 43),
woosh.Token(woosh.OP, ',', 90, 43, 90, 44),
woosh.Token(woosh.NAME, 'arg', 90, 45, 90, 48),
woosh.Token(woosh.OP, ')', 90, 48, 90, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 90, 49, 91, 0),
woosh.Token(woosh.DEDENT, '        ', 91, 0, 91, 8),
woosh.Token(woosh.NAME, 'if', 91, 8, 91, 10),
woosh.Token(woosh.NAME, 'event', 91, 11, 91, 16),
woosh.Token(woosh.OP, '==', 91, 17, 91, 19),
woosh.Token(woosh.STRING, "'return'", 91, 20, 91, 28),
woosh.Token(woosh.OP, ':', 91, 28, 91, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 91, 29, 92, 0),
woosh.Token(woosh.INDENT, '            ', 92, 0, 92, 12),
woosh.Token(woosh.NAME, 'return', 92, 12, 92, 18),
woosh.Token(woosh.NAME, 'self', 92, 19, 92, 23),
woosh.Token(woosh.OP, '.', 92, 23, 92, 24),
woosh.Token(woosh.NAME, 'dispatch_return', 92, 24, 92, 39),
woosh.Token(woosh.OP, '(', 92, 39, 92, 40),
woosh.Token(woosh.NAME, 'frame', 92, 40, 92, 45),
woosh.Token(woosh.OP, ',', 92, 45, 92, 46),
woosh.Token(woosh.NAME, 'arg', 92, 47, 92, 50),
woosh.Token(woosh.OP, ')', 92, 50, 92, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 51, 93, 0),
woosh.Token(woosh.DEDENT, '        ', 93, 0, 93, 8),
woosh.Token(woosh.NAME, 'if', 93, 8, 93, 10),
woosh.Token(woosh.NAME, 'event', 93, 11, 93, 16),
woosh.Token(woosh.OP, '==', 93, 17, 93, 19),
woosh.Token(woosh.STRING, "'exception'", 93, 20, 93, 31),
woosh.Token(woosh.OP, ':', 93, 31, 93, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 32, 94, 0),
woosh.Token(woosh.INDENT, '            ', 94, 0, 94, 12),
woosh.Token(woosh.NAME, 'return', 94, 12, 94, 18),
woosh.Token(woosh.NAME, 'self', 94, 19, 94, 23),
woosh.Token(woosh.OP, '.', 94, 23, 94, 24),
woosh.Token(woosh.NAME, 'dispatch_exception', 94, 24, 94, 42),
woosh.Token(woosh.OP, '(', 94, 42, 94, 43),
woosh.Token(woosh.NAME, 'frame', 94, 43, 94, 48),
woosh.Token(woosh.OP, ',', 94, 48, 94, 49),
woosh.Token(woosh.NAME, 'arg', 94, 50, 94, 53),
woosh.Token(woosh.OP, ')', 94, 53, 94, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 54, 95, 0),
woosh.Token(woosh.DEDENT, '        ', 95, 0, 95, 8),
woosh.Token(woosh.NAME, 'if', 95, 8, 95, 10),
woosh.Token(woosh.NAME, 'event', 95, 11, 95, 16),
woosh.Token(woosh.OP, '==', 95, 17, 95, 19),
woosh.Token(woosh.STRING, "'c_call'", 95, 20, 95, 28),
woosh.Token(woosh.OP, ':', 95, 28, 95, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 29, 96, 0),
woosh.Token(woosh.INDENT, '            ', 96, 0, 96, 12),
woosh.Token(woosh.NAME, 'return', 96, 12, 96, 18),
woosh.Token(woosh.NAME, 'self', 96, 19, 96, 23),
woosh.Token(woosh.OP, '.', 96, 23, 96, 24),
woosh.Token(woosh.NAME, 'trace_dispatch', 96, 24, 96, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 38, 97, 0),
woosh.Token(woosh.DEDENT, '        ', 97, 0, 97, 8),
woosh.Token(woosh.NAME, 'if', 97, 8, 97, 10),
woosh.Token(woosh.NAME, 'event', 97, 11, 97, 16),
woosh.Token(woosh.OP, '==', 97, 17, 97, 19),
woosh.Token(woosh.STRING, "'c_exception'", 97, 20, 97, 33),
woosh.Token(woosh.OP, ':', 97, 33, 97, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 34, 98, 0),
woosh.Token(woosh.INDENT, '            ', 98, 0, 98, 12),
woosh.Token(woosh.NAME, 'return', 98, 12, 98, 18),
woosh.Token(woosh.NAME, 'self', 98, 19, 98, 23),
woosh.Token(woosh.OP, '.', 98, 23, 98, 24),
woosh.Token(woosh.NAME, 'trace_dispatch', 98, 24, 98, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 38, 99, 0),
woosh.Token(woosh.DEDENT, '        ', 99, 0, 99, 8),
woosh.Token(woosh.NAME, 'if', 99, 8, 99, 10),
woosh.Token(woosh.NAME, 'event', 99, 11, 99, 16),
woosh.Token(woosh.OP, '==', 99, 17, 99, 19),
woosh.Token(woosh.STRING, "'c_return'", 99, 20, 99, 30),
woosh.Token(woosh.OP, ':', 99, 30, 99, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 31, 100, 0),
woosh.Token(woosh.INDENT, '            ', 100, 0, 100, 12),
woosh.Token(woosh.NAME, 'return', 100, 12, 100, 18),
woosh.Token(woosh.NAME, 'self', 100, 19, 100, 23),
woosh.Token(woosh.OP, '.', 100, 23, 100, 24),
woosh.Token(woosh.NAME, 'trace_dispatch', 100, 24, 100, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 38, 101, 0),
woosh.Token(woosh.DEDENT, '        ', 101, 0, 101, 8),
woosh.Token(woosh.NAME, 'print', 101, 8, 101, 13),
woosh.Token(woosh.OP, '(', 101, 13, 101, 14),
woosh.Token(woosh.STRING, "'bdb.Bdb.dispatch: unknown debugging event:'", 101, 14, 101, 58),
woosh.Token(woosh.OP, ',', 101, 58, 101, 59),
woosh.Token(woosh.NAME, 'repr', 101, 60, 101, 64),
woosh.Token(woosh.OP, '(', 101, 64, 101, 65),
woosh.Token(woosh.NAME, 'event', 101, 65, 101, 70),
woosh.Token(woosh.OP, ')', 101, 70, 101, 71),
woosh.Token(woosh.OP, ')', 101, 71, 101, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 101, 72, 102, 0),
woosh.Token(woosh.NAME, 'return', 102, 8, 102, 14),
woosh.Token(woosh.NAME, 'self', 102, 15, 102, 19),
woosh.Token(woosh.OP, '.', 102, 19, 102, 20),
woosh.Token(woosh.NAME, 'trace_dispatch', 102, 20, 102, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 34, 103, 0),
woosh.Token(woosh.DEDENT, '    ', 104, 0, 104, 4),
woosh.Token(woosh.NAME, 'def', 104, 4, 104, 7),
woosh.Token(woosh.NAME, 'dispatch_line', 104, 8, 104, 21),
woosh.Token(woosh.OP, '(', 104, 21, 104, 22),
woosh.Token(woosh.NAME, 'self', 104, 22, 104, 26),
woosh.Token(woosh.OP, ',', 104, 26, 104, 27),
woosh.Token(woosh.NAME, 'frame', 104, 28, 104, 33),
woosh.Token(woosh.OP, ')', 104, 33, 104, 34),
woosh.Token(woosh.OP, ':', 104, 34, 104, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 35, 105, 0),
woosh.Token(woosh.INDENT, '        ', 105, 0, 105, 8),
woosh.Token(woosh.STRING, '"""Invoke user function and return trace function for line event.\r\n\r\n        If the debugger stops on the current line, invoke\r\n        self.user_line(). Raise BdbQuit if self.quitting is set.\r\n        Return self.trace_dispatch to continue tracing in this scope.\r\n        """', 105, 8, 110, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 11, 111, 0),
woosh.Token(woosh.NAME, 'if', 111, 8, 111, 10),
woosh.Token(woosh.NAME, 'self', 111, 11, 111, 15),
woosh.Token(woosh.OP, '.', 111, 15, 111, 16),
woosh.Token(woosh.NAME, 'stop_here', 111, 16, 111, 25),
woosh.Token(woosh.OP, '(', 111, 25, 111, 26),
woosh.Token(woosh.NAME, 'frame', 111, 26, 111, 31),
woosh.Token(woosh.OP, ')', 111, 31, 111, 32),
woosh.Token(woosh.NAME, 'or', 111, 33, 111, 35),
woosh.Token(woosh.NAME, 'self', 111, 36, 111, 40),
woosh.Token(woosh.OP, '.', 111, 40, 111, 41),
woosh.Token(woosh.NAME, 'break_here', 111, 41, 111, 51),
woosh.Token(woosh.OP, '(', 111, 51, 111, 52),
woosh.Token(woosh.NAME, 'frame', 111, 52, 111, 57),
woosh.Token(woosh.OP, ')', 111, 57, 111, 58),
woosh.Token(woosh.OP, ':', 111, 58, 111, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 59, 112, 0),
woosh.Token(woosh.INDENT, '            ', 112, 0, 112, 12),
woosh.Token(woosh.NAME, 'self', 112, 12, 112, 16),
woosh.Token(woosh.OP, '.', 112, 16, 112, 17),
woosh.Token(woosh.NAME, 'user_line', 112, 17, 112, 26),
woosh.Token(woosh.OP, '(', 112, 26, 112, 27),
woosh.Token(woosh.NAME, 'frame', 112, 27, 112, 32),
woosh.Token(woosh.OP, ')', 112, 32, 112, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 33, 113, 0),
woosh.Token(woosh.NAME, 'if', 113, 12, 113, 14),
woosh.Token(woosh.NAME, 'self', 113, 15, 113, 19),
woosh.Token(woosh.OP, '.', 113, 19, 113, 20),
woosh.Token(woosh.NAME, 'quitting', 113, 20, 113, 28),
woosh.Token(woosh.OP, ':', 113, 28, 113, 29),
woosh.Token(woosh.NAME, 'raise', 113, 30, 113, 35),
woosh.Token(woosh.NAME, 'BdbQuit', 113, 36, 113, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 43, 114, 0),
woosh.Token(woosh.DEDENT, '        ', 114, 0, 114, 8),
woosh.Token(woosh.NAME, 'return', 114, 8, 114, 14),
woosh.Token(woosh.NAME, 'self', 114, 15, 114, 19),
woosh.Token(woosh.OP, '.', 114, 19, 114, 20),
woosh.Token(woosh.NAME, 'trace_dispatch', 114, 20, 114, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 34, 115, 0),
woosh.Token(woosh.DEDENT, '    ', 116, 0, 116, 4),
woosh.Token(woosh.NAME, 'def', 116, 4, 116, 7),
woosh.Token(woosh.NAME, 'dispatch_call', 116, 8, 116, 21),
woosh.Token(woosh.OP, '(', 116, 21, 116, 22),
woosh.Token(woosh.NAME, 'self', 116, 22, 116, 26),
woosh.Token(woosh.OP, ',', 116, 26, 116, 27),
woosh.Token(woosh.NAME, 'frame', 116, 28, 116, 33),
woosh.Token(woosh.OP, ',', 116, 33, 116, 34),
woosh.Token(woosh.NAME, 'arg', 116, 35, 116, 38),
woosh.Token(woosh.OP, ')', 116, 38, 116, 39),
woosh.Token(woosh.OP, ':', 116, 39, 116, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 40, 117, 0),
woosh.Token(woosh.INDENT, '        ', 117, 0, 117, 8),
woosh.Token(woosh.STRING, '"""Invoke user function and return trace function for call event.\r\n\r\n        If the debugger stops on this function call, invoke\r\n        self.user_call(). Raise BbdQuit if self.quitting is set.\r\n        Return self.trace_dispatch to continue tracing in this scope.\r\n        """', 117, 8, 122, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 11, 123, 0),
woosh.Token(woosh.COMMENT, "# XXX 'arg' is no longer used", 123, 8, 123, 37),
woosh.Token(woosh.NAME, 'if', 124, 8, 124, 10),
woosh.Token(woosh.NAME, 'self', 124, 11, 124, 15),
woosh.Token(woosh.OP, '.', 124, 15, 124, 16),
woosh.Token(woosh.NAME, 'botframe', 124, 16, 124, 24),
woosh.Token(woosh.NAME, 'is', 124, 25, 124, 27),
woosh.Token(woosh.NAME, 'None', 124, 28, 124, 32),
woosh.Token(woosh.OP, ':', 124, 32, 124, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 33, 125, 0),
woosh.Token(woosh.COMMENT, '# First call of dispatch since reset()', 125, 12, 125, 50),
woosh.Token(woosh.INDENT, '            ', 126, 0, 126, 12),
woosh.Token(woosh.NAME, 'self', 126, 12, 126, 16),
woosh.Token(woosh.OP, '.', 126, 16, 126, 17),
woosh.Token(woosh.NAME, 'botframe', 126, 17, 126, 25),
woosh.Token(woosh.OP, '=', 126, 26, 126, 27),
woosh.Token(woosh.NAME, 'frame', 126, 28, 126, 33),
woosh.Token(woosh.OP, '.', 126, 33, 126, 34),
woosh.Token(woosh.NAME, 'f_back', 126, 34, 126, 40),
woosh.Token(woosh.COMMENT, '# (CT) Note that this may also be None!', 126, 41, 126, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 80, 127, 0),
woosh.Token(woosh.NAME, 'return', 127, 12, 127, 18),
woosh.Token(woosh.NAME, 'self', 127, 19, 127, 23),
woosh.Token(woosh.OP, '.', 127, 23, 127, 24),
woosh.Token(woosh.NAME, 'trace_dispatch', 127, 24, 127, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 38, 128, 0),
woosh.Token(woosh.DEDENT, '        ', 128, 0, 128, 8),
woosh.Token(woosh.NAME, 'if', 128, 8, 128, 10),
woosh.Token(woosh.NAME, 'not', 128, 11, 128, 14),
woosh.Token(woosh.OP, '(', 128, 15, 128, 16),
woosh.Token(woosh.NAME, 'self', 128, 16, 128, 20),
woosh.Token(woosh.OP, '.', 128, 20, 128, 21),
woosh.Token(woosh.NAME, 'stop_here', 128, 21, 128, 30),
woosh.Token(woosh.OP, '(', 128, 30, 128, 31),
woosh.Token(woosh.NAME, 'frame', 128, 31, 128, 36),
woosh.Token(woosh.OP, ')', 128, 36, 128, 37),
woosh.Token(woosh.NAME, 'or', 128, 38, 128, 40),
woosh.Token(woosh.NAME, 'self', 128, 41, 128, 45),
woosh.Token(woosh.OP, '.', 128, 45, 128, 46),
woosh.Token(woosh.NAME, 'break_anywhere', 128, 46, 128, 60),
woosh.Token(woosh.OP, '(', 128, 60, 128, 61),
woosh.Token(woosh.NAME, 'frame', 128, 61, 128, 66),
woosh.Token(woosh.OP, ')', 128, 66, 128, 67),
woosh.Token(woosh.OP, ')', 128, 67, 128, 68),
woosh.Token(woosh.OP, ':', 128, 68, 128, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 69, 129, 0),
woosh.Token(woosh.COMMENT, '# No need to trace this function', 129, 12, 129, 44),
woosh.Token(woosh.INDENT, '            ', 130, 0, 130, 12),
woosh.Token(woosh.NAME, 'return', 130, 12, 130, 18),
woosh.Token(woosh.COMMENT, '# None', 130, 19, 130, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 25, 131, 0),
woosh.Token(woosh.COMMENT, '# Ignore call events in generator except when stepping.', 131, 8, 131, 63),
woosh.Token(woosh.DEDENT, '        ', 132, 0, 132, 8),
woosh.Token(woosh.NAME, 'if', 132, 8, 132, 10),
woosh.Token(woosh.NAME, 'self', 132, 11, 132, 15),
woosh.Token(woosh.OP, '.', 132, 15, 132, 16),
woosh.Token(woosh.NAME, 'stopframe', 132, 16, 132, 25),
woosh.Token(woosh.NAME, 'and', 132, 26, 132, 29),
woosh.Token(woosh.NAME, 'frame', 132, 30, 132, 35),
woosh.Token(woosh.OP, '.', 132, 35, 132, 36),
woosh.Token(woosh.NAME, 'f_code', 132, 36, 132, 42),
woosh.Token(woosh.OP, '.', 132, 42, 132, 43),
woosh.Token(woosh.NAME, 'co_flags', 132, 43, 132, 51),
woosh.Token(woosh.OP, '&', 132, 52, 132, 53),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 132, 54, 132, 83),
woosh.Token(woosh.OP, ':', 132, 83, 132, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 84, 133, 0),
woosh.Token(woosh.INDENT, '            ', 133, 0, 133, 12),
woosh.Token(woosh.NAME, 'return', 133, 12, 133, 18),
woosh.Token(woosh.NAME, 'self', 133, 19, 133, 23),
woosh.Token(woosh.OP, '.', 133, 23, 133, 24),
woosh.Token(woosh.NAME, 'trace_dispatch', 133, 24, 133, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 38, 134, 0),
woosh.Token(woosh.DEDENT, '        ', 134, 0, 134, 8),
woosh.Token(woosh.NAME, 'self', 134, 8, 134, 12),
woosh.Token(woosh.OP, '.', 134, 12, 134, 13),
woosh.Token(woosh.NAME, 'user_call', 134, 13, 134, 22),
woosh.Token(woosh.OP, '(', 134, 22, 134, 23),
woosh.Token(woosh.NAME, 'frame', 134, 23, 134, 28),
woosh.Token(woosh.OP, ',', 134, 28, 134, 29),
woosh.Token(woosh.NAME, 'arg', 134, 30, 134, 33),
woosh.Token(woosh.OP, ')', 134, 33, 134, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 34, 135, 0),
woosh.Token(woosh.NAME, 'if', 135, 8, 135, 10),
woosh.Token(woosh.NAME, 'self', 135, 11, 135, 15),
woosh.Token(woosh.OP, '.', 135, 15, 135, 16),
woosh.Token(woosh.NAME, 'quitting', 135, 16, 135, 24),
woosh.Token(woosh.OP, ':', 135, 24, 135, 25),
woosh.Token(woosh.NAME, 'raise', 135, 26, 135, 31),
woosh.Token(woosh.NAME, 'BdbQuit', 135, 32, 135, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 39, 136, 0),
woosh.Token(woosh.NAME, 'return', 136, 8, 136, 14),
woosh.Token(woosh.NAME, 'self', 136, 15, 136, 19),
woosh.Token(woosh.OP, '.', 136, 19, 136, 20),
woosh.Token(woosh.NAME, 'trace_dispatch', 136, 20, 136, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 34, 137, 0),
woosh.Token(woosh.DEDENT, '    ', 138, 0, 138, 4),
woosh.Token(woosh.NAME, 'def', 138, 4, 138, 7),
woosh.Token(woosh.NAME, 'dispatch_return', 138, 8, 138, 23),
woosh.Token(woosh.OP, '(', 138, 23, 138, 24),
woosh.Token(woosh.NAME, 'self', 138, 24, 138, 28),
woosh.Token(woosh.OP, ',', 138, 28, 138, 29),
woosh.Token(woosh.NAME, 'frame', 138, 30, 138, 35),
woosh.Token(woosh.OP, ',', 138, 35, 138, 36),
woosh.Token(woosh.NAME, 'arg', 138, 37, 138, 40),
woosh.Token(woosh.OP, ')', 138, 40, 138, 41),
woosh.Token(woosh.OP, ':', 138, 41, 138, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 42, 139, 0),
woosh.Token(woosh.INDENT, '        ', 139, 0, 139, 8),
woosh.Token(woosh.STRING, '"""Invoke user function and return trace function for return event.\r\n\r\n        If the debugger stops on this function return, invoke\r\n        self.user_return(). Raise BdbQuit if self.quitting is set.\r\n        Return self.trace_dispatch to continue tracing in this scope.\r\n        """', 139, 8, 144, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 11, 145, 0),
woosh.Token(woosh.NAME, 'if', 145, 8, 145, 10),
woosh.Token(woosh.NAME, 'self', 145, 11, 145, 15),
woosh.Token(woosh.OP, '.', 145, 15, 145, 16),
woosh.Token(woosh.NAME, 'stop_here', 145, 16, 145, 25),
woosh.Token(woosh.OP, '(', 145, 25, 145, 26),
woosh.Token(woosh.NAME, 'frame', 145, 26, 145, 31),
woosh.Token(woosh.OP, ')', 145, 31, 145, 32),
woosh.Token(woosh.NAME, 'or', 145, 33, 145, 35),
woosh.Token(woosh.NAME, 'frame', 145, 36, 145, 41),
woosh.Token(woosh.OP, '==', 145, 42, 145, 44),
woosh.Token(woosh.NAME, 'self', 145, 45, 145, 49),
woosh.Token(woosh.OP, '.', 145, 49, 145, 50),
woosh.Token(woosh.NAME, 'returnframe', 145, 50, 145, 61),
woosh.Token(woosh.OP, ':', 145, 61, 145, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 62, 146, 0),
woosh.Token(woosh.COMMENT, '# Ignore return events in generator except when stepping.', 146, 12, 146, 69),
woosh.Token(woosh.INDENT, '            ', 147, 0, 147, 12),
woosh.Token(woosh.NAME, 'if', 147, 12, 147, 14),
woosh.Token(woosh.NAME, 'self', 147, 15, 147, 19),
woosh.Token(woosh.OP, '.', 147, 19, 147, 20),
woosh.Token(woosh.NAME, 'stopframe', 147, 20, 147, 29),
woosh.Token(woosh.NAME, 'and', 147, 30, 147, 33),
woosh.Token(woosh.NAME, 'frame', 147, 34, 147, 39),
woosh.Token(woosh.OP, '.', 147, 39, 147, 40),
woosh.Token(woosh.NAME, 'f_code', 147, 40, 147, 46),
woosh.Token(woosh.OP, '.', 147, 46, 147, 47),
woosh.Token(woosh.NAME, 'co_flags', 147, 47, 147, 55),
woosh.Token(woosh.OP, '&', 147, 56, 147, 57),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 147, 58, 147, 87),
woosh.Token(woosh.OP, ':', 147, 87, 147, 88),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 88, 148, 0),
woosh.Token(woosh.INDENT, '                ', 148, 0, 148, 16),
woosh.Token(woosh.NAME, 'return', 148, 16, 148, 22),
woosh.Token(woosh.NAME, 'self', 148, 23, 148, 27),
woosh.Token(woosh.OP, '.', 148, 27, 148, 28),
woosh.Token(woosh.NAME, 'trace_dispatch', 148, 28, 148, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 42, 149, 0),
woosh.Token(woosh.DEDENT, '            ', 149, 0, 149, 12),
woosh.Token(woosh.NAME, 'try', 149, 12, 149, 15),
woosh.Token(woosh.OP, ':', 149, 15, 149, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 16, 150, 0),
woosh.Token(woosh.INDENT, '                ', 150, 0, 150, 16),
woosh.Token(woosh.NAME, 'self', 150, 16, 150, 20),
woosh.Token(woosh.OP, '.', 150, 20, 150, 21),
woosh.Token(woosh.NAME, 'frame_returning', 150, 21, 150, 36),
woosh.Token(woosh.OP, '=', 150, 37, 150, 38),
woosh.Token(woosh.NAME, 'frame', 150, 39, 150, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 44, 151, 0),
woosh.Token(woosh.NAME, 'self', 151, 16, 151, 20),
woosh.Token(woosh.OP, '.', 151, 20, 151, 21),
woosh.Token(woosh.NAME, 'user_return', 151, 21, 151, 32),
woosh.Token(woosh.OP, '(', 151, 32, 151, 33),
woosh.Token(woosh.NAME, 'frame', 151, 33, 151, 38),
woosh.Token(woosh.OP, ',', 151, 38, 151, 39),
woosh.Token(woosh.NAME, 'arg', 151, 40, 151, 43),
woosh.Token(woosh.OP, ')', 151, 43, 151, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 44, 152, 0),
woosh.Token(woosh.DEDENT, '            ', 152, 0, 152, 12),
woosh.Token(woosh.NAME, 'finally', 152, 12, 152, 19),
woosh.Token(woosh.OP, ':', 152, 19, 152, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 20, 153, 0),
woosh.Token(woosh.INDENT, '                ', 153, 0, 153, 16),
woosh.Token(woosh.NAME, 'self', 153, 16, 153, 20),
woosh.Token(woosh.OP, '.', 153, 20, 153, 21),
woosh.Token(woosh.NAME, 'frame_returning', 153, 21, 153, 36),
woosh.Token(woosh.OP, '=', 153, 37, 153, 38),
woosh.Token(woosh.NAME, 'None', 153, 39, 153, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 43, 154, 0),
woosh.Token(woosh.DEDENT, '            ', 154, 0, 154, 12),
woosh.Token(woosh.NAME, 'if', 154, 12, 154, 14),
woosh.Token(woosh.NAME, 'self', 154, 15, 154, 19),
woosh.Token(woosh.OP, '.', 154, 19, 154, 20),
woosh.Token(woosh.NAME, 'quitting', 154, 20, 154, 28),
woosh.Token(woosh.OP, ':', 154, 28, 154, 29),
woosh.Token(woosh.NAME, 'raise', 154, 30, 154, 35),
woosh.Token(woosh.NAME, 'BdbQuit', 154, 36, 154, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 43, 155, 0),
woosh.Token(woosh.COMMENT, "# The user issued a 'next' or 'until' command.", 155, 12, 155, 58),
woosh.Token(woosh.NAME, 'if', 156, 12, 156, 14),
woosh.Token(woosh.NAME, 'self', 156, 15, 156, 19),
woosh.Token(woosh.OP, '.', 156, 19, 156, 20),
woosh.Token(woosh.NAME, 'stopframe', 156, 20, 156, 29),
woosh.Token(woosh.NAME, 'is', 156, 30, 156, 32),
woosh.Token(woosh.NAME, 'frame', 156, 33, 156, 38),
woosh.Token(woosh.NAME, 'and', 156, 39, 156, 42),
woosh.Token(woosh.NAME, 'self', 156, 43, 156, 47),
woosh.Token(woosh.OP, '.', 156, 47, 156, 48),
woosh.Token(woosh.NAME, 'stoplineno', 156, 48, 156, 58),
woosh.Token(woosh.OP, '!=', 156, 59, 156, 61),
woosh.Token(woosh.OP, '-', 156, 62, 156, 63),
woosh.Token(woosh.NUMBER, '1', 156, 63, 156, 64),
woosh.Token(woosh.OP, ':', 156, 64, 156, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 65, 157, 0),
woosh.Token(woosh.INDENT, '                ', 157, 0, 157, 16),
woosh.Token(woosh.NAME, 'self', 157, 16, 157, 20),
woosh.Token(woosh.OP, '.', 157, 20, 157, 21),
woosh.Token(woosh.NAME, '_set_stopinfo', 157, 21, 157, 34),
woosh.Token(woosh.OP, '(', 157, 34, 157, 35),
woosh.Token(woosh.NAME, 'None', 157, 35, 157, 39),
woosh.Token(woosh.OP, ',', 157, 39, 157, 40),
woosh.Token(woosh.NAME, 'None', 157, 41, 157, 45),
woosh.Token(woosh.OP, ')', 157, 45, 157, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 157, 46, 158, 0),
woosh.Token(woosh.DEDENT, '        ', 158, 0, 158, 8),
woosh.Token(woosh.DEDENT, '', 158, 8, 158, 8),
woosh.Token(woosh.NAME, 'return', 158, 8, 158, 14),
woosh.Token(woosh.NAME, 'self', 158, 15, 158, 19),
woosh.Token(woosh.OP, '.', 158, 19, 158, 20),
woosh.Token(woosh.NAME, 'trace_dispatch', 158, 20, 158, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 34, 159, 0),
woosh.Token(woosh.DEDENT, '    ', 160, 0, 160, 4),
woosh.Token(woosh.NAME, 'def', 160, 4, 160, 7),
woosh.Token(woosh.NAME, 'dispatch_exception', 160, 8, 160, 26),
woosh.Token(woosh.OP, '(', 160, 26, 160, 27),
woosh.Token(woosh.NAME, 'self', 160, 27, 160, 31),
woosh.Token(woosh.OP, ',', 160, 31, 160, 32),
woosh.Token(woosh.NAME, 'frame', 160, 33, 160, 38),
woosh.Token(woosh.OP, ',', 160, 38, 160, 39),
woosh.Token(woosh.NAME, 'arg', 160, 40, 160, 43),
woosh.Token(woosh.OP, ')', 160, 43, 160, 44),
woosh.Token(woosh.OP, ':', 160, 44, 160, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 45, 161, 0),
woosh.Token(woosh.INDENT, '        ', 161, 0, 161, 8),
woosh.Token(woosh.STRING, '"""Invoke user function and return trace function for exception event.\r\n\r\n        If the debugger stops on this exception, invoke\r\n        self.user_exception(). Raise BdbQuit if self.quitting is set.\r\n        Return self.trace_dispatch to continue tracing in this scope.\r\n        """', 161, 8, 166, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 11, 167, 0),
woosh.Token(woosh.NAME, 'if', 167, 8, 167, 10),
woosh.Token(woosh.NAME, 'self', 167, 11, 167, 15),
woosh.Token(woosh.OP, '.', 167, 15, 167, 16),
woosh.Token(woosh.NAME, 'stop_here', 167, 16, 167, 25),
woosh.Token(woosh.OP, '(', 167, 25, 167, 26),
woosh.Token(woosh.NAME, 'frame', 167, 26, 167, 31),
woosh.Token(woosh.OP, ')', 167, 31, 167, 32),
woosh.Token(woosh.OP, ':', 167, 32, 167, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 33, 168, 0),
woosh.Token(woosh.COMMENT, '# When stepping with next/until/return in a generator frame, skip', 168, 12, 168, 77),
woosh.Token(woosh.COMMENT, '# the internal StopIteration exception (with no traceback)', 169, 12, 169, 70),
woosh.Token(woosh.COMMENT, "# triggered by a subiterator run with the 'yield from' statement.", 170, 12, 170, 77),
woosh.Token(woosh.INDENT, '            ', 171, 0, 171, 12),
woosh.Token(woosh.NAME, 'if', 171, 12, 171, 14),
woosh.Token(woosh.NAME, 'not', 171, 15, 171, 18),
woosh.Token(woosh.OP, '(', 171, 19, 171, 20),
woosh.Token(woosh.NAME, 'frame', 171, 20, 171, 25),
woosh.Token(woosh.OP, '.', 171, 25, 171, 26),
woosh.Token(woosh.NAME, 'f_code', 171, 26, 171, 32),
woosh.Token(woosh.OP, '.', 171, 32, 171, 33),
woosh.Token(woosh.NAME, 'co_flags', 171, 33, 171, 41),
woosh.Token(woosh.OP, '&', 171, 42, 171, 43),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 171, 44, 171, 73),
woosh.Token(woosh.NAME, 'and', 172, 20, 172, 23),
woosh.Token(woosh.NAME, 'arg', 172, 24, 172, 27),
woosh.Token(woosh.OP, '[', 172, 27, 172, 28),
woosh.Token(woosh.NUMBER, '0', 172, 28, 172, 29),
woosh.Token(woosh.OP, ']', 172, 29, 172, 30),
woosh.Token(woosh.NAME, 'is', 172, 31, 172, 33),
woosh.Token(woosh.NAME, 'StopIteration', 172, 34, 172, 47),
woosh.Token(woosh.NAME, 'and', 172, 48, 172, 51),
woosh.Token(woosh.NAME, 'arg', 172, 52, 172, 55),
woosh.Token(woosh.OP, '[', 172, 55, 172, 56),
woosh.Token(woosh.NUMBER, '2', 172, 56, 172, 57),
woosh.Token(woosh.OP, ']', 172, 57, 172, 58),
woosh.Token(woosh.NAME, 'is', 172, 59, 172, 61),
woosh.Token(woosh.NAME, 'None', 172, 62, 172, 66),
woosh.Token(woosh.OP, ')', 172, 66, 172, 67),
woosh.Token(woosh.OP, ':', 172, 67, 172, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 68, 173, 0),
woosh.Token(woosh.INDENT, '                ', 173, 0, 173, 16),
woosh.Token(woosh.NAME, 'self', 173, 16, 173, 20),
woosh.Token(woosh.OP, '.', 173, 20, 173, 21),
woosh.Token(woosh.NAME, 'user_exception', 173, 21, 173, 35),
woosh.Token(woosh.OP, '(', 173, 35, 173, 36),
woosh.Token(woosh.NAME, 'frame', 173, 36, 173, 41),
woosh.Token(woosh.OP, ',', 173, 41, 173, 42),
woosh.Token(woosh.NAME, 'arg', 173, 43, 173, 46),
woosh.Token(woosh.OP, ')', 173, 46, 173, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 47, 174, 0),
woosh.Token(woosh.NAME, 'if', 174, 16, 174, 18),
woosh.Token(woosh.NAME, 'self', 174, 19, 174, 23),
woosh.Token(woosh.OP, '.', 174, 23, 174, 24),
woosh.Token(woosh.NAME, 'quitting', 174, 24, 174, 32),
woosh.Token(woosh.OP, ':', 174, 32, 174, 33),
woosh.Token(woosh.NAME, 'raise', 174, 34, 174, 39),
woosh.Token(woosh.NAME, 'BdbQuit', 174, 40, 174, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 47, 175, 0),
woosh.Token(woosh.COMMENT, '# Stop at the StopIteration or GeneratorExit exception when the user', 175, 8, 175, 76),
woosh.Token(woosh.COMMENT, '# has set stopframe in a generator by issuing a return command, or a', 176, 8, 176, 76),
woosh.Token(woosh.COMMENT, '# next/until command at the last statement in the generator before the', 177, 8, 177, 78),
woosh.Token(woosh.COMMENT, '# exception.', 178, 8, 178, 20),
woosh.Token(woosh.DEDENT, '        ', 179, 0, 179, 8),
woosh.Token(woosh.DEDENT, '', 179, 8, 179, 8),
woosh.Token(woosh.NAME, 'elif', 179, 8, 179, 12),
woosh.Token(woosh.OP, '(', 179, 13, 179, 14),
woosh.Token(woosh.NAME, 'self', 179, 14, 179, 18),
woosh.Token(woosh.OP, '.', 179, 18, 179, 19),
woosh.Token(woosh.NAME, 'stopframe', 179, 19, 179, 28),
woosh.Token(woosh.NAME, 'and', 179, 29, 179, 32),
woosh.Token(woosh.NAME, 'frame', 179, 33, 179, 38),
woosh.Token(woosh.NAME, 'is', 179, 39, 179, 41),
woosh.Token(woosh.NAME, 'not', 179, 42, 179, 45),
woosh.Token(woosh.NAME, 'self', 179, 46, 179, 50),
woosh.Token(woosh.OP, '.', 179, 50, 179, 51),
woosh.Token(woosh.NAME, 'stopframe', 179, 51, 179, 60),
woosh.Token(woosh.NAME, 'and', 180, 16, 180, 19),
woosh.Token(woosh.NAME, 'self', 180, 20, 180, 24),
woosh.Token(woosh.OP, '.', 180, 24, 180, 25),
woosh.Token(woosh.NAME, 'stopframe', 180, 25, 180, 34),
woosh.Token(woosh.OP, '.', 180, 34, 180, 35),
woosh.Token(woosh.NAME, 'f_code', 180, 35, 180, 41),
woosh.Token(woosh.OP, '.', 180, 41, 180, 42),
woosh.Token(woosh.NAME, 'co_flags', 180, 42, 180, 50),
woosh.Token(woosh.OP, '&', 180, 51, 180, 52),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 180, 53, 180, 82),
woosh.Token(woosh.NAME, 'and', 181, 16, 181, 19),
woosh.Token(woosh.NAME, 'arg', 181, 20, 181, 23),
woosh.Token(woosh.OP, '[', 181, 23, 181, 24),
woosh.Token(woosh.NUMBER, '0', 181, 24, 181, 25),
woosh.Token(woosh.OP, ']', 181, 25, 181, 26),
woosh.Token(woosh.NAME, 'in', 181, 27, 181, 29),
woosh.Token(woosh.OP, '(', 181, 30, 181, 31),
woosh.Token(woosh.NAME, 'StopIteration', 181, 31, 181, 44),
woosh.Token(woosh.OP, ',', 181, 44, 181, 45),
woosh.Token(woosh.NAME, 'GeneratorExit', 181, 46, 181, 59),
woosh.Token(woosh.OP, ')', 181, 59, 181, 60),
woosh.Token(woosh.OP, ')', 181, 60, 181, 61),
woosh.Token(woosh.OP, ':', 181, 61, 181, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 62, 182, 0),
woosh.Token(woosh.INDENT, '            ', 182, 0, 182, 12),
woosh.Token(woosh.NAME, 'self', 182, 12, 182, 16),
woosh.Token(woosh.OP, '.', 182, 16, 182, 17),
woosh.Token(woosh.NAME, 'user_exception', 182, 17, 182, 31),
woosh.Token(woosh.OP, '(', 182, 31, 182, 32),
woosh.Token(woosh.NAME, 'frame', 182, 32, 182, 37),
woosh.Token(woosh.OP, ',', 182, 37, 182, 38),
woosh.Token(woosh.NAME, 'arg', 182, 39, 182, 42),
woosh.Token(woosh.OP, ')', 182, 42, 182, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 43, 183, 0),
woosh.Token(woosh.NAME, 'if', 183, 12, 183, 14),
woosh.Token(woosh.NAME, 'self', 183, 15, 183, 19),
woosh.Token(woosh.OP, '.', 183, 19, 183, 20),
woosh.Token(woosh.NAME, 'quitting', 183, 20, 183, 28),
woosh.Token(woosh.OP, ':', 183, 28, 183, 29),
woosh.Token(woosh.NAME, 'raise', 183, 30, 183, 35),
woosh.Token(woosh.NAME, 'BdbQuit', 183, 36, 183, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 43, 184, 0),
woosh.Token(woosh.DEDENT, '        ', 185, 0, 185, 8),
woosh.Token(woosh.NAME, 'return', 185, 8, 185, 14),
woosh.Token(woosh.NAME, 'self', 185, 15, 185, 19),
woosh.Token(woosh.OP, '.', 185, 19, 185, 20),
woosh.Token(woosh.NAME, 'trace_dispatch', 185, 20, 185, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 34, 186, 0),
woosh.Token(woosh.COMMENT, "# Normally derived classes don't override the following", 187, 4, 187, 59),
woosh.Token(woosh.COMMENT, '# methods, but they may if they want to redefine the', 188, 4, 188, 56),
woosh.Token(woosh.COMMENT, '# definition of stopping and breakpoints.', 189, 4, 189, 45),
woosh.Token(woosh.DEDENT, '    ', 191, 0, 191, 4),
woosh.Token(woosh.NAME, 'def', 191, 4, 191, 7),
woosh.Token(woosh.NAME, 'is_skipped_module', 191, 8, 191, 25),
woosh.Token(woosh.OP, '(', 191, 25, 191, 26),
woosh.Token(woosh.NAME, 'self', 191, 26, 191, 30),
woosh.Token(woosh.OP, ',', 191, 30, 191, 31),
woosh.Token(woosh.NAME, 'module_name', 191, 32, 191, 43),
woosh.Token(woosh.OP, ')', 191, 43, 191, 44),
woosh.Token(woosh.OP, ':', 191, 44, 191, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 45, 192, 0),
woosh.Token(woosh.INDENT, '        ', 192, 0, 192, 8),
woosh.Token(woosh.STRING, '"Return True if module_name matches any skip pattern."', 192, 8, 192, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 62, 193, 0),
woosh.Token(woosh.NAME, 'if', 193, 8, 193, 10),
woosh.Token(woosh.NAME, 'module_name', 193, 11, 193, 22),
woosh.Token(woosh.NAME, 'is', 193, 23, 193, 25),
woosh.Token(woosh.NAME, 'None', 193, 26, 193, 30),
woosh.Token(woosh.OP, ':', 193, 30, 193, 31),
woosh.Token(woosh.COMMENT, '# some modules do not have names', 193, 33, 193, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 65, 194, 0),
woosh.Token(woosh.INDENT, '            ', 194, 0, 194, 12),
woosh.Token(woosh.NAME, 'return', 194, 12, 194, 18),
woosh.Token(woosh.NAME, 'False', 194, 19, 194, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 24, 195, 0),
woosh.Token(woosh.DEDENT, '        ', 195, 0, 195, 8),
woosh.Token(woosh.NAME, 'for', 195, 8, 195, 11),
woosh.Token(woosh.NAME, 'pattern', 195, 12, 195, 19),
woosh.Token(woosh.NAME, 'in', 195, 20, 195, 22),
woosh.Token(woosh.NAME, 'self', 195, 23, 195, 27),
woosh.Token(woosh.OP, '.', 195, 27, 195, 28),
woosh.Token(woosh.NAME, 'skip', 195, 28, 195, 32),
woosh.Token(woosh.OP, ':', 195, 32, 195, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 33, 196, 0),
woosh.Token(woosh.INDENT, '            ', 196, 0, 196, 12),
woosh.Token(woosh.NAME, 'if', 196, 12, 196, 14),
woosh.Token(woosh.NAME, 'fnmatch', 196, 15, 196, 22),
woosh.Token(woosh.OP, '.', 196, 22, 196, 23),
woosh.Token(woosh.NAME, 'fnmatch', 196, 23, 196, 30),
woosh.Token(woosh.OP, '(', 196, 30, 196, 31),
woosh.Token(woosh.NAME, 'module_name', 196, 31, 196, 42),
woosh.Token(woosh.OP, ',', 196, 42, 196, 43),
woosh.Token(woosh.NAME, 'pattern', 196, 44, 196, 51),
woosh.Token(woosh.OP, ')', 196, 51, 196, 52),
woosh.Token(woosh.OP, ':', 196, 52, 196, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 53, 197, 0),
woosh.Token(woosh.INDENT, '                ', 197, 0, 197, 16),
woosh.Token(woosh.NAME, 'return', 197, 16, 197, 22),
woosh.Token(woosh.NAME, 'True', 197, 23, 197, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 27, 198, 0),
woosh.Token(woosh.DEDENT, '        ', 198, 0, 198, 8),
woosh.Token(woosh.DEDENT, '', 198, 8, 198, 8),
woosh.Token(woosh.NAME, 'return', 198, 8, 198, 14),
woosh.Token(woosh.NAME, 'False', 198, 15, 198, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 20, 199, 0),
woosh.Token(woosh.DEDENT, '    ', 200, 0, 200, 4),
woosh.Token(woosh.NAME, 'def', 200, 4, 200, 7),
woosh.Token(woosh.NAME, 'stop_here', 200, 8, 200, 17),
woosh.Token(woosh.OP, '(', 200, 17, 200, 18),
woosh.Token(woosh.NAME, 'self', 200, 18, 200, 22),
woosh.Token(woosh.OP, ',', 200, 22, 200, 23),
woosh.Token(woosh.NAME, 'frame', 200, 24, 200, 29),
woosh.Token(woosh.OP, ')', 200, 29, 200, 30),
woosh.Token(woosh.OP, ':', 200, 30, 200, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 31, 201, 0),
woosh.Token(woosh.INDENT, '        ', 201, 0, 201, 8),
woosh.Token(woosh.STRING, '"Return True if frame is below the starting frame in the stack."', 201, 8, 201, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 72, 202, 0),
woosh.Token(woosh.COMMENT, '# (CT) stopframe may now also be None, see dispatch_call.', 202, 8, 202, 65),
woosh.Token(woosh.COMMENT, '# (CT) the former test for None is therefore removed from here.', 203, 8, 203, 71),
woosh.Token(woosh.NAME, 'if', 204, 8, 204, 10),
woosh.Token(woosh.NAME, 'self', 204, 11, 204, 15),
woosh.Token(woosh.OP, '.', 204, 15, 204, 16),
woosh.Token(woosh.NAME, 'skip', 204, 16, 204, 20),
woosh.Token(woosh.NAME, 'and', 204, 21, 204, 24),
woosh.Token(woosh.NAME, 'self', 205, 15, 205, 19),
woosh.Token(woosh.OP, '.', 205, 19, 205, 20),
woosh.Token(woosh.NAME, 'is_skipped_module', 205, 20, 205, 37),
woosh.Token(woosh.OP, '(', 205, 37, 205, 38),
woosh.Token(woosh.NAME, 'frame', 205, 38, 205, 43),
woosh.Token(woosh.OP, '.', 205, 43, 205, 44),
woosh.Token(woosh.NAME, 'f_globals', 205, 44, 205, 53),
woosh.Token(woosh.OP, '.', 205, 53, 205, 54),
woosh.Token(woosh.NAME, 'get', 205, 54, 205, 57),
woosh.Token(woosh.OP, '(', 205, 57, 205, 58),
woosh.Token(woosh.STRING, "'__name__'", 205, 58, 205, 68),
woosh.Token(woosh.OP, ')', 205, 68, 205, 69),
woosh.Token(woosh.OP, ')', 205, 69, 205, 70),
woosh.Token(woosh.OP, ':', 205, 70, 205, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 71, 206, 0),
woosh.Token(woosh.INDENT, '            ', 206, 0, 206, 12),
woosh.Token(woosh.NAME, 'return', 206, 12, 206, 18),
woosh.Token(woosh.NAME, 'False', 206, 19, 206, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 24, 207, 0),
woosh.Token(woosh.DEDENT, '        ', 207, 0, 207, 8),
woosh.Token(woosh.NAME, 'if', 207, 8, 207, 10),
woosh.Token(woosh.NAME, 'frame', 207, 11, 207, 16),
woosh.Token(woosh.NAME, 'is', 207, 17, 207, 19),
woosh.Token(woosh.NAME, 'self', 207, 20, 207, 24),
woosh.Token(woosh.OP, '.', 207, 24, 207, 25),
woosh.Token(woosh.NAME, 'stopframe', 207, 25, 207, 34),
woosh.Token(woosh.OP, ':', 207, 34, 207, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 35, 208, 0),
woosh.Token(woosh.INDENT, '            ', 208, 0, 208, 12),
woosh.Token(woosh.NAME, 'if', 208, 12, 208, 14),
woosh.Token(woosh.NAME, 'self', 208, 15, 208, 19),
woosh.Token(woosh.OP, '.', 208, 19, 208, 20),
woosh.Token(woosh.NAME, 'stoplineno', 208, 20, 208, 30),
woosh.Token(woosh.OP, '==', 208, 31, 208, 33),
woosh.Token(woosh.OP, '-', 208, 34, 208, 35),
woosh.Token(woosh.NUMBER, '1', 208, 35, 208, 36),
woosh.Token(woosh.OP, ':', 208, 36, 208, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 37, 209, 0),
woosh.Token(woosh.INDENT, '                ', 209, 0, 209, 16),
woosh.Token(woosh.NAME, 'return', 209, 16, 209, 22),
woosh.Token(woosh.NAME, 'False', 209, 23, 209, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 28, 210, 0),
woosh.Token(woosh.DEDENT, '            ', 210, 0, 210, 12),
woosh.Token(woosh.NAME, 'return', 210, 12, 210, 18),
woosh.Token(woosh.NAME, 'frame', 210, 19, 210, 24),
woosh.Token(woosh.OP, '.', 210, 24, 210, 25),
woosh.Token(woosh.NAME, 'f_lineno', 210, 25, 210, 33),
woosh.Token(woosh.OP, '>=', 210, 34, 210, 36),
woosh.Token(woosh.NAME, 'self', 210, 37, 210, 41),
woosh.Token(woosh.OP, '.', 210, 41, 210, 42),
woosh.Token(woosh.NAME, 'stoplineno', 210, 42, 210, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 52, 211, 0),
woosh.Token(woosh.DEDENT, '        ', 211, 0, 211, 8),
woosh.Token(woosh.NAME, 'if', 211, 8, 211, 10),
woosh.Token(woosh.NAME, 'not', 211, 11, 211, 14),
woosh.Token(woosh.NAME, 'self', 211, 15, 211, 19),
woosh.Token(woosh.OP, '.', 211, 19, 211, 20),
woosh.Token(woosh.NAME, 'stopframe', 211, 20, 211, 29),
woosh.Token(woosh.OP, ':', 211, 29, 211, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 30, 212, 0),
woosh.Token(woosh.INDENT, '            ', 212, 0, 212, 12),
woosh.Token(woosh.NAME, 'return', 212, 12, 212, 18),
woosh.Token(woosh.NAME, 'True', 212, 19, 212, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 23, 213, 0),
woosh.Token(woosh.DEDENT, '        ', 213, 0, 213, 8),
woosh.Token(woosh.NAME, 'return', 213, 8, 213, 14),
woosh.Token(woosh.NAME, 'False', 213, 15, 213, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 20, 214, 0),
woosh.Token(woosh.DEDENT, '    ', 215, 0, 215, 4),
woosh.Token(woosh.NAME, 'def', 215, 4, 215, 7),
woosh.Token(woosh.NAME, 'break_here', 215, 8, 215, 18),
woosh.Token(woosh.OP, '(', 215, 18, 215, 19),
woosh.Token(woosh.NAME, 'self', 215, 19, 215, 23),
woosh.Token(woosh.OP, ',', 215, 23, 215, 24),
woosh.Token(woosh.NAME, 'frame', 215, 25, 215, 30),
woosh.Token(woosh.OP, ')', 215, 30, 215, 31),
woosh.Token(woosh.OP, ':', 215, 31, 215, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 32, 216, 0),
woosh.Token(woosh.INDENT, '        ', 216, 0, 216, 8),
woosh.Token(woosh.STRING, '"""Return True if there is an effective breakpoint for this line.\r\n\r\n        Check for line or function breakpoint and if in effect.\r\n        Delete temporary breakpoints if effective() says to.\r\n        """', 216, 8, 220, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 11, 221, 0),
woosh.Token(woosh.NAME, 'filename', 221, 8, 221, 16),
woosh.Token(woosh.OP, '=', 221, 17, 221, 18),
woosh.Token(woosh.NAME, 'self', 221, 19, 221, 23),
woosh.Token(woosh.OP, '.', 221, 23, 221, 24),
woosh.Token(woosh.NAME, 'canonic', 221, 24, 221, 31),
woosh.Token(woosh.OP, '(', 221, 31, 221, 32),
woosh.Token(woosh.NAME, 'frame', 221, 32, 221, 37),
woosh.Token(woosh.OP, '.', 221, 37, 221, 38),
woosh.Token(woosh.NAME, 'f_code', 221, 38, 221, 44),
woosh.Token(woosh.OP, '.', 221, 44, 221, 45),
woosh.Token(woosh.NAME, 'co_filename', 221, 45, 221, 56),
woosh.Token(woosh.OP, ')', 221, 56, 221, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 57, 222, 0),
woosh.Token(woosh.NAME, 'if', 222, 8, 222, 10),
woosh.Token(woosh.NAME, 'filename', 222, 11, 222, 19),
woosh.Token(woosh.NAME, 'not', 222, 20, 222, 23),
woosh.Token(woosh.NAME, 'in', 222, 24, 222, 26),
woosh.Token(woosh.NAME, 'self', 222, 27, 222, 31),
woosh.Token(woosh.OP, '.', 222, 31, 222, 32),
woosh.Token(woosh.NAME, 'breaks', 222, 32, 222, 38),
woosh.Token(woosh.OP, ':', 222, 38, 222, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 39, 223, 0),
woosh.Token(woosh.INDENT, '            ', 223, 0, 223, 12),
woosh.Token(woosh.NAME, 'return', 223, 12, 223, 18),
woosh.Token(woosh.NAME, 'False', 223, 19, 223, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 24, 224, 0),
woosh.Token(woosh.DEDENT, '        ', 224, 0, 224, 8),
woosh.Token(woosh.NAME, 'lineno', 224, 8, 224, 14),
woosh.Token(woosh.OP, '=', 224, 15, 224, 16),
woosh.Token(woosh.NAME, 'frame', 224, 17, 224, 22),
woosh.Token(woosh.OP, '.', 224, 22, 224, 23),
woosh.Token(woosh.NAME, 'f_lineno', 224, 23, 224, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 31, 225, 0),
woosh.Token(woosh.NAME, 'if', 225, 8, 225, 10),
woosh.Token(woosh.NAME, 'lineno', 225, 11, 225, 17),
woosh.Token(woosh.NAME, 'not', 225, 18, 225, 21),
woosh.Token(woosh.NAME, 'in', 225, 22, 225, 24),
woosh.Token(woosh.NAME, 'self', 225, 25, 225, 29),
woosh.Token(woosh.OP, '.', 225, 29, 225, 30),
woosh.Token(woosh.NAME, 'breaks', 225, 30, 225, 36),
woosh.Token(woosh.OP, '[', 225, 36, 225, 37),
woosh.Token(woosh.NAME, 'filename', 225, 37, 225, 45),
woosh.Token(woosh.OP, ']', 225, 45, 225, 46),
woosh.Token(woosh.OP, ':', 225, 46, 225, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 47, 226, 0),
woosh.Token(woosh.COMMENT, '# The line itself has no breakpoint, but maybe the line is the', 226, 12, 226, 74),
woosh.Token(woosh.COMMENT, '# first line of a function with breakpoint set by function name.', 227, 12, 227, 76),
woosh.Token(woosh.INDENT, '            ', 228, 0, 228, 12),
woosh.Token(woosh.NAME, 'lineno', 228, 12, 228, 18),
woosh.Token(woosh.OP, '=', 228, 19, 228, 20),
woosh.Token(woosh.NAME, 'frame', 228, 21, 228, 26),
woosh.Token(woosh.OP, '.', 228, 26, 228, 27),
woosh.Token(woosh.NAME, 'f_code', 228, 27, 228, 33),
woosh.Token(woosh.OP, '.', 228, 33, 228, 34),
woosh.Token(woosh.NAME, 'co_firstlineno', 228, 34, 228, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 48, 229, 0),
woosh.Token(woosh.NAME, 'if', 229, 12, 229, 14),
woosh.Token(woosh.NAME, 'lineno', 229, 15, 229, 21),
woosh.Token(woosh.NAME, 'not', 229, 22, 229, 25),
woosh.Token(woosh.NAME, 'in', 229, 26, 229, 28),
woosh.Token(woosh.NAME, 'self', 229, 29, 229, 33),
woosh.Token(woosh.OP, '.', 229, 33, 229, 34),
woosh.Token(woosh.NAME, 'breaks', 229, 34, 229, 40),
woosh.Token(woosh.OP, '[', 229, 40, 229, 41),
woosh.Token(woosh.NAME, 'filename', 229, 41, 229, 49),
woosh.Token(woosh.OP, ']', 229, 49, 229, 50),
woosh.Token(woosh.OP, ':', 229, 50, 229, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 51, 230, 0),
woosh.Token(woosh.INDENT, '                ', 230, 0, 230, 16),
woosh.Token(woosh.NAME, 'return', 230, 16, 230, 22),
woosh.Token(woosh.NAME, 'False', 230, 23, 230, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 28, 231, 0),
woosh.Token(woosh.COMMENT, '# flag says ok to delete temp. bp', 232, 8, 232, 41),
woosh.Token(woosh.DEDENT, '        ', 233, 0, 233, 8),
woosh.Token(woosh.DEDENT, '', 233, 8, 233, 8),
woosh.Token(woosh.OP, '(', 233, 8, 233, 9),
woosh.Token(woosh.NAME, 'bp', 233, 9, 233, 11),
woosh.Token(woosh.OP, ',', 233, 11, 233, 12),
woosh.Token(woosh.NAME, 'flag', 233, 13, 233, 17),
woosh.Token(woosh.OP, ')', 233, 17, 233, 18),
woosh.Token(woosh.OP, '=', 233, 19, 233, 20),
woosh.Token(woosh.NAME, 'effective', 233, 21, 233, 30),
woosh.Token(woosh.OP, '(', 233, 30, 233, 31),
woosh.Token(woosh.NAME, 'filename', 233, 31, 233, 39),
woosh.Token(woosh.OP, ',', 233, 39, 233, 40),
woosh.Token(woosh.NAME, 'lineno', 233, 41, 233, 47),
woosh.Token(woosh.OP, ',', 233, 47, 233, 48),
woosh.Token(woosh.NAME, 'frame', 233, 49, 233, 54),
woosh.Token(woosh.OP, ')', 233, 54, 233, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 55, 234, 0),
woosh.Token(woosh.NAME, 'if', 234, 8, 234, 10),
woosh.Token(woosh.NAME, 'bp', 234, 11, 234, 13),
woosh.Token(woosh.OP, ':', 234, 13, 234, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 14, 235, 0),
woosh.Token(woosh.INDENT, '            ', 235, 0, 235, 12),
woosh.Token(woosh.NAME, 'self', 235, 12, 235, 16),
woosh.Token(woosh.OP, '.', 235, 16, 235, 17),
woosh.Token(woosh.NAME, 'currentbp', 235, 17, 235, 26),
woosh.Token(woosh.OP, '=', 235, 27, 235, 28),
woosh.Token(woosh.NAME, 'bp', 235, 29, 235, 31),
woosh.Token(woosh.OP, '.', 235, 31, 235, 32),
woosh.Token(woosh.NAME, 'number', 235, 32, 235, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 38, 236, 0),
woosh.Token(woosh.NAME, 'if', 236, 12, 236, 14),
woosh.Token(woosh.OP, '(', 236, 15, 236, 16),
woosh.Token(woosh.NAME, 'flag', 236, 16, 236, 20),
woosh.Token(woosh.NAME, 'and', 236, 21, 236, 24),
woosh.Token(woosh.NAME, 'bp', 236, 25, 236, 27),
woosh.Token(woosh.OP, '.', 236, 27, 236, 28),
woosh.Token(woosh.NAME, 'temporary', 236, 28, 236, 37),
woosh.Token(woosh.OP, ')', 236, 37, 236, 38),
woosh.Token(woosh.OP, ':', 236, 38, 236, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 39, 237, 0),
woosh.Token(woosh.INDENT, '                ', 237, 0, 237, 16),
woosh.Token(woosh.NAME, 'self', 237, 16, 237, 20),
woosh.Token(woosh.OP, '.', 237, 20, 237, 21),
woosh.Token(woosh.NAME, 'do_clear', 237, 21, 237, 29),
woosh.Token(woosh.OP, '(', 237, 29, 237, 30),
woosh.Token(woosh.NAME, 'str', 237, 30, 237, 33),
woosh.Token(woosh.OP, '(', 237, 33, 237, 34),
woosh.Token(woosh.NAME, 'bp', 237, 34, 237, 36),
woosh.Token(woosh.OP, '.', 237, 36, 237, 37),
woosh.Token(woosh.NAME, 'number', 237, 37, 237, 43),
woosh.Token(woosh.OP, ')', 237, 43, 237, 44),
woosh.Token(woosh.OP, ')', 237, 44, 237, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 45, 238, 0),
woosh.Token(woosh.DEDENT, '            ', 238, 0, 238, 12),
woosh.Token(woosh.NAME, 'return', 238, 12, 238, 18),
woosh.Token(woosh.NAME, 'True', 238, 19, 238, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 23, 239, 0),
woosh.Token(woosh.DEDENT, '        ', 239, 0, 239, 8),
woosh.Token(woosh.NAME, 'else', 239, 8, 239, 12),
woosh.Token(woosh.OP, ':', 239, 12, 239, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 13, 240, 0),
woosh.Token(woosh.INDENT, '            ', 240, 0, 240, 12),
woosh.Token(woosh.NAME, 'return', 240, 12, 240, 18),
woosh.Token(woosh.NAME, 'False', 240, 19, 240, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 24, 241, 0),
woosh.Token(woosh.DEDENT, '    ', 242, 0, 242, 4),
woosh.Token(woosh.DEDENT, '', 242, 4, 242, 4),
woosh.Token(woosh.NAME, 'def', 242, 4, 242, 7),
woosh.Token(woosh.NAME, 'do_clear', 242, 8, 242, 16),
woosh.Token(woosh.OP, '(', 242, 16, 242, 17),
woosh.Token(woosh.NAME, 'self', 242, 17, 242, 21),
woosh.Token(woosh.OP, ',', 242, 21, 242, 22),
woosh.Token(woosh.NAME, 'arg', 242, 23, 242, 26),
woosh.Token(woosh.OP, ')', 242, 26, 242, 27),
woosh.Token(woosh.OP, ':', 242, 27, 242, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 28, 243, 0),
woosh.Token(woosh.INDENT, '        ', 243, 0, 243, 8),
woosh.Token(woosh.STRING, '"""Remove temporary breakpoint.\r\n\r\n        Must implement in derived classes or get NotImplementedError.\r\n        """', 243, 8, 246, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 11, 247, 0),
woosh.Token(woosh.NAME, 'raise', 247, 8, 247, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 247, 14, 247, 33),
woosh.Token(woosh.OP, '(', 247, 33, 247, 34),
woosh.Token(woosh.STRING, '"subclass of bdb must implement do_clear()"', 247, 34, 247, 77),
woosh.Token(woosh.OP, ')', 247, 77, 247, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 78, 248, 0),
woosh.Token(woosh.DEDENT, '    ', 249, 0, 249, 4),
woosh.Token(woosh.NAME, 'def', 249, 4, 249, 7),
woosh.Token(woosh.NAME, 'break_anywhere', 249, 8, 249, 22),
woosh.Token(woosh.OP, '(', 249, 22, 249, 23),
woosh.Token(woosh.NAME, 'self', 249, 23, 249, 27),
woosh.Token(woosh.OP, ',', 249, 27, 249, 28),
woosh.Token(woosh.NAME, 'frame', 249, 29, 249, 34),
woosh.Token(woosh.OP, ')', 249, 34, 249, 35),
woosh.Token(woosh.OP, ':', 249, 35, 249, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 36, 250, 0),
woosh.Token(woosh.INDENT, '        ', 250, 0, 250, 8),
woosh.Token(woosh.STRING, '"""Return True if there is any breakpoint for frame\'s filename.\r\n        """', 250, 8, 251, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 11, 252, 0),
woosh.Token(woosh.NAME, 'return', 252, 8, 252, 14),
woosh.Token(woosh.NAME, 'self', 252, 15, 252, 19),
woosh.Token(woosh.OP, '.', 252, 19, 252, 20),
woosh.Token(woosh.NAME, 'canonic', 252, 20, 252, 27),
woosh.Token(woosh.OP, '(', 252, 27, 252, 28),
woosh.Token(woosh.NAME, 'frame', 252, 28, 252, 33),
woosh.Token(woosh.OP, '.', 252, 33, 252, 34),
woosh.Token(woosh.NAME, 'f_code', 252, 34, 252, 40),
woosh.Token(woosh.OP, '.', 252, 40, 252, 41),
woosh.Token(woosh.NAME, 'co_filename', 252, 41, 252, 52),
woosh.Token(woosh.OP, ')', 252, 52, 252, 53),
woosh.Token(woosh.NAME, 'in', 252, 54, 252, 56),
woosh.Token(woosh.NAME, 'self', 252, 57, 252, 61),
woosh.Token(woosh.OP, '.', 252, 61, 252, 62),
woosh.Token(woosh.NAME, 'breaks', 252, 62, 252, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 68, 253, 0),
woosh.Token(woosh.COMMENT, '# Derived classes should override the user_* methods', 254, 4, 254, 56),
woosh.Token(woosh.COMMENT, '# to gain control.', 255, 4, 255, 22),
woosh.Token(woosh.DEDENT, '    ', 257, 0, 257, 4),
woosh.Token(woosh.NAME, 'def', 257, 4, 257, 7),
woosh.Token(woosh.NAME, 'user_call', 257, 8, 257, 17),
woosh.Token(woosh.OP, '(', 257, 17, 257, 18),
woosh.Token(woosh.NAME, 'self', 257, 18, 257, 22),
woosh.Token(woosh.OP, ',', 257, 22, 257, 23),
woosh.Token(woosh.NAME, 'frame', 257, 24, 257, 29),
woosh.Token(woosh.OP, ',', 257, 29, 257, 30),
woosh.Token(woosh.NAME, 'argument_list', 257, 31, 257, 44),
woosh.Token(woosh.OP, ')', 257, 44, 257, 45),
woosh.Token(woosh.OP, ':', 257, 45, 257, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 46, 258, 0),
woosh.Token(woosh.INDENT, '        ', 258, 0, 258, 8),
woosh.Token(woosh.STRING, '"""Called if we might stop in a function."""', 258, 8, 258, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 52, 259, 0),
woosh.Token(woosh.NAME, 'pass', 259, 8, 259, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 12, 260, 0),
woosh.Token(woosh.DEDENT, '    ', 261, 0, 261, 4),
woosh.Token(woosh.NAME, 'def', 261, 4, 261, 7),
woosh.Token(woosh.NAME, 'user_line', 261, 8, 261, 17),
woosh.Token(woosh.OP, '(', 261, 17, 261, 18),
woosh.Token(woosh.NAME, 'self', 261, 18, 261, 22),
woosh.Token(woosh.OP, ',', 261, 22, 261, 23),
woosh.Token(woosh.NAME, 'frame', 261, 24, 261, 29),
woosh.Token(woosh.OP, ')', 261, 29, 261, 30),
woosh.Token(woosh.OP, ':', 261, 30, 261, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 31, 262, 0),
woosh.Token(woosh.INDENT, '        ', 262, 0, 262, 8),
woosh.Token(woosh.STRING, '"""Called when we stop or break at a line."""', 262, 8, 262, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 53, 263, 0),
woosh.Token(woosh.NAME, 'pass', 263, 8, 263, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 12, 264, 0),
woosh.Token(woosh.DEDENT, '    ', 265, 0, 265, 4),
woosh.Token(woosh.NAME, 'def', 265, 4, 265, 7),
woosh.Token(woosh.NAME, 'user_return', 265, 8, 265, 19),
woosh.Token(woosh.OP, '(', 265, 19, 265, 20),
woosh.Token(woosh.NAME, 'self', 265, 20, 265, 24),
woosh.Token(woosh.OP, ',', 265, 24, 265, 25),
woosh.Token(woosh.NAME, 'frame', 265, 26, 265, 31),
woosh.Token(woosh.OP, ',', 265, 31, 265, 32),
woosh.Token(woosh.NAME, 'return_value', 265, 33, 265, 45),
woosh.Token(woosh.OP, ')', 265, 45, 265, 46),
woosh.Token(woosh.OP, ':', 265, 46, 265, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 47, 266, 0),
woosh.Token(woosh.INDENT, '        ', 266, 0, 266, 8),
woosh.Token(woosh.STRING, '"""Called when a return trap is set here."""', 266, 8, 266, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 52, 267, 0),
woosh.Token(woosh.NAME, 'pass', 267, 8, 267, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 12, 268, 0),
woosh.Token(woosh.DEDENT, '    ', 269, 0, 269, 4),
woosh.Token(woosh.NAME, 'def', 269, 4, 269, 7),
woosh.Token(woosh.NAME, 'user_exception', 269, 8, 269, 22),
woosh.Token(woosh.OP, '(', 269, 22, 269, 23),
woosh.Token(woosh.NAME, 'self', 269, 23, 269, 27),
woosh.Token(woosh.OP, ',', 269, 27, 269, 28),
woosh.Token(woosh.NAME, 'frame', 269, 29, 269, 34),
woosh.Token(woosh.OP, ',', 269, 34, 269, 35),
woosh.Token(woosh.NAME, 'exc_info', 269, 36, 269, 44),
woosh.Token(woosh.OP, ')', 269, 44, 269, 45),
woosh.Token(woosh.OP, ':', 269, 45, 269, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 46, 270, 0),
woosh.Token(woosh.INDENT, '        ', 270, 0, 270, 8),
woosh.Token(woosh.STRING, '"""Called when we stop on an exception."""', 270, 8, 270, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 50, 271, 0),
woosh.Token(woosh.NAME, 'pass', 271, 8, 271, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 12, 272, 0),
woosh.Token(woosh.DEDENT, '    ', 273, 0, 273, 4),
woosh.Token(woosh.NAME, 'def', 273, 4, 273, 7),
woosh.Token(woosh.NAME, '_set_stopinfo', 273, 8, 273, 21),
woosh.Token(woosh.OP, '(', 273, 21, 273, 22),
woosh.Token(woosh.NAME, 'self', 273, 22, 273, 26),
woosh.Token(woosh.OP, ',', 273, 26, 273, 27),
woosh.Token(woosh.NAME, 'stopframe', 273, 28, 273, 37),
woosh.Token(woosh.OP, ',', 273, 37, 273, 38),
woosh.Token(woosh.NAME, 'returnframe', 273, 39, 273, 50),
woosh.Token(woosh.OP, ',', 273, 50, 273, 51),
woosh.Token(woosh.NAME, 'stoplineno', 273, 52, 273, 62),
woosh.Token(woosh.OP, '=', 273, 62, 273, 63),
woosh.Token(woosh.NUMBER, '0', 273, 63, 273, 64),
woosh.Token(woosh.OP, ')', 273, 64, 273, 65),
woosh.Token(woosh.OP, ':', 273, 65, 273, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 66, 274, 0),
woosh.Token(woosh.INDENT, '        ', 274, 0, 274, 8),
woosh.Token(woosh.STRING, '"""Set the attributes for stopping.\r\n\r\n        If stoplineno is greater than or equal to 0, then stop at line\r\n        greater than or equal to the stopline.  If stoplineno is -1, then\r\n        don\'t stop at all.\r\n        """', 274, 8, 279, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 11, 280, 0),
woosh.Token(woosh.NAME, 'self', 280, 8, 280, 12),
woosh.Token(woosh.OP, '.', 280, 12, 280, 13),
woosh.Token(woosh.NAME, 'stopframe', 280, 13, 280, 22),
woosh.Token(woosh.OP, '=', 280, 23, 280, 24),
woosh.Token(woosh.NAME, 'stopframe', 280, 25, 280, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 34, 281, 0),
woosh.Token(woosh.NAME, 'self', 281, 8, 281, 12),
woosh.Token(woosh.OP, '.', 281, 12, 281, 13),
woosh.Token(woosh.NAME, 'returnframe', 281, 13, 281, 24),
woosh.Token(woosh.OP, '=', 281, 25, 281, 26),
woosh.Token(woosh.NAME, 'returnframe', 281, 27, 281, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 38, 282, 0),
woosh.Token(woosh.NAME, 'self', 282, 8, 282, 12),
woosh.Token(woosh.OP, '.', 282, 12, 282, 13),
woosh.Token(woosh.NAME, 'quitting', 282, 13, 282, 21),
woosh.Token(woosh.OP, '=', 282, 22, 282, 23),
woosh.Token(woosh.NAME, 'False', 282, 24, 282, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 29, 283, 0),
woosh.Token(woosh.COMMENT, '# stoplineno >= 0 means: stop at line >= the stoplineno', 283, 8, 283, 63),
woosh.Token(woosh.COMMENT, "# stoplineno -1 means: don't stop at all", 284, 8, 284, 48),
woosh.Token(woosh.NAME, 'self', 285, 8, 285, 12),
woosh.Token(woosh.OP, '.', 285, 12, 285, 13),
woosh.Token(woosh.NAME, 'stoplineno', 285, 13, 285, 23),
woosh.Token(woosh.OP, '=', 285, 24, 285, 25),
woosh.Token(woosh.NAME, 'stoplineno', 285, 26, 285, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 285, 36, 286, 0),
woosh.Token(woosh.COMMENT, '# Derived classes and clients can call the following methods', 287, 4, 287, 64),
woosh.Token(woosh.COMMENT, '# to affect the stepping state.', 288, 4, 288, 35),
woosh.Token(woosh.DEDENT, '    ', 290, 0, 290, 4),
woosh.Token(woosh.NAME, 'def', 290, 4, 290, 7),
woosh.Token(woosh.NAME, 'set_until', 290, 8, 290, 17),
woosh.Token(woosh.OP, '(', 290, 17, 290, 18),
woosh.Token(woosh.NAME, 'self', 290, 18, 290, 22),
woosh.Token(woosh.OP, ',', 290, 22, 290, 23),
woosh.Token(woosh.NAME, 'frame', 290, 24, 290, 29),
woosh.Token(woosh.OP, ',', 290, 29, 290, 30),
woosh.Token(woosh.NAME, 'lineno', 290, 31, 290, 37),
woosh.Token(woosh.OP, '=', 290, 37, 290, 38),
woosh.Token(woosh.NAME, 'None', 290, 38, 290, 42),
woosh.Token(woosh.OP, ')', 290, 42, 290, 43),
woosh.Token(woosh.OP, ':', 290, 43, 290, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 44, 291, 0),
woosh.Token(woosh.INDENT, '        ', 291, 0, 291, 8),
woosh.Token(woosh.STRING, '"""Stop when the line with the lineno greater than the current one is\r\n        reached or when returning from current frame."""', 291, 8, 292, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 56, 293, 0),
woosh.Token(woosh.COMMENT, '# the name "until" is borrowed from gdb', 293, 8, 293, 47),
woosh.Token(woosh.NAME, 'if', 294, 8, 294, 10),
woosh.Token(woosh.NAME, 'lineno', 294, 11, 294, 17),
woosh.Token(woosh.NAME, 'is', 294, 18, 294, 20),
woosh.Token(woosh.NAME, 'None', 294, 21, 294, 25),
woosh.Token(woosh.OP, ':', 294, 25, 294, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 26, 295, 0),
woosh.Token(woosh.INDENT, '            ', 295, 0, 295, 12),
woosh.Token(woosh.NAME, 'lineno', 295, 12, 295, 18),
woosh.Token(woosh.OP, '=', 295, 19, 295, 20),
woosh.Token(woosh.NAME, 'frame', 295, 21, 295, 26),
woosh.Token(woosh.OP, '.', 295, 26, 295, 27),
woosh.Token(woosh.NAME, 'f_lineno', 295, 27, 295, 35),
woosh.Token(woosh.OP, '+', 295, 36, 295, 37),
woosh.Token(woosh.NUMBER, '1', 295, 38, 295, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 295, 39, 296, 0),
woosh.Token(woosh.DEDENT, '        ', 296, 0, 296, 8),
woosh.Token(woosh.NAME, 'self', 296, 8, 296, 12),
woosh.Token(woosh.OP, '.', 296, 12, 296, 13),
woosh.Token(woosh.NAME, '_set_stopinfo', 296, 13, 296, 26),
woosh.Token(woosh.OP, '(', 296, 26, 296, 27),
woosh.Token(woosh.NAME, 'frame', 296, 27, 296, 32),
woosh.Token(woosh.OP, ',', 296, 32, 296, 33),
woosh.Token(woosh.NAME, 'frame', 296, 34, 296, 39),
woosh.Token(woosh.OP, ',', 296, 39, 296, 40),
woosh.Token(woosh.NAME, 'lineno', 296, 41, 296, 47),
woosh.Token(woosh.OP, ')', 296, 47, 296, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 296, 48, 297, 0),
woosh.Token(woosh.DEDENT, '    ', 298, 0, 298, 4),
woosh.Token(woosh.NAME, 'def', 298, 4, 298, 7),
woosh.Token(woosh.NAME, 'set_step', 298, 8, 298, 16),
woosh.Token(woosh.OP, '(', 298, 16, 298, 17),
woosh.Token(woosh.NAME, 'self', 298, 17, 298, 21),
woosh.Token(woosh.OP, ')', 298, 21, 298, 22),
woosh.Token(woosh.OP, ':', 298, 22, 298, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 23, 299, 0),
woosh.Token(woosh.INDENT, '        ', 299, 0, 299, 8),
woosh.Token(woosh.STRING, '"""Stop after one line of code."""', 299, 8, 299, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 299, 42, 300, 0),
woosh.Token(woosh.COMMENT, '# Issue #13183: pdb skips frames after hitting a breakpoint and running', 300, 8, 300, 79),
woosh.Token(woosh.COMMENT, '# step commands.', 301, 8, 301, 24),
woosh.Token(woosh.COMMENT, '# Restore the trace function in the caller (that may not have been set', 302, 8, 302, 78),
woosh.Token(woosh.COMMENT, '# for performance reasons) when returning from the current frame.', 303, 8, 303, 73),
woosh.Token(woosh.NAME, 'if', 304, 8, 304, 10),
woosh.Token(woosh.NAME, 'self', 304, 11, 304, 15),
woosh.Token(woosh.OP, '.', 304, 15, 304, 16),
woosh.Token(woosh.NAME, 'frame_returning', 304, 16, 304, 31),
woosh.Token(woosh.OP, ':', 304, 31, 304, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 32, 305, 0),
woosh.Token(woosh.INDENT, '            ', 305, 0, 305, 12),
woosh.Token(woosh.NAME, 'caller_frame', 305, 12, 305, 24),
woosh.Token(woosh.OP, '=', 305, 25, 305, 26),
woosh.Token(woosh.NAME, 'self', 305, 27, 305, 31),
woosh.Token(woosh.OP, '.', 305, 31, 305, 32),
woosh.Token(woosh.NAME, 'frame_returning', 305, 32, 305, 47),
woosh.Token(woosh.OP, '.', 305, 47, 305, 48),
woosh.Token(woosh.NAME, 'f_back', 305, 48, 305, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 54, 306, 0),
woosh.Token(woosh.NAME, 'if', 306, 12, 306, 14),
woosh.Token(woosh.NAME, 'caller_frame', 306, 15, 306, 27),
woosh.Token(woosh.NAME, 'and', 306, 28, 306, 31),
woosh.Token(woosh.NAME, 'not', 306, 32, 306, 35),
woosh.Token(woosh.NAME, 'caller_frame', 306, 36, 306, 48),
woosh.Token(woosh.OP, '.', 306, 48, 306, 49),
woosh.Token(woosh.NAME, 'f_trace', 306, 49, 306, 56),
woosh.Token(woosh.OP, ':', 306, 56, 306, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 57, 307, 0),
woosh.Token(woosh.INDENT, '                ', 307, 0, 307, 16),
woosh.Token(woosh.NAME, 'caller_frame', 307, 16, 307, 28),
woosh.Token(woosh.OP, '.', 307, 28, 307, 29),
woosh.Token(woosh.NAME, 'f_trace', 307, 29, 307, 36),
woosh.Token(woosh.OP, '=', 307, 37, 307, 38),
woosh.Token(woosh.NAME, 'self', 307, 39, 307, 43),
woosh.Token(woosh.OP, '.', 307, 43, 307, 44),
woosh.Token(woosh.NAME, 'trace_dispatch', 307, 44, 307, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 307, 58, 308, 0),
woosh.Token(woosh.DEDENT, '        ', 308, 0, 308, 8),
woosh.Token(woosh.DEDENT, '', 308, 8, 308, 8),
woosh.Token(woosh.NAME, 'self', 308, 8, 308, 12),
woosh.Token(woosh.OP, '.', 308, 12, 308, 13),
woosh.Token(woosh.NAME, '_set_stopinfo', 308, 13, 308, 26),
woosh.Token(woosh.OP, '(', 308, 26, 308, 27),
woosh.Token(woosh.NAME, 'None', 308, 27, 308, 31),
woosh.Token(woosh.OP, ',', 308, 31, 308, 32),
woosh.Token(woosh.NAME, 'None', 308, 33, 308, 37),
woosh.Token(woosh.OP, ')', 308, 37, 308, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 38, 309, 0),
woosh.Token(woosh.DEDENT, '    ', 310, 0, 310, 4),
woosh.Token(woosh.NAME, 'def', 310, 4, 310, 7),
woosh.Token(woosh.NAME, 'set_next', 310, 8, 310, 16),
woosh.Token(woosh.OP, '(', 310, 16, 310, 17),
woosh.Token(woosh.NAME, 'self', 310, 17, 310, 21),
woosh.Token(woosh.OP, ',', 310, 21, 310, 22),
woosh.Token(woosh.NAME, 'frame', 310, 23, 310, 28),
woosh.Token(woosh.OP, ')', 310, 28, 310, 29),
woosh.Token(woosh.OP, ':', 310, 29, 310, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 30, 311, 0),
woosh.Token(woosh.INDENT, '        ', 311, 0, 311, 8),
woosh.Token(woosh.STRING, '"""Stop on the next line in or below the given frame."""', 311, 8, 311, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 64, 312, 0),
woosh.Token(woosh.NAME, 'self', 312, 8, 312, 12),
woosh.Token(woosh.OP, '.', 312, 12, 312, 13),
woosh.Token(woosh.NAME, '_set_stopinfo', 312, 13, 312, 26),
woosh.Token(woosh.OP, '(', 312, 26, 312, 27),
woosh.Token(woosh.NAME, 'frame', 312, 27, 312, 32),
woosh.Token(woosh.OP, ',', 312, 32, 312, 33),
woosh.Token(woosh.NAME, 'None', 312, 34, 312, 38),
woosh.Token(woosh.OP, ')', 312, 38, 312, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 39, 313, 0),
woosh.Token(woosh.DEDENT, '    ', 314, 0, 314, 4),
woosh.Token(woosh.NAME, 'def', 314, 4, 314, 7),
woosh.Token(woosh.NAME, 'set_return', 314, 8, 314, 18),
woosh.Token(woosh.OP, '(', 314, 18, 314, 19),
woosh.Token(woosh.NAME, 'self', 314, 19, 314, 23),
woosh.Token(woosh.OP, ',', 314, 23, 314, 24),
woosh.Token(woosh.NAME, 'frame', 314, 25, 314, 30),
woosh.Token(woosh.OP, ')', 314, 30, 314, 31),
woosh.Token(woosh.OP, ':', 314, 31, 314, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 32, 315, 0),
woosh.Token(woosh.INDENT, '        ', 315, 0, 315, 8),
woosh.Token(woosh.STRING, '"""Stop when returning from the given frame."""', 315, 8, 315, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 55, 316, 0),
woosh.Token(woosh.NAME, 'if', 316, 8, 316, 10),
woosh.Token(woosh.NAME, 'frame', 316, 11, 316, 16),
woosh.Token(woosh.OP, '.', 316, 16, 316, 17),
woosh.Token(woosh.NAME, 'f_code', 316, 17, 316, 23),
woosh.Token(woosh.OP, '.', 316, 23, 316, 24),
woosh.Token(woosh.NAME, 'co_flags', 316, 24, 316, 32),
woosh.Token(woosh.OP, '&', 316, 33, 316, 34),
woosh.Token(woosh.NAME, 'GENERATOR_AND_COROUTINE_FLAGS', 316, 35, 316, 64),
woosh.Token(woosh.OP, ':', 316, 64, 316, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 65, 317, 0),
woosh.Token(woosh.INDENT, '            ', 317, 0, 317, 12),
woosh.Token(woosh.NAME, 'self', 317, 12, 317, 16),
woosh.Token(woosh.OP, '.', 317, 16, 317, 17),
woosh.Token(woosh.NAME, '_set_stopinfo', 317, 17, 317, 30),
woosh.Token(woosh.OP, '(', 317, 30, 317, 31),
woosh.Token(woosh.NAME, 'frame', 317, 31, 317, 36),
woosh.Token(woosh.OP, ',', 317, 36, 317, 37),
woosh.Token(woosh.NAME, 'None', 317, 38, 317, 42),
woosh.Token(woosh.OP, ',', 317, 42, 317, 43),
woosh.Token(woosh.OP, '-', 317, 44, 317, 45),
woosh.Token(woosh.NUMBER, '1', 317, 45, 317, 46),
woosh.Token(woosh.OP, ')', 317, 46, 317, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 47, 318, 0),
woosh.Token(woosh.DEDENT, '        ', 318, 0, 318, 8),
woosh.Token(woosh.NAME, 'else', 318, 8, 318, 12),
woosh.Token(woosh.OP, ':', 318, 12, 318, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 13, 319, 0),
woosh.Token(woosh.INDENT, '            ', 319, 0, 319, 12),
woosh.Token(woosh.NAME, 'self', 319, 12, 319, 16),
woosh.Token(woosh.OP, '.', 319, 16, 319, 17),
woosh.Token(woosh.NAME, '_set_stopinfo', 319, 17, 319, 30),
woosh.Token(woosh.OP, '(', 319, 30, 319, 31),
woosh.Token(woosh.NAME, 'frame', 319, 31, 319, 36),
woosh.Token(woosh.OP, '.', 319, 36, 319, 37),
woosh.Token(woosh.NAME, 'f_back', 319, 37, 319, 43),
woosh.Token(woosh.OP, ',', 319, 43, 319, 44),
woosh.Token(woosh.NAME, 'frame', 319, 45, 319, 50),
woosh.Token(woosh.OP, ')', 319, 50, 319, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 51, 320, 0),
woosh.Token(woosh.DEDENT, '    ', 321, 0, 321, 4),
woosh.Token(woosh.DEDENT, '', 321, 4, 321, 4),
woosh.Token(woosh.NAME, 'def', 321, 4, 321, 7),
woosh.Token(woosh.NAME, 'set_trace', 321, 8, 321, 17),
woosh.Token(woosh.OP, '(', 321, 17, 321, 18),
woosh.Token(woosh.NAME, 'self', 321, 18, 321, 22),
woosh.Token(woosh.OP, ',', 321, 22, 321, 23),
woosh.Token(woosh.NAME, 'frame', 321, 24, 321, 29),
woosh.Token(woosh.OP, '=', 321, 29, 321, 30),
woosh.Token(woosh.NAME, 'None', 321, 30, 321, 34),
woosh.Token(woosh.OP, ')', 321, 34, 321, 35),
woosh.Token(woosh.OP, ':', 321, 35, 321, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 321, 36, 322, 0),
woosh.Token(woosh.INDENT, '        ', 322, 0, 322, 8),
woosh.Token(woosh.STRING, '"""Start debugging from frame.\r\n\r\n        If frame is not specified, debugging starts from caller\'s frame.\r\n        """', 322, 8, 325, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 11, 326, 0),
woosh.Token(woosh.NAME, 'if', 326, 8, 326, 10),
woosh.Token(woosh.NAME, 'frame', 326, 11, 326, 16),
woosh.Token(woosh.NAME, 'is', 326, 17, 326, 19),
woosh.Token(woosh.NAME, 'None', 326, 20, 326, 24),
woosh.Token(woosh.OP, ':', 326, 24, 326, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 25, 327, 0),
woosh.Token(woosh.INDENT, '            ', 327, 0, 327, 12),
woosh.Token(woosh.NAME, 'frame', 327, 12, 327, 17),
woosh.Token(woosh.OP, '=', 327, 18, 327, 19),
woosh.Token(woosh.NAME, 'sys', 327, 20, 327, 23),
woosh.Token(woosh.OP, '.', 327, 23, 327, 24),
woosh.Token(woosh.NAME, '_getframe', 327, 24, 327, 33),
woosh.Token(woosh.OP, '(', 327, 33, 327, 34),
woosh.Token(woosh.OP, ')', 327, 34, 327, 35),
woosh.Token(woosh.OP, '.', 327, 35, 327, 36),
woosh.Token(woosh.NAME, 'f_back', 327, 36, 327, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 42, 328, 0),
woosh.Token(woosh.DEDENT, '        ', 328, 0, 328, 8),
woosh.Token(woosh.NAME, 'self', 328, 8, 328, 12),
woosh.Token(woosh.OP, '.', 328, 12, 328, 13),
woosh.Token(woosh.NAME, 'reset', 328, 13, 328, 18),
woosh.Token(woosh.OP, '(', 328, 18, 328, 19),
woosh.Token(woosh.OP, ')', 328, 19, 328, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 328, 20, 329, 0),
woosh.Token(woosh.NAME, 'while', 329, 8, 329, 13),
woosh.Token(woosh.NAME, 'frame', 329, 14, 329, 19),
woosh.Token(woosh.OP, ':', 329, 19, 329, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 329, 20, 330, 0),
woosh.Token(woosh.INDENT, '            ', 330, 0, 330, 12),
woosh.Token(woosh.NAME, 'frame', 330, 12, 330, 17),
woosh.Token(woosh.OP, '.', 330, 17, 330, 18),
woosh.Token(woosh.NAME, 'f_trace', 330, 18, 330, 25),
woosh.Token(woosh.OP, '=', 330, 26, 330, 27),
woosh.Token(woosh.NAME, 'self', 330, 28, 330, 32),
woosh.Token(woosh.OP, '.', 330, 32, 330, 33),
woosh.Token(woosh.NAME, 'trace_dispatch', 330, 33, 330, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 330, 47, 331, 0),
woosh.Token(woosh.NAME, 'self', 331, 12, 331, 16),
woosh.Token(woosh.OP, '.', 331, 16, 331, 17),
woosh.Token(woosh.NAME, 'botframe', 331, 17, 331, 25),
woosh.Token(woosh.OP, '=', 331, 26, 331, 27),
woosh.Token(woosh.NAME, 'frame', 331, 28, 331, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 331, 33, 332, 0),
woosh.Token(woosh.NAME, 'frame', 332, 12, 332, 17),
woosh.Token(woosh.OP, '=', 332, 18, 332, 19),
woosh.Token(woosh.NAME, 'frame', 332, 20, 332, 25),
woosh.Token(woosh.OP, '.', 332, 25, 332, 26),
woosh.Token(woosh.NAME, 'f_back', 332, 26, 332, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 32, 333, 0),
woosh.Token(woosh.DEDENT, '        ', 333, 0, 333, 8),
woosh.Token(woosh.NAME, 'self', 333, 8, 333, 12),
woosh.Token(woosh.OP, '.', 333, 12, 333, 13),
woosh.Token(woosh.NAME, 'set_step', 333, 13, 333, 21),
woosh.Token(woosh.OP, '(', 333, 21, 333, 22),
woosh.Token(woosh.OP, ')', 333, 22, 333, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 333, 23, 334, 0),
woosh.Token(woosh.NAME, 'sys', 334, 8, 334, 11),
woosh.Token(woosh.OP, '.', 334, 11, 334, 12),
woosh.Token(woosh.NAME, 'settrace', 334, 12, 334, 20),
woosh.Token(woosh.OP, '(', 334, 20, 334, 21),
woosh.Token(woosh.NAME, 'self', 334, 21, 334, 25),
woosh.Token(woosh.OP, '.', 334, 25, 334, 26),
woosh.Token(woosh.NAME, 'trace_dispatch', 334, 26, 334, 40),
woosh.Token(woosh.OP, ')', 334, 40, 334, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 334, 41, 335, 0),
woosh.Token(woosh.DEDENT, '    ', 336, 0, 336, 4),
woosh.Token(woosh.NAME, 'def', 336, 4, 336, 7),
woosh.Token(woosh.NAME, 'set_continue', 336, 8, 336, 20),
woosh.Token(woosh.OP, '(', 336, 20, 336, 21),
woosh.Token(woosh.NAME, 'self', 336, 21, 336, 25),
woosh.Token(woosh.OP, ')', 336, 25, 336, 26),
woosh.Token(woosh.OP, ':', 336, 26, 336, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 27, 337, 0),
woosh.Token(woosh.INDENT, '        ', 337, 0, 337, 8),
woosh.Token(woosh.STRING, '"""Stop only at breakpoints or when finished.\r\n\r\n        If there are no breakpoints, set the system trace function to None.\r\n        """', 337, 8, 340, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 11, 341, 0),
woosh.Token(woosh.COMMENT, "# Don't stop except at breakpoints or when finished", 341, 8, 341, 59),
woosh.Token(woosh.NAME, 'self', 342, 8, 342, 12),
woosh.Token(woosh.OP, '.', 342, 12, 342, 13),
woosh.Token(woosh.NAME, '_set_stopinfo', 342, 13, 342, 26),
woosh.Token(woosh.OP, '(', 342, 26, 342, 27),
woosh.Token(woosh.NAME, 'self', 342, 27, 342, 31),
woosh.Token(woosh.OP, '.', 342, 31, 342, 32),
woosh.Token(woosh.NAME, 'botframe', 342, 32, 342, 40),
woosh.Token(woosh.OP, ',', 342, 40, 342, 41),
woosh.Token(woosh.NAME, 'None', 342, 42, 342, 46),
woosh.Token(woosh.OP, ',', 342, 46, 342, 47),
woosh.Token(woosh.OP, '-', 342, 48, 342, 49),
woosh.Token(woosh.NUMBER, '1', 342, 49, 342, 50),
woosh.Token(woosh.OP, ')', 342, 50, 342, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 51, 343, 0),
woosh.Token(woosh.NAME, 'if', 343, 8, 343, 10),
woosh.Token(woosh.NAME, 'not', 343, 11, 343, 14),
woosh.Token(woosh.NAME, 'self', 343, 15, 343, 19),
woosh.Token(woosh.OP, '.', 343, 19, 343, 20),
woosh.Token(woosh.NAME, 'breaks', 343, 20, 343, 26),
woosh.Token(woosh.OP, ':', 343, 26, 343, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 343, 27, 344, 0),
woosh.Token(woosh.COMMENT, '# no breakpoints; run without debugger overhead', 344, 12, 344, 59),
woosh.Token(woosh.INDENT, '            ', 345, 0, 345, 12),
woosh.Token(woosh.NAME, 'sys', 345, 12, 345, 15),
woosh.Token(woosh.OP, '.', 345, 15, 345, 16),
woosh.Token(woosh.NAME, 'settrace', 345, 16, 345, 24),
woosh.Token(woosh.OP, '(', 345, 24, 345, 25),
woosh.Token(woosh.NAME, 'None', 345, 25, 345, 29),
woosh.Token(woosh.OP, ')', 345, 29, 345, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 30, 346, 0),
woosh.Token(woosh.NAME, 'frame', 346, 12, 346, 17),
woosh.Token(woosh.OP, '=', 346, 18, 346, 19),
woosh.Token(woosh.NAME, 'sys', 346, 20, 346, 23),
woosh.Token(woosh.OP, '.', 346, 23, 346, 24),
woosh.Token(woosh.NAME, '_getframe', 346, 24, 346, 33),
woosh.Token(woosh.OP, '(', 346, 33, 346, 34),
woosh.Token(woosh.OP, ')', 346, 34, 346, 35),
woosh.Token(woosh.OP, '.', 346, 35, 346, 36),
woosh.Token(woosh.NAME, 'f_back', 346, 36, 346, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 42, 347, 0),
woosh.Token(woosh.NAME, 'while', 347, 12, 347, 17),
woosh.Token(woosh.NAME, 'frame', 347, 18, 347, 23),
woosh.Token(woosh.NAME, 'and', 347, 24, 347, 27),
woosh.Token(woosh.NAME, 'frame', 347, 28, 347, 33),
woosh.Token(woosh.NAME, 'is', 347, 34, 347, 36),
woosh.Token(woosh.NAME, 'not', 347, 37, 347, 40),
woosh.Token(woosh.NAME, 'self', 347, 41, 347, 45),
woosh.Token(woosh.OP, '.', 347, 45, 347, 46),
woosh.Token(woosh.NAME, 'botframe', 347, 46, 347, 54),
woosh.Token(woosh.OP, ':', 347, 54, 347, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 55, 348, 0),
woosh.Token(woosh.INDENT, '                ', 348, 0, 348, 16),
woosh.Token(woosh.NAME, 'del', 348, 16, 348, 19),
woosh.Token(woosh.NAME, 'frame', 348, 20, 348, 25),
woosh.Token(woosh.OP, '.', 348, 25, 348, 26),
woosh.Token(woosh.NAME, 'f_trace', 348, 26, 348, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 33, 349, 0),
woosh.Token(woosh.NAME, 'frame', 349, 16, 349, 21),
woosh.Token(woosh.OP, '=', 349, 22, 349, 23),
woosh.Token(woosh.NAME, 'frame', 349, 24, 349, 29),
woosh.Token(woosh.OP, '.', 349, 29, 349, 30),
woosh.Token(woosh.NAME, 'f_back', 349, 30, 349, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 36, 350, 0),
woosh.Token(woosh.DEDENT, '    ', 351, 0, 351, 4),
woosh.Token(woosh.DEDENT, '', 351, 4, 351, 4),
woosh.Token(woosh.DEDENT, '', 351, 4, 351, 4),
woosh.Token(woosh.NAME, 'def', 351, 4, 351, 7),
woosh.Token(woosh.NAME, 'set_quit', 351, 8, 351, 16),
woosh.Token(woosh.OP, '(', 351, 16, 351, 17),
woosh.Token(woosh.NAME, 'self', 351, 17, 351, 21),
woosh.Token(woosh.OP, ')', 351, 21, 351, 22),
woosh.Token(woosh.OP, ':', 351, 22, 351, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 23, 352, 0),
woosh.Token(woosh.INDENT, '        ', 352, 0, 352, 8),
woosh.Token(woosh.STRING, '"""Set quitting attribute to True.\r\n\r\n        Raises BdbQuit exception in the next call to a dispatch_*() method.\r\n        """', 352, 8, 355, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 355, 11, 356, 0),
woosh.Token(woosh.NAME, 'self', 356, 8, 356, 12),
woosh.Token(woosh.OP, '.', 356, 12, 356, 13),
woosh.Token(woosh.NAME, 'stopframe', 356, 13, 356, 22),
woosh.Token(woosh.OP, '=', 356, 23, 356, 24),
woosh.Token(woosh.NAME, 'self', 356, 25, 356, 29),
woosh.Token(woosh.OP, '.', 356, 29, 356, 30),
woosh.Token(woosh.NAME, 'botframe', 356, 30, 356, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 356, 38, 357, 0),
woosh.Token(woosh.NAME, 'self', 357, 8, 357, 12),
woosh.Token(woosh.OP, '.', 357, 12, 357, 13),
woosh.Token(woosh.NAME, 'returnframe', 357, 13, 357, 24),
woosh.Token(woosh.OP, '=', 357, 25, 357, 26),
woosh.Token(woosh.NAME, 'None', 357, 27, 357, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 31, 358, 0),
woosh.Token(woosh.NAME, 'self', 358, 8, 358, 12),
woosh.Token(woosh.OP, '.', 358, 12, 358, 13),
woosh.Token(woosh.NAME, 'quitting', 358, 13, 358, 21),
woosh.Token(woosh.OP, '=', 358, 22, 358, 23),
woosh.Token(woosh.NAME, 'True', 358, 24, 358, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 28, 359, 0),
woosh.Token(woosh.NAME, 'sys', 359, 8, 359, 11),
woosh.Token(woosh.OP, '.', 359, 11, 359, 12),
woosh.Token(woosh.NAME, 'settrace', 359, 12, 359, 20),
woosh.Token(woosh.OP, '(', 359, 20, 359, 21),
woosh.Token(woosh.NAME, 'None', 359, 21, 359, 25),
woosh.Token(woosh.OP, ')', 359, 25, 359, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 26, 360, 0),
woosh.Token(woosh.COMMENT, '# Derived classes and clients can call the following methods', 361, 4, 361, 64),
woosh.Token(woosh.COMMENT, '# to manipulate breakpoints.  These methods return an', 362, 4, 362, 57),
woosh.Token(woosh.COMMENT, '# error message if something went wrong, None if all is well.', 363, 4, 363, 65),
woosh.Token(woosh.COMMENT, '# Set_break prints out the breakpoint line and file:lineno.', 364, 4, 364, 63),
woosh.Token(woosh.COMMENT, '# Call self.get_*break*() to see the breakpoints or better', 365, 4, 365, 62),
woosh.Token(woosh.COMMENT, '# for bp in Breakpoint.bpbynumber: if bp: bp.bpprint().', 366, 4, 366, 59),
woosh.Token(woosh.DEDENT, '    ', 368, 0, 368, 4),
woosh.Token(woosh.NAME, 'def', 368, 4, 368, 7),
woosh.Token(woosh.NAME, 'set_break', 368, 8, 368, 17),
woosh.Token(woosh.OP, '(', 368, 17, 368, 18),
woosh.Token(woosh.NAME, 'self', 368, 18, 368, 22),
woosh.Token(woosh.OP, ',', 368, 22, 368, 23),
woosh.Token(woosh.NAME, 'filename', 368, 24, 368, 32),
woosh.Token(woosh.OP, ',', 368, 32, 368, 33),
woosh.Token(woosh.NAME, 'lineno', 368, 34, 368, 40),
woosh.Token(woosh.OP, ',', 368, 40, 368, 41),
woosh.Token(woosh.NAME, 'temporary', 368, 42, 368, 51),
woosh.Token(woosh.OP, '=', 368, 51, 368, 52),
woosh.Token(woosh.NAME, 'False', 368, 52, 368, 57),
woosh.Token(woosh.OP, ',', 368, 57, 368, 58),
woosh.Token(woosh.NAME, 'cond', 368, 59, 368, 63),
woosh.Token(woosh.OP, '=', 368, 63, 368, 64),
woosh.Token(woosh.NAME, 'None', 368, 64, 368, 68),
woosh.Token(woosh.OP, ',', 368, 68, 368, 69),
woosh.Token(woosh.NAME, 'funcname', 369, 18, 369, 26),
woosh.Token(woosh.OP, '=', 369, 26, 369, 27),
woosh.Token(woosh.NAME, 'None', 369, 27, 369, 31),
woosh.Token(woosh.OP, ')', 369, 31, 369, 32),
woosh.Token(woosh.OP, ':', 369, 32, 369, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 33, 370, 0),
woosh.Token(woosh.INDENT, '        ', 370, 0, 370, 8),
woosh.Token(woosh.STRING, '"""Set a new breakpoint for filename:lineno.\r\n\r\n        If lineno doesn\'t exist for the filename, return an error message.\r\n        The filename should be in canonical form.\r\n        """', 370, 8, 374, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 11, 375, 0),
woosh.Token(woosh.NAME, 'filename', 375, 8, 375, 16),
woosh.Token(woosh.OP, '=', 375, 17, 375, 18),
woosh.Token(woosh.NAME, 'self', 375, 19, 375, 23),
woosh.Token(woosh.OP, '.', 375, 23, 375, 24),
woosh.Token(woosh.NAME, 'canonic', 375, 24, 375, 31),
woosh.Token(woosh.OP, '(', 375, 31, 375, 32),
woosh.Token(woosh.NAME, 'filename', 375, 32, 375, 40),
woosh.Token(woosh.OP, ')', 375, 40, 375, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 41, 376, 0),
woosh.Token(woosh.NAME, 'import', 376, 8, 376, 14),
woosh.Token(woosh.NAME, 'linecache', 376, 15, 376, 24),
woosh.Token(woosh.COMMENT, '# Import as late as possible', 376, 25, 376, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 53, 377, 0),
woosh.Token(woosh.NAME, 'line', 377, 8, 377, 12),
woosh.Token(woosh.OP, '=', 377, 13, 377, 14),
woosh.Token(woosh.NAME, 'linecache', 377, 15, 377, 24),
woosh.Token(woosh.OP, '.', 377, 24, 377, 25),
woosh.Token(woosh.NAME, 'getline', 377, 25, 377, 32),
woosh.Token(woosh.OP, '(', 377, 32, 377, 33),
woosh.Token(woosh.NAME, 'filename', 377, 33, 377, 41),
woosh.Token(woosh.OP, ',', 377, 41, 377, 42),
woosh.Token(woosh.NAME, 'lineno', 377, 43, 377, 49),
woosh.Token(woosh.OP, ')', 377, 49, 377, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 50, 378, 0),
woosh.Token(woosh.NAME, 'if', 378, 8, 378, 10),
woosh.Token(woosh.NAME, 'not', 378, 11, 378, 14),
woosh.Token(woosh.NAME, 'line', 378, 15, 378, 19),
woosh.Token(woosh.OP, ':', 378, 19, 378, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 20, 379, 0),
woosh.Token(woosh.INDENT, '            ', 379, 0, 379, 12),
woosh.Token(woosh.NAME, 'return', 379, 12, 379, 18),
woosh.Token(woosh.STRING, "'Line %s:%d does not exist'", 379, 19, 379, 46),
woosh.Token(woosh.OP, '%', 379, 47, 379, 48),
woosh.Token(woosh.OP, '(', 379, 49, 379, 50),
woosh.Token(woosh.NAME, 'filename', 379, 50, 379, 58),
woosh.Token(woosh.OP, ',', 379, 58, 379, 59),
woosh.Token(woosh.NAME, 'lineno', 379, 60, 379, 66),
woosh.Token(woosh.OP, ')', 379, 66, 379, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 67, 380, 0),
woosh.Token(woosh.DEDENT, '        ', 380, 0, 380, 8),
woosh.Token(woosh.NAME, 'list', 380, 8, 380, 12),
woosh.Token(woosh.OP, '=', 380, 13, 380, 14),
woosh.Token(woosh.NAME, 'self', 380, 15, 380, 19),
woosh.Token(woosh.OP, '.', 380, 19, 380, 20),
woosh.Token(woosh.NAME, 'breaks', 380, 20, 380, 26),
woosh.Token(woosh.OP, '.', 380, 26, 380, 27),
woosh.Token(woosh.NAME, 'setdefault', 380, 27, 380, 37),
woosh.Token(woosh.OP, '(', 380, 37, 380, 38),
woosh.Token(woosh.NAME, 'filename', 380, 38, 380, 46),
woosh.Token(woosh.OP, ',', 380, 46, 380, 47),
woosh.Token(woosh.OP, '[', 380, 48, 380, 49),
woosh.Token(woosh.OP, ']', 380, 49, 380, 50),
woosh.Token(woosh.OP, ')', 380, 50, 380, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 51, 381, 0),
woosh.Token(woosh.NAME, 'if', 381, 8, 381, 10),
woosh.Token(woosh.NAME, 'lineno', 381, 11, 381, 17),
woosh.Token(woosh.NAME, 'not', 381, 18, 381, 21),
woosh.Token(woosh.NAME, 'in', 381, 22, 381, 24),
woosh.Token(woosh.NAME, 'list', 381, 25, 381, 29),
woosh.Token(woosh.OP, ':', 381, 29, 381, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 30, 382, 0),
woosh.Token(woosh.INDENT, '            ', 382, 0, 382, 12),
woosh.Token(woosh.NAME, 'list', 382, 12, 382, 16),
woosh.Token(woosh.OP, '.', 382, 16, 382, 17),
woosh.Token(woosh.NAME, 'append', 382, 17, 382, 23),
woosh.Token(woosh.OP, '(', 382, 23, 382, 24),
woosh.Token(woosh.NAME, 'lineno', 382, 24, 382, 30),
woosh.Token(woosh.OP, ')', 382, 30, 382, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 31, 383, 0),
woosh.Token(woosh.DEDENT, '        ', 383, 0, 383, 8),
woosh.Token(woosh.NAME, 'bp', 383, 8, 383, 10),
woosh.Token(woosh.OP, '=', 383, 11, 383, 12),
woosh.Token(woosh.NAME, 'Breakpoint', 383, 13, 383, 23),
woosh.Token(woosh.OP, '(', 383, 23, 383, 24),
woosh.Token(woosh.NAME, 'filename', 383, 24, 383, 32),
woosh.Token(woosh.OP, ',', 383, 32, 383, 33),
woosh.Token(woosh.NAME, 'lineno', 383, 34, 383, 40),
woosh.Token(woosh.OP, ',', 383, 40, 383, 41),
woosh.Token(woosh.NAME, 'temporary', 383, 42, 383, 51),
woosh.Token(woosh.OP, ',', 383, 51, 383, 52),
woosh.Token(woosh.NAME, 'cond', 383, 53, 383, 57),
woosh.Token(woosh.OP, ',', 383, 57, 383, 58),
woosh.Token(woosh.NAME, 'funcname', 383, 59, 383, 67),
woosh.Token(woosh.OP, ')', 383, 67, 383, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 383, 68, 384, 0),
woosh.Token(woosh.NAME, 'return', 384, 8, 384, 14),
woosh.Token(woosh.NAME, 'None', 384, 15, 384, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 19, 385, 0),
woosh.Token(woosh.DEDENT, '    ', 386, 0, 386, 4),
woosh.Token(woosh.NAME, 'def', 386, 4, 386, 7),
woosh.Token(woosh.NAME, '_prune_breaks', 386, 8, 386, 21),
woosh.Token(woosh.OP, '(', 386, 21, 386, 22),
woosh.Token(woosh.NAME, 'self', 386, 22, 386, 26),
woosh.Token(woosh.OP, ',', 386, 26, 386, 27),
woosh.Token(woosh.NAME, 'filename', 386, 28, 386, 36),
woosh.Token(woosh.OP, ',', 386, 36, 386, 37),
woosh.Token(woosh.NAME, 'lineno', 386, 38, 386, 44),
woosh.Token(woosh.OP, ')', 386, 44, 386, 45),
woosh.Token(woosh.OP, ':', 386, 45, 386, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 46, 387, 0),
woosh.Token(woosh.INDENT, '        ', 387, 0, 387, 8),
woosh.Token(woosh.STRING, '"""Prune breakpoints for filename:lineno.\r\n\r\n        A list of breakpoints is maintained in the Bdb instance and in\r\n        the Breakpoint class.  If a breakpoint in the Bdb instance no\r\n        longer exists in the Breakpoint class, then it\'s removed from the\r\n        Bdb instance.\r\n        """', 387, 8, 393, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 11, 394, 0),
woosh.Token(woosh.NAME, 'if', 394, 8, 394, 10),
woosh.Token(woosh.OP, '(', 394, 11, 394, 12),
woosh.Token(woosh.NAME, 'filename', 394, 12, 394, 20),
woosh.Token(woosh.OP, ',', 394, 20, 394, 21),
woosh.Token(woosh.NAME, 'lineno', 394, 22, 394, 28),
woosh.Token(woosh.OP, ')', 394, 28, 394, 29),
woosh.Token(woosh.NAME, 'not', 394, 30, 394, 33),
woosh.Token(woosh.NAME, 'in', 394, 34, 394, 36),
woosh.Token(woosh.NAME, 'Breakpoint', 394, 37, 394, 47),
woosh.Token(woosh.OP, '.', 394, 47, 394, 48),
woosh.Token(woosh.NAME, 'bplist', 394, 48, 394, 54),
woosh.Token(woosh.OP, ':', 394, 54, 394, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 55, 395, 0),
woosh.Token(woosh.INDENT, '            ', 395, 0, 395, 12),
woosh.Token(woosh.NAME, 'self', 395, 12, 395, 16),
woosh.Token(woosh.OP, '.', 395, 16, 395, 17),
woosh.Token(woosh.NAME, 'breaks', 395, 17, 395, 23),
woosh.Token(woosh.OP, '[', 395, 23, 395, 24),
woosh.Token(woosh.NAME, 'filename', 395, 24, 395, 32),
woosh.Token(woosh.OP, ']', 395, 32, 395, 33),
woosh.Token(woosh.OP, '.', 395, 33, 395, 34),
woosh.Token(woosh.NAME, 'remove', 395, 34, 395, 40),
woosh.Token(woosh.OP, '(', 395, 40, 395, 41),
woosh.Token(woosh.NAME, 'lineno', 395, 41, 395, 47),
woosh.Token(woosh.OP, ')', 395, 47, 395, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 48, 396, 0),
woosh.Token(woosh.DEDENT, '        ', 396, 0, 396, 8),
woosh.Token(woosh.NAME, 'if', 396, 8, 396, 10),
woosh.Token(woosh.NAME, 'not', 396, 11, 396, 14),
woosh.Token(woosh.NAME, 'self', 396, 15, 396, 19),
woosh.Token(woosh.OP, '.', 396, 19, 396, 20),
woosh.Token(woosh.NAME, 'breaks', 396, 20, 396, 26),
woosh.Token(woosh.OP, '[', 396, 26, 396, 27),
woosh.Token(woosh.NAME, 'filename', 396, 27, 396, 35),
woosh.Token(woosh.OP, ']', 396, 35, 396, 36),
woosh.Token(woosh.OP, ':', 396, 36, 396, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 396, 37, 397, 0),
woosh.Token(woosh.INDENT, '            ', 397, 0, 397, 12),
woosh.Token(woosh.NAME, 'del', 397, 12, 397, 15),
woosh.Token(woosh.NAME, 'self', 397, 16, 397, 20),
woosh.Token(woosh.OP, '.', 397, 20, 397, 21),
woosh.Token(woosh.NAME, 'breaks', 397, 21, 397, 27),
woosh.Token(woosh.OP, '[', 397, 27, 397, 28),
woosh.Token(woosh.NAME, 'filename', 397, 28, 397, 36),
woosh.Token(woosh.OP, ']', 397, 36, 397, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 397, 37, 398, 0),
woosh.Token(woosh.DEDENT, '    ', 399, 0, 399, 4),
woosh.Token(woosh.DEDENT, '', 399, 4, 399, 4),
woosh.Token(woosh.NAME, 'def', 399, 4, 399, 7),
woosh.Token(woosh.NAME, 'clear_break', 399, 8, 399, 19),
woosh.Token(woosh.OP, '(', 399, 19, 399, 20),
woosh.Token(woosh.NAME, 'self', 399, 20, 399, 24),
woosh.Token(woosh.OP, ',', 399, 24, 399, 25),
woosh.Token(woosh.NAME, 'filename', 399, 26, 399, 34),
woosh.Token(woosh.OP, ',', 399, 34, 399, 35),
woosh.Token(woosh.NAME, 'lineno', 399, 36, 399, 42),
woosh.Token(woosh.OP, ')', 399, 42, 399, 43),
woosh.Token(woosh.OP, ':', 399, 43, 399, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 44, 400, 0),
woosh.Token(woosh.INDENT, '        ', 400, 0, 400, 8),
woosh.Token(woosh.STRING, '"""Delete breakpoints for filename:lineno.\r\n\r\n        If no breakpoints were set, return an error message.\r\n        """', 400, 8, 403, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 403, 11, 404, 0),
woosh.Token(woosh.NAME, 'filename', 404, 8, 404, 16),
woosh.Token(woosh.OP, '=', 404, 17, 404, 18),
woosh.Token(woosh.NAME, 'self', 404, 19, 404, 23),
woosh.Token(woosh.OP, '.', 404, 23, 404, 24),
woosh.Token(woosh.NAME, 'canonic', 404, 24, 404, 31),
woosh.Token(woosh.OP, '(', 404, 31, 404, 32),
woosh.Token(woosh.NAME, 'filename', 404, 32, 404, 40),
woosh.Token(woosh.OP, ')', 404, 40, 404, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 41, 405, 0),
woosh.Token(woosh.NAME, 'if', 405, 8, 405, 10),
woosh.Token(woosh.NAME, 'filename', 405, 11, 405, 19),
woosh.Token(woosh.NAME, 'not', 405, 20, 405, 23),
woosh.Token(woosh.NAME, 'in', 405, 24, 405, 26),
woosh.Token(woosh.NAME, 'self', 405, 27, 405, 31),
woosh.Token(woosh.OP, '.', 405, 31, 405, 32),
woosh.Token(woosh.NAME, 'breaks', 405, 32, 405, 38),
woosh.Token(woosh.OP, ':', 405, 38, 405, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 39, 406, 0),
woosh.Token(woosh.INDENT, '            ', 406, 0, 406, 12),
woosh.Token(woosh.NAME, 'return', 406, 12, 406, 18),
woosh.Token(woosh.STRING, "'There are no breakpoints in %s'", 406, 19, 406, 51),
woosh.Token(woosh.OP, '%', 406, 52, 406, 53),
woosh.Token(woosh.NAME, 'filename', 406, 54, 406, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 62, 407, 0),
woosh.Token(woosh.DEDENT, '        ', 407, 0, 407, 8),
woosh.Token(woosh.NAME, 'if', 407, 8, 407, 10),
woosh.Token(woosh.NAME, 'lineno', 407, 11, 407, 17),
woosh.Token(woosh.NAME, 'not', 407, 18, 407, 21),
woosh.Token(woosh.NAME, 'in', 407, 22, 407, 24),
woosh.Token(woosh.NAME, 'self', 407, 25, 407, 29),
woosh.Token(woosh.OP, '.', 407, 29, 407, 30),
woosh.Token(woosh.NAME, 'breaks', 407, 30, 407, 36),
woosh.Token(woosh.OP, '[', 407, 36, 407, 37),
woosh.Token(woosh.NAME, 'filename', 407, 37, 407, 45),
woosh.Token(woosh.OP, ']', 407, 45, 407, 46),
woosh.Token(woosh.OP, ':', 407, 46, 407, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 47, 408, 0),
woosh.Token(woosh.INDENT, '            ', 408, 0, 408, 12),
woosh.Token(woosh.NAME, 'return', 408, 12, 408, 18),
woosh.Token(woosh.STRING, "'There is no breakpoint at %s:%d'", 408, 19, 408, 52),
woosh.Token(woosh.OP, '%', 408, 53, 408, 54),
woosh.Token(woosh.OP, '(', 408, 55, 408, 56),
woosh.Token(woosh.NAME, 'filename', 408, 56, 408, 64),
woosh.Token(woosh.OP, ',', 408, 64, 408, 65),
woosh.Token(woosh.NAME, 'lineno', 408, 66, 408, 72),
woosh.Token(woosh.OP, ')', 408, 72, 408, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 73, 409, 0),
woosh.Token(woosh.COMMENT, "# If there's only one bp in the list for that file,line", 409, 8, 409, 63),
woosh.Token(woosh.COMMENT, '# pair, then remove the breaks entry', 410, 8, 410, 44),
woosh.Token(woosh.DEDENT, '        ', 411, 0, 411, 8),
woosh.Token(woosh.NAME, 'for', 411, 8, 411, 11),
woosh.Token(woosh.NAME, 'bp', 411, 12, 411, 14),
woosh.Token(woosh.NAME, 'in', 411, 15, 411, 17),
woosh.Token(woosh.NAME, 'Breakpoint', 411, 18, 411, 28),
woosh.Token(woosh.OP, '.', 411, 28, 411, 29),
woosh.Token(woosh.NAME, 'bplist', 411, 29, 411, 35),
woosh.Token(woosh.OP, '[', 411, 35, 411, 36),
woosh.Token(woosh.NAME, 'filename', 411, 36, 411, 44),
woosh.Token(woosh.OP, ',', 411, 44, 411, 45),
woosh.Token(woosh.NAME, 'lineno', 411, 46, 411, 52),
woosh.Token(woosh.OP, ']', 411, 52, 411, 53),
woosh.Token(woosh.OP, '[', 411, 53, 411, 54),
woosh.Token(woosh.OP, ':', 411, 54, 411, 55),
woosh.Token(woosh.OP, ']', 411, 55, 411, 56),
woosh.Token(woosh.OP, ':', 411, 56, 411, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 57, 412, 0),
woosh.Token(woosh.INDENT, '            ', 412, 0, 412, 12),
woosh.Token(woosh.NAME, 'bp', 412, 12, 412, 14),
woosh.Token(woosh.OP, '.', 412, 14, 412, 15),
woosh.Token(woosh.NAME, 'deleteMe', 412, 15, 412, 23),
woosh.Token(woosh.OP, '(', 412, 23, 412, 24),
woosh.Token(woosh.OP, ')', 412, 24, 412, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 25, 413, 0),
woosh.Token(woosh.DEDENT, '        ', 413, 0, 413, 8),
woosh.Token(woosh.NAME, 'self', 413, 8, 413, 12),
woosh.Token(woosh.OP, '.', 413, 12, 413, 13),
woosh.Token(woosh.NAME, '_prune_breaks', 413, 13, 413, 26),
woosh.Token(woosh.OP, '(', 413, 26, 413, 27),
woosh.Token(woosh.NAME, 'filename', 413, 27, 413, 35),
woosh.Token(woosh.OP, ',', 413, 35, 413, 36),
woosh.Token(woosh.NAME, 'lineno', 413, 37, 413, 43),
woosh.Token(woosh.OP, ')', 413, 43, 413, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 44, 414, 0),
woosh.Token(woosh.NAME, 'return', 414, 8, 414, 14),
woosh.Token(woosh.NAME, 'None', 414, 15, 414, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 19, 415, 0),
woosh.Token(woosh.DEDENT, '    ', 416, 0, 416, 4),
woosh.Token(woosh.NAME, 'def', 416, 4, 416, 7),
woosh.Token(woosh.NAME, 'clear_bpbynumber', 416, 8, 416, 24),
woosh.Token(woosh.OP, '(', 416, 24, 416, 25),
woosh.Token(woosh.NAME, 'self', 416, 25, 416, 29),
woosh.Token(woosh.OP, ',', 416, 29, 416, 30),
woosh.Token(woosh.NAME, 'arg', 416, 31, 416, 34),
woosh.Token(woosh.OP, ')', 416, 34, 416, 35),
woosh.Token(woosh.OP, ':', 416, 35, 416, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 36, 417, 0),
woosh.Token(woosh.INDENT, '        ', 417, 0, 417, 8),
woosh.Token(woosh.STRING, '"""Delete a breakpoint by its index in Breakpoint.bpbynumber.\r\n\r\n        If arg is invalid, return an error message.\r\n        """', 417, 8, 420, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 11, 421, 0),
woosh.Token(woosh.NAME, 'try', 421, 8, 421, 11),
woosh.Token(woosh.OP, ':', 421, 11, 421, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 12, 422, 0),
woosh.Token(woosh.INDENT, '            ', 422, 0, 422, 12),
woosh.Token(woosh.NAME, 'bp', 422, 12, 422, 14),
woosh.Token(woosh.OP, '=', 422, 15, 422, 16),
woosh.Token(woosh.NAME, 'self', 422, 17, 422, 21),
woosh.Token(woosh.OP, '.', 422, 21, 422, 22),
woosh.Token(woosh.NAME, 'get_bpbynumber', 422, 22, 422, 36),
woosh.Token(woosh.OP, '(', 422, 36, 422, 37),
woosh.Token(woosh.NAME, 'arg', 422, 37, 422, 40),
woosh.Token(woosh.OP, ')', 422, 40, 422, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 41, 423, 0),
woosh.Token(woosh.DEDENT, '        ', 423, 0, 423, 8),
woosh.Token(woosh.NAME, 'except', 423, 8, 423, 14),
woosh.Token(woosh.NAME, 'ValueError', 423, 15, 423, 25),
woosh.Token(woosh.NAME, 'as', 423, 26, 423, 28),
woosh.Token(woosh.NAME, 'err', 423, 29, 423, 32),
woosh.Token(woosh.OP, ':', 423, 32, 423, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 423, 33, 424, 0),
woosh.Token(woosh.INDENT, '            ', 424, 0, 424, 12),
woosh.Token(woosh.NAME, 'return', 424, 12, 424, 18),
woosh.Token(woosh.NAME, 'str', 424, 19, 424, 22),
woosh.Token(woosh.OP, '(', 424, 22, 424, 23),
woosh.Token(woosh.NAME, 'err', 424, 23, 424, 26),
woosh.Token(woosh.OP, ')', 424, 26, 424, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 27, 425, 0),
woosh.Token(woosh.DEDENT, '        ', 425, 0, 425, 8),
woosh.Token(woosh.NAME, 'bp', 425, 8, 425, 10),
woosh.Token(woosh.OP, '.', 425, 10, 425, 11),
woosh.Token(woosh.NAME, 'deleteMe', 425, 11, 425, 19),
woosh.Token(woosh.OP, '(', 425, 19, 425, 20),
woosh.Token(woosh.OP, ')', 425, 20, 425, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 425, 21, 426, 0),
woosh.Token(woosh.NAME, 'self', 426, 8, 426, 12),
woosh.Token(woosh.OP, '.', 426, 12, 426, 13),
woosh.Token(woosh.NAME, '_prune_breaks', 426, 13, 426, 26),
woosh.Token(woosh.OP, '(', 426, 26, 426, 27),
woosh.Token(woosh.NAME, 'bp', 426, 27, 426, 29),
woosh.Token(woosh.OP, '.', 426, 29, 426, 30),
woosh.Token(woosh.NAME, 'file', 426, 30, 426, 34),
woosh.Token(woosh.OP, ',', 426, 34, 426, 35),
woosh.Token(woosh.NAME, 'bp', 426, 36, 426, 38),
woosh.Token(woosh.OP, '.', 426, 38, 426, 39),
woosh.Token(woosh.NAME, 'line', 426, 39, 426, 43),
woosh.Token(woosh.OP, ')', 426, 43, 426, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 44, 427, 0),
woosh.Token(woosh.NAME, 'return', 427, 8, 427, 14),
woosh.Token(woosh.NAME, 'None', 427, 15, 427, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 427, 19, 428, 0),
woosh.Token(woosh.DEDENT, '    ', 429, 0, 429, 4),
woosh.Token(woosh.NAME, 'def', 429, 4, 429, 7),
woosh.Token(woosh.NAME, 'clear_all_file_breaks', 429, 8, 429, 29),
woosh.Token(woosh.OP, '(', 429, 29, 429, 30),
woosh.Token(woosh.NAME, 'self', 429, 30, 429, 34),
woosh.Token(woosh.OP, ',', 429, 34, 429, 35),
woosh.Token(woosh.NAME, 'filename', 429, 36, 429, 44),
woosh.Token(woosh.OP, ')', 429, 44, 429, 45),
woosh.Token(woosh.OP, ':', 429, 45, 429, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 46, 430, 0),
woosh.Token(woosh.INDENT, '        ', 430, 0, 430, 8),
woosh.Token(woosh.STRING, '"""Delete all breakpoints in filename.\r\n\r\n        If none were set, return an error message.\r\n        """', 430, 8, 433, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 11, 434, 0),
woosh.Token(woosh.NAME, 'filename', 434, 8, 434, 16),
woosh.Token(woosh.OP, '=', 434, 17, 434, 18),
woosh.Token(woosh.NAME, 'self', 434, 19, 434, 23),
woosh.Token(woosh.OP, '.', 434, 23, 434, 24),
woosh.Token(woosh.NAME, 'canonic', 434, 24, 434, 31),
woosh.Token(woosh.OP, '(', 434, 31, 434, 32),
woosh.Token(woosh.NAME, 'filename', 434, 32, 434, 40),
woosh.Token(woosh.OP, ')', 434, 40, 434, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 434, 41, 435, 0),
woosh.Token(woosh.NAME, 'if', 435, 8, 435, 10),
woosh.Token(woosh.NAME, 'filename', 435, 11, 435, 19),
woosh.Token(woosh.NAME, 'not', 435, 20, 435, 23),
woosh.Token(woosh.NAME, 'in', 435, 24, 435, 26),
woosh.Token(woosh.NAME, 'self', 435, 27, 435, 31),
woosh.Token(woosh.OP, '.', 435, 31, 435, 32),
woosh.Token(woosh.NAME, 'breaks', 435, 32, 435, 38),
woosh.Token(woosh.OP, ':', 435, 38, 435, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 435, 39, 436, 0),
woosh.Token(woosh.INDENT, '            ', 436, 0, 436, 12),
woosh.Token(woosh.NAME, 'return', 436, 12, 436, 18),
woosh.Token(woosh.STRING, "'There are no breakpoints in %s'", 436, 19, 436, 51),
woosh.Token(woosh.OP, '%', 436, 52, 436, 53),
woosh.Token(woosh.NAME, 'filename', 436, 54, 436, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 62, 437, 0),
woosh.Token(woosh.DEDENT, '        ', 437, 0, 437, 8),
woosh.Token(woosh.NAME, 'for', 437, 8, 437, 11),
woosh.Token(woosh.NAME, 'line', 437, 12, 437, 16),
woosh.Token(woosh.NAME, 'in', 437, 17, 437, 19),
woosh.Token(woosh.NAME, 'self', 437, 20, 437, 24),
woosh.Token(woosh.OP, '.', 437, 24, 437, 25),
woosh.Token(woosh.NAME, 'breaks', 437, 25, 437, 31),
woosh.Token(woosh.OP, '[', 437, 31, 437, 32),
woosh.Token(woosh.NAME, 'filename', 437, 32, 437, 40),
woosh.Token(woosh.OP, ']', 437, 40, 437, 41),
woosh.Token(woosh.OP, ':', 437, 41, 437, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 437, 42, 438, 0),
woosh.Token(woosh.INDENT, '            ', 438, 0, 438, 12),
woosh.Token(woosh.NAME, 'blist', 438, 12, 438, 17),
woosh.Token(woosh.OP, '=', 438, 18, 438, 19),
woosh.Token(woosh.NAME, 'Breakpoint', 438, 20, 438, 30),
woosh.Token(woosh.OP, '.', 438, 30, 438, 31),
woosh.Token(woosh.NAME, 'bplist', 438, 31, 438, 37),
woosh.Token(woosh.OP, '[', 438, 37, 438, 38),
woosh.Token(woosh.NAME, 'filename', 438, 38, 438, 46),
woosh.Token(woosh.OP, ',', 438, 46, 438, 47),
woosh.Token(woosh.NAME, 'line', 438, 48, 438, 52),
woosh.Token(woosh.OP, ']', 438, 52, 438, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 438, 53, 439, 0),
woosh.Token(woosh.NAME, 'for', 439, 12, 439, 15),
woosh.Token(woosh.NAME, 'bp', 439, 16, 439, 18),
woosh.Token(woosh.NAME, 'in', 439, 19, 439, 21),
woosh.Token(woosh.NAME, 'blist', 439, 22, 439, 27),
woosh.Token(woosh.OP, ':', 439, 27, 439, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 439, 28, 440, 0),
woosh.Token(woosh.INDENT, '                ', 440, 0, 440, 16),
woosh.Token(woosh.NAME, 'bp', 440, 16, 440, 18),
woosh.Token(woosh.OP, '.', 440, 18, 440, 19),
woosh.Token(woosh.NAME, 'deleteMe', 440, 19, 440, 27),
woosh.Token(woosh.OP, '(', 440, 27, 440, 28),
woosh.Token(woosh.OP, ')', 440, 28, 440, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 440, 29, 441, 0),
woosh.Token(woosh.DEDENT, '        ', 441, 0, 441, 8),
woosh.Token(woosh.DEDENT, '', 441, 8, 441, 8),
woosh.Token(woosh.NAME, 'del', 441, 8, 441, 11),
woosh.Token(woosh.NAME, 'self', 441, 12, 441, 16),
woosh.Token(woosh.OP, '.', 441, 16, 441, 17),
woosh.Token(woosh.NAME, 'breaks', 441, 17, 441, 23),
woosh.Token(woosh.OP, '[', 441, 23, 441, 24),
woosh.Token(woosh.NAME, 'filename', 441, 24, 441, 32),
woosh.Token(woosh.OP, ']', 441, 32, 441, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 441, 33, 442, 0),
woosh.Token(woosh.NAME, 'return', 442, 8, 442, 14),
woosh.Token(woosh.NAME, 'None', 442, 15, 442, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 442, 19, 443, 0),
woosh.Token(woosh.DEDENT, '    ', 444, 0, 444, 4),
woosh.Token(woosh.NAME, 'def', 444, 4, 444, 7),
woosh.Token(woosh.NAME, 'clear_all_breaks', 444, 8, 444, 24),
woosh.Token(woosh.OP, '(', 444, 24, 444, 25),
woosh.Token(woosh.NAME, 'self', 444, 25, 444, 29),
woosh.Token(woosh.OP, ')', 444, 29, 444, 30),
woosh.Token(woosh.OP, ':', 444, 30, 444, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 444, 31, 445, 0),
woosh.Token(woosh.INDENT, '        ', 445, 0, 445, 8),
woosh.Token(woosh.STRING, '"""Delete all existing breakpoints.\r\n\r\n        If none were set, return an error message.\r\n        """', 445, 8, 448, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 448, 11, 449, 0),
woosh.Token(woosh.NAME, 'if', 449, 8, 449, 10),
woosh.Token(woosh.NAME, 'not', 449, 11, 449, 14),
woosh.Token(woosh.NAME, 'self', 449, 15, 449, 19),
woosh.Token(woosh.OP, '.', 449, 19, 449, 20),
woosh.Token(woosh.NAME, 'breaks', 449, 20, 449, 26),
woosh.Token(woosh.OP, ':', 449, 26, 449, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 449, 27, 450, 0),
woosh.Token(woosh.INDENT, '            ', 450, 0, 450, 12),
woosh.Token(woosh.NAME, 'return', 450, 12, 450, 18),
woosh.Token(woosh.STRING, "'There are no breakpoints'", 450, 19, 450, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 450, 45, 451, 0),
woosh.Token(woosh.DEDENT, '        ', 451, 0, 451, 8),
woosh.Token(woosh.NAME, 'for', 451, 8, 451, 11),
woosh.Token(woosh.NAME, 'bp', 451, 12, 451, 14),
woosh.Token(woosh.NAME, 'in', 451, 15, 451, 17),
woosh.Token(woosh.NAME, 'Breakpoint', 451, 18, 451, 28),
woosh.Token(woosh.OP, '.', 451, 28, 451, 29),
woosh.Token(woosh.NAME, 'bpbynumber', 451, 29, 451, 39),
woosh.Token(woosh.OP, ':', 451, 39, 451, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 451, 40, 452, 0),
woosh.Token(woosh.INDENT, '            ', 452, 0, 452, 12),
woosh.Token(woosh.NAME, 'if', 452, 12, 452, 14),
woosh.Token(woosh.NAME, 'bp', 452, 15, 452, 17),
woosh.Token(woosh.OP, ':', 452, 17, 452, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 452, 18, 453, 0),
woosh.Token(woosh.INDENT, '                ', 453, 0, 453, 16),
woosh.Token(woosh.NAME, 'bp', 453, 16, 453, 18),
woosh.Token(woosh.OP, '.', 453, 18, 453, 19),
woosh.Token(woosh.NAME, 'deleteMe', 453, 19, 453, 27),
woosh.Token(woosh.OP, '(', 453, 27, 453, 28),
woosh.Token(woosh.OP, ')', 453, 28, 453, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 453, 29, 454, 0),
woosh.Token(woosh.DEDENT, '        ', 454, 0, 454, 8),
woosh.Token(woosh.DEDENT, '', 454, 8, 454, 8),
woosh.Token(woosh.NAME, 'self', 454, 8, 454, 12),
woosh.Token(woosh.OP, '.', 454, 12, 454, 13),
woosh.Token(woosh.NAME, 'breaks', 454, 13, 454, 19),
woosh.Token(woosh.OP, '=', 454, 20, 454, 21),
woosh.Token(woosh.OP, '{', 454, 22, 454, 23),
woosh.Token(woosh.OP, '}', 454, 23, 454, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 24, 455, 0),
woosh.Token(woosh.NAME, 'return', 455, 8, 455, 14),
woosh.Token(woosh.NAME, 'None', 455, 15, 455, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 455, 19, 456, 0),
woosh.Token(woosh.DEDENT, '    ', 457, 0, 457, 4),
woosh.Token(woosh.NAME, 'def', 457, 4, 457, 7),
woosh.Token(woosh.NAME, 'get_bpbynumber', 457, 8, 457, 22),
woosh.Token(woosh.OP, '(', 457, 22, 457, 23),
woosh.Token(woosh.NAME, 'self', 457, 23, 457, 27),
woosh.Token(woosh.OP, ',', 457, 27, 457, 28),
woosh.Token(woosh.NAME, 'arg', 457, 29, 457, 32),
woosh.Token(woosh.OP, ')', 457, 32, 457, 33),
woosh.Token(woosh.OP, ':', 457, 33, 457, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 457, 34, 458, 0),
woosh.Token(woosh.INDENT, '        ', 458, 0, 458, 8),
woosh.Token(woosh.STRING, '"""Return a breakpoint by its index in Breakpoint.bybpnumber.\r\n\r\n        For invalid arg values or if the breakpoint doesn\'t exist,\r\n        raise a ValueError.\r\n        """', 458, 8, 462, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 11, 463, 0),
woosh.Token(woosh.NAME, 'if', 463, 8, 463, 10),
woosh.Token(woosh.NAME, 'not', 463, 11, 463, 14),
woosh.Token(woosh.NAME, 'arg', 463, 15, 463, 18),
woosh.Token(woosh.OP, ':', 463, 18, 463, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 19, 464, 0),
woosh.Token(woosh.INDENT, '            ', 464, 0, 464, 12),
woosh.Token(woosh.NAME, 'raise', 464, 12, 464, 17),
woosh.Token(woosh.NAME, 'ValueError', 464, 18, 464, 28),
woosh.Token(woosh.OP, '(', 464, 28, 464, 29),
woosh.Token(woosh.STRING, "'Breakpoint number expected'", 464, 29, 464, 57),
woosh.Token(woosh.OP, ')', 464, 57, 464, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 58, 465, 0),
woosh.Token(woosh.DEDENT, '        ', 465, 0, 465, 8),
woosh.Token(woosh.NAME, 'try', 465, 8, 465, 11),
woosh.Token(woosh.OP, ':', 465, 11, 465, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 465, 12, 466, 0),
woosh.Token(woosh.INDENT, '            ', 466, 0, 466, 12),
woosh.Token(woosh.NAME, 'number', 466, 12, 466, 18),
woosh.Token(woosh.OP, '=', 466, 19, 466, 20),
woosh.Token(woosh.NAME, 'int', 466, 21, 466, 24),
woosh.Token(woosh.OP, '(', 466, 24, 466, 25),
woosh.Token(woosh.NAME, 'arg', 466, 25, 466, 28),
woosh.Token(woosh.OP, ')', 466, 28, 466, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 466, 29, 467, 0),
woosh.Token(woosh.DEDENT, '        ', 467, 0, 467, 8),
woosh.Token(woosh.NAME, 'except', 467, 8, 467, 14),
woosh.Token(woosh.NAME, 'ValueError', 467, 15, 467, 25),
woosh.Token(woosh.OP, ':', 467, 25, 467, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 467, 26, 468, 0),
woosh.Token(woosh.INDENT, '            ', 468, 0, 468, 12),
woosh.Token(woosh.NAME, 'raise', 468, 12, 468, 17),
woosh.Token(woosh.NAME, 'ValueError', 468, 18, 468, 28),
woosh.Token(woosh.OP, '(', 468, 28, 468, 29),
woosh.Token(woosh.STRING, "'Non-numeric breakpoint number %s'", 468, 29, 468, 63),
woosh.Token(woosh.OP, '%', 468, 64, 468, 65),
woosh.Token(woosh.NAME, 'arg', 468, 66, 468, 69),
woosh.Token(woosh.OP, ')', 468, 69, 468, 70),
woosh.Token(woosh.NAME, 'from', 468, 71, 468, 75),
woosh.Token(woosh.NAME, 'None', 468, 76, 468, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 468, 80, 469, 0),
woosh.Token(woosh.DEDENT, '        ', 469, 0, 469, 8),
woosh.Token(woosh.NAME, 'try', 469, 8, 469, 11),
woosh.Token(woosh.OP, ':', 469, 11, 469, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 469, 12, 470, 0),
woosh.Token(woosh.INDENT, '            ', 470, 0, 470, 12),
woosh.Token(woosh.NAME, 'bp', 470, 12, 470, 14),
woosh.Token(woosh.OP, '=', 470, 15, 470, 16),
woosh.Token(woosh.NAME, 'Breakpoint', 470, 17, 470, 27),
woosh.Token(woosh.OP, '.', 470, 27, 470, 28),
woosh.Token(woosh.NAME, 'bpbynumber', 470, 28, 470, 38),
woosh.Token(woosh.OP, '[', 470, 38, 470, 39),
woosh.Token(woosh.NAME, 'number', 470, 39, 470, 45),
woosh.Token(woosh.OP, ']', 470, 45, 470, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 46, 471, 0),
woosh.Token(woosh.DEDENT, '        ', 471, 0, 471, 8),
woosh.Token(woosh.NAME, 'except', 471, 8, 471, 14),
woosh.Token(woosh.NAME, 'IndexError', 471, 15, 471, 25),
woosh.Token(woosh.OP, ':', 471, 25, 471, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 471, 26, 472, 0),
woosh.Token(woosh.INDENT, '            ', 472, 0, 472, 12),
woosh.Token(woosh.NAME, 'raise', 472, 12, 472, 17),
woosh.Token(woosh.NAME, 'ValueError', 472, 18, 472, 28),
woosh.Token(woosh.OP, '(', 472, 28, 472, 29),
woosh.Token(woosh.STRING, "'Breakpoint number %d out of range'", 472, 29, 472, 64),
woosh.Token(woosh.OP, '%', 472, 65, 472, 66),
woosh.Token(woosh.NAME, 'number', 472, 67, 472, 73),
woosh.Token(woosh.OP, ')', 472, 73, 472, 74),
woosh.Token(woosh.NAME, 'from', 472, 75, 472, 79),
woosh.Token(woosh.NAME, 'None', 472, 80, 472, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 472, 84, 473, 0),
woosh.Token(woosh.DEDENT, '        ', 473, 0, 473, 8),
woosh.Token(woosh.NAME, 'if', 473, 8, 473, 10),
woosh.Token(woosh.NAME, 'bp', 473, 11, 473, 13),
woosh.Token(woosh.NAME, 'is', 473, 14, 473, 16),
woosh.Token(woosh.NAME, 'None', 473, 17, 473, 21),
woosh.Token(woosh.OP, ':', 473, 21, 473, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 473, 22, 474, 0),
woosh.Token(woosh.INDENT, '            ', 474, 0, 474, 12),
woosh.Token(woosh.NAME, 'raise', 474, 12, 474, 17),
woosh.Token(woosh.NAME, 'ValueError', 474, 18, 474, 28),
woosh.Token(woosh.OP, '(', 474, 28, 474, 29),
woosh.Token(woosh.STRING, "'Breakpoint %d already deleted'", 474, 29, 474, 60),
woosh.Token(woosh.OP, '%', 474, 61, 474, 62),
woosh.Token(woosh.NAME, 'number', 474, 63, 474, 69),
woosh.Token(woosh.OP, ')', 474, 69, 474, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 474, 70, 475, 0),
woosh.Token(woosh.DEDENT, '        ', 475, 0, 475, 8),
woosh.Token(woosh.NAME, 'return', 475, 8, 475, 14),
woosh.Token(woosh.NAME, 'bp', 475, 15, 475, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 17, 476, 0),
woosh.Token(woosh.DEDENT, '    ', 477, 0, 477, 4),
woosh.Token(woosh.NAME, 'def', 477, 4, 477, 7),
woosh.Token(woosh.NAME, 'get_break', 477, 8, 477, 17),
woosh.Token(woosh.OP, '(', 477, 17, 477, 18),
woosh.Token(woosh.NAME, 'self', 477, 18, 477, 22),
woosh.Token(woosh.OP, ',', 477, 22, 477, 23),
woosh.Token(woosh.NAME, 'filename', 477, 24, 477, 32),
woosh.Token(woosh.OP, ',', 477, 32, 477, 33),
woosh.Token(woosh.NAME, 'lineno', 477, 34, 477, 40),
woosh.Token(woosh.OP, ')', 477, 40, 477, 41),
woosh.Token(woosh.OP, ':', 477, 41, 477, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 42, 478, 0),
woosh.Token(woosh.INDENT, '        ', 478, 0, 478, 8),
woosh.Token(woosh.STRING, '"""Return True if there is a breakpoint for filename:lineno."""', 478, 8, 478, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 71, 479, 0),
woosh.Token(woosh.NAME, 'filename', 479, 8, 479, 16),
woosh.Token(woosh.OP, '=', 479, 17, 479, 18),
woosh.Token(woosh.NAME, 'self', 479, 19, 479, 23),
woosh.Token(woosh.OP, '.', 479, 23, 479, 24),
woosh.Token(woosh.NAME, 'canonic', 479, 24, 479, 31),
woosh.Token(woosh.OP, '(', 479, 31, 479, 32),
woosh.Token(woosh.NAME, 'filename', 479, 32, 479, 40),
woosh.Token(woosh.OP, ')', 479, 40, 479, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 41, 480, 0),
woosh.Token(woosh.NAME, 'return', 480, 8, 480, 14),
woosh.Token(woosh.NAME, 'filename', 480, 15, 480, 23),
woosh.Token(woosh.NAME, 'in', 480, 24, 480, 26),
woosh.Token(woosh.NAME, 'self', 480, 27, 480, 31),
woosh.Token(woosh.OP, '.', 480, 31, 480, 32),
woosh.Token(woosh.NAME, 'breaks', 480, 32, 480, 38),
woosh.Token(woosh.NAME, 'and', 480, 39, 480, 42),
woosh.Token(woosh.NAME, 'lineno', 481, 12, 481, 18),
woosh.Token(woosh.NAME, 'in', 481, 19, 481, 21),
woosh.Token(woosh.NAME, 'self', 481, 22, 481, 26),
woosh.Token(woosh.OP, '.', 481, 26, 481, 27),
woosh.Token(woosh.NAME, 'breaks', 481, 27, 481, 33),
woosh.Token(woosh.OP, '[', 481, 33, 481, 34),
woosh.Token(woosh.NAME, 'filename', 481, 34, 481, 42),
woosh.Token(woosh.OP, ']', 481, 42, 481, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 481, 43, 482, 0),
woosh.Token(woosh.DEDENT, '    ', 483, 0, 483, 4),
woosh.Token(woosh.NAME, 'def', 483, 4, 483, 7),
woosh.Token(woosh.NAME, 'get_breaks', 483, 8, 483, 18),
woosh.Token(woosh.OP, '(', 483, 18, 483, 19),
woosh.Token(woosh.NAME, 'self', 483, 19, 483, 23),
woosh.Token(woosh.OP, ',', 483, 23, 483, 24),
woosh.Token(woosh.NAME, 'filename', 483, 25, 483, 33),
woosh.Token(woosh.OP, ',', 483, 33, 483, 34),
woosh.Token(woosh.NAME, 'lineno', 483, 35, 483, 41),
woosh.Token(woosh.OP, ')', 483, 41, 483, 42),
woosh.Token(woosh.OP, ':', 483, 42, 483, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 43, 484, 0),
woosh.Token(woosh.INDENT, '        ', 484, 0, 484, 8),
woosh.Token(woosh.STRING, '"""Return all breakpoints for filename:lineno.\r\n\r\n        If no breakpoints are set, return an empty list.\r\n        """', 484, 8, 487, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 11, 488, 0),
woosh.Token(woosh.NAME, 'filename', 488, 8, 488, 16),
woosh.Token(woosh.OP, '=', 488, 17, 488, 18),
woosh.Token(woosh.NAME, 'self', 488, 19, 488, 23),
woosh.Token(woosh.OP, '.', 488, 23, 488, 24),
woosh.Token(woosh.NAME, 'canonic', 488, 24, 488, 31),
woosh.Token(woosh.OP, '(', 488, 31, 488, 32),
woosh.Token(woosh.NAME, 'filename', 488, 32, 488, 40),
woosh.Token(woosh.OP, ')', 488, 40, 488, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 488, 41, 489, 0),
woosh.Token(woosh.NAME, 'return', 489, 8, 489, 14),
woosh.Token(woosh.NAME, 'filename', 489, 15, 489, 23),
woosh.Token(woosh.NAME, 'in', 489, 24, 489, 26),
woosh.Token(woosh.NAME, 'self', 489, 27, 489, 31),
woosh.Token(woosh.OP, '.', 489, 31, 489, 32),
woosh.Token(woosh.NAME, 'breaks', 489, 32, 489, 38),
woosh.Token(woosh.NAME, 'and', 489, 39, 489, 42),
woosh.Token(woosh.NAME, 'lineno', 490, 12, 490, 18),
woosh.Token(woosh.NAME, 'in', 490, 19, 490, 21),
woosh.Token(woosh.NAME, 'self', 490, 22, 490, 26),
woosh.Token(woosh.OP, '.', 490, 26, 490, 27),
woosh.Token(woosh.NAME, 'breaks', 490, 27, 490, 33),
woosh.Token(woosh.OP, '[', 490, 33, 490, 34),
woosh.Token(woosh.NAME, 'filename', 490, 34, 490, 42),
woosh.Token(woosh.OP, ']', 490, 42, 490, 43),
woosh.Token(woosh.NAME, 'and', 490, 44, 490, 47),
woosh.Token(woosh.NAME, 'Breakpoint', 491, 12, 491, 22),
woosh.Token(woosh.OP, '.', 491, 22, 491, 23),
woosh.Token(woosh.NAME, 'bplist', 491, 23, 491, 29),
woosh.Token(woosh.OP, '[', 491, 29, 491, 30),
woosh.Token(woosh.NAME, 'filename', 491, 30, 491, 38),
woosh.Token(woosh.OP, ',', 491, 38, 491, 39),
woosh.Token(woosh.NAME, 'lineno', 491, 40, 491, 46),
woosh.Token(woosh.OP, ']', 491, 46, 491, 47),
woosh.Token(woosh.NAME, 'or', 491, 48, 491, 50),
woosh.Token(woosh.OP, '[', 491, 51, 491, 52),
woosh.Token(woosh.OP, ']', 491, 52, 491, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 53, 492, 0),
woosh.Token(woosh.DEDENT, '    ', 493, 0, 493, 4),
woosh.Token(woosh.NAME, 'def', 493, 4, 493, 7),
woosh.Token(woosh.NAME, 'get_file_breaks', 493, 8, 493, 23),
woosh.Token(woosh.OP, '(', 493, 23, 493, 24),
woosh.Token(woosh.NAME, 'self', 493, 24, 493, 28),
woosh.Token(woosh.OP, ',', 493, 28, 493, 29),
woosh.Token(woosh.NAME, 'filename', 493, 30, 493, 38),
woosh.Token(woosh.OP, ')', 493, 38, 493, 39),
woosh.Token(woosh.OP, ':', 493, 39, 493, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 493, 40, 494, 0),
woosh.Token(woosh.INDENT, '        ', 494, 0, 494, 8),
woosh.Token(woosh.STRING, '"""Return all lines with breakpoints for filename.\r\n\r\n        If no breakpoints are set, return an empty list.\r\n        """', 494, 8, 497, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 11, 498, 0),
woosh.Token(woosh.NAME, 'filename', 498, 8, 498, 16),
woosh.Token(woosh.OP, '=', 498, 17, 498, 18),
woosh.Token(woosh.NAME, 'self', 498, 19, 498, 23),
woosh.Token(woosh.OP, '.', 498, 23, 498, 24),
woosh.Token(woosh.NAME, 'canonic', 498, 24, 498, 31),
woosh.Token(woosh.OP, '(', 498, 31, 498, 32),
woosh.Token(woosh.NAME, 'filename', 498, 32, 498, 40),
woosh.Token(woosh.OP, ')', 498, 40, 498, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 41, 499, 0),
woosh.Token(woosh.NAME, 'if', 499, 8, 499, 10),
woosh.Token(woosh.NAME, 'filename', 499, 11, 499, 19),
woosh.Token(woosh.NAME, 'in', 499, 20, 499, 22),
woosh.Token(woosh.NAME, 'self', 499, 23, 499, 27),
woosh.Token(woosh.OP, '.', 499, 27, 499, 28),
woosh.Token(woosh.NAME, 'breaks', 499, 28, 499, 34),
woosh.Token(woosh.OP, ':', 499, 34, 499, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 35, 500, 0),
woosh.Token(woosh.INDENT, '            ', 500, 0, 500, 12),
woosh.Token(woosh.NAME, 'return', 500, 12, 500, 18),
woosh.Token(woosh.NAME, 'self', 500, 19, 500, 23),
woosh.Token(woosh.OP, '.', 500, 23, 500, 24),
woosh.Token(woosh.NAME, 'breaks', 500, 24, 500, 30),
woosh.Token(woosh.OP, '[', 500, 30, 500, 31),
woosh.Token(woosh.NAME, 'filename', 500, 31, 500, 39),
woosh.Token(woosh.OP, ']', 500, 39, 500, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 40, 501, 0),
woosh.Token(woosh.DEDENT, '        ', 501, 0, 501, 8),
woosh.Token(woosh.NAME, 'else', 501, 8, 501, 12),
woosh.Token(woosh.OP, ':', 501, 12, 501, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 13, 502, 0),
woosh.Token(woosh.INDENT, '            ', 502, 0, 502, 12),
woosh.Token(woosh.NAME, 'return', 502, 12, 502, 18),
woosh.Token(woosh.OP, '[', 502, 19, 502, 20),
woosh.Token(woosh.OP, ']', 502, 20, 502, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 21, 503, 0),
woosh.Token(woosh.DEDENT, '    ', 504, 0, 504, 4),
woosh.Token(woosh.DEDENT, '', 504, 4, 504, 4),
woosh.Token(woosh.NAME, 'def', 504, 4, 504, 7),
woosh.Token(woosh.NAME, 'get_all_breaks', 504, 8, 504, 22),
woosh.Token(woosh.OP, '(', 504, 22, 504, 23),
woosh.Token(woosh.NAME, 'self', 504, 23, 504, 27),
woosh.Token(woosh.OP, ')', 504, 27, 504, 28),
woosh.Token(woosh.OP, ':', 504, 28, 504, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 504, 29, 505, 0),
woosh.Token(woosh.INDENT, '        ', 505, 0, 505, 8),
woosh.Token(woosh.STRING, '"""Return all breakpoints that are set."""', 505, 8, 505, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 50, 506, 0),
woosh.Token(woosh.NAME, 'return', 506, 8, 506, 14),
woosh.Token(woosh.NAME, 'self', 506, 15, 506, 19),
woosh.Token(woosh.OP, '.', 506, 19, 506, 20),
woosh.Token(woosh.NAME, 'breaks', 506, 20, 506, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 506, 26, 507, 0),
woosh.Token(woosh.COMMENT, '# Derived classes and clients can call the following method', 508, 4, 508, 63),
woosh.Token(woosh.COMMENT, '# to get a data structure representing a stack trace.', 509, 4, 509, 57),
woosh.Token(woosh.DEDENT, '    ', 511, 0, 511, 4),
woosh.Token(woosh.NAME, 'def', 511, 4, 511, 7),
woosh.Token(woosh.NAME, 'get_stack', 511, 8, 511, 17),
woosh.Token(woosh.OP, '(', 511, 17, 511, 18),
woosh.Token(woosh.NAME, 'self', 511, 18, 511, 22),
woosh.Token(woosh.OP, ',', 511, 22, 511, 23),
woosh.Token(woosh.NAME, 'f', 511, 24, 511, 25),
woosh.Token(woosh.OP, ',', 511, 25, 511, 26),
woosh.Token(woosh.NAME, 't', 511, 27, 511, 28),
woosh.Token(woosh.OP, ')', 511, 28, 511, 29),
woosh.Token(woosh.OP, ':', 511, 29, 511, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 30, 512, 0),
woosh.Token(woosh.INDENT, '        ', 512, 0, 512, 8),
woosh.Token(woosh.STRING, '"""Return a list of (frame, lineno) in a stack trace and a size.\r\n\r\n        List starts with original calling frame, if there is one.\r\n        Size may be number of frames above or below f.\r\n        """', 512, 8, 516, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 516, 11, 517, 0),
woosh.Token(woosh.NAME, 'stack', 517, 8, 517, 13),
woosh.Token(woosh.OP, '=', 517, 14, 517, 15),
woosh.Token(woosh.OP, '[', 517, 16, 517, 17),
woosh.Token(woosh.OP, ']', 517, 17, 517, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 517, 18, 518, 0),
woosh.Token(woosh.NAME, 'if', 518, 8, 518, 10),
woosh.Token(woosh.NAME, 't', 518, 11, 518, 12),
woosh.Token(woosh.NAME, 'and', 518, 13, 518, 16),
woosh.Token(woosh.NAME, 't', 518, 17, 518, 18),
woosh.Token(woosh.OP, '.', 518, 18, 518, 19),
woosh.Token(woosh.NAME, 'tb_frame', 518, 19, 518, 27),
woosh.Token(woosh.NAME, 'is', 518, 28, 518, 30),
woosh.Token(woosh.NAME, 'f', 518, 31, 518, 32),
woosh.Token(woosh.OP, ':', 518, 32, 518, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 518, 33, 519, 0),
woosh.Token(woosh.INDENT, '            ', 519, 0, 519, 12),
woosh.Token(woosh.NAME, 't', 519, 12, 519, 13),
woosh.Token(woosh.OP, '=', 519, 14, 519, 15),
woosh.Token(woosh.NAME, 't', 519, 16, 519, 17),
woosh.Token(woosh.OP, '.', 519, 17, 519, 18),
woosh.Token(woosh.NAME, 'tb_next', 519, 18, 519, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 25, 520, 0),
woosh.Token(woosh.DEDENT, '        ', 520, 0, 520, 8),
woosh.Token(woosh.NAME, 'while', 520, 8, 520, 13),
woosh.Token(woosh.NAME, 'f', 520, 14, 520, 15),
woosh.Token(woosh.NAME, 'is', 520, 16, 520, 18),
woosh.Token(woosh.NAME, 'not', 520, 19, 520, 22),
woosh.Token(woosh.NAME, 'None', 520, 23, 520, 27),
woosh.Token(woosh.OP, ':', 520, 27, 520, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 520, 28, 521, 0),
woosh.Token(woosh.INDENT, '            ', 521, 0, 521, 12),
woosh.Token(woosh.NAME, 'stack', 521, 12, 521, 17),
woosh.Token(woosh.OP, '.', 521, 17, 521, 18),
woosh.Token(woosh.NAME, 'append', 521, 18, 521, 24),
woosh.Token(woosh.OP, '(', 521, 24, 521, 25),
woosh.Token(woosh.OP, '(', 521, 25, 521, 26),
woosh.Token(woosh.NAME, 'f', 521, 26, 521, 27),
woosh.Token(woosh.OP, ',', 521, 27, 521, 28),
woosh.Token(woosh.NAME, 'f', 521, 29, 521, 30),
woosh.Token(woosh.OP, '.', 521, 30, 521, 31),
woosh.Token(woosh.NAME, 'f_lineno', 521, 31, 521, 39),
woosh.Token(woosh.OP, ')', 521, 39, 521, 40),
woosh.Token(woosh.OP, ')', 521, 40, 521, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 521, 41, 522, 0),
woosh.Token(woosh.NAME, 'if', 522, 12, 522, 14),
woosh.Token(woosh.NAME, 'f', 522, 15, 522, 16),
woosh.Token(woosh.NAME, 'is', 522, 17, 522, 19),
woosh.Token(woosh.NAME, 'self', 522, 20, 522, 24),
woosh.Token(woosh.OP, '.', 522, 24, 522, 25),
woosh.Token(woosh.NAME, 'botframe', 522, 25, 522, 33),
woosh.Token(woosh.OP, ':', 522, 33, 522, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 34, 523, 0),
woosh.Token(woosh.INDENT, '                ', 523, 0, 523, 16),
woosh.Token(woosh.NAME, 'break', 523, 16, 523, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 523, 21, 524, 0),
woosh.Token(woosh.DEDENT, '            ', 524, 0, 524, 12),
woosh.Token(woosh.NAME, 'f', 524, 12, 524, 13),
woosh.Token(woosh.OP, '=', 524, 14, 524, 15),
woosh.Token(woosh.NAME, 'f', 524, 16, 524, 17),
woosh.Token(woosh.OP, '.', 524, 17, 524, 18),
woosh.Token(woosh.NAME, 'f_back', 524, 18, 524, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 524, 24, 525, 0),
woosh.Token(woosh.DEDENT, '        ', 525, 0, 525, 8),
woosh.Token(woosh.NAME, 'stack', 525, 8, 525, 13),
woosh.Token(woosh.OP, '.', 525, 13, 525, 14),
woosh.Token(woosh.NAME, 'reverse', 525, 14, 525, 21),
woosh.Token(woosh.OP, '(', 525, 21, 525, 22),
woosh.Token(woosh.OP, ')', 525, 22, 525, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 23, 526, 0),
woosh.Token(woosh.NAME, 'i', 526, 8, 526, 9),
woosh.Token(woosh.OP, '=', 526, 10, 526, 11),
woosh.Token(woosh.NAME, 'max', 526, 12, 526, 15),
woosh.Token(woosh.OP, '(', 526, 15, 526, 16),
woosh.Token(woosh.NUMBER, '0', 526, 16, 526, 17),
woosh.Token(woosh.OP, ',', 526, 17, 526, 18),
woosh.Token(woosh.NAME, 'len', 526, 19, 526, 22),
woosh.Token(woosh.OP, '(', 526, 22, 526, 23),
woosh.Token(woosh.NAME, 'stack', 526, 23, 526, 28),
woosh.Token(woosh.OP, ')', 526, 28, 526, 29),
woosh.Token(woosh.OP, '-', 526, 30, 526, 31),
woosh.Token(woosh.NUMBER, '1', 526, 32, 526, 33),
woosh.Token(woosh.OP, ')', 526, 33, 526, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 34, 527, 0),
woosh.Token(woosh.NAME, 'while', 527, 8, 527, 13),
woosh.Token(woosh.NAME, 't', 527, 14, 527, 15),
woosh.Token(woosh.NAME, 'is', 527, 16, 527, 18),
woosh.Token(woosh.NAME, 'not', 527, 19, 527, 22),
woosh.Token(woosh.NAME, 'None', 527, 23, 527, 27),
woosh.Token(woosh.OP, ':', 527, 27, 527, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 527, 28, 528, 0),
woosh.Token(woosh.INDENT, '            ', 528, 0, 528, 12),
woosh.Token(woosh.NAME, 'stack', 528, 12, 528, 17),
woosh.Token(woosh.OP, '.', 528, 17, 528, 18),
woosh.Token(woosh.NAME, 'append', 528, 18, 528, 24),
woosh.Token(woosh.OP, '(', 528, 24, 528, 25),
woosh.Token(woosh.OP, '(', 528, 25, 528, 26),
woosh.Token(woosh.NAME, 't', 528, 26, 528, 27),
woosh.Token(woosh.OP, '.', 528, 27, 528, 28),
woosh.Token(woosh.NAME, 'tb_frame', 528, 28, 528, 36),
woosh.Token(woosh.OP, ',', 528, 36, 528, 37),
woosh.Token(woosh.NAME, 't', 528, 38, 528, 39),
woosh.Token(woosh.OP, '.', 528, 39, 528, 40),
woosh.Token(woosh.NAME, 'tb_lineno', 528, 40, 528, 49),
woosh.Token(woosh.OP, ')', 528, 49, 528, 50),
woosh.Token(woosh.OP, ')', 528, 50, 528, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 51, 529, 0),
woosh.Token(woosh.NAME, 't', 529, 12, 529, 13),
woosh.Token(woosh.OP, '=', 529, 14, 529, 15),
woosh.Token(woosh.NAME, 't', 529, 16, 529, 17),
woosh.Token(woosh.OP, '.', 529, 17, 529, 18),
woosh.Token(woosh.NAME, 'tb_next', 529, 18, 529, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 25, 530, 0),
woosh.Token(woosh.DEDENT, '        ', 530, 0, 530, 8),
woosh.Token(woosh.NAME, 'if', 530, 8, 530, 10),
woosh.Token(woosh.NAME, 'f', 530, 11, 530, 12),
woosh.Token(woosh.NAME, 'is', 530, 13, 530, 15),
woosh.Token(woosh.NAME, 'None', 530, 16, 530, 20),
woosh.Token(woosh.OP, ':', 530, 20, 530, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 530, 21, 531, 0),
woosh.Token(woosh.INDENT, '            ', 531, 0, 531, 12),
woosh.Token(woosh.NAME, 'i', 531, 12, 531, 13),
woosh.Token(woosh.OP, '=', 531, 14, 531, 15),
woosh.Token(woosh.NAME, 'max', 531, 16, 531, 19),
woosh.Token(woosh.OP, '(', 531, 19, 531, 20),
woosh.Token(woosh.NUMBER, '0', 531, 20, 531, 21),
woosh.Token(woosh.OP, ',', 531, 21, 531, 22),
woosh.Token(woosh.NAME, 'len', 531, 23, 531, 26),
woosh.Token(woosh.OP, '(', 531, 26, 531, 27),
woosh.Token(woosh.NAME, 'stack', 531, 27, 531, 32),
woosh.Token(woosh.OP, ')', 531, 32, 531, 33),
woosh.Token(woosh.OP, '-', 531, 34, 531, 35),
woosh.Token(woosh.NUMBER, '1', 531, 36, 531, 37),
woosh.Token(woosh.OP, ')', 531, 37, 531, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 531, 38, 532, 0),
woosh.Token(woosh.DEDENT, '        ', 532, 0, 532, 8),
woosh.Token(woosh.NAME, 'return', 532, 8, 532, 14),
woosh.Token(woosh.NAME, 'stack', 532, 15, 532, 20),
woosh.Token(woosh.OP, ',', 532, 20, 532, 21),
woosh.Token(woosh.NAME, 'i', 532, 22, 532, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 23, 533, 0),
woosh.Token(woosh.DEDENT, '    ', 534, 0, 534, 4),
woosh.Token(woosh.NAME, 'def', 534, 4, 534, 7),
woosh.Token(woosh.NAME, 'format_stack_entry', 534, 8, 534, 26),
woosh.Token(woosh.OP, '(', 534, 26, 534, 27),
woosh.Token(woosh.NAME, 'self', 534, 27, 534, 31),
woosh.Token(woosh.OP, ',', 534, 31, 534, 32),
woosh.Token(woosh.NAME, 'frame_lineno', 534, 33, 534, 45),
woosh.Token(woosh.OP, ',', 534, 45, 534, 46),
woosh.Token(woosh.NAME, 'lprefix', 534, 47, 534, 54),
woosh.Token(woosh.OP, '=', 534, 54, 534, 55),
woosh.Token(woosh.STRING, "': '", 534, 55, 534, 59),
woosh.Token(woosh.OP, ')', 534, 59, 534, 60),
woosh.Token(woosh.OP, ':', 534, 60, 534, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 534, 61, 535, 0),
woosh.Token(woosh.INDENT, '        ', 535, 0, 535, 8),
woosh.Token(woosh.STRING, '"""Return a string with information about a stack entry.\r\n\r\n        The stack entry frame_lineno is a (frame, lineno) tuple.  The\r\n        return string contains the canonical filename, the function name\r\n        or \'<lambda>\', the input arguments, the return value, and the\r\n        line of code (if it exists).\r\n\r\n        """', 535, 8, 542, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 11, 543, 0),
woosh.Token(woosh.NAME, 'import', 543, 8, 543, 14),
woosh.Token(woosh.NAME, 'linecache', 543, 15, 543, 24),
woosh.Token(woosh.OP, ',', 543, 24, 543, 25),
woosh.Token(woosh.NAME, 'reprlib', 543, 26, 543, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 33, 544, 0),
woosh.Token(woosh.NAME, 'frame', 544, 8, 544, 13),
woosh.Token(woosh.OP, ',', 544, 13, 544, 14),
woosh.Token(woosh.NAME, 'lineno', 544, 15, 544, 21),
woosh.Token(woosh.OP, '=', 544, 22, 544, 23),
woosh.Token(woosh.NAME, 'frame_lineno', 544, 24, 544, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 36, 545, 0),
woosh.Token(woosh.NAME, 'filename', 545, 8, 545, 16),
woosh.Token(woosh.OP, '=', 545, 17, 545, 18),
woosh.Token(woosh.NAME, 'self', 545, 19, 545, 23),
woosh.Token(woosh.OP, '.', 545, 23, 545, 24),
woosh.Token(woosh.NAME, 'canonic', 545, 24, 545, 31),
woosh.Token(woosh.OP, '(', 545, 31, 545, 32),
woosh.Token(woosh.NAME, 'frame', 545, 32, 545, 37),
woosh.Token(woosh.OP, '.', 545, 37, 545, 38),
woosh.Token(woosh.NAME, 'f_code', 545, 38, 545, 44),
woosh.Token(woosh.OP, '.', 545, 44, 545, 45),
woosh.Token(woosh.NAME, 'co_filename', 545, 45, 545, 56),
woosh.Token(woosh.OP, ')', 545, 56, 545, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 57, 546, 0),
woosh.Token(woosh.NAME, 's', 546, 8, 546, 9),
woosh.Token(woosh.OP, '=', 546, 10, 546, 11),
woosh.Token(woosh.STRING, "'%s(%r)'", 546, 12, 546, 20),
woosh.Token(woosh.OP, '%', 546, 21, 546, 22),
woosh.Token(woosh.OP, '(', 546, 23, 546, 24),
woosh.Token(woosh.NAME, 'filename', 546, 24, 546, 32),
woosh.Token(woosh.OP, ',', 546, 32, 546, 33),
woosh.Token(woosh.NAME, 'lineno', 546, 34, 546, 40),
woosh.Token(woosh.OP, ')', 546, 40, 546, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 41, 547, 0),
woosh.Token(woosh.NAME, 'if', 547, 8, 547, 10),
woosh.Token(woosh.NAME, 'frame', 547, 11, 547, 16),
woosh.Token(woosh.OP, '.', 547, 16, 547, 17),
woosh.Token(woosh.NAME, 'f_code', 547, 17, 547, 23),
woosh.Token(woosh.OP, '.', 547, 23, 547, 24),
woosh.Token(woosh.NAME, 'co_name', 547, 24, 547, 31),
woosh.Token(woosh.OP, ':', 547, 31, 547, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 32, 548, 0),
woosh.Token(woosh.INDENT, '            ', 548, 0, 548, 12),
woosh.Token(woosh.NAME, 's', 548, 12, 548, 13),
woosh.Token(woosh.OP, '+=', 548, 14, 548, 16),
woosh.Token(woosh.NAME, 'frame', 548, 17, 548, 22),
woosh.Token(woosh.OP, '.', 548, 22, 548, 23),
woosh.Token(woosh.NAME, 'f_code', 548, 23, 548, 29),
woosh.Token(woosh.OP, '.', 548, 29, 548, 30),
woosh.Token(woosh.NAME, 'co_name', 548, 30, 548, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 37, 549, 0),
woosh.Token(woosh.DEDENT, '        ', 549, 0, 549, 8),
woosh.Token(woosh.NAME, 'else', 549, 8, 549, 12),
woosh.Token(woosh.OP, ':', 549, 12, 549, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 549, 13, 550, 0),
woosh.Token(woosh.INDENT, '            ', 550, 0, 550, 12),
woosh.Token(woosh.NAME, 's', 550, 12, 550, 13),
woosh.Token(woosh.OP, '+=', 550, 14, 550, 16),
woosh.Token(woosh.STRING, '"<lambda>"', 550, 17, 550, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 550, 27, 551, 0),
woosh.Token(woosh.DEDENT, '        ', 551, 0, 551, 8),
woosh.Token(woosh.NAME, 's', 551, 8, 551, 9),
woosh.Token(woosh.OP, '+=', 551, 10, 551, 12),
woosh.Token(woosh.STRING, "'()'", 551, 13, 551, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 551, 17, 552, 0),
woosh.Token(woosh.NAME, 'if', 552, 8, 552, 10),
woosh.Token(woosh.STRING, "'__return__'", 552, 11, 552, 23),
woosh.Token(woosh.NAME, 'in', 552, 24, 552, 26),
woosh.Token(woosh.NAME, 'frame', 552, 27, 552, 32),
woosh.Token(woosh.OP, '.', 552, 32, 552, 33),
woosh.Token(woosh.NAME, 'f_locals', 552, 33, 552, 41),
woosh.Token(woosh.OP, ':', 552, 41, 552, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 552, 42, 553, 0),
woosh.Token(woosh.INDENT, '            ', 553, 0, 553, 12),
woosh.Token(woosh.NAME, 'rv', 553, 12, 553, 14),
woosh.Token(woosh.OP, '=', 553, 15, 553, 16),
woosh.Token(woosh.NAME, 'frame', 553, 17, 553, 22),
woosh.Token(woosh.OP, '.', 553, 22, 553, 23),
woosh.Token(woosh.NAME, 'f_locals', 553, 23, 553, 31),
woosh.Token(woosh.OP, '[', 553, 31, 553, 32),
woosh.Token(woosh.STRING, "'__return__'", 553, 32, 553, 44),
woosh.Token(woosh.OP, ']', 553, 44, 553, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 553, 45, 554, 0),
woosh.Token(woosh.NAME, 's', 554, 12, 554, 13),
woosh.Token(woosh.OP, '+=', 554, 14, 554, 16),
woosh.Token(woosh.STRING, "'->'", 554, 17, 554, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 21, 555, 0),
woosh.Token(woosh.NAME, 's', 555, 12, 555, 13),
woosh.Token(woosh.OP, '+=', 555, 14, 555, 16),
woosh.Token(woosh.NAME, 'reprlib', 555, 17, 555, 24),
woosh.Token(woosh.OP, '.', 555, 24, 555, 25),
woosh.Token(woosh.NAME, 'repr', 555, 25, 555, 29),
woosh.Token(woosh.OP, '(', 555, 29, 555, 30),
woosh.Token(woosh.NAME, 'rv', 555, 30, 555, 32),
woosh.Token(woosh.OP, ')', 555, 32, 555, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 33, 556, 0),
woosh.Token(woosh.DEDENT, '        ', 556, 0, 556, 8),
woosh.Token(woosh.NAME, 'line', 556, 8, 556, 12),
woosh.Token(woosh.OP, '=', 556, 13, 556, 14),
woosh.Token(woosh.NAME, 'linecache', 556, 15, 556, 24),
woosh.Token(woosh.OP, '.', 556, 24, 556, 25),
woosh.Token(woosh.NAME, 'getline', 556, 25, 556, 32),
woosh.Token(woosh.OP, '(', 556, 32, 556, 33),
woosh.Token(woosh.NAME, 'filename', 556, 33, 556, 41),
woosh.Token(woosh.OP, ',', 556, 41, 556, 42),
woosh.Token(woosh.NAME, 'lineno', 556, 43, 556, 49),
woosh.Token(woosh.OP, ',', 556, 49, 556, 50),
woosh.Token(woosh.NAME, 'frame', 556, 51, 556, 56),
woosh.Token(woosh.OP, '.', 556, 56, 556, 57),
woosh.Token(woosh.NAME, 'f_globals', 556, 57, 556, 66),
woosh.Token(woosh.OP, ')', 556, 66, 556, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 67, 557, 0),
woosh.Token(woosh.NAME, 'if', 557, 8, 557, 10),
woosh.Token(woosh.NAME, 'line', 557, 11, 557, 15),
woosh.Token(woosh.OP, ':', 557, 15, 557, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 16, 558, 0),
woosh.Token(woosh.INDENT, '            ', 558, 0, 558, 12),
woosh.Token(woosh.NAME, 's', 558, 12, 558, 13),
woosh.Token(woosh.OP, '+=', 558, 14, 558, 16),
woosh.Token(woosh.NAME, 'lprefix', 558, 17, 558, 24),
woosh.Token(woosh.OP, '+', 558, 25, 558, 26),
woosh.Token(woosh.NAME, 'line', 558, 27, 558, 31),
woosh.Token(woosh.OP, '.', 558, 31, 558, 32),
woosh.Token(woosh.NAME, 'strip', 558, 32, 558, 37),
woosh.Token(woosh.OP, '(', 558, 37, 558, 38),
woosh.Token(woosh.OP, ')', 558, 38, 558, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 558, 39, 559, 0),
woosh.Token(woosh.DEDENT, '        ', 559, 0, 559, 8),
woosh.Token(woosh.NAME, 'return', 559, 8, 559, 14),
woosh.Token(woosh.NAME, 's', 559, 15, 559, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 559, 16, 560, 0),
woosh.Token(woosh.COMMENT, '# The following methods can be called by clients to use', 561, 4, 561, 59),
woosh.Token(woosh.COMMENT, '# a debugger to debug a statement or an expression.', 562, 4, 562, 55),
woosh.Token(woosh.COMMENT, '# Both can be given as a string, or a code object.', 563, 4, 563, 54),
woosh.Token(woosh.DEDENT, '    ', 565, 0, 565, 4),
woosh.Token(woosh.NAME, 'def', 565, 4, 565, 7),
woosh.Token(woosh.NAME, 'run', 565, 8, 565, 11),
woosh.Token(woosh.OP, '(', 565, 11, 565, 12),
woosh.Token(woosh.NAME, 'self', 565, 12, 565, 16),
woosh.Token(woosh.OP, ',', 565, 16, 565, 17),
woosh.Token(woosh.NAME, 'cmd', 565, 18, 565, 21),
woosh.Token(woosh.OP, ',', 565, 21, 565, 22),
woosh.Token(woosh.NAME, 'globals', 565, 23, 565, 30),
woosh.Token(woosh.OP, '=', 565, 30, 565, 31),
woosh.Token(woosh.NAME, 'None', 565, 31, 565, 35),
woosh.Token(woosh.OP, ',', 565, 35, 565, 36),
woosh.Token(woosh.NAME, 'locals', 565, 37, 565, 43),
woosh.Token(woosh.OP, '=', 565, 43, 565, 44),
woosh.Token(woosh.NAME, 'None', 565, 44, 565, 48),
woosh.Token(woosh.OP, ')', 565, 48, 565, 49),
woosh.Token(woosh.OP, ':', 565, 49, 565, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 565, 50, 566, 0),
woosh.Token(woosh.INDENT, '        ', 566, 0, 566, 8),
woosh.Token(woosh.STRING, '"""Debug a statement executed via the exec() function.\r\n\r\n        globals defaults to __main__.dict; locals defaults to globals.\r\n        """', 566, 8, 569, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 569, 11, 570, 0),
woosh.Token(woosh.NAME, 'if', 570, 8, 570, 10),
woosh.Token(woosh.NAME, 'globals', 570, 11, 570, 18),
woosh.Token(woosh.NAME, 'is', 570, 19, 570, 21),
woosh.Token(woosh.NAME, 'None', 570, 22, 570, 26),
woosh.Token(woosh.OP, ':', 570, 26, 570, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 570, 27, 571, 0),
woosh.Token(woosh.INDENT, '            ', 571, 0, 571, 12),
woosh.Token(woosh.NAME, 'import', 571, 12, 571, 18),
woosh.Token(woosh.NAME, '__main__', 571, 19, 571, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 571, 27, 572, 0),
woosh.Token(woosh.NAME, 'globals', 572, 12, 572, 19),
woosh.Token(woosh.OP, '=', 572, 20, 572, 21),
woosh.Token(woosh.NAME, '__main__', 572, 22, 572, 30),
woosh.Token(woosh.OP, '.', 572, 30, 572, 31),
woosh.Token(woosh.NAME, '__dict__', 572, 31, 572, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 572, 39, 573, 0),
woosh.Token(woosh.DEDENT, '        ', 573, 0, 573, 8),
woosh.Token(woosh.NAME, 'if', 573, 8, 573, 10),
woosh.Token(woosh.NAME, 'locals', 573, 11, 573, 17),
woosh.Token(woosh.NAME, 'is', 573, 18, 573, 20),
woosh.Token(woosh.NAME, 'None', 573, 21, 573, 25),
woosh.Token(woosh.OP, ':', 573, 25, 573, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 26, 574, 0),
woosh.Token(woosh.INDENT, '            ', 574, 0, 574, 12),
woosh.Token(woosh.NAME, 'locals', 574, 12, 574, 18),
woosh.Token(woosh.OP, '=', 574, 19, 574, 20),
woosh.Token(woosh.NAME, 'globals', 574, 21, 574, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 574, 28, 575, 0),
woosh.Token(woosh.DEDENT, '        ', 575, 0, 575, 8),
woosh.Token(woosh.NAME, 'self', 575, 8, 575, 12),
woosh.Token(woosh.OP, '.', 575, 12, 575, 13),
woosh.Token(woosh.NAME, 'reset', 575, 13, 575, 18),
woosh.Token(woosh.OP, '(', 575, 18, 575, 19),
woosh.Token(woosh.OP, ')', 575, 19, 575, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 575, 20, 576, 0),
woosh.Token(woosh.NAME, 'if', 576, 8, 576, 10),
woosh.Token(woosh.NAME, 'isinstance', 576, 11, 576, 21),
woosh.Token(woosh.OP, '(', 576, 21, 576, 22),
woosh.Token(woosh.NAME, 'cmd', 576, 22, 576, 25),
woosh.Token(woosh.OP, ',', 576, 25, 576, 26),
woosh.Token(woosh.NAME, 'str', 576, 27, 576, 30),
woosh.Token(woosh.OP, ')', 576, 30, 576, 31),
woosh.Token(woosh.OP, ':', 576, 31, 576, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 32, 577, 0),
woosh.Token(woosh.INDENT, '            ', 577, 0, 577, 12),
woosh.Token(woosh.NAME, 'cmd', 577, 12, 577, 15),
woosh.Token(woosh.OP, '=', 577, 16, 577, 17),
woosh.Token(woosh.NAME, 'compile', 577, 18, 577, 25),
woosh.Token(woosh.OP, '(', 577, 25, 577, 26),
woosh.Token(woosh.NAME, 'cmd', 577, 26, 577, 29),
woosh.Token(woosh.OP, ',', 577, 29, 577, 30),
woosh.Token(woosh.STRING, '"<string>"', 577, 31, 577, 41),
woosh.Token(woosh.OP, ',', 577, 41, 577, 42),
woosh.Token(woosh.STRING, '"exec"', 577, 43, 577, 49),
woosh.Token(woosh.OP, ')', 577, 49, 577, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 577, 50, 578, 0),
woosh.Token(woosh.DEDENT, '        ', 578, 0, 578, 8),
woosh.Token(woosh.NAME, 'sys', 578, 8, 578, 11),
woosh.Token(woosh.OP, '.', 578, 11, 578, 12),
woosh.Token(woosh.NAME, 'settrace', 578, 12, 578, 20),
woosh.Token(woosh.OP, '(', 578, 20, 578, 21),
woosh.Token(woosh.NAME, 'self', 578, 21, 578, 25),
woosh.Token(woosh.OP, '.', 578, 25, 578, 26),
woosh.Token(woosh.NAME, 'trace_dispatch', 578, 26, 578, 40),
woosh.Token(woosh.OP, ')', 578, 40, 578, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 578, 41, 579, 0),
woosh.Token(woosh.NAME, 'try', 579, 8, 579, 11),
woosh.Token(woosh.OP, ':', 579, 11, 579, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 12, 580, 0),
woosh.Token(woosh.INDENT, '            ', 580, 0, 580, 12),
woosh.Token(woosh.NAME, 'exec', 580, 12, 580, 16),
woosh.Token(woosh.OP, '(', 580, 16, 580, 17),
woosh.Token(woosh.NAME, 'cmd', 580, 17, 580, 20),
woosh.Token(woosh.OP, ',', 580, 20, 580, 21),
woosh.Token(woosh.NAME, 'globals', 580, 22, 580, 29),
woosh.Token(woosh.OP, ',', 580, 29, 580, 30),
woosh.Token(woosh.NAME, 'locals', 580, 31, 580, 37),
woosh.Token(woosh.OP, ')', 580, 37, 580, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 580, 38, 581, 0),
woosh.Token(woosh.DEDENT, '        ', 581, 0, 581, 8),
woosh.Token(woosh.NAME, 'except', 581, 8, 581, 14),
woosh.Token(woosh.NAME, 'BdbQuit', 581, 15, 581, 22),
woosh.Token(woosh.OP, ':', 581, 22, 581, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 23, 582, 0),
woosh.Token(woosh.INDENT, '            ', 582, 0, 582, 12),
woosh.Token(woosh.NAME, 'pass', 582, 12, 582, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 16, 583, 0),
woosh.Token(woosh.DEDENT, '        ', 583, 0, 583, 8),
woosh.Token(woosh.NAME, 'finally', 583, 8, 583, 15),
woosh.Token(woosh.OP, ':', 583, 15, 583, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 16, 584, 0),
woosh.Token(woosh.INDENT, '            ', 584, 0, 584, 12),
woosh.Token(woosh.NAME, 'self', 584, 12, 584, 16),
woosh.Token(woosh.OP, '.', 584, 16, 584, 17),
woosh.Token(woosh.NAME, 'quitting', 584, 17, 584, 25),
woosh.Token(woosh.OP, '=', 584, 26, 584, 27),
woosh.Token(woosh.NAME, 'True', 584, 28, 584, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 584, 32, 585, 0),
woosh.Token(woosh.NAME, 'sys', 585, 12, 585, 15),
woosh.Token(woosh.OP, '.', 585, 15, 585, 16),
woosh.Token(woosh.NAME, 'settrace', 585, 16, 585, 24),
woosh.Token(woosh.OP, '(', 585, 24, 585, 25),
woosh.Token(woosh.NAME, 'None', 585, 25, 585, 29),
woosh.Token(woosh.OP, ')', 585, 29, 585, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 30, 586, 0),
woosh.Token(woosh.DEDENT, '    ', 587, 0, 587, 4),
woosh.Token(woosh.DEDENT, '', 587, 4, 587, 4),
woosh.Token(woosh.NAME, 'def', 587, 4, 587, 7),
woosh.Token(woosh.NAME, 'runeval', 587, 8, 587, 15),
woosh.Token(woosh.OP, '(', 587, 15, 587, 16),
woosh.Token(woosh.NAME, 'self', 587, 16, 587, 20),
woosh.Token(woosh.OP, ',', 587, 20, 587, 21),
woosh.Token(woosh.NAME, 'expr', 587, 22, 587, 26),
woosh.Token(woosh.OP, ',', 587, 26, 587, 27),
woosh.Token(woosh.NAME, 'globals', 587, 28, 587, 35),
woosh.Token(woosh.OP, '=', 587, 35, 587, 36),
woosh.Token(woosh.NAME, 'None', 587, 36, 587, 40),
woosh.Token(woosh.OP, ',', 587, 40, 587, 41),
woosh.Token(woosh.NAME, 'locals', 587, 42, 587, 48),
woosh.Token(woosh.OP, '=', 587, 48, 587, 49),
woosh.Token(woosh.NAME, 'None', 587, 49, 587, 53),
woosh.Token(woosh.OP, ')', 587, 53, 587, 54),
woosh.Token(woosh.OP, ':', 587, 54, 587, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 55, 588, 0),
woosh.Token(woosh.INDENT, '        ', 588, 0, 588, 8),
woosh.Token(woosh.STRING, '"""Debug an expression executed via the eval() function.\r\n\r\n        globals defaults to __main__.dict; locals defaults to globals.\r\n        """', 588, 8, 591, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 11, 592, 0),
woosh.Token(woosh.NAME, 'if', 592, 8, 592, 10),
woosh.Token(woosh.NAME, 'globals', 592, 11, 592, 18),
woosh.Token(woosh.NAME, 'is', 592, 19, 592, 21),
woosh.Token(woosh.NAME, 'None', 592, 22, 592, 26),
woosh.Token(woosh.OP, ':', 592, 26, 592, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 27, 593, 0),
woosh.Token(woosh.INDENT, '            ', 593, 0, 593, 12),
woosh.Token(woosh.NAME, 'import', 593, 12, 593, 18),
woosh.Token(woosh.NAME, '__main__', 593, 19, 593, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 593, 27, 594, 0),
woosh.Token(woosh.NAME, 'globals', 594, 12, 594, 19),
woosh.Token(woosh.OP, '=', 594, 20, 594, 21),
woosh.Token(woosh.NAME, '__main__', 594, 22, 594, 30),
woosh.Token(woosh.OP, '.', 594, 30, 594, 31),
woosh.Token(woosh.NAME, '__dict__', 594, 31, 594, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 39, 595, 0),
woosh.Token(woosh.DEDENT, '        ', 595, 0, 595, 8),
woosh.Token(woosh.NAME, 'if', 595, 8, 595, 10),
woosh.Token(woosh.NAME, 'locals', 595, 11, 595, 17),
woosh.Token(woosh.NAME, 'is', 595, 18, 595, 20),
woosh.Token(woosh.NAME, 'None', 595, 21, 595, 25),
woosh.Token(woosh.OP, ':', 595, 25, 595, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 595, 26, 596, 0),
woosh.Token(woosh.INDENT, '            ', 596, 0, 596, 12),
woosh.Token(woosh.NAME, 'locals', 596, 12, 596, 18),
woosh.Token(woosh.OP, '=', 596, 19, 596, 20),
woosh.Token(woosh.NAME, 'globals', 596, 21, 596, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 28, 597, 0),
woosh.Token(woosh.DEDENT, '        ', 597, 0, 597, 8),
woosh.Token(woosh.NAME, 'self', 597, 8, 597, 12),
woosh.Token(woosh.OP, '.', 597, 12, 597, 13),
woosh.Token(woosh.NAME, 'reset', 597, 13, 597, 18),
woosh.Token(woosh.OP, '(', 597, 18, 597, 19),
woosh.Token(woosh.OP, ')', 597, 19, 597, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 20, 598, 0),
woosh.Token(woosh.NAME, 'sys', 598, 8, 598, 11),
woosh.Token(woosh.OP, '.', 598, 11, 598, 12),
woosh.Token(woosh.NAME, 'settrace', 598, 12, 598, 20),
woosh.Token(woosh.OP, '(', 598, 20, 598, 21),
woosh.Token(woosh.NAME, 'self', 598, 21, 598, 25),
woosh.Token(woosh.OP, '.', 598, 25, 598, 26),
woosh.Token(woosh.NAME, 'trace_dispatch', 598, 26, 598, 40),
woosh.Token(woosh.OP, ')', 598, 40, 598, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 598, 41, 599, 0),
woosh.Token(woosh.NAME, 'try', 599, 8, 599, 11),
woosh.Token(woosh.OP, ':', 599, 11, 599, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 12, 600, 0),
woosh.Token(woosh.INDENT, '            ', 600, 0, 600, 12),
woosh.Token(woosh.NAME, 'return', 600, 12, 600, 18),
woosh.Token(woosh.NAME, 'eval', 600, 19, 600, 23),
woosh.Token(woosh.OP, '(', 600, 23, 600, 24),
woosh.Token(woosh.NAME, 'expr', 600, 24, 600, 28),
woosh.Token(woosh.OP, ',', 600, 28, 600, 29),
woosh.Token(woosh.NAME, 'globals', 600, 30, 600, 37),
woosh.Token(woosh.OP, ',', 600, 37, 600, 38),
woosh.Token(woosh.NAME, 'locals', 600, 39, 600, 45),
woosh.Token(woosh.OP, ')', 600, 45, 600, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 46, 601, 0),
woosh.Token(woosh.DEDENT, '        ', 601, 0, 601, 8),
woosh.Token(woosh.NAME, 'except', 601, 8, 601, 14),
woosh.Token(woosh.NAME, 'BdbQuit', 601, 15, 601, 22),
woosh.Token(woosh.OP, ':', 601, 22, 601, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 23, 602, 0),
woosh.Token(woosh.INDENT, '            ', 602, 0, 602, 12),
woosh.Token(woosh.NAME, 'pass', 602, 12, 602, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 16, 603, 0),
woosh.Token(woosh.DEDENT, '        ', 603, 0, 603, 8),
woosh.Token(woosh.NAME, 'finally', 603, 8, 603, 15),
woosh.Token(woosh.OP, ':', 603, 15, 603, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 16, 604, 0),
woosh.Token(woosh.INDENT, '            ', 604, 0, 604, 12),
woosh.Token(woosh.NAME, 'self', 604, 12, 604, 16),
woosh.Token(woosh.OP, '.', 604, 16, 604, 17),
woosh.Token(woosh.NAME, 'quitting', 604, 17, 604, 25),
woosh.Token(woosh.OP, '=', 604, 26, 604, 27),
woosh.Token(woosh.NAME, 'True', 604, 28, 604, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 32, 605, 0),
woosh.Token(woosh.NAME, 'sys', 605, 12, 605, 15),
woosh.Token(woosh.OP, '.', 605, 15, 605, 16),
woosh.Token(woosh.NAME, 'settrace', 605, 16, 605, 24),
woosh.Token(woosh.OP, '(', 605, 24, 605, 25),
woosh.Token(woosh.NAME, 'None', 605, 25, 605, 29),
woosh.Token(woosh.OP, ')', 605, 29, 605, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 30, 606, 0),
woosh.Token(woosh.DEDENT, '    ', 607, 0, 607, 4),
woosh.Token(woosh.DEDENT, '', 607, 4, 607, 4),
woosh.Token(woosh.NAME, 'def', 607, 4, 607, 7),
woosh.Token(woosh.NAME, 'runctx', 607, 8, 607, 14),
woosh.Token(woosh.OP, '(', 607, 14, 607, 15),
woosh.Token(woosh.NAME, 'self', 607, 15, 607, 19),
woosh.Token(woosh.OP, ',', 607, 19, 607, 20),
woosh.Token(woosh.NAME, 'cmd', 607, 21, 607, 24),
woosh.Token(woosh.OP, ',', 607, 24, 607, 25),
woosh.Token(woosh.NAME, 'globals', 607, 26, 607, 33),
woosh.Token(woosh.OP, ',', 607, 33, 607, 34),
woosh.Token(woosh.NAME, 'locals', 607, 35, 607, 41),
woosh.Token(woosh.OP, ')', 607, 41, 607, 42),
woosh.Token(woosh.OP, ':', 607, 42, 607, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 43, 608, 0),
woosh.Token(woosh.INDENT, '        ', 608, 0, 608, 8),
woosh.Token(woosh.STRING, '"""For backwards-compatibility.  Defers to run()."""', 608, 8, 608, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 60, 609, 0),
woosh.Token(woosh.COMMENT, '# B/W compatibility', 609, 8, 609, 27),
woosh.Token(woosh.NAME, 'self', 610, 8, 610, 12),
woosh.Token(woosh.OP, '.', 610, 12, 610, 13),
woosh.Token(woosh.NAME, 'run', 610, 13, 610, 16),
woosh.Token(woosh.OP, '(', 610, 16, 610, 17),
woosh.Token(woosh.NAME, 'cmd', 610, 17, 610, 20),
woosh.Token(woosh.OP, ',', 610, 20, 610, 21),
woosh.Token(woosh.NAME, 'globals', 610, 22, 610, 29),
woosh.Token(woosh.OP, ',', 610, 29, 610, 30),
woosh.Token(woosh.NAME, 'locals', 610, 31, 610, 37),
woosh.Token(woosh.OP, ')', 610, 37, 610, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 610, 38, 611, 0),
woosh.Token(woosh.COMMENT, '# This method is more useful to debug a single function call.', 612, 4, 612, 65),
woosh.Token(woosh.DEDENT, '    ', 614, 0, 614, 4),
woosh.Token(woosh.NAME, 'def', 614, 4, 614, 7),
woosh.Token(woosh.NAME, 'runcall', 614, 8, 614, 15),
woosh.Token(woosh.OP, '(', 614, 15, 614, 16),
woosh.Token(woosh.NAME, 'self', 614, 16, 614, 20),
woosh.Token(woosh.OP, ',', 614, 20, 614, 21),
woosh.Token(woosh.NAME, 'func', 614, 22, 614, 26),
woosh.Token(woosh.OP, ',', 614, 26, 614, 27),
woosh.Token(woosh.OP, '/', 614, 28, 614, 29),
woosh.Token(woosh.OP, ',', 614, 29, 614, 30),
woosh.Token(woosh.OP, '*', 614, 31, 614, 32),
woosh.Token(woosh.NAME, 'args', 614, 32, 614, 36),
woosh.Token(woosh.OP, ',', 614, 36, 614, 37),
woosh.Token(woosh.OP, '**', 614, 38, 614, 40),
woosh.Token(woosh.NAME, 'kwds', 614, 40, 614, 44),
woosh.Token(woosh.OP, ')', 614, 44, 614, 45),
woosh.Token(woosh.OP, ':', 614, 45, 614, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 46, 615, 0),
woosh.Token(woosh.INDENT, '        ', 615, 0, 615, 8),
woosh.Token(woosh.STRING, '"""Debug a single function call.\r\n\r\n        Return the result of the function call.\r\n        """', 615, 8, 618, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 618, 11, 619, 0),
woosh.Token(woosh.NAME, 'self', 619, 8, 619, 12),
woosh.Token(woosh.OP, '.', 619, 12, 619, 13),
woosh.Token(woosh.NAME, 'reset', 619, 13, 619, 18),
woosh.Token(woosh.OP, '(', 619, 18, 619, 19),
woosh.Token(woosh.OP, ')', 619, 19, 619, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 20, 620, 0),
woosh.Token(woosh.NAME, 'sys', 620, 8, 620, 11),
woosh.Token(woosh.OP, '.', 620, 11, 620, 12),
woosh.Token(woosh.NAME, 'settrace', 620, 12, 620, 20),
woosh.Token(woosh.OP, '(', 620, 20, 620, 21),
woosh.Token(woosh.NAME, 'self', 620, 21, 620, 25),
woosh.Token(woosh.OP, '.', 620, 25, 620, 26),
woosh.Token(woosh.NAME, 'trace_dispatch', 620, 26, 620, 40),
woosh.Token(woosh.OP, ')', 620, 40, 620, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 620, 41, 621, 0),
woosh.Token(woosh.NAME, 'res', 621, 8, 621, 11),
woosh.Token(woosh.OP, '=', 621, 12, 621, 13),
woosh.Token(woosh.NAME, 'None', 621, 14, 621, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 18, 622, 0),
woosh.Token(woosh.NAME, 'try', 622, 8, 622, 11),
woosh.Token(woosh.OP, ':', 622, 11, 622, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 622, 12, 623, 0),
woosh.Token(woosh.INDENT, '            ', 623, 0, 623, 12),
woosh.Token(woosh.NAME, 'res', 623, 12, 623, 15),
woosh.Token(woosh.OP, '=', 623, 16, 623, 17),
woosh.Token(woosh.NAME, 'func', 623, 18, 623, 22),
woosh.Token(woosh.OP, '(', 623, 22, 623, 23),
woosh.Token(woosh.OP, '*', 623, 23, 623, 24),
woosh.Token(woosh.NAME, 'args', 623, 24, 623, 28),
woosh.Token(woosh.OP, ',', 623, 28, 623, 29),
woosh.Token(woosh.OP, '**', 623, 30, 623, 32),
woosh.Token(woosh.NAME, 'kwds', 623, 32, 623, 36),
woosh.Token(woosh.OP, ')', 623, 36, 623, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 623, 37, 624, 0),
woosh.Token(woosh.DEDENT, '        ', 624, 0, 624, 8),
woosh.Token(woosh.NAME, 'except', 624, 8, 624, 14),
woosh.Token(woosh.NAME, 'BdbQuit', 624, 15, 624, 22),
woosh.Token(woosh.OP, ':', 624, 22, 624, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 23, 625, 0),
woosh.Token(woosh.INDENT, '            ', 625, 0, 625, 12),
woosh.Token(woosh.NAME, 'pass', 625, 12, 625, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 16, 626, 0),
woosh.Token(woosh.DEDENT, '        ', 626, 0, 626, 8),
woosh.Token(woosh.NAME, 'finally', 626, 8, 626, 15),
woosh.Token(woosh.OP, ':', 626, 15, 626, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 626, 16, 627, 0),
woosh.Token(woosh.INDENT, '            ', 627, 0, 627, 12),
woosh.Token(woosh.NAME, 'self', 627, 12, 627, 16),
woosh.Token(woosh.OP, '.', 627, 16, 627, 17),
woosh.Token(woosh.NAME, 'quitting', 627, 17, 627, 25),
woosh.Token(woosh.OP, '=', 627, 26, 627, 27),
woosh.Token(woosh.NAME, 'True', 627, 28, 627, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 627, 32, 628, 0),
woosh.Token(woosh.NAME, 'sys', 628, 12, 628, 15),
woosh.Token(woosh.OP, '.', 628, 15, 628, 16),
woosh.Token(woosh.NAME, 'settrace', 628, 16, 628, 24),
woosh.Token(woosh.OP, '(', 628, 24, 628, 25),
woosh.Token(woosh.NAME, 'None', 628, 25, 628, 29),
woosh.Token(woosh.OP, ')', 628, 29, 628, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 628, 30, 629, 0),
woosh.Token(woosh.DEDENT, '        ', 629, 0, 629, 8),
woosh.Token(woosh.NAME, 'return', 629, 8, 629, 14),
woosh.Token(woosh.NAME, 'res', 629, 15, 629, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 18, 630, 0),
woosh.Token(woosh.DEDENT, '', 632, 0, 632, 0),
woosh.Token(woosh.DEDENT, '', 632, 0, 632, 0),
woosh.Token(woosh.NAME, 'def', 632, 0, 632, 3),
woosh.Token(woosh.NAME, 'set_trace', 632, 4, 632, 13),
woosh.Token(woosh.OP, '(', 632, 13, 632, 14),
woosh.Token(woosh.OP, ')', 632, 14, 632, 15),
woosh.Token(woosh.OP, ':', 632, 15, 632, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 16, 633, 0),
woosh.Token(woosh.INDENT, '    ', 633, 0, 633, 4),
woosh.Token(woosh.STRING, '"""Start debugging with a Bdb instance from the caller\'s frame."""', 633, 4, 633, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 633, 70, 634, 0),
woosh.Token(woosh.NAME, 'Bdb', 634, 4, 634, 7),
woosh.Token(woosh.OP, '(', 634, 7, 634, 8),
woosh.Token(woosh.OP, ')', 634, 8, 634, 9),
woosh.Token(woosh.OP, '.', 634, 9, 634, 10),
woosh.Token(woosh.NAME, 'set_trace', 634, 10, 634, 19),
woosh.Token(woosh.OP, '(', 634, 19, 634, 20),
woosh.Token(woosh.OP, ')', 634, 20, 634, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 21, 635, 0),
woosh.Token(woosh.DEDENT, '', 637, 0, 637, 0),
woosh.Token(woosh.NAME, 'class', 637, 0, 637, 5),
woosh.Token(woosh.NAME, 'Breakpoint', 637, 6, 637, 16),
woosh.Token(woosh.OP, ':', 637, 16, 637, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 17, 638, 0),
woosh.Token(woosh.INDENT, '    ', 638, 0, 638, 4),
woosh.Token(woosh.STRING, '"""Breakpoint class.\r\n\r\n    Implements temporary breakpoints, ignore counts, disabling and\r\n    (re)-enabling, and conditionals.\r\n\r\n    Breakpoints are indexed by number through bpbynumber and by\r\n    the (file, line) tuple using bplist.  The former points to a\r\n    single instance of class Breakpoint.  The latter points to a\r\n    list of such instances since there may be more than one\r\n    breakpoint per line.\r\n\r\n    When creating a breakpoint, its associated filename should be\r\n    in canonical form.  If funcname is defined, a breakpoint hit will be\r\n    counted when the first line of that function is executed.  A\r\n    conditional breakpoint always counts a hit.\r\n    """', 638, 4, 653, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 7, 654, 0),
woosh.Token(woosh.COMMENT, '# XXX Keeping state in the class is a mistake -- this means', 655, 4, 655, 63),
woosh.Token(woosh.COMMENT, '# you cannot have more than one active Bdb instance.', 656, 4, 656, 56),
woosh.Token(woosh.NAME, 'next', 658, 4, 658, 8),
woosh.Token(woosh.OP, '=', 658, 9, 658, 10),
woosh.Token(woosh.NUMBER, '1', 658, 11, 658, 12),
woosh.Token(woosh.COMMENT, '# Next bp to be assigned', 658, 20, 658, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 658, 44, 659, 0),
woosh.Token(woosh.NAME, 'bplist', 659, 4, 659, 10),
woosh.Token(woosh.OP, '=', 659, 11, 659, 12),
woosh.Token(woosh.OP, '{', 659, 13, 659, 14),
woosh.Token(woosh.OP, '}', 659, 14, 659, 15),
woosh.Token(woosh.COMMENT, '# indexed by (file, lineno) tuple', 659, 20, 659, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 53, 660, 0),
woosh.Token(woosh.NAME, 'bpbynumber', 660, 4, 660, 14),
woosh.Token(woosh.OP, '=', 660, 15, 660, 16),
woosh.Token(woosh.OP, '[', 660, 17, 660, 18),
woosh.Token(woosh.NAME, 'None', 660, 18, 660, 22),
woosh.Token(woosh.OP, ']', 660, 22, 660, 23),
woosh.Token(woosh.COMMENT, '# Each entry is None or an instance of Bpt', 660, 24, 660, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 66, 661, 0),
woosh.Token(woosh.COMMENT, '# index 0 is unused, except for marking an', 661, 16, 661, 58),
woosh.Token(woosh.COMMENT, '# effective break .... see effective()', 662, 16, 662, 54),
woosh.Token(woosh.NAME, 'def', 664, 4, 664, 7),
woosh.Token(woosh.NAME, '__init__', 664, 8, 664, 16),
woosh.Token(woosh.OP, '(', 664, 16, 664, 17),
woosh.Token(woosh.NAME, 'self', 664, 17, 664, 21),
woosh.Token(woosh.OP, ',', 664, 21, 664, 22),
woosh.Token(woosh.NAME, 'file', 664, 23, 664, 27),
woosh.Token(woosh.OP, ',', 664, 27, 664, 28),
woosh.Token(woosh.NAME, 'line', 664, 29, 664, 33),
woosh.Token(woosh.OP, ',', 664, 33, 664, 34),
woosh.Token(woosh.NAME, 'temporary', 664, 35, 664, 44),
woosh.Token(woosh.OP, '=', 664, 44, 664, 45),
woosh.Token(woosh.NAME, 'False', 664, 45, 664, 50),
woosh.Token(woosh.OP, ',', 664, 50, 664, 51),
woosh.Token(woosh.NAME, 'cond', 664, 52, 664, 56),
woosh.Token(woosh.OP, '=', 664, 56, 664, 57),
woosh.Token(woosh.NAME, 'None', 664, 57, 664, 61),
woosh.Token(woosh.OP, ',', 664, 61, 664, 62),
woosh.Token(woosh.NAME, 'funcname', 664, 63, 664, 71),
woosh.Token(woosh.OP, '=', 664, 71, 664, 72),
woosh.Token(woosh.NAME, 'None', 664, 72, 664, 76),
woosh.Token(woosh.OP, ')', 664, 76, 664, 77),
woosh.Token(woosh.OP, ':', 664, 77, 664, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 78, 665, 0),
woosh.Token(woosh.INDENT, '        ', 665, 0, 665, 8),
woosh.Token(woosh.NAME, 'self', 665, 8, 665, 12),
woosh.Token(woosh.OP, '.', 665, 12, 665, 13),
woosh.Token(woosh.NAME, 'funcname', 665, 13, 665, 21),
woosh.Token(woosh.OP, '=', 665, 22, 665, 23),
woosh.Token(woosh.NAME, 'funcname', 665, 24, 665, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 665, 32, 666, 0),
woosh.Token(woosh.COMMENT, '# Needed if funcname is not None.', 666, 8, 666, 41),
woosh.Token(woosh.NAME, 'self', 667, 8, 667, 12),
woosh.Token(woosh.OP, '.', 667, 12, 667, 13),
woosh.Token(woosh.NAME, 'func_first_executable_line', 667, 13, 667, 39),
woosh.Token(woosh.OP, '=', 667, 40, 667, 41),
woosh.Token(woosh.NAME, 'None', 667, 42, 667, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 46, 668, 0),
woosh.Token(woosh.NAME, 'self', 668, 8, 668, 12),
woosh.Token(woosh.OP, '.', 668, 12, 668, 13),
woosh.Token(woosh.NAME, 'file', 668, 13, 668, 17),
woosh.Token(woosh.OP, '=', 668, 18, 668, 19),
woosh.Token(woosh.NAME, 'file', 668, 20, 668, 24),
woosh.Token(woosh.COMMENT, '# This better be in canonical form!', 668, 28, 668, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 668, 63, 669, 0),
woosh.Token(woosh.NAME, 'self', 669, 8, 669, 12),
woosh.Token(woosh.OP, '.', 669, 12, 669, 13),
woosh.Token(woosh.NAME, 'line', 669, 13, 669, 17),
woosh.Token(woosh.OP, '=', 669, 18, 669, 19),
woosh.Token(woosh.NAME, 'line', 669, 20, 669, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 669, 24, 670, 0),
woosh.Token(woosh.NAME, 'self', 670, 8, 670, 12),
woosh.Token(woosh.OP, '.', 670, 12, 670, 13),
woosh.Token(woosh.NAME, 'temporary', 670, 13, 670, 22),
woosh.Token(woosh.OP, '=', 670, 23, 670, 24),
woosh.Token(woosh.NAME, 'temporary', 670, 25, 670, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 670, 34, 671, 0),
woosh.Token(woosh.NAME, 'self', 671, 8, 671, 12),
woosh.Token(woosh.OP, '.', 671, 12, 671, 13),
woosh.Token(woosh.NAME, 'cond', 671, 13, 671, 17),
woosh.Token(woosh.OP, '=', 671, 18, 671, 19),
woosh.Token(woosh.NAME, 'cond', 671, 20, 671, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 24, 672, 0),
woosh.Token(woosh.NAME, 'self', 672, 8, 672, 12),
woosh.Token(woosh.OP, '.', 672, 12, 672, 13),
woosh.Token(woosh.NAME, 'enabled', 672, 13, 672, 20),
woosh.Token(woosh.OP, '=', 672, 21, 672, 22),
woosh.Token(woosh.NAME, 'True', 672, 23, 672, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 672, 27, 673, 0),
woosh.Token(woosh.NAME, 'self', 673, 8, 673, 12),
woosh.Token(woosh.OP, '.', 673, 12, 673, 13),
woosh.Token(woosh.NAME, 'ignore', 673, 13, 673, 19),
woosh.Token(woosh.OP, '=', 673, 20, 673, 21),
woosh.Token(woosh.NUMBER, '0', 673, 22, 673, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 673, 23, 674, 0),
woosh.Token(woosh.NAME, 'self', 674, 8, 674, 12),
woosh.Token(woosh.OP, '.', 674, 12, 674, 13),
woosh.Token(woosh.NAME, 'hits', 674, 13, 674, 17),
woosh.Token(woosh.OP, '=', 674, 18, 674, 19),
woosh.Token(woosh.NUMBER, '0', 674, 20, 674, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 674, 21, 675, 0),
woosh.Token(woosh.NAME, 'self', 675, 8, 675, 12),
woosh.Token(woosh.OP, '.', 675, 12, 675, 13),
woosh.Token(woosh.NAME, 'number', 675, 13, 675, 19),
woosh.Token(woosh.OP, '=', 675, 20, 675, 21),
woosh.Token(woosh.NAME, 'Breakpoint', 675, 22, 675, 32),
woosh.Token(woosh.OP, '.', 675, 32, 675, 33),
woosh.Token(woosh.NAME, 'next', 675, 33, 675, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 675, 37, 676, 0),
woosh.Token(woosh.NAME, 'Breakpoint', 676, 8, 676, 18),
woosh.Token(woosh.OP, '.', 676, 18, 676, 19),
woosh.Token(woosh.NAME, 'next', 676, 19, 676, 23),
woosh.Token(woosh.OP, '+=', 676, 24, 676, 26),
woosh.Token(woosh.NUMBER, '1', 676, 27, 676, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 28, 677, 0),
woosh.Token(woosh.COMMENT, '# Build the two lists', 677, 8, 677, 29),
woosh.Token(woosh.NAME, 'self', 678, 8, 678, 12),
woosh.Token(woosh.OP, '.', 678, 12, 678, 13),
woosh.Token(woosh.NAME, 'bpbynumber', 678, 13, 678, 23),
woosh.Token(woosh.OP, '.', 678, 23, 678, 24),
woosh.Token(woosh.NAME, 'append', 678, 24, 678, 30),
woosh.Token(woosh.OP, '(', 678, 30, 678, 31),
woosh.Token(woosh.NAME, 'self', 678, 31, 678, 35),
woosh.Token(woosh.OP, ')', 678, 35, 678, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 678, 36, 679, 0),
woosh.Token(woosh.NAME, 'if', 679, 8, 679, 10),
woosh.Token(woosh.OP, '(', 679, 11, 679, 12),
woosh.Token(woosh.NAME, 'file', 679, 12, 679, 16),
woosh.Token(woosh.OP, ',', 679, 16, 679, 17),
woosh.Token(woosh.NAME, 'line', 679, 18, 679, 22),
woosh.Token(woosh.OP, ')', 679, 22, 679, 23),
woosh.Token(woosh.NAME, 'in', 679, 24, 679, 26),
woosh.Token(woosh.NAME, 'self', 679, 27, 679, 31),
woosh.Token(woosh.OP, '.', 679, 31, 679, 32),
woosh.Token(woosh.NAME, 'bplist', 679, 32, 679, 38),
woosh.Token(woosh.OP, ':', 679, 38, 679, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 39, 680, 0),
woosh.Token(woosh.INDENT, '            ', 680, 0, 680, 12),
woosh.Token(woosh.NAME, 'self', 680, 12, 680, 16),
woosh.Token(woosh.OP, '.', 680, 16, 680, 17),
woosh.Token(woosh.NAME, 'bplist', 680, 17, 680, 23),
woosh.Token(woosh.OP, '[', 680, 23, 680, 24),
woosh.Token(woosh.NAME, 'file', 680, 24, 680, 28),
woosh.Token(woosh.OP, ',', 680, 28, 680, 29),
woosh.Token(woosh.NAME, 'line', 680, 30, 680, 34),
woosh.Token(woosh.OP, ']', 680, 34, 680, 35),
woosh.Token(woosh.OP, '.', 680, 35, 680, 36),
woosh.Token(woosh.NAME, 'append', 680, 36, 680, 42),
woosh.Token(woosh.OP, '(', 680, 42, 680, 43),
woosh.Token(woosh.NAME, 'self', 680, 43, 680, 47),
woosh.Token(woosh.OP, ')', 680, 47, 680, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 680, 48, 681, 0),
woosh.Token(woosh.DEDENT, '        ', 681, 0, 681, 8),
woosh.Token(woosh.NAME, 'else', 681, 8, 681, 12),
woosh.Token(woosh.OP, ':', 681, 12, 681, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 681, 13, 682, 0),
woosh.Token(woosh.INDENT, '            ', 682, 0, 682, 12),
woosh.Token(woosh.NAME, 'self', 682, 12, 682, 16),
woosh.Token(woosh.OP, '.', 682, 16, 682, 17),
woosh.Token(woosh.NAME, 'bplist', 682, 17, 682, 23),
woosh.Token(woosh.OP, '[', 682, 23, 682, 24),
woosh.Token(woosh.NAME, 'file', 682, 24, 682, 28),
woosh.Token(woosh.OP, ',', 682, 28, 682, 29),
woosh.Token(woosh.NAME, 'line', 682, 30, 682, 34),
woosh.Token(woosh.OP, ']', 682, 34, 682, 35),
woosh.Token(woosh.OP, '=', 682, 36, 682, 37),
woosh.Token(woosh.OP, '[', 682, 38, 682, 39),
woosh.Token(woosh.NAME, 'self', 682, 39, 682, 43),
woosh.Token(woosh.OP, ']', 682, 43, 682, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 682, 44, 683, 0),
woosh.Token(woosh.DEDENT, '    ', 684, 0, 684, 4),
woosh.Token(woosh.DEDENT, '', 684, 4, 684, 4),
woosh.Token(woosh.NAME, 'def', 684, 4, 684, 7),
woosh.Token(woosh.NAME, 'deleteMe', 684, 8, 684, 16),
woosh.Token(woosh.OP, '(', 684, 16, 684, 17),
woosh.Token(woosh.NAME, 'self', 684, 17, 684, 21),
woosh.Token(woosh.OP, ')', 684, 21, 684, 22),
woosh.Token(woosh.OP, ':', 684, 22, 684, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 23, 685, 0),
woosh.Token(woosh.INDENT, '        ', 685, 0, 685, 8),
woosh.Token(woosh.STRING, '"""Delete the breakpoint from the list associated to a file:line.\r\n\r\n        If it is the last breakpoint in that position, it also deletes\r\n        the entry for the file:line.\r\n        """', 685, 8, 689, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 689, 11, 690, 0),
woosh.Token(woosh.NAME, 'index', 691, 8, 691, 13),
woosh.Token(woosh.OP, '=', 691, 14, 691, 15),
woosh.Token(woosh.OP, '(', 691, 16, 691, 17),
woosh.Token(woosh.NAME, 'self', 691, 17, 691, 21),
woosh.Token(woosh.OP, '.', 691, 21, 691, 22),
woosh.Token(woosh.NAME, 'file', 691, 22, 691, 26),
woosh.Token(woosh.OP, ',', 691, 26, 691, 27),
woosh.Token(woosh.NAME, 'self', 691, 28, 691, 32),
woosh.Token(woosh.OP, '.', 691, 32, 691, 33),
woosh.Token(woosh.NAME, 'line', 691, 33, 691, 37),
woosh.Token(woosh.OP, ')', 691, 37, 691, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 691, 38, 692, 0),
woosh.Token(woosh.NAME, 'self', 692, 8, 692, 12),
woosh.Token(woosh.OP, '.', 692, 12, 692, 13),
woosh.Token(woosh.NAME, 'bpbynumber', 692, 13, 692, 23),
woosh.Token(woosh.OP, '[', 692, 23, 692, 24),
woosh.Token(woosh.NAME, 'self', 692, 24, 692, 28),
woosh.Token(woosh.OP, '.', 692, 28, 692, 29),
woosh.Token(woosh.NAME, 'number', 692, 29, 692, 35),
woosh.Token(woosh.OP, ']', 692, 35, 692, 36),
woosh.Token(woosh.OP, '=', 692, 37, 692, 38),
woosh.Token(woosh.NAME, 'None', 692, 39, 692, 43),
woosh.Token(woosh.COMMENT, '# No longer in list', 692, 46, 692, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 692, 65, 693, 0),
woosh.Token(woosh.NAME, 'self', 693, 8, 693, 12),
woosh.Token(woosh.OP, '.', 693, 12, 693, 13),
woosh.Token(woosh.NAME, 'bplist', 693, 13, 693, 19),
woosh.Token(woosh.OP, '[', 693, 19, 693, 20),
woosh.Token(woosh.NAME, 'index', 693, 20, 693, 25),
woosh.Token(woosh.OP, ']', 693, 25, 693, 26),
woosh.Token(woosh.OP, '.', 693, 26, 693, 27),
woosh.Token(woosh.NAME, 'remove', 693, 27, 693, 33),
woosh.Token(woosh.OP, '(', 693, 33, 693, 34),
woosh.Token(woosh.NAME, 'self', 693, 34, 693, 38),
woosh.Token(woosh.OP, ')', 693, 38, 693, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 693, 39, 694, 0),
woosh.Token(woosh.NAME, 'if', 694, 8, 694, 10),
woosh.Token(woosh.NAME, 'not', 694, 11, 694, 14),
woosh.Token(woosh.NAME, 'self', 694, 15, 694, 19),
woosh.Token(woosh.OP, '.', 694, 19, 694, 20),
woosh.Token(woosh.NAME, 'bplist', 694, 20, 694, 26),
woosh.Token(woosh.OP, '[', 694, 26, 694, 27),
woosh.Token(woosh.NAME, 'index', 694, 27, 694, 32),
woosh.Token(woosh.OP, ']', 694, 32, 694, 33),
woosh.Token(woosh.OP, ':', 694, 33, 694, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 694, 34, 695, 0),
woosh.Token(woosh.COMMENT, '# No more bp for this f:l combo', 695, 12, 695, 43),
woosh.Token(woosh.INDENT, '            ', 696, 0, 696, 12),
woosh.Token(woosh.NAME, 'del', 696, 12, 696, 15),
woosh.Token(woosh.NAME, 'self', 696, 16, 696, 20),
woosh.Token(woosh.OP, '.', 696, 20, 696, 21),
woosh.Token(woosh.NAME, 'bplist', 696, 21, 696, 27),
woosh.Token(woosh.OP, '[', 696, 27, 696, 28),
woosh.Token(woosh.NAME, 'index', 696, 28, 696, 33),
woosh.Token(woosh.OP, ']', 696, 33, 696, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 696, 34, 697, 0),
woosh.Token(woosh.DEDENT, '    ', 698, 0, 698, 4),
woosh.Token(woosh.DEDENT, '', 698, 4, 698, 4),
woosh.Token(woosh.NAME, 'def', 698, 4, 698, 7),
woosh.Token(woosh.NAME, 'enable', 698, 8, 698, 14),
woosh.Token(woosh.OP, '(', 698, 14, 698, 15),
woosh.Token(woosh.NAME, 'self', 698, 15, 698, 19),
woosh.Token(woosh.OP, ')', 698, 19, 698, 20),
woosh.Token(woosh.OP, ':', 698, 20, 698, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 698, 21, 699, 0),
woosh.Token(woosh.INDENT, '        ', 699, 0, 699, 8),
woosh.Token(woosh.STRING, '"""Mark the breakpoint as enabled."""', 699, 8, 699, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 45, 700, 0),
woosh.Token(woosh.NAME, 'self', 700, 8, 700, 12),
woosh.Token(woosh.OP, '.', 700, 12, 700, 13),
woosh.Token(woosh.NAME, 'enabled', 700, 13, 700, 20),
woosh.Token(woosh.OP, '=', 700, 21, 700, 22),
woosh.Token(woosh.NAME, 'True', 700, 23, 700, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 27, 701, 0),
woosh.Token(woosh.DEDENT, '    ', 702, 0, 702, 4),
woosh.Token(woosh.NAME, 'def', 702, 4, 702, 7),
woosh.Token(woosh.NAME, 'disable', 702, 8, 702, 15),
woosh.Token(woosh.OP, '(', 702, 15, 702, 16),
woosh.Token(woosh.NAME, 'self', 702, 16, 702, 20),
woosh.Token(woosh.OP, ')', 702, 20, 702, 21),
woosh.Token(woosh.OP, ':', 702, 21, 702, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 22, 703, 0),
woosh.Token(woosh.INDENT, '        ', 703, 0, 703, 8),
woosh.Token(woosh.STRING, '"""Mark the breakpoint as disabled."""', 703, 8, 703, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 703, 46, 704, 0),
woosh.Token(woosh.NAME, 'self', 704, 8, 704, 12),
woosh.Token(woosh.OP, '.', 704, 12, 704, 13),
woosh.Token(woosh.NAME, 'enabled', 704, 13, 704, 20),
woosh.Token(woosh.OP, '=', 704, 21, 704, 22),
woosh.Token(woosh.NAME, 'False', 704, 23, 704, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 704, 28, 705, 0),
woosh.Token(woosh.DEDENT, '    ', 706, 0, 706, 4),
woosh.Token(woosh.NAME, 'def', 706, 4, 706, 7),
woosh.Token(woosh.NAME, 'bpprint', 706, 8, 706, 15),
woosh.Token(woosh.OP, '(', 706, 15, 706, 16),
woosh.Token(woosh.NAME, 'self', 706, 16, 706, 20),
woosh.Token(woosh.OP, ',', 706, 20, 706, 21),
woosh.Token(woosh.NAME, 'out', 706, 22, 706, 25),
woosh.Token(woosh.OP, '=', 706, 25, 706, 26),
woosh.Token(woosh.NAME, 'None', 706, 26, 706, 30),
woosh.Token(woosh.OP, ')', 706, 30, 706, 31),
woosh.Token(woosh.OP, ':', 706, 31, 706, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 706, 32, 707, 0),
woosh.Token(woosh.INDENT, '        ', 707, 0, 707, 8),
woosh.Token(woosh.STRING, '"""Print the output of bpformat().\r\n\r\n        The optional out argument directs where the output is sent\r\n        and defaults to standard output.\r\n        """', 707, 8, 711, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 11, 712, 0),
woosh.Token(woosh.NAME, 'if', 712, 8, 712, 10),
woosh.Token(woosh.NAME, 'out', 712, 11, 712, 14),
woosh.Token(woosh.NAME, 'is', 712, 15, 712, 17),
woosh.Token(woosh.NAME, 'None', 712, 18, 712, 22),
woosh.Token(woosh.OP, ':', 712, 22, 712, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 712, 23, 713, 0),
woosh.Token(woosh.INDENT, '            ', 713, 0, 713, 12),
woosh.Token(woosh.NAME, 'out', 713, 12, 713, 15),
woosh.Token(woosh.OP, '=', 713, 16, 713, 17),
woosh.Token(woosh.NAME, 'sys', 713, 18, 713, 21),
woosh.Token(woosh.OP, '.', 713, 21, 713, 22),
woosh.Token(woosh.NAME, 'stdout', 713, 22, 713, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 713, 28, 714, 0),
woosh.Token(woosh.DEDENT, '        ', 714, 0, 714, 8),
woosh.Token(woosh.NAME, 'print', 714, 8, 714, 13),
woosh.Token(woosh.OP, '(', 714, 13, 714, 14),
woosh.Token(woosh.NAME, 'self', 714, 14, 714, 18),
woosh.Token(woosh.OP, '.', 714, 18, 714, 19),
woosh.Token(woosh.NAME, 'bpformat', 714, 19, 714, 27),
woosh.Token(woosh.OP, '(', 714, 27, 714, 28),
woosh.Token(woosh.OP, ')', 714, 28, 714, 29),
woosh.Token(woosh.OP, ',', 714, 29, 714, 30),
woosh.Token(woosh.NAME, 'file', 714, 31, 714, 35),
woosh.Token(woosh.OP, '=', 714, 35, 714, 36),
woosh.Token(woosh.NAME, 'out', 714, 36, 714, 39),
woosh.Token(woosh.OP, ')', 714, 39, 714, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 40, 715, 0),
woosh.Token(woosh.DEDENT, '    ', 716, 0, 716, 4),
woosh.Token(woosh.NAME, 'def', 716, 4, 716, 7),
woosh.Token(woosh.NAME, 'bpformat', 716, 8, 716, 16),
woosh.Token(woosh.OP, '(', 716, 16, 716, 17),
woosh.Token(woosh.NAME, 'self', 716, 17, 716, 21),
woosh.Token(woosh.OP, ')', 716, 21, 716, 22),
woosh.Token(woosh.OP, ':', 716, 22, 716, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 23, 717, 0),
woosh.Token(woosh.INDENT, '        ', 717, 0, 717, 8),
woosh.Token(woosh.STRING, '"""Return a string with information about the breakpoint.\r\n\r\n        The information includes the breakpoint number, temporary\r\n        status, file:line position, break condition, number of times to\r\n        ignore, and number of times hit.\r\n\r\n        """', 717, 8, 723, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 11, 724, 0),
woosh.Token(woosh.NAME, 'if', 724, 8, 724, 10),
woosh.Token(woosh.NAME, 'self', 724, 11, 724, 15),
woosh.Token(woosh.OP, '.', 724, 15, 724, 16),
woosh.Token(woosh.NAME, 'temporary', 724, 16, 724, 25),
woosh.Token(woosh.OP, ':', 724, 25, 724, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 724, 26, 725, 0),
woosh.Token(woosh.INDENT, '            ', 725, 0, 725, 12),
woosh.Token(woosh.NAME, 'disp', 725, 12, 725, 16),
woosh.Token(woosh.OP, '=', 725, 17, 725, 18),
woosh.Token(woosh.STRING, "'del  '", 725, 19, 725, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 26, 726, 0),
woosh.Token(woosh.DEDENT, '        ', 726, 0, 726, 8),
woosh.Token(woosh.NAME, 'else', 726, 8, 726, 12),
woosh.Token(woosh.OP, ':', 726, 12, 726, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 13, 727, 0),
woosh.Token(woosh.INDENT, '            ', 727, 0, 727, 12),
woosh.Token(woosh.NAME, 'disp', 727, 12, 727, 16),
woosh.Token(woosh.OP, '=', 727, 17, 727, 18),
woosh.Token(woosh.STRING, "'keep '", 727, 19, 727, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 26, 728, 0),
woosh.Token(woosh.DEDENT, '        ', 728, 0, 728, 8),
woosh.Token(woosh.NAME, 'if', 728, 8, 728, 10),
woosh.Token(woosh.NAME, 'self', 728, 11, 728, 15),
woosh.Token(woosh.OP, '.', 728, 15, 728, 16),
woosh.Token(woosh.NAME, 'enabled', 728, 16, 728, 23),
woosh.Token(woosh.OP, ':', 728, 23, 728, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 24, 729, 0),
woosh.Token(woosh.INDENT, '            ', 729, 0, 729, 12),
woosh.Token(woosh.NAME, 'disp', 729, 12, 729, 16),
woosh.Token(woosh.OP, '=', 729, 17, 729, 18),
woosh.Token(woosh.NAME, 'disp', 729, 19, 729, 23),
woosh.Token(woosh.OP, '+', 729, 24, 729, 25),
woosh.Token(woosh.STRING, "'yes  '", 729, 26, 729, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 729, 33, 730, 0),
woosh.Token(woosh.DEDENT, '        ', 730, 0, 730, 8),
woosh.Token(woosh.NAME, 'else', 730, 8, 730, 12),
woosh.Token(woosh.OP, ':', 730, 12, 730, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 730, 13, 731, 0),
woosh.Token(woosh.INDENT, '            ', 731, 0, 731, 12),
woosh.Token(woosh.NAME, 'disp', 731, 12, 731, 16),
woosh.Token(woosh.OP, '=', 731, 17, 731, 18),
woosh.Token(woosh.NAME, 'disp', 731, 19, 731, 23),
woosh.Token(woosh.OP, '+', 731, 24, 731, 25),
woosh.Token(woosh.STRING, "'no   '", 731, 26, 731, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 731, 33, 732, 0),
woosh.Token(woosh.DEDENT, '        ', 732, 0, 732, 8),
woosh.Token(woosh.NAME, 'ret', 732, 8, 732, 11),
woosh.Token(woosh.OP, '=', 732, 12, 732, 13),
woosh.Token(woosh.STRING, "'%-4dbreakpoint   %s at %s:%d'", 732, 14, 732, 44),
woosh.Token(woosh.OP, '%', 732, 45, 732, 46),
woosh.Token(woosh.OP, '(', 732, 47, 732, 48),
woosh.Token(woosh.NAME, 'self', 732, 48, 732, 52),
woosh.Token(woosh.OP, '.', 732, 52, 732, 53),
woosh.Token(woosh.NAME, 'number', 732, 53, 732, 59),
woosh.Token(woosh.OP, ',', 732, 59, 732, 60),
woosh.Token(woosh.NAME, 'disp', 732, 61, 732, 65),
woosh.Token(woosh.OP, ',', 732, 65, 732, 66),
woosh.Token(woosh.NAME, 'self', 733, 48, 733, 52),
woosh.Token(woosh.OP, '.', 733, 52, 733, 53),
woosh.Token(woosh.NAME, 'file', 733, 53, 733, 57),
woosh.Token(woosh.OP, ',', 733, 57, 733, 58),
woosh.Token(woosh.NAME, 'self', 733, 59, 733, 63),
woosh.Token(woosh.OP, '.', 733, 63, 733, 64),
woosh.Token(woosh.NAME, 'line', 733, 64, 733, 68),
woosh.Token(woosh.OP, ')', 733, 68, 733, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 733, 69, 734, 0),
woosh.Token(woosh.NAME, 'if', 734, 8, 734, 10),
woosh.Token(woosh.NAME, 'self', 734, 11, 734, 15),
woosh.Token(woosh.OP, '.', 734, 15, 734, 16),
woosh.Token(woosh.NAME, 'cond', 734, 16, 734, 20),
woosh.Token(woosh.OP, ':', 734, 20, 734, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 21, 735, 0),
woosh.Token(woosh.INDENT, '            ', 735, 0, 735, 12),
woosh.Token(woosh.NAME, 'ret', 735, 12, 735, 15),
woosh.Token(woosh.OP, '+=', 735, 16, 735, 18),
woosh.Token(woosh.STRING, "'\\n\\tstop only if %s'", 735, 19, 735, 40),
woosh.Token(woosh.OP, '%', 735, 41, 735, 42),
woosh.Token(woosh.OP, '(', 735, 43, 735, 44),
woosh.Token(woosh.NAME, 'self', 735, 44, 735, 48),
woosh.Token(woosh.OP, '.', 735, 48, 735, 49),
woosh.Token(woosh.NAME, 'cond', 735, 49, 735, 53),
woosh.Token(woosh.OP, ',', 735, 53, 735, 54),
woosh.Token(woosh.OP, ')', 735, 54, 735, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 735, 55, 736, 0),
woosh.Token(woosh.DEDENT, '        ', 736, 0, 736, 8),
woosh.Token(woosh.NAME, 'if', 736, 8, 736, 10),
woosh.Token(woosh.NAME, 'self', 736, 11, 736, 15),
woosh.Token(woosh.OP, '.', 736, 15, 736, 16),
woosh.Token(woosh.NAME, 'ignore', 736, 16, 736, 22),
woosh.Token(woosh.OP, ':', 736, 22, 736, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 23, 737, 0),
woosh.Token(woosh.INDENT, '            ', 737, 0, 737, 12),
woosh.Token(woosh.NAME, 'ret', 737, 12, 737, 15),
woosh.Token(woosh.OP, '+=', 737, 16, 737, 18),
woosh.Token(woosh.STRING, "'\\n\\tignore next %d hits'", 737, 19, 737, 44),
woosh.Token(woosh.OP, '%', 737, 45, 737, 46),
woosh.Token(woosh.OP, '(', 737, 47, 737, 48),
woosh.Token(woosh.NAME, 'self', 737, 48, 737, 52),
woosh.Token(woosh.OP, '.', 737, 52, 737, 53),
woosh.Token(woosh.NAME, 'ignore', 737, 53, 737, 59),
woosh.Token(woosh.OP, ',', 737, 59, 737, 60),
woosh.Token(woosh.OP, ')', 737, 60, 737, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 737, 61, 738, 0),
woosh.Token(woosh.DEDENT, '        ', 738, 0, 738, 8),
woosh.Token(woosh.NAME, 'if', 738, 8, 738, 10),
woosh.Token(woosh.NAME, 'self', 738, 11, 738, 15),
woosh.Token(woosh.OP, '.', 738, 15, 738, 16),
woosh.Token(woosh.NAME, 'hits', 738, 16, 738, 20),
woosh.Token(woosh.OP, ':', 738, 20, 738, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 21, 739, 0),
woosh.Token(woosh.INDENT, '            ', 739, 0, 739, 12),
woosh.Token(woosh.NAME, 'if', 739, 12, 739, 14),
woosh.Token(woosh.NAME, 'self', 739, 15, 739, 19),
woosh.Token(woosh.OP, '.', 739, 19, 739, 20),
woosh.Token(woosh.NAME, 'hits', 739, 20, 739, 24),
woosh.Token(woosh.OP, '>', 739, 25, 739, 26),
woosh.Token(woosh.NUMBER, '1', 739, 27, 739, 28),
woosh.Token(woosh.OP, ':', 739, 28, 739, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 29, 740, 0),
woosh.Token(woosh.INDENT, '                ', 740, 0, 740, 16),
woosh.Token(woosh.NAME, 'ss', 740, 16, 740, 18),
woosh.Token(woosh.OP, '=', 740, 19, 740, 20),
woosh.Token(woosh.STRING, "'s'", 740, 21, 740, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 740, 24, 741, 0),
woosh.Token(woosh.DEDENT, '            ', 741, 0, 741, 12),
woosh.Token(woosh.NAME, 'else', 741, 12, 741, 16),
woosh.Token(woosh.OP, ':', 741, 16, 741, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 17, 742, 0),
woosh.Token(woosh.INDENT, '                ', 742, 0, 742, 16),
woosh.Token(woosh.NAME, 'ss', 742, 16, 742, 18),
woosh.Token(woosh.OP, '=', 742, 19, 742, 20),
woosh.Token(woosh.STRING, "''", 742, 21, 742, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 742, 23, 743, 0),
woosh.Token(woosh.DEDENT, '            ', 743, 0, 743, 12),
woosh.Token(woosh.NAME, 'ret', 743, 12, 743, 15),
woosh.Token(woosh.OP, '+=', 743, 16, 743, 18),
woosh.Token(woosh.STRING, "'\\n\\tbreakpoint already hit %d time%s'", 743, 19, 743, 57),
woosh.Token(woosh.OP, '%', 743, 58, 743, 59),
woosh.Token(woosh.OP, '(', 743, 60, 743, 61),
woosh.Token(woosh.NAME, 'self', 743, 61, 743, 65),
woosh.Token(woosh.OP, '.', 743, 65, 743, 66),
woosh.Token(woosh.NAME, 'hits', 743, 66, 743, 70),
woosh.Token(woosh.OP, ',', 743, 70, 743, 71),
woosh.Token(woosh.NAME, 'ss', 743, 72, 743, 74),
woosh.Token(woosh.OP, ')', 743, 74, 743, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 75, 744, 0),
woosh.Token(woosh.DEDENT, '        ', 744, 0, 744, 8),
woosh.Token(woosh.NAME, 'return', 744, 8, 744, 14),
woosh.Token(woosh.NAME, 'ret', 744, 15, 744, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 18, 745, 0),
woosh.Token(woosh.DEDENT, '    ', 746, 0, 746, 4),
woosh.Token(woosh.NAME, 'def', 746, 4, 746, 7),
woosh.Token(woosh.NAME, '__str__', 746, 8, 746, 15),
woosh.Token(woosh.OP, '(', 746, 15, 746, 16),
woosh.Token(woosh.NAME, 'self', 746, 16, 746, 20),
woosh.Token(woosh.OP, ')', 746, 20, 746, 21),
woosh.Token(woosh.OP, ':', 746, 21, 746, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 22, 747, 0),
woosh.Token(woosh.INDENT, '        ', 747, 0, 747, 8),
woosh.Token(woosh.STRING, '"Return a condensed description of the breakpoint."', 747, 8, 747, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 59, 748, 0),
woosh.Token(woosh.NAME, 'return', 748, 8, 748, 14),
woosh.Token(woosh.STRING, "'breakpoint %s at %s:%s'", 748, 15, 748, 39),
woosh.Token(woosh.OP, '%', 748, 40, 748, 41),
woosh.Token(woosh.OP, '(', 748, 42, 748, 43),
woosh.Token(woosh.NAME, 'self', 748, 43, 748, 47),
woosh.Token(woosh.OP, '.', 748, 47, 748, 48),
woosh.Token(woosh.NAME, 'number', 748, 48, 748, 54),
woosh.Token(woosh.OP, ',', 748, 54, 748, 55),
woosh.Token(woosh.NAME, 'self', 748, 56, 748, 60),
woosh.Token(woosh.OP, '.', 748, 60, 748, 61),
woosh.Token(woosh.NAME, 'file', 748, 61, 748, 65),
woosh.Token(woosh.OP, ',', 748, 65, 748, 66),
woosh.Token(woosh.NAME, 'self', 748, 67, 748, 71),
woosh.Token(woosh.OP, '.', 748, 71, 748, 72),
woosh.Token(woosh.NAME, 'line', 748, 72, 748, 76),
woosh.Token(woosh.OP, ')', 748, 76, 748, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 77, 749, 0),
woosh.Token(woosh.COMMENT, '# -----------end of Breakpoint class----------', 750, 0, 750, 46),
woosh.Token(woosh.DEDENT, '', 753, 0, 753, 0),
woosh.Token(woosh.DEDENT, '', 753, 0, 753, 0),
woosh.Token(woosh.NAME, 'def', 753, 0, 753, 3),
woosh.Token(woosh.NAME, 'checkfuncname', 753, 4, 753, 17),
woosh.Token(woosh.OP, '(', 753, 17, 753, 18),
woosh.Token(woosh.NAME, 'b', 753, 18, 753, 19),
woosh.Token(woosh.OP, ',', 753, 19, 753, 20),
woosh.Token(woosh.NAME, 'frame', 753, 21, 753, 26),
woosh.Token(woosh.OP, ')', 753, 26, 753, 27),
woosh.Token(woosh.OP, ':', 753, 27, 753, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 28, 754, 0),
woosh.Token(woosh.INDENT, '    ', 754, 0, 754, 4),
woosh.Token(woosh.STRING, '"""Return True if break should happen here.\r\n\r\n    Whether a break should happen depends on the way that b (the breakpoint)\r\n    was set.  If it was set via line number, check if b.line is the same as\r\n    the one in the frame.  If it was set via function name, check if this is\r\n    the right function and if it is on the first executable line.\r\n    """', 754, 4, 760, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 7, 761, 0),
woosh.Token(woosh.NAME, 'if', 761, 4, 761, 6),
woosh.Token(woosh.NAME, 'not', 761, 7, 761, 10),
woosh.Token(woosh.NAME, 'b', 761, 11, 761, 12),
woosh.Token(woosh.OP, '.', 761, 12, 761, 13),
woosh.Token(woosh.NAME, 'funcname', 761, 13, 761, 21),
woosh.Token(woosh.OP, ':', 761, 21, 761, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 22, 762, 0),
woosh.Token(woosh.COMMENT, '# Breakpoint was set via line number.', 762, 8, 762, 45),
woosh.Token(woosh.INDENT, '        ', 763, 0, 763, 8),
woosh.Token(woosh.NAME, 'if', 763, 8, 763, 10),
woosh.Token(woosh.NAME, 'b', 763, 11, 763, 12),
woosh.Token(woosh.OP, '.', 763, 12, 763, 13),
woosh.Token(woosh.NAME, 'line', 763, 13, 763, 17),
woosh.Token(woosh.OP, '!=', 763, 18, 763, 20),
woosh.Token(woosh.NAME, 'frame', 763, 21, 763, 26),
woosh.Token(woosh.OP, '.', 763, 26, 763, 27),
woosh.Token(woosh.NAME, 'f_lineno', 763, 27, 763, 35),
woosh.Token(woosh.OP, ':', 763, 35, 763, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 763, 36, 764, 0),
woosh.Token(woosh.COMMENT, '# Breakpoint was set at a line with a def statement and the function', 764, 12, 764, 80),
woosh.Token(woosh.COMMENT, "# defined is called: don't break.", 765, 12, 765, 45),
woosh.Token(woosh.INDENT, '            ', 766, 0, 766, 12),
woosh.Token(woosh.NAME, 'return', 766, 12, 766, 18),
woosh.Token(woosh.NAME, 'False', 766, 19, 766, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 766, 24, 767, 0),
woosh.Token(woosh.DEDENT, '        ', 767, 0, 767, 8),
woosh.Token(woosh.NAME, 'return', 767, 8, 767, 14),
woosh.Token(woosh.NAME, 'True', 767, 15, 767, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 767, 19, 768, 0),
woosh.Token(woosh.COMMENT, '# Breakpoint set via function name.', 769, 4, 769, 39),
woosh.Token(woosh.DEDENT, '    ', 770, 0, 770, 4),
woosh.Token(woosh.NAME, 'if', 770, 4, 770, 6),
woosh.Token(woosh.NAME, 'frame', 770, 7, 770, 12),
woosh.Token(woosh.OP, '.', 770, 12, 770, 13),
woosh.Token(woosh.NAME, 'f_code', 770, 13, 770, 19),
woosh.Token(woosh.OP, '.', 770, 19, 770, 20),
woosh.Token(woosh.NAME, 'co_name', 770, 20, 770, 27),
woosh.Token(woosh.OP, '!=', 770, 28, 770, 30),
woosh.Token(woosh.NAME, 'b', 770, 31, 770, 32),
woosh.Token(woosh.OP, '.', 770, 32, 770, 33),
woosh.Token(woosh.NAME, 'funcname', 770, 33, 770, 41),
woosh.Token(woosh.OP, ':', 770, 41, 770, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 42, 771, 0),
woosh.Token(woosh.COMMENT, "# It's not a function call, but rather execution of def statement.", 771, 8, 771, 74),
woosh.Token(woosh.INDENT, '        ', 772, 0, 772, 8),
woosh.Token(woosh.NAME, 'return', 772, 8, 772, 14),
woosh.Token(woosh.NAME, 'False', 772, 15, 772, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 772, 20, 773, 0),
woosh.Token(woosh.COMMENT, '# We are in the right frame.', 774, 4, 774, 32),
woosh.Token(woosh.DEDENT, '    ', 775, 0, 775, 4),
woosh.Token(woosh.NAME, 'if', 775, 4, 775, 6),
woosh.Token(woosh.NAME, 'not', 775, 7, 775, 10),
woosh.Token(woosh.NAME, 'b', 775, 11, 775, 12),
woosh.Token(woosh.OP, '.', 775, 12, 775, 13),
woosh.Token(woosh.NAME, 'func_first_executable_line', 775, 13, 775, 39),
woosh.Token(woosh.OP, ':', 775, 39, 775, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 40, 776, 0),
woosh.Token(woosh.COMMENT, '# The function is entered for the 1st time.', 776, 8, 776, 51),
woosh.Token(woosh.INDENT, '        ', 777, 0, 777, 8),
woosh.Token(woosh.NAME, 'b', 777, 8, 777, 9),
woosh.Token(woosh.OP, '.', 777, 9, 777, 10),
woosh.Token(woosh.NAME, 'func_first_executable_line', 777, 10, 777, 36),
woosh.Token(woosh.OP, '=', 777, 37, 777, 38),
woosh.Token(woosh.NAME, 'frame', 777, 39, 777, 44),
woosh.Token(woosh.OP, '.', 777, 44, 777, 45),
woosh.Token(woosh.NAME, 'f_lineno', 777, 45, 777, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 53, 778, 0),
woosh.Token(woosh.DEDENT, '    ', 779, 0, 779, 4),
woosh.Token(woosh.NAME, 'if', 779, 4, 779, 6),
woosh.Token(woosh.NAME, 'b', 779, 7, 779, 8),
woosh.Token(woosh.OP, '.', 779, 8, 779, 9),
woosh.Token(woosh.NAME, 'func_first_executable_line', 779, 9, 779, 35),
woosh.Token(woosh.OP, '!=', 779, 36, 779, 38),
woosh.Token(woosh.NAME, 'frame', 779, 39, 779, 44),
woosh.Token(woosh.OP, '.', 779, 44, 779, 45),
woosh.Token(woosh.NAME, 'f_lineno', 779, 45, 779, 53),
woosh.Token(woosh.OP, ':', 779, 53, 779, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 54, 780, 0),
woosh.Token(woosh.COMMENT, "# But we are not at the first line number: don't break.", 780, 8, 780, 63),
woosh.Token(woosh.INDENT, '        ', 781, 0, 781, 8),
woosh.Token(woosh.NAME, 'return', 781, 8, 781, 14),
woosh.Token(woosh.NAME, 'False', 781, 15, 781, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 20, 782, 0),
woosh.Token(woosh.DEDENT, '    ', 782, 0, 782, 4),
woosh.Token(woosh.NAME, 'return', 782, 4, 782, 10),
woosh.Token(woosh.NAME, 'True', 782, 11, 782, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 15, 783, 0),
woosh.Token(woosh.COMMENT, '# Determines if there is an effective (active) breakpoint at this', 785, 0, 785, 65),
woosh.Token(woosh.COMMENT, '# line of code.  Returns breakpoint number or 0 if none', 786, 0, 786, 55),
woosh.Token(woosh.DEDENT, '', 787, 0, 787, 0),
woosh.Token(woosh.NAME, 'def', 787, 0, 787, 3),
woosh.Token(woosh.NAME, 'effective', 787, 4, 787, 13),
woosh.Token(woosh.OP, '(', 787, 13, 787, 14),
woosh.Token(woosh.NAME, 'file', 787, 14, 787, 18),
woosh.Token(woosh.OP, ',', 787, 18, 787, 19),
woosh.Token(woosh.NAME, 'line', 787, 20, 787, 24),
woosh.Token(woosh.OP, ',', 787, 24, 787, 25),
woosh.Token(woosh.NAME, 'frame', 787, 26, 787, 31),
woosh.Token(woosh.OP, ')', 787, 31, 787, 32),
woosh.Token(woosh.OP, ':', 787, 32, 787, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 33, 788, 0),
woosh.Token(woosh.INDENT, '    ', 788, 0, 788, 4),
woosh.Token(woosh.STRING, '"""Determine which breakpoint for this file:line is to be acted upon.\r\n\r\n    Called only if we know there is a breakpoint at this location.  Return\r\n    the breakpoint that was triggered and a boolean that indicates if it is\r\n    ok to delete a temporary breakpoint.  Return (None, None) if there is no\r\n    matching breakpoint.\r\n    """', 788, 4, 794, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 794, 7, 795, 0),
woosh.Token(woosh.NAME, 'possibles', 795, 4, 795, 13),
woosh.Token(woosh.OP, '=', 795, 14, 795, 15),
woosh.Token(woosh.NAME, 'Breakpoint', 795, 16, 795, 26),
woosh.Token(woosh.OP, '.', 795, 26, 795, 27),
woosh.Token(woosh.NAME, 'bplist', 795, 27, 795, 33),
woosh.Token(woosh.OP, '[', 795, 33, 795, 34),
woosh.Token(woosh.NAME, 'file', 795, 34, 795, 38),
woosh.Token(woosh.OP, ',', 795, 38, 795, 39),
woosh.Token(woosh.NAME, 'line', 795, 40, 795, 44),
woosh.Token(woosh.OP, ']', 795, 44, 795, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 45, 796, 0),
woosh.Token(woosh.NAME, 'for', 796, 4, 796, 7),
woosh.Token(woosh.NAME, 'b', 796, 8, 796, 9),
woosh.Token(woosh.NAME, 'in', 796, 10, 796, 12),
woosh.Token(woosh.NAME, 'possibles', 796, 13, 796, 22),
woosh.Token(woosh.OP, ':', 796, 22, 796, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 23, 797, 0),
woosh.Token(woosh.INDENT, '        ', 797, 0, 797, 8),
woosh.Token(woosh.NAME, 'if', 797, 8, 797, 10),
woosh.Token(woosh.NAME, 'not', 797, 11, 797, 14),
woosh.Token(woosh.NAME, 'b', 797, 15, 797, 16),
woosh.Token(woosh.OP, '.', 797, 16, 797, 17),
woosh.Token(woosh.NAME, 'enabled', 797, 17, 797, 24),
woosh.Token(woosh.OP, ':', 797, 24, 797, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 25, 798, 0),
woosh.Token(woosh.INDENT, '            ', 798, 0, 798, 12),
woosh.Token(woosh.NAME, 'continue', 798, 12, 798, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 20, 799, 0),
woosh.Token(woosh.DEDENT, '        ', 799, 0, 799, 8),
woosh.Token(woosh.NAME, 'if', 799, 8, 799, 10),
woosh.Token(woosh.NAME, 'not', 799, 11, 799, 14),
woosh.Token(woosh.NAME, 'checkfuncname', 799, 15, 799, 28),
woosh.Token(woosh.OP, '(', 799, 28, 799, 29),
woosh.Token(woosh.NAME, 'b', 799, 29, 799, 30),
woosh.Token(woosh.OP, ',', 799, 30, 799, 31),
woosh.Token(woosh.NAME, 'frame', 799, 32, 799, 37),
woosh.Token(woosh.OP, ')', 799, 37, 799, 38),
woosh.Token(woosh.OP, ':', 799, 38, 799, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 799, 39, 800, 0),
woosh.Token(woosh.INDENT, '            ', 800, 0, 800, 12),
woosh.Token(woosh.NAME, 'continue', 800, 12, 800, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 20, 801, 0),
woosh.Token(woosh.COMMENT, '# Count every hit when bp is enabled', 801, 8, 801, 44),
woosh.Token(woosh.DEDENT, '        ', 802, 0, 802, 8),
woosh.Token(woosh.NAME, 'b', 802, 8, 802, 9),
woosh.Token(woosh.OP, '.', 802, 9, 802, 10),
woosh.Token(woosh.NAME, 'hits', 802, 10, 802, 14),
woosh.Token(woosh.OP, '+=', 802, 15, 802, 17),
woosh.Token(woosh.NUMBER, '1', 802, 18, 802, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 19, 803, 0),
woosh.Token(woosh.NAME, 'if', 803, 8, 803, 10),
woosh.Token(woosh.NAME, 'not', 803, 11, 803, 14),
woosh.Token(woosh.NAME, 'b', 803, 15, 803, 16),
woosh.Token(woosh.OP, '.', 803, 16, 803, 17),
woosh.Token(woosh.NAME, 'cond', 803, 17, 803, 21),
woosh.Token(woosh.OP, ':', 803, 21, 803, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 803, 22, 804, 0),
woosh.Token(woosh.COMMENT, '# If unconditional, and ignoring go on to next, else break', 804, 12, 804, 70),
woosh.Token(woosh.INDENT, '            ', 805, 0, 805, 12),
woosh.Token(woosh.NAME, 'if', 805, 12, 805, 14),
woosh.Token(woosh.NAME, 'b', 805, 15, 805, 16),
woosh.Token(woosh.OP, '.', 805, 16, 805, 17),
woosh.Token(woosh.NAME, 'ignore', 805, 17, 805, 23),
woosh.Token(woosh.OP, '>', 805, 24, 805, 25),
woosh.Token(woosh.NUMBER, '0', 805, 26, 805, 27),
woosh.Token(woosh.OP, ':', 805, 27, 805, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 805, 28, 806, 0),
woosh.Token(woosh.INDENT, '                ', 806, 0, 806, 16),
woosh.Token(woosh.NAME, 'b', 806, 16, 806, 17),
woosh.Token(woosh.OP, '.', 806, 17, 806, 18),
woosh.Token(woosh.NAME, 'ignore', 806, 18, 806, 24),
woosh.Token(woosh.OP, '-=', 806, 25, 806, 27),
woosh.Token(woosh.NUMBER, '1', 806, 28, 806, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 806, 29, 807, 0),
woosh.Token(woosh.NAME, 'continue', 807, 16, 807, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 24, 808, 0),
woosh.Token(woosh.DEDENT, '            ', 808, 0, 808, 12),
woosh.Token(woosh.NAME, 'else', 808, 12, 808, 16),
woosh.Token(woosh.OP, ':', 808, 16, 808, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 808, 17, 809, 0),
woosh.Token(woosh.COMMENT, "# breakpoint and marker that it's ok to delete if temporary", 809, 16, 809, 75),
woosh.Token(woosh.INDENT, '                ', 810, 0, 810, 16),
woosh.Token(woosh.NAME, 'return', 810, 16, 810, 22),
woosh.Token(woosh.OP, '(', 810, 23, 810, 24),
woosh.Token(woosh.NAME, 'b', 810, 24, 810, 25),
woosh.Token(woosh.OP, ',', 810, 25, 810, 26),
woosh.Token(woosh.NAME, 'True', 810, 27, 810, 31),
woosh.Token(woosh.OP, ')', 810, 31, 810, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 810, 32, 811, 0),
woosh.Token(woosh.DEDENT, '        ', 811, 0, 811, 8),
woosh.Token(woosh.DEDENT, '', 811, 8, 811, 8),
woosh.Token(woosh.NAME, 'else', 811, 8, 811, 12),
woosh.Token(woosh.OP, ':', 811, 12, 811, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 811, 13, 812, 0),
woosh.Token(woosh.COMMENT, '# Conditional bp.', 812, 12, 812, 29),
woosh.Token(woosh.COMMENT, '# Ignore count applies only to those bpt hits where the', 813, 12, 813, 67),
woosh.Token(woosh.COMMENT, '# condition evaluates to true.', 814, 12, 814, 42),
woosh.Token(woosh.INDENT, '            ', 815, 0, 815, 12),
woosh.Token(woosh.NAME, 'try', 815, 12, 815, 15),
woosh.Token(woosh.OP, ':', 815, 15, 815, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 815, 16, 816, 0),
woosh.Token(woosh.INDENT, '                ', 816, 0, 816, 16),
woosh.Token(woosh.NAME, 'val', 816, 16, 816, 19),
woosh.Token(woosh.OP, '=', 816, 20, 816, 21),
woosh.Token(woosh.NAME, 'eval', 816, 22, 816, 26),
woosh.Token(woosh.OP, '(', 816, 26, 816, 27),
woosh.Token(woosh.NAME, 'b', 816, 27, 816, 28),
woosh.Token(woosh.OP, '.', 816, 28, 816, 29),
woosh.Token(woosh.NAME, 'cond', 816, 29, 816, 33),
woosh.Token(woosh.OP, ',', 816, 33, 816, 34),
woosh.Token(woosh.NAME, 'frame', 816, 35, 816, 40),
woosh.Token(woosh.OP, '.', 816, 40, 816, 41),
woosh.Token(woosh.NAME, 'f_globals', 816, 41, 816, 50),
woosh.Token(woosh.OP, ',', 816, 50, 816, 51),
woosh.Token(woosh.NAME, 'frame', 816, 52, 816, 57),
woosh.Token(woosh.OP, '.', 816, 57, 816, 58),
woosh.Token(woosh.NAME, 'f_locals', 816, 58, 816, 66),
woosh.Token(woosh.OP, ')', 816, 66, 816, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 67, 817, 0),
woosh.Token(woosh.NAME, 'if', 817, 16, 817, 18),
woosh.Token(woosh.NAME, 'val', 817, 19, 817, 22),
woosh.Token(woosh.OP, ':', 817, 22, 817, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 817, 23, 818, 0),
woosh.Token(woosh.INDENT, '                    ', 818, 0, 818, 20),
woosh.Token(woosh.NAME, 'if', 818, 20, 818, 22),
woosh.Token(woosh.NAME, 'b', 818, 23, 818, 24),
woosh.Token(woosh.OP, '.', 818, 24, 818, 25),
woosh.Token(woosh.NAME, 'ignore', 818, 25, 818, 31),
woosh.Token(woosh.OP, '>', 818, 32, 818, 33),
woosh.Token(woosh.NUMBER, '0', 818, 34, 818, 35),
woosh.Token(woosh.OP, ':', 818, 35, 818, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 818, 36, 819, 0),
woosh.Token(woosh.INDENT, '                        ', 819, 0, 819, 24),
woosh.Token(woosh.NAME, 'b', 819, 24, 819, 25),
woosh.Token(woosh.OP, '.', 819, 25, 819, 26),
woosh.Token(woosh.NAME, 'ignore', 819, 26, 819, 32),
woosh.Token(woosh.OP, '-=', 819, 33, 819, 35),
woosh.Token(woosh.NUMBER, '1', 819, 36, 819, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 819, 37, 820, 0),
woosh.Token(woosh.COMMENT, '# continue', 820, 24, 820, 34),
woosh.Token(woosh.DEDENT, '                    ', 821, 0, 821, 20),
woosh.Token(woosh.NAME, 'else', 821, 20, 821, 24),
woosh.Token(woosh.OP, ':', 821, 24, 821, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 25, 822, 0),
woosh.Token(woosh.INDENT, '                        ', 822, 0, 822, 24),
woosh.Token(woosh.NAME, 'return', 822, 24, 822, 30),
woosh.Token(woosh.OP, '(', 822, 31, 822, 32),
woosh.Token(woosh.NAME, 'b', 822, 32, 822, 33),
woosh.Token(woosh.OP, ',', 822, 33, 822, 34),
woosh.Token(woosh.NAME, 'True', 822, 35, 822, 39),
woosh.Token(woosh.OP, ')', 822, 39, 822, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 40, 823, 0),
woosh.Token(woosh.COMMENT, '# else:', 823, 16, 823, 23),
woosh.Token(woosh.COMMENT, '#   continue', 824, 16, 824, 28),
woosh.Token(woosh.DEDENT, '            ', 825, 0, 825, 12),
woosh.Token(woosh.DEDENT, '', 825, 12, 825, 12),
woosh.Token(woosh.DEDENT, '', 825, 12, 825, 12),
woosh.Token(woosh.NAME, 'except', 825, 12, 825, 18),
woosh.Token(woosh.OP, ':', 825, 18, 825, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 19, 826, 0),
woosh.Token(woosh.COMMENT, '# if eval fails, most conservative thing is to stop on', 826, 16, 826, 70),
woosh.Token(woosh.COMMENT, "# breakpoint regardless of ignore count.  Don't delete", 827, 16, 827, 70),
woosh.Token(woosh.COMMENT, '# temporary, as another hint to user.', 828, 16, 828, 53),
woosh.Token(woosh.INDENT, '                ', 829, 0, 829, 16),
woosh.Token(woosh.NAME, 'return', 829, 16, 829, 22),
woosh.Token(woosh.OP, '(', 829, 23, 829, 24),
woosh.Token(woosh.NAME, 'b', 829, 24, 829, 25),
woosh.Token(woosh.OP, ',', 829, 25, 829, 26),
woosh.Token(woosh.NAME, 'False', 829, 27, 829, 32),
woosh.Token(woosh.OP, ')', 829, 32, 829, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 829, 33, 830, 0),
woosh.Token(woosh.DEDENT, '    ', 830, 0, 830, 4),
woosh.Token(woosh.DEDENT, '', 830, 4, 830, 4),
woosh.Token(woosh.DEDENT, '', 830, 4, 830, 4),
woosh.Token(woosh.NAME, 'return', 830, 4, 830, 10),
woosh.Token(woosh.OP, '(', 830, 11, 830, 12),
woosh.Token(woosh.NAME, 'None', 830, 12, 830, 16),
woosh.Token(woosh.OP, ',', 830, 16, 830, 17),
woosh.Token(woosh.NAME, 'None', 830, 18, 830, 22),
woosh.Token(woosh.OP, ')', 830, 22, 830, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 830, 23, 831, 0),
woosh.Token(woosh.COMMENT, '# -------------------- testing --------------------', 833, 0, 833, 51),
woosh.Token(woosh.DEDENT, '', 835, 0, 835, 0),
woosh.Token(woosh.NAME, 'class', 835, 0, 835, 5),
woosh.Token(woosh.NAME, 'Tdb', 835, 6, 835, 9),
woosh.Token(woosh.OP, '(', 835, 9, 835, 10),
woosh.Token(woosh.NAME, 'Bdb', 835, 10, 835, 13),
woosh.Token(woosh.OP, ')', 835, 13, 835, 14),
woosh.Token(woosh.OP, ':', 835, 14, 835, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 835, 15, 836, 0),
woosh.Token(woosh.INDENT, '    ', 836, 0, 836, 4),
woosh.Token(woosh.NAME, 'def', 836, 4, 836, 7),
woosh.Token(woosh.NAME, 'user_call', 836, 8, 836, 17),
woosh.Token(woosh.OP, '(', 836, 17, 836, 18),
woosh.Token(woosh.NAME, 'self', 836, 18, 836, 22),
woosh.Token(woosh.OP, ',', 836, 22, 836, 23),
woosh.Token(woosh.NAME, 'frame', 836, 24, 836, 29),
woosh.Token(woosh.OP, ',', 836, 29, 836, 30),
woosh.Token(woosh.NAME, 'args', 836, 31, 836, 35),
woosh.Token(woosh.OP, ')', 836, 35, 836, 36),
woosh.Token(woosh.OP, ':', 836, 36, 836, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 836, 37, 837, 0),
woosh.Token(woosh.INDENT, '        ', 837, 0, 837, 8),
woosh.Token(woosh.NAME, 'name', 837, 8, 837, 12),
woosh.Token(woosh.OP, '=', 837, 13, 837, 14),
woosh.Token(woosh.NAME, 'frame', 837, 15, 837, 20),
woosh.Token(woosh.OP, '.', 837, 20, 837, 21),
woosh.Token(woosh.NAME, 'f_code', 837, 21, 837, 27),
woosh.Token(woosh.OP, '.', 837, 27, 837, 28),
woosh.Token(woosh.NAME, 'co_name', 837, 28, 837, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 35, 838, 0),
woosh.Token(woosh.NAME, 'if', 838, 8, 838, 10),
woosh.Token(woosh.NAME, 'not', 838, 11, 838, 14),
woosh.Token(woosh.NAME, 'name', 838, 15, 838, 19),
woosh.Token(woosh.OP, ':', 838, 19, 838, 20),
woosh.Token(woosh.NAME, 'name', 838, 21, 838, 25),
woosh.Token(woosh.OP, '=', 838, 26, 838, 27),
woosh.Token(woosh.STRING, "'???'", 838, 28, 838, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 33, 839, 0),
woosh.Token(woosh.NAME, 'print', 839, 8, 839, 13),
woosh.Token(woosh.OP, '(', 839, 13, 839, 14),
woosh.Token(woosh.STRING, "'+++ call'", 839, 14, 839, 24),
woosh.Token(woosh.OP, ',', 839, 24, 839, 25),
woosh.Token(woosh.NAME, 'name', 839, 26, 839, 30),
woosh.Token(woosh.OP, ',', 839, 30, 839, 31),
woosh.Token(woosh.NAME, 'args', 839, 32, 839, 36),
woosh.Token(woosh.OP, ')', 839, 36, 839, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 37, 840, 0),
woosh.Token(woosh.DEDENT, '    ', 840, 0, 840, 4),
woosh.Token(woosh.NAME, 'def', 840, 4, 840, 7),
woosh.Token(woosh.NAME, 'user_line', 840, 8, 840, 17),
woosh.Token(woosh.OP, '(', 840, 17, 840, 18),
woosh.Token(woosh.NAME, 'self', 840, 18, 840, 22),
woosh.Token(woosh.OP, ',', 840, 22, 840, 23),
woosh.Token(woosh.NAME, 'frame', 840, 24, 840, 29),
woosh.Token(woosh.OP, ')', 840, 29, 840, 30),
woosh.Token(woosh.OP, ':', 840, 30, 840, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 31, 841, 0),
woosh.Token(woosh.INDENT, '        ', 841, 0, 841, 8),
woosh.Token(woosh.NAME, 'import', 841, 8, 841, 14),
woosh.Token(woosh.NAME, 'linecache', 841, 15, 841, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 24, 842, 0),
woosh.Token(woosh.NAME, 'name', 842, 8, 842, 12),
woosh.Token(woosh.OP, '=', 842, 13, 842, 14),
woosh.Token(woosh.NAME, 'frame', 842, 15, 842, 20),
woosh.Token(woosh.OP, '.', 842, 20, 842, 21),
woosh.Token(woosh.NAME, 'f_code', 842, 21, 842, 27),
woosh.Token(woosh.OP, '.', 842, 27, 842, 28),
woosh.Token(woosh.NAME, 'co_name', 842, 28, 842, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 35, 843, 0),
woosh.Token(woosh.NAME, 'if', 843, 8, 843, 10),
woosh.Token(woosh.NAME, 'not', 843, 11, 843, 14),
woosh.Token(woosh.NAME, 'name', 843, 15, 843, 19),
woosh.Token(woosh.OP, ':', 843, 19, 843, 20),
woosh.Token(woosh.NAME, 'name', 843, 21, 843, 25),
woosh.Token(woosh.OP, '=', 843, 26, 843, 27),
woosh.Token(woosh.STRING, "'???'", 843, 28, 843, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 33, 844, 0),
woosh.Token(woosh.NAME, 'fn', 844, 8, 844, 10),
woosh.Token(woosh.OP, '=', 844, 11, 844, 12),
woosh.Token(woosh.NAME, 'self', 844, 13, 844, 17),
woosh.Token(woosh.OP, '.', 844, 17, 844, 18),
woosh.Token(woosh.NAME, 'canonic', 844, 18, 844, 25),
woosh.Token(woosh.OP, '(', 844, 25, 844, 26),
woosh.Token(woosh.NAME, 'frame', 844, 26, 844, 31),
woosh.Token(woosh.OP, '.', 844, 31, 844, 32),
woosh.Token(woosh.NAME, 'f_code', 844, 32, 844, 38),
woosh.Token(woosh.OP, '.', 844, 38, 844, 39),
woosh.Token(woosh.NAME, 'co_filename', 844, 39, 844, 50),
woosh.Token(woosh.OP, ')', 844, 50, 844, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 844, 51, 845, 0),
woosh.Token(woosh.NAME, 'line', 845, 8, 845, 12),
woosh.Token(woosh.OP, '=', 845, 13, 845, 14),
woosh.Token(woosh.NAME, 'linecache', 845, 15, 845, 24),
woosh.Token(woosh.OP, '.', 845, 24, 845, 25),
woosh.Token(woosh.NAME, 'getline', 845, 25, 845, 32),
woosh.Token(woosh.OP, '(', 845, 32, 845, 33),
woosh.Token(woosh.NAME, 'fn', 845, 33, 845, 35),
woosh.Token(woosh.OP, ',', 845, 35, 845, 36),
woosh.Token(woosh.NAME, 'frame', 845, 37, 845, 42),
woosh.Token(woosh.OP, '.', 845, 42, 845, 43),
woosh.Token(woosh.NAME, 'f_lineno', 845, 43, 845, 51),
woosh.Token(woosh.OP, ',', 845, 51, 845, 52),
woosh.Token(woosh.NAME, 'frame', 845, 53, 845, 58),
woosh.Token(woosh.OP, '.', 845, 58, 845, 59),
woosh.Token(woosh.NAME, 'f_globals', 845, 59, 845, 68),
woosh.Token(woosh.OP, ')', 845, 68, 845, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 845, 69, 846, 0),
woosh.Token(woosh.NAME, 'print', 846, 8, 846, 13),
woosh.Token(woosh.OP, '(', 846, 13, 846, 14),
woosh.Token(woosh.STRING, "'+++'", 846, 14, 846, 19),
woosh.Token(woosh.OP, ',', 846, 19, 846, 20),
woosh.Token(woosh.NAME, 'fn', 846, 21, 846, 23),
woosh.Token(woosh.OP, ',', 846, 23, 846, 24),
woosh.Token(woosh.NAME, 'frame', 846, 25, 846, 30),
woosh.Token(woosh.OP, '.', 846, 30, 846, 31),
woosh.Token(woosh.NAME, 'f_lineno', 846, 31, 846, 39),
woosh.Token(woosh.OP, ',', 846, 39, 846, 40),
woosh.Token(woosh.NAME, 'name', 846, 41, 846, 45),
woosh.Token(woosh.OP, ',', 846, 45, 846, 46),
woosh.Token(woosh.STRING, "':'", 846, 47, 846, 50),
woosh.Token(woosh.OP, ',', 846, 50, 846, 51),
woosh.Token(woosh.NAME, 'line', 846, 52, 846, 56),
woosh.Token(woosh.OP, '.', 846, 56, 846, 57),
woosh.Token(woosh.NAME, 'strip', 846, 57, 846, 62),
woosh.Token(woosh.OP, '(', 846, 62, 846, 63),
woosh.Token(woosh.OP, ')', 846, 63, 846, 64),
woosh.Token(woosh.OP, ')', 846, 64, 846, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 846, 65, 847, 0),
woosh.Token(woosh.DEDENT, '    ', 847, 0, 847, 4),
woosh.Token(woosh.NAME, 'def', 847, 4, 847, 7),
woosh.Token(woosh.NAME, 'user_return', 847, 8, 847, 19),
woosh.Token(woosh.OP, '(', 847, 19, 847, 20),
woosh.Token(woosh.NAME, 'self', 847, 20, 847, 24),
woosh.Token(woosh.OP, ',', 847, 24, 847, 25),
woosh.Token(woosh.NAME, 'frame', 847, 26, 847, 31),
woosh.Token(woosh.OP, ',', 847, 31, 847, 32),
woosh.Token(woosh.NAME, 'retval', 847, 33, 847, 39),
woosh.Token(woosh.OP, ')', 847, 39, 847, 40),
woosh.Token(woosh.OP, ':', 847, 40, 847, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 847, 41, 848, 0),
woosh.Token(woosh.INDENT, '        ', 848, 0, 848, 8),
woosh.Token(woosh.NAME, 'print', 848, 8, 848, 13),
woosh.Token(woosh.OP, '(', 848, 13, 848, 14),
woosh.Token(woosh.STRING, "'+++ return'", 848, 14, 848, 26),
woosh.Token(woosh.OP, ',', 848, 26, 848, 27),
woosh.Token(woosh.NAME, 'retval', 848, 28, 848, 34),
woosh.Token(woosh.OP, ')', 848, 34, 848, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 35, 849, 0),
woosh.Token(woosh.DEDENT, '    ', 849, 0, 849, 4),
woosh.Token(woosh.NAME, 'def', 849, 4, 849, 7),
woosh.Token(woosh.NAME, 'user_exception', 849, 8, 849, 22),
woosh.Token(woosh.OP, '(', 849, 22, 849, 23),
woosh.Token(woosh.NAME, 'self', 849, 23, 849, 27),
woosh.Token(woosh.OP, ',', 849, 27, 849, 28),
woosh.Token(woosh.NAME, 'frame', 849, 29, 849, 34),
woosh.Token(woosh.OP, ',', 849, 34, 849, 35),
woosh.Token(woosh.NAME, 'exc_stuff', 849, 36, 849, 45),
woosh.Token(woosh.OP, ')', 849, 45, 849, 46),
woosh.Token(woosh.OP, ':', 849, 46, 849, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 47, 850, 0),
woosh.Token(woosh.INDENT, '        ', 850, 0, 850, 8),
woosh.Token(woosh.NAME, 'print', 850, 8, 850, 13),
woosh.Token(woosh.OP, '(', 850, 13, 850, 14),
woosh.Token(woosh.STRING, "'+++ exception'", 850, 14, 850, 29),
woosh.Token(woosh.OP, ',', 850, 29, 850, 30),
woosh.Token(woosh.NAME, 'exc_stuff', 850, 31, 850, 40),
woosh.Token(woosh.OP, ')', 850, 40, 850, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 41, 851, 0),
woosh.Token(woosh.NAME, 'self', 851, 8, 851, 12),
woosh.Token(woosh.OP, '.', 851, 12, 851, 13),
woosh.Token(woosh.NAME, 'set_continue', 851, 13, 851, 25),
woosh.Token(woosh.OP, '(', 851, 25, 851, 26),
woosh.Token(woosh.OP, ')', 851, 26, 851, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 27, 852, 0),
woosh.Token(woosh.DEDENT, '', 853, 0, 853, 0),
woosh.Token(woosh.DEDENT, '', 853, 0, 853, 0),
woosh.Token(woosh.NAME, 'def', 853, 0, 853, 3),
woosh.Token(woosh.NAME, 'foo', 853, 4, 853, 7),
woosh.Token(woosh.OP, '(', 853, 7, 853, 8),
woosh.Token(woosh.NAME, 'n', 853, 8, 853, 9),
woosh.Token(woosh.OP, ')', 853, 9, 853, 10),
woosh.Token(woosh.OP, ':', 853, 10, 853, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 853, 11, 854, 0),
woosh.Token(woosh.INDENT, '    ', 854, 0, 854, 4),
woosh.Token(woosh.NAME, 'print', 854, 4, 854, 9),
woosh.Token(woosh.OP, '(', 854, 9, 854, 10),
woosh.Token(woosh.STRING, "'foo('", 854, 10, 854, 16),
woosh.Token(woosh.OP, ',', 854, 16, 854, 17),
woosh.Token(woosh.NAME, 'n', 854, 18, 854, 19),
woosh.Token(woosh.OP, ',', 854, 19, 854, 20),
woosh.Token(woosh.STRING, "')'", 854, 21, 854, 24),
woosh.Token(woosh.OP, ')', 854, 24, 854, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 25, 855, 0),
woosh.Token(woosh.NAME, 'x', 855, 4, 855, 5),
woosh.Token(woosh.OP, '=', 855, 6, 855, 7),
woosh.Token(woosh.NAME, 'bar', 855, 8, 855, 11),
woosh.Token(woosh.OP, '(', 855, 11, 855, 12),
woosh.Token(woosh.NAME, 'n', 855, 12, 855, 13),
woosh.Token(woosh.OP, '*', 855, 13, 855, 14),
woosh.Token(woosh.NUMBER, '10', 855, 14, 855, 16),
woosh.Token(woosh.OP, ')', 855, 16, 855, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 855, 17, 856, 0),
woosh.Token(woosh.NAME, 'print', 856, 4, 856, 9),
woosh.Token(woosh.OP, '(', 856, 9, 856, 10),
woosh.Token(woosh.STRING, "'bar returned'", 856, 10, 856, 24),
woosh.Token(woosh.OP, ',', 856, 24, 856, 25),
woosh.Token(woosh.NAME, 'x', 856, 26, 856, 27),
woosh.Token(woosh.OP, ')', 856, 27, 856, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 28, 857, 0),
woosh.Token(woosh.DEDENT, '', 858, 0, 858, 0),
woosh.Token(woosh.NAME, 'def', 858, 0, 858, 3),
woosh.Token(woosh.NAME, 'bar', 858, 4, 858, 7),
woosh.Token(woosh.OP, '(', 858, 7, 858, 8),
woosh.Token(woosh.NAME, 'a', 858, 8, 858, 9),
woosh.Token(woosh.OP, ')', 858, 9, 858, 10),
woosh.Token(woosh.OP, ':', 858, 10, 858, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 11, 859, 0),
woosh.Token(woosh.INDENT, '    ', 859, 0, 859, 4),
woosh.Token(woosh.NAME, 'print', 859, 4, 859, 9),
woosh.Token(woosh.OP, '(', 859, 9, 859, 10),
woosh.Token(woosh.STRING, "'bar('", 859, 10, 859, 16),
woosh.Token(woosh.OP, ',', 859, 16, 859, 17),
woosh.Token(woosh.NAME, 'a', 859, 18, 859, 19),
woosh.Token(woosh.OP, ',', 859, 19, 859, 20),
woosh.Token(woosh.STRING, "')'", 859, 21, 859, 24),
woosh.Token(woosh.OP, ')', 859, 24, 859, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 25, 860, 0),
woosh.Token(woosh.NAME, 'return', 860, 4, 860, 10),
woosh.Token(woosh.NAME, 'a', 860, 11, 860, 12),
woosh.Token(woosh.OP, '/', 860, 12, 860, 13),
woosh.Token(woosh.NUMBER, '2', 860, 13, 860, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 860, 14, 861, 0),
woosh.Token(woosh.DEDENT, '', 862, 0, 862, 0),
woosh.Token(woosh.NAME, 'def', 862, 0, 862, 3),
woosh.Token(woosh.NAME, 'test', 862, 4, 862, 8),
woosh.Token(woosh.OP, '(', 862, 8, 862, 9),
woosh.Token(woosh.OP, ')', 862, 9, 862, 10),
woosh.Token(woosh.OP, ':', 862, 10, 862, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 862, 11, 863, 0),
woosh.Token(woosh.INDENT, '    ', 863, 0, 863, 4),
woosh.Token(woosh.NAME, 't', 863, 4, 863, 5),
woosh.Token(woosh.OP, '=', 863, 6, 863, 7),
woosh.Token(woosh.NAME, 'Tdb', 863, 8, 863, 11),
woosh.Token(woosh.OP, '(', 863, 11, 863, 12),
woosh.Token(woosh.OP, ')', 863, 12, 863, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 13, 864, 0),
woosh.Token(woosh.NAME, 't', 864, 4, 864, 5),
woosh.Token(woosh.OP, '.', 864, 5, 864, 6),
woosh.Token(woosh.NAME, 'run', 864, 6, 864, 9),
woosh.Token(woosh.OP, '(', 864, 9, 864, 10),
woosh.Token(woosh.STRING, "'import bdb; bdb.foo(10)'", 864, 10, 864, 35),
woosh.Token(woosh.OP, ')', 864, 35, 864, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 36, 865, 0),
woosh.Token(woosh.DEDENT, '', 865, 0, 865, 0),
woosh.Token(woosh.EOF, '', 865, 0, 865, 0),
]
