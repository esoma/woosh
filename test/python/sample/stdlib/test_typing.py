
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/typing.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""\r\nThe typing module: Support for gradual typing as defined by PEP 484.\r\n\r\nAt large scale, the structure of the module is following:\r\n* Imports and exports, all public names should be explicitly added to __all__.\r\n* Internal helper functions: these should never be used in code outside this module.\r\n* _SpecialForm and its instances (special forms): Any, NoReturn, ClassVar, Union, Optional\r\n* Two classes whose instances can be type arguments in addition to types: ForwardRef and TypeVar\r\n* The core of internal generics API: _GenericAlias and _VariadicGenericAlias, the latter is\r\n  currently only used by Tuple and Callable. All subscripted types like X[int], Union[int, str],\r\n  etc., are instances of either of these classes.\r\n* The public counterpart of the generics API consists of two classes: Generic and Protocol.\r\n* Public helper functions: get_type_hints, overload, cast, no_type_check,\r\n  no_type_check_decorator.\r\n* Generic aliases for collections.abc ABCs and few additional protocols.\r\n* Special types: NewType, NamedTuple, TypedDict.\r\n* Wrapper submodules for re and io related types.\r\n"""', 1, 0, 18, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 18, 3, 19, 0),
woosh.Token(woosh.NAME, 'from', 20, 0, 20, 4),
woosh.Token(woosh.NAME, 'abc', 20, 5, 20, 8),
woosh.Token(woosh.NAME, 'import', 20, 9, 20, 15),
woosh.Token(woosh.NAME, 'abstractmethod', 20, 16, 20, 30),
woosh.Token(woosh.OP, ',', 20, 30, 20, 31),
woosh.Token(woosh.NAME, 'ABCMeta', 20, 32, 20, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 20, 39, 21, 0),
woosh.Token(woosh.NAME, 'import', 21, 0, 21, 6),
woosh.Token(woosh.NAME, 'collections', 21, 7, 21, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 18, 22, 0),
woosh.Token(woosh.NAME, 'import', 22, 0, 22, 6),
woosh.Token(woosh.NAME, 'collections', 22, 7, 22, 18),
woosh.Token(woosh.OP, '.', 22, 18, 22, 19),
woosh.Token(woosh.NAME, 'abc', 22, 19, 22, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 22, 22, 23, 0),
woosh.Token(woosh.NAME, 'import', 23, 0, 23, 6),
woosh.Token(woosh.NAME, 'contextlib', 23, 7, 23, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 23, 17, 24, 0),
woosh.Token(woosh.NAME, 'import', 24, 0, 24, 6),
woosh.Token(woosh.NAME, 'functools', 24, 7, 24, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 24, 16, 25, 0),
woosh.Token(woosh.NAME, 'import', 25, 0, 25, 6),
woosh.Token(woosh.NAME, 'operator', 25, 7, 25, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 25, 15, 26, 0),
woosh.Token(woosh.NAME, 'import', 26, 0, 26, 6),
woosh.Token(woosh.NAME, 're', 26, 7, 26, 9),
woosh.Token(woosh.NAME, 'as', 26, 10, 26, 12),
woosh.Token(woosh.NAME, 'stdlib_re', 26, 13, 26, 22),
woosh.Token(woosh.COMMENT, '# Avoid confusion with the re we export.', 26, 24, 26, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 26, 64, 27, 0),
woosh.Token(woosh.NAME, 'import', 27, 0, 27, 6),
woosh.Token(woosh.NAME, 'sys', 27, 7, 27, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 27, 10, 28, 0),
woosh.Token(woosh.NAME, 'import', 28, 0, 28, 6),
woosh.Token(woosh.NAME, 'types', 28, 7, 28, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 28, 12, 29, 0),
woosh.Token(woosh.NAME, 'from', 29, 0, 29, 4),
woosh.Token(woosh.NAME, 'types', 29, 5, 29, 10),
woosh.Token(woosh.NAME, 'import', 29, 11, 29, 17),
woosh.Token(woosh.NAME, 'WrapperDescriptorType', 29, 18, 29, 39),
woosh.Token(woosh.OP, ',', 29, 39, 29, 40),
woosh.Token(woosh.NAME, 'MethodWrapperType', 29, 41, 29, 58),
woosh.Token(woosh.OP, ',', 29, 58, 29, 59),
woosh.Token(woosh.NAME, 'MethodDescriptorType', 29, 60, 29, 80),
woosh.Token(woosh.OP, ',', 29, 80, 29, 81),
woosh.Token(woosh.NAME, 'GenericAlias', 29, 82, 29, 94),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 94, 30, 0),
woosh.Token(woosh.COMMENT, '# Please keep __all__ alphabetized within each category.', 31, 0, 31, 56),
woosh.Token(woosh.NAME, '__all__', 32, 0, 32, 7),
woosh.Token(woosh.OP, '=', 32, 8, 32, 9),
woosh.Token(woosh.OP, '[', 32, 10, 32, 11),
woosh.Token(woosh.COMMENT, '# Super-special typing primitives.', 33, 4, 33, 38),
woosh.Token(woosh.STRING, "'Annotated'", 34, 4, 34, 15),
woosh.Token(woosh.OP, ',', 34, 15, 34, 16),
woosh.Token(woosh.STRING, "'Any'", 35, 4, 35, 9),
woosh.Token(woosh.OP, ',', 35, 9, 35, 10),
woosh.Token(woosh.STRING, "'Callable'", 36, 4, 36, 14),
woosh.Token(woosh.OP, ',', 36, 14, 36, 15),
woosh.Token(woosh.STRING, "'ClassVar'", 37, 4, 37, 14),
woosh.Token(woosh.OP, ',', 37, 14, 37, 15),
woosh.Token(woosh.STRING, "'Final'", 38, 4, 38, 11),
woosh.Token(woosh.OP, ',', 38, 11, 38, 12),
woosh.Token(woosh.STRING, "'ForwardRef'", 39, 4, 39, 16),
woosh.Token(woosh.OP, ',', 39, 16, 39, 17),
woosh.Token(woosh.STRING, "'Generic'", 40, 4, 40, 13),
woosh.Token(woosh.OP, ',', 40, 13, 40, 14),
woosh.Token(woosh.STRING, "'Literal'", 41, 4, 41, 13),
woosh.Token(woosh.OP, ',', 41, 13, 41, 14),
woosh.Token(woosh.STRING, "'Optional'", 42, 4, 42, 14),
woosh.Token(woosh.OP, ',', 42, 14, 42, 15),
woosh.Token(woosh.STRING, "'Protocol'", 43, 4, 43, 14),
woosh.Token(woosh.OP, ',', 43, 14, 43, 15),
woosh.Token(woosh.STRING, "'Tuple'", 44, 4, 44, 11),
woosh.Token(woosh.OP, ',', 44, 11, 44, 12),
woosh.Token(woosh.STRING, "'Type'", 45, 4, 45, 10),
woosh.Token(woosh.OP, ',', 45, 10, 45, 11),
woosh.Token(woosh.STRING, "'TypeVar'", 46, 4, 46, 13),
woosh.Token(woosh.OP, ',', 46, 13, 46, 14),
woosh.Token(woosh.STRING, "'Union'", 47, 4, 47, 11),
woosh.Token(woosh.OP, ',', 47, 11, 47, 12),
woosh.Token(woosh.COMMENT, '# ABCs (from collections.abc).', 49, 4, 49, 34),
woosh.Token(woosh.STRING, "'AbstractSet'", 50, 4, 50, 17),
woosh.Token(woosh.OP, ',', 50, 17, 50, 18),
woosh.Token(woosh.COMMENT, '# collections.abc.Set.', 50, 20, 50, 42),
woosh.Token(woosh.STRING, "'ByteString'", 51, 4, 51, 16),
woosh.Token(woosh.OP, ',', 51, 16, 51, 17),
woosh.Token(woosh.STRING, "'Container'", 52, 4, 52, 15),
woosh.Token(woosh.OP, ',', 52, 15, 52, 16),
woosh.Token(woosh.STRING, "'ContextManager'", 53, 4, 53, 20),
woosh.Token(woosh.OP, ',', 53, 20, 53, 21),
woosh.Token(woosh.STRING, "'Hashable'", 54, 4, 54, 14),
woosh.Token(woosh.OP, ',', 54, 14, 54, 15),
woosh.Token(woosh.STRING, "'ItemsView'", 55, 4, 55, 15),
woosh.Token(woosh.OP, ',', 55, 15, 55, 16),
woosh.Token(woosh.STRING, "'Iterable'", 56, 4, 56, 14),
woosh.Token(woosh.OP, ',', 56, 14, 56, 15),
woosh.Token(woosh.STRING, "'Iterator'", 57, 4, 57, 14),
woosh.Token(woosh.OP, ',', 57, 14, 57, 15),
woosh.Token(woosh.STRING, "'KeysView'", 58, 4, 58, 14),
woosh.Token(woosh.OP, ',', 58, 14, 58, 15),
woosh.Token(woosh.STRING, "'Mapping'", 59, 4, 59, 13),
woosh.Token(woosh.OP, ',', 59, 13, 59, 14),
woosh.Token(woosh.STRING, "'MappingView'", 60, 4, 60, 17),
woosh.Token(woosh.OP, ',', 60, 17, 60, 18),
woosh.Token(woosh.STRING, "'MutableMapping'", 61, 4, 61, 20),
woosh.Token(woosh.OP, ',', 61, 20, 61, 21),
woosh.Token(woosh.STRING, "'MutableSequence'", 62, 4, 62, 21),
woosh.Token(woosh.OP, ',', 62, 21, 62, 22),
woosh.Token(woosh.STRING, "'MutableSet'", 63, 4, 63, 16),
woosh.Token(woosh.OP, ',', 63, 16, 63, 17),
woosh.Token(woosh.STRING, "'Sequence'", 64, 4, 64, 14),
woosh.Token(woosh.OP, ',', 64, 14, 64, 15),
woosh.Token(woosh.STRING, "'Sized'", 65, 4, 65, 11),
woosh.Token(woosh.OP, ',', 65, 11, 65, 12),
woosh.Token(woosh.STRING, "'ValuesView'", 66, 4, 66, 16),
woosh.Token(woosh.OP, ',', 66, 16, 66, 17),
woosh.Token(woosh.STRING, "'Awaitable'", 67, 4, 67, 15),
woosh.Token(woosh.OP, ',', 67, 15, 67, 16),
woosh.Token(woosh.STRING, "'AsyncIterator'", 68, 4, 68, 19),
woosh.Token(woosh.OP, ',', 68, 19, 68, 20),
woosh.Token(woosh.STRING, "'AsyncIterable'", 69, 4, 69, 19),
woosh.Token(woosh.OP, ',', 69, 19, 69, 20),
woosh.Token(woosh.STRING, "'Coroutine'", 70, 4, 70, 15),
woosh.Token(woosh.OP, ',', 70, 15, 70, 16),
woosh.Token(woosh.STRING, "'Collection'", 71, 4, 71, 16),
woosh.Token(woosh.OP, ',', 71, 16, 71, 17),
woosh.Token(woosh.STRING, "'AsyncGenerator'", 72, 4, 72, 20),
woosh.Token(woosh.OP, ',', 72, 20, 72, 21),
woosh.Token(woosh.STRING, "'AsyncContextManager'", 73, 4, 73, 25),
woosh.Token(woosh.OP, ',', 73, 25, 73, 26),
woosh.Token(woosh.COMMENT, '# Structural checks, a.k.a. protocols.', 75, 4, 75, 42),
woosh.Token(woosh.STRING, "'Reversible'", 76, 4, 76, 16),
woosh.Token(woosh.OP, ',', 76, 16, 76, 17),
woosh.Token(woosh.STRING, "'SupportsAbs'", 77, 4, 77, 17),
woosh.Token(woosh.OP, ',', 77, 17, 77, 18),
woosh.Token(woosh.STRING, "'SupportsBytes'", 78, 4, 78, 19),
woosh.Token(woosh.OP, ',', 78, 19, 78, 20),
woosh.Token(woosh.STRING, "'SupportsComplex'", 79, 4, 79, 21),
woosh.Token(woosh.OP, ',', 79, 21, 79, 22),
woosh.Token(woosh.STRING, "'SupportsFloat'", 80, 4, 80, 19),
woosh.Token(woosh.OP, ',', 80, 19, 80, 20),
woosh.Token(woosh.STRING, "'SupportsIndex'", 81, 4, 81, 19),
woosh.Token(woosh.OP, ',', 81, 19, 81, 20),
woosh.Token(woosh.STRING, "'SupportsInt'", 82, 4, 82, 17),
woosh.Token(woosh.OP, ',', 82, 17, 82, 18),
woosh.Token(woosh.STRING, "'SupportsRound'", 83, 4, 83, 19),
woosh.Token(woosh.OP, ',', 83, 19, 83, 20),
woosh.Token(woosh.COMMENT, '# Concrete collection types.', 85, 4, 85, 32),
woosh.Token(woosh.STRING, "'ChainMap'", 86, 4, 86, 14),
woosh.Token(woosh.OP, ',', 86, 14, 86, 15),
woosh.Token(woosh.STRING, "'Counter'", 87, 4, 87, 13),
woosh.Token(woosh.OP, ',', 87, 13, 87, 14),
woosh.Token(woosh.STRING, "'Deque'", 88, 4, 88, 11),
woosh.Token(woosh.OP, ',', 88, 11, 88, 12),
woosh.Token(woosh.STRING, "'Dict'", 89, 4, 89, 10),
woosh.Token(woosh.OP, ',', 89, 10, 89, 11),
woosh.Token(woosh.STRING, "'DefaultDict'", 90, 4, 90, 17),
woosh.Token(woosh.OP, ',', 90, 17, 90, 18),
woosh.Token(woosh.STRING, "'List'", 91, 4, 91, 10),
woosh.Token(woosh.OP, ',', 91, 10, 91, 11),
woosh.Token(woosh.STRING, "'OrderedDict'", 92, 4, 92, 17),
woosh.Token(woosh.OP, ',', 92, 17, 92, 18),
woosh.Token(woosh.STRING, "'Set'", 93, 4, 93, 9),
woosh.Token(woosh.OP, ',', 93, 9, 93, 10),
woosh.Token(woosh.STRING, "'FrozenSet'", 94, 4, 94, 15),
woosh.Token(woosh.OP, ',', 94, 15, 94, 16),
woosh.Token(woosh.STRING, "'NamedTuple'", 95, 4, 95, 16),
woosh.Token(woosh.OP, ',', 95, 16, 95, 17),
woosh.Token(woosh.COMMENT, '# Not really a type.', 95, 19, 95, 39),
woosh.Token(woosh.STRING, "'TypedDict'", 96, 4, 96, 15),
woosh.Token(woosh.OP, ',', 96, 15, 96, 16),
woosh.Token(woosh.COMMENT, '# Not really a type.', 96, 18, 96, 38),
woosh.Token(woosh.STRING, "'Generator'", 97, 4, 97, 15),
woosh.Token(woosh.OP, ',', 97, 15, 97, 16),
woosh.Token(woosh.COMMENT, '# One-off things.', 99, 4, 99, 21),
woosh.Token(woosh.STRING, "'AnyStr'", 100, 4, 100, 12),
woosh.Token(woosh.OP, ',', 100, 12, 100, 13),
woosh.Token(woosh.STRING, "'cast'", 101, 4, 101, 10),
woosh.Token(woosh.OP, ',', 101, 10, 101, 11),
woosh.Token(woosh.STRING, "'final'", 102, 4, 102, 11),
woosh.Token(woosh.OP, ',', 102, 11, 102, 12),
woosh.Token(woosh.STRING, "'get_args'", 103, 4, 103, 14),
woosh.Token(woosh.OP, ',', 103, 14, 103, 15),
woosh.Token(woosh.STRING, "'get_origin'", 104, 4, 104, 16),
woosh.Token(woosh.OP, ',', 104, 16, 104, 17),
woosh.Token(woosh.STRING, "'get_type_hints'", 105, 4, 105, 20),
woosh.Token(woosh.OP, ',', 105, 20, 105, 21),
woosh.Token(woosh.STRING, "'is_typeddict'", 106, 4, 106, 18),
woosh.Token(woosh.OP, ',', 106, 18, 106, 19),
woosh.Token(woosh.STRING, "'NewType'", 107, 4, 107, 13),
woosh.Token(woosh.OP, ',', 107, 13, 107, 14),
woosh.Token(woosh.STRING, "'no_type_check'", 108, 4, 108, 19),
woosh.Token(woosh.OP, ',', 108, 19, 108, 20),
woosh.Token(woosh.STRING, "'no_type_check_decorator'", 109, 4, 109, 29),
woosh.Token(woosh.OP, ',', 109, 29, 109, 30),
woosh.Token(woosh.STRING, "'NoReturn'", 110, 4, 110, 14),
woosh.Token(woosh.OP, ',', 110, 14, 110, 15),
woosh.Token(woosh.STRING, "'overload'", 111, 4, 111, 14),
woosh.Token(woosh.OP, ',', 111, 14, 111, 15),
woosh.Token(woosh.STRING, "'runtime_checkable'", 112, 4, 112, 23),
woosh.Token(woosh.OP, ',', 112, 23, 112, 24),
woosh.Token(woosh.STRING, "'Text'", 113, 4, 113, 10),
woosh.Token(woosh.OP, ',', 113, 10, 113, 11),
woosh.Token(woosh.STRING, "'TYPE_CHECKING'", 114, 4, 114, 19),
woosh.Token(woosh.OP, ',', 114, 19, 114, 20),
woosh.Token(woosh.OP, ']', 115, 0, 115, 1),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 1, 116, 0),
woosh.Token(woosh.COMMENT, "# The pseudo-submodules 're' and 'io' are part of the public", 117, 0, 117, 60),
woosh.Token(woosh.COMMENT, '# namespace, but excluded from __all__ because they might stomp on', 118, 0, 118, 66),
woosh.Token(woosh.COMMENT, '# legitimate imports of those modules.', 119, 0, 119, 38),
woosh.Token(woosh.NAME, 'def', 121, 0, 121, 3),
woosh.Token(woosh.NAME, '_type_check', 121, 4, 121, 15),
woosh.Token(woosh.OP, '(', 121, 15, 121, 16),
woosh.Token(woosh.NAME, 'arg', 121, 16, 121, 19),
woosh.Token(woosh.OP, ',', 121, 19, 121, 20),
woosh.Token(woosh.NAME, 'msg', 121, 21, 121, 24),
woosh.Token(woosh.OP, ',', 121, 24, 121, 25),
woosh.Token(woosh.NAME, 'is_argument', 121, 26, 121, 37),
woosh.Token(woosh.OP, '=', 121, 37, 121, 38),
woosh.Token(woosh.NAME, 'True', 121, 38, 121, 42),
woosh.Token(woosh.OP, ')', 121, 42, 121, 43),
woosh.Token(woosh.OP, ':', 121, 43, 121, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 44, 122, 0),
woosh.Token(woosh.INDENT, '    ', 122, 0, 122, 4),
woosh.Token(woosh.STRING, '"""Check that the argument is a type, and return it (internal helper).\r\n\r\n    As a special case, accept None and return type(None) instead. Also wrap strings\r\n    into ForwardRef instances. Consider several corner cases, for example plain\r\n    special forms like Union are not valid, while Union[int, str] is OK, etc.\r\n    The msg argument is a human-readable error message, e.g::\r\n\r\n        "Union[arg, ...]: arg should be a type."\r\n\r\n    We append the repr() of the actual value (truncated to 100 chars).\r\n    """', 122, 4, 132, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 7, 133, 0),
woosh.Token(woosh.NAME, 'invalid_generic_forms', 133, 4, 133, 25),
woosh.Token(woosh.OP, '=', 133, 26, 133, 27),
woosh.Token(woosh.OP, '(', 133, 28, 133, 29),
woosh.Token(woosh.NAME, 'Generic', 133, 29, 133, 36),
woosh.Token(woosh.OP, ',', 133, 36, 133, 37),
woosh.Token(woosh.NAME, 'Protocol', 133, 38, 133, 46),
woosh.Token(woosh.OP, ')', 133, 46, 133, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 47, 134, 0),
woosh.Token(woosh.NAME, 'if', 134, 4, 134, 6),
woosh.Token(woosh.NAME, 'is_argument', 134, 7, 134, 18),
woosh.Token(woosh.OP, ':', 134, 18, 134, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 19, 135, 0),
woosh.Token(woosh.INDENT, '        ', 135, 0, 135, 8),
woosh.Token(woosh.NAME, 'invalid_generic_forms', 135, 8, 135, 29),
woosh.Token(woosh.OP, '=', 135, 30, 135, 31),
woosh.Token(woosh.NAME, 'invalid_generic_forms', 135, 32, 135, 53),
woosh.Token(woosh.OP, '+', 135, 54, 135, 55),
woosh.Token(woosh.OP, '(', 135, 56, 135, 57),
woosh.Token(woosh.NAME, 'ClassVar', 135, 57, 135, 65),
woosh.Token(woosh.OP, ',', 135, 65, 135, 66),
woosh.Token(woosh.NAME, 'Final', 135, 67, 135, 72),
woosh.Token(woosh.OP, ')', 135, 72, 135, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 73, 136, 0),
woosh.Token(woosh.DEDENT, '    ', 137, 0, 137, 4),
woosh.Token(woosh.NAME, 'if', 137, 4, 137, 6),
woosh.Token(woosh.NAME, 'arg', 137, 7, 137, 10),
woosh.Token(woosh.NAME, 'is', 137, 11, 137, 13),
woosh.Token(woosh.NAME, 'None', 137, 14, 137, 18),
woosh.Token(woosh.OP, ':', 137, 18, 137, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 19, 138, 0),
woosh.Token(woosh.INDENT, '        ', 138, 0, 138, 8),
woosh.Token(woosh.NAME, 'return', 138, 8, 138, 14),
woosh.Token(woosh.NAME, 'type', 138, 15, 138, 19),
woosh.Token(woosh.OP, '(', 138, 19, 138, 20),
woosh.Token(woosh.NAME, 'None', 138, 20, 138, 24),
woosh.Token(woosh.OP, ')', 138, 24, 138, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 25, 139, 0),
woosh.Token(woosh.DEDENT, '    ', 139, 0, 139, 4),
woosh.Token(woosh.NAME, 'if', 139, 4, 139, 6),
woosh.Token(woosh.NAME, 'isinstance', 139, 7, 139, 17),
woosh.Token(woosh.OP, '(', 139, 17, 139, 18),
woosh.Token(woosh.NAME, 'arg', 139, 18, 139, 21),
woosh.Token(woosh.OP, ',', 139, 21, 139, 22),
woosh.Token(woosh.NAME, 'str', 139, 23, 139, 26),
woosh.Token(woosh.OP, ')', 139, 26, 139, 27),
woosh.Token(woosh.OP, ':', 139, 27, 139, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 28, 140, 0),
woosh.Token(woosh.INDENT, '        ', 140, 0, 140, 8),
woosh.Token(woosh.NAME, 'return', 140, 8, 140, 14),
woosh.Token(woosh.NAME, 'ForwardRef', 140, 15, 140, 25),
woosh.Token(woosh.OP, '(', 140, 25, 140, 26),
woosh.Token(woosh.NAME, 'arg', 140, 26, 140, 29),
woosh.Token(woosh.OP, ')', 140, 29, 140, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 30, 141, 0),
woosh.Token(woosh.DEDENT, '    ', 141, 0, 141, 4),
woosh.Token(woosh.NAME, 'if', 141, 4, 141, 6),
woosh.Token(woosh.OP, '(', 141, 7, 141, 8),
woosh.Token(woosh.NAME, 'isinstance', 141, 8, 141, 18),
woosh.Token(woosh.OP, '(', 141, 18, 141, 19),
woosh.Token(woosh.NAME, 'arg', 141, 19, 141, 22),
woosh.Token(woosh.OP, ',', 141, 22, 141, 23),
woosh.Token(woosh.NAME, '_GenericAlias', 141, 24, 141, 37),
woosh.Token(woosh.OP, ')', 141, 37, 141, 38),
woosh.Token(woosh.NAME, 'and', 141, 39, 141, 42),
woosh.Token(woosh.NAME, 'arg', 142, 12, 142, 15),
woosh.Token(woosh.OP, '.', 142, 15, 142, 16),
woosh.Token(woosh.NAME, '__origin__', 142, 16, 142, 26),
woosh.Token(woosh.NAME, 'in', 142, 27, 142, 29),
woosh.Token(woosh.NAME, 'invalid_generic_forms', 142, 30, 142, 51),
woosh.Token(woosh.OP, ')', 142, 51, 142, 52),
woosh.Token(woosh.OP, ':', 142, 52, 142, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 53, 143, 0),
woosh.Token(woosh.INDENT, '        ', 143, 0, 143, 8),
woosh.Token(woosh.NAME, 'raise', 143, 8, 143, 13),
woosh.Token(woosh.NAME, 'TypeError', 143, 14, 143, 23),
woosh.Token(woosh.OP, '(', 143, 23, 143, 24),
woosh.Token(woosh.STRING, 'f"{arg} is not valid as type argument"', 143, 24, 143, 62),
woosh.Token(woosh.OP, ')', 143, 62, 143, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 63, 144, 0),
woosh.Token(woosh.DEDENT, '    ', 144, 0, 144, 4),
woosh.Token(woosh.NAME, 'if', 144, 4, 144, 6),
woosh.Token(woosh.NAME, 'arg', 144, 7, 144, 10),
woosh.Token(woosh.NAME, 'in', 144, 11, 144, 13),
woosh.Token(woosh.OP, '(', 144, 14, 144, 15),
woosh.Token(woosh.NAME, 'Any', 144, 15, 144, 18),
woosh.Token(woosh.OP, ',', 144, 18, 144, 19),
woosh.Token(woosh.NAME, 'NoReturn', 144, 20, 144, 28),
woosh.Token(woosh.OP, ')', 144, 28, 144, 29),
woosh.Token(woosh.OP, ':', 144, 29, 144, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 30, 145, 0),
woosh.Token(woosh.INDENT, '        ', 145, 0, 145, 8),
woosh.Token(woosh.NAME, 'return', 145, 8, 145, 14),
woosh.Token(woosh.NAME, 'arg', 145, 15, 145, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 18, 146, 0),
woosh.Token(woosh.DEDENT, '    ', 146, 0, 146, 4),
woosh.Token(woosh.NAME, 'if', 146, 4, 146, 6),
woosh.Token(woosh.NAME, 'isinstance', 146, 7, 146, 17),
woosh.Token(woosh.OP, '(', 146, 17, 146, 18),
woosh.Token(woosh.NAME, 'arg', 146, 18, 146, 21),
woosh.Token(woosh.OP, ',', 146, 21, 146, 22),
woosh.Token(woosh.NAME, '_SpecialForm', 146, 23, 146, 35),
woosh.Token(woosh.OP, ')', 146, 35, 146, 36),
woosh.Token(woosh.NAME, 'or', 146, 37, 146, 39),
woosh.Token(woosh.NAME, 'arg', 146, 40, 146, 43),
woosh.Token(woosh.NAME, 'in', 146, 44, 146, 46),
woosh.Token(woosh.OP, '(', 146, 47, 146, 48),
woosh.Token(woosh.NAME, 'Generic', 146, 48, 146, 55),
woosh.Token(woosh.OP, ',', 146, 55, 146, 56),
woosh.Token(woosh.NAME, 'Protocol', 146, 57, 146, 65),
woosh.Token(woosh.OP, ')', 146, 65, 146, 66),
woosh.Token(woosh.OP, ':', 146, 66, 146, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 67, 147, 0),
woosh.Token(woosh.INDENT, '        ', 147, 0, 147, 8),
woosh.Token(woosh.NAME, 'raise', 147, 8, 147, 13),
woosh.Token(woosh.NAME, 'TypeError', 147, 14, 147, 23),
woosh.Token(woosh.OP, '(', 147, 23, 147, 24),
woosh.Token(woosh.STRING, 'f"Plain {arg} is not valid as type argument"', 147, 24, 147, 68),
woosh.Token(woosh.OP, ')', 147, 68, 147, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 69, 148, 0),
woosh.Token(woosh.DEDENT, '    ', 148, 0, 148, 4),
woosh.Token(woosh.NAME, 'if', 148, 4, 148, 6),
woosh.Token(woosh.NAME, 'isinstance', 148, 7, 148, 17),
woosh.Token(woosh.OP, '(', 148, 17, 148, 18),
woosh.Token(woosh.NAME, 'arg', 148, 18, 148, 21),
woosh.Token(woosh.OP, ',', 148, 21, 148, 22),
woosh.Token(woosh.OP, '(', 148, 23, 148, 24),
woosh.Token(woosh.NAME, 'type', 148, 24, 148, 28),
woosh.Token(woosh.OP, ',', 148, 28, 148, 29),
woosh.Token(woosh.NAME, 'TypeVar', 148, 30, 148, 37),
woosh.Token(woosh.OP, ',', 148, 37, 148, 38),
woosh.Token(woosh.NAME, 'ForwardRef', 148, 39, 148, 49),
woosh.Token(woosh.OP, ',', 148, 49, 148, 50),
woosh.Token(woosh.NAME, 'types', 148, 51, 148, 56),
woosh.Token(woosh.OP, '.', 148, 56, 148, 57),
woosh.Token(woosh.NAME, 'Union', 148, 57, 148, 62),
woosh.Token(woosh.OP, ')', 148, 62, 148, 63),
woosh.Token(woosh.OP, ')', 148, 63, 148, 64),
woosh.Token(woosh.OP, ':', 148, 64, 148, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 65, 149, 0),
woosh.Token(woosh.INDENT, '        ', 149, 0, 149, 8),
woosh.Token(woosh.NAME, 'return', 149, 8, 149, 14),
woosh.Token(woosh.NAME, 'arg', 149, 15, 149, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 18, 150, 0),
woosh.Token(woosh.DEDENT, '    ', 150, 0, 150, 4),
woosh.Token(woosh.NAME, 'if', 150, 4, 150, 6),
woosh.Token(woosh.NAME, 'not', 150, 7, 150, 10),
woosh.Token(woosh.NAME, 'callable', 150, 11, 150, 19),
woosh.Token(woosh.OP, '(', 150, 19, 150, 20),
woosh.Token(woosh.NAME, 'arg', 150, 20, 150, 23),
woosh.Token(woosh.OP, ')', 150, 23, 150, 24),
woosh.Token(woosh.OP, ':', 150, 24, 150, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 25, 151, 0),
woosh.Token(woosh.INDENT, '        ', 151, 0, 151, 8),
woosh.Token(woosh.NAME, 'raise', 151, 8, 151, 13),
woosh.Token(woosh.NAME, 'TypeError', 151, 14, 151, 23),
woosh.Token(woosh.OP, '(', 151, 23, 151, 24),
woosh.Token(woosh.STRING, 'f"{msg} Got {arg!r:.100}."', 151, 24, 151, 50),
woosh.Token(woosh.OP, ')', 151, 50, 151, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 51, 152, 0),
woosh.Token(woosh.DEDENT, '    ', 152, 0, 152, 4),
woosh.Token(woosh.NAME, 'return', 152, 4, 152, 10),
woosh.Token(woosh.NAME, 'arg', 152, 11, 152, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 14, 153, 0),
woosh.Token(woosh.DEDENT, '', 155, 0, 155, 0),
woosh.Token(woosh.NAME, 'def', 155, 0, 155, 3),
woosh.Token(woosh.NAME, '_type_repr', 155, 4, 155, 14),
woosh.Token(woosh.OP, '(', 155, 14, 155, 15),
woosh.Token(woosh.NAME, 'obj', 155, 15, 155, 18),
woosh.Token(woosh.OP, ')', 155, 18, 155, 19),
woosh.Token(woosh.OP, ':', 155, 19, 155, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 155, 20, 156, 0),
woosh.Token(woosh.INDENT, '    ', 156, 0, 156, 4),
woosh.Token(woosh.STRING, '"""Return the repr() of an object, special-casing types (internal helper).\r\n\r\n    If obj is a type, we return a shorter version than the default\r\n    type.__repr__, based on the module and qualified name, which is\r\n    typically enough to uniquely identify a type.  For everything\r\n    else, we fall back on repr(obj).\r\n    """', 156, 4, 162, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 7, 163, 0),
woosh.Token(woosh.NAME, 'if', 163, 4, 163, 6),
woosh.Token(woosh.NAME, 'isinstance', 163, 7, 163, 17),
woosh.Token(woosh.OP, '(', 163, 17, 163, 18),
woosh.Token(woosh.NAME, 'obj', 163, 18, 163, 21),
woosh.Token(woosh.OP, ',', 163, 21, 163, 22),
woosh.Token(woosh.NAME, 'type', 163, 23, 163, 27),
woosh.Token(woosh.OP, ')', 163, 27, 163, 28),
woosh.Token(woosh.OP, ':', 163, 28, 163, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 29, 164, 0),
woosh.Token(woosh.INDENT, '        ', 164, 0, 164, 8),
woosh.Token(woosh.NAME, 'if', 164, 8, 164, 10),
woosh.Token(woosh.NAME, 'obj', 164, 11, 164, 14),
woosh.Token(woosh.OP, '.', 164, 14, 164, 15),
woosh.Token(woosh.NAME, '__module__', 164, 15, 164, 25),
woosh.Token(woosh.OP, '==', 164, 26, 164, 28),
woosh.Token(woosh.STRING, "'builtins'", 164, 29, 164, 39),
woosh.Token(woosh.OP, ':', 164, 39, 164, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 40, 165, 0),
woosh.Token(woosh.INDENT, '            ', 165, 0, 165, 12),
woosh.Token(woosh.NAME, 'return', 165, 12, 165, 18),
woosh.Token(woosh.NAME, 'obj', 165, 19, 165, 22),
woosh.Token(woosh.OP, '.', 165, 22, 165, 23),
woosh.Token(woosh.NAME, '__qualname__', 165, 23, 165, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 35, 166, 0),
woosh.Token(woosh.DEDENT, '        ', 166, 0, 166, 8),
woosh.Token(woosh.NAME, 'return', 166, 8, 166, 14),
woosh.Token(woosh.STRING, "f'{obj.__module__}.{obj.__qualname__}'", 166, 15, 166, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 53, 167, 0),
woosh.Token(woosh.DEDENT, '    ', 167, 0, 167, 4),
woosh.Token(woosh.NAME, 'if', 167, 4, 167, 6),
woosh.Token(woosh.NAME, 'obj', 167, 7, 167, 10),
woosh.Token(woosh.NAME, 'is', 167, 11, 167, 13),
woosh.Token(woosh.OP, '...', 167, 14, 167, 17),
woosh.Token(woosh.OP, ':', 167, 17, 167, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 18, 168, 0),
woosh.Token(woosh.INDENT, '        ', 168, 0, 168, 8),
woosh.Token(woosh.NAME, 'return', 168, 8, 168, 14),
woosh.Token(woosh.OP, '(', 168, 14, 168, 15),
woosh.Token(woosh.STRING, "'...'", 168, 15, 168, 20),
woosh.Token(woosh.OP, ')', 168, 20, 168, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 21, 169, 0),
woosh.Token(woosh.DEDENT, '    ', 169, 0, 169, 4),
woosh.Token(woosh.NAME, 'if', 169, 4, 169, 6),
woosh.Token(woosh.NAME, 'isinstance', 169, 7, 169, 17),
woosh.Token(woosh.OP, '(', 169, 17, 169, 18),
woosh.Token(woosh.NAME, 'obj', 169, 18, 169, 21),
woosh.Token(woosh.OP, ',', 169, 21, 169, 22),
woosh.Token(woosh.NAME, 'types', 169, 23, 169, 28),
woosh.Token(woosh.OP, '.', 169, 28, 169, 29),
woosh.Token(woosh.NAME, 'FunctionType', 169, 29, 169, 41),
woosh.Token(woosh.OP, ')', 169, 41, 169, 42),
woosh.Token(woosh.OP, ':', 169, 42, 169, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 43, 170, 0),
woosh.Token(woosh.INDENT, '        ', 170, 0, 170, 8),
woosh.Token(woosh.NAME, 'return', 170, 8, 170, 14),
woosh.Token(woosh.NAME, 'obj', 170, 15, 170, 18),
woosh.Token(woosh.OP, '.', 170, 18, 170, 19),
woosh.Token(woosh.NAME, '__name__', 170, 19, 170, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 27, 171, 0),
woosh.Token(woosh.DEDENT, '    ', 171, 0, 171, 4),
woosh.Token(woosh.NAME, 'return', 171, 4, 171, 10),
woosh.Token(woosh.NAME, 'repr', 171, 11, 171, 15),
woosh.Token(woosh.OP, '(', 171, 15, 171, 16),
woosh.Token(woosh.NAME, 'obj', 171, 16, 171, 19),
woosh.Token(woosh.OP, ')', 171, 19, 171, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 20, 172, 0),
woosh.Token(woosh.DEDENT, '', 174, 0, 174, 0),
woosh.Token(woosh.NAME, 'def', 174, 0, 174, 3),
woosh.Token(woosh.NAME, '_collect_type_vars', 174, 4, 174, 22),
woosh.Token(woosh.OP, '(', 174, 22, 174, 23),
woosh.Token(woosh.NAME, 'types', 174, 23, 174, 28),
woosh.Token(woosh.OP, ')', 174, 28, 174, 29),
woosh.Token(woosh.OP, ':', 174, 29, 174, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 30, 175, 0),
woosh.Token(woosh.INDENT, '    ', 175, 0, 175, 4),
woosh.Token(woosh.STRING, '"""Collect all type variable contained in types in order of\r\n    first appearance (lexicographic order). For example::\r\n\r\n        _collect_type_vars((T, List[S, T])) == (T, S)\r\n    """', 175, 4, 179, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 7, 180, 0),
woosh.Token(woosh.NAME, 'tvars', 180, 4, 180, 9),
woosh.Token(woosh.OP, '=', 180, 10, 180, 11),
woosh.Token(woosh.OP, '[', 180, 12, 180, 13),
woosh.Token(woosh.OP, ']', 180, 13, 180, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 14, 181, 0),
woosh.Token(woosh.NAME, 'for', 181, 4, 181, 7),
woosh.Token(woosh.NAME, 't', 181, 8, 181, 9),
woosh.Token(woosh.NAME, 'in', 181, 10, 181, 12),
woosh.Token(woosh.NAME, 'types', 181, 13, 181, 18),
woosh.Token(woosh.OP, ':', 181, 18, 181, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 19, 182, 0),
woosh.Token(woosh.INDENT, '        ', 182, 0, 182, 8),
woosh.Token(woosh.NAME, 'if', 182, 8, 182, 10),
woosh.Token(woosh.NAME, 'isinstance', 182, 11, 182, 21),
woosh.Token(woosh.OP, '(', 182, 21, 182, 22),
woosh.Token(woosh.NAME, 't', 182, 22, 182, 23),
woosh.Token(woosh.OP, ',', 182, 23, 182, 24),
woosh.Token(woosh.NAME, 'TypeVar', 182, 25, 182, 32),
woosh.Token(woosh.OP, ')', 182, 32, 182, 33),
woosh.Token(woosh.NAME, 'and', 182, 34, 182, 37),
woosh.Token(woosh.NAME, 't', 182, 38, 182, 39),
woosh.Token(woosh.NAME, 'not', 182, 40, 182, 43),
woosh.Token(woosh.NAME, 'in', 182, 44, 182, 46),
woosh.Token(woosh.NAME, 'tvars', 182, 47, 182, 52),
woosh.Token(woosh.OP, ':', 182, 52, 182, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 53, 183, 0),
woosh.Token(woosh.INDENT, '            ', 183, 0, 183, 12),
woosh.Token(woosh.NAME, 'tvars', 183, 12, 183, 17),
woosh.Token(woosh.OP, '.', 183, 17, 183, 18),
woosh.Token(woosh.NAME, 'append', 183, 18, 183, 24),
woosh.Token(woosh.OP, '(', 183, 24, 183, 25),
woosh.Token(woosh.NAME, 't', 183, 25, 183, 26),
woosh.Token(woosh.OP, ')', 183, 26, 183, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 27, 184, 0),
woosh.Token(woosh.DEDENT, '        ', 184, 0, 184, 8),
woosh.Token(woosh.NAME, 'if', 184, 8, 184, 10),
woosh.Token(woosh.NAME, 'isinstance', 184, 11, 184, 21),
woosh.Token(woosh.OP, '(', 184, 21, 184, 22),
woosh.Token(woosh.NAME, 't', 184, 22, 184, 23),
woosh.Token(woosh.OP, ',', 184, 23, 184, 24),
woosh.Token(woosh.OP, '(', 184, 25, 184, 26),
woosh.Token(woosh.NAME, '_GenericAlias', 184, 26, 184, 39),
woosh.Token(woosh.OP, ',', 184, 39, 184, 40),
woosh.Token(woosh.NAME, 'GenericAlias', 184, 41, 184, 53),
woosh.Token(woosh.OP, ')', 184, 53, 184, 54),
woosh.Token(woosh.OP, ')', 184, 54, 184, 55),
woosh.Token(woosh.OP, ':', 184, 55, 184, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 56, 185, 0),
woosh.Token(woosh.INDENT, '            ', 185, 0, 185, 12),
woosh.Token(woosh.NAME, 'tvars', 185, 12, 185, 17),
woosh.Token(woosh.OP, '.', 185, 17, 185, 18),
woosh.Token(woosh.NAME, 'extend', 185, 18, 185, 24),
woosh.Token(woosh.OP, '(', 185, 24, 185, 25),
woosh.Token(woosh.OP, '[', 185, 25, 185, 26),
woosh.Token(woosh.NAME, 't', 185, 26, 185, 27),
woosh.Token(woosh.NAME, 'for', 185, 28, 185, 31),
woosh.Token(woosh.NAME, 't', 185, 32, 185, 33),
woosh.Token(woosh.NAME, 'in', 185, 34, 185, 36),
woosh.Token(woosh.NAME, 't', 185, 37, 185, 38),
woosh.Token(woosh.OP, '.', 185, 38, 185, 39),
woosh.Token(woosh.NAME, '__parameters__', 185, 39, 185, 53),
woosh.Token(woosh.NAME, 'if', 185, 54, 185, 56),
woosh.Token(woosh.NAME, 't', 185, 57, 185, 58),
woosh.Token(woosh.NAME, 'not', 185, 59, 185, 62),
woosh.Token(woosh.NAME, 'in', 185, 63, 185, 65),
woosh.Token(woosh.NAME, 'tvars', 185, 66, 185, 71),
woosh.Token(woosh.OP, ']', 185, 71, 185, 72),
woosh.Token(woosh.OP, ')', 185, 72, 185, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 73, 186, 0),
woosh.Token(woosh.DEDENT, '    ', 186, 0, 186, 4),
woosh.Token(woosh.DEDENT, '', 186, 4, 186, 4),
woosh.Token(woosh.NAME, 'return', 186, 4, 186, 10),
woosh.Token(woosh.NAME, 'tuple', 186, 11, 186, 16),
woosh.Token(woosh.OP, '(', 186, 16, 186, 17),
woosh.Token(woosh.NAME, 'tvars', 186, 17, 186, 22),
woosh.Token(woosh.OP, ')', 186, 22, 186, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 23, 187, 0),
woosh.Token(woosh.DEDENT, '', 189, 0, 189, 0),
woosh.Token(woosh.NAME, 'def', 189, 0, 189, 3),
woosh.Token(woosh.NAME, '_check_generic', 189, 4, 189, 18),
woosh.Token(woosh.OP, '(', 189, 18, 189, 19),
woosh.Token(woosh.NAME, 'cls', 189, 19, 189, 22),
woosh.Token(woosh.OP, ',', 189, 22, 189, 23),
woosh.Token(woosh.NAME, 'parameters', 189, 24, 189, 34),
woosh.Token(woosh.OP, ',', 189, 34, 189, 35),
woosh.Token(woosh.NAME, 'elen', 189, 36, 189, 40),
woosh.Token(woosh.OP, ')', 189, 40, 189, 41),
woosh.Token(woosh.OP, ':', 189, 41, 189, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 189, 42, 190, 0),
woosh.Token(woosh.INDENT, '    ', 190, 0, 190, 4),
woosh.Token(woosh.STRING, '"""Check correct count for parameters of a generic cls (internal helper).\r\n    This gives a nice error message in case of count mismatch.\r\n    """', 190, 4, 192, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 7, 193, 0),
woosh.Token(woosh.NAME, 'if', 193, 4, 193, 6),
woosh.Token(woosh.NAME, 'not', 193, 7, 193, 10),
woosh.Token(woosh.NAME, 'elen', 193, 11, 193, 15),
woosh.Token(woosh.OP, ':', 193, 15, 193, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 16, 194, 0),
woosh.Token(woosh.INDENT, '        ', 194, 0, 194, 8),
woosh.Token(woosh.NAME, 'raise', 194, 8, 194, 13),
woosh.Token(woosh.NAME, 'TypeError', 194, 14, 194, 23),
woosh.Token(woosh.OP, '(', 194, 23, 194, 24),
woosh.Token(woosh.STRING, 'f"{cls} is not a generic class"', 194, 24, 194, 55),
woosh.Token(woosh.OP, ')', 194, 55, 194, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 56, 195, 0),
woosh.Token(woosh.DEDENT, '    ', 195, 0, 195, 4),
woosh.Token(woosh.NAME, 'alen', 195, 4, 195, 8),
woosh.Token(woosh.OP, '=', 195, 9, 195, 10),
woosh.Token(woosh.NAME, 'len', 195, 11, 195, 14),
woosh.Token(woosh.OP, '(', 195, 14, 195, 15),
woosh.Token(woosh.NAME, 'parameters', 195, 15, 195, 25),
woosh.Token(woosh.OP, ')', 195, 25, 195, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 26, 196, 0),
woosh.Token(woosh.NAME, 'if', 196, 4, 196, 6),
woosh.Token(woosh.NAME, 'alen', 196, 7, 196, 11),
woosh.Token(woosh.OP, '!=', 196, 12, 196, 14),
woosh.Token(woosh.NAME, 'elen', 196, 15, 196, 19),
woosh.Token(woosh.OP, ':', 196, 19, 196, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 20, 197, 0),
woosh.Token(woosh.INDENT, '        ', 197, 0, 197, 8),
woosh.Token(woosh.NAME, 'raise', 197, 8, 197, 13),
woosh.Token(woosh.NAME, 'TypeError', 197, 14, 197, 23),
woosh.Token(woosh.OP, '(', 197, 23, 197, 24),
woosh.Token(woosh.STRING, 'f"Too {\'many\' if alen > elen else \'few\'} parameters for {cls};"', 197, 24, 197, 87),
woosh.Token(woosh.STRING, 'f" actual {alen}, expected {elen}"', 198, 24, 198, 58),
woosh.Token(woosh.OP, ')', 198, 58, 198, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 59, 199, 0),
woosh.Token(woosh.DEDENT, '', 201, 0, 201, 0),
woosh.Token(woosh.DEDENT, '', 201, 0, 201, 0),
woosh.Token(woosh.NAME, 'def', 201, 0, 201, 3),
woosh.Token(woosh.NAME, '_remove_dups_flatten', 201, 4, 201, 24),
woosh.Token(woosh.OP, '(', 201, 24, 201, 25),
woosh.Token(woosh.NAME, 'parameters', 201, 25, 201, 35),
woosh.Token(woosh.OP, ')', 201, 35, 201, 36),
woosh.Token(woosh.OP, ':', 201, 36, 201, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 37, 202, 0),
woosh.Token(woosh.INDENT, '    ', 202, 0, 202, 4),
woosh.Token(woosh.STRING, '"""An internal helper for Union creation and substitution: flatten Unions\r\n    among parameters, then remove duplicates.\r\n    """', 202, 4, 204, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 7, 205, 0),
woosh.Token(woosh.COMMENT, '# Flatten out Union[Union[...], ...].', 205, 4, 205, 41),
woosh.Token(woosh.NAME, 'params', 206, 4, 206, 10),
woosh.Token(woosh.OP, '=', 206, 11, 206, 12),
woosh.Token(woosh.OP, '[', 206, 13, 206, 14),
woosh.Token(woosh.OP, ']', 206, 14, 206, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 15, 207, 0),
woosh.Token(woosh.NAME, 'for', 207, 4, 207, 7),
woosh.Token(woosh.NAME, 'p', 207, 8, 207, 9),
woosh.Token(woosh.NAME, 'in', 207, 10, 207, 12),
woosh.Token(woosh.NAME, 'parameters', 207, 13, 207, 23),
woosh.Token(woosh.OP, ':', 207, 23, 207, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 24, 208, 0),
woosh.Token(woosh.INDENT, '        ', 208, 0, 208, 8),
woosh.Token(woosh.NAME, 'if', 208, 8, 208, 10),
woosh.Token(woosh.NAME, 'isinstance', 208, 11, 208, 21),
woosh.Token(woosh.OP, '(', 208, 21, 208, 22),
woosh.Token(woosh.NAME, 'p', 208, 22, 208, 23),
woosh.Token(woosh.OP, ',', 208, 23, 208, 24),
woosh.Token(woosh.OP, '(', 208, 25, 208, 26),
woosh.Token(woosh.NAME, '_UnionGenericAlias', 208, 26, 208, 44),
woosh.Token(woosh.OP, ',', 208, 44, 208, 45),
woosh.Token(woosh.NAME, 'types', 208, 46, 208, 51),
woosh.Token(woosh.OP, '.', 208, 51, 208, 52),
woosh.Token(woosh.NAME, 'Union', 208, 52, 208, 57),
woosh.Token(woosh.OP, ')', 208, 57, 208, 58),
woosh.Token(woosh.OP, ')', 208, 58, 208, 59),
woosh.Token(woosh.OP, ':', 208, 59, 208, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 60, 209, 0),
woosh.Token(woosh.INDENT, '            ', 209, 0, 209, 12),
woosh.Token(woosh.NAME, 'params', 209, 12, 209, 18),
woosh.Token(woosh.OP, '.', 209, 18, 209, 19),
woosh.Token(woosh.NAME, 'extend', 209, 19, 209, 25),
woosh.Token(woosh.OP, '(', 209, 25, 209, 26),
woosh.Token(woosh.NAME, 'p', 209, 26, 209, 27),
woosh.Token(woosh.OP, '.', 209, 27, 209, 28),
woosh.Token(woosh.NAME, '__args__', 209, 28, 209, 36),
woosh.Token(woosh.OP, ')', 209, 36, 209, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 37, 210, 0),
woosh.Token(woosh.DEDENT, '        ', 210, 0, 210, 8),
woosh.Token(woosh.NAME, 'elif', 210, 8, 210, 12),
woosh.Token(woosh.NAME, 'isinstance', 210, 13, 210, 23),
woosh.Token(woosh.OP, '(', 210, 23, 210, 24),
woosh.Token(woosh.NAME, 'p', 210, 24, 210, 25),
woosh.Token(woosh.OP, ',', 210, 25, 210, 26),
woosh.Token(woosh.NAME, 'tuple', 210, 27, 210, 32),
woosh.Token(woosh.OP, ')', 210, 32, 210, 33),
woosh.Token(woosh.NAME, 'and', 210, 34, 210, 37),
woosh.Token(woosh.NAME, 'len', 210, 38, 210, 41),
woosh.Token(woosh.OP, '(', 210, 41, 210, 42),
woosh.Token(woosh.NAME, 'p', 210, 42, 210, 43),
woosh.Token(woosh.OP, ')', 210, 43, 210, 44),
woosh.Token(woosh.OP, '>', 210, 45, 210, 46),
woosh.Token(woosh.NUMBER, '0', 210, 47, 210, 48),
woosh.Token(woosh.NAME, 'and', 210, 49, 210, 52),
woosh.Token(woosh.NAME, 'p', 210, 53, 210, 54),
woosh.Token(woosh.OP, '[', 210, 54, 210, 55),
woosh.Token(woosh.NUMBER, '0', 210, 55, 210, 56),
woosh.Token(woosh.OP, ']', 210, 56, 210, 57),
woosh.Token(woosh.NAME, 'is', 210, 58, 210, 60),
woosh.Token(woosh.NAME, 'Union', 210, 61, 210, 66),
woosh.Token(woosh.OP, ':', 210, 66, 210, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 67, 211, 0),
woosh.Token(woosh.INDENT, '            ', 211, 0, 211, 12),
woosh.Token(woosh.NAME, 'params', 211, 12, 211, 18),
woosh.Token(woosh.OP, '.', 211, 18, 211, 19),
woosh.Token(woosh.NAME, 'extend', 211, 19, 211, 25),
woosh.Token(woosh.OP, '(', 211, 25, 211, 26),
woosh.Token(woosh.NAME, 'p', 211, 26, 211, 27),
woosh.Token(woosh.OP, '[', 211, 27, 211, 28),
woosh.Token(woosh.NUMBER, '1', 211, 28, 211, 29),
woosh.Token(woosh.OP, ':', 211, 29, 211, 30),
woosh.Token(woosh.OP, ']', 211, 30, 211, 31),
woosh.Token(woosh.OP, ')', 211, 31, 211, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 32, 212, 0),
woosh.Token(woosh.DEDENT, '        ', 212, 0, 212, 8),
woosh.Token(woosh.NAME, 'else', 212, 8, 212, 12),
woosh.Token(woosh.OP, ':', 212, 12, 212, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 13, 213, 0),
woosh.Token(woosh.INDENT, '            ', 213, 0, 213, 12),
woosh.Token(woosh.NAME, 'params', 213, 12, 213, 18),
woosh.Token(woosh.OP, '.', 213, 18, 213, 19),
woosh.Token(woosh.NAME, 'append', 213, 19, 213, 25),
woosh.Token(woosh.OP, '(', 213, 25, 213, 26),
woosh.Token(woosh.NAME, 'p', 213, 26, 213, 27),
woosh.Token(woosh.OP, ')', 213, 27, 213, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 28, 214, 0),
woosh.Token(woosh.COMMENT, '# Weed out strict duplicates, preserving the first of each occurrence.', 214, 4, 214, 74),
woosh.Token(woosh.DEDENT, '    ', 215, 0, 215, 4),
woosh.Token(woosh.DEDENT, '', 215, 4, 215, 4),
woosh.Token(woosh.NAME, 'all_params', 215, 4, 215, 14),
woosh.Token(woosh.OP, '=', 215, 15, 215, 16),
woosh.Token(woosh.NAME, 'set', 215, 17, 215, 20),
woosh.Token(woosh.OP, '(', 215, 20, 215, 21),
woosh.Token(woosh.NAME, 'params', 215, 21, 215, 27),
woosh.Token(woosh.OP, ')', 215, 27, 215, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 28, 216, 0),
woosh.Token(woosh.NAME, 'if', 216, 4, 216, 6),
woosh.Token(woosh.NAME, 'len', 216, 7, 216, 10),
woosh.Token(woosh.OP, '(', 216, 10, 216, 11),
woosh.Token(woosh.NAME, 'all_params', 216, 11, 216, 21),
woosh.Token(woosh.OP, ')', 216, 21, 216, 22),
woosh.Token(woosh.OP, '<', 216, 23, 216, 24),
woosh.Token(woosh.NAME, 'len', 216, 25, 216, 28),
woosh.Token(woosh.OP, '(', 216, 28, 216, 29),
woosh.Token(woosh.NAME, 'params', 216, 29, 216, 35),
woosh.Token(woosh.OP, ')', 216, 35, 216, 36),
woosh.Token(woosh.OP, ':', 216, 36, 216, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 37, 217, 0),
woosh.Token(woosh.INDENT, '        ', 217, 0, 217, 8),
woosh.Token(woosh.NAME, 'new_params', 217, 8, 217, 18),
woosh.Token(woosh.OP, '=', 217, 19, 217, 20),
woosh.Token(woosh.OP, '[', 217, 21, 217, 22),
woosh.Token(woosh.OP, ']', 217, 22, 217, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 23, 218, 0),
woosh.Token(woosh.NAME, 'for', 218, 8, 218, 11),
woosh.Token(woosh.NAME, 't', 218, 12, 218, 13),
woosh.Token(woosh.NAME, 'in', 218, 14, 218, 16),
woosh.Token(woosh.NAME, 'params', 218, 17, 218, 23),
woosh.Token(woosh.OP, ':', 218, 23, 218, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 24, 219, 0),
woosh.Token(woosh.INDENT, '            ', 219, 0, 219, 12),
woosh.Token(woosh.NAME, 'if', 219, 12, 219, 14),
woosh.Token(woosh.NAME, 't', 219, 15, 219, 16),
woosh.Token(woosh.NAME, 'in', 219, 17, 219, 19),
woosh.Token(woosh.NAME, 'all_params', 219, 20, 219, 30),
woosh.Token(woosh.OP, ':', 219, 30, 219, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 31, 220, 0),
woosh.Token(woosh.INDENT, '                ', 220, 0, 220, 16),
woosh.Token(woosh.NAME, 'new_params', 220, 16, 220, 26),
woosh.Token(woosh.OP, '.', 220, 26, 220, 27),
woosh.Token(woosh.NAME, 'append', 220, 27, 220, 33),
woosh.Token(woosh.OP, '(', 220, 33, 220, 34),
woosh.Token(woosh.NAME, 't', 220, 34, 220, 35),
woosh.Token(woosh.OP, ')', 220, 35, 220, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 36, 221, 0),
woosh.Token(woosh.NAME, 'all_params', 221, 16, 221, 26),
woosh.Token(woosh.OP, '.', 221, 26, 221, 27),
woosh.Token(woosh.NAME, 'remove', 221, 27, 221, 33),
woosh.Token(woosh.OP, '(', 221, 33, 221, 34),
woosh.Token(woosh.NAME, 't', 221, 34, 221, 35),
woosh.Token(woosh.OP, ')', 221, 35, 221, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 36, 222, 0),
woosh.Token(woosh.DEDENT, '        ', 222, 0, 222, 8),
woosh.Token(woosh.DEDENT, '', 222, 8, 222, 8),
woosh.Token(woosh.NAME, 'params', 222, 8, 222, 14),
woosh.Token(woosh.OP, '=', 222, 15, 222, 16),
woosh.Token(woosh.NAME, 'new_params', 222, 17, 222, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 27, 223, 0),
woosh.Token(woosh.NAME, 'assert', 223, 8, 223, 14),
woosh.Token(woosh.NAME, 'not', 223, 15, 223, 18),
woosh.Token(woosh.NAME, 'all_params', 223, 19, 223, 29),
woosh.Token(woosh.OP, ',', 223, 29, 223, 30),
woosh.Token(woosh.NAME, 'all_params', 223, 31, 223, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 41, 224, 0),
woosh.Token(woosh.DEDENT, '    ', 224, 0, 224, 4),
woosh.Token(woosh.NAME, 'return', 224, 4, 224, 10),
woosh.Token(woosh.NAME, 'tuple', 224, 11, 224, 16),
woosh.Token(woosh.OP, '(', 224, 16, 224, 17),
woosh.Token(woosh.NAME, 'params', 224, 17, 224, 23),
woosh.Token(woosh.OP, ')', 224, 23, 224, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 24, 225, 0),
woosh.Token(woosh.DEDENT, '', 227, 0, 227, 0),
woosh.Token(woosh.NAME, '_cleanups', 227, 0, 227, 9),
woosh.Token(woosh.OP, '=', 227, 10, 227, 11),
woosh.Token(woosh.OP, '[', 227, 12, 227, 13),
woosh.Token(woosh.OP, ']', 227, 13, 227, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 14, 228, 0),
woosh.Token(woosh.NAME, 'def', 230, 0, 230, 3),
woosh.Token(woosh.NAME, '_tp_cache', 230, 4, 230, 13),
woosh.Token(woosh.OP, '(', 230, 13, 230, 14),
woosh.Token(woosh.NAME, 'func', 230, 14, 230, 18),
woosh.Token(woosh.OP, ')', 230, 18, 230, 19),
woosh.Token(woosh.OP, ':', 230, 19, 230, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 20, 231, 0),
woosh.Token(woosh.INDENT, '    ', 231, 0, 231, 4),
woosh.Token(woosh.STRING, '"""Internal wrapper caching __getitem__ of generic types with a fallback to\r\n    original function for non-hashable arguments.\r\n    """', 231, 4, 233, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 7, 234, 0),
woosh.Token(woosh.NAME, 'cached', 234, 4, 234, 10),
woosh.Token(woosh.OP, '=', 234, 11, 234, 12),
woosh.Token(woosh.NAME, 'functools', 234, 13, 234, 22),
woosh.Token(woosh.OP, '.', 234, 22, 234, 23),
woosh.Token(woosh.NAME, 'lru_cache', 234, 23, 234, 32),
woosh.Token(woosh.OP, '(', 234, 32, 234, 33),
woosh.Token(woosh.OP, ')', 234, 33, 234, 34),
woosh.Token(woosh.OP, '(', 234, 34, 234, 35),
woosh.Token(woosh.NAME, 'func', 234, 35, 234, 39),
woosh.Token(woosh.OP, ')', 234, 39, 234, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 40, 235, 0),
woosh.Token(woosh.NAME, '_cleanups', 235, 4, 235, 13),
woosh.Token(woosh.OP, '.', 235, 13, 235, 14),
woosh.Token(woosh.NAME, 'append', 235, 14, 235, 20),
woosh.Token(woosh.OP, '(', 235, 20, 235, 21),
woosh.Token(woosh.NAME, 'cached', 235, 21, 235, 27),
woosh.Token(woosh.OP, '.', 235, 27, 235, 28),
woosh.Token(woosh.NAME, 'cache_clear', 235, 28, 235, 39),
woosh.Token(woosh.OP, ')', 235, 39, 235, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 40, 236, 0),
woosh.Token(woosh.OP, '@', 237, 4, 237, 5),
woosh.Token(woosh.NAME, 'functools', 237, 5, 237, 14),
woosh.Token(woosh.OP, '.', 237, 14, 237, 15),
woosh.Token(woosh.NAME, 'wraps', 237, 15, 237, 20),
woosh.Token(woosh.OP, '(', 237, 20, 237, 21),
woosh.Token(woosh.NAME, 'func', 237, 21, 237, 25),
woosh.Token(woosh.OP, ')', 237, 25, 237, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 26, 238, 0),
woosh.Token(woosh.NAME, 'def', 238, 4, 238, 7),
woosh.Token(woosh.NAME, 'inner', 238, 8, 238, 13),
woosh.Token(woosh.OP, '(', 238, 13, 238, 14),
woosh.Token(woosh.OP, '*', 238, 14, 238, 15),
woosh.Token(woosh.NAME, 'args', 238, 15, 238, 19),
woosh.Token(woosh.OP, ',', 238, 19, 238, 20),
woosh.Token(woosh.OP, '**', 238, 21, 238, 23),
woosh.Token(woosh.NAME, 'kwds', 238, 23, 238, 27),
woosh.Token(woosh.OP, ')', 238, 27, 238, 28),
woosh.Token(woosh.OP, ':', 238, 28, 238, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 29, 239, 0),
woosh.Token(woosh.INDENT, '        ', 239, 0, 239, 8),
woosh.Token(woosh.NAME, 'try', 239, 8, 239, 11),
woosh.Token(woosh.OP, ':', 239, 11, 239, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 12, 240, 0),
woosh.Token(woosh.INDENT, '            ', 240, 0, 240, 12),
woosh.Token(woosh.NAME, 'return', 240, 12, 240, 18),
woosh.Token(woosh.NAME, 'cached', 240, 19, 240, 25),
woosh.Token(woosh.OP, '(', 240, 25, 240, 26),
woosh.Token(woosh.OP, '*', 240, 26, 240, 27),
woosh.Token(woosh.NAME, 'args', 240, 27, 240, 31),
woosh.Token(woosh.OP, ',', 240, 31, 240, 32),
woosh.Token(woosh.OP, '**', 240, 33, 240, 35),
woosh.Token(woosh.NAME, 'kwds', 240, 35, 240, 39),
woosh.Token(woosh.OP, ')', 240, 39, 240, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 40, 241, 0),
woosh.Token(woosh.DEDENT, '        ', 241, 0, 241, 8),
woosh.Token(woosh.NAME, 'except', 241, 8, 241, 14),
woosh.Token(woosh.NAME, 'TypeError', 241, 15, 241, 24),
woosh.Token(woosh.OP, ':', 241, 24, 241, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 25, 242, 0),
woosh.Token(woosh.INDENT, '            ', 242, 0, 242, 12),
woosh.Token(woosh.NAME, 'pass', 242, 12, 242, 16),
woosh.Token(woosh.COMMENT, '# All real errors (not unhashable args) are raised below.', 242, 18, 242, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 75, 243, 0),
woosh.Token(woosh.DEDENT, '        ', 243, 0, 243, 8),
woosh.Token(woosh.NAME, 'return', 243, 8, 243, 14),
woosh.Token(woosh.NAME, 'func', 243, 15, 243, 19),
woosh.Token(woosh.OP, '(', 243, 19, 243, 20),
woosh.Token(woosh.OP, '*', 243, 20, 243, 21),
woosh.Token(woosh.NAME, 'args', 243, 21, 243, 25),
woosh.Token(woosh.OP, ',', 243, 25, 243, 26),
woosh.Token(woosh.OP, '**', 243, 27, 243, 29),
woosh.Token(woosh.NAME, 'kwds', 243, 29, 243, 33),
woosh.Token(woosh.OP, ')', 243, 33, 243, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 34, 244, 0),
woosh.Token(woosh.DEDENT, '    ', 244, 0, 244, 4),
woosh.Token(woosh.NAME, 'return', 244, 4, 244, 10),
woosh.Token(woosh.NAME, 'inner', 244, 11, 244, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 16, 245, 0),
woosh.Token(woosh.DEDENT, '', 247, 0, 247, 0),
woosh.Token(woosh.NAME, 'def', 247, 0, 247, 3),
woosh.Token(woosh.NAME, '_eval_type', 247, 4, 247, 14),
woosh.Token(woosh.OP, '(', 247, 14, 247, 15),
woosh.Token(woosh.NAME, 't', 247, 15, 247, 16),
woosh.Token(woosh.OP, ',', 247, 16, 247, 17),
woosh.Token(woosh.NAME, 'globalns', 247, 18, 247, 26),
woosh.Token(woosh.OP, ',', 247, 26, 247, 27),
woosh.Token(woosh.NAME, 'localns', 247, 28, 247, 35),
woosh.Token(woosh.OP, ',', 247, 35, 247, 36),
woosh.Token(woosh.NAME, 'recursive_guard', 247, 37, 247, 52),
woosh.Token(woosh.OP, '=', 247, 52, 247, 53),
woosh.Token(woosh.NAME, 'frozenset', 247, 53, 247, 62),
woosh.Token(woosh.OP, '(', 247, 62, 247, 63),
woosh.Token(woosh.OP, ')', 247, 63, 247, 64),
woosh.Token(woosh.OP, ')', 247, 64, 247, 65),
woosh.Token(woosh.OP, ':', 247, 65, 247, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 66, 248, 0),
woosh.Token(woosh.INDENT, '    ', 248, 0, 248, 4),
woosh.Token(woosh.STRING, '"""Evaluate all forward references in the given type t.\r\n    For use of globalns and localns see the docstring for get_type_hints().\r\n    recursive_guard is used to prevent prevent infinite recursion\r\n    with recursive ForwardRef.\r\n    """', 248, 4, 252, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 7, 253, 0),
woosh.Token(woosh.NAME, 'if', 253, 4, 253, 6),
woosh.Token(woosh.NAME, 'isinstance', 253, 7, 253, 17),
woosh.Token(woosh.OP, '(', 253, 17, 253, 18),
woosh.Token(woosh.NAME, 't', 253, 18, 253, 19),
woosh.Token(woosh.OP, ',', 253, 19, 253, 20),
woosh.Token(woosh.NAME, 'ForwardRef', 253, 21, 253, 31),
woosh.Token(woosh.OP, ')', 253, 31, 253, 32),
woosh.Token(woosh.OP, ':', 253, 32, 253, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 253, 33, 254, 0),
woosh.Token(woosh.INDENT, '        ', 254, 0, 254, 8),
woosh.Token(woosh.NAME, 'return', 254, 8, 254, 14),
woosh.Token(woosh.NAME, 't', 254, 15, 254, 16),
woosh.Token(woosh.OP, '.', 254, 16, 254, 17),
woosh.Token(woosh.NAME, '_evaluate', 254, 17, 254, 26),
woosh.Token(woosh.OP, '(', 254, 26, 254, 27),
woosh.Token(woosh.NAME, 'globalns', 254, 27, 254, 35),
woosh.Token(woosh.OP, ',', 254, 35, 254, 36),
woosh.Token(woosh.NAME, 'localns', 254, 37, 254, 44),
woosh.Token(woosh.OP, ',', 254, 44, 254, 45),
woosh.Token(woosh.NAME, 'recursive_guard', 254, 46, 254, 61),
woosh.Token(woosh.OP, ')', 254, 61, 254, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 62, 255, 0),
woosh.Token(woosh.DEDENT, '    ', 255, 0, 255, 4),
woosh.Token(woosh.NAME, 'if', 255, 4, 255, 6),
woosh.Token(woosh.NAME, 'isinstance', 255, 7, 255, 17),
woosh.Token(woosh.OP, '(', 255, 17, 255, 18),
woosh.Token(woosh.NAME, 't', 255, 18, 255, 19),
woosh.Token(woosh.OP, ',', 255, 19, 255, 20),
woosh.Token(woosh.OP, '(', 255, 21, 255, 22),
woosh.Token(woosh.NAME, '_GenericAlias', 255, 22, 255, 35),
woosh.Token(woosh.OP, ',', 255, 35, 255, 36),
woosh.Token(woosh.NAME, 'GenericAlias', 255, 37, 255, 49),
woosh.Token(woosh.OP, ')', 255, 49, 255, 50),
woosh.Token(woosh.OP, ')', 255, 50, 255, 51),
woosh.Token(woosh.OP, ':', 255, 51, 255, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 52, 256, 0),
woosh.Token(woosh.INDENT, '        ', 256, 0, 256, 8),
woosh.Token(woosh.NAME, 'ev_args', 256, 8, 256, 15),
woosh.Token(woosh.OP, '=', 256, 16, 256, 17),
woosh.Token(woosh.NAME, 'tuple', 256, 18, 256, 23),
woosh.Token(woosh.OP, '(', 256, 23, 256, 24),
woosh.Token(woosh.NAME, '_eval_type', 256, 24, 256, 34),
woosh.Token(woosh.OP, '(', 256, 34, 256, 35),
woosh.Token(woosh.NAME, 'a', 256, 35, 256, 36),
woosh.Token(woosh.OP, ',', 256, 36, 256, 37),
woosh.Token(woosh.NAME, 'globalns', 256, 38, 256, 46),
woosh.Token(woosh.OP, ',', 256, 46, 256, 47),
woosh.Token(woosh.NAME, 'localns', 256, 48, 256, 55),
woosh.Token(woosh.OP, ',', 256, 55, 256, 56),
woosh.Token(woosh.NAME, 'recursive_guard', 256, 57, 256, 72),
woosh.Token(woosh.OP, ')', 256, 72, 256, 73),
woosh.Token(woosh.NAME, 'for', 256, 74, 256, 77),
woosh.Token(woosh.NAME, 'a', 256, 78, 256, 79),
woosh.Token(woosh.NAME, 'in', 256, 80, 256, 82),
woosh.Token(woosh.NAME, 't', 256, 83, 256, 84),
woosh.Token(woosh.OP, '.', 256, 84, 256, 85),
woosh.Token(woosh.NAME, '__args__', 256, 85, 256, 93),
woosh.Token(woosh.OP, ')', 256, 93, 256, 94),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 94, 257, 0),
woosh.Token(woosh.NAME, 'if', 257, 8, 257, 10),
woosh.Token(woosh.NAME, 'ev_args', 257, 11, 257, 18),
woosh.Token(woosh.OP, '==', 257, 19, 257, 21),
woosh.Token(woosh.NAME, 't', 257, 22, 257, 23),
woosh.Token(woosh.OP, '.', 257, 23, 257, 24),
woosh.Token(woosh.NAME, '__args__', 257, 24, 257, 32),
woosh.Token(woosh.OP, ':', 257, 32, 257, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 33, 258, 0),
woosh.Token(woosh.INDENT, '            ', 258, 0, 258, 12),
woosh.Token(woosh.NAME, 'return', 258, 12, 258, 18),
woosh.Token(woosh.NAME, 't', 258, 19, 258, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 20, 259, 0),
woosh.Token(woosh.DEDENT, '        ', 259, 0, 259, 8),
woosh.Token(woosh.NAME, 'if', 259, 8, 259, 10),
woosh.Token(woosh.NAME, 'isinstance', 259, 11, 259, 21),
woosh.Token(woosh.OP, '(', 259, 21, 259, 22),
woosh.Token(woosh.NAME, 't', 259, 22, 259, 23),
woosh.Token(woosh.OP, ',', 259, 23, 259, 24),
woosh.Token(woosh.NAME, 'GenericAlias', 259, 25, 259, 37),
woosh.Token(woosh.OP, ')', 259, 37, 259, 38),
woosh.Token(woosh.OP, ':', 259, 38, 259, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 39, 260, 0),
woosh.Token(woosh.INDENT, '            ', 260, 0, 260, 12),
woosh.Token(woosh.NAME, 'return', 260, 12, 260, 18),
woosh.Token(woosh.NAME, 'GenericAlias', 260, 19, 260, 31),
woosh.Token(woosh.OP, '(', 260, 31, 260, 32),
woosh.Token(woosh.NAME, 't', 260, 32, 260, 33),
woosh.Token(woosh.OP, '.', 260, 33, 260, 34),
woosh.Token(woosh.NAME, '__origin__', 260, 34, 260, 44),
woosh.Token(woosh.OP, ',', 260, 44, 260, 45),
woosh.Token(woosh.NAME, 'ev_args', 260, 46, 260, 53),
woosh.Token(woosh.OP, ')', 260, 53, 260, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 260, 54, 261, 0),
woosh.Token(woosh.DEDENT, '        ', 261, 0, 261, 8),
woosh.Token(woosh.NAME, 'else', 261, 8, 261, 12),
woosh.Token(woosh.OP, ':', 261, 12, 261, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 13, 262, 0),
woosh.Token(woosh.INDENT, '            ', 262, 0, 262, 12),
woosh.Token(woosh.NAME, 'return', 262, 12, 262, 18),
woosh.Token(woosh.NAME, 't', 262, 19, 262, 20),
woosh.Token(woosh.OP, '.', 262, 20, 262, 21),
woosh.Token(woosh.NAME, 'copy_with', 262, 21, 262, 30),
woosh.Token(woosh.OP, '(', 262, 30, 262, 31),
woosh.Token(woosh.NAME, 'ev_args', 262, 31, 262, 38),
woosh.Token(woosh.OP, ')', 262, 38, 262, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 39, 263, 0),
woosh.Token(woosh.DEDENT, '    ', 263, 0, 263, 4),
woosh.Token(woosh.DEDENT, '', 263, 4, 263, 4),
woosh.Token(woosh.NAME, 'return', 263, 4, 263, 10),
woosh.Token(woosh.NAME, 't', 263, 11, 263, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 12, 264, 0),
woosh.Token(woosh.DEDENT, '', 266, 0, 266, 0),
woosh.Token(woosh.NAME, 'class', 266, 0, 266, 5),
woosh.Token(woosh.NAME, '_Final', 266, 6, 266, 12),
woosh.Token(woosh.OP, ':', 266, 12, 266, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 13, 267, 0),
woosh.Token(woosh.INDENT, '    ', 267, 0, 267, 4),
woosh.Token(woosh.STRING, '"""Mixin to prohibit subclassing"""', 267, 4, 267, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 39, 268, 0),
woosh.Token(woosh.NAME, '__slots__', 269, 4, 269, 13),
woosh.Token(woosh.OP, '=', 269, 14, 269, 15),
woosh.Token(woosh.OP, '(', 269, 16, 269, 17),
woosh.Token(woosh.STRING, "'__weakref__'", 269, 17, 269, 30),
woosh.Token(woosh.OP, ',', 269, 30, 269, 31),
woosh.Token(woosh.OP, ')', 269, 31, 269, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 32, 270, 0),
woosh.Token(woosh.NAME, 'def', 271, 4, 271, 7),
woosh.Token(woosh.NAME, '__init_subclass__', 271, 8, 271, 25),
woosh.Token(woosh.OP, '(', 271, 25, 271, 26),
woosh.Token(woosh.NAME, 'self', 271, 26, 271, 30),
woosh.Token(woosh.OP, ',', 271, 30, 271, 31),
woosh.Token(woosh.OP, '/', 271, 32, 271, 33),
woosh.Token(woosh.OP, ',', 271, 33, 271, 34),
woosh.Token(woosh.OP, '*', 271, 35, 271, 36),
woosh.Token(woosh.NAME, 'args', 271, 36, 271, 40),
woosh.Token(woosh.OP, ',', 271, 40, 271, 41),
woosh.Token(woosh.OP, '**', 271, 42, 271, 44),
woosh.Token(woosh.NAME, 'kwds', 271, 44, 271, 48),
woosh.Token(woosh.OP, ')', 271, 48, 271, 49),
woosh.Token(woosh.OP, ':', 271, 49, 271, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 50, 272, 0),
woosh.Token(woosh.INDENT, '        ', 272, 0, 272, 8),
woosh.Token(woosh.NAME, 'if', 272, 8, 272, 10),
woosh.Token(woosh.STRING, "'_root'", 272, 11, 272, 18),
woosh.Token(woosh.NAME, 'not', 272, 19, 272, 22),
woosh.Token(woosh.NAME, 'in', 272, 23, 272, 25),
woosh.Token(woosh.NAME, 'kwds', 272, 26, 272, 30),
woosh.Token(woosh.OP, ':', 272, 30, 272, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 31, 273, 0),
woosh.Token(woosh.INDENT, '            ', 273, 0, 273, 12),
woosh.Token(woosh.NAME, 'raise', 273, 12, 273, 17),
woosh.Token(woosh.NAME, 'TypeError', 273, 18, 273, 27),
woosh.Token(woosh.OP, '(', 273, 27, 273, 28),
woosh.Token(woosh.STRING, '"Cannot subclass special typing classes"', 273, 28, 273, 68),
woosh.Token(woosh.OP, ')', 273, 68, 273, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 69, 274, 0),
woosh.Token(woosh.DEDENT, '', 275, 0, 275, 0),
woosh.Token(woosh.DEDENT, '', 275, 0, 275, 0),
woosh.Token(woosh.DEDENT, '', 275, 0, 275, 0),
woosh.Token(woosh.NAME, 'class', 275, 0, 275, 5),
woosh.Token(woosh.NAME, '_Immutable', 275, 6, 275, 16),
woosh.Token(woosh.OP, ':', 275, 16, 275, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 17, 276, 0),
woosh.Token(woosh.INDENT, '    ', 276, 0, 276, 4),
woosh.Token(woosh.STRING, '"""Mixin to indicate that object should not be copied."""', 276, 4, 276, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 61, 277, 0),
woosh.Token(woosh.NAME, '__slots__', 277, 4, 277, 13),
woosh.Token(woosh.OP, '=', 277, 14, 277, 15),
woosh.Token(woosh.OP, '(', 277, 16, 277, 17),
woosh.Token(woosh.OP, ')', 277, 17, 277, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 18, 278, 0),
woosh.Token(woosh.NAME, 'def', 279, 4, 279, 7),
woosh.Token(woosh.NAME, '__copy__', 279, 8, 279, 16),
woosh.Token(woosh.OP, '(', 279, 16, 279, 17),
woosh.Token(woosh.NAME, 'self', 279, 17, 279, 21),
woosh.Token(woosh.OP, ')', 279, 21, 279, 22),
woosh.Token(woosh.OP, ':', 279, 22, 279, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 23, 280, 0),
woosh.Token(woosh.INDENT, '        ', 280, 0, 280, 8),
woosh.Token(woosh.NAME, 'return', 280, 8, 280, 14),
woosh.Token(woosh.NAME, 'self', 280, 15, 280, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 19, 281, 0),
woosh.Token(woosh.DEDENT, '    ', 282, 0, 282, 4),
woosh.Token(woosh.NAME, 'def', 282, 4, 282, 7),
woosh.Token(woosh.NAME, '__deepcopy__', 282, 8, 282, 20),
woosh.Token(woosh.OP, '(', 282, 20, 282, 21),
woosh.Token(woosh.NAME, 'self', 282, 21, 282, 25),
woosh.Token(woosh.OP, ',', 282, 25, 282, 26),
woosh.Token(woosh.NAME, 'memo', 282, 27, 282, 31),
woosh.Token(woosh.OP, ')', 282, 31, 282, 32),
woosh.Token(woosh.OP, ':', 282, 32, 282, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 33, 283, 0),
woosh.Token(woosh.INDENT, '        ', 283, 0, 283, 8),
woosh.Token(woosh.NAME, 'return', 283, 8, 283, 14),
woosh.Token(woosh.NAME, 'self', 283, 15, 283, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 283, 19, 284, 0),
woosh.Token(woosh.COMMENT, '# Internal indicator of special typing constructs.', 286, 0, 286, 50),
woosh.Token(woosh.COMMENT, '# See __doc__ instance attribute for specific docs.', 287, 0, 287, 51),
woosh.Token(woosh.DEDENT, '', 288, 0, 288, 0),
woosh.Token(woosh.DEDENT, '', 288, 0, 288, 0),
woosh.Token(woosh.NAME, 'class', 288, 0, 288, 5),
woosh.Token(woosh.NAME, '_SpecialForm', 288, 6, 288, 18),
woosh.Token(woosh.OP, '(', 288, 18, 288, 19),
woosh.Token(woosh.NAME, '_Final', 288, 19, 288, 25),
woosh.Token(woosh.OP, ',', 288, 25, 288, 26),
woosh.Token(woosh.NAME, '_root', 288, 27, 288, 32),
woosh.Token(woosh.OP, '=', 288, 32, 288, 33),
woosh.Token(woosh.NAME, 'True', 288, 33, 288, 37),
woosh.Token(woosh.OP, ')', 288, 37, 288, 38),
woosh.Token(woosh.OP, ':', 288, 38, 288, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 288, 39, 289, 0),
woosh.Token(woosh.INDENT, '    ', 289, 0, 289, 4),
woosh.Token(woosh.NAME, '__slots__', 289, 4, 289, 13),
woosh.Token(woosh.OP, '=', 289, 14, 289, 15),
woosh.Token(woosh.OP, '(', 289, 16, 289, 17),
woosh.Token(woosh.STRING, "'_name'", 289, 17, 289, 24),
woosh.Token(woosh.OP, ',', 289, 24, 289, 25),
woosh.Token(woosh.STRING, "'__doc__'", 289, 26, 289, 35),
woosh.Token(woosh.OP, ',', 289, 35, 289, 36),
woosh.Token(woosh.STRING, "'_getitem'", 289, 37, 289, 47),
woosh.Token(woosh.OP, ')', 289, 47, 289, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 289, 48, 290, 0),
woosh.Token(woosh.NAME, 'def', 291, 4, 291, 7),
woosh.Token(woosh.NAME, '__init__', 291, 8, 291, 16),
woosh.Token(woosh.OP, '(', 291, 16, 291, 17),
woosh.Token(woosh.NAME, 'self', 291, 17, 291, 21),
woosh.Token(woosh.OP, ',', 291, 21, 291, 22),
woosh.Token(woosh.NAME, 'getitem', 291, 23, 291, 30),
woosh.Token(woosh.OP, ')', 291, 30, 291, 31),
woosh.Token(woosh.OP, ':', 291, 31, 291, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 32, 292, 0),
woosh.Token(woosh.INDENT, '        ', 292, 0, 292, 8),
woosh.Token(woosh.NAME, 'self', 292, 8, 292, 12),
woosh.Token(woosh.OP, '.', 292, 12, 292, 13),
woosh.Token(woosh.NAME, '_getitem', 292, 13, 292, 21),
woosh.Token(woosh.OP, '=', 292, 22, 292, 23),
woosh.Token(woosh.NAME, 'getitem', 292, 24, 292, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 31, 293, 0),
woosh.Token(woosh.NAME, 'self', 293, 8, 293, 12),
woosh.Token(woosh.OP, '.', 293, 12, 293, 13),
woosh.Token(woosh.NAME, '_name', 293, 13, 293, 18),
woosh.Token(woosh.OP, '=', 293, 19, 293, 20),
woosh.Token(woosh.NAME, 'getitem', 293, 21, 293, 28),
woosh.Token(woosh.OP, '.', 293, 28, 293, 29),
woosh.Token(woosh.NAME, '__name__', 293, 29, 293, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 37, 294, 0),
woosh.Token(woosh.NAME, 'self', 294, 8, 294, 12),
woosh.Token(woosh.OP, '.', 294, 12, 294, 13),
woosh.Token(woosh.NAME, '__doc__', 294, 13, 294, 20),
woosh.Token(woosh.OP, '=', 294, 21, 294, 22),
woosh.Token(woosh.NAME, 'getitem', 294, 23, 294, 30),
woosh.Token(woosh.OP, '.', 294, 30, 294, 31),
woosh.Token(woosh.NAME, '__doc__', 294, 31, 294, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 38, 295, 0),
woosh.Token(woosh.DEDENT, '    ', 296, 0, 296, 4),
woosh.Token(woosh.NAME, 'def', 296, 4, 296, 7),
woosh.Token(woosh.NAME, '__mro_entries__', 296, 8, 296, 23),
woosh.Token(woosh.OP, '(', 296, 23, 296, 24),
woosh.Token(woosh.NAME, 'self', 296, 24, 296, 28),
woosh.Token(woosh.OP, ',', 296, 28, 296, 29),
woosh.Token(woosh.NAME, 'bases', 296, 30, 296, 35),
woosh.Token(woosh.OP, ')', 296, 35, 296, 36),
woosh.Token(woosh.OP, ':', 296, 36, 296, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 296, 37, 297, 0),
woosh.Token(woosh.INDENT, '        ', 297, 0, 297, 8),
woosh.Token(woosh.NAME, 'raise', 297, 8, 297, 13),
woosh.Token(woosh.NAME, 'TypeError', 297, 14, 297, 23),
woosh.Token(woosh.OP, '(', 297, 23, 297, 24),
woosh.Token(woosh.STRING, 'f"Cannot subclass {self!r}"', 297, 24, 297, 51),
woosh.Token(woosh.OP, ')', 297, 51, 297, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 297, 52, 298, 0),
woosh.Token(woosh.DEDENT, '    ', 299, 0, 299, 4),
woosh.Token(woosh.NAME, 'def', 299, 4, 299, 7),
woosh.Token(woosh.NAME, '__repr__', 299, 8, 299, 16),
woosh.Token(woosh.OP, '(', 299, 16, 299, 17),
woosh.Token(woosh.NAME, 'self', 299, 17, 299, 21),
woosh.Token(woosh.OP, ')', 299, 21, 299, 22),
woosh.Token(woosh.OP, ':', 299, 22, 299, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 299, 23, 300, 0),
woosh.Token(woosh.INDENT, '        ', 300, 0, 300, 8),
woosh.Token(woosh.NAME, 'return', 300, 8, 300, 14),
woosh.Token(woosh.STRING, "'typing.'", 300, 15, 300, 24),
woosh.Token(woosh.OP, '+', 300, 25, 300, 26),
woosh.Token(woosh.NAME, 'self', 300, 27, 300, 31),
woosh.Token(woosh.OP, '.', 300, 31, 300, 32),
woosh.Token(woosh.NAME, '_name', 300, 32, 300, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 37, 301, 0),
woosh.Token(woosh.DEDENT, '    ', 302, 0, 302, 4),
woosh.Token(woosh.NAME, 'def', 302, 4, 302, 7),
woosh.Token(woosh.NAME, '__reduce__', 302, 8, 302, 18),
woosh.Token(woosh.OP, '(', 302, 18, 302, 19),
woosh.Token(woosh.NAME, 'self', 302, 19, 302, 23),
woosh.Token(woosh.OP, ')', 302, 23, 302, 24),
woosh.Token(woosh.OP, ':', 302, 24, 302, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 302, 25, 303, 0),
woosh.Token(woosh.INDENT, '        ', 303, 0, 303, 8),
woosh.Token(woosh.NAME, 'return', 303, 8, 303, 14),
woosh.Token(woosh.NAME, 'self', 303, 15, 303, 19),
woosh.Token(woosh.OP, '.', 303, 19, 303, 20),
woosh.Token(woosh.NAME, '_name', 303, 20, 303, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 25, 304, 0),
woosh.Token(woosh.DEDENT, '    ', 305, 0, 305, 4),
woosh.Token(woosh.NAME, 'def', 305, 4, 305, 7),
woosh.Token(woosh.NAME, '__call__', 305, 8, 305, 16),
woosh.Token(woosh.OP, '(', 305, 16, 305, 17),
woosh.Token(woosh.NAME, 'self', 305, 17, 305, 21),
woosh.Token(woosh.OP, ',', 305, 21, 305, 22),
woosh.Token(woosh.OP, '*', 305, 23, 305, 24),
woosh.Token(woosh.NAME, 'args', 305, 24, 305, 28),
woosh.Token(woosh.OP, ',', 305, 28, 305, 29),
woosh.Token(woosh.OP, '**', 305, 30, 305, 32),
woosh.Token(woosh.NAME, 'kwds', 305, 32, 305, 36),
woosh.Token(woosh.OP, ')', 305, 36, 305, 37),
woosh.Token(woosh.OP, ':', 305, 37, 305, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 38, 306, 0),
woosh.Token(woosh.INDENT, '        ', 306, 0, 306, 8),
woosh.Token(woosh.NAME, 'raise', 306, 8, 306, 13),
woosh.Token(woosh.NAME, 'TypeError', 306, 14, 306, 23),
woosh.Token(woosh.OP, '(', 306, 23, 306, 24),
woosh.Token(woosh.STRING, 'f"Cannot instantiate {self!r}"', 306, 24, 306, 54),
woosh.Token(woosh.OP, ')', 306, 54, 306, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 55, 307, 0),
woosh.Token(woosh.DEDENT, '    ', 308, 0, 308, 4),
woosh.Token(woosh.NAME, 'def', 308, 4, 308, 7),
woosh.Token(woosh.NAME, '__instancecheck__', 308, 8, 308, 25),
woosh.Token(woosh.OP, '(', 308, 25, 308, 26),
woosh.Token(woosh.NAME, 'self', 308, 26, 308, 30),
woosh.Token(woosh.OP, ',', 308, 30, 308, 31),
woosh.Token(woosh.NAME, 'obj', 308, 32, 308, 35),
woosh.Token(woosh.OP, ')', 308, 35, 308, 36),
woosh.Token(woosh.OP, ':', 308, 36, 308, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 37, 309, 0),
woosh.Token(woosh.INDENT, '        ', 309, 0, 309, 8),
woosh.Token(woosh.NAME, 'raise', 309, 8, 309, 13),
woosh.Token(woosh.NAME, 'TypeError', 309, 14, 309, 23),
woosh.Token(woosh.OP, '(', 309, 23, 309, 24),
woosh.Token(woosh.STRING, 'f"{self} cannot be used with isinstance()"', 309, 24, 309, 66),
woosh.Token(woosh.OP, ')', 309, 66, 309, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 309, 67, 310, 0),
woosh.Token(woosh.DEDENT, '    ', 311, 0, 311, 4),
woosh.Token(woosh.NAME, 'def', 311, 4, 311, 7),
woosh.Token(woosh.NAME, '__subclasscheck__', 311, 8, 311, 25),
woosh.Token(woosh.OP, '(', 311, 25, 311, 26),
woosh.Token(woosh.NAME, 'self', 311, 26, 311, 30),
woosh.Token(woosh.OP, ',', 311, 30, 311, 31),
woosh.Token(woosh.NAME, 'cls', 311, 32, 311, 35),
woosh.Token(woosh.OP, ')', 311, 35, 311, 36),
woosh.Token(woosh.OP, ':', 311, 36, 311, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 37, 312, 0),
woosh.Token(woosh.INDENT, '        ', 312, 0, 312, 8),
woosh.Token(woosh.NAME, 'raise', 312, 8, 312, 13),
woosh.Token(woosh.NAME, 'TypeError', 312, 14, 312, 23),
woosh.Token(woosh.OP, '(', 312, 23, 312, 24),
woosh.Token(woosh.STRING, 'f"{self} cannot be used with issubclass()"', 312, 24, 312, 66),
woosh.Token(woosh.OP, ')', 312, 66, 312, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 67, 313, 0),
woosh.Token(woosh.DEDENT, '    ', 314, 0, 314, 4),
woosh.Token(woosh.OP, '@', 314, 4, 314, 5),
woosh.Token(woosh.NAME, '_tp_cache', 314, 5, 314, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 14, 315, 0),
woosh.Token(woosh.NAME, 'def', 315, 4, 315, 7),
woosh.Token(woosh.NAME, '__getitem__', 315, 8, 315, 19),
woosh.Token(woosh.OP, '(', 315, 19, 315, 20),
woosh.Token(woosh.NAME, 'self', 315, 20, 315, 24),
woosh.Token(woosh.OP, ',', 315, 24, 315, 25),
woosh.Token(woosh.NAME, 'parameters', 315, 26, 315, 36),
woosh.Token(woosh.OP, ')', 315, 36, 315, 37),
woosh.Token(woosh.OP, ':', 315, 37, 315, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 38, 316, 0),
woosh.Token(woosh.INDENT, '        ', 316, 0, 316, 8),
woosh.Token(woosh.NAME, 'return', 316, 8, 316, 14),
woosh.Token(woosh.NAME, 'self', 316, 15, 316, 19),
woosh.Token(woosh.OP, '.', 316, 19, 316, 20),
woosh.Token(woosh.NAME, '_getitem', 316, 20, 316, 28),
woosh.Token(woosh.OP, '(', 316, 28, 316, 29),
woosh.Token(woosh.NAME, 'self', 316, 29, 316, 33),
woosh.Token(woosh.OP, ',', 316, 33, 316, 34),
woosh.Token(woosh.NAME, 'parameters', 316, 35, 316, 45),
woosh.Token(woosh.OP, ')', 316, 45, 316, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 46, 317, 0),
woosh.Token(woosh.DEDENT, '', 318, 0, 318, 0),
woosh.Token(woosh.DEDENT, '', 318, 0, 318, 0),
woosh.Token(woosh.OP, '@', 318, 0, 318, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 318, 1, 318, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 13, 319, 0),
woosh.Token(woosh.NAME, 'def', 319, 0, 319, 3),
woosh.Token(woosh.NAME, 'Any', 319, 4, 319, 7),
woosh.Token(woosh.OP, '(', 319, 7, 319, 8),
woosh.Token(woosh.NAME, 'self', 319, 8, 319, 12),
woosh.Token(woosh.OP, ',', 319, 12, 319, 13),
woosh.Token(woosh.NAME, 'parameters', 319, 14, 319, 24),
woosh.Token(woosh.OP, ')', 319, 24, 319, 25),
woosh.Token(woosh.OP, ':', 319, 25, 319, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 26, 320, 0),
woosh.Token(woosh.INDENT, '    ', 320, 0, 320, 4),
woosh.Token(woosh.STRING, '"""Special type indicating an unconstrained type.\r\n\r\n    - Any is compatible with every type.\r\n    - Any assumed to have all methods.\r\n    - All values assumed to be instances of Any.\r\n\r\n    Note that all the above statements are true from the point of view of\r\n    static type checkers. At runtime, Any should not be used with instance\r\n    or class checks.\r\n    """', 320, 4, 329, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 329, 7, 330, 0),
woosh.Token(woosh.NAME, 'raise', 330, 4, 330, 9),
woosh.Token(woosh.NAME, 'TypeError', 330, 10, 330, 19),
woosh.Token(woosh.OP, '(', 330, 19, 330, 20),
woosh.Token(woosh.STRING, 'f"{self} is not subscriptable"', 330, 20, 330, 50),
woosh.Token(woosh.OP, ')', 330, 50, 330, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 330, 51, 331, 0),
woosh.Token(woosh.DEDENT, '', 332, 0, 332, 0),
woosh.Token(woosh.OP, '@', 332, 0, 332, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 332, 1, 332, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 13, 333, 0),
woosh.Token(woosh.NAME, 'def', 333, 0, 333, 3),
woosh.Token(woosh.NAME, 'NoReturn', 333, 4, 333, 12),
woosh.Token(woosh.OP, '(', 333, 12, 333, 13),
woosh.Token(woosh.NAME, 'self', 333, 13, 333, 17),
woosh.Token(woosh.OP, ',', 333, 17, 333, 18),
woosh.Token(woosh.NAME, 'parameters', 333, 19, 333, 29),
woosh.Token(woosh.OP, ')', 333, 29, 333, 30),
woosh.Token(woosh.OP, ':', 333, 30, 333, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 333, 31, 334, 0),
woosh.Token(woosh.INDENT, '    ', 334, 0, 334, 4),
woosh.Token(woosh.STRING, '"""Special type indicating functions that never return.\r\n    Example::\r\n\r\n      from typing import NoReturn\r\n\r\n      def stop() -> NoReturn:\r\n          raise Exception(\'no way\')\r\n\r\n    This type is invalid in other positions, e.g., ``List[NoReturn]``\r\n    will fail in static type checkers.\r\n    """', 334, 4, 344, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 7, 345, 0),
woosh.Token(woosh.NAME, 'raise', 345, 4, 345, 9),
woosh.Token(woosh.NAME, 'TypeError', 345, 10, 345, 19),
woosh.Token(woosh.OP, '(', 345, 19, 345, 20),
woosh.Token(woosh.STRING, 'f"{self} is not subscriptable"', 345, 20, 345, 50),
woosh.Token(woosh.OP, ')', 345, 50, 345, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 51, 346, 0),
woosh.Token(woosh.DEDENT, '', 347, 0, 347, 0),
woosh.Token(woosh.OP, '@', 347, 0, 347, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 347, 1, 347, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 13, 348, 0),
woosh.Token(woosh.NAME, 'def', 348, 0, 348, 3),
woosh.Token(woosh.NAME, 'ClassVar', 348, 4, 348, 12),
woosh.Token(woosh.OP, '(', 348, 12, 348, 13),
woosh.Token(woosh.NAME, 'self', 348, 13, 348, 17),
woosh.Token(woosh.OP, ',', 348, 17, 348, 18),
woosh.Token(woosh.NAME, 'parameters', 348, 19, 348, 29),
woosh.Token(woosh.OP, ')', 348, 29, 348, 30),
woosh.Token(woosh.OP, ':', 348, 30, 348, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 31, 349, 0),
woosh.Token(woosh.INDENT, '    ', 349, 0, 349, 4),
woosh.Token(woosh.STRING, '"""Special type construct to mark class variables.\r\n\r\n    An annotation wrapped in ClassVar indicates that a given\r\n    attribute is intended to be used as a class variable and\r\n    should not be set on instances of that class. Usage::\r\n\r\n      class Starship:\r\n          stats: ClassVar[Dict[str, int]] = {} # class variable\r\n          damage: int = 10                     # instance variable\r\n\r\n    ClassVar accepts only types and cannot be further subscribed.\r\n\r\n    Note that ClassVar is not a class itself, and should not\r\n    be used with isinstance() or issubclass().\r\n    """', 349, 4, 363, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 7, 364, 0),
woosh.Token(woosh.NAME, 'item', 364, 4, 364, 8),
woosh.Token(woosh.OP, '=', 364, 9, 364, 10),
woosh.Token(woosh.NAME, '_type_check', 364, 11, 364, 22),
woosh.Token(woosh.OP, '(', 364, 22, 364, 23),
woosh.Token(woosh.NAME, 'parameters', 364, 23, 364, 33),
woosh.Token(woosh.OP, ',', 364, 33, 364, 34),
woosh.Token(woosh.STRING, "f'{self} accepts only single type.'", 364, 35, 364, 70),
woosh.Token(woosh.OP, ')', 364, 70, 364, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 71, 365, 0),
woosh.Token(woosh.NAME, 'return', 365, 4, 365, 10),
woosh.Token(woosh.NAME, '_GenericAlias', 365, 11, 365, 24),
woosh.Token(woosh.OP, '(', 365, 24, 365, 25),
woosh.Token(woosh.NAME, 'self', 365, 25, 365, 29),
woosh.Token(woosh.OP, ',', 365, 29, 365, 30),
woosh.Token(woosh.OP, '(', 365, 31, 365, 32),
woosh.Token(woosh.NAME, 'item', 365, 32, 365, 36),
woosh.Token(woosh.OP, ',', 365, 36, 365, 37),
woosh.Token(woosh.OP, ')', 365, 37, 365, 38),
woosh.Token(woosh.OP, ')', 365, 38, 365, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 39, 366, 0),
woosh.Token(woosh.DEDENT, '', 367, 0, 367, 0),
woosh.Token(woosh.OP, '@', 367, 0, 367, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 367, 1, 367, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 13, 368, 0),
woosh.Token(woosh.NAME, 'def', 368, 0, 368, 3),
woosh.Token(woosh.NAME, 'Final', 368, 4, 368, 9),
woosh.Token(woosh.OP, '(', 368, 9, 368, 10),
woosh.Token(woosh.NAME, 'self', 368, 10, 368, 14),
woosh.Token(woosh.OP, ',', 368, 14, 368, 15),
woosh.Token(woosh.NAME, 'parameters', 368, 16, 368, 26),
woosh.Token(woosh.OP, ')', 368, 26, 368, 27),
woosh.Token(woosh.OP, ':', 368, 27, 368, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 28, 369, 0),
woosh.Token(woosh.INDENT, '    ', 369, 0, 369, 4),
woosh.Token(woosh.STRING, '"""Special typing construct to indicate final names to type checkers.\r\n\r\n    A final name cannot be re-assigned or overridden in a subclass.\r\n    For example:\r\n\r\n      MAX_SIZE: Final = 9000\r\n      MAX_SIZE += 1  # Error reported by type checker\r\n\r\n      class Connection:\r\n          TIMEOUT: Final[int] = 10\r\n\r\n      class FastConnector(Connection):\r\n          TIMEOUT = 1  # Error reported by type checker\r\n\r\n    There is no runtime checking of these properties.\r\n    """', 369, 4, 384, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 7, 385, 0),
woosh.Token(woosh.NAME, 'item', 385, 4, 385, 8),
woosh.Token(woosh.OP, '=', 385, 9, 385, 10),
woosh.Token(woosh.NAME, '_type_check', 385, 11, 385, 22),
woosh.Token(woosh.OP, '(', 385, 22, 385, 23),
woosh.Token(woosh.NAME, 'parameters', 385, 23, 385, 33),
woosh.Token(woosh.OP, ',', 385, 33, 385, 34),
woosh.Token(woosh.STRING, "f'{self} accepts only single type.'", 385, 35, 385, 70),
woosh.Token(woosh.OP, ')', 385, 70, 385, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 71, 386, 0),
woosh.Token(woosh.NAME, 'return', 386, 4, 386, 10),
woosh.Token(woosh.NAME, '_GenericAlias', 386, 11, 386, 24),
woosh.Token(woosh.OP, '(', 386, 24, 386, 25),
woosh.Token(woosh.NAME, 'self', 386, 25, 386, 29),
woosh.Token(woosh.OP, ',', 386, 29, 386, 30),
woosh.Token(woosh.OP, '(', 386, 31, 386, 32),
woosh.Token(woosh.NAME, 'item', 386, 32, 386, 36),
woosh.Token(woosh.OP, ',', 386, 36, 386, 37),
woosh.Token(woosh.OP, ')', 386, 37, 386, 38),
woosh.Token(woosh.OP, ')', 386, 38, 386, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 39, 387, 0),
woosh.Token(woosh.DEDENT, '', 388, 0, 388, 0),
woosh.Token(woosh.OP, '@', 388, 0, 388, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 388, 1, 388, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 388, 13, 389, 0),
woosh.Token(woosh.NAME, 'def', 389, 0, 389, 3),
woosh.Token(woosh.NAME, 'Union', 389, 4, 389, 9),
woosh.Token(woosh.OP, '(', 389, 9, 389, 10),
woosh.Token(woosh.NAME, 'self', 389, 10, 389, 14),
woosh.Token(woosh.OP, ',', 389, 14, 389, 15),
woosh.Token(woosh.NAME, 'parameters', 389, 16, 389, 26),
woosh.Token(woosh.OP, ')', 389, 26, 389, 27),
woosh.Token(woosh.OP, ':', 389, 27, 389, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 389, 28, 390, 0),
woosh.Token(woosh.INDENT, '    ', 390, 0, 390, 4),
woosh.Token(woosh.STRING, '"""Union type; Union[X, Y] means either X or Y.\r\n\r\n    To define a union, use e.g. Union[int, str].  Details:\r\n    - The arguments must be types and there must be at least one.\r\n    - None as an argument is a special case and is replaced by\r\n      type(None).\r\n    - Unions of unions are flattened, e.g.::\r\n\r\n        Union[Union[int, str], float] == Union[int, str, float]\r\n\r\n    - Unions of a single argument vanish, e.g.::\r\n\r\n        Union[int] == int  # The constructor actually returns int\r\n\r\n    - Redundant arguments are skipped, e.g.::\r\n\r\n        Union[int, str, int] == Union[int, str]\r\n\r\n    - When comparing unions, the argument order is ignored, e.g.::\r\n\r\n        Union[int, str] == Union[str, int]\r\n\r\n    - You cannot subclass or instantiate a union.\r\n    - You can use Optional[X] as a shorthand for Union[X, None].\r\n    """', 390, 4, 414, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 7, 415, 0),
woosh.Token(woosh.NAME, 'if', 415, 4, 415, 6),
woosh.Token(woosh.NAME, 'parameters', 415, 7, 415, 17),
woosh.Token(woosh.OP, '==', 415, 18, 415, 20),
woosh.Token(woosh.OP, '(', 415, 21, 415, 22),
woosh.Token(woosh.OP, ')', 415, 22, 415, 23),
woosh.Token(woosh.OP, ':', 415, 23, 415, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 415, 24, 416, 0),
woosh.Token(woosh.INDENT, '        ', 416, 0, 416, 8),
woosh.Token(woosh.NAME, 'raise', 416, 8, 416, 13),
woosh.Token(woosh.NAME, 'TypeError', 416, 14, 416, 23),
woosh.Token(woosh.OP, '(', 416, 23, 416, 24),
woosh.Token(woosh.STRING, '"Cannot take a Union of no types."', 416, 24, 416, 58),
woosh.Token(woosh.OP, ')', 416, 58, 416, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 59, 417, 0),
woosh.Token(woosh.DEDENT, '    ', 417, 0, 417, 4),
woosh.Token(woosh.NAME, 'if', 417, 4, 417, 6),
woosh.Token(woosh.NAME, 'not', 417, 7, 417, 10),
woosh.Token(woosh.NAME, 'isinstance', 417, 11, 417, 21),
woosh.Token(woosh.OP, '(', 417, 21, 417, 22),
woosh.Token(woosh.NAME, 'parameters', 417, 22, 417, 32),
woosh.Token(woosh.OP, ',', 417, 32, 417, 33),
woosh.Token(woosh.NAME, 'tuple', 417, 34, 417, 39),
woosh.Token(woosh.OP, ')', 417, 39, 417, 40),
woosh.Token(woosh.OP, ':', 417, 40, 417, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 417, 41, 418, 0),
woosh.Token(woosh.INDENT, '        ', 418, 0, 418, 8),
woosh.Token(woosh.NAME, 'parameters', 418, 8, 418, 18),
woosh.Token(woosh.OP, '=', 418, 19, 418, 20),
woosh.Token(woosh.OP, '(', 418, 21, 418, 22),
woosh.Token(woosh.NAME, 'parameters', 418, 22, 418, 32),
woosh.Token(woosh.OP, ',', 418, 32, 418, 33),
woosh.Token(woosh.OP, ')', 418, 33, 418, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 418, 34, 419, 0),
woosh.Token(woosh.DEDENT, '    ', 419, 0, 419, 4),
woosh.Token(woosh.NAME, 'msg', 419, 4, 419, 7),
woosh.Token(woosh.OP, '=', 419, 8, 419, 9),
woosh.Token(woosh.STRING, '"Union[arg, ...]: each arg must be a type."', 419, 10, 419, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 419, 53, 420, 0),
woosh.Token(woosh.NAME, 'parameters', 420, 4, 420, 14),
woosh.Token(woosh.OP, '=', 420, 15, 420, 16),
woosh.Token(woosh.NAME, 'tuple', 420, 17, 420, 22),
woosh.Token(woosh.OP, '(', 420, 22, 420, 23),
woosh.Token(woosh.NAME, '_type_check', 420, 23, 420, 34),
woosh.Token(woosh.OP, '(', 420, 34, 420, 35),
woosh.Token(woosh.NAME, 'p', 420, 35, 420, 36),
woosh.Token(woosh.OP, ',', 420, 36, 420, 37),
woosh.Token(woosh.NAME, 'msg', 420, 38, 420, 41),
woosh.Token(woosh.OP, ')', 420, 41, 420, 42),
woosh.Token(woosh.NAME, 'for', 420, 43, 420, 46),
woosh.Token(woosh.NAME, 'p', 420, 47, 420, 48),
woosh.Token(woosh.NAME, 'in', 420, 49, 420, 51),
woosh.Token(woosh.NAME, 'parameters', 420, 52, 420, 62),
woosh.Token(woosh.OP, ')', 420, 62, 420, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 63, 421, 0),
woosh.Token(woosh.NAME, 'parameters', 421, 4, 421, 14),
woosh.Token(woosh.OP, '=', 421, 15, 421, 16),
woosh.Token(woosh.NAME, '_remove_dups_flatten', 421, 17, 421, 37),
woosh.Token(woosh.OP, '(', 421, 37, 421, 38),
woosh.Token(woosh.NAME, 'parameters', 421, 38, 421, 48),
woosh.Token(woosh.OP, ')', 421, 48, 421, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 49, 422, 0),
woosh.Token(woosh.NAME, 'if', 422, 4, 422, 6),
woosh.Token(woosh.NAME, 'len', 422, 7, 422, 10),
woosh.Token(woosh.OP, '(', 422, 10, 422, 11),
woosh.Token(woosh.NAME, 'parameters', 422, 11, 422, 21),
woosh.Token(woosh.OP, ')', 422, 21, 422, 22),
woosh.Token(woosh.OP, '==', 422, 23, 422, 25),
woosh.Token(woosh.NUMBER, '1', 422, 26, 422, 27),
woosh.Token(woosh.OP, ':', 422, 27, 422, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 28, 423, 0),
woosh.Token(woosh.INDENT, '        ', 423, 0, 423, 8),
woosh.Token(woosh.NAME, 'return', 423, 8, 423, 14),
woosh.Token(woosh.NAME, 'parameters', 423, 15, 423, 25),
woosh.Token(woosh.OP, '[', 423, 25, 423, 26),
woosh.Token(woosh.NUMBER, '0', 423, 26, 423, 27),
woosh.Token(woosh.OP, ']', 423, 27, 423, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 423, 28, 424, 0),
woosh.Token(woosh.DEDENT, '    ', 424, 0, 424, 4),
woosh.Token(woosh.NAME, 'return', 424, 4, 424, 10),
woosh.Token(woosh.NAME, '_UnionGenericAlias', 424, 11, 424, 29),
woosh.Token(woosh.OP, '(', 424, 29, 424, 30),
woosh.Token(woosh.NAME, 'self', 424, 30, 424, 34),
woosh.Token(woosh.OP, ',', 424, 34, 424, 35),
woosh.Token(woosh.NAME, 'parameters', 424, 36, 424, 46),
woosh.Token(woosh.OP, ')', 424, 46, 424, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 47, 425, 0),
woosh.Token(woosh.DEDENT, '', 426, 0, 426, 0),
woosh.Token(woosh.OP, '@', 426, 0, 426, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 426, 1, 426, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 13, 427, 0),
woosh.Token(woosh.NAME, 'def', 427, 0, 427, 3),
woosh.Token(woosh.NAME, 'Optional', 427, 4, 427, 12),
woosh.Token(woosh.OP, '(', 427, 12, 427, 13),
woosh.Token(woosh.NAME, 'self', 427, 13, 427, 17),
woosh.Token(woosh.OP, ',', 427, 17, 427, 18),
woosh.Token(woosh.NAME, 'parameters', 427, 19, 427, 29),
woosh.Token(woosh.OP, ')', 427, 29, 427, 30),
woosh.Token(woosh.OP, ':', 427, 30, 427, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 427, 31, 428, 0),
woosh.Token(woosh.INDENT, '    ', 428, 0, 428, 4),
woosh.Token(woosh.STRING, '"""Optional type.\r\n\r\n    Optional[X] is equivalent to Union[X, None].\r\n    """', 428, 4, 431, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 431, 7, 432, 0),
woosh.Token(woosh.NAME, 'arg', 432, 4, 432, 7),
woosh.Token(woosh.OP, '=', 432, 8, 432, 9),
woosh.Token(woosh.NAME, '_type_check', 432, 10, 432, 21),
woosh.Token(woosh.OP, '(', 432, 21, 432, 22),
woosh.Token(woosh.NAME, 'parameters', 432, 22, 432, 32),
woosh.Token(woosh.OP, ',', 432, 32, 432, 33),
woosh.Token(woosh.STRING, 'f"{self} requires a single type."', 432, 34, 432, 67),
woosh.Token(woosh.OP, ')', 432, 67, 432, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 432, 68, 433, 0),
woosh.Token(woosh.NAME, 'return', 433, 4, 433, 10),
woosh.Token(woosh.NAME, 'Union', 433, 11, 433, 16),
woosh.Token(woosh.OP, '[', 433, 16, 433, 17),
woosh.Token(woosh.NAME, 'arg', 433, 17, 433, 20),
woosh.Token(woosh.OP, ',', 433, 20, 433, 21),
woosh.Token(woosh.NAME, 'type', 433, 22, 433, 26),
woosh.Token(woosh.OP, '(', 433, 26, 433, 27),
woosh.Token(woosh.NAME, 'None', 433, 27, 433, 31),
woosh.Token(woosh.OP, ')', 433, 31, 433, 32),
woosh.Token(woosh.OP, ']', 433, 32, 433, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 33, 434, 0),
woosh.Token(woosh.DEDENT, '', 435, 0, 435, 0),
woosh.Token(woosh.OP, '@', 435, 0, 435, 1),
woosh.Token(woosh.NAME, '_SpecialForm', 435, 1, 435, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 435, 13, 436, 0),
woosh.Token(woosh.NAME, 'def', 436, 0, 436, 3),
woosh.Token(woosh.NAME, 'Literal', 436, 4, 436, 11),
woosh.Token(woosh.OP, '(', 436, 11, 436, 12),
woosh.Token(woosh.NAME, 'self', 436, 12, 436, 16),
woosh.Token(woosh.OP, ',', 436, 16, 436, 17),
woosh.Token(woosh.NAME, 'parameters', 436, 18, 436, 28),
woosh.Token(woosh.OP, ')', 436, 28, 436, 29),
woosh.Token(woosh.OP, ':', 436, 29, 436, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 30, 437, 0),
woosh.Token(woosh.INDENT, '    ', 437, 0, 437, 4),
woosh.Token(woosh.STRING, '"""Special typing form to define literal types (a.k.a. value types).\r\n\r\n    This form can be used to indicate to type checkers that the corresponding\r\n    variable or function parameter has a value equivalent to the provided\r\n    literal (or one of several literals):\r\n\r\n      def validate_simple(data: Any) -> Literal[True]:  # always returns True\r\n          ...\r\n\r\n      MODE = Literal[\'r\', \'rb\', \'w\', \'wb\']\r\n      def open_helper(file: str, mode: MODE) -> str:\r\n          ...\r\n\r\n      open_helper(\'/some/path\', \'r\')  # Passes type check\r\n      open_helper(\'/other/path\', \'typo\')  # Error in type checker\r\n\r\n    Literal[...] cannot be subclassed. At runtime, an arbitrary value\r\n    is allowed as type argument to Literal[...], but type checkers may\r\n    impose restrictions.\r\n    """', 437, 4, 456, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 456, 7, 457, 0),
woosh.Token(woosh.COMMENT, "# There is no '_type_check' call because arguments to Literal[...] are", 457, 4, 457, 74),
woosh.Token(woosh.COMMENT, '# values, not types.', 458, 4, 458, 24),
woosh.Token(woosh.NAME, 'return', 459, 4, 459, 10),
woosh.Token(woosh.NAME, '_GenericAlias', 459, 11, 459, 24),
woosh.Token(woosh.OP, '(', 459, 24, 459, 25),
woosh.Token(woosh.NAME, 'self', 459, 25, 459, 29),
woosh.Token(woosh.OP, ',', 459, 29, 459, 30),
woosh.Token(woosh.NAME, 'parameters', 459, 31, 459, 41),
woosh.Token(woosh.OP, ')', 459, 41, 459, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 459, 42, 460, 0),
woosh.Token(woosh.DEDENT, '', 462, 0, 462, 0),
woosh.Token(woosh.NAME, 'class', 462, 0, 462, 5),
woosh.Token(woosh.NAME, 'ForwardRef', 462, 6, 462, 16),
woosh.Token(woosh.OP, '(', 462, 16, 462, 17),
woosh.Token(woosh.NAME, '_Final', 462, 17, 462, 23),
woosh.Token(woosh.OP, ',', 462, 23, 462, 24),
woosh.Token(woosh.NAME, '_root', 462, 25, 462, 30),
woosh.Token(woosh.OP, '=', 462, 30, 462, 31),
woosh.Token(woosh.NAME, 'True', 462, 31, 462, 35),
woosh.Token(woosh.OP, ')', 462, 35, 462, 36),
woosh.Token(woosh.OP, ':', 462, 36, 462, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 37, 463, 0),
woosh.Token(woosh.INDENT, '    ', 463, 0, 463, 4),
woosh.Token(woosh.STRING, '"""Internal wrapper to hold a forward reference."""', 463, 4, 463, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 55, 464, 0),
woosh.Token(woosh.NAME, '__slots__', 465, 4, 465, 13),
woosh.Token(woosh.OP, '=', 465, 14, 465, 15),
woosh.Token(woosh.OP, '(', 465, 16, 465, 17),
woosh.Token(woosh.STRING, "'__forward_arg__'", 465, 17, 465, 34),
woosh.Token(woosh.OP, ',', 465, 34, 465, 35),
woosh.Token(woosh.STRING, "'__forward_code__'", 465, 36, 465, 54),
woosh.Token(woosh.OP, ',', 465, 54, 465, 55),
woosh.Token(woosh.STRING, "'__forward_evaluated__'", 466, 17, 466, 40),
woosh.Token(woosh.OP, ',', 466, 40, 466, 41),
woosh.Token(woosh.STRING, "'__forward_value__'", 466, 42, 466, 61),
woosh.Token(woosh.OP, ',', 466, 61, 466, 62),
woosh.Token(woosh.STRING, "'__forward_is_argument__'", 467, 17, 467, 42),
woosh.Token(woosh.OP, ')', 467, 42, 467, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 467, 43, 468, 0),
woosh.Token(woosh.NAME, 'def', 469, 4, 469, 7),
woosh.Token(woosh.NAME, '__init__', 469, 8, 469, 16),
woosh.Token(woosh.OP, '(', 469, 16, 469, 17),
woosh.Token(woosh.NAME, 'self', 469, 17, 469, 21),
woosh.Token(woosh.OP, ',', 469, 21, 469, 22),
woosh.Token(woosh.NAME, 'arg', 469, 23, 469, 26),
woosh.Token(woosh.OP, ',', 469, 26, 469, 27),
woosh.Token(woosh.NAME, 'is_argument', 469, 28, 469, 39),
woosh.Token(woosh.OP, '=', 469, 39, 469, 40),
woosh.Token(woosh.NAME, 'True', 469, 40, 469, 44),
woosh.Token(woosh.OP, ')', 469, 44, 469, 45),
woosh.Token(woosh.OP, ':', 469, 45, 469, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 469, 46, 470, 0),
woosh.Token(woosh.INDENT, '        ', 470, 0, 470, 8),
woosh.Token(woosh.NAME, 'if', 470, 8, 470, 10),
woosh.Token(woosh.NAME, 'not', 470, 11, 470, 14),
woosh.Token(woosh.NAME, 'isinstance', 470, 15, 470, 25),
woosh.Token(woosh.OP, '(', 470, 25, 470, 26),
woosh.Token(woosh.NAME, 'arg', 470, 26, 470, 29),
woosh.Token(woosh.OP, ',', 470, 29, 470, 30),
woosh.Token(woosh.NAME, 'str', 470, 31, 470, 34),
woosh.Token(woosh.OP, ')', 470, 34, 470, 35),
woosh.Token(woosh.OP, ':', 470, 35, 470, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 36, 471, 0),
woosh.Token(woosh.INDENT, '            ', 471, 0, 471, 12),
woosh.Token(woosh.NAME, 'raise', 471, 12, 471, 17),
woosh.Token(woosh.NAME, 'TypeError', 471, 18, 471, 27),
woosh.Token(woosh.OP, '(', 471, 27, 471, 28),
woosh.Token(woosh.STRING, 'f"Forward reference must be a string -- got {arg!r}"', 471, 28, 471, 80),
woosh.Token(woosh.OP, ')', 471, 80, 471, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 471, 81, 472, 0),
woosh.Token(woosh.DEDENT, '        ', 472, 0, 472, 8),
woosh.Token(woosh.NAME, 'try', 472, 8, 472, 11),
woosh.Token(woosh.OP, ':', 472, 11, 472, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 472, 12, 473, 0),
woosh.Token(woosh.INDENT, '            ', 473, 0, 473, 12),
woosh.Token(woosh.NAME, 'code', 473, 12, 473, 16),
woosh.Token(woosh.OP, '=', 473, 17, 473, 18),
woosh.Token(woosh.NAME, 'compile', 473, 19, 473, 26),
woosh.Token(woosh.OP, '(', 473, 26, 473, 27),
woosh.Token(woosh.NAME, 'arg', 473, 27, 473, 30),
woosh.Token(woosh.OP, ',', 473, 30, 473, 31),
woosh.Token(woosh.STRING, "'<string>'", 473, 32, 473, 42),
woosh.Token(woosh.OP, ',', 473, 42, 473, 43),
woosh.Token(woosh.STRING, "'eval'", 473, 44, 473, 50),
woosh.Token(woosh.OP, ')', 473, 50, 473, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 473, 51, 474, 0),
woosh.Token(woosh.DEDENT, '        ', 474, 0, 474, 8),
woosh.Token(woosh.NAME, 'except', 474, 8, 474, 14),
woosh.Token(woosh.NAME, 'SyntaxError', 474, 15, 474, 26),
woosh.Token(woosh.OP, ':', 474, 26, 474, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 474, 27, 475, 0),
woosh.Token(woosh.INDENT, '            ', 475, 0, 475, 12),
woosh.Token(woosh.NAME, 'raise', 475, 12, 475, 17),
woosh.Token(woosh.NAME, 'SyntaxError', 475, 18, 475, 29),
woosh.Token(woosh.OP, '(', 475, 29, 475, 30),
woosh.Token(woosh.STRING, 'f"Forward reference must be an expression -- got {arg!r}"', 475, 30, 475, 87),
woosh.Token(woosh.OP, ')', 475, 87, 475, 88),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 88, 476, 0),
woosh.Token(woosh.DEDENT, '        ', 476, 0, 476, 8),
woosh.Token(woosh.NAME, 'self', 476, 8, 476, 12),
woosh.Token(woosh.OP, '.', 476, 12, 476, 13),
woosh.Token(woosh.NAME, '__forward_arg__', 476, 13, 476, 28),
woosh.Token(woosh.OP, '=', 476, 29, 476, 30),
woosh.Token(woosh.NAME, 'arg', 476, 31, 476, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 476, 34, 477, 0),
woosh.Token(woosh.NAME, 'self', 477, 8, 477, 12),
woosh.Token(woosh.OP, '.', 477, 12, 477, 13),
woosh.Token(woosh.NAME, '__forward_code__', 477, 13, 477, 29),
woosh.Token(woosh.OP, '=', 477, 30, 477, 31),
woosh.Token(woosh.NAME, 'code', 477, 32, 477, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 36, 478, 0),
woosh.Token(woosh.NAME, 'self', 478, 8, 478, 12),
woosh.Token(woosh.OP, '.', 478, 12, 478, 13),
woosh.Token(woosh.NAME, '__forward_evaluated__', 478, 13, 478, 34),
woosh.Token(woosh.OP, '=', 478, 35, 478, 36),
woosh.Token(woosh.NAME, 'False', 478, 37, 478, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 42, 479, 0),
woosh.Token(woosh.NAME, 'self', 479, 8, 479, 12),
woosh.Token(woosh.OP, '.', 479, 12, 479, 13),
woosh.Token(woosh.NAME, '__forward_value__', 479, 13, 479, 30),
woosh.Token(woosh.OP, '=', 479, 31, 479, 32),
woosh.Token(woosh.NAME, 'None', 479, 33, 479, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 37, 480, 0),
woosh.Token(woosh.NAME, 'self', 480, 8, 480, 12),
woosh.Token(woosh.OP, '.', 480, 12, 480, 13),
woosh.Token(woosh.NAME, '__forward_is_argument__', 480, 13, 480, 36),
woosh.Token(woosh.OP, '=', 480, 37, 480, 38),
woosh.Token(woosh.NAME, 'is_argument', 480, 39, 480, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 480, 50, 481, 0),
woosh.Token(woosh.DEDENT, '    ', 482, 0, 482, 4),
woosh.Token(woosh.NAME, 'def', 482, 4, 482, 7),
woosh.Token(woosh.NAME, '_evaluate', 482, 8, 482, 17),
woosh.Token(woosh.OP, '(', 482, 17, 482, 18),
woosh.Token(woosh.NAME, 'self', 482, 18, 482, 22),
woosh.Token(woosh.OP, ',', 482, 22, 482, 23),
woosh.Token(woosh.NAME, 'globalns', 482, 24, 482, 32),
woosh.Token(woosh.OP, ',', 482, 32, 482, 33),
woosh.Token(woosh.NAME, 'localns', 482, 34, 482, 41),
woosh.Token(woosh.OP, ',', 482, 41, 482, 42),
woosh.Token(woosh.NAME, 'recursive_guard', 482, 43, 482, 58),
woosh.Token(woosh.OP, ')', 482, 58, 482, 59),
woosh.Token(woosh.OP, ':', 482, 59, 482, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 60, 483, 0),
woosh.Token(woosh.INDENT, '        ', 483, 0, 483, 8),
woosh.Token(woosh.NAME, 'if', 483, 8, 483, 10),
woosh.Token(woosh.NAME, 'self', 483, 11, 483, 15),
woosh.Token(woosh.OP, '.', 483, 15, 483, 16),
woosh.Token(woosh.NAME, '__forward_arg__', 483, 16, 483, 31),
woosh.Token(woosh.NAME, 'in', 483, 32, 483, 34),
woosh.Token(woosh.NAME, 'recursive_guard', 483, 35, 483, 50),
woosh.Token(woosh.OP, ':', 483, 50, 483, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 51, 484, 0),
woosh.Token(woosh.INDENT, '            ', 484, 0, 484, 12),
woosh.Token(woosh.NAME, 'return', 484, 12, 484, 18),
woosh.Token(woosh.NAME, 'self', 484, 19, 484, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 23, 485, 0),
woosh.Token(woosh.DEDENT, '        ', 485, 0, 485, 8),
woosh.Token(woosh.NAME, 'if', 485, 8, 485, 10),
woosh.Token(woosh.NAME, 'not', 485, 11, 485, 14),
woosh.Token(woosh.NAME, 'self', 485, 15, 485, 19),
woosh.Token(woosh.OP, '.', 485, 19, 485, 20),
woosh.Token(woosh.NAME, '__forward_evaluated__', 485, 20, 485, 41),
woosh.Token(woosh.NAME, 'or', 485, 42, 485, 44),
woosh.Token(woosh.NAME, 'localns', 485, 45, 485, 52),
woosh.Token(woosh.NAME, 'is', 485, 53, 485, 55),
woosh.Token(woosh.NAME, 'not', 485, 56, 485, 59),
woosh.Token(woosh.NAME, 'globalns', 485, 60, 485, 68),
woosh.Token(woosh.OP, ':', 485, 68, 485, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 69, 486, 0),
woosh.Token(woosh.INDENT, '            ', 486, 0, 486, 12),
woosh.Token(woosh.NAME, 'if', 486, 12, 486, 14),
woosh.Token(woosh.NAME, 'globalns', 486, 15, 486, 23),
woosh.Token(woosh.NAME, 'is', 486, 24, 486, 26),
woosh.Token(woosh.NAME, 'None', 486, 27, 486, 31),
woosh.Token(woosh.NAME, 'and', 486, 32, 486, 35),
woosh.Token(woosh.NAME, 'localns', 486, 36, 486, 43),
woosh.Token(woosh.NAME, 'is', 486, 44, 486, 46),
woosh.Token(woosh.NAME, 'None', 486, 47, 486, 51),
woosh.Token(woosh.OP, ':', 486, 51, 486, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 52, 487, 0),
woosh.Token(woosh.INDENT, '                ', 487, 0, 487, 16),
woosh.Token(woosh.NAME, 'globalns', 487, 16, 487, 24),
woosh.Token(woosh.OP, '=', 487, 25, 487, 26),
woosh.Token(woosh.NAME, 'localns', 487, 27, 487, 34),
woosh.Token(woosh.OP, '=', 487, 35, 487, 36),
woosh.Token(woosh.OP, '{', 487, 37, 487, 38),
woosh.Token(woosh.OP, '}', 487, 38, 487, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 39, 488, 0),
woosh.Token(woosh.DEDENT, '            ', 488, 0, 488, 12),
woosh.Token(woosh.NAME, 'elif', 488, 12, 488, 16),
woosh.Token(woosh.NAME, 'globalns', 488, 17, 488, 25),
woosh.Token(woosh.NAME, 'is', 488, 26, 488, 28),
woosh.Token(woosh.NAME, 'None', 488, 29, 488, 33),
woosh.Token(woosh.OP, ':', 488, 33, 488, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 488, 34, 489, 0),
woosh.Token(woosh.INDENT, '                ', 489, 0, 489, 16),
woosh.Token(woosh.NAME, 'globalns', 489, 16, 489, 24),
woosh.Token(woosh.OP, '=', 489, 25, 489, 26),
woosh.Token(woosh.NAME, 'localns', 489, 27, 489, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 34, 490, 0),
woosh.Token(woosh.DEDENT, '            ', 490, 0, 490, 12),
woosh.Token(woosh.NAME, 'elif', 490, 12, 490, 16),
woosh.Token(woosh.NAME, 'localns', 490, 17, 490, 24),
woosh.Token(woosh.NAME, 'is', 490, 25, 490, 27),
woosh.Token(woosh.NAME, 'None', 490, 28, 490, 32),
woosh.Token(woosh.OP, ':', 490, 32, 490, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 33, 491, 0),
woosh.Token(woosh.INDENT, '                ', 491, 0, 491, 16),
woosh.Token(woosh.NAME, 'localns', 491, 16, 491, 23),
woosh.Token(woosh.OP, '=', 491, 24, 491, 25),
woosh.Token(woosh.NAME, 'globalns', 491, 26, 491, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 34, 492, 0),
woosh.Token(woosh.DEDENT, '            ', 492, 0, 492, 12),
woosh.Token(woosh.NAME, 'type_', 492, 12, 492, 17),
woosh.Token(woosh.OP, '=', 492, 18, 492, 19),
woosh.Token(woosh.NAME, '_type_check', 492, 19, 492, 30),
woosh.Token(woosh.OP, '(', 492, 30, 492, 31),
woosh.Token(woosh.NAME, 'eval', 493, 16, 493, 20),
woosh.Token(woosh.OP, '(', 493, 20, 493, 21),
woosh.Token(woosh.NAME, 'self', 493, 21, 493, 25),
woosh.Token(woosh.OP, '.', 493, 25, 493, 26),
woosh.Token(woosh.NAME, '__forward_code__', 493, 26, 493, 42),
woosh.Token(woosh.OP, ',', 493, 42, 493, 43),
woosh.Token(woosh.NAME, 'globalns', 493, 44, 493, 52),
woosh.Token(woosh.OP, ',', 493, 52, 493, 53),
woosh.Token(woosh.NAME, 'localns', 493, 54, 493, 61),
woosh.Token(woosh.OP, ')', 493, 61, 493, 62),
woosh.Token(woosh.OP, ',', 493, 62, 493, 63),
woosh.Token(woosh.STRING, '"Forward references must evaluate to types."', 494, 16, 494, 60),
woosh.Token(woosh.OP, ',', 494, 60, 494, 61),
woosh.Token(woosh.NAME, 'is_argument', 495, 16, 495, 27),
woosh.Token(woosh.OP, '=', 495, 27, 495, 28),
woosh.Token(woosh.NAME, 'self', 495, 28, 495, 32),
woosh.Token(woosh.OP, '.', 495, 32, 495, 33),
woosh.Token(woosh.NAME, '__forward_is_argument__', 495, 33, 495, 56),
woosh.Token(woosh.OP, ',', 495, 56, 495, 57),
woosh.Token(woosh.OP, ')', 496, 12, 496, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 496, 13, 497, 0),
woosh.Token(woosh.NAME, 'self', 497, 12, 497, 16),
woosh.Token(woosh.OP, '.', 497, 16, 497, 17),
woosh.Token(woosh.NAME, '__forward_value__', 497, 17, 497, 34),
woosh.Token(woosh.OP, '=', 497, 35, 497, 36),
woosh.Token(woosh.NAME, '_eval_type', 497, 37, 497, 47),
woosh.Token(woosh.OP, '(', 497, 47, 497, 48),
woosh.Token(woosh.NAME, 'type_', 498, 16, 498, 21),
woosh.Token(woosh.OP, ',', 498, 21, 498, 22),
woosh.Token(woosh.NAME, 'globalns', 498, 23, 498, 31),
woosh.Token(woosh.OP, ',', 498, 31, 498, 32),
woosh.Token(woosh.NAME, 'localns', 498, 33, 498, 40),
woosh.Token(woosh.OP, ',', 498, 40, 498, 41),
woosh.Token(woosh.NAME, 'recursive_guard', 498, 42, 498, 57),
woosh.Token(woosh.OP, '|', 498, 58, 498, 59),
woosh.Token(woosh.OP, '{', 498, 60, 498, 61),
woosh.Token(woosh.NAME, 'self', 498, 61, 498, 65),
woosh.Token(woosh.OP, '.', 498, 65, 498, 66),
woosh.Token(woosh.NAME, '__forward_arg__', 498, 66, 498, 81),
woosh.Token(woosh.OP, '}', 498, 81, 498, 82),
woosh.Token(woosh.OP, ')', 499, 12, 499, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 13, 500, 0),
woosh.Token(woosh.NAME, 'self', 500, 12, 500, 16),
woosh.Token(woosh.OP, '.', 500, 16, 500, 17),
woosh.Token(woosh.NAME, '__forward_evaluated__', 500, 17, 500, 38),
woosh.Token(woosh.OP, '=', 500, 39, 500, 40),
woosh.Token(woosh.NAME, 'True', 500, 41, 500, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 45, 501, 0),
woosh.Token(woosh.DEDENT, '        ', 501, 0, 501, 8),
woosh.Token(woosh.NAME, 'return', 501, 8, 501, 14),
woosh.Token(woosh.NAME, 'self', 501, 15, 501, 19),
woosh.Token(woosh.OP, '.', 501, 19, 501, 20),
woosh.Token(woosh.NAME, '__forward_value__', 501, 20, 501, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 37, 502, 0),
woosh.Token(woosh.DEDENT, '    ', 503, 0, 503, 4),
woosh.Token(woosh.NAME, 'def', 503, 4, 503, 7),
woosh.Token(woosh.NAME, '__eq__', 503, 8, 503, 14),
woosh.Token(woosh.OP, '(', 503, 14, 503, 15),
woosh.Token(woosh.NAME, 'self', 503, 15, 503, 19),
woosh.Token(woosh.OP, ',', 503, 19, 503, 20),
woosh.Token(woosh.NAME, 'other', 503, 21, 503, 26),
woosh.Token(woosh.OP, ')', 503, 26, 503, 27),
woosh.Token(woosh.OP, ':', 503, 27, 503, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 503, 28, 504, 0),
woosh.Token(woosh.INDENT, '        ', 504, 0, 504, 8),
woosh.Token(woosh.NAME, 'if', 504, 8, 504, 10),
woosh.Token(woosh.NAME, 'not', 504, 11, 504, 14),
woosh.Token(woosh.NAME, 'isinstance', 504, 15, 504, 25),
woosh.Token(woosh.OP, '(', 504, 25, 504, 26),
woosh.Token(woosh.NAME, 'other', 504, 26, 504, 31),
woosh.Token(woosh.OP, ',', 504, 31, 504, 32),
woosh.Token(woosh.NAME, 'ForwardRef', 504, 33, 504, 43),
woosh.Token(woosh.OP, ')', 504, 43, 504, 44),
woosh.Token(woosh.OP, ':', 504, 44, 504, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 504, 45, 505, 0),
woosh.Token(woosh.INDENT, '            ', 505, 0, 505, 12),
woosh.Token(woosh.NAME, 'return', 505, 12, 505, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 505, 19, 505, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 33, 506, 0),
woosh.Token(woosh.DEDENT, '        ', 506, 0, 506, 8),
woosh.Token(woosh.NAME, 'if', 506, 8, 506, 10),
woosh.Token(woosh.NAME, 'self', 506, 11, 506, 15),
woosh.Token(woosh.OP, '.', 506, 15, 506, 16),
woosh.Token(woosh.NAME, '__forward_evaluated__', 506, 16, 506, 37),
woosh.Token(woosh.NAME, 'and', 506, 38, 506, 41),
woosh.Token(woosh.NAME, 'other', 506, 42, 506, 47),
woosh.Token(woosh.OP, '.', 506, 47, 506, 48),
woosh.Token(woosh.NAME, '__forward_evaluated__', 506, 48, 506, 69),
woosh.Token(woosh.OP, ':', 506, 69, 506, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 506, 70, 507, 0),
woosh.Token(woosh.INDENT, '            ', 507, 0, 507, 12),
woosh.Token(woosh.NAME, 'return', 507, 12, 507, 18),
woosh.Token(woosh.OP, '(', 507, 19, 507, 20),
woosh.Token(woosh.NAME, 'self', 507, 20, 507, 24),
woosh.Token(woosh.OP, '.', 507, 24, 507, 25),
woosh.Token(woosh.NAME, '__forward_arg__', 507, 25, 507, 40),
woosh.Token(woosh.OP, '==', 507, 41, 507, 43),
woosh.Token(woosh.NAME, 'other', 507, 44, 507, 49),
woosh.Token(woosh.OP, '.', 507, 49, 507, 50),
woosh.Token(woosh.NAME, '__forward_arg__', 507, 50, 507, 65),
woosh.Token(woosh.NAME, 'and', 507, 66, 507, 69),
woosh.Token(woosh.NAME, 'self', 508, 20, 508, 24),
woosh.Token(woosh.OP, '.', 508, 24, 508, 25),
woosh.Token(woosh.NAME, '__forward_value__', 508, 25, 508, 42),
woosh.Token(woosh.OP, '==', 508, 43, 508, 45),
woosh.Token(woosh.NAME, 'other', 508, 46, 508, 51),
woosh.Token(woosh.OP, '.', 508, 51, 508, 52),
woosh.Token(woosh.NAME, '__forward_value__', 508, 52, 508, 69),
woosh.Token(woosh.OP, ')', 508, 69, 508, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 508, 70, 509, 0),
woosh.Token(woosh.DEDENT, '        ', 509, 0, 509, 8),
woosh.Token(woosh.NAME, 'return', 509, 8, 509, 14),
woosh.Token(woosh.NAME, 'self', 509, 15, 509, 19),
woosh.Token(woosh.OP, '.', 509, 19, 509, 20),
woosh.Token(woosh.NAME, '__forward_arg__', 509, 20, 509, 35),
woosh.Token(woosh.OP, '==', 509, 36, 509, 38),
woosh.Token(woosh.NAME, 'other', 509, 39, 509, 44),
woosh.Token(woosh.OP, '.', 509, 44, 509, 45),
woosh.Token(woosh.NAME, '__forward_arg__', 509, 45, 509, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 509, 60, 510, 0),
woosh.Token(woosh.DEDENT, '    ', 511, 0, 511, 4),
woosh.Token(woosh.NAME, 'def', 511, 4, 511, 7),
woosh.Token(woosh.NAME, '__hash__', 511, 8, 511, 16),
woosh.Token(woosh.OP, '(', 511, 16, 511, 17),
woosh.Token(woosh.NAME, 'self', 511, 17, 511, 21),
woosh.Token(woosh.OP, ')', 511, 21, 511, 22),
woosh.Token(woosh.OP, ':', 511, 22, 511, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 23, 512, 0),
woosh.Token(woosh.INDENT, '        ', 512, 0, 512, 8),
woosh.Token(woosh.NAME, 'return', 512, 8, 512, 14),
woosh.Token(woosh.NAME, 'hash', 512, 15, 512, 19),
woosh.Token(woosh.OP, '(', 512, 19, 512, 20),
woosh.Token(woosh.NAME, 'self', 512, 20, 512, 24),
woosh.Token(woosh.OP, '.', 512, 24, 512, 25),
woosh.Token(woosh.NAME, '__forward_arg__', 512, 25, 512, 40),
woosh.Token(woosh.OP, ')', 512, 40, 512, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 512, 41, 513, 0),
woosh.Token(woosh.DEDENT, '    ', 514, 0, 514, 4),
woosh.Token(woosh.NAME, 'def', 514, 4, 514, 7),
woosh.Token(woosh.NAME, '__repr__', 514, 8, 514, 16),
woosh.Token(woosh.OP, '(', 514, 16, 514, 17),
woosh.Token(woosh.NAME, 'self', 514, 17, 514, 21),
woosh.Token(woosh.OP, ')', 514, 21, 514, 22),
woosh.Token(woosh.OP, ':', 514, 22, 514, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 23, 515, 0),
woosh.Token(woosh.INDENT, '        ', 515, 0, 515, 8),
woosh.Token(woosh.NAME, 'return', 515, 8, 515, 14),
woosh.Token(woosh.STRING, "f'ForwardRef({self.__forward_arg__!r})'", 515, 15, 515, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 515, 54, 516, 0),
woosh.Token(woosh.DEDENT, '', 518, 0, 518, 0),
woosh.Token(woosh.DEDENT, '', 518, 0, 518, 0),
woosh.Token(woosh.NAME, 'class', 518, 0, 518, 5),
woosh.Token(woosh.NAME, 'TypeVar', 518, 6, 518, 13),
woosh.Token(woosh.OP, '(', 518, 13, 518, 14),
woosh.Token(woosh.NAME, '_Final', 518, 14, 518, 20),
woosh.Token(woosh.OP, ',', 518, 20, 518, 21),
woosh.Token(woosh.NAME, '_Immutable', 518, 22, 518, 32),
woosh.Token(woosh.OP, ',', 518, 32, 518, 33),
woosh.Token(woosh.NAME, '_root', 518, 34, 518, 39),
woosh.Token(woosh.OP, '=', 518, 39, 518, 40),
woosh.Token(woosh.NAME, 'True', 518, 40, 518, 44),
woosh.Token(woosh.OP, ')', 518, 44, 518, 45),
woosh.Token(woosh.OP, ':', 518, 45, 518, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 518, 46, 519, 0),
woosh.Token(woosh.INDENT, '    ', 519, 0, 519, 4),
woosh.Token(woosh.STRING, '"""Type variable.\r\n\r\n    Usage::\r\n\r\n      T = TypeVar(\'T\')  # Can be anything\r\n      A = TypeVar(\'A\', str, bytes)  # Must be str or bytes\r\n\r\n    Type variables exist primarily for the benefit of static type\r\n    checkers.  They serve as the parameters for generic types as well\r\n    as for generic function definitions.  See class Generic for more\r\n    information on generic types.  Generic functions work as follows:\r\n\r\n      def repeat(x: T, n: int) -> List[T]:\r\n          \'\'\'Return a list containing n references to x.\'\'\'\r\n          return [x]*n\r\n\r\n      def longest(x: A, y: A) -> A:\r\n          \'\'\'Return the longest of two strings.\'\'\'\r\n          return x if len(x) >= len(y) else y\r\n\r\n    The latter example\'s signature is essentially the overloading\r\n    of (str, str) -> str and (bytes, bytes) -> bytes.  Also note\r\n    that if the arguments are instances of some subclass of str,\r\n    the return type is still plain str.\r\n\r\n    At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.\r\n\r\n    Type variables defined with covariant=True or contravariant=True\r\n    can be used to declare covariant or contravariant generic types.\r\n    See PEP 484 for more details. By default generic types are invariant\r\n    in all type variables.\r\n\r\n    Type variables can be introspected. e.g.:\r\n\r\n      T.__name__ == \'T\'\r\n      T.__constraints__ == ()\r\n      T.__covariant__ == False\r\n      T.__contravariant__ = False\r\n      A.__constraints__ == (str, bytes)\r\n\r\n    Note that only type variables defined in global scope can be pickled.\r\n    """', 519, 4, 560, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 560, 7, 561, 0),
woosh.Token(woosh.NAME, '__slots__', 562, 4, 562, 13),
woosh.Token(woosh.OP, '=', 562, 14, 562, 15),
woosh.Token(woosh.OP, '(', 562, 16, 562, 17),
woosh.Token(woosh.STRING, "'__name__'", 562, 17, 562, 27),
woosh.Token(woosh.OP, ',', 562, 27, 562, 28),
woosh.Token(woosh.STRING, "'__bound__'", 562, 29, 562, 40),
woosh.Token(woosh.OP, ',', 562, 40, 562, 41),
woosh.Token(woosh.STRING, "'__constraints__'", 562, 42, 562, 59),
woosh.Token(woosh.OP, ',', 562, 59, 562, 60),
woosh.Token(woosh.STRING, "'__covariant__'", 563, 17, 563, 32),
woosh.Token(woosh.OP, ',', 563, 32, 563, 33),
woosh.Token(woosh.STRING, "'__contravariant__'", 563, 34, 563, 53),
woosh.Token(woosh.OP, ',', 563, 53, 563, 54),
woosh.Token(woosh.STRING, "'__dict__'", 563, 55, 563, 65),
woosh.Token(woosh.OP, ')', 563, 65, 563, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 563, 66, 564, 0),
woosh.Token(woosh.NAME, 'def', 565, 4, 565, 7),
woosh.Token(woosh.NAME, '__init__', 565, 8, 565, 16),
woosh.Token(woosh.OP, '(', 565, 16, 565, 17),
woosh.Token(woosh.NAME, 'self', 565, 17, 565, 21),
woosh.Token(woosh.OP, ',', 565, 21, 565, 22),
woosh.Token(woosh.NAME, 'name', 565, 23, 565, 27),
woosh.Token(woosh.OP, ',', 565, 27, 565, 28),
woosh.Token(woosh.OP, '*', 565, 29, 565, 30),
woosh.Token(woosh.NAME, 'constraints', 565, 30, 565, 41),
woosh.Token(woosh.OP, ',', 565, 41, 565, 42),
woosh.Token(woosh.NAME, 'bound', 565, 43, 565, 48),
woosh.Token(woosh.OP, '=', 565, 48, 565, 49),
woosh.Token(woosh.NAME, 'None', 565, 49, 565, 53),
woosh.Token(woosh.OP, ',', 565, 53, 565, 54),
woosh.Token(woosh.NAME, 'covariant', 566, 17, 566, 26),
woosh.Token(woosh.OP, '=', 566, 26, 566, 27),
woosh.Token(woosh.NAME, 'False', 566, 27, 566, 32),
woosh.Token(woosh.OP, ',', 566, 32, 566, 33),
woosh.Token(woosh.NAME, 'contravariant', 566, 34, 566, 47),
woosh.Token(woosh.OP, '=', 566, 47, 566, 48),
woosh.Token(woosh.NAME, 'False', 566, 48, 566, 53),
woosh.Token(woosh.OP, ')', 566, 53, 566, 54),
woosh.Token(woosh.OP, ':', 566, 54, 566, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 566, 55, 567, 0),
woosh.Token(woosh.INDENT, '        ', 567, 0, 567, 8),
woosh.Token(woosh.NAME, 'self', 567, 8, 567, 12),
woosh.Token(woosh.OP, '.', 567, 12, 567, 13),
woosh.Token(woosh.NAME, '__name__', 567, 13, 567, 21),
woosh.Token(woosh.OP, '=', 567, 22, 567, 23),
woosh.Token(woosh.NAME, 'name', 567, 24, 567, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 567, 28, 568, 0),
woosh.Token(woosh.NAME, 'if', 568, 8, 568, 10),
woosh.Token(woosh.NAME, 'covariant', 568, 11, 568, 20),
woosh.Token(woosh.NAME, 'and', 568, 21, 568, 24),
woosh.Token(woosh.NAME, 'contravariant', 568, 25, 568, 38),
woosh.Token(woosh.OP, ':', 568, 38, 568, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 39, 569, 0),
woosh.Token(woosh.INDENT, '            ', 569, 0, 569, 12),
woosh.Token(woosh.NAME, 'raise', 569, 12, 569, 17),
woosh.Token(woosh.NAME, 'ValueError', 569, 18, 569, 28),
woosh.Token(woosh.OP, '(', 569, 28, 569, 29),
woosh.Token(woosh.STRING, '"Bivariant types are not supported."', 569, 29, 569, 65),
woosh.Token(woosh.OP, ')', 569, 65, 569, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 569, 66, 570, 0),
woosh.Token(woosh.DEDENT, '        ', 570, 0, 570, 8),
woosh.Token(woosh.NAME, 'self', 570, 8, 570, 12),
woosh.Token(woosh.OP, '.', 570, 12, 570, 13),
woosh.Token(woosh.NAME, '__covariant__', 570, 13, 570, 26),
woosh.Token(woosh.OP, '=', 570, 27, 570, 28),
woosh.Token(woosh.NAME, 'bool', 570, 29, 570, 33),
woosh.Token(woosh.OP, '(', 570, 33, 570, 34),
woosh.Token(woosh.NAME, 'covariant', 570, 34, 570, 43),
woosh.Token(woosh.OP, ')', 570, 43, 570, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 570, 44, 571, 0),
woosh.Token(woosh.NAME, 'self', 571, 8, 571, 12),
woosh.Token(woosh.OP, '.', 571, 12, 571, 13),
woosh.Token(woosh.NAME, '__contravariant__', 571, 13, 571, 30),
woosh.Token(woosh.OP, '=', 571, 31, 571, 32),
woosh.Token(woosh.NAME, 'bool', 571, 33, 571, 37),
woosh.Token(woosh.OP, '(', 571, 37, 571, 38),
woosh.Token(woosh.NAME, 'contravariant', 571, 38, 571, 51),
woosh.Token(woosh.OP, ')', 571, 51, 571, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 571, 52, 572, 0),
woosh.Token(woosh.NAME, 'if', 572, 8, 572, 10),
woosh.Token(woosh.NAME, 'constraints', 572, 11, 572, 22),
woosh.Token(woosh.NAME, 'and', 572, 23, 572, 26),
woosh.Token(woosh.NAME, 'bound', 572, 27, 572, 32),
woosh.Token(woosh.NAME, 'is', 572, 33, 572, 35),
woosh.Token(woosh.NAME, 'not', 572, 36, 572, 39),
woosh.Token(woosh.NAME, 'None', 572, 40, 572, 44),
woosh.Token(woosh.OP, ':', 572, 44, 572, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 572, 45, 573, 0),
woosh.Token(woosh.INDENT, '            ', 573, 0, 573, 12),
woosh.Token(woosh.NAME, 'raise', 573, 12, 573, 17),
woosh.Token(woosh.NAME, 'TypeError', 573, 18, 573, 27),
woosh.Token(woosh.OP, '(', 573, 27, 573, 28),
woosh.Token(woosh.STRING, '"Constraints cannot be combined with bound=..."', 573, 28, 573, 75),
woosh.Token(woosh.OP, ')', 573, 75, 573, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 76, 574, 0),
woosh.Token(woosh.DEDENT, '        ', 574, 0, 574, 8),
woosh.Token(woosh.NAME, 'if', 574, 8, 574, 10),
woosh.Token(woosh.NAME, 'constraints', 574, 11, 574, 22),
woosh.Token(woosh.NAME, 'and', 574, 23, 574, 26),
woosh.Token(woosh.NAME, 'len', 574, 27, 574, 30),
woosh.Token(woosh.OP, '(', 574, 30, 574, 31),
woosh.Token(woosh.NAME, 'constraints', 574, 31, 574, 42),
woosh.Token(woosh.OP, ')', 574, 42, 574, 43),
woosh.Token(woosh.OP, '==', 574, 44, 574, 46),
woosh.Token(woosh.NUMBER, '1', 574, 47, 574, 48),
woosh.Token(woosh.OP, ':', 574, 48, 574, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 574, 49, 575, 0),
woosh.Token(woosh.INDENT, '            ', 575, 0, 575, 12),
woosh.Token(woosh.NAME, 'raise', 575, 12, 575, 17),
woosh.Token(woosh.NAME, 'TypeError', 575, 18, 575, 27),
woosh.Token(woosh.OP, '(', 575, 27, 575, 28),
woosh.Token(woosh.STRING, '"A single constraint is not allowed"', 575, 28, 575, 64),
woosh.Token(woosh.OP, ')', 575, 64, 575, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 575, 65, 576, 0),
woosh.Token(woosh.DEDENT, '        ', 576, 0, 576, 8),
woosh.Token(woosh.NAME, 'msg', 576, 8, 576, 11),
woosh.Token(woosh.OP, '=', 576, 12, 576, 13),
woosh.Token(woosh.STRING, '"TypeVar(name, constraint, ...): constraints must be types."', 576, 14, 576, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 74, 577, 0),
woosh.Token(woosh.NAME, 'self', 577, 8, 577, 12),
woosh.Token(woosh.OP, '.', 577, 12, 577, 13),
woosh.Token(woosh.NAME, '__constraints__', 577, 13, 577, 28),
woosh.Token(woosh.OP, '=', 577, 29, 577, 30),
woosh.Token(woosh.NAME, 'tuple', 577, 31, 577, 36),
woosh.Token(woosh.OP, '(', 577, 36, 577, 37),
woosh.Token(woosh.NAME, '_type_check', 577, 37, 577, 48),
woosh.Token(woosh.OP, '(', 577, 48, 577, 49),
woosh.Token(woosh.NAME, 't', 577, 49, 577, 50),
woosh.Token(woosh.OP, ',', 577, 50, 577, 51),
woosh.Token(woosh.NAME, 'msg', 577, 52, 577, 55),
woosh.Token(woosh.OP, ')', 577, 55, 577, 56),
woosh.Token(woosh.NAME, 'for', 577, 57, 577, 60),
woosh.Token(woosh.NAME, 't', 577, 61, 577, 62),
woosh.Token(woosh.NAME, 'in', 577, 63, 577, 65),
woosh.Token(woosh.NAME, 'constraints', 577, 66, 577, 77),
woosh.Token(woosh.OP, ')', 577, 77, 577, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 577, 78, 578, 0),
woosh.Token(woosh.NAME, 'if', 578, 8, 578, 10),
woosh.Token(woosh.NAME, 'bound', 578, 11, 578, 16),
woosh.Token(woosh.OP, ':', 578, 16, 578, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 578, 17, 579, 0),
woosh.Token(woosh.INDENT, '            ', 579, 0, 579, 12),
woosh.Token(woosh.NAME, 'self', 579, 12, 579, 16),
woosh.Token(woosh.OP, '.', 579, 16, 579, 17),
woosh.Token(woosh.NAME, '__bound__', 579, 17, 579, 26),
woosh.Token(woosh.OP, '=', 579, 27, 579, 28),
woosh.Token(woosh.NAME, '_type_check', 579, 29, 579, 40),
woosh.Token(woosh.OP, '(', 579, 40, 579, 41),
woosh.Token(woosh.NAME, 'bound', 579, 41, 579, 46),
woosh.Token(woosh.OP, ',', 579, 46, 579, 47),
woosh.Token(woosh.STRING, '"Bound must be a type."', 579, 48, 579, 71),
woosh.Token(woosh.OP, ')', 579, 71, 579, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 72, 580, 0),
woosh.Token(woosh.DEDENT, '        ', 580, 0, 580, 8),
woosh.Token(woosh.NAME, 'else', 580, 8, 580, 12),
woosh.Token(woosh.OP, ':', 580, 12, 580, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 580, 13, 581, 0),
woosh.Token(woosh.INDENT, '            ', 581, 0, 581, 12),
woosh.Token(woosh.NAME, 'self', 581, 12, 581, 16),
woosh.Token(woosh.OP, '.', 581, 16, 581, 17),
woosh.Token(woosh.NAME, '__bound__', 581, 17, 581, 26),
woosh.Token(woosh.OP, '=', 581, 27, 581, 28),
woosh.Token(woosh.NAME, 'None', 581, 29, 581, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 33, 582, 0),
woosh.Token(woosh.DEDENT, '        ', 582, 0, 582, 8),
woosh.Token(woosh.NAME, 'try', 582, 8, 582, 11),
woosh.Token(woosh.OP, ':', 582, 11, 582, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 12, 583, 0),
woosh.Token(woosh.INDENT, '            ', 583, 0, 583, 12),
woosh.Token(woosh.NAME, 'def_mod', 583, 12, 583, 19),
woosh.Token(woosh.OP, '=', 583, 20, 583, 21),
woosh.Token(woosh.NAME, 'sys', 583, 22, 583, 25),
woosh.Token(woosh.OP, '.', 583, 25, 583, 26),
woosh.Token(woosh.NAME, '_getframe', 583, 26, 583, 35),
woosh.Token(woosh.OP, '(', 583, 35, 583, 36),
woosh.Token(woosh.NUMBER, '1', 583, 36, 583, 37),
woosh.Token(woosh.OP, ')', 583, 37, 583, 38),
woosh.Token(woosh.OP, '.', 583, 38, 583, 39),
woosh.Token(woosh.NAME, 'f_globals', 583, 39, 583, 48),
woosh.Token(woosh.OP, '.', 583, 48, 583, 49),
woosh.Token(woosh.NAME, 'get', 583, 49, 583, 52),
woosh.Token(woosh.OP, '(', 583, 52, 583, 53),
woosh.Token(woosh.STRING, "'__name__'", 583, 53, 583, 63),
woosh.Token(woosh.OP, ',', 583, 63, 583, 64),
woosh.Token(woosh.STRING, "'__main__'", 583, 65, 583, 75),
woosh.Token(woosh.OP, ')', 583, 75, 583, 76),
woosh.Token(woosh.COMMENT, '# for pickling', 583, 78, 583, 92),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 92, 584, 0),
woosh.Token(woosh.DEDENT, '        ', 584, 0, 584, 8),
woosh.Token(woosh.NAME, 'except', 584, 8, 584, 14),
woosh.Token(woosh.OP, '(', 584, 15, 584, 16),
woosh.Token(woosh.NAME, 'AttributeError', 584, 16, 584, 30),
woosh.Token(woosh.OP, ',', 584, 30, 584, 31),
woosh.Token(woosh.NAME, 'ValueError', 584, 32, 584, 42),
woosh.Token(woosh.OP, ')', 584, 42, 584, 43),
woosh.Token(woosh.OP, ':', 584, 43, 584, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 584, 44, 585, 0),
woosh.Token(woosh.INDENT, '            ', 585, 0, 585, 12),
woosh.Token(woosh.NAME, 'def_mod', 585, 12, 585, 19),
woosh.Token(woosh.OP, '=', 585, 20, 585, 21),
woosh.Token(woosh.NAME, 'None', 585, 22, 585, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 26, 586, 0),
woosh.Token(woosh.DEDENT, '        ', 586, 0, 586, 8),
woosh.Token(woosh.NAME, 'if', 586, 8, 586, 10),
woosh.Token(woosh.NAME, 'def_mod', 586, 11, 586, 18),
woosh.Token(woosh.OP, '!=', 586, 19, 586, 21),
woosh.Token(woosh.STRING, "'typing'", 586, 22, 586, 30),
woosh.Token(woosh.OP, ':', 586, 30, 586, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 586, 31, 587, 0),
woosh.Token(woosh.INDENT, '            ', 587, 0, 587, 12),
woosh.Token(woosh.NAME, 'self', 587, 12, 587, 16),
woosh.Token(woosh.OP, '.', 587, 16, 587, 17),
woosh.Token(woosh.NAME, '__module__', 587, 17, 587, 27),
woosh.Token(woosh.OP, '=', 587, 28, 587, 29),
woosh.Token(woosh.NAME, 'def_mod', 587, 30, 587, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 37, 588, 0),
woosh.Token(woosh.DEDENT, '    ', 589, 0, 589, 4),
woosh.Token(woosh.DEDENT, '', 589, 4, 589, 4),
woosh.Token(woosh.NAME, 'def', 589, 4, 589, 7),
woosh.Token(woosh.NAME, '__or__', 589, 8, 589, 14),
woosh.Token(woosh.OP, '(', 589, 14, 589, 15),
woosh.Token(woosh.NAME, 'self', 589, 15, 589, 19),
woosh.Token(woosh.OP, ',', 589, 19, 589, 20),
woosh.Token(woosh.NAME, 'right', 589, 21, 589, 26),
woosh.Token(woosh.OP, ')', 589, 26, 589, 27),
woosh.Token(woosh.OP, ':', 589, 27, 589, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 28, 590, 0),
woosh.Token(woosh.INDENT, '        ', 590, 0, 590, 8),
woosh.Token(woosh.NAME, 'return', 590, 8, 590, 14),
woosh.Token(woosh.NAME, 'Union', 590, 15, 590, 20),
woosh.Token(woosh.OP, '[', 590, 20, 590, 21),
woosh.Token(woosh.NAME, 'self', 590, 21, 590, 25),
woosh.Token(woosh.OP, ',', 590, 25, 590, 26),
woosh.Token(woosh.NAME, 'right', 590, 27, 590, 32),
woosh.Token(woosh.OP, ']', 590, 32, 590, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 33, 591, 0),
woosh.Token(woosh.DEDENT, '    ', 592, 0, 592, 4),
woosh.Token(woosh.NAME, 'def', 592, 4, 592, 7),
woosh.Token(woosh.NAME, '__ror__', 592, 8, 592, 15),
woosh.Token(woosh.OP, '(', 592, 15, 592, 16),
woosh.Token(woosh.NAME, 'self', 592, 16, 592, 20),
woosh.Token(woosh.OP, ',', 592, 20, 592, 21),
woosh.Token(woosh.NAME, 'right', 592, 22, 592, 27),
woosh.Token(woosh.OP, ')', 592, 27, 592, 28),
woosh.Token(woosh.OP, ':', 592, 28, 592, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 29, 593, 0),
woosh.Token(woosh.INDENT, '        ', 593, 0, 593, 8),
woosh.Token(woosh.NAME, 'return', 593, 8, 593, 14),
woosh.Token(woosh.NAME, 'Union', 593, 15, 593, 20),
woosh.Token(woosh.OP, '[', 593, 20, 593, 21),
woosh.Token(woosh.NAME, 'self', 593, 21, 593, 25),
woosh.Token(woosh.OP, ',', 593, 25, 593, 26),
woosh.Token(woosh.NAME, 'right', 593, 27, 593, 32),
woosh.Token(woosh.OP, ']', 593, 32, 593, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 593, 33, 594, 0),
woosh.Token(woosh.DEDENT, '    ', 595, 0, 595, 4),
woosh.Token(woosh.NAME, 'def', 595, 4, 595, 7),
woosh.Token(woosh.NAME, '__repr__', 595, 8, 595, 16),
woosh.Token(woosh.OP, '(', 595, 16, 595, 17),
woosh.Token(woosh.NAME, 'self', 595, 17, 595, 21),
woosh.Token(woosh.OP, ')', 595, 21, 595, 22),
woosh.Token(woosh.OP, ':', 595, 22, 595, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 595, 23, 596, 0),
woosh.Token(woosh.INDENT, '        ', 596, 0, 596, 8),
woosh.Token(woosh.NAME, 'if', 596, 8, 596, 10),
woosh.Token(woosh.NAME, 'self', 596, 11, 596, 15),
woosh.Token(woosh.OP, '.', 596, 15, 596, 16),
woosh.Token(woosh.NAME, '__covariant__', 596, 16, 596, 29),
woosh.Token(woosh.OP, ':', 596, 29, 596, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 30, 597, 0),
woosh.Token(woosh.INDENT, '            ', 597, 0, 597, 12),
woosh.Token(woosh.NAME, 'prefix', 597, 12, 597, 18),
woosh.Token(woosh.OP, '=', 597, 19, 597, 20),
woosh.Token(woosh.STRING, "'+'", 597, 21, 597, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 24, 598, 0),
woosh.Token(woosh.DEDENT, '        ', 598, 0, 598, 8),
woosh.Token(woosh.NAME, 'elif', 598, 8, 598, 12),
woosh.Token(woosh.NAME, 'self', 598, 13, 598, 17),
woosh.Token(woosh.OP, '.', 598, 17, 598, 18),
woosh.Token(woosh.NAME, '__contravariant__', 598, 18, 598, 35),
woosh.Token(woosh.OP, ':', 598, 35, 598, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 598, 36, 599, 0),
woosh.Token(woosh.INDENT, '            ', 599, 0, 599, 12),
woosh.Token(woosh.NAME, 'prefix', 599, 12, 599, 18),
woosh.Token(woosh.OP, '=', 599, 19, 599, 20),
woosh.Token(woosh.STRING, "'-'", 599, 21, 599, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 24, 600, 0),
woosh.Token(woosh.DEDENT, '        ', 600, 0, 600, 8),
woosh.Token(woosh.NAME, 'else', 600, 8, 600, 12),
woosh.Token(woosh.OP, ':', 600, 12, 600, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 13, 601, 0),
woosh.Token(woosh.INDENT, '            ', 601, 0, 601, 12),
woosh.Token(woosh.NAME, 'prefix', 601, 12, 601, 18),
woosh.Token(woosh.OP, '=', 601, 19, 601, 20),
woosh.Token(woosh.STRING, "'~'", 601, 21, 601, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 24, 602, 0),
woosh.Token(woosh.DEDENT, '        ', 602, 0, 602, 8),
woosh.Token(woosh.NAME, 'return', 602, 8, 602, 14),
woosh.Token(woosh.NAME, 'prefix', 602, 15, 602, 21),
woosh.Token(woosh.OP, '+', 602, 22, 602, 23),
woosh.Token(woosh.NAME, 'self', 602, 24, 602, 28),
woosh.Token(woosh.OP, '.', 602, 28, 602, 29),
woosh.Token(woosh.NAME, '__name__', 602, 29, 602, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 37, 603, 0),
woosh.Token(woosh.DEDENT, '    ', 604, 0, 604, 4),
woosh.Token(woosh.NAME, 'def', 604, 4, 604, 7),
woosh.Token(woosh.NAME, '__reduce__', 604, 8, 604, 18),
woosh.Token(woosh.OP, '(', 604, 18, 604, 19),
woosh.Token(woosh.NAME, 'self', 604, 19, 604, 23),
woosh.Token(woosh.OP, ')', 604, 23, 604, 24),
woosh.Token(woosh.OP, ':', 604, 24, 604, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 25, 605, 0),
woosh.Token(woosh.INDENT, '        ', 605, 0, 605, 8),
woosh.Token(woosh.NAME, 'return', 605, 8, 605, 14),
woosh.Token(woosh.NAME, 'self', 605, 15, 605, 19),
woosh.Token(woosh.OP, '.', 605, 19, 605, 20),
woosh.Token(woosh.NAME, '__name__', 605, 20, 605, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 28, 606, 0),
woosh.Token(woosh.DEDENT, '', 608, 0, 608, 0),
woosh.Token(woosh.DEDENT, '', 608, 0, 608, 0),
woosh.Token(woosh.NAME, 'def', 608, 0, 608, 3),
woosh.Token(woosh.NAME, '_is_dunder', 608, 4, 608, 14),
woosh.Token(woosh.OP, '(', 608, 14, 608, 15),
woosh.Token(woosh.NAME, 'attr', 608, 15, 608, 19),
woosh.Token(woosh.OP, ')', 608, 19, 608, 20),
woosh.Token(woosh.OP, ':', 608, 20, 608, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 21, 609, 0),
woosh.Token(woosh.INDENT, '    ', 609, 0, 609, 4),
woosh.Token(woosh.NAME, 'return', 609, 4, 609, 10),
woosh.Token(woosh.NAME, 'attr', 609, 11, 609, 15),
woosh.Token(woosh.OP, '.', 609, 15, 609, 16),
woosh.Token(woosh.NAME, 'startswith', 609, 16, 609, 26),
woosh.Token(woosh.OP, '(', 609, 26, 609, 27),
woosh.Token(woosh.STRING, "'__'", 609, 27, 609, 31),
woosh.Token(woosh.OP, ')', 609, 31, 609, 32),
woosh.Token(woosh.NAME, 'and', 609, 33, 609, 36),
woosh.Token(woosh.NAME, 'attr', 609, 37, 609, 41),
woosh.Token(woosh.OP, '.', 609, 41, 609, 42),
woosh.Token(woosh.NAME, 'endswith', 609, 42, 609, 50),
woosh.Token(woosh.OP, '(', 609, 50, 609, 51),
woosh.Token(woosh.STRING, "'__'", 609, 51, 609, 55),
woosh.Token(woosh.OP, ')', 609, 55, 609, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 56, 610, 0),
woosh.Token(woosh.DEDENT, '', 611, 0, 611, 0),
woosh.Token(woosh.NAME, 'class', 611, 0, 611, 5),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 611, 6, 611, 23),
woosh.Token(woosh.OP, '(', 611, 23, 611, 24),
woosh.Token(woosh.NAME, '_Final', 611, 24, 611, 30),
woosh.Token(woosh.OP, ',', 611, 30, 611, 31),
woosh.Token(woosh.NAME, '_root', 611, 32, 611, 37),
woosh.Token(woosh.OP, '=', 611, 37, 611, 38),
woosh.Token(woosh.NAME, 'True', 611, 38, 611, 42),
woosh.Token(woosh.OP, ')', 611, 42, 611, 43),
woosh.Token(woosh.OP, ':', 611, 43, 611, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 44, 612, 0),
woosh.Token(woosh.INDENT, '    ', 612, 0, 612, 4),
woosh.Token(woosh.STRING, '"""The central part of internal API.\r\n\r\n    This represents a generic version of type \'origin\' with type arguments \'params\'.\r\n    There are two kind of these aliases: user defined and special. The special ones\r\n    are wrappers around builtin collections and ABCs in collections.abc. These must\r\n    have \'name\' always set. If \'inst\' is False, then the alias can\'t be instantiated,\r\n    this is used by e.g. typing.List and typing.Dict.\r\n    """', 612, 4, 619, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 7, 620, 0),
woosh.Token(woosh.NAME, 'def', 620, 4, 620, 7),
woosh.Token(woosh.NAME, '__init__', 620, 8, 620, 16),
woosh.Token(woosh.OP, '(', 620, 16, 620, 17),
woosh.Token(woosh.NAME, 'self', 620, 17, 620, 21),
woosh.Token(woosh.OP, ',', 620, 21, 620, 22),
woosh.Token(woosh.NAME, 'origin', 620, 23, 620, 29),
woosh.Token(woosh.OP, ',', 620, 29, 620, 30),
woosh.Token(woosh.OP, '*', 620, 31, 620, 32),
woosh.Token(woosh.OP, ',', 620, 32, 620, 33),
woosh.Token(woosh.NAME, 'inst', 620, 34, 620, 38),
woosh.Token(woosh.OP, '=', 620, 38, 620, 39),
woosh.Token(woosh.NAME, 'True', 620, 39, 620, 43),
woosh.Token(woosh.OP, ',', 620, 43, 620, 44),
woosh.Token(woosh.NAME, 'name', 620, 45, 620, 49),
woosh.Token(woosh.OP, '=', 620, 49, 620, 50),
woosh.Token(woosh.NAME, 'None', 620, 50, 620, 54),
woosh.Token(woosh.OP, ')', 620, 54, 620, 55),
woosh.Token(woosh.OP, ':', 620, 55, 620, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 620, 56, 621, 0),
woosh.Token(woosh.INDENT, '        ', 621, 0, 621, 8),
woosh.Token(woosh.NAME, 'self', 621, 8, 621, 12),
woosh.Token(woosh.OP, '.', 621, 12, 621, 13),
woosh.Token(woosh.NAME, '_inst', 621, 13, 621, 18),
woosh.Token(woosh.OP, '=', 621, 19, 621, 20),
woosh.Token(woosh.NAME, 'inst', 621, 21, 621, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 25, 622, 0),
woosh.Token(woosh.NAME, 'self', 622, 8, 622, 12),
woosh.Token(woosh.OP, '.', 622, 12, 622, 13),
woosh.Token(woosh.NAME, '_name', 622, 13, 622, 18),
woosh.Token(woosh.OP, '=', 622, 19, 622, 20),
woosh.Token(woosh.NAME, 'name', 622, 21, 622, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 622, 25, 623, 0),
woosh.Token(woosh.NAME, 'self', 623, 8, 623, 12),
woosh.Token(woosh.OP, '.', 623, 12, 623, 13),
woosh.Token(woosh.NAME, '__origin__', 623, 13, 623, 23),
woosh.Token(woosh.OP, '=', 623, 24, 623, 25),
woosh.Token(woosh.NAME, 'origin', 623, 26, 623, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 623, 32, 624, 0),
woosh.Token(woosh.NAME, 'self', 624, 8, 624, 12),
woosh.Token(woosh.OP, '.', 624, 12, 624, 13),
woosh.Token(woosh.NAME, '__slots__', 624, 13, 624, 22),
woosh.Token(woosh.OP, '=', 624, 23, 624, 24),
woosh.Token(woosh.NAME, 'None', 624, 25, 624, 29),
woosh.Token(woosh.COMMENT, '# This is not documented.', 624, 31, 624, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 56, 625, 0),
woosh.Token(woosh.DEDENT, '    ', 626, 0, 626, 4),
woosh.Token(woosh.NAME, 'def', 626, 4, 626, 7),
woosh.Token(woosh.NAME, '__call__', 626, 8, 626, 16),
woosh.Token(woosh.OP, '(', 626, 16, 626, 17),
woosh.Token(woosh.NAME, 'self', 626, 17, 626, 21),
woosh.Token(woosh.OP, ',', 626, 21, 626, 22),
woosh.Token(woosh.OP, '*', 626, 23, 626, 24),
woosh.Token(woosh.NAME, 'args', 626, 24, 626, 28),
woosh.Token(woosh.OP, ',', 626, 28, 626, 29),
woosh.Token(woosh.OP, '**', 626, 30, 626, 32),
woosh.Token(woosh.NAME, 'kwargs', 626, 32, 626, 38),
woosh.Token(woosh.OP, ')', 626, 38, 626, 39),
woosh.Token(woosh.OP, ':', 626, 39, 626, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 626, 40, 627, 0),
woosh.Token(woosh.INDENT, '        ', 627, 0, 627, 8),
woosh.Token(woosh.NAME, 'if', 627, 8, 627, 10),
woosh.Token(woosh.NAME, 'not', 627, 11, 627, 14),
woosh.Token(woosh.NAME, 'self', 627, 15, 627, 19),
woosh.Token(woosh.OP, '.', 627, 19, 627, 20),
woosh.Token(woosh.NAME, '_inst', 627, 20, 627, 25),
woosh.Token(woosh.OP, ':', 627, 25, 627, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 627, 26, 628, 0),
woosh.Token(woosh.INDENT, '            ', 628, 0, 628, 12),
woosh.Token(woosh.NAME, 'raise', 628, 12, 628, 17),
woosh.Token(woosh.NAME, 'TypeError', 628, 18, 628, 27),
woosh.Token(woosh.OP, '(', 628, 27, 628, 28),
woosh.Token(woosh.STRING, 'f"Type {self._name} cannot be instantiated; "', 628, 28, 628, 73),
woosh.Token(woosh.STRING, 'f"use {self.__origin__.__name__}() instead"', 629, 28, 629, 71),
woosh.Token(woosh.OP, ')', 629, 71, 629, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 72, 630, 0),
woosh.Token(woosh.DEDENT, '        ', 630, 0, 630, 8),
woosh.Token(woosh.NAME, 'result', 630, 8, 630, 14),
woosh.Token(woosh.OP, '=', 630, 15, 630, 16),
woosh.Token(woosh.NAME, 'self', 630, 17, 630, 21),
woosh.Token(woosh.OP, '.', 630, 21, 630, 22),
woosh.Token(woosh.NAME, '__origin__', 630, 22, 630, 32),
woosh.Token(woosh.OP, '(', 630, 32, 630, 33),
woosh.Token(woosh.OP, '*', 630, 33, 630, 34),
woosh.Token(woosh.NAME, 'args', 630, 34, 630, 38),
woosh.Token(woosh.OP, ',', 630, 38, 630, 39),
woosh.Token(woosh.OP, '**', 630, 40, 630, 42),
woosh.Token(woosh.NAME, 'kwargs', 630, 42, 630, 48),
woosh.Token(woosh.OP, ')', 630, 48, 630, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 630, 49, 631, 0),
woosh.Token(woosh.NAME, 'try', 631, 8, 631, 11),
woosh.Token(woosh.OP, ':', 631, 11, 631, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 631, 12, 632, 0),
woosh.Token(woosh.INDENT, '            ', 632, 0, 632, 12),
woosh.Token(woosh.NAME, 'result', 632, 12, 632, 18),
woosh.Token(woosh.OP, '.', 632, 18, 632, 19),
woosh.Token(woosh.NAME, '__orig_class__', 632, 19, 632, 33),
woosh.Token(woosh.OP, '=', 632, 34, 632, 35),
woosh.Token(woosh.NAME, 'self', 632, 36, 632, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 40, 633, 0),
woosh.Token(woosh.DEDENT, '        ', 633, 0, 633, 8),
woosh.Token(woosh.NAME, 'except', 633, 8, 633, 14),
woosh.Token(woosh.NAME, 'AttributeError', 633, 15, 633, 29),
woosh.Token(woosh.OP, ':', 633, 29, 633, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 633, 30, 634, 0),
woosh.Token(woosh.INDENT, '            ', 634, 0, 634, 12),
woosh.Token(woosh.NAME, 'pass', 634, 12, 634, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 16, 635, 0),
woosh.Token(woosh.DEDENT, '        ', 635, 0, 635, 8),
woosh.Token(woosh.NAME, 'return', 635, 8, 635, 14),
woosh.Token(woosh.NAME, 'result', 635, 15, 635, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 635, 21, 636, 0),
woosh.Token(woosh.DEDENT, '    ', 637, 0, 637, 4),
woosh.Token(woosh.NAME, 'def', 637, 4, 637, 7),
woosh.Token(woosh.NAME, '__mro_entries__', 637, 8, 637, 23),
woosh.Token(woosh.OP, '(', 637, 23, 637, 24),
woosh.Token(woosh.NAME, 'self', 637, 24, 637, 28),
woosh.Token(woosh.OP, ',', 637, 28, 637, 29),
woosh.Token(woosh.NAME, 'bases', 637, 30, 637, 35),
woosh.Token(woosh.OP, ')', 637, 35, 637, 36),
woosh.Token(woosh.OP, ':', 637, 36, 637, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 37, 638, 0),
woosh.Token(woosh.INDENT, '        ', 638, 0, 638, 8),
woosh.Token(woosh.NAME, 'res', 638, 8, 638, 11),
woosh.Token(woosh.OP, '=', 638, 12, 638, 13),
woosh.Token(woosh.OP, '[', 638, 14, 638, 15),
woosh.Token(woosh.OP, ']', 638, 15, 638, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 16, 639, 0),
woosh.Token(woosh.NAME, 'if', 639, 8, 639, 10),
woosh.Token(woosh.NAME, 'self', 639, 11, 639, 15),
woosh.Token(woosh.OP, '.', 639, 15, 639, 16),
woosh.Token(woosh.NAME, '__origin__', 639, 16, 639, 26),
woosh.Token(woosh.NAME, 'not', 639, 27, 639, 30),
woosh.Token(woosh.NAME, 'in', 639, 31, 639, 33),
woosh.Token(woosh.NAME, 'bases', 639, 34, 639, 39),
woosh.Token(woosh.OP, ':', 639, 39, 639, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 40, 640, 0),
woosh.Token(woosh.INDENT, '            ', 640, 0, 640, 12),
woosh.Token(woosh.NAME, 'res', 640, 12, 640, 15),
woosh.Token(woosh.OP, '.', 640, 15, 640, 16),
woosh.Token(woosh.NAME, 'append', 640, 16, 640, 22),
woosh.Token(woosh.OP, '(', 640, 22, 640, 23),
woosh.Token(woosh.NAME, 'self', 640, 23, 640, 27),
woosh.Token(woosh.OP, '.', 640, 27, 640, 28),
woosh.Token(woosh.NAME, '__origin__', 640, 28, 640, 38),
woosh.Token(woosh.OP, ')', 640, 38, 640, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 640, 39, 641, 0),
woosh.Token(woosh.DEDENT, '        ', 641, 0, 641, 8),
woosh.Token(woosh.NAME, 'i', 641, 8, 641, 9),
woosh.Token(woosh.OP, '=', 641, 10, 641, 11),
woosh.Token(woosh.NAME, 'bases', 641, 12, 641, 17),
woosh.Token(woosh.OP, '.', 641, 17, 641, 18),
woosh.Token(woosh.NAME, 'index', 641, 18, 641, 23),
woosh.Token(woosh.OP, '(', 641, 23, 641, 24),
woosh.Token(woosh.NAME, 'self', 641, 24, 641, 28),
woosh.Token(woosh.OP, ')', 641, 28, 641, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 29, 642, 0),
woosh.Token(woosh.NAME, 'for', 642, 8, 642, 11),
woosh.Token(woosh.NAME, 'b', 642, 12, 642, 13),
woosh.Token(woosh.NAME, 'in', 642, 14, 642, 16),
woosh.Token(woosh.NAME, 'bases', 642, 17, 642, 22),
woosh.Token(woosh.OP, '[', 642, 22, 642, 23),
woosh.Token(woosh.NAME, 'i', 642, 23, 642, 24),
woosh.Token(woosh.OP, '+', 642, 24, 642, 25),
woosh.Token(woosh.NUMBER, '1', 642, 25, 642, 26),
woosh.Token(woosh.OP, ':', 642, 26, 642, 27),
woosh.Token(woosh.OP, ']', 642, 27, 642, 28),
woosh.Token(woosh.OP, ':', 642, 28, 642, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 29, 643, 0),
woosh.Token(woosh.INDENT, '            ', 643, 0, 643, 12),
woosh.Token(woosh.NAME, 'if', 643, 12, 643, 14),
woosh.Token(woosh.NAME, 'isinstance', 643, 15, 643, 25),
woosh.Token(woosh.OP, '(', 643, 25, 643, 26),
woosh.Token(woosh.NAME, 'b', 643, 26, 643, 27),
woosh.Token(woosh.OP, ',', 643, 27, 643, 28),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 643, 29, 643, 46),
woosh.Token(woosh.OP, ')', 643, 46, 643, 47),
woosh.Token(woosh.NAME, 'or', 643, 48, 643, 50),
woosh.Token(woosh.NAME, 'issubclass', 643, 51, 643, 61),
woosh.Token(woosh.OP, '(', 643, 61, 643, 62),
woosh.Token(woosh.NAME, 'b', 643, 62, 643, 63),
woosh.Token(woosh.OP, ',', 643, 63, 643, 64),
woosh.Token(woosh.NAME, 'Generic', 643, 65, 643, 72),
woosh.Token(woosh.OP, ')', 643, 72, 643, 73),
woosh.Token(woosh.OP, ':', 643, 73, 643, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 643, 74, 644, 0),
woosh.Token(woosh.INDENT, '                ', 644, 0, 644, 16),
woosh.Token(woosh.NAME, 'break', 644, 16, 644, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 644, 21, 645, 0),
woosh.Token(woosh.DEDENT, '        ', 645, 0, 645, 8),
woosh.Token(woosh.DEDENT, '', 645, 8, 645, 8),
woosh.Token(woosh.NAME, 'else', 645, 8, 645, 12),
woosh.Token(woosh.OP, ':', 645, 12, 645, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 645, 13, 646, 0),
woosh.Token(woosh.INDENT, '            ', 646, 0, 646, 12),
woosh.Token(woosh.NAME, 'res', 646, 12, 646, 15),
woosh.Token(woosh.OP, '.', 646, 15, 646, 16),
woosh.Token(woosh.NAME, 'append', 646, 16, 646, 22),
woosh.Token(woosh.OP, '(', 646, 22, 646, 23),
woosh.Token(woosh.NAME, 'Generic', 646, 23, 646, 30),
woosh.Token(woosh.OP, ')', 646, 30, 646, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 646, 31, 647, 0),
woosh.Token(woosh.DEDENT, '        ', 647, 0, 647, 8),
woosh.Token(woosh.NAME, 'return', 647, 8, 647, 14),
woosh.Token(woosh.NAME, 'tuple', 647, 15, 647, 20),
woosh.Token(woosh.OP, '(', 647, 20, 647, 21),
woosh.Token(woosh.NAME, 'res', 647, 21, 647, 24),
woosh.Token(woosh.OP, ')', 647, 24, 647, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 647, 25, 648, 0),
woosh.Token(woosh.DEDENT, '    ', 649, 0, 649, 4),
woosh.Token(woosh.NAME, 'def', 649, 4, 649, 7),
woosh.Token(woosh.NAME, '__getattr__', 649, 8, 649, 19),
woosh.Token(woosh.OP, '(', 649, 19, 649, 20),
woosh.Token(woosh.NAME, 'self', 649, 20, 649, 24),
woosh.Token(woosh.OP, ',', 649, 24, 649, 25),
woosh.Token(woosh.NAME, 'attr', 649, 26, 649, 30),
woosh.Token(woosh.OP, ')', 649, 30, 649, 31),
woosh.Token(woosh.OP, ':', 649, 31, 649, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 649, 32, 650, 0),
woosh.Token(woosh.COMMENT, '# We are careful for copy and pickle.', 650, 8, 650, 45),
woosh.Token(woosh.COMMENT, "# Also for simplicity we just don't relay all dunder names", 651, 8, 651, 66),
woosh.Token(woosh.INDENT, '        ', 652, 0, 652, 8),
woosh.Token(woosh.NAME, 'if', 652, 8, 652, 10),
woosh.Token(woosh.STRING, "'__origin__'", 652, 11, 652, 23),
woosh.Token(woosh.NAME, 'in', 652, 24, 652, 26),
woosh.Token(woosh.NAME, 'self', 652, 27, 652, 31),
woosh.Token(woosh.OP, '.', 652, 31, 652, 32),
woosh.Token(woosh.NAME, '__dict__', 652, 32, 652, 40),
woosh.Token(woosh.NAME, 'and', 652, 41, 652, 44),
woosh.Token(woosh.NAME, 'not', 652, 45, 652, 48),
woosh.Token(woosh.NAME, '_is_dunder', 652, 49, 652, 59),
woosh.Token(woosh.OP, '(', 652, 59, 652, 60),
woosh.Token(woosh.NAME, 'attr', 652, 60, 652, 64),
woosh.Token(woosh.OP, ')', 652, 64, 652, 65),
woosh.Token(woosh.OP, ':', 652, 65, 652, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 652, 66, 653, 0),
woosh.Token(woosh.INDENT, '            ', 653, 0, 653, 12),
woosh.Token(woosh.NAME, 'return', 653, 12, 653, 18),
woosh.Token(woosh.NAME, 'getattr', 653, 19, 653, 26),
woosh.Token(woosh.OP, '(', 653, 26, 653, 27),
woosh.Token(woosh.NAME, 'self', 653, 27, 653, 31),
woosh.Token(woosh.OP, '.', 653, 31, 653, 32),
woosh.Token(woosh.NAME, '__origin__', 653, 32, 653, 42),
woosh.Token(woosh.OP, ',', 653, 42, 653, 43),
woosh.Token(woosh.NAME, 'attr', 653, 44, 653, 48),
woosh.Token(woosh.OP, ')', 653, 48, 653, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 49, 654, 0),
woosh.Token(woosh.DEDENT, '        ', 654, 0, 654, 8),
woosh.Token(woosh.NAME, 'raise', 654, 8, 654, 13),
woosh.Token(woosh.NAME, 'AttributeError', 654, 14, 654, 28),
woosh.Token(woosh.OP, '(', 654, 28, 654, 29),
woosh.Token(woosh.NAME, 'attr', 654, 29, 654, 33),
woosh.Token(woosh.OP, ')', 654, 33, 654, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 654, 34, 655, 0),
woosh.Token(woosh.DEDENT, '    ', 656, 0, 656, 4),
woosh.Token(woosh.NAME, 'def', 656, 4, 656, 7),
woosh.Token(woosh.NAME, '__setattr__', 656, 8, 656, 19),
woosh.Token(woosh.OP, '(', 656, 19, 656, 20),
woosh.Token(woosh.NAME, 'self', 656, 20, 656, 24),
woosh.Token(woosh.OP, ',', 656, 24, 656, 25),
woosh.Token(woosh.NAME, 'attr', 656, 26, 656, 30),
woosh.Token(woosh.OP, ',', 656, 30, 656, 31),
woosh.Token(woosh.NAME, 'val', 656, 32, 656, 35),
woosh.Token(woosh.OP, ')', 656, 35, 656, 36),
woosh.Token(woosh.OP, ':', 656, 36, 656, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 37, 657, 0),
woosh.Token(woosh.INDENT, '        ', 657, 0, 657, 8),
woosh.Token(woosh.NAME, 'if', 657, 8, 657, 10),
woosh.Token(woosh.NAME, '_is_dunder', 657, 11, 657, 21),
woosh.Token(woosh.OP, '(', 657, 21, 657, 22),
woosh.Token(woosh.NAME, 'attr', 657, 22, 657, 26),
woosh.Token(woosh.OP, ')', 657, 26, 657, 27),
woosh.Token(woosh.NAME, 'or', 657, 28, 657, 30),
woosh.Token(woosh.NAME, 'attr', 657, 31, 657, 35),
woosh.Token(woosh.NAME, 'in', 657, 36, 657, 38),
woosh.Token(woosh.OP, '(', 657, 39, 657, 40),
woosh.Token(woosh.STRING, "'_name'", 657, 40, 657, 47),
woosh.Token(woosh.OP, ',', 657, 47, 657, 48),
woosh.Token(woosh.STRING, "'_inst'", 657, 49, 657, 56),
woosh.Token(woosh.OP, ',', 657, 56, 657, 57),
woosh.Token(woosh.STRING, "'_nparams'", 657, 58, 657, 68),
woosh.Token(woosh.OP, ')', 657, 68, 657, 69),
woosh.Token(woosh.OP, ':', 657, 69, 657, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 657, 70, 658, 0),
woosh.Token(woosh.INDENT, '            ', 658, 0, 658, 12),
woosh.Token(woosh.NAME, 'super', 658, 12, 658, 17),
woosh.Token(woosh.OP, '(', 658, 17, 658, 18),
woosh.Token(woosh.OP, ')', 658, 18, 658, 19),
woosh.Token(woosh.OP, '.', 658, 19, 658, 20),
woosh.Token(woosh.NAME, '__setattr__', 658, 20, 658, 31),
woosh.Token(woosh.OP, '(', 658, 31, 658, 32),
woosh.Token(woosh.NAME, 'attr', 658, 32, 658, 36),
woosh.Token(woosh.OP, ',', 658, 36, 658, 37),
woosh.Token(woosh.NAME, 'val', 658, 38, 658, 41),
woosh.Token(woosh.OP, ')', 658, 41, 658, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 658, 42, 659, 0),
woosh.Token(woosh.DEDENT, '        ', 659, 0, 659, 8),
woosh.Token(woosh.NAME, 'else', 659, 8, 659, 12),
woosh.Token(woosh.OP, ':', 659, 12, 659, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 13, 660, 0),
woosh.Token(woosh.INDENT, '            ', 660, 0, 660, 12),
woosh.Token(woosh.NAME, 'setattr', 660, 12, 660, 19),
woosh.Token(woosh.OP, '(', 660, 19, 660, 20),
woosh.Token(woosh.NAME, 'self', 660, 20, 660, 24),
woosh.Token(woosh.OP, '.', 660, 24, 660, 25),
woosh.Token(woosh.NAME, '__origin__', 660, 25, 660, 35),
woosh.Token(woosh.OP, ',', 660, 35, 660, 36),
woosh.Token(woosh.NAME, 'attr', 660, 37, 660, 41),
woosh.Token(woosh.OP, ',', 660, 41, 660, 42),
woosh.Token(woosh.NAME, 'val', 660, 43, 660, 46),
woosh.Token(woosh.OP, ')', 660, 46, 660, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 47, 661, 0),
woosh.Token(woosh.DEDENT, '    ', 662, 0, 662, 4),
woosh.Token(woosh.DEDENT, '', 662, 4, 662, 4),
woosh.Token(woosh.NAME, 'def', 662, 4, 662, 7),
woosh.Token(woosh.NAME, '__instancecheck__', 662, 8, 662, 25),
woosh.Token(woosh.OP, '(', 662, 25, 662, 26),
woosh.Token(woosh.NAME, 'self', 662, 26, 662, 30),
woosh.Token(woosh.OP, ',', 662, 30, 662, 31),
woosh.Token(woosh.NAME, 'obj', 662, 32, 662, 35),
woosh.Token(woosh.OP, ')', 662, 35, 662, 36),
woosh.Token(woosh.OP, ':', 662, 36, 662, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 662, 37, 663, 0),
woosh.Token(woosh.INDENT, '        ', 663, 0, 663, 8),
woosh.Token(woosh.NAME, 'return', 663, 8, 663, 14),
woosh.Token(woosh.NAME, 'self', 663, 15, 663, 19),
woosh.Token(woosh.OP, '.', 663, 19, 663, 20),
woosh.Token(woosh.NAME, '__subclasscheck__', 663, 20, 663, 37),
woosh.Token(woosh.OP, '(', 663, 37, 663, 38),
woosh.Token(woosh.NAME, 'type', 663, 38, 663, 42),
woosh.Token(woosh.OP, '(', 663, 42, 663, 43),
woosh.Token(woosh.NAME, 'obj', 663, 43, 663, 46),
woosh.Token(woosh.OP, ')', 663, 46, 663, 47),
woosh.Token(woosh.OP, ')', 663, 47, 663, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 48, 664, 0),
woosh.Token(woosh.DEDENT, '    ', 665, 0, 665, 4),
woosh.Token(woosh.NAME, 'def', 665, 4, 665, 7),
woosh.Token(woosh.NAME, '__subclasscheck__', 665, 8, 665, 25),
woosh.Token(woosh.OP, '(', 665, 25, 665, 26),
woosh.Token(woosh.NAME, 'self', 665, 26, 665, 30),
woosh.Token(woosh.OP, ',', 665, 30, 665, 31),
woosh.Token(woosh.NAME, 'cls', 665, 32, 665, 35),
woosh.Token(woosh.OP, ')', 665, 35, 665, 36),
woosh.Token(woosh.OP, ':', 665, 36, 665, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 665, 37, 666, 0),
woosh.Token(woosh.INDENT, '        ', 666, 0, 666, 8),
woosh.Token(woosh.NAME, 'raise', 666, 8, 666, 13),
woosh.Token(woosh.NAME, 'TypeError', 666, 14, 666, 23),
woosh.Token(woosh.OP, '(', 666, 23, 666, 24),
woosh.Token(woosh.STRING, '"Subscripted generics cannot be used with"', 666, 24, 666, 66),
woosh.Token(woosh.STRING, '" class and instance checks"', 667, 24, 667, 52),
woosh.Token(woosh.OP, ')', 667, 52, 667, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 53, 668, 0),
woosh.Token(woosh.COMMENT, '# Special typing constructs Union, Optional, Generic, Callable and Tuple', 670, 0, 670, 72),
woosh.Token(woosh.COMMENT, '# use three special attributes for internal bookkeeping of generic types:', 671, 0, 671, 73),
woosh.Token(woosh.COMMENT, '# * __parameters__ is a tuple of unique free type parameters of a generic', 672, 0, 672, 73),
woosh.Token(woosh.COMMENT, '#   type, for example, Dict[T, T].__parameters__ == (T,);', 673, 0, 673, 57),
woosh.Token(woosh.COMMENT, '# * __origin__ keeps a reference to a type that was subscripted,', 674, 0, 674, 64),
woosh.Token(woosh.COMMENT, '#   e.g., Union[T, int].__origin__ == Union, or the non-generic version of', 675, 0, 675, 74),
woosh.Token(woosh.COMMENT, '#   the type.', 676, 0, 676, 13),
woosh.Token(woosh.COMMENT, '# * __args__ is a tuple of all arguments used in subscripting,', 677, 0, 677, 62),
woosh.Token(woosh.COMMENT, '#   e.g., Dict[T, int].__args__ == (T, int).', 678, 0, 678, 44),
woosh.Token(woosh.DEDENT, '', 681, 0, 681, 0),
woosh.Token(woosh.DEDENT, '', 681, 0, 681, 0),
woosh.Token(woosh.NAME, 'class', 681, 0, 681, 5),
woosh.Token(woosh.NAME, '_GenericAlias', 681, 6, 681, 19),
woosh.Token(woosh.OP, '(', 681, 19, 681, 20),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 681, 20, 681, 37),
woosh.Token(woosh.OP, ',', 681, 37, 681, 38),
woosh.Token(woosh.NAME, '_root', 681, 39, 681, 44),
woosh.Token(woosh.OP, '=', 681, 44, 681, 45),
woosh.Token(woosh.NAME, 'True', 681, 45, 681, 49),
woosh.Token(woosh.OP, ')', 681, 49, 681, 50),
woosh.Token(woosh.OP, ':', 681, 50, 681, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 681, 51, 682, 0),
woosh.Token(woosh.INDENT, '    ', 682, 0, 682, 4),
woosh.Token(woosh.NAME, 'def', 682, 4, 682, 7),
woosh.Token(woosh.NAME, '__init__', 682, 8, 682, 16),
woosh.Token(woosh.OP, '(', 682, 16, 682, 17),
woosh.Token(woosh.NAME, 'self', 682, 17, 682, 21),
woosh.Token(woosh.OP, ',', 682, 21, 682, 22),
woosh.Token(woosh.NAME, 'origin', 682, 23, 682, 29),
woosh.Token(woosh.OP, ',', 682, 29, 682, 30),
woosh.Token(woosh.NAME, 'params', 682, 31, 682, 37),
woosh.Token(woosh.OP, ',', 682, 37, 682, 38),
woosh.Token(woosh.OP, '*', 682, 39, 682, 40),
woosh.Token(woosh.OP, ',', 682, 40, 682, 41),
woosh.Token(woosh.NAME, 'inst', 682, 42, 682, 46),
woosh.Token(woosh.OP, '=', 682, 46, 682, 47),
woosh.Token(woosh.NAME, 'True', 682, 47, 682, 51),
woosh.Token(woosh.OP, ',', 682, 51, 682, 52),
woosh.Token(woosh.NAME, 'name', 682, 53, 682, 57),
woosh.Token(woosh.OP, '=', 682, 57, 682, 58),
woosh.Token(woosh.NAME, 'None', 682, 58, 682, 62),
woosh.Token(woosh.OP, ')', 682, 62, 682, 63),
woosh.Token(woosh.OP, ':', 682, 63, 682, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 682, 64, 683, 0),
woosh.Token(woosh.INDENT, '        ', 683, 0, 683, 8),
woosh.Token(woosh.NAME, 'super', 683, 8, 683, 13),
woosh.Token(woosh.OP, '(', 683, 13, 683, 14),
woosh.Token(woosh.OP, ')', 683, 14, 683, 15),
woosh.Token(woosh.OP, '.', 683, 15, 683, 16),
woosh.Token(woosh.NAME, '__init__', 683, 16, 683, 24),
woosh.Token(woosh.OP, '(', 683, 24, 683, 25),
woosh.Token(woosh.NAME, 'origin', 683, 25, 683, 31),
woosh.Token(woosh.OP, ',', 683, 31, 683, 32),
woosh.Token(woosh.NAME, 'inst', 683, 33, 683, 37),
woosh.Token(woosh.OP, '=', 683, 37, 683, 38),
woosh.Token(woosh.NAME, 'inst', 683, 38, 683, 42),
woosh.Token(woosh.OP, ',', 683, 42, 683, 43),
woosh.Token(woosh.NAME, 'name', 683, 44, 683, 48),
woosh.Token(woosh.OP, '=', 683, 48, 683, 49),
woosh.Token(woosh.NAME, 'name', 683, 49, 683, 53),
woosh.Token(woosh.OP, ')', 683, 53, 683, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 683, 54, 684, 0),
woosh.Token(woosh.NAME, 'if', 684, 8, 684, 10),
woosh.Token(woosh.NAME, 'not', 684, 11, 684, 14),
woosh.Token(woosh.NAME, 'isinstance', 684, 15, 684, 25),
woosh.Token(woosh.OP, '(', 684, 25, 684, 26),
woosh.Token(woosh.NAME, 'params', 684, 26, 684, 32),
woosh.Token(woosh.OP, ',', 684, 32, 684, 33),
woosh.Token(woosh.NAME, 'tuple', 684, 34, 684, 39),
woosh.Token(woosh.OP, ')', 684, 39, 684, 40),
woosh.Token(woosh.OP, ':', 684, 40, 684, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 41, 685, 0),
woosh.Token(woosh.INDENT, '            ', 685, 0, 685, 12),
woosh.Token(woosh.NAME, 'params', 685, 12, 685, 18),
woosh.Token(woosh.OP, '=', 685, 19, 685, 20),
woosh.Token(woosh.OP, '(', 685, 21, 685, 22),
woosh.Token(woosh.NAME, 'params', 685, 22, 685, 28),
woosh.Token(woosh.OP, ',', 685, 28, 685, 29),
woosh.Token(woosh.OP, ')', 685, 29, 685, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 685, 30, 686, 0),
woosh.Token(woosh.DEDENT, '        ', 686, 0, 686, 8),
woosh.Token(woosh.NAME, 'self', 686, 8, 686, 12),
woosh.Token(woosh.OP, '.', 686, 12, 686, 13),
woosh.Token(woosh.NAME, '__args__', 686, 13, 686, 21),
woosh.Token(woosh.OP, '=', 686, 22, 686, 23),
woosh.Token(woosh.NAME, 'tuple', 686, 24, 686, 29),
woosh.Token(woosh.OP, '(', 686, 29, 686, 30),
woosh.Token(woosh.OP, '...', 686, 30, 686, 33),
woosh.Token(woosh.NAME, 'if', 686, 34, 686, 36),
woosh.Token(woosh.NAME, 'a', 686, 37, 686, 38),
woosh.Token(woosh.NAME, 'is', 686, 39, 686, 41),
woosh.Token(woosh.NAME, '_TypingEllipsis', 686, 42, 686, 57),
woosh.Token(woosh.NAME, 'else', 686, 58, 686, 62),
woosh.Token(woosh.OP, '(', 687, 30, 687, 31),
woosh.Token(woosh.OP, ')', 687, 31, 687, 32),
woosh.Token(woosh.NAME, 'if', 687, 33, 687, 35),
woosh.Token(woosh.NAME, 'a', 687, 36, 687, 37),
woosh.Token(woosh.NAME, 'is', 687, 38, 687, 40),
woosh.Token(woosh.NAME, '_TypingEmpty', 687, 41, 687, 53),
woosh.Token(woosh.NAME, 'else', 687, 54, 687, 58),
woosh.Token(woosh.NAME, 'a', 688, 30, 688, 31),
woosh.Token(woosh.NAME, 'for', 688, 32, 688, 35),
woosh.Token(woosh.NAME, 'a', 688, 36, 688, 37),
woosh.Token(woosh.NAME, 'in', 688, 38, 688, 40),
woosh.Token(woosh.NAME, 'params', 688, 41, 688, 47),
woosh.Token(woosh.OP, ')', 688, 47, 688, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 48, 689, 0),
woosh.Token(woosh.NAME, 'self', 689, 8, 689, 12),
woosh.Token(woosh.OP, '.', 689, 12, 689, 13),
woosh.Token(woosh.NAME, '__parameters__', 689, 13, 689, 27),
woosh.Token(woosh.OP, '=', 689, 28, 689, 29),
woosh.Token(woosh.NAME, '_collect_type_vars', 689, 30, 689, 48),
woosh.Token(woosh.OP, '(', 689, 48, 689, 49),
woosh.Token(woosh.NAME, 'params', 689, 49, 689, 55),
woosh.Token(woosh.OP, ')', 689, 55, 689, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 689, 56, 690, 0),
woosh.Token(woosh.NAME, 'if', 690, 8, 690, 10),
woosh.Token(woosh.NAME, 'not', 690, 11, 690, 14),
woosh.Token(woosh.NAME, 'name', 690, 15, 690, 19),
woosh.Token(woosh.OP, ':', 690, 19, 690, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 690, 20, 691, 0),
woosh.Token(woosh.INDENT, '            ', 691, 0, 691, 12),
woosh.Token(woosh.NAME, 'self', 691, 12, 691, 16),
woosh.Token(woosh.OP, '.', 691, 16, 691, 17),
woosh.Token(woosh.NAME, '__module__', 691, 17, 691, 27),
woosh.Token(woosh.OP, '=', 691, 28, 691, 29),
woosh.Token(woosh.NAME, 'origin', 691, 30, 691, 36),
woosh.Token(woosh.OP, '.', 691, 36, 691, 37),
woosh.Token(woosh.NAME, '__module__', 691, 37, 691, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 691, 47, 692, 0),
woosh.Token(woosh.DEDENT, '    ', 693, 0, 693, 4),
woosh.Token(woosh.DEDENT, '', 693, 4, 693, 4),
woosh.Token(woosh.NAME, 'def', 693, 4, 693, 7),
woosh.Token(woosh.NAME, '__eq__', 693, 8, 693, 14),
woosh.Token(woosh.OP, '(', 693, 14, 693, 15),
woosh.Token(woosh.NAME, 'self', 693, 15, 693, 19),
woosh.Token(woosh.OP, ',', 693, 19, 693, 20),
woosh.Token(woosh.NAME, 'other', 693, 21, 693, 26),
woosh.Token(woosh.OP, ')', 693, 26, 693, 27),
woosh.Token(woosh.OP, ':', 693, 27, 693, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 693, 28, 694, 0),
woosh.Token(woosh.INDENT, '        ', 694, 0, 694, 8),
woosh.Token(woosh.NAME, 'if', 694, 8, 694, 10),
woosh.Token(woosh.NAME, 'not', 694, 11, 694, 14),
woosh.Token(woosh.NAME, 'isinstance', 694, 15, 694, 25),
woosh.Token(woosh.OP, '(', 694, 25, 694, 26),
woosh.Token(woosh.NAME, 'other', 694, 26, 694, 31),
woosh.Token(woosh.OP, ',', 694, 31, 694, 32),
woosh.Token(woosh.NAME, '_GenericAlias', 694, 33, 694, 46),
woosh.Token(woosh.OP, ')', 694, 46, 694, 47),
woosh.Token(woosh.OP, ':', 694, 47, 694, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 694, 48, 695, 0),
woosh.Token(woosh.INDENT, '            ', 695, 0, 695, 12),
woosh.Token(woosh.NAME, 'return', 695, 12, 695, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 695, 19, 695, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 695, 33, 696, 0),
woosh.Token(woosh.DEDENT, '        ', 696, 0, 696, 8),
woosh.Token(woosh.NAME, 'return', 696, 8, 696, 14),
woosh.Token(woosh.OP, '(', 696, 15, 696, 16),
woosh.Token(woosh.NAME, 'self', 696, 16, 696, 20),
woosh.Token(woosh.OP, '.', 696, 20, 696, 21),
woosh.Token(woosh.NAME, '__origin__', 696, 21, 696, 31),
woosh.Token(woosh.OP, '==', 696, 32, 696, 34),
woosh.Token(woosh.NAME, 'other', 696, 35, 696, 40),
woosh.Token(woosh.OP, '.', 696, 40, 696, 41),
woosh.Token(woosh.NAME, '__origin__', 696, 41, 696, 51),
woosh.Token(woosh.NAME, 'and', 697, 16, 697, 19),
woosh.Token(woosh.NAME, 'self', 697, 20, 697, 24),
woosh.Token(woosh.OP, '.', 697, 24, 697, 25),
woosh.Token(woosh.NAME, '__args__', 697, 25, 697, 33),
woosh.Token(woosh.OP, '==', 697, 34, 697, 36),
woosh.Token(woosh.NAME, 'other', 697, 37, 697, 42),
woosh.Token(woosh.OP, '.', 697, 42, 697, 43),
woosh.Token(woosh.NAME, '__args__', 697, 43, 697, 51),
woosh.Token(woosh.OP, ')', 697, 51, 697, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 697, 52, 698, 0),
woosh.Token(woosh.DEDENT, '    ', 699, 0, 699, 4),
woosh.Token(woosh.NAME, 'def', 699, 4, 699, 7),
woosh.Token(woosh.NAME, '__hash__', 699, 8, 699, 16),
woosh.Token(woosh.OP, '(', 699, 16, 699, 17),
woosh.Token(woosh.NAME, 'self', 699, 17, 699, 21),
woosh.Token(woosh.OP, ')', 699, 21, 699, 22),
woosh.Token(woosh.OP, ':', 699, 22, 699, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 23, 700, 0),
woosh.Token(woosh.INDENT, '        ', 700, 0, 700, 8),
woosh.Token(woosh.NAME, 'return', 700, 8, 700, 14),
woosh.Token(woosh.NAME, 'hash', 700, 15, 700, 19),
woosh.Token(woosh.OP, '(', 700, 19, 700, 20),
woosh.Token(woosh.OP, '(', 700, 20, 700, 21),
woosh.Token(woosh.NAME, 'self', 700, 21, 700, 25),
woosh.Token(woosh.OP, '.', 700, 25, 700, 26),
woosh.Token(woosh.NAME, '__origin__', 700, 26, 700, 36),
woosh.Token(woosh.OP, ',', 700, 36, 700, 37),
woosh.Token(woosh.NAME, 'self', 700, 38, 700, 42),
woosh.Token(woosh.OP, '.', 700, 42, 700, 43),
woosh.Token(woosh.NAME, '__args__', 700, 43, 700, 51),
woosh.Token(woosh.OP, ')', 700, 51, 700, 52),
woosh.Token(woosh.OP, ')', 700, 52, 700, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 53, 701, 0),
woosh.Token(woosh.DEDENT, '    ', 702, 0, 702, 4),
woosh.Token(woosh.NAME, 'def', 702, 4, 702, 7),
woosh.Token(woosh.NAME, '__or__', 702, 8, 702, 14),
woosh.Token(woosh.OP, '(', 702, 14, 702, 15),
woosh.Token(woosh.NAME, 'self', 702, 15, 702, 19),
woosh.Token(woosh.OP, ',', 702, 19, 702, 20),
woosh.Token(woosh.NAME, 'right', 702, 21, 702, 26),
woosh.Token(woosh.OP, ')', 702, 26, 702, 27),
woosh.Token(woosh.OP, ':', 702, 27, 702, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 28, 703, 0),
woosh.Token(woosh.INDENT, '        ', 703, 0, 703, 8),
woosh.Token(woosh.NAME, 'return', 703, 8, 703, 14),
woosh.Token(woosh.NAME, 'Union', 703, 15, 703, 20),
woosh.Token(woosh.OP, '[', 703, 20, 703, 21),
woosh.Token(woosh.NAME, 'self', 703, 21, 703, 25),
woosh.Token(woosh.OP, ',', 703, 25, 703, 26),
woosh.Token(woosh.NAME, 'right', 703, 27, 703, 32),
woosh.Token(woosh.OP, ']', 703, 32, 703, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 703, 33, 704, 0),
woosh.Token(woosh.DEDENT, '    ', 705, 0, 705, 4),
woosh.Token(woosh.NAME, 'def', 705, 4, 705, 7),
woosh.Token(woosh.NAME, '__ror__', 705, 8, 705, 15),
woosh.Token(woosh.OP, '(', 705, 15, 705, 16),
woosh.Token(woosh.NAME, 'self', 705, 16, 705, 20),
woosh.Token(woosh.OP, ',', 705, 20, 705, 21),
woosh.Token(woosh.NAME, 'right', 705, 22, 705, 27),
woosh.Token(woosh.OP, ')', 705, 27, 705, 28),
woosh.Token(woosh.OP, ':', 705, 28, 705, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 705, 29, 706, 0),
woosh.Token(woosh.INDENT, '        ', 706, 0, 706, 8),
woosh.Token(woosh.NAME, 'return', 706, 8, 706, 14),
woosh.Token(woosh.NAME, 'Union', 706, 15, 706, 20),
woosh.Token(woosh.OP, '[', 706, 20, 706, 21),
woosh.Token(woosh.NAME, 'self', 706, 21, 706, 25),
woosh.Token(woosh.OP, ',', 706, 25, 706, 26),
woosh.Token(woosh.NAME, 'right', 706, 27, 706, 32),
woosh.Token(woosh.OP, ']', 706, 32, 706, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 706, 33, 707, 0),
woosh.Token(woosh.DEDENT, '    ', 708, 0, 708, 4),
woosh.Token(woosh.OP, '@', 708, 4, 708, 5),
woosh.Token(woosh.NAME, '_tp_cache', 708, 5, 708, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 708, 14, 709, 0),
woosh.Token(woosh.NAME, 'def', 709, 4, 709, 7),
woosh.Token(woosh.NAME, '__getitem__', 709, 8, 709, 19),
woosh.Token(woosh.OP, '(', 709, 19, 709, 20),
woosh.Token(woosh.NAME, 'self', 709, 20, 709, 24),
woosh.Token(woosh.OP, ',', 709, 24, 709, 25),
woosh.Token(woosh.NAME, 'params', 709, 26, 709, 32),
woosh.Token(woosh.OP, ')', 709, 32, 709, 33),
woosh.Token(woosh.OP, ':', 709, 33, 709, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 34, 710, 0),
woosh.Token(woosh.INDENT, '        ', 710, 0, 710, 8),
woosh.Token(woosh.NAME, 'if', 710, 8, 710, 10),
woosh.Token(woosh.NAME, 'self', 710, 11, 710, 15),
woosh.Token(woosh.OP, '.', 710, 15, 710, 16),
woosh.Token(woosh.NAME, '__origin__', 710, 16, 710, 26),
woosh.Token(woosh.NAME, 'in', 710, 27, 710, 29),
woosh.Token(woosh.OP, '(', 710, 30, 710, 31),
woosh.Token(woosh.NAME, 'Generic', 710, 31, 710, 38),
woosh.Token(woosh.OP, ',', 710, 38, 710, 39),
woosh.Token(woosh.NAME, 'Protocol', 710, 40, 710, 48),
woosh.Token(woosh.OP, ')', 710, 48, 710, 49),
woosh.Token(woosh.OP, ':', 710, 49, 710, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 710, 50, 711, 0),
woosh.Token(woosh.COMMENT, "# Can't subscript Generic[...] or Protocol[...].", 711, 12, 711, 60),
woosh.Token(woosh.INDENT, '            ', 712, 0, 712, 12),
woosh.Token(woosh.NAME, 'raise', 712, 12, 712, 17),
woosh.Token(woosh.NAME, 'TypeError', 712, 18, 712, 27),
woosh.Token(woosh.OP, '(', 712, 27, 712, 28),
woosh.Token(woosh.STRING, 'f"Cannot subscript already-subscripted {self}"', 712, 28, 712, 74),
woosh.Token(woosh.OP, ')', 712, 74, 712, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 712, 75, 713, 0),
woosh.Token(woosh.DEDENT, '        ', 713, 0, 713, 8),
woosh.Token(woosh.NAME, 'if', 713, 8, 713, 10),
woosh.Token(woosh.NAME, 'not', 713, 11, 713, 14),
woosh.Token(woosh.NAME, 'isinstance', 713, 15, 713, 25),
woosh.Token(woosh.OP, '(', 713, 25, 713, 26),
woosh.Token(woosh.NAME, 'params', 713, 26, 713, 32),
woosh.Token(woosh.OP, ',', 713, 32, 713, 33),
woosh.Token(woosh.NAME, 'tuple', 713, 34, 713, 39),
woosh.Token(woosh.OP, ')', 713, 39, 713, 40),
woosh.Token(woosh.OP, ':', 713, 40, 713, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 713, 41, 714, 0),
woosh.Token(woosh.INDENT, '            ', 714, 0, 714, 12),
woosh.Token(woosh.NAME, 'params', 714, 12, 714, 18),
woosh.Token(woosh.OP, '=', 714, 19, 714, 20),
woosh.Token(woosh.OP, '(', 714, 21, 714, 22),
woosh.Token(woosh.NAME, 'params', 714, 22, 714, 28),
woosh.Token(woosh.OP, ',', 714, 28, 714, 29),
woosh.Token(woosh.OP, ')', 714, 29, 714, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 30, 715, 0),
woosh.Token(woosh.DEDENT, '        ', 715, 0, 715, 8),
woosh.Token(woosh.NAME, 'msg', 715, 8, 715, 11),
woosh.Token(woosh.OP, '=', 715, 12, 715, 13),
woosh.Token(woosh.STRING, '"Parameters to generic types must be types."', 715, 14, 715, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 58, 716, 0),
woosh.Token(woosh.NAME, 'params', 716, 8, 716, 14),
woosh.Token(woosh.OP, '=', 716, 15, 716, 16),
woosh.Token(woosh.NAME, 'tuple', 716, 17, 716, 22),
woosh.Token(woosh.OP, '(', 716, 22, 716, 23),
woosh.Token(woosh.NAME, '_type_check', 716, 23, 716, 34),
woosh.Token(woosh.OP, '(', 716, 34, 716, 35),
woosh.Token(woosh.NAME, 'p', 716, 35, 716, 36),
woosh.Token(woosh.OP, ',', 716, 36, 716, 37),
woosh.Token(woosh.NAME, 'msg', 716, 38, 716, 41),
woosh.Token(woosh.OP, ')', 716, 41, 716, 42),
woosh.Token(woosh.NAME, 'for', 716, 43, 716, 46),
woosh.Token(woosh.NAME, 'p', 716, 47, 716, 48),
woosh.Token(woosh.NAME, 'in', 716, 49, 716, 51),
woosh.Token(woosh.NAME, 'params', 716, 52, 716, 58),
woosh.Token(woosh.OP, ')', 716, 58, 716, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 59, 717, 0),
woosh.Token(woosh.NAME, '_check_generic', 717, 8, 717, 22),
woosh.Token(woosh.OP, '(', 717, 22, 717, 23),
woosh.Token(woosh.NAME, 'self', 717, 23, 717, 27),
woosh.Token(woosh.OP, ',', 717, 27, 717, 28),
woosh.Token(woosh.NAME, 'params', 717, 29, 717, 35),
woosh.Token(woosh.OP, ',', 717, 35, 717, 36),
woosh.Token(woosh.NAME, 'len', 717, 37, 717, 40),
woosh.Token(woosh.OP, '(', 717, 40, 717, 41),
woosh.Token(woosh.NAME, 'self', 717, 41, 717, 45),
woosh.Token(woosh.OP, '.', 717, 45, 717, 46),
woosh.Token(woosh.NAME, '__parameters__', 717, 46, 717, 60),
woosh.Token(woosh.OP, ')', 717, 60, 717, 61),
woosh.Token(woosh.OP, ')', 717, 61, 717, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 62, 718, 0),
woosh.Token(woosh.NAME, 'subst', 719, 8, 719, 13),
woosh.Token(woosh.OP, '=', 719, 14, 719, 15),
woosh.Token(woosh.NAME, 'dict', 719, 16, 719, 20),
woosh.Token(woosh.OP, '(', 719, 20, 719, 21),
woosh.Token(woosh.NAME, 'zip', 719, 21, 719, 24),
woosh.Token(woosh.OP, '(', 719, 24, 719, 25),
woosh.Token(woosh.NAME, 'self', 719, 25, 719, 29),
woosh.Token(woosh.OP, '.', 719, 29, 719, 30),
woosh.Token(woosh.NAME, '__parameters__', 719, 30, 719, 44),
woosh.Token(woosh.OP, ',', 719, 44, 719, 45),
woosh.Token(woosh.NAME, 'params', 719, 46, 719, 52),
woosh.Token(woosh.OP, ')', 719, 52, 719, 53),
woosh.Token(woosh.OP, ')', 719, 53, 719, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 719, 54, 720, 0),
woosh.Token(woosh.NAME, 'new_args', 720, 8, 720, 16),
woosh.Token(woosh.OP, '=', 720, 17, 720, 18),
woosh.Token(woosh.OP, '[', 720, 19, 720, 20),
woosh.Token(woosh.OP, ']', 720, 20, 720, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 21, 721, 0),
woosh.Token(woosh.NAME, 'for', 721, 8, 721, 11),
woosh.Token(woosh.NAME, 'arg', 721, 12, 721, 15),
woosh.Token(woosh.NAME, 'in', 721, 16, 721, 18),
woosh.Token(woosh.NAME, 'self', 721, 19, 721, 23),
woosh.Token(woosh.OP, '.', 721, 23, 721, 24),
woosh.Token(woosh.NAME, '__args__', 721, 24, 721, 32),
woosh.Token(woosh.OP, ':', 721, 32, 721, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 33, 722, 0),
woosh.Token(woosh.INDENT, '            ', 722, 0, 722, 12),
woosh.Token(woosh.NAME, 'if', 722, 12, 722, 14),
woosh.Token(woosh.NAME, 'isinstance', 722, 15, 722, 25),
woosh.Token(woosh.OP, '(', 722, 25, 722, 26),
woosh.Token(woosh.NAME, 'arg', 722, 26, 722, 29),
woosh.Token(woosh.OP, ',', 722, 29, 722, 30),
woosh.Token(woosh.NAME, 'TypeVar', 722, 31, 722, 38),
woosh.Token(woosh.OP, ')', 722, 38, 722, 39),
woosh.Token(woosh.OP, ':', 722, 39, 722, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 722, 40, 723, 0),
woosh.Token(woosh.INDENT, '                ', 723, 0, 723, 16),
woosh.Token(woosh.NAME, 'arg', 723, 16, 723, 19),
woosh.Token(woosh.OP, '=', 723, 20, 723, 21),
woosh.Token(woosh.NAME, 'subst', 723, 22, 723, 27),
woosh.Token(woosh.OP, '[', 723, 27, 723, 28),
woosh.Token(woosh.NAME, 'arg', 723, 28, 723, 31),
woosh.Token(woosh.OP, ']', 723, 31, 723, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 32, 724, 0),
woosh.Token(woosh.DEDENT, '            ', 724, 0, 724, 12),
woosh.Token(woosh.NAME, 'elif', 724, 12, 724, 16),
woosh.Token(woosh.NAME, 'isinstance', 724, 17, 724, 27),
woosh.Token(woosh.OP, '(', 724, 27, 724, 28),
woosh.Token(woosh.NAME, 'arg', 724, 28, 724, 31),
woosh.Token(woosh.OP, ',', 724, 31, 724, 32),
woosh.Token(woosh.OP, '(', 724, 33, 724, 34),
woosh.Token(woosh.NAME, '_GenericAlias', 724, 34, 724, 47),
woosh.Token(woosh.OP, ',', 724, 47, 724, 48),
woosh.Token(woosh.NAME, 'GenericAlias', 724, 49, 724, 61),
woosh.Token(woosh.OP, ')', 724, 61, 724, 62),
woosh.Token(woosh.OP, ')', 724, 62, 724, 63),
woosh.Token(woosh.OP, ':', 724, 63, 724, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 724, 64, 725, 0),
woosh.Token(woosh.INDENT, '                ', 725, 0, 725, 16),
woosh.Token(woosh.NAME, 'subparams', 725, 16, 725, 25),
woosh.Token(woosh.OP, '=', 725, 26, 725, 27),
woosh.Token(woosh.NAME, 'arg', 725, 28, 725, 31),
woosh.Token(woosh.OP, '.', 725, 31, 725, 32),
woosh.Token(woosh.NAME, '__parameters__', 725, 32, 725, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 46, 726, 0),
woosh.Token(woosh.NAME, 'if', 726, 16, 726, 18),
woosh.Token(woosh.NAME, 'subparams', 726, 19, 726, 28),
woosh.Token(woosh.OP, ':', 726, 28, 726, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 29, 727, 0),
woosh.Token(woosh.INDENT, '                    ', 727, 0, 727, 20),
woosh.Token(woosh.NAME, 'subargs', 727, 20, 727, 27),
woosh.Token(woosh.OP, '=', 727, 28, 727, 29),
woosh.Token(woosh.NAME, 'tuple', 727, 30, 727, 35),
woosh.Token(woosh.OP, '(', 727, 35, 727, 36),
woosh.Token(woosh.NAME, 'subst', 727, 36, 727, 41),
woosh.Token(woosh.OP, '[', 727, 41, 727, 42),
woosh.Token(woosh.NAME, 'x', 727, 42, 727, 43),
woosh.Token(woosh.OP, ']', 727, 43, 727, 44),
woosh.Token(woosh.NAME, 'for', 727, 45, 727, 48),
woosh.Token(woosh.NAME, 'x', 727, 49, 727, 50),
woosh.Token(woosh.NAME, 'in', 727, 51, 727, 53),
woosh.Token(woosh.NAME, 'subparams', 727, 54, 727, 63),
woosh.Token(woosh.OP, ')', 727, 63, 727, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 64, 728, 0),
woosh.Token(woosh.NAME, 'arg', 728, 20, 728, 23),
woosh.Token(woosh.OP, '=', 728, 24, 728, 25),
woosh.Token(woosh.NAME, 'arg', 728, 26, 728, 29),
woosh.Token(woosh.OP, '[', 728, 29, 728, 30),
woosh.Token(woosh.NAME, 'subargs', 728, 30, 728, 37),
woosh.Token(woosh.OP, ']', 728, 37, 728, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 38, 729, 0),
woosh.Token(woosh.DEDENT, '            ', 729, 0, 729, 12),
woosh.Token(woosh.DEDENT, '', 729, 12, 729, 12),
woosh.Token(woosh.NAME, 'new_args', 729, 12, 729, 20),
woosh.Token(woosh.OP, '.', 729, 20, 729, 21),
woosh.Token(woosh.NAME, 'append', 729, 21, 729, 27),
woosh.Token(woosh.OP, '(', 729, 27, 729, 28),
woosh.Token(woosh.NAME, 'arg', 729, 28, 729, 31),
woosh.Token(woosh.OP, ')', 729, 31, 729, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 729, 32, 730, 0),
woosh.Token(woosh.DEDENT, '        ', 730, 0, 730, 8),
woosh.Token(woosh.NAME, 'return', 730, 8, 730, 14),
woosh.Token(woosh.NAME, 'self', 730, 15, 730, 19),
woosh.Token(woosh.OP, '.', 730, 19, 730, 20),
woosh.Token(woosh.NAME, 'copy_with', 730, 20, 730, 29),
woosh.Token(woosh.OP, '(', 730, 29, 730, 30),
woosh.Token(woosh.NAME, 'tuple', 730, 30, 730, 35),
woosh.Token(woosh.OP, '(', 730, 35, 730, 36),
woosh.Token(woosh.NAME, 'new_args', 730, 36, 730, 44),
woosh.Token(woosh.OP, ')', 730, 44, 730, 45),
woosh.Token(woosh.OP, ')', 730, 45, 730, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 730, 46, 731, 0),
woosh.Token(woosh.DEDENT, '    ', 732, 0, 732, 4),
woosh.Token(woosh.NAME, 'def', 732, 4, 732, 7),
woosh.Token(woosh.NAME, 'copy_with', 732, 8, 732, 17),
woosh.Token(woosh.OP, '(', 732, 17, 732, 18),
woosh.Token(woosh.NAME, 'self', 732, 18, 732, 22),
woosh.Token(woosh.OP, ',', 732, 22, 732, 23),
woosh.Token(woosh.NAME, 'params', 732, 24, 732, 30),
woosh.Token(woosh.OP, ')', 732, 30, 732, 31),
woosh.Token(woosh.OP, ':', 732, 31, 732, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 732, 32, 733, 0),
woosh.Token(woosh.INDENT, '        ', 733, 0, 733, 8),
woosh.Token(woosh.NAME, 'return', 733, 8, 733, 14),
woosh.Token(woosh.NAME, 'self', 733, 15, 733, 19),
woosh.Token(woosh.OP, '.', 733, 19, 733, 20),
woosh.Token(woosh.NAME, '__class__', 733, 20, 733, 29),
woosh.Token(woosh.OP, '(', 733, 29, 733, 30),
woosh.Token(woosh.NAME, 'self', 733, 30, 733, 34),
woosh.Token(woosh.OP, '.', 733, 34, 733, 35),
woosh.Token(woosh.NAME, '__origin__', 733, 35, 733, 45),
woosh.Token(woosh.OP, ',', 733, 45, 733, 46),
woosh.Token(woosh.NAME, 'params', 733, 47, 733, 53),
woosh.Token(woosh.OP, ',', 733, 53, 733, 54),
woosh.Token(woosh.NAME, 'name', 733, 55, 733, 59),
woosh.Token(woosh.OP, '=', 733, 59, 733, 60),
woosh.Token(woosh.NAME, 'self', 733, 60, 733, 64),
woosh.Token(woosh.OP, '.', 733, 64, 733, 65),
woosh.Token(woosh.NAME, '_name', 733, 65, 733, 70),
woosh.Token(woosh.OP, ',', 733, 70, 733, 71),
woosh.Token(woosh.NAME, 'inst', 733, 72, 733, 76),
woosh.Token(woosh.OP, '=', 733, 76, 733, 77),
woosh.Token(woosh.NAME, 'self', 733, 77, 733, 81),
woosh.Token(woosh.OP, '.', 733, 81, 733, 82),
woosh.Token(woosh.NAME, '_inst', 733, 82, 733, 87),
woosh.Token(woosh.OP, ')', 733, 87, 733, 88),
woosh.Token(woosh.NEWLINE, '\r\n', 733, 88, 734, 0),
woosh.Token(woosh.DEDENT, '    ', 735, 0, 735, 4),
woosh.Token(woosh.NAME, 'def', 735, 4, 735, 7),
woosh.Token(woosh.NAME, '__repr__', 735, 8, 735, 16),
woosh.Token(woosh.OP, '(', 735, 16, 735, 17),
woosh.Token(woosh.NAME, 'self', 735, 17, 735, 21),
woosh.Token(woosh.OP, ')', 735, 21, 735, 22),
woosh.Token(woosh.OP, ':', 735, 22, 735, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 735, 23, 736, 0),
woosh.Token(woosh.INDENT, '        ', 736, 0, 736, 8),
woosh.Token(woosh.NAME, 'if', 736, 8, 736, 10),
woosh.Token(woosh.NAME, 'self', 736, 11, 736, 15),
woosh.Token(woosh.OP, '.', 736, 15, 736, 16),
woosh.Token(woosh.NAME, '_name', 736, 16, 736, 21),
woosh.Token(woosh.OP, ':', 736, 21, 736, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 22, 737, 0),
woosh.Token(woosh.INDENT, '            ', 737, 0, 737, 12),
woosh.Token(woosh.NAME, 'name', 737, 12, 737, 16),
woosh.Token(woosh.OP, '=', 737, 17, 737, 18),
woosh.Token(woosh.STRING, "'typing.'", 737, 19, 737, 28),
woosh.Token(woosh.OP, '+', 737, 29, 737, 30),
woosh.Token(woosh.NAME, 'self', 737, 31, 737, 35),
woosh.Token(woosh.OP, '.', 737, 35, 737, 36),
woosh.Token(woosh.NAME, '_name', 737, 36, 737, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 737, 41, 738, 0),
woosh.Token(woosh.DEDENT, '        ', 738, 0, 738, 8),
woosh.Token(woosh.NAME, 'else', 738, 8, 738, 12),
woosh.Token(woosh.OP, ':', 738, 12, 738, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 13, 739, 0),
woosh.Token(woosh.INDENT, '            ', 739, 0, 739, 12),
woosh.Token(woosh.NAME, 'name', 739, 12, 739, 16),
woosh.Token(woosh.OP, '=', 739, 17, 739, 18),
woosh.Token(woosh.NAME, '_type_repr', 739, 19, 739, 29),
woosh.Token(woosh.OP, '(', 739, 29, 739, 30),
woosh.Token(woosh.NAME, 'self', 739, 30, 739, 34),
woosh.Token(woosh.OP, '.', 739, 34, 739, 35),
woosh.Token(woosh.NAME, '__origin__', 739, 35, 739, 45),
woosh.Token(woosh.OP, ')', 739, 45, 739, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 46, 740, 0),
woosh.Token(woosh.DEDENT, '        ', 740, 0, 740, 8),
woosh.Token(woosh.NAME, 'args', 740, 8, 740, 12),
woosh.Token(woosh.OP, '=', 740, 13, 740, 14),
woosh.Token(woosh.STRING, '", "', 740, 15, 740, 19),
woosh.Token(woosh.OP, '.', 740, 19, 740, 20),
woosh.Token(woosh.NAME, 'join', 740, 20, 740, 24),
woosh.Token(woosh.OP, '(', 740, 24, 740, 25),
woosh.Token(woosh.OP, '[', 740, 25, 740, 26),
woosh.Token(woosh.NAME, '_type_repr', 740, 26, 740, 36),
woosh.Token(woosh.OP, '(', 740, 36, 740, 37),
woosh.Token(woosh.NAME, 'a', 740, 37, 740, 38),
woosh.Token(woosh.OP, ')', 740, 38, 740, 39),
woosh.Token(woosh.NAME, 'for', 740, 40, 740, 43),
woosh.Token(woosh.NAME, 'a', 740, 44, 740, 45),
woosh.Token(woosh.NAME, 'in', 740, 46, 740, 48),
woosh.Token(woosh.NAME, 'self', 740, 49, 740, 53),
woosh.Token(woosh.OP, '.', 740, 53, 740, 54),
woosh.Token(woosh.NAME, '__args__', 740, 54, 740, 62),
woosh.Token(woosh.OP, ']', 740, 62, 740, 63),
woosh.Token(woosh.OP, ')', 740, 63, 740, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 740, 64, 741, 0),
woosh.Token(woosh.NAME, 'return', 741, 8, 741, 14),
woosh.Token(woosh.STRING, "f'{name}[{args}]'", 741, 15, 741, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 32, 742, 0),
woosh.Token(woosh.DEDENT, '    ', 743, 0, 743, 4),
woosh.Token(woosh.NAME, 'def', 743, 4, 743, 7),
woosh.Token(woosh.NAME, '__reduce__', 743, 8, 743, 18),
woosh.Token(woosh.OP, '(', 743, 18, 743, 19),
woosh.Token(woosh.NAME, 'self', 743, 19, 743, 23),
woosh.Token(woosh.OP, ')', 743, 23, 743, 24),
woosh.Token(woosh.OP, ':', 743, 24, 743, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 25, 744, 0),
woosh.Token(woosh.INDENT, '        ', 744, 0, 744, 8),
woosh.Token(woosh.NAME, 'if', 744, 8, 744, 10),
woosh.Token(woosh.NAME, 'self', 744, 11, 744, 15),
woosh.Token(woosh.OP, '.', 744, 15, 744, 16),
woosh.Token(woosh.NAME, '_name', 744, 16, 744, 21),
woosh.Token(woosh.OP, ':', 744, 21, 744, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 22, 745, 0),
woosh.Token(woosh.INDENT, '            ', 745, 0, 745, 12),
woosh.Token(woosh.NAME, 'origin', 745, 12, 745, 18),
woosh.Token(woosh.OP, '=', 745, 19, 745, 20),
woosh.Token(woosh.NAME, 'globals', 745, 21, 745, 28),
woosh.Token(woosh.OP, '(', 745, 28, 745, 29),
woosh.Token(woosh.OP, ')', 745, 29, 745, 30),
woosh.Token(woosh.OP, '[', 745, 30, 745, 31),
woosh.Token(woosh.NAME, 'self', 745, 31, 745, 35),
woosh.Token(woosh.OP, '.', 745, 35, 745, 36),
woosh.Token(woosh.NAME, '_name', 745, 36, 745, 41),
woosh.Token(woosh.OP, ']', 745, 41, 745, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 745, 42, 746, 0),
woosh.Token(woosh.DEDENT, '        ', 746, 0, 746, 8),
woosh.Token(woosh.NAME, 'else', 746, 8, 746, 12),
woosh.Token(woosh.OP, ':', 746, 12, 746, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 13, 747, 0),
woosh.Token(woosh.INDENT, '            ', 747, 0, 747, 12),
woosh.Token(woosh.NAME, 'origin', 747, 12, 747, 18),
woosh.Token(woosh.OP, '=', 747, 19, 747, 20),
woosh.Token(woosh.NAME, 'self', 747, 21, 747, 25),
woosh.Token(woosh.OP, '.', 747, 25, 747, 26),
woosh.Token(woosh.NAME, '__origin__', 747, 26, 747, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 36, 748, 0),
woosh.Token(woosh.DEDENT, '        ', 748, 0, 748, 8),
woosh.Token(woosh.NAME, 'args', 748, 8, 748, 12),
woosh.Token(woosh.OP, '=', 748, 13, 748, 14),
woosh.Token(woosh.NAME, 'tuple', 748, 15, 748, 20),
woosh.Token(woosh.OP, '(', 748, 20, 748, 21),
woosh.Token(woosh.NAME, 'self', 748, 21, 748, 25),
woosh.Token(woosh.OP, '.', 748, 25, 748, 26),
woosh.Token(woosh.NAME, '__args__', 748, 26, 748, 34),
woosh.Token(woosh.OP, ')', 748, 34, 748, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 35, 749, 0),
woosh.Token(woosh.NAME, 'if', 749, 8, 749, 10),
woosh.Token(woosh.NAME, 'len', 749, 11, 749, 14),
woosh.Token(woosh.OP, '(', 749, 14, 749, 15),
woosh.Token(woosh.NAME, 'args', 749, 15, 749, 19),
woosh.Token(woosh.OP, ')', 749, 19, 749, 20),
woosh.Token(woosh.OP, '==', 749, 21, 749, 23),
woosh.Token(woosh.NUMBER, '1', 749, 24, 749, 25),
woosh.Token(woosh.NAME, 'and', 749, 26, 749, 29),
woosh.Token(woosh.NAME, 'not', 749, 30, 749, 33),
woosh.Token(woosh.NAME, 'isinstance', 749, 34, 749, 44),
woosh.Token(woosh.OP, '(', 749, 44, 749, 45),
woosh.Token(woosh.NAME, 'args', 749, 45, 749, 49),
woosh.Token(woosh.OP, '[', 749, 49, 749, 50),
woosh.Token(woosh.NUMBER, '0', 749, 50, 749, 51),
woosh.Token(woosh.OP, ']', 749, 51, 749, 52),
woosh.Token(woosh.OP, ',', 749, 52, 749, 53),
woosh.Token(woosh.NAME, 'tuple', 749, 54, 749, 59),
woosh.Token(woosh.OP, ')', 749, 59, 749, 60),
woosh.Token(woosh.OP, ':', 749, 60, 749, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 749, 61, 750, 0),
woosh.Token(woosh.INDENT, '            ', 750, 0, 750, 12),
woosh.Token(woosh.NAME, 'args', 750, 12, 750, 16),
woosh.Token(woosh.OP, ',', 750, 16, 750, 17),
woosh.Token(woosh.OP, '=', 750, 18, 750, 19),
woosh.Token(woosh.NAME, 'args', 750, 20, 750, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 24, 751, 0),
woosh.Token(woosh.DEDENT, '        ', 751, 0, 751, 8),
woosh.Token(woosh.NAME, 'return', 751, 8, 751, 14),
woosh.Token(woosh.NAME, 'operator', 751, 15, 751, 23),
woosh.Token(woosh.OP, '.', 751, 23, 751, 24),
woosh.Token(woosh.NAME, 'getitem', 751, 24, 751, 31),
woosh.Token(woosh.OP, ',', 751, 31, 751, 32),
woosh.Token(woosh.OP, '(', 751, 33, 751, 34),
woosh.Token(woosh.NAME, 'origin', 751, 34, 751, 40),
woosh.Token(woosh.OP, ',', 751, 40, 751, 41),
woosh.Token(woosh.NAME, 'args', 751, 42, 751, 46),
woosh.Token(woosh.OP, ')', 751, 46, 751, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 751, 47, 752, 0),
woosh.Token(woosh.DEDENT, '    ', 753, 0, 753, 4),
woosh.Token(woosh.NAME, 'def', 753, 4, 753, 7),
woosh.Token(woosh.NAME, '__mro_entries__', 753, 8, 753, 23),
woosh.Token(woosh.OP, '(', 753, 23, 753, 24),
woosh.Token(woosh.NAME, 'self', 753, 24, 753, 28),
woosh.Token(woosh.OP, ',', 753, 28, 753, 29),
woosh.Token(woosh.NAME, 'bases', 753, 30, 753, 35),
woosh.Token(woosh.OP, ')', 753, 35, 753, 36),
woosh.Token(woosh.OP, ':', 753, 36, 753, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 37, 754, 0),
woosh.Token(woosh.INDENT, '        ', 754, 0, 754, 8),
woosh.Token(woosh.NAME, 'if', 754, 8, 754, 10),
woosh.Token(woosh.NAME, 'self', 754, 11, 754, 15),
woosh.Token(woosh.OP, '.', 754, 15, 754, 16),
woosh.Token(woosh.NAME, '_name', 754, 16, 754, 21),
woosh.Token(woosh.OP, ':', 754, 21, 754, 22),
woosh.Token(woosh.COMMENT, '# generic version of an ABC or built-in class', 754, 24, 754, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 69, 755, 0),
woosh.Token(woosh.INDENT, '            ', 755, 0, 755, 12),
woosh.Token(woosh.NAME, 'return', 755, 12, 755, 18),
woosh.Token(woosh.NAME, 'super', 755, 19, 755, 24),
woosh.Token(woosh.OP, '(', 755, 24, 755, 25),
woosh.Token(woosh.OP, ')', 755, 25, 755, 26),
woosh.Token(woosh.OP, '.', 755, 26, 755, 27),
woosh.Token(woosh.NAME, '__mro_entries__', 755, 27, 755, 42),
woosh.Token(woosh.OP, '(', 755, 42, 755, 43),
woosh.Token(woosh.NAME, 'bases', 755, 43, 755, 48),
woosh.Token(woosh.OP, ')', 755, 48, 755, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 755, 49, 756, 0),
woosh.Token(woosh.DEDENT, '        ', 756, 0, 756, 8),
woosh.Token(woosh.NAME, 'if', 756, 8, 756, 10),
woosh.Token(woosh.NAME, 'self', 756, 11, 756, 15),
woosh.Token(woosh.OP, '.', 756, 15, 756, 16),
woosh.Token(woosh.NAME, '__origin__', 756, 16, 756, 26),
woosh.Token(woosh.NAME, 'is', 756, 27, 756, 29),
woosh.Token(woosh.NAME, 'Generic', 756, 30, 756, 37),
woosh.Token(woosh.OP, ':', 756, 37, 756, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 38, 757, 0),
woosh.Token(woosh.INDENT, '            ', 757, 0, 757, 12),
woosh.Token(woosh.NAME, 'if', 757, 12, 757, 14),
woosh.Token(woosh.NAME, 'Protocol', 757, 15, 757, 23),
woosh.Token(woosh.NAME, 'in', 757, 24, 757, 26),
woosh.Token(woosh.NAME, 'bases', 757, 27, 757, 32),
woosh.Token(woosh.OP, ':', 757, 32, 757, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 33, 758, 0),
woosh.Token(woosh.INDENT, '                ', 758, 0, 758, 16),
woosh.Token(woosh.NAME, 'return', 758, 16, 758, 22),
woosh.Token(woosh.OP, '(', 758, 23, 758, 24),
woosh.Token(woosh.OP, ')', 758, 24, 758, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 25, 759, 0),
woosh.Token(woosh.DEDENT, '            ', 759, 0, 759, 12),
woosh.Token(woosh.NAME, 'i', 759, 12, 759, 13),
woosh.Token(woosh.OP, '=', 759, 14, 759, 15),
woosh.Token(woosh.NAME, 'bases', 759, 16, 759, 21),
woosh.Token(woosh.OP, '.', 759, 21, 759, 22),
woosh.Token(woosh.NAME, 'index', 759, 22, 759, 27),
woosh.Token(woosh.OP, '(', 759, 27, 759, 28),
woosh.Token(woosh.NAME, 'self', 759, 28, 759, 32),
woosh.Token(woosh.OP, ')', 759, 32, 759, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 33, 760, 0),
woosh.Token(woosh.NAME, 'for', 760, 12, 760, 15),
woosh.Token(woosh.NAME, 'b', 760, 16, 760, 17),
woosh.Token(woosh.NAME, 'in', 760, 18, 760, 20),
woosh.Token(woosh.NAME, 'bases', 760, 21, 760, 26),
woosh.Token(woosh.OP, '[', 760, 26, 760, 27),
woosh.Token(woosh.NAME, 'i', 760, 27, 760, 28),
woosh.Token(woosh.OP, '+', 760, 28, 760, 29),
woosh.Token(woosh.NUMBER, '1', 760, 29, 760, 30),
woosh.Token(woosh.OP, ':', 760, 30, 760, 31),
woosh.Token(woosh.OP, ']', 760, 31, 760, 32),
woosh.Token(woosh.OP, ':', 760, 32, 760, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 33, 761, 0),
woosh.Token(woosh.INDENT, '                ', 761, 0, 761, 16),
woosh.Token(woosh.NAME, 'if', 761, 16, 761, 18),
woosh.Token(woosh.NAME, 'isinstance', 761, 19, 761, 29),
woosh.Token(woosh.OP, '(', 761, 29, 761, 30),
woosh.Token(woosh.NAME, 'b', 761, 30, 761, 31),
woosh.Token(woosh.OP, ',', 761, 31, 761, 32),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 761, 33, 761, 50),
woosh.Token(woosh.OP, ')', 761, 50, 761, 51),
woosh.Token(woosh.NAME, 'and', 761, 52, 761, 55),
woosh.Token(woosh.NAME, 'b', 761, 56, 761, 57),
woosh.Token(woosh.NAME, 'is', 761, 58, 761, 60),
woosh.Token(woosh.NAME, 'not', 761, 61, 761, 64),
woosh.Token(woosh.NAME, 'self', 761, 65, 761, 69),
woosh.Token(woosh.OP, ':', 761, 69, 761, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 70, 762, 0),
woosh.Token(woosh.INDENT, '                    ', 762, 0, 762, 20),
woosh.Token(woosh.NAME, 'return', 762, 20, 762, 26),
woosh.Token(woosh.OP, '(', 762, 27, 762, 28),
woosh.Token(woosh.OP, ')', 762, 28, 762, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 762, 29, 763, 0),
woosh.Token(woosh.DEDENT, '        ', 763, 0, 763, 8),
woosh.Token(woosh.DEDENT, '', 763, 8, 763, 8),
woosh.Token(woosh.DEDENT, '', 763, 8, 763, 8),
woosh.Token(woosh.NAME, 'return', 763, 8, 763, 14),
woosh.Token(woosh.OP, '(', 763, 15, 763, 16),
woosh.Token(woosh.NAME, 'self', 763, 16, 763, 20),
woosh.Token(woosh.OP, '.', 763, 20, 763, 21),
woosh.Token(woosh.NAME, '__origin__', 763, 21, 763, 31),
woosh.Token(woosh.OP, ',', 763, 31, 763, 32),
woosh.Token(woosh.OP, ')', 763, 32, 763, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 763, 33, 764, 0),
woosh.Token(woosh.COMMENT, '# _nparams is the number of accepted parameters, e.g. 0 for Hashable,', 766, 0, 766, 69),
woosh.Token(woosh.COMMENT, '# 1 for List and 2 for Dict.  It may be -1 if variable number of', 767, 0, 767, 64),
woosh.Token(woosh.COMMENT, '# parameters are accepted (needs custom __getitem__).', 768, 0, 768, 53),
woosh.Token(woosh.DEDENT, '', 770, 0, 770, 0),
woosh.Token(woosh.DEDENT, '', 770, 0, 770, 0),
woosh.Token(woosh.NAME, 'class', 770, 0, 770, 5),
woosh.Token(woosh.NAME, '_SpecialGenericAlias', 770, 6, 770, 26),
woosh.Token(woosh.OP, '(', 770, 26, 770, 27),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 770, 27, 770, 44),
woosh.Token(woosh.OP, ',', 770, 44, 770, 45),
woosh.Token(woosh.NAME, '_root', 770, 46, 770, 51),
woosh.Token(woosh.OP, '=', 770, 51, 770, 52),
woosh.Token(woosh.NAME, 'True', 770, 52, 770, 56),
woosh.Token(woosh.OP, ')', 770, 56, 770, 57),
woosh.Token(woosh.OP, ':', 770, 57, 770, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 58, 771, 0),
woosh.Token(woosh.INDENT, '    ', 771, 0, 771, 4),
woosh.Token(woosh.NAME, 'def', 771, 4, 771, 7),
woosh.Token(woosh.NAME, '__init__', 771, 8, 771, 16),
woosh.Token(woosh.OP, '(', 771, 16, 771, 17),
woosh.Token(woosh.NAME, 'self', 771, 17, 771, 21),
woosh.Token(woosh.OP, ',', 771, 21, 771, 22),
woosh.Token(woosh.NAME, 'origin', 771, 23, 771, 29),
woosh.Token(woosh.OP, ',', 771, 29, 771, 30),
woosh.Token(woosh.NAME, 'nparams', 771, 31, 771, 38),
woosh.Token(woosh.OP, ',', 771, 38, 771, 39),
woosh.Token(woosh.OP, '*', 771, 40, 771, 41),
woosh.Token(woosh.OP, ',', 771, 41, 771, 42),
woosh.Token(woosh.NAME, 'inst', 771, 43, 771, 47),
woosh.Token(woosh.OP, '=', 771, 47, 771, 48),
woosh.Token(woosh.NAME, 'True', 771, 48, 771, 52),
woosh.Token(woosh.OP, ',', 771, 52, 771, 53),
woosh.Token(woosh.NAME, 'name', 771, 54, 771, 58),
woosh.Token(woosh.OP, '=', 771, 58, 771, 59),
woosh.Token(woosh.NAME, 'None', 771, 59, 771, 63),
woosh.Token(woosh.OP, ')', 771, 63, 771, 64),
woosh.Token(woosh.OP, ':', 771, 64, 771, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 771, 65, 772, 0),
woosh.Token(woosh.INDENT, '        ', 772, 0, 772, 8),
woosh.Token(woosh.NAME, 'if', 772, 8, 772, 10),
woosh.Token(woosh.NAME, 'name', 772, 11, 772, 15),
woosh.Token(woosh.NAME, 'is', 772, 16, 772, 18),
woosh.Token(woosh.NAME, 'None', 772, 19, 772, 23),
woosh.Token(woosh.OP, ':', 772, 23, 772, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 772, 24, 773, 0),
woosh.Token(woosh.INDENT, '            ', 773, 0, 773, 12),
woosh.Token(woosh.NAME, 'name', 773, 12, 773, 16),
woosh.Token(woosh.OP, '=', 773, 17, 773, 18),
woosh.Token(woosh.NAME, 'origin', 773, 19, 773, 25),
woosh.Token(woosh.OP, '.', 773, 25, 773, 26),
woosh.Token(woosh.NAME, '__name__', 773, 26, 773, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 773, 34, 774, 0),
woosh.Token(woosh.DEDENT, '        ', 774, 0, 774, 8),
woosh.Token(woosh.NAME, 'super', 774, 8, 774, 13),
woosh.Token(woosh.OP, '(', 774, 13, 774, 14),
woosh.Token(woosh.OP, ')', 774, 14, 774, 15),
woosh.Token(woosh.OP, '.', 774, 15, 774, 16),
woosh.Token(woosh.NAME, '__init__', 774, 16, 774, 24),
woosh.Token(woosh.OP, '(', 774, 24, 774, 25),
woosh.Token(woosh.NAME, 'origin', 774, 25, 774, 31),
woosh.Token(woosh.OP, ',', 774, 31, 774, 32),
woosh.Token(woosh.NAME, 'inst', 774, 33, 774, 37),
woosh.Token(woosh.OP, '=', 774, 37, 774, 38),
woosh.Token(woosh.NAME, 'inst', 774, 38, 774, 42),
woosh.Token(woosh.OP, ',', 774, 42, 774, 43),
woosh.Token(woosh.NAME, 'name', 774, 44, 774, 48),
woosh.Token(woosh.OP, '=', 774, 48, 774, 49),
woosh.Token(woosh.NAME, 'name', 774, 49, 774, 53),
woosh.Token(woosh.OP, ')', 774, 53, 774, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 54, 775, 0),
woosh.Token(woosh.NAME, 'self', 775, 8, 775, 12),
woosh.Token(woosh.OP, '.', 775, 12, 775, 13),
woosh.Token(woosh.NAME, '_nparams', 775, 13, 775, 21),
woosh.Token(woosh.OP, '=', 775, 22, 775, 23),
woosh.Token(woosh.NAME, 'nparams', 775, 24, 775, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 31, 776, 0),
woosh.Token(woosh.NAME, 'if', 776, 8, 776, 10),
woosh.Token(woosh.NAME, 'origin', 776, 11, 776, 17),
woosh.Token(woosh.OP, '.', 776, 17, 776, 18),
woosh.Token(woosh.NAME, '__module__', 776, 18, 776, 28),
woosh.Token(woosh.OP, '==', 776, 29, 776, 31),
woosh.Token(woosh.STRING, "'builtins'", 776, 32, 776, 42),
woosh.Token(woosh.OP, ':', 776, 42, 776, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 776, 43, 777, 0),
woosh.Token(woosh.INDENT, '            ', 777, 0, 777, 12),
woosh.Token(woosh.NAME, 'self', 777, 12, 777, 16),
woosh.Token(woosh.OP, '.', 777, 16, 777, 17),
woosh.Token(woosh.NAME, '__doc__', 777, 17, 777, 24),
woosh.Token(woosh.OP, '=', 777, 25, 777, 26),
woosh.Token(woosh.STRING, "f'A generic version of {origin.__qualname__}.'", 777, 27, 777, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 73, 778, 0),
woosh.Token(woosh.DEDENT, '        ', 778, 0, 778, 8),
woosh.Token(woosh.NAME, 'else', 778, 8, 778, 12),
woosh.Token(woosh.OP, ':', 778, 12, 778, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 13, 779, 0),
woosh.Token(woosh.INDENT, '            ', 779, 0, 779, 12),
woosh.Token(woosh.NAME, 'self', 779, 12, 779, 16),
woosh.Token(woosh.OP, '.', 779, 16, 779, 17),
woosh.Token(woosh.NAME, '__doc__', 779, 17, 779, 24),
woosh.Token(woosh.OP, '=', 779, 25, 779, 26),
woosh.Token(woosh.STRING, "f'A generic version of {origin.__module__}.{origin.__qualname__}.'", 779, 27, 779, 93),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 93, 780, 0),
woosh.Token(woosh.DEDENT, '    ', 781, 0, 781, 4),
woosh.Token(woosh.DEDENT, '', 781, 4, 781, 4),
woosh.Token(woosh.OP, '@', 781, 4, 781, 5),
woosh.Token(woosh.NAME, '_tp_cache', 781, 5, 781, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 14, 782, 0),
woosh.Token(woosh.NAME, 'def', 782, 4, 782, 7),
woosh.Token(woosh.NAME, '__getitem__', 782, 8, 782, 19),
woosh.Token(woosh.OP, '(', 782, 19, 782, 20),
woosh.Token(woosh.NAME, 'self', 782, 20, 782, 24),
woosh.Token(woosh.OP, ',', 782, 24, 782, 25),
woosh.Token(woosh.NAME, 'params', 782, 26, 782, 32),
woosh.Token(woosh.OP, ')', 782, 32, 782, 33),
woosh.Token(woosh.OP, ':', 782, 33, 782, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 34, 783, 0),
woosh.Token(woosh.INDENT, '        ', 783, 0, 783, 8),
woosh.Token(woosh.NAME, 'if', 783, 8, 783, 10),
woosh.Token(woosh.NAME, 'not', 783, 11, 783, 14),
woosh.Token(woosh.NAME, 'isinstance', 783, 15, 783, 25),
woosh.Token(woosh.OP, '(', 783, 25, 783, 26),
woosh.Token(woosh.NAME, 'params', 783, 26, 783, 32),
woosh.Token(woosh.OP, ',', 783, 32, 783, 33),
woosh.Token(woosh.NAME, 'tuple', 783, 34, 783, 39),
woosh.Token(woosh.OP, ')', 783, 39, 783, 40),
woosh.Token(woosh.OP, ':', 783, 40, 783, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 783, 41, 784, 0),
woosh.Token(woosh.INDENT, '            ', 784, 0, 784, 12),
woosh.Token(woosh.NAME, 'params', 784, 12, 784, 18),
woosh.Token(woosh.OP, '=', 784, 19, 784, 20),
woosh.Token(woosh.OP, '(', 784, 21, 784, 22),
woosh.Token(woosh.NAME, 'params', 784, 22, 784, 28),
woosh.Token(woosh.OP, ',', 784, 28, 784, 29),
woosh.Token(woosh.OP, ')', 784, 29, 784, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 784, 30, 785, 0),
woosh.Token(woosh.DEDENT, '        ', 785, 0, 785, 8),
woosh.Token(woosh.NAME, 'msg', 785, 8, 785, 11),
woosh.Token(woosh.OP, '=', 785, 12, 785, 13),
woosh.Token(woosh.STRING, '"Parameters to generic types must be types."', 785, 14, 785, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 785, 58, 786, 0),
woosh.Token(woosh.NAME, 'params', 786, 8, 786, 14),
woosh.Token(woosh.OP, '=', 786, 15, 786, 16),
woosh.Token(woosh.NAME, 'tuple', 786, 17, 786, 22),
woosh.Token(woosh.OP, '(', 786, 22, 786, 23),
woosh.Token(woosh.NAME, '_type_check', 786, 23, 786, 34),
woosh.Token(woosh.OP, '(', 786, 34, 786, 35),
woosh.Token(woosh.NAME, 'p', 786, 35, 786, 36),
woosh.Token(woosh.OP, ',', 786, 36, 786, 37),
woosh.Token(woosh.NAME, 'msg', 786, 38, 786, 41),
woosh.Token(woosh.OP, ')', 786, 41, 786, 42),
woosh.Token(woosh.NAME, 'for', 786, 43, 786, 46),
woosh.Token(woosh.NAME, 'p', 786, 47, 786, 48),
woosh.Token(woosh.NAME, 'in', 786, 49, 786, 51),
woosh.Token(woosh.NAME, 'params', 786, 52, 786, 58),
woosh.Token(woosh.OP, ')', 786, 58, 786, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 786, 59, 787, 0),
woosh.Token(woosh.NAME, '_check_generic', 787, 8, 787, 22),
woosh.Token(woosh.OP, '(', 787, 22, 787, 23),
woosh.Token(woosh.NAME, 'self', 787, 23, 787, 27),
woosh.Token(woosh.OP, ',', 787, 27, 787, 28),
woosh.Token(woosh.NAME, 'params', 787, 29, 787, 35),
woosh.Token(woosh.OP, ',', 787, 35, 787, 36),
woosh.Token(woosh.NAME, 'self', 787, 37, 787, 41),
woosh.Token(woosh.OP, '.', 787, 41, 787, 42),
woosh.Token(woosh.NAME, '_nparams', 787, 42, 787, 50),
woosh.Token(woosh.OP, ')', 787, 50, 787, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 51, 788, 0),
woosh.Token(woosh.NAME, 'return', 788, 8, 788, 14),
woosh.Token(woosh.NAME, 'self', 788, 15, 788, 19),
woosh.Token(woosh.OP, '.', 788, 19, 788, 20),
woosh.Token(woosh.NAME, 'copy_with', 788, 20, 788, 29),
woosh.Token(woosh.OP, '(', 788, 29, 788, 30),
woosh.Token(woosh.NAME, 'params', 788, 30, 788, 36),
woosh.Token(woosh.OP, ')', 788, 36, 788, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 788, 37, 789, 0),
woosh.Token(woosh.DEDENT, '    ', 790, 0, 790, 4),
woosh.Token(woosh.NAME, 'def', 790, 4, 790, 7),
woosh.Token(woosh.NAME, 'copy_with', 790, 8, 790, 17),
woosh.Token(woosh.OP, '(', 790, 17, 790, 18),
woosh.Token(woosh.NAME, 'self', 790, 18, 790, 22),
woosh.Token(woosh.OP, ',', 790, 22, 790, 23),
woosh.Token(woosh.NAME, 'params', 790, 24, 790, 30),
woosh.Token(woosh.OP, ')', 790, 30, 790, 31),
woosh.Token(woosh.OP, ':', 790, 31, 790, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 32, 791, 0),
woosh.Token(woosh.INDENT, '        ', 791, 0, 791, 8),
woosh.Token(woosh.NAME, 'return', 791, 8, 791, 14),
woosh.Token(woosh.NAME, '_GenericAlias', 791, 15, 791, 28),
woosh.Token(woosh.OP, '(', 791, 28, 791, 29),
woosh.Token(woosh.NAME, 'self', 791, 29, 791, 33),
woosh.Token(woosh.OP, '.', 791, 33, 791, 34),
woosh.Token(woosh.NAME, '__origin__', 791, 34, 791, 44),
woosh.Token(woosh.OP, ',', 791, 44, 791, 45),
woosh.Token(woosh.NAME, 'params', 791, 46, 791, 52),
woosh.Token(woosh.OP, ',', 791, 52, 791, 53),
woosh.Token(woosh.NAME, 'name', 792, 29, 792, 33),
woosh.Token(woosh.OP, '=', 792, 33, 792, 34),
woosh.Token(woosh.NAME, 'self', 792, 34, 792, 38),
woosh.Token(woosh.OP, '.', 792, 38, 792, 39),
woosh.Token(woosh.NAME, '_name', 792, 39, 792, 44),
woosh.Token(woosh.OP, ',', 792, 44, 792, 45),
woosh.Token(woosh.NAME, 'inst', 792, 46, 792, 50),
woosh.Token(woosh.OP, '=', 792, 50, 792, 51),
woosh.Token(woosh.NAME, 'self', 792, 51, 792, 55),
woosh.Token(woosh.OP, '.', 792, 55, 792, 56),
woosh.Token(woosh.NAME, '_inst', 792, 56, 792, 61),
woosh.Token(woosh.OP, ')', 792, 61, 792, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 62, 793, 0),
woosh.Token(woosh.DEDENT, '    ', 794, 0, 794, 4),
woosh.Token(woosh.NAME, 'def', 794, 4, 794, 7),
woosh.Token(woosh.NAME, '__repr__', 794, 8, 794, 16),
woosh.Token(woosh.OP, '(', 794, 16, 794, 17),
woosh.Token(woosh.NAME, 'self', 794, 17, 794, 21),
woosh.Token(woosh.OP, ')', 794, 21, 794, 22),
woosh.Token(woosh.OP, ':', 794, 22, 794, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 794, 23, 795, 0),
woosh.Token(woosh.INDENT, '        ', 795, 0, 795, 8),
woosh.Token(woosh.NAME, 'return', 795, 8, 795, 14),
woosh.Token(woosh.STRING, "'typing.'", 795, 15, 795, 24),
woosh.Token(woosh.OP, '+', 795, 25, 795, 26),
woosh.Token(woosh.NAME, 'self', 795, 27, 795, 31),
woosh.Token(woosh.OP, '.', 795, 31, 795, 32),
woosh.Token(woosh.NAME, '_name', 795, 32, 795, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 37, 796, 0),
woosh.Token(woosh.DEDENT, '    ', 797, 0, 797, 4),
woosh.Token(woosh.NAME, 'def', 797, 4, 797, 7),
woosh.Token(woosh.NAME, '__subclasscheck__', 797, 8, 797, 25),
woosh.Token(woosh.OP, '(', 797, 25, 797, 26),
woosh.Token(woosh.NAME, 'self', 797, 26, 797, 30),
woosh.Token(woosh.OP, ',', 797, 30, 797, 31),
woosh.Token(woosh.NAME, 'cls', 797, 32, 797, 35),
woosh.Token(woosh.OP, ')', 797, 35, 797, 36),
woosh.Token(woosh.OP, ':', 797, 36, 797, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 37, 798, 0),
woosh.Token(woosh.INDENT, '        ', 798, 0, 798, 8),
woosh.Token(woosh.NAME, 'if', 798, 8, 798, 10),
woosh.Token(woosh.NAME, 'isinstance', 798, 11, 798, 21),
woosh.Token(woosh.OP, '(', 798, 21, 798, 22),
woosh.Token(woosh.NAME, 'cls', 798, 22, 798, 25),
woosh.Token(woosh.OP, ',', 798, 25, 798, 26),
woosh.Token(woosh.NAME, '_SpecialGenericAlias', 798, 27, 798, 47),
woosh.Token(woosh.OP, ')', 798, 47, 798, 48),
woosh.Token(woosh.OP, ':', 798, 48, 798, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 49, 799, 0),
woosh.Token(woosh.INDENT, '            ', 799, 0, 799, 12),
woosh.Token(woosh.NAME, 'return', 799, 12, 799, 18),
woosh.Token(woosh.NAME, 'issubclass', 799, 19, 799, 29),
woosh.Token(woosh.OP, '(', 799, 29, 799, 30),
woosh.Token(woosh.NAME, 'cls', 799, 30, 799, 33),
woosh.Token(woosh.OP, '.', 799, 33, 799, 34),
woosh.Token(woosh.NAME, '__origin__', 799, 34, 799, 44),
woosh.Token(woosh.OP, ',', 799, 44, 799, 45),
woosh.Token(woosh.NAME, 'self', 799, 46, 799, 50),
woosh.Token(woosh.OP, '.', 799, 50, 799, 51),
woosh.Token(woosh.NAME, '__origin__', 799, 51, 799, 61),
woosh.Token(woosh.OP, ')', 799, 61, 799, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 799, 62, 800, 0),
woosh.Token(woosh.DEDENT, '        ', 800, 0, 800, 8),
woosh.Token(woosh.NAME, 'if', 800, 8, 800, 10),
woosh.Token(woosh.NAME, 'not', 800, 11, 800, 14),
woosh.Token(woosh.NAME, 'isinstance', 800, 15, 800, 25),
woosh.Token(woosh.OP, '(', 800, 25, 800, 26),
woosh.Token(woosh.NAME, 'cls', 800, 26, 800, 29),
woosh.Token(woosh.OP, ',', 800, 29, 800, 30),
woosh.Token(woosh.NAME, '_GenericAlias', 800, 31, 800, 44),
woosh.Token(woosh.OP, ')', 800, 44, 800, 45),
woosh.Token(woosh.OP, ':', 800, 45, 800, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 46, 801, 0),
woosh.Token(woosh.INDENT, '            ', 801, 0, 801, 12),
woosh.Token(woosh.NAME, 'return', 801, 12, 801, 18),
woosh.Token(woosh.NAME, 'issubclass', 801, 19, 801, 29),
woosh.Token(woosh.OP, '(', 801, 29, 801, 30),
woosh.Token(woosh.NAME, 'cls', 801, 30, 801, 33),
woosh.Token(woosh.OP, ',', 801, 33, 801, 34),
woosh.Token(woosh.NAME, 'self', 801, 35, 801, 39),
woosh.Token(woosh.OP, '.', 801, 39, 801, 40),
woosh.Token(woosh.NAME, '__origin__', 801, 40, 801, 50),
woosh.Token(woosh.OP, ')', 801, 50, 801, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 801, 51, 802, 0),
woosh.Token(woosh.DEDENT, '        ', 802, 0, 802, 8),
woosh.Token(woosh.NAME, 'return', 802, 8, 802, 14),
woosh.Token(woosh.NAME, 'super', 802, 15, 802, 20),
woosh.Token(woosh.OP, '(', 802, 20, 802, 21),
woosh.Token(woosh.OP, ')', 802, 21, 802, 22),
woosh.Token(woosh.OP, '.', 802, 22, 802, 23),
woosh.Token(woosh.NAME, '__subclasscheck__', 802, 23, 802, 40),
woosh.Token(woosh.OP, '(', 802, 40, 802, 41),
woosh.Token(woosh.NAME, 'cls', 802, 41, 802, 44),
woosh.Token(woosh.OP, ')', 802, 44, 802, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 45, 803, 0),
woosh.Token(woosh.DEDENT, '    ', 804, 0, 804, 4),
woosh.Token(woosh.NAME, 'def', 804, 4, 804, 7),
woosh.Token(woosh.NAME, '__reduce__', 804, 8, 804, 18),
woosh.Token(woosh.OP, '(', 804, 18, 804, 19),
woosh.Token(woosh.NAME, 'self', 804, 19, 804, 23),
woosh.Token(woosh.OP, ')', 804, 23, 804, 24),
woosh.Token(woosh.OP, ':', 804, 24, 804, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 804, 25, 805, 0),
woosh.Token(woosh.INDENT, '        ', 805, 0, 805, 8),
woosh.Token(woosh.NAME, 'return', 805, 8, 805, 14),
woosh.Token(woosh.NAME, 'self', 805, 15, 805, 19),
woosh.Token(woosh.OP, '.', 805, 19, 805, 20),
woosh.Token(woosh.NAME, '_name', 805, 20, 805, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 805, 25, 806, 0),
woosh.Token(woosh.DEDENT, '    ', 807, 0, 807, 4),
woosh.Token(woosh.NAME, 'def', 807, 4, 807, 7),
woosh.Token(woosh.NAME, '__or__', 807, 8, 807, 14),
woosh.Token(woosh.OP, '(', 807, 14, 807, 15),
woosh.Token(woosh.NAME, 'self', 807, 15, 807, 19),
woosh.Token(woosh.OP, ',', 807, 19, 807, 20),
woosh.Token(woosh.NAME, 'right', 807, 21, 807, 26),
woosh.Token(woosh.OP, ')', 807, 26, 807, 27),
woosh.Token(woosh.OP, ':', 807, 27, 807, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 28, 808, 0),
woosh.Token(woosh.INDENT, '        ', 808, 0, 808, 8),
woosh.Token(woosh.NAME, 'return', 808, 8, 808, 14),
woosh.Token(woosh.NAME, 'Union', 808, 15, 808, 20),
woosh.Token(woosh.OP, '[', 808, 20, 808, 21),
woosh.Token(woosh.NAME, 'self', 808, 21, 808, 25),
woosh.Token(woosh.OP, ',', 808, 25, 808, 26),
woosh.Token(woosh.NAME, 'right', 808, 27, 808, 32),
woosh.Token(woosh.OP, ']', 808, 32, 808, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 808, 33, 809, 0),
woosh.Token(woosh.DEDENT, '    ', 810, 0, 810, 4),
woosh.Token(woosh.NAME, 'def', 810, 4, 810, 7),
woosh.Token(woosh.NAME, '__ror__', 810, 8, 810, 15),
woosh.Token(woosh.OP, '(', 810, 15, 810, 16),
woosh.Token(woosh.NAME, 'self', 810, 16, 810, 20),
woosh.Token(woosh.OP, ',', 810, 20, 810, 21),
woosh.Token(woosh.NAME, 'right', 810, 22, 810, 27),
woosh.Token(woosh.OP, ')', 810, 27, 810, 28),
woosh.Token(woosh.OP, ':', 810, 28, 810, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 810, 29, 811, 0),
woosh.Token(woosh.INDENT, '        ', 811, 0, 811, 8),
woosh.Token(woosh.NAME, 'return', 811, 8, 811, 14),
woosh.Token(woosh.NAME, 'Union', 811, 15, 811, 20),
woosh.Token(woosh.OP, '[', 811, 20, 811, 21),
woosh.Token(woosh.NAME, 'self', 811, 21, 811, 25),
woosh.Token(woosh.OP, ',', 811, 25, 811, 26),
woosh.Token(woosh.NAME, 'right', 811, 27, 811, 32),
woosh.Token(woosh.OP, ']', 811, 32, 811, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 811, 33, 812, 0),
woosh.Token(woosh.DEDENT, '', 813, 0, 813, 0),
woosh.Token(woosh.DEDENT, '', 813, 0, 813, 0),
woosh.Token(woosh.NAME, 'class', 813, 0, 813, 5),
woosh.Token(woosh.NAME, '_CallableGenericAlias', 813, 6, 813, 27),
woosh.Token(woosh.OP, '(', 813, 27, 813, 28),
woosh.Token(woosh.NAME, '_GenericAlias', 813, 28, 813, 41),
woosh.Token(woosh.OP, ',', 813, 41, 813, 42),
woosh.Token(woosh.NAME, '_root', 813, 43, 813, 48),
woosh.Token(woosh.OP, '=', 813, 48, 813, 49),
woosh.Token(woosh.NAME, 'True', 813, 49, 813, 53),
woosh.Token(woosh.OP, ')', 813, 53, 813, 54),
woosh.Token(woosh.OP, ':', 813, 54, 813, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 813, 55, 814, 0),
woosh.Token(woosh.INDENT, '    ', 814, 0, 814, 4),
woosh.Token(woosh.NAME, 'def', 814, 4, 814, 7),
woosh.Token(woosh.NAME, '__repr__', 814, 8, 814, 16),
woosh.Token(woosh.OP, '(', 814, 16, 814, 17),
woosh.Token(woosh.NAME, 'self', 814, 17, 814, 21),
woosh.Token(woosh.OP, ')', 814, 21, 814, 22),
woosh.Token(woosh.OP, ':', 814, 22, 814, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 23, 815, 0),
woosh.Token(woosh.INDENT, '        ', 815, 0, 815, 8),
woosh.Token(woosh.NAME, 'assert', 815, 8, 815, 14),
woosh.Token(woosh.NAME, 'self', 815, 15, 815, 19),
woosh.Token(woosh.OP, '.', 815, 19, 815, 20),
woosh.Token(woosh.NAME, '_name', 815, 20, 815, 25),
woosh.Token(woosh.OP, '==', 815, 26, 815, 28),
woosh.Token(woosh.STRING, "'Callable'", 815, 29, 815, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 815, 39, 816, 0),
woosh.Token(woosh.NAME, 'if', 816, 8, 816, 10),
woosh.Token(woosh.NAME, 'len', 816, 11, 816, 14),
woosh.Token(woosh.OP, '(', 816, 14, 816, 15),
woosh.Token(woosh.NAME, 'self', 816, 15, 816, 19),
woosh.Token(woosh.OP, '.', 816, 19, 816, 20),
woosh.Token(woosh.NAME, '__args__', 816, 20, 816, 28),
woosh.Token(woosh.OP, ')', 816, 28, 816, 29),
woosh.Token(woosh.OP, '==', 816, 30, 816, 32),
woosh.Token(woosh.NUMBER, '2', 816, 33, 816, 34),
woosh.Token(woosh.NAME, 'and', 816, 35, 816, 38),
woosh.Token(woosh.NAME, 'self', 816, 39, 816, 43),
woosh.Token(woosh.OP, '.', 816, 43, 816, 44),
woosh.Token(woosh.NAME, '__args__', 816, 44, 816, 52),
woosh.Token(woosh.OP, '[', 816, 52, 816, 53),
woosh.Token(woosh.NUMBER, '0', 816, 53, 816, 54),
woosh.Token(woosh.OP, ']', 816, 54, 816, 55),
woosh.Token(woosh.NAME, 'is', 816, 56, 816, 58),
woosh.Token(woosh.NAME, 'Ellipsis', 816, 59, 816, 67),
woosh.Token(woosh.OP, ':', 816, 67, 816, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 68, 817, 0),
woosh.Token(woosh.INDENT, '            ', 817, 0, 817, 12),
woosh.Token(woosh.NAME, 'return', 817, 12, 817, 18),
woosh.Token(woosh.NAME, 'super', 817, 19, 817, 24),
woosh.Token(woosh.OP, '(', 817, 24, 817, 25),
woosh.Token(woosh.OP, ')', 817, 25, 817, 26),
woosh.Token(woosh.OP, '.', 817, 26, 817, 27),
woosh.Token(woosh.NAME, '__repr__', 817, 27, 817, 35),
woosh.Token(woosh.OP, '(', 817, 35, 817, 36),
woosh.Token(woosh.OP, ')', 817, 36, 817, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 817, 37, 818, 0),
woosh.Token(woosh.DEDENT, '        ', 818, 0, 818, 8),
woosh.Token(woosh.NAME, 'return', 818, 8, 818, 14),
woosh.Token(woosh.OP, '(', 818, 15, 818, 16),
woosh.Token(woosh.STRING, "f'typing.Callable'", 818, 16, 818, 34),
woosh.Token(woosh.STRING, 'f\'[[{", ".join([_type_repr(a) for a in self.__args__[:-1]])}], \'', 819, 16, 819, 80),
woosh.Token(woosh.STRING, "f'{_type_repr(self.__args__[-1])}]'", 820, 16, 820, 51),
woosh.Token(woosh.OP, ')', 820, 51, 820, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 820, 52, 821, 0),
woosh.Token(woosh.DEDENT, '    ', 822, 0, 822, 4),
woosh.Token(woosh.NAME, 'def', 822, 4, 822, 7),
woosh.Token(woosh.NAME, '__reduce__', 822, 8, 822, 18),
woosh.Token(woosh.OP, '(', 822, 18, 822, 19),
woosh.Token(woosh.NAME, 'self', 822, 19, 822, 23),
woosh.Token(woosh.OP, ')', 822, 23, 822, 24),
woosh.Token(woosh.OP, ':', 822, 24, 822, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 25, 823, 0),
woosh.Token(woosh.INDENT, '        ', 823, 0, 823, 8),
woosh.Token(woosh.NAME, 'args', 823, 8, 823, 12),
woosh.Token(woosh.OP, '=', 823, 13, 823, 14),
woosh.Token(woosh.NAME, 'self', 823, 15, 823, 19),
woosh.Token(woosh.OP, '.', 823, 19, 823, 20),
woosh.Token(woosh.NAME, '__args__', 823, 20, 823, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 823, 28, 824, 0),
woosh.Token(woosh.NAME, 'if', 824, 8, 824, 10),
woosh.Token(woosh.NAME, 'not', 824, 11, 824, 14),
woosh.Token(woosh.OP, '(', 824, 15, 824, 16),
woosh.Token(woosh.NAME, 'len', 824, 16, 824, 19),
woosh.Token(woosh.OP, '(', 824, 19, 824, 20),
woosh.Token(woosh.NAME, 'args', 824, 20, 824, 24),
woosh.Token(woosh.OP, ')', 824, 24, 824, 25),
woosh.Token(woosh.OP, '==', 824, 26, 824, 28),
woosh.Token(woosh.NUMBER, '2', 824, 29, 824, 30),
woosh.Token(woosh.NAME, 'and', 824, 31, 824, 34),
woosh.Token(woosh.NAME, 'args', 824, 35, 824, 39),
woosh.Token(woosh.OP, '[', 824, 39, 824, 40),
woosh.Token(woosh.NUMBER, '0', 824, 40, 824, 41),
woosh.Token(woosh.OP, ']', 824, 41, 824, 42),
woosh.Token(woosh.NAME, 'is', 824, 43, 824, 45),
woosh.Token(woosh.OP, '...', 824, 46, 824, 49),
woosh.Token(woosh.OP, ')', 824, 49, 824, 50),
woosh.Token(woosh.OP, ':', 824, 50, 824, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 51, 825, 0),
woosh.Token(woosh.INDENT, '            ', 825, 0, 825, 12),
woosh.Token(woosh.NAME, 'args', 825, 12, 825, 16),
woosh.Token(woosh.OP, '=', 825, 17, 825, 18),
woosh.Token(woosh.NAME, 'list', 825, 19, 825, 23),
woosh.Token(woosh.OP, '(', 825, 23, 825, 24),
woosh.Token(woosh.NAME, 'args', 825, 24, 825, 28),
woosh.Token(woosh.OP, '[', 825, 28, 825, 29),
woosh.Token(woosh.OP, ':', 825, 29, 825, 30),
woosh.Token(woosh.OP, '-', 825, 30, 825, 31),
woosh.Token(woosh.NUMBER, '1', 825, 31, 825, 32),
woosh.Token(woosh.OP, ']', 825, 32, 825, 33),
woosh.Token(woosh.OP, ')', 825, 33, 825, 34),
woosh.Token(woosh.OP, ',', 825, 34, 825, 35),
woosh.Token(woosh.NAME, 'args', 825, 36, 825, 40),
woosh.Token(woosh.OP, '[', 825, 40, 825, 41),
woosh.Token(woosh.OP, '-', 825, 41, 825, 42),
woosh.Token(woosh.NUMBER, '1', 825, 42, 825, 43),
woosh.Token(woosh.OP, ']', 825, 43, 825, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 44, 826, 0),
woosh.Token(woosh.DEDENT, '        ', 826, 0, 826, 8),
woosh.Token(woosh.NAME, 'return', 826, 8, 826, 14),
woosh.Token(woosh.NAME, 'operator', 826, 15, 826, 23),
woosh.Token(woosh.OP, '.', 826, 23, 826, 24),
woosh.Token(woosh.NAME, 'getitem', 826, 24, 826, 31),
woosh.Token(woosh.OP, ',', 826, 31, 826, 32),
woosh.Token(woosh.OP, '(', 826, 33, 826, 34),
woosh.Token(woosh.NAME, 'Callable', 826, 34, 826, 42),
woosh.Token(woosh.OP, ',', 826, 42, 826, 43),
woosh.Token(woosh.NAME, 'args', 826, 44, 826, 48),
woosh.Token(woosh.OP, ')', 826, 48, 826, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 826, 49, 827, 0),
woosh.Token(woosh.DEDENT, '', 829, 0, 829, 0),
woosh.Token(woosh.DEDENT, '', 829, 0, 829, 0),
woosh.Token(woosh.NAME, 'class', 829, 0, 829, 5),
woosh.Token(woosh.NAME, '_CallableType', 829, 6, 829, 19),
woosh.Token(woosh.OP, '(', 829, 19, 829, 20),
woosh.Token(woosh.NAME, '_SpecialGenericAlias', 829, 20, 829, 40),
woosh.Token(woosh.OP, ',', 829, 40, 829, 41),
woosh.Token(woosh.NAME, '_root', 829, 42, 829, 47),
woosh.Token(woosh.OP, '=', 829, 47, 829, 48),
woosh.Token(woosh.NAME, 'True', 829, 48, 829, 52),
woosh.Token(woosh.OP, ')', 829, 52, 829, 53),
woosh.Token(woosh.OP, ':', 829, 53, 829, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 829, 54, 830, 0),
woosh.Token(woosh.INDENT, '    ', 830, 0, 830, 4),
woosh.Token(woosh.NAME, 'def', 830, 4, 830, 7),
woosh.Token(woosh.NAME, 'copy_with', 830, 8, 830, 17),
woosh.Token(woosh.OP, '(', 830, 17, 830, 18),
woosh.Token(woosh.NAME, 'self', 830, 18, 830, 22),
woosh.Token(woosh.OP, ',', 830, 22, 830, 23),
woosh.Token(woosh.NAME, 'params', 830, 24, 830, 30),
woosh.Token(woosh.OP, ')', 830, 30, 830, 31),
woosh.Token(woosh.OP, ':', 830, 31, 830, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 830, 32, 831, 0),
woosh.Token(woosh.INDENT, '        ', 831, 0, 831, 8),
woosh.Token(woosh.NAME, 'return', 831, 8, 831, 14),
woosh.Token(woosh.NAME, '_CallableGenericAlias', 831, 15, 831, 36),
woosh.Token(woosh.OP, '(', 831, 36, 831, 37),
woosh.Token(woosh.NAME, 'self', 831, 37, 831, 41),
woosh.Token(woosh.OP, '.', 831, 41, 831, 42),
woosh.Token(woosh.NAME, '__origin__', 831, 42, 831, 52),
woosh.Token(woosh.OP, ',', 831, 52, 831, 53),
woosh.Token(woosh.NAME, 'params', 831, 54, 831, 60),
woosh.Token(woosh.OP, ',', 831, 60, 831, 61),
woosh.Token(woosh.NAME, 'name', 832, 37, 832, 41),
woosh.Token(woosh.OP, '=', 832, 41, 832, 42),
woosh.Token(woosh.NAME, 'self', 832, 42, 832, 46),
woosh.Token(woosh.OP, '.', 832, 46, 832, 47),
woosh.Token(woosh.NAME, '_name', 832, 47, 832, 52),
woosh.Token(woosh.OP, ',', 832, 52, 832, 53),
woosh.Token(woosh.NAME, 'inst', 832, 54, 832, 58),
woosh.Token(woosh.OP, '=', 832, 58, 832, 59),
woosh.Token(woosh.NAME, 'self', 832, 59, 832, 63),
woosh.Token(woosh.OP, '.', 832, 63, 832, 64),
woosh.Token(woosh.NAME, '_inst', 832, 64, 832, 69),
woosh.Token(woosh.OP, ')', 832, 69, 832, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 832, 70, 833, 0),
woosh.Token(woosh.DEDENT, '    ', 834, 0, 834, 4),
woosh.Token(woosh.NAME, 'def', 834, 4, 834, 7),
woosh.Token(woosh.NAME, '__getitem__', 834, 8, 834, 19),
woosh.Token(woosh.OP, '(', 834, 19, 834, 20),
woosh.Token(woosh.NAME, 'self', 834, 20, 834, 24),
woosh.Token(woosh.OP, ',', 834, 24, 834, 25),
woosh.Token(woosh.NAME, 'params', 834, 26, 834, 32),
woosh.Token(woosh.OP, ')', 834, 32, 834, 33),
woosh.Token(woosh.OP, ':', 834, 33, 834, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 34, 835, 0),
woosh.Token(woosh.INDENT, '        ', 835, 0, 835, 8),
woosh.Token(woosh.NAME, 'if', 835, 8, 835, 10),
woosh.Token(woosh.NAME, 'not', 835, 11, 835, 14),
woosh.Token(woosh.NAME, 'isinstance', 835, 15, 835, 25),
woosh.Token(woosh.OP, '(', 835, 25, 835, 26),
woosh.Token(woosh.NAME, 'params', 835, 26, 835, 32),
woosh.Token(woosh.OP, ',', 835, 32, 835, 33),
woosh.Token(woosh.NAME, 'tuple', 835, 34, 835, 39),
woosh.Token(woosh.OP, ')', 835, 39, 835, 40),
woosh.Token(woosh.NAME, 'or', 835, 41, 835, 43),
woosh.Token(woosh.NAME, 'len', 835, 44, 835, 47),
woosh.Token(woosh.OP, '(', 835, 47, 835, 48),
woosh.Token(woosh.NAME, 'params', 835, 48, 835, 54),
woosh.Token(woosh.OP, ')', 835, 54, 835, 55),
woosh.Token(woosh.OP, '!=', 835, 56, 835, 58),
woosh.Token(woosh.NUMBER, '2', 835, 59, 835, 60),
woosh.Token(woosh.OP, ':', 835, 60, 835, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 835, 61, 836, 0),
woosh.Token(woosh.INDENT, '            ', 836, 0, 836, 12),
woosh.Token(woosh.NAME, 'raise', 836, 12, 836, 17),
woosh.Token(woosh.NAME, 'TypeError', 836, 18, 836, 27),
woosh.Token(woosh.OP, '(', 836, 27, 836, 28),
woosh.Token(woosh.STRING, '"Callable must be used as "', 836, 28, 836, 55),
woosh.Token(woosh.STRING, '"Callable[[arg, ...], result]."', 837, 28, 837, 59),
woosh.Token(woosh.OP, ')', 837, 59, 837, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 60, 838, 0),
woosh.Token(woosh.DEDENT, '        ', 838, 0, 838, 8),
woosh.Token(woosh.NAME, 'args', 838, 8, 838, 12),
woosh.Token(woosh.OP, ',', 838, 12, 838, 13),
woosh.Token(woosh.NAME, 'result', 838, 14, 838, 20),
woosh.Token(woosh.OP, '=', 838, 21, 838, 22),
woosh.Token(woosh.NAME, 'params', 838, 23, 838, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 29, 839, 0),
woosh.Token(woosh.NAME, 'if', 839, 8, 839, 10),
woosh.Token(woosh.NAME, 'args', 839, 11, 839, 15),
woosh.Token(woosh.NAME, 'is', 839, 16, 839, 18),
woosh.Token(woosh.NAME, 'Ellipsis', 839, 19, 839, 27),
woosh.Token(woosh.OP, ':', 839, 27, 839, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 28, 840, 0),
woosh.Token(woosh.INDENT, '            ', 840, 0, 840, 12),
woosh.Token(woosh.NAME, 'params', 840, 12, 840, 18),
woosh.Token(woosh.OP, '=', 840, 19, 840, 20),
woosh.Token(woosh.OP, '(', 840, 21, 840, 22),
woosh.Token(woosh.NAME, 'Ellipsis', 840, 22, 840, 30),
woosh.Token(woosh.OP, ',', 840, 30, 840, 31),
woosh.Token(woosh.NAME, 'result', 840, 32, 840, 38),
woosh.Token(woosh.OP, ')', 840, 38, 840, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 39, 841, 0),
woosh.Token(woosh.DEDENT, '        ', 841, 0, 841, 8),
woosh.Token(woosh.NAME, 'else', 841, 8, 841, 12),
woosh.Token(woosh.OP, ':', 841, 12, 841, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 13, 842, 0),
woosh.Token(woosh.INDENT, '            ', 842, 0, 842, 12),
woosh.Token(woosh.NAME, 'if', 842, 12, 842, 14),
woosh.Token(woosh.NAME, 'not', 842, 15, 842, 18),
woosh.Token(woosh.NAME, 'isinstance', 842, 19, 842, 29),
woosh.Token(woosh.OP, '(', 842, 29, 842, 30),
woosh.Token(woosh.NAME, 'args', 842, 30, 842, 34),
woosh.Token(woosh.OP, ',', 842, 34, 842, 35),
woosh.Token(woosh.NAME, 'list', 842, 36, 842, 40),
woosh.Token(woosh.OP, ')', 842, 40, 842, 41),
woosh.Token(woosh.OP, ':', 842, 41, 842, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 42, 843, 0),
woosh.Token(woosh.INDENT, '                ', 843, 0, 843, 16),
woosh.Token(woosh.NAME, 'raise', 843, 16, 843, 21),
woosh.Token(woosh.NAME, 'TypeError', 843, 22, 843, 31),
woosh.Token(woosh.OP, '(', 843, 31, 843, 32),
woosh.Token(woosh.STRING, 'f"Callable[args, result]: args must be a list."', 843, 32, 843, 79),
woosh.Token(woosh.STRING, 'f" Got {args}"', 844, 32, 844, 46),
woosh.Token(woosh.OP, ')', 844, 46, 844, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 844, 47, 845, 0),
woosh.Token(woosh.DEDENT, '            ', 845, 0, 845, 12),
woosh.Token(woosh.NAME, 'params', 845, 12, 845, 18),
woosh.Token(woosh.OP, '=', 845, 19, 845, 20),
woosh.Token(woosh.OP, '(', 845, 21, 845, 22),
woosh.Token(woosh.NAME, 'tuple', 845, 22, 845, 27),
woosh.Token(woosh.OP, '(', 845, 27, 845, 28),
woosh.Token(woosh.NAME, 'args', 845, 28, 845, 32),
woosh.Token(woosh.OP, ')', 845, 32, 845, 33),
woosh.Token(woosh.OP, ',', 845, 33, 845, 34),
woosh.Token(woosh.NAME, 'result', 845, 35, 845, 41),
woosh.Token(woosh.OP, ')', 845, 41, 845, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 845, 42, 846, 0),
woosh.Token(woosh.DEDENT, '        ', 846, 0, 846, 8),
woosh.Token(woosh.NAME, 'return', 846, 8, 846, 14),
woosh.Token(woosh.NAME, 'self', 846, 15, 846, 19),
woosh.Token(woosh.OP, '.', 846, 19, 846, 20),
woosh.Token(woosh.NAME, '__getitem_inner__', 846, 20, 846, 37),
woosh.Token(woosh.OP, '(', 846, 37, 846, 38),
woosh.Token(woosh.NAME, 'params', 846, 38, 846, 44),
woosh.Token(woosh.OP, ')', 846, 44, 846, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 846, 45, 847, 0),
woosh.Token(woosh.DEDENT, '    ', 848, 0, 848, 4),
woosh.Token(woosh.OP, '@', 848, 4, 848, 5),
woosh.Token(woosh.NAME, '_tp_cache', 848, 5, 848, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 14, 849, 0),
woosh.Token(woosh.NAME, 'def', 849, 4, 849, 7),
woosh.Token(woosh.NAME, '__getitem_inner__', 849, 8, 849, 25),
woosh.Token(woosh.OP, '(', 849, 25, 849, 26),
woosh.Token(woosh.NAME, 'self', 849, 26, 849, 30),
woosh.Token(woosh.OP, ',', 849, 30, 849, 31),
woosh.Token(woosh.NAME, 'params', 849, 32, 849, 38),
woosh.Token(woosh.OP, ')', 849, 38, 849, 39),
woosh.Token(woosh.OP, ':', 849, 39, 849, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 40, 850, 0),
woosh.Token(woosh.INDENT, '        ', 850, 0, 850, 8),
woosh.Token(woosh.NAME, 'args', 850, 8, 850, 12),
woosh.Token(woosh.OP, ',', 850, 12, 850, 13),
woosh.Token(woosh.NAME, 'result', 850, 14, 850, 20),
woosh.Token(woosh.OP, '=', 850, 21, 850, 22),
woosh.Token(woosh.NAME, 'params', 850, 23, 850, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 29, 851, 0),
woosh.Token(woosh.NAME, 'msg', 851, 8, 851, 11),
woosh.Token(woosh.OP, '=', 851, 12, 851, 13),
woosh.Token(woosh.STRING, '"Callable[args, result]: result must be a type."', 851, 14, 851, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 62, 852, 0),
woosh.Token(woosh.NAME, 'result', 852, 8, 852, 14),
woosh.Token(woosh.OP, '=', 852, 15, 852, 16),
woosh.Token(woosh.NAME, '_type_check', 852, 17, 852, 28),
woosh.Token(woosh.OP, '(', 852, 28, 852, 29),
woosh.Token(woosh.NAME, 'result', 852, 29, 852, 35),
woosh.Token(woosh.OP, ',', 852, 35, 852, 36),
woosh.Token(woosh.NAME, 'msg', 852, 37, 852, 40),
woosh.Token(woosh.OP, ')', 852, 40, 852, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 852, 41, 853, 0),
woosh.Token(woosh.NAME, 'if', 853, 8, 853, 10),
woosh.Token(woosh.NAME, 'args', 853, 11, 853, 15),
woosh.Token(woosh.NAME, 'is', 853, 16, 853, 18),
woosh.Token(woosh.NAME, 'Ellipsis', 853, 19, 853, 27),
woosh.Token(woosh.OP, ':', 853, 27, 853, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 853, 28, 854, 0),
woosh.Token(woosh.INDENT, '            ', 854, 0, 854, 12),
woosh.Token(woosh.NAME, 'return', 854, 12, 854, 18),
woosh.Token(woosh.NAME, 'self', 854, 19, 854, 23),
woosh.Token(woosh.OP, '.', 854, 23, 854, 24),
woosh.Token(woosh.NAME, 'copy_with', 854, 24, 854, 33),
woosh.Token(woosh.OP, '(', 854, 33, 854, 34),
woosh.Token(woosh.OP, '(', 854, 34, 854, 35),
woosh.Token(woosh.NAME, '_TypingEllipsis', 854, 35, 854, 50),
woosh.Token(woosh.OP, ',', 854, 50, 854, 51),
woosh.Token(woosh.NAME, 'result', 854, 52, 854, 58),
woosh.Token(woosh.OP, ')', 854, 58, 854, 59),
woosh.Token(woosh.OP, ')', 854, 59, 854, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 60, 855, 0),
woosh.Token(woosh.DEDENT, '        ', 855, 0, 855, 8),
woosh.Token(woosh.NAME, 'msg', 855, 8, 855, 11),
woosh.Token(woosh.OP, '=', 855, 12, 855, 13),
woosh.Token(woosh.STRING, '"Callable[[arg, ...], result]: each arg must be a type."', 855, 14, 855, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 855, 70, 856, 0),
woosh.Token(woosh.NAME, 'args', 856, 8, 856, 12),
woosh.Token(woosh.OP, '=', 856, 13, 856, 14),
woosh.Token(woosh.NAME, 'tuple', 856, 15, 856, 20),
woosh.Token(woosh.OP, '(', 856, 20, 856, 21),
woosh.Token(woosh.NAME, '_type_check', 856, 21, 856, 32),
woosh.Token(woosh.OP, '(', 856, 32, 856, 33),
woosh.Token(woosh.NAME, 'arg', 856, 33, 856, 36),
woosh.Token(woosh.OP, ',', 856, 36, 856, 37),
woosh.Token(woosh.NAME, 'msg', 856, 38, 856, 41),
woosh.Token(woosh.OP, ')', 856, 41, 856, 42),
woosh.Token(woosh.NAME, 'for', 856, 43, 856, 46),
woosh.Token(woosh.NAME, 'arg', 856, 47, 856, 50),
woosh.Token(woosh.NAME, 'in', 856, 51, 856, 53),
woosh.Token(woosh.NAME, 'args', 856, 54, 856, 58),
woosh.Token(woosh.OP, ')', 856, 58, 856, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 59, 857, 0),
woosh.Token(woosh.NAME, 'params', 857, 8, 857, 14),
woosh.Token(woosh.OP, '=', 857, 15, 857, 16),
woosh.Token(woosh.NAME, 'args', 857, 17, 857, 21),
woosh.Token(woosh.OP, '+', 857, 22, 857, 23),
woosh.Token(woosh.OP, '(', 857, 24, 857, 25),
woosh.Token(woosh.NAME, 'result', 857, 25, 857, 31),
woosh.Token(woosh.OP, ',', 857, 31, 857, 32),
woosh.Token(woosh.OP, ')', 857, 32, 857, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 33, 858, 0),
woosh.Token(woosh.NAME, 'return', 858, 8, 858, 14),
woosh.Token(woosh.NAME, 'self', 858, 15, 858, 19),
woosh.Token(woosh.OP, '.', 858, 19, 858, 20),
woosh.Token(woosh.NAME, 'copy_with', 858, 20, 858, 29),
woosh.Token(woosh.OP, '(', 858, 29, 858, 30),
woosh.Token(woosh.NAME, 'params', 858, 30, 858, 36),
woosh.Token(woosh.OP, ')', 858, 36, 858, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 37, 859, 0),
woosh.Token(woosh.DEDENT, '', 861, 0, 861, 0),
woosh.Token(woosh.DEDENT, '', 861, 0, 861, 0),
woosh.Token(woosh.NAME, 'class', 861, 0, 861, 5),
woosh.Token(woosh.NAME, '_TupleType', 861, 6, 861, 16),
woosh.Token(woosh.OP, '(', 861, 16, 861, 17),
woosh.Token(woosh.NAME, '_SpecialGenericAlias', 861, 17, 861, 37),
woosh.Token(woosh.OP, ',', 861, 37, 861, 38),
woosh.Token(woosh.NAME, '_root', 861, 39, 861, 44),
woosh.Token(woosh.OP, '=', 861, 44, 861, 45),
woosh.Token(woosh.NAME, 'True', 861, 45, 861, 49),
woosh.Token(woosh.OP, ')', 861, 49, 861, 50),
woosh.Token(woosh.OP, ':', 861, 50, 861, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 51, 862, 0),
woosh.Token(woosh.INDENT, '    ', 862, 0, 862, 4),
woosh.Token(woosh.OP, '@', 862, 4, 862, 5),
woosh.Token(woosh.NAME, '_tp_cache', 862, 5, 862, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 862, 14, 863, 0),
woosh.Token(woosh.NAME, 'def', 863, 4, 863, 7),
woosh.Token(woosh.NAME, '__getitem__', 863, 8, 863, 19),
woosh.Token(woosh.OP, '(', 863, 19, 863, 20),
woosh.Token(woosh.NAME, 'self', 863, 20, 863, 24),
woosh.Token(woosh.OP, ',', 863, 24, 863, 25),
woosh.Token(woosh.NAME, 'params', 863, 26, 863, 32),
woosh.Token(woosh.OP, ')', 863, 32, 863, 33),
woosh.Token(woosh.OP, ':', 863, 33, 863, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 34, 864, 0),
woosh.Token(woosh.INDENT, '        ', 864, 0, 864, 8),
woosh.Token(woosh.NAME, 'if', 864, 8, 864, 10),
woosh.Token(woosh.NAME, 'params', 864, 11, 864, 17),
woosh.Token(woosh.OP, '==', 864, 18, 864, 20),
woosh.Token(woosh.OP, '(', 864, 21, 864, 22),
woosh.Token(woosh.OP, ')', 864, 22, 864, 23),
woosh.Token(woosh.OP, ':', 864, 23, 864, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 24, 865, 0),
woosh.Token(woosh.INDENT, '            ', 865, 0, 865, 12),
woosh.Token(woosh.NAME, 'return', 865, 12, 865, 18),
woosh.Token(woosh.NAME, 'self', 865, 19, 865, 23),
woosh.Token(woosh.OP, '.', 865, 23, 865, 24),
woosh.Token(woosh.NAME, 'copy_with', 865, 24, 865, 33),
woosh.Token(woosh.OP, '(', 865, 33, 865, 34),
woosh.Token(woosh.OP, '(', 865, 34, 865, 35),
woosh.Token(woosh.NAME, '_TypingEmpty', 865, 35, 865, 47),
woosh.Token(woosh.OP, ',', 865, 47, 865, 48),
woosh.Token(woosh.OP, ')', 865, 48, 865, 49),
woosh.Token(woosh.OP, ')', 865, 49, 865, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 865, 50, 866, 0),
woosh.Token(woosh.DEDENT, '        ', 866, 0, 866, 8),
woosh.Token(woosh.NAME, 'if', 866, 8, 866, 10),
woosh.Token(woosh.NAME, 'not', 866, 11, 866, 14),
woosh.Token(woosh.NAME, 'isinstance', 866, 15, 866, 25),
woosh.Token(woosh.OP, '(', 866, 25, 866, 26),
woosh.Token(woosh.NAME, 'params', 866, 26, 866, 32),
woosh.Token(woosh.OP, ',', 866, 32, 866, 33),
woosh.Token(woosh.NAME, 'tuple', 866, 34, 866, 39),
woosh.Token(woosh.OP, ')', 866, 39, 866, 40),
woosh.Token(woosh.OP, ':', 866, 40, 866, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 866, 41, 867, 0),
woosh.Token(woosh.INDENT, '            ', 867, 0, 867, 12),
woosh.Token(woosh.NAME, 'params', 867, 12, 867, 18),
woosh.Token(woosh.OP, '=', 867, 19, 867, 20),
woosh.Token(woosh.OP, '(', 867, 21, 867, 22),
woosh.Token(woosh.NAME, 'params', 867, 22, 867, 28),
woosh.Token(woosh.OP, ',', 867, 28, 867, 29),
woosh.Token(woosh.OP, ')', 867, 29, 867, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 867, 30, 868, 0),
woosh.Token(woosh.DEDENT, '        ', 868, 0, 868, 8),
woosh.Token(woosh.NAME, 'if', 868, 8, 868, 10),
woosh.Token(woosh.NAME, 'len', 868, 11, 868, 14),
woosh.Token(woosh.OP, '(', 868, 14, 868, 15),
woosh.Token(woosh.NAME, 'params', 868, 15, 868, 21),
woosh.Token(woosh.OP, ')', 868, 21, 868, 22),
woosh.Token(woosh.OP, '==', 868, 23, 868, 25),
woosh.Token(woosh.NUMBER, '2', 868, 26, 868, 27),
woosh.Token(woosh.NAME, 'and', 868, 28, 868, 31),
woosh.Token(woosh.NAME, 'params', 868, 32, 868, 38),
woosh.Token(woosh.OP, '[', 868, 38, 868, 39),
woosh.Token(woosh.NUMBER, '1', 868, 39, 868, 40),
woosh.Token(woosh.OP, ']', 868, 40, 868, 41),
woosh.Token(woosh.NAME, 'is', 868, 42, 868, 44),
woosh.Token(woosh.OP, '...', 868, 45, 868, 48),
woosh.Token(woosh.OP, ':', 868, 48, 868, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 868, 49, 869, 0),
woosh.Token(woosh.INDENT, '            ', 869, 0, 869, 12),
woosh.Token(woosh.NAME, 'msg', 869, 12, 869, 15),
woosh.Token(woosh.OP, '=', 869, 16, 869, 17),
woosh.Token(woosh.STRING, '"Tuple[t, ...]: t must be a type."', 869, 18, 869, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 869, 52, 870, 0),
woosh.Token(woosh.NAME, 'p', 870, 12, 870, 13),
woosh.Token(woosh.OP, '=', 870, 14, 870, 15),
woosh.Token(woosh.NAME, '_type_check', 870, 16, 870, 27),
woosh.Token(woosh.OP, '(', 870, 27, 870, 28),
woosh.Token(woosh.NAME, 'params', 870, 28, 870, 34),
woosh.Token(woosh.OP, '[', 870, 34, 870, 35),
woosh.Token(woosh.NUMBER, '0', 870, 35, 870, 36),
woosh.Token(woosh.OP, ']', 870, 36, 870, 37),
woosh.Token(woosh.OP, ',', 870, 37, 870, 38),
woosh.Token(woosh.NAME, 'msg', 870, 39, 870, 42),
woosh.Token(woosh.OP, ')', 870, 42, 870, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 870, 43, 871, 0),
woosh.Token(woosh.NAME, 'return', 871, 12, 871, 18),
woosh.Token(woosh.NAME, 'self', 871, 19, 871, 23),
woosh.Token(woosh.OP, '.', 871, 23, 871, 24),
woosh.Token(woosh.NAME, 'copy_with', 871, 24, 871, 33),
woosh.Token(woosh.OP, '(', 871, 33, 871, 34),
woosh.Token(woosh.OP, '(', 871, 34, 871, 35),
woosh.Token(woosh.NAME, 'p', 871, 35, 871, 36),
woosh.Token(woosh.OP, ',', 871, 36, 871, 37),
woosh.Token(woosh.NAME, '_TypingEllipsis', 871, 38, 871, 53),
woosh.Token(woosh.OP, ')', 871, 53, 871, 54),
woosh.Token(woosh.OP, ')', 871, 54, 871, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 871, 55, 872, 0),
woosh.Token(woosh.DEDENT, '        ', 872, 0, 872, 8),
woosh.Token(woosh.NAME, 'msg', 872, 8, 872, 11),
woosh.Token(woosh.OP, '=', 872, 12, 872, 13),
woosh.Token(woosh.STRING, '"Tuple[t0, t1, ...]: each t must be a type."', 872, 14, 872, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 58, 873, 0),
woosh.Token(woosh.NAME, 'params', 873, 8, 873, 14),
woosh.Token(woosh.OP, '=', 873, 15, 873, 16),
woosh.Token(woosh.NAME, 'tuple', 873, 17, 873, 22),
woosh.Token(woosh.OP, '(', 873, 22, 873, 23),
woosh.Token(woosh.NAME, '_type_check', 873, 23, 873, 34),
woosh.Token(woosh.OP, '(', 873, 34, 873, 35),
woosh.Token(woosh.NAME, 'p', 873, 35, 873, 36),
woosh.Token(woosh.OP, ',', 873, 36, 873, 37),
woosh.Token(woosh.NAME, 'msg', 873, 38, 873, 41),
woosh.Token(woosh.OP, ')', 873, 41, 873, 42),
woosh.Token(woosh.NAME, 'for', 873, 43, 873, 46),
woosh.Token(woosh.NAME, 'p', 873, 47, 873, 48),
woosh.Token(woosh.NAME, 'in', 873, 49, 873, 51),
woosh.Token(woosh.NAME, 'params', 873, 52, 873, 58),
woosh.Token(woosh.OP, ')', 873, 58, 873, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 873, 59, 874, 0),
woosh.Token(woosh.NAME, 'return', 874, 8, 874, 14),
woosh.Token(woosh.NAME, 'self', 874, 15, 874, 19),
woosh.Token(woosh.OP, '.', 874, 19, 874, 20),
woosh.Token(woosh.NAME, 'copy_with', 874, 20, 874, 29),
woosh.Token(woosh.OP, '(', 874, 29, 874, 30),
woosh.Token(woosh.NAME, 'params', 874, 30, 874, 36),
woosh.Token(woosh.OP, ')', 874, 36, 874, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 874, 37, 875, 0),
woosh.Token(woosh.DEDENT, '', 877, 0, 877, 0),
woosh.Token(woosh.DEDENT, '', 877, 0, 877, 0),
woosh.Token(woosh.NAME, 'class', 877, 0, 877, 5),
woosh.Token(woosh.NAME, '_UnionGenericAlias', 877, 6, 877, 24),
woosh.Token(woosh.OP, '(', 877, 24, 877, 25),
woosh.Token(woosh.NAME, '_GenericAlias', 877, 25, 877, 38),
woosh.Token(woosh.OP, ',', 877, 38, 877, 39),
woosh.Token(woosh.NAME, '_root', 877, 40, 877, 45),
woosh.Token(woosh.OP, '=', 877, 45, 877, 46),
woosh.Token(woosh.NAME, 'True', 877, 46, 877, 50),
woosh.Token(woosh.OP, ')', 877, 50, 877, 51),
woosh.Token(woosh.OP, ':', 877, 51, 877, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 877, 52, 878, 0),
woosh.Token(woosh.INDENT, '    ', 878, 0, 878, 4),
woosh.Token(woosh.NAME, 'def', 878, 4, 878, 7),
woosh.Token(woosh.NAME, 'copy_with', 878, 8, 878, 17),
woosh.Token(woosh.OP, '(', 878, 17, 878, 18),
woosh.Token(woosh.NAME, 'self', 878, 18, 878, 22),
woosh.Token(woosh.OP, ',', 878, 22, 878, 23),
woosh.Token(woosh.NAME, 'params', 878, 24, 878, 30),
woosh.Token(woosh.OP, ')', 878, 30, 878, 31),
woosh.Token(woosh.OP, ':', 878, 31, 878, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 878, 32, 879, 0),
woosh.Token(woosh.INDENT, '        ', 879, 0, 879, 8),
woosh.Token(woosh.NAME, 'return', 879, 8, 879, 14),
woosh.Token(woosh.NAME, 'Union', 879, 15, 879, 20),
woosh.Token(woosh.OP, '[', 879, 20, 879, 21),
woosh.Token(woosh.NAME, 'params', 879, 21, 879, 27),
woosh.Token(woosh.OP, ']', 879, 27, 879, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 879, 28, 880, 0),
woosh.Token(woosh.DEDENT, '    ', 881, 0, 881, 4),
woosh.Token(woosh.NAME, 'def', 881, 4, 881, 7),
woosh.Token(woosh.NAME, '__eq__', 881, 8, 881, 14),
woosh.Token(woosh.OP, '(', 881, 14, 881, 15),
woosh.Token(woosh.NAME, 'self', 881, 15, 881, 19),
woosh.Token(woosh.OP, ',', 881, 19, 881, 20),
woosh.Token(woosh.NAME, 'other', 881, 21, 881, 26),
woosh.Token(woosh.OP, ')', 881, 26, 881, 27),
woosh.Token(woosh.OP, ':', 881, 27, 881, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 28, 882, 0),
woosh.Token(woosh.INDENT, '        ', 882, 0, 882, 8),
woosh.Token(woosh.NAME, 'if', 882, 8, 882, 10),
woosh.Token(woosh.NAME, 'not', 882, 11, 882, 14),
woosh.Token(woosh.NAME, 'isinstance', 882, 15, 882, 25),
woosh.Token(woosh.OP, '(', 882, 25, 882, 26),
woosh.Token(woosh.NAME, 'other', 882, 26, 882, 31),
woosh.Token(woosh.OP, ',', 882, 31, 882, 32),
woosh.Token(woosh.NAME, '_UnionGenericAlias', 882, 33, 882, 51),
woosh.Token(woosh.OP, ')', 882, 51, 882, 52),
woosh.Token(woosh.OP, ':', 882, 52, 882, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 882, 53, 883, 0),
woosh.Token(woosh.INDENT, '            ', 883, 0, 883, 12),
woosh.Token(woosh.NAME, 'return', 883, 12, 883, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 883, 19, 883, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 883, 33, 884, 0),
woosh.Token(woosh.DEDENT, '        ', 884, 0, 884, 8),
woosh.Token(woosh.NAME, 'return', 884, 8, 884, 14),
woosh.Token(woosh.NAME, 'set', 884, 15, 884, 18),
woosh.Token(woosh.OP, '(', 884, 18, 884, 19),
woosh.Token(woosh.NAME, 'self', 884, 19, 884, 23),
woosh.Token(woosh.OP, '.', 884, 23, 884, 24),
woosh.Token(woosh.NAME, '__args__', 884, 24, 884, 32),
woosh.Token(woosh.OP, ')', 884, 32, 884, 33),
woosh.Token(woosh.OP, '==', 884, 34, 884, 36),
woosh.Token(woosh.NAME, 'set', 884, 37, 884, 40),
woosh.Token(woosh.OP, '(', 884, 40, 884, 41),
woosh.Token(woosh.NAME, 'other', 884, 41, 884, 46),
woosh.Token(woosh.OP, '.', 884, 46, 884, 47),
woosh.Token(woosh.NAME, '__args__', 884, 47, 884, 55),
woosh.Token(woosh.OP, ')', 884, 55, 884, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 884, 56, 885, 0),
woosh.Token(woosh.DEDENT, '    ', 886, 0, 886, 4),
woosh.Token(woosh.NAME, 'def', 886, 4, 886, 7),
woosh.Token(woosh.NAME, '__hash__', 886, 8, 886, 16),
woosh.Token(woosh.OP, '(', 886, 16, 886, 17),
woosh.Token(woosh.NAME, 'self', 886, 17, 886, 21),
woosh.Token(woosh.OP, ')', 886, 21, 886, 22),
woosh.Token(woosh.OP, ':', 886, 22, 886, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 23, 887, 0),
woosh.Token(woosh.INDENT, '        ', 887, 0, 887, 8),
woosh.Token(woosh.NAME, 'return', 887, 8, 887, 14),
woosh.Token(woosh.NAME, 'hash', 887, 15, 887, 19),
woosh.Token(woosh.OP, '(', 887, 19, 887, 20),
woosh.Token(woosh.NAME, 'frozenset', 887, 20, 887, 29),
woosh.Token(woosh.OP, '(', 887, 29, 887, 30),
woosh.Token(woosh.NAME, 'self', 887, 30, 887, 34),
woosh.Token(woosh.OP, '.', 887, 34, 887, 35),
woosh.Token(woosh.NAME, '__args__', 887, 35, 887, 43),
woosh.Token(woosh.OP, ')', 887, 43, 887, 44),
woosh.Token(woosh.OP, ')', 887, 44, 887, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 887, 45, 888, 0),
woosh.Token(woosh.DEDENT, '    ', 889, 0, 889, 4),
woosh.Token(woosh.NAME, 'def', 889, 4, 889, 7),
woosh.Token(woosh.NAME, '__repr__', 889, 8, 889, 16),
woosh.Token(woosh.OP, '(', 889, 16, 889, 17),
woosh.Token(woosh.NAME, 'self', 889, 17, 889, 21),
woosh.Token(woosh.OP, ')', 889, 21, 889, 22),
woosh.Token(woosh.OP, ':', 889, 22, 889, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 23, 890, 0),
woosh.Token(woosh.INDENT, '        ', 890, 0, 890, 8),
woosh.Token(woosh.NAME, 'args', 890, 8, 890, 12),
woosh.Token(woosh.OP, '=', 890, 13, 890, 14),
woosh.Token(woosh.NAME, 'self', 890, 15, 890, 19),
woosh.Token(woosh.OP, '.', 890, 19, 890, 20),
woosh.Token(woosh.NAME, '__args__', 890, 20, 890, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 890, 28, 891, 0),
woosh.Token(woosh.NAME, 'if', 891, 8, 891, 10),
woosh.Token(woosh.NAME, 'len', 891, 11, 891, 14),
woosh.Token(woosh.OP, '(', 891, 14, 891, 15),
woosh.Token(woosh.NAME, 'args', 891, 15, 891, 19),
woosh.Token(woosh.OP, ')', 891, 19, 891, 20),
woosh.Token(woosh.OP, '==', 891, 21, 891, 23),
woosh.Token(woosh.NUMBER, '2', 891, 24, 891, 25),
woosh.Token(woosh.OP, ':', 891, 25, 891, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 26, 892, 0),
woosh.Token(woosh.INDENT, '            ', 892, 0, 892, 12),
woosh.Token(woosh.NAME, 'if', 892, 12, 892, 14),
woosh.Token(woosh.NAME, 'args', 892, 15, 892, 19),
woosh.Token(woosh.OP, '[', 892, 19, 892, 20),
woosh.Token(woosh.NUMBER, '0', 892, 20, 892, 21),
woosh.Token(woosh.OP, ']', 892, 21, 892, 22),
woosh.Token(woosh.NAME, 'is', 892, 23, 892, 25),
woosh.Token(woosh.NAME, 'type', 892, 26, 892, 30),
woosh.Token(woosh.OP, '(', 892, 30, 892, 31),
woosh.Token(woosh.NAME, 'None', 892, 31, 892, 35),
woosh.Token(woosh.OP, ')', 892, 35, 892, 36),
woosh.Token(woosh.OP, ':', 892, 36, 892, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 37, 893, 0),
woosh.Token(woosh.INDENT, '                ', 893, 0, 893, 16),
woosh.Token(woosh.NAME, 'return', 893, 16, 893, 22),
woosh.Token(woosh.STRING, "f'typing.Optional[{_type_repr(args[1])}]'", 893, 23, 893, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 64, 894, 0),
woosh.Token(woosh.DEDENT, '            ', 894, 0, 894, 12),
woosh.Token(woosh.NAME, 'elif', 894, 12, 894, 16),
woosh.Token(woosh.NAME, 'args', 894, 17, 894, 21),
woosh.Token(woosh.OP, '[', 894, 21, 894, 22),
woosh.Token(woosh.NUMBER, '1', 894, 22, 894, 23),
woosh.Token(woosh.OP, ']', 894, 23, 894, 24),
woosh.Token(woosh.NAME, 'is', 894, 25, 894, 27),
woosh.Token(woosh.NAME, 'type', 894, 28, 894, 32),
woosh.Token(woosh.OP, '(', 894, 32, 894, 33),
woosh.Token(woosh.NAME, 'None', 894, 33, 894, 37),
woosh.Token(woosh.OP, ')', 894, 37, 894, 38),
woosh.Token(woosh.OP, ':', 894, 38, 894, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 39, 895, 0),
woosh.Token(woosh.INDENT, '                ', 895, 0, 895, 16),
woosh.Token(woosh.NAME, 'return', 895, 16, 895, 22),
woosh.Token(woosh.STRING, "f'typing.Optional[{_type_repr(args[0])}]'", 895, 23, 895, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 895, 64, 896, 0),
woosh.Token(woosh.DEDENT, '        ', 896, 0, 896, 8),
woosh.Token(woosh.DEDENT, '', 896, 8, 896, 8),
woosh.Token(woosh.NAME, 'return', 896, 8, 896, 14),
woosh.Token(woosh.NAME, 'super', 896, 15, 896, 20),
woosh.Token(woosh.OP, '(', 896, 20, 896, 21),
woosh.Token(woosh.OP, ')', 896, 21, 896, 22),
woosh.Token(woosh.OP, '.', 896, 22, 896, 23),
woosh.Token(woosh.NAME, '__repr__', 896, 23, 896, 31),
woosh.Token(woosh.OP, '(', 896, 31, 896, 32),
woosh.Token(woosh.OP, ')', 896, 32, 896, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 896, 33, 897, 0),
woosh.Token(woosh.DEDENT, '    ', 898, 0, 898, 4),
woosh.Token(woosh.NAME, 'def', 898, 4, 898, 7),
woosh.Token(woosh.NAME, '__instancecheck__', 898, 8, 898, 25),
woosh.Token(woosh.OP, '(', 898, 25, 898, 26),
woosh.Token(woosh.NAME, 'self', 898, 26, 898, 30),
woosh.Token(woosh.OP, ',', 898, 30, 898, 31),
woosh.Token(woosh.NAME, 'obj', 898, 32, 898, 35),
woosh.Token(woosh.OP, ')', 898, 35, 898, 36),
woosh.Token(woosh.OP, ':', 898, 36, 898, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 898, 37, 899, 0),
woosh.Token(woosh.INDENT, '        ', 899, 0, 899, 8),
woosh.Token(woosh.NAME, 'return', 899, 8, 899, 14),
woosh.Token(woosh.NAME, 'self', 899, 15, 899, 19),
woosh.Token(woosh.OP, '.', 899, 19, 899, 20),
woosh.Token(woosh.NAME, '__subclasscheck__', 899, 20, 899, 37),
woosh.Token(woosh.OP, '(', 899, 37, 899, 38),
woosh.Token(woosh.NAME, 'type', 899, 38, 899, 42),
woosh.Token(woosh.OP, '(', 899, 42, 899, 43),
woosh.Token(woosh.NAME, 'obj', 899, 43, 899, 46),
woosh.Token(woosh.OP, ')', 899, 46, 899, 47),
woosh.Token(woosh.OP, ')', 899, 47, 899, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 48, 900, 0),
woosh.Token(woosh.DEDENT, '    ', 901, 0, 901, 4),
woosh.Token(woosh.NAME, 'def', 901, 4, 901, 7),
woosh.Token(woosh.NAME, '__subclasscheck__', 901, 8, 901, 25),
woosh.Token(woosh.OP, '(', 901, 25, 901, 26),
woosh.Token(woosh.NAME, 'self', 901, 26, 901, 30),
woosh.Token(woosh.OP, ',', 901, 30, 901, 31),
woosh.Token(woosh.NAME, 'cls', 901, 32, 901, 35),
woosh.Token(woosh.OP, ')', 901, 35, 901, 36),
woosh.Token(woosh.OP, ':', 901, 36, 901, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 37, 902, 0),
woosh.Token(woosh.INDENT, '        ', 902, 0, 902, 8),
woosh.Token(woosh.NAME, 'for', 902, 8, 902, 11),
woosh.Token(woosh.NAME, 'arg', 902, 12, 902, 15),
woosh.Token(woosh.NAME, 'in', 902, 16, 902, 18),
woosh.Token(woosh.NAME, 'self', 902, 19, 902, 23),
woosh.Token(woosh.OP, '.', 902, 23, 902, 24),
woosh.Token(woosh.NAME, '__args__', 902, 24, 902, 32),
woosh.Token(woosh.OP, ':', 902, 32, 902, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 902, 33, 903, 0),
woosh.Token(woosh.INDENT, '            ', 903, 0, 903, 12),
woosh.Token(woosh.NAME, 'if', 903, 12, 903, 14),
woosh.Token(woosh.NAME, 'issubclass', 903, 15, 903, 25),
woosh.Token(woosh.OP, '(', 903, 25, 903, 26),
woosh.Token(woosh.NAME, 'cls', 903, 26, 903, 29),
woosh.Token(woosh.OP, ',', 903, 29, 903, 30),
woosh.Token(woosh.NAME, 'arg', 903, 31, 903, 34),
woosh.Token(woosh.OP, ')', 903, 34, 903, 35),
woosh.Token(woosh.OP, ':', 903, 35, 903, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 903, 36, 904, 0),
woosh.Token(woosh.INDENT, '                ', 904, 0, 904, 16),
woosh.Token(woosh.NAME, 'return', 904, 16, 904, 22),
woosh.Token(woosh.NAME, 'True', 904, 23, 904, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 904, 27, 905, 0),
woosh.Token(woosh.DEDENT, '', 908, 0, 908, 0),
woosh.Token(woosh.DEDENT, '', 908, 0, 908, 0),
woosh.Token(woosh.DEDENT, '', 908, 0, 908, 0),
woosh.Token(woosh.DEDENT, '', 908, 0, 908, 0),
woosh.Token(woosh.NAME, 'class', 908, 0, 908, 5),
woosh.Token(woosh.NAME, 'Generic', 908, 6, 908, 13),
woosh.Token(woosh.OP, ':', 908, 13, 908, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 908, 14, 909, 0),
woosh.Token(woosh.INDENT, '    ', 909, 0, 909, 4),
woosh.Token(woosh.STRING, '"""Abstract base class for generic types.\r\n\r\n    A generic type is typically declared by inheriting from\r\n    this class parameterized with one or more type variables.\r\n    For example, a generic mapping type might be defined as::\r\n\r\n      class Mapping(Generic[KT, VT]):\r\n          def __getitem__(self, key: KT) -> VT:\r\n              ...\r\n          # Etc.\r\n\r\n    This class can then be used as follows::\r\n\r\n      def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\r\n          try:\r\n              return mapping[key]\r\n          except KeyError:\r\n              return default\r\n    """', 909, 4, 927, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 7, 928, 0),
woosh.Token(woosh.NAME, '__slots__', 928, 4, 928, 13),
woosh.Token(woosh.OP, '=', 928, 14, 928, 15),
woosh.Token(woosh.OP, '(', 928, 16, 928, 17),
woosh.Token(woosh.OP, ')', 928, 17, 928, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 928, 18, 929, 0),
woosh.Token(woosh.NAME, '_is_protocol', 929, 4, 929, 16),
woosh.Token(woosh.OP, '=', 929, 17, 929, 18),
woosh.Token(woosh.NAME, 'False', 929, 19, 929, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 929, 24, 930, 0),
woosh.Token(woosh.OP, '@', 931, 4, 931, 5),
woosh.Token(woosh.NAME, '_tp_cache', 931, 5, 931, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 931, 14, 932, 0),
woosh.Token(woosh.NAME, 'def', 932, 4, 932, 7),
woosh.Token(woosh.NAME, '__class_getitem__', 932, 8, 932, 25),
woosh.Token(woosh.OP, '(', 932, 25, 932, 26),
woosh.Token(woosh.NAME, 'cls', 932, 26, 932, 29),
woosh.Token(woosh.OP, ',', 932, 29, 932, 30),
woosh.Token(woosh.NAME, 'params', 932, 31, 932, 37),
woosh.Token(woosh.OP, ')', 932, 37, 932, 38),
woosh.Token(woosh.OP, ':', 932, 38, 932, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 39, 933, 0),
woosh.Token(woosh.INDENT, '        ', 933, 0, 933, 8),
woosh.Token(woosh.NAME, 'if', 933, 8, 933, 10),
woosh.Token(woosh.NAME, 'not', 933, 11, 933, 14),
woosh.Token(woosh.NAME, 'isinstance', 933, 15, 933, 25),
woosh.Token(woosh.OP, '(', 933, 25, 933, 26),
woosh.Token(woosh.NAME, 'params', 933, 26, 933, 32),
woosh.Token(woosh.OP, ',', 933, 32, 933, 33),
woosh.Token(woosh.NAME, 'tuple', 933, 34, 933, 39),
woosh.Token(woosh.OP, ')', 933, 39, 933, 40),
woosh.Token(woosh.OP, ':', 933, 40, 933, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 933, 41, 934, 0),
woosh.Token(woosh.INDENT, '            ', 934, 0, 934, 12),
woosh.Token(woosh.NAME, 'params', 934, 12, 934, 18),
woosh.Token(woosh.OP, '=', 934, 19, 934, 20),
woosh.Token(woosh.OP, '(', 934, 21, 934, 22),
woosh.Token(woosh.NAME, 'params', 934, 22, 934, 28),
woosh.Token(woosh.OP, ',', 934, 28, 934, 29),
woosh.Token(woosh.OP, ')', 934, 29, 934, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 934, 30, 935, 0),
woosh.Token(woosh.DEDENT, '        ', 935, 0, 935, 8),
woosh.Token(woosh.NAME, 'if', 935, 8, 935, 10),
woosh.Token(woosh.NAME, 'not', 935, 11, 935, 14),
woosh.Token(woosh.NAME, 'params', 935, 15, 935, 21),
woosh.Token(woosh.NAME, 'and', 935, 22, 935, 25),
woosh.Token(woosh.NAME, 'cls', 935, 26, 935, 29),
woosh.Token(woosh.NAME, 'is', 935, 30, 935, 32),
woosh.Token(woosh.NAME, 'not', 935, 33, 935, 36),
woosh.Token(woosh.NAME, 'Tuple', 935, 37, 935, 42),
woosh.Token(woosh.OP, ':', 935, 42, 935, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 935, 43, 936, 0),
woosh.Token(woosh.INDENT, '            ', 936, 0, 936, 12),
woosh.Token(woosh.NAME, 'raise', 936, 12, 936, 17),
woosh.Token(woosh.NAME, 'TypeError', 936, 18, 936, 27),
woosh.Token(woosh.OP, '(', 936, 27, 936, 28),
woosh.Token(woosh.STRING, 'f"Parameter list to {cls.__qualname__}[...] cannot be empty"', 937, 16, 937, 76),
woosh.Token(woosh.OP, ')', 937, 76, 937, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 937, 77, 938, 0),
woosh.Token(woosh.DEDENT, '        ', 938, 0, 938, 8),
woosh.Token(woosh.NAME, 'msg', 938, 8, 938, 11),
woosh.Token(woosh.OP, '=', 938, 12, 938, 13),
woosh.Token(woosh.STRING, '"Parameters to generic types must be types."', 938, 14, 938, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 58, 939, 0),
woosh.Token(woosh.NAME, 'params', 939, 8, 939, 14),
woosh.Token(woosh.OP, '=', 939, 15, 939, 16),
woosh.Token(woosh.NAME, 'tuple', 939, 17, 939, 22),
woosh.Token(woosh.OP, '(', 939, 22, 939, 23),
woosh.Token(woosh.NAME, '_type_check', 939, 23, 939, 34),
woosh.Token(woosh.OP, '(', 939, 34, 939, 35),
woosh.Token(woosh.NAME, 'p', 939, 35, 939, 36),
woosh.Token(woosh.OP, ',', 939, 36, 939, 37),
woosh.Token(woosh.NAME, 'msg', 939, 38, 939, 41),
woosh.Token(woosh.OP, ')', 939, 41, 939, 42),
woosh.Token(woosh.NAME, 'for', 939, 43, 939, 46),
woosh.Token(woosh.NAME, 'p', 939, 47, 939, 48),
woosh.Token(woosh.NAME, 'in', 939, 49, 939, 51),
woosh.Token(woosh.NAME, 'params', 939, 52, 939, 58),
woosh.Token(woosh.OP, ')', 939, 58, 939, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 59, 940, 0),
woosh.Token(woosh.NAME, 'if', 940, 8, 940, 10),
woosh.Token(woosh.NAME, 'cls', 940, 11, 940, 14),
woosh.Token(woosh.NAME, 'in', 940, 15, 940, 17),
woosh.Token(woosh.OP, '(', 940, 18, 940, 19),
woosh.Token(woosh.NAME, 'Generic', 940, 19, 940, 26),
woosh.Token(woosh.OP, ',', 940, 26, 940, 27),
woosh.Token(woosh.NAME, 'Protocol', 940, 28, 940, 36),
woosh.Token(woosh.OP, ')', 940, 36, 940, 37),
woosh.Token(woosh.OP, ':', 940, 37, 940, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 940, 38, 941, 0),
woosh.Token(woosh.COMMENT, '# Generic and Protocol can only be subscripted with unique type variables.', 941, 12, 941, 86),
woosh.Token(woosh.INDENT, '            ', 942, 0, 942, 12),
woosh.Token(woosh.NAME, 'if', 942, 12, 942, 14),
woosh.Token(woosh.NAME, 'not', 942, 15, 942, 18),
woosh.Token(woosh.NAME, 'all', 942, 19, 942, 22),
woosh.Token(woosh.OP, '(', 942, 22, 942, 23),
woosh.Token(woosh.NAME, 'isinstance', 942, 23, 942, 33),
woosh.Token(woosh.OP, '(', 942, 33, 942, 34),
woosh.Token(woosh.NAME, 'p', 942, 34, 942, 35),
woosh.Token(woosh.OP, ',', 942, 35, 942, 36),
woosh.Token(woosh.NAME, 'TypeVar', 942, 37, 942, 44),
woosh.Token(woosh.OP, ')', 942, 44, 942, 45),
woosh.Token(woosh.NAME, 'for', 942, 46, 942, 49),
woosh.Token(woosh.NAME, 'p', 942, 50, 942, 51),
woosh.Token(woosh.NAME, 'in', 942, 52, 942, 54),
woosh.Token(woosh.NAME, 'params', 942, 55, 942, 61),
woosh.Token(woosh.OP, ')', 942, 61, 942, 62),
woosh.Token(woosh.OP, ':', 942, 62, 942, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 942, 63, 943, 0),
woosh.Token(woosh.INDENT, '                ', 943, 0, 943, 16),
woosh.Token(woosh.NAME, 'raise', 943, 16, 943, 21),
woosh.Token(woosh.NAME, 'TypeError', 943, 22, 943, 31),
woosh.Token(woosh.OP, '(', 943, 31, 943, 32),
woosh.Token(woosh.STRING, 'f"Parameters to {cls.__name__}[...] must all be type variables"', 944, 20, 944, 83),
woosh.Token(woosh.OP, ')', 944, 83, 944, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 84, 945, 0),
woosh.Token(woosh.DEDENT, '            ', 945, 0, 945, 12),
woosh.Token(woosh.NAME, 'if', 945, 12, 945, 14),
woosh.Token(woosh.NAME, 'len', 945, 15, 945, 18),
woosh.Token(woosh.OP, '(', 945, 18, 945, 19),
woosh.Token(woosh.NAME, 'set', 945, 19, 945, 22),
woosh.Token(woosh.OP, '(', 945, 22, 945, 23),
woosh.Token(woosh.NAME, 'params', 945, 23, 945, 29),
woosh.Token(woosh.OP, ')', 945, 29, 945, 30),
woosh.Token(woosh.OP, ')', 945, 30, 945, 31),
woosh.Token(woosh.OP, '!=', 945, 32, 945, 34),
woosh.Token(woosh.NAME, 'len', 945, 35, 945, 38),
woosh.Token(woosh.OP, '(', 945, 38, 945, 39),
woosh.Token(woosh.NAME, 'params', 945, 39, 945, 45),
woosh.Token(woosh.OP, ')', 945, 45, 945, 46),
woosh.Token(woosh.OP, ':', 945, 46, 945, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 945, 47, 946, 0),
woosh.Token(woosh.INDENT, '                ', 946, 0, 946, 16),
woosh.Token(woosh.NAME, 'raise', 946, 16, 946, 21),
woosh.Token(woosh.NAME, 'TypeError', 946, 22, 946, 31),
woosh.Token(woosh.OP, '(', 946, 31, 946, 32),
woosh.Token(woosh.STRING, 'f"Parameters to {cls.__name__}[...] must all be unique"', 947, 20, 947, 75),
woosh.Token(woosh.OP, ')', 947, 75, 947, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 947, 76, 948, 0),
woosh.Token(woosh.DEDENT, '        ', 948, 0, 948, 8),
woosh.Token(woosh.DEDENT, '', 948, 8, 948, 8),
woosh.Token(woosh.NAME, 'else', 948, 8, 948, 12),
woosh.Token(woosh.OP, ':', 948, 12, 948, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 948, 13, 949, 0),
woosh.Token(woosh.COMMENT, '# Subscripting a regular Generic subclass.', 949, 12, 949, 54),
woosh.Token(woosh.INDENT, '            ', 950, 0, 950, 12),
woosh.Token(woosh.NAME, '_check_generic', 950, 12, 950, 26),
woosh.Token(woosh.OP, '(', 950, 26, 950, 27),
woosh.Token(woosh.NAME, 'cls', 950, 27, 950, 30),
woosh.Token(woosh.OP, ',', 950, 30, 950, 31),
woosh.Token(woosh.NAME, 'params', 950, 32, 950, 38),
woosh.Token(woosh.OP, ',', 950, 38, 950, 39),
woosh.Token(woosh.NAME, 'len', 950, 40, 950, 43),
woosh.Token(woosh.OP, '(', 950, 43, 950, 44),
woosh.Token(woosh.NAME, 'cls', 950, 44, 950, 47),
woosh.Token(woosh.OP, '.', 950, 47, 950, 48),
woosh.Token(woosh.NAME, '__parameters__', 950, 48, 950, 62),
woosh.Token(woosh.OP, ')', 950, 62, 950, 63),
woosh.Token(woosh.OP, ')', 950, 63, 950, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 950, 64, 951, 0),
woosh.Token(woosh.DEDENT, '        ', 951, 0, 951, 8),
woosh.Token(woosh.NAME, 'return', 951, 8, 951, 14),
woosh.Token(woosh.NAME, '_GenericAlias', 951, 15, 951, 28),
woosh.Token(woosh.OP, '(', 951, 28, 951, 29),
woosh.Token(woosh.NAME, 'cls', 951, 29, 951, 32),
woosh.Token(woosh.OP, ',', 951, 32, 951, 33),
woosh.Token(woosh.NAME, 'params', 951, 34, 951, 40),
woosh.Token(woosh.OP, ')', 951, 40, 951, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 41, 952, 0),
woosh.Token(woosh.DEDENT, '    ', 953, 0, 953, 4),
woosh.Token(woosh.NAME, 'def', 953, 4, 953, 7),
woosh.Token(woosh.NAME, '__init_subclass__', 953, 8, 953, 25),
woosh.Token(woosh.OP, '(', 953, 25, 953, 26),
woosh.Token(woosh.NAME, 'cls', 953, 26, 953, 29),
woosh.Token(woosh.OP, ',', 953, 29, 953, 30),
woosh.Token(woosh.OP, '*', 953, 31, 953, 32),
woosh.Token(woosh.NAME, 'args', 953, 32, 953, 36),
woosh.Token(woosh.OP, ',', 953, 36, 953, 37),
woosh.Token(woosh.OP, '**', 953, 38, 953, 40),
woosh.Token(woosh.NAME, 'kwargs', 953, 40, 953, 46),
woosh.Token(woosh.OP, ')', 953, 46, 953, 47),
woosh.Token(woosh.OP, ':', 953, 47, 953, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 48, 954, 0),
woosh.Token(woosh.INDENT, '        ', 954, 0, 954, 8),
woosh.Token(woosh.NAME, 'super', 954, 8, 954, 13),
woosh.Token(woosh.OP, '(', 954, 13, 954, 14),
woosh.Token(woosh.OP, ')', 954, 14, 954, 15),
woosh.Token(woosh.OP, '.', 954, 15, 954, 16),
woosh.Token(woosh.NAME, '__init_subclass__', 954, 16, 954, 33),
woosh.Token(woosh.OP, '(', 954, 33, 954, 34),
woosh.Token(woosh.OP, '*', 954, 34, 954, 35),
woosh.Token(woosh.NAME, 'args', 954, 35, 954, 39),
woosh.Token(woosh.OP, ',', 954, 39, 954, 40),
woosh.Token(woosh.OP, '**', 954, 41, 954, 43),
woosh.Token(woosh.NAME, 'kwargs', 954, 43, 954, 49),
woosh.Token(woosh.OP, ')', 954, 49, 954, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 954, 50, 955, 0),
woosh.Token(woosh.NAME, 'tvars', 955, 8, 955, 13),
woosh.Token(woosh.OP, '=', 955, 14, 955, 15),
woosh.Token(woosh.OP, '[', 955, 16, 955, 17),
woosh.Token(woosh.OP, ']', 955, 17, 955, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 18, 956, 0),
woosh.Token(woosh.NAME, 'if', 956, 8, 956, 10),
woosh.Token(woosh.STRING, "'__orig_bases__'", 956, 11, 956, 27),
woosh.Token(woosh.NAME, 'in', 956, 28, 956, 30),
woosh.Token(woosh.NAME, 'cls', 956, 31, 956, 34),
woosh.Token(woosh.OP, '.', 956, 34, 956, 35),
woosh.Token(woosh.NAME, '__dict__', 956, 35, 956, 43),
woosh.Token(woosh.OP, ':', 956, 43, 956, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 956, 44, 957, 0),
woosh.Token(woosh.INDENT, '            ', 957, 0, 957, 12),
woosh.Token(woosh.NAME, 'error', 957, 12, 957, 17),
woosh.Token(woosh.OP, '=', 957, 18, 957, 19),
woosh.Token(woosh.NAME, 'Generic', 957, 20, 957, 27),
woosh.Token(woosh.NAME, 'in', 957, 28, 957, 30),
woosh.Token(woosh.NAME, 'cls', 957, 31, 957, 34),
woosh.Token(woosh.OP, '.', 957, 34, 957, 35),
woosh.Token(woosh.NAME, '__orig_bases__', 957, 35, 957, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 957, 49, 958, 0),
woosh.Token(woosh.DEDENT, '        ', 958, 0, 958, 8),
woosh.Token(woosh.NAME, 'else', 958, 8, 958, 12),
woosh.Token(woosh.OP, ':', 958, 12, 958, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 13, 959, 0),
woosh.Token(woosh.INDENT, '            ', 959, 0, 959, 12),
woosh.Token(woosh.NAME, 'error', 959, 12, 959, 17),
woosh.Token(woosh.OP, '=', 959, 18, 959, 19),
woosh.Token(woosh.NAME, 'Generic', 959, 20, 959, 27),
woosh.Token(woosh.NAME, 'in', 959, 28, 959, 30),
woosh.Token(woosh.NAME, 'cls', 959, 31, 959, 34),
woosh.Token(woosh.OP, '.', 959, 34, 959, 35),
woosh.Token(woosh.NAME, '__bases__', 959, 35, 959, 44),
woosh.Token(woosh.NAME, 'and', 959, 45, 959, 48),
woosh.Token(woosh.NAME, 'cls', 959, 49, 959, 52),
woosh.Token(woosh.OP, '.', 959, 52, 959, 53),
woosh.Token(woosh.NAME, '__name__', 959, 53, 959, 61),
woosh.Token(woosh.OP, '!=', 959, 62, 959, 64),
woosh.Token(woosh.STRING, "'Protocol'", 959, 65, 959, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 959, 75, 960, 0),
woosh.Token(woosh.DEDENT, '        ', 960, 0, 960, 8),
woosh.Token(woosh.NAME, 'if', 960, 8, 960, 10),
woosh.Token(woosh.NAME, 'error', 960, 11, 960, 16),
woosh.Token(woosh.OP, ':', 960, 16, 960, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 17, 961, 0),
woosh.Token(woosh.INDENT, '            ', 961, 0, 961, 12),
woosh.Token(woosh.NAME, 'raise', 961, 12, 961, 17),
woosh.Token(woosh.NAME, 'TypeError', 961, 18, 961, 27),
woosh.Token(woosh.OP, '(', 961, 27, 961, 28),
woosh.Token(woosh.STRING, '"Cannot inherit from plain Generic"', 961, 28, 961, 63),
woosh.Token(woosh.OP, ')', 961, 63, 961, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 64, 962, 0),
woosh.Token(woosh.DEDENT, '        ', 962, 0, 962, 8),
woosh.Token(woosh.NAME, 'if', 962, 8, 962, 10),
woosh.Token(woosh.STRING, "'__orig_bases__'", 962, 11, 962, 27),
woosh.Token(woosh.NAME, 'in', 962, 28, 962, 30),
woosh.Token(woosh.NAME, 'cls', 962, 31, 962, 34),
woosh.Token(woosh.OP, '.', 962, 34, 962, 35),
woosh.Token(woosh.NAME, '__dict__', 962, 35, 962, 43),
woosh.Token(woosh.OP, ':', 962, 43, 962, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 962, 44, 963, 0),
woosh.Token(woosh.INDENT, '            ', 963, 0, 963, 12),
woosh.Token(woosh.NAME, 'tvars', 963, 12, 963, 17),
woosh.Token(woosh.OP, '=', 963, 18, 963, 19),
woosh.Token(woosh.NAME, '_collect_type_vars', 963, 20, 963, 38),
woosh.Token(woosh.OP, '(', 963, 38, 963, 39),
woosh.Token(woosh.NAME, 'cls', 963, 39, 963, 42),
woosh.Token(woosh.OP, '.', 963, 42, 963, 43),
woosh.Token(woosh.NAME, '__orig_bases__', 963, 43, 963, 57),
woosh.Token(woosh.OP, ')', 963, 57, 963, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 963, 58, 964, 0),
woosh.Token(woosh.COMMENT, '# Look for Generic[T1, ..., Tn].', 964, 12, 964, 44),
woosh.Token(woosh.COMMENT, '# If found, tvars must be a subset of it.', 965, 12, 965, 53),
woosh.Token(woosh.COMMENT, '# If not found, tvars is it.', 966, 12, 966, 40),
woosh.Token(woosh.COMMENT, '# Also check for and reject plain Generic,', 967, 12, 967, 54),
woosh.Token(woosh.COMMENT, '# and reject multiple Generic[...].', 968, 12, 968, 47),
woosh.Token(woosh.NAME, 'gvars', 969, 12, 969, 17),
woosh.Token(woosh.OP, '=', 969, 18, 969, 19),
woosh.Token(woosh.NAME, 'None', 969, 20, 969, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 969, 24, 970, 0),
woosh.Token(woosh.NAME, 'for', 970, 12, 970, 15),
woosh.Token(woosh.NAME, 'base', 970, 16, 970, 20),
woosh.Token(woosh.NAME, 'in', 970, 21, 970, 23),
woosh.Token(woosh.NAME, 'cls', 970, 24, 970, 27),
woosh.Token(woosh.OP, '.', 970, 27, 970, 28),
woosh.Token(woosh.NAME, '__orig_bases__', 970, 28, 970, 42),
woosh.Token(woosh.OP, ':', 970, 42, 970, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 43, 971, 0),
woosh.Token(woosh.INDENT, '                ', 971, 0, 971, 16),
woosh.Token(woosh.NAME, 'if', 971, 16, 971, 18),
woosh.Token(woosh.OP, '(', 971, 19, 971, 20),
woosh.Token(woosh.NAME, 'isinstance', 971, 20, 971, 30),
woosh.Token(woosh.OP, '(', 971, 30, 971, 31),
woosh.Token(woosh.NAME, 'base', 971, 31, 971, 35),
woosh.Token(woosh.OP, ',', 971, 35, 971, 36),
woosh.Token(woosh.NAME, '_GenericAlias', 971, 37, 971, 50),
woosh.Token(woosh.OP, ')', 971, 50, 971, 51),
woosh.Token(woosh.NAME, 'and', 971, 52, 971, 55),
woosh.Token(woosh.NAME, 'base', 972, 24, 972, 28),
woosh.Token(woosh.OP, '.', 972, 28, 972, 29),
woosh.Token(woosh.NAME, '__origin__', 972, 29, 972, 39),
woosh.Token(woosh.NAME, 'is', 972, 40, 972, 42),
woosh.Token(woosh.NAME, 'Generic', 972, 43, 972, 50),
woosh.Token(woosh.OP, ')', 972, 50, 972, 51),
woosh.Token(woosh.OP, ':', 972, 51, 972, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 972, 52, 973, 0),
woosh.Token(woosh.INDENT, '                    ', 973, 0, 973, 20),
woosh.Token(woosh.NAME, 'if', 973, 20, 973, 22),
woosh.Token(woosh.NAME, 'gvars', 973, 23, 973, 28),
woosh.Token(woosh.NAME, 'is', 973, 29, 973, 31),
woosh.Token(woosh.NAME, 'not', 973, 32, 973, 35),
woosh.Token(woosh.NAME, 'None', 973, 36, 973, 40),
woosh.Token(woosh.OP, ':', 973, 40, 973, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 973, 41, 974, 0),
woosh.Token(woosh.INDENT, '                        ', 974, 0, 974, 24),
woosh.Token(woosh.NAME, 'raise', 974, 24, 974, 29),
woosh.Token(woosh.NAME, 'TypeError', 974, 30, 974, 39),
woosh.Token(woosh.OP, '(', 974, 39, 974, 40),
woosh.Token(woosh.STRING, '"Cannot inherit from Generic[...] multiple types."', 975, 28, 975, 78),
woosh.Token(woosh.OP, ')', 975, 78, 975, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 975, 79, 976, 0),
woosh.Token(woosh.DEDENT, '                    ', 976, 0, 976, 20),
woosh.Token(woosh.NAME, 'gvars', 976, 20, 976, 25),
woosh.Token(woosh.OP, '=', 976, 26, 976, 27),
woosh.Token(woosh.NAME, 'base', 976, 28, 976, 32),
woosh.Token(woosh.OP, '.', 976, 32, 976, 33),
woosh.Token(woosh.NAME, '__parameters__', 976, 33, 976, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 976, 47, 977, 0),
woosh.Token(woosh.DEDENT, '            ', 977, 0, 977, 12),
woosh.Token(woosh.DEDENT, '', 977, 12, 977, 12),
woosh.Token(woosh.NAME, 'if', 977, 12, 977, 14),
woosh.Token(woosh.NAME, 'gvars', 977, 15, 977, 20),
woosh.Token(woosh.NAME, 'is', 977, 21, 977, 23),
woosh.Token(woosh.NAME, 'not', 977, 24, 977, 27),
woosh.Token(woosh.NAME, 'None', 977, 28, 977, 32),
woosh.Token(woosh.OP, ':', 977, 32, 977, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 977, 33, 978, 0),
woosh.Token(woosh.INDENT, '                ', 978, 0, 978, 16),
woosh.Token(woosh.NAME, 'tvarset', 978, 16, 978, 23),
woosh.Token(woosh.OP, '=', 978, 24, 978, 25),
woosh.Token(woosh.NAME, 'set', 978, 26, 978, 29),
woosh.Token(woosh.OP, '(', 978, 29, 978, 30),
woosh.Token(woosh.NAME, 'tvars', 978, 30, 978, 35),
woosh.Token(woosh.OP, ')', 978, 35, 978, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 978, 36, 979, 0),
woosh.Token(woosh.NAME, 'gvarset', 979, 16, 979, 23),
woosh.Token(woosh.OP, '=', 979, 24, 979, 25),
woosh.Token(woosh.NAME, 'set', 979, 26, 979, 29),
woosh.Token(woosh.OP, '(', 979, 29, 979, 30),
woosh.Token(woosh.NAME, 'gvars', 979, 30, 979, 35),
woosh.Token(woosh.OP, ')', 979, 35, 979, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 979, 36, 980, 0),
woosh.Token(woosh.NAME, 'if', 980, 16, 980, 18),
woosh.Token(woosh.NAME, 'not', 980, 19, 980, 22),
woosh.Token(woosh.NAME, 'tvarset', 980, 23, 980, 30),
woosh.Token(woosh.OP, '<=', 980, 31, 980, 33),
woosh.Token(woosh.NAME, 'gvarset', 980, 34, 980, 41),
woosh.Token(woosh.OP, ':', 980, 41, 980, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 980, 42, 981, 0),
woosh.Token(woosh.INDENT, '                    ', 981, 0, 981, 20),
woosh.Token(woosh.NAME, 's_vars', 981, 20, 981, 26),
woosh.Token(woosh.OP, '=', 981, 27, 981, 28),
woosh.Token(woosh.STRING, "', '", 981, 29, 981, 33),
woosh.Token(woosh.OP, '.', 981, 33, 981, 34),
woosh.Token(woosh.NAME, 'join', 981, 34, 981, 38),
woosh.Token(woosh.OP, '(', 981, 38, 981, 39),
woosh.Token(woosh.NAME, 'str', 981, 39, 981, 42),
woosh.Token(woosh.OP, '(', 981, 42, 981, 43),
woosh.Token(woosh.NAME, 't', 981, 43, 981, 44),
woosh.Token(woosh.OP, ')', 981, 44, 981, 45),
woosh.Token(woosh.NAME, 'for', 981, 46, 981, 49),
woosh.Token(woosh.NAME, 't', 981, 50, 981, 51),
woosh.Token(woosh.NAME, 'in', 981, 52, 981, 54),
woosh.Token(woosh.NAME, 'tvars', 981, 55, 981, 60),
woosh.Token(woosh.NAME, 'if', 981, 61, 981, 63),
woosh.Token(woosh.NAME, 't', 981, 64, 981, 65),
woosh.Token(woosh.NAME, 'not', 981, 66, 981, 69),
woosh.Token(woosh.NAME, 'in', 981, 70, 981, 72),
woosh.Token(woosh.NAME, 'gvarset', 981, 73, 981, 80),
woosh.Token(woosh.OP, ')', 981, 80, 981, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 981, 81, 982, 0),
woosh.Token(woosh.NAME, 's_args', 982, 20, 982, 26),
woosh.Token(woosh.OP, '=', 982, 27, 982, 28),
woosh.Token(woosh.STRING, "', '", 982, 29, 982, 33),
woosh.Token(woosh.OP, '.', 982, 33, 982, 34),
woosh.Token(woosh.NAME, 'join', 982, 34, 982, 38),
woosh.Token(woosh.OP, '(', 982, 38, 982, 39),
woosh.Token(woosh.NAME, 'str', 982, 39, 982, 42),
woosh.Token(woosh.OP, '(', 982, 42, 982, 43),
woosh.Token(woosh.NAME, 'g', 982, 43, 982, 44),
woosh.Token(woosh.OP, ')', 982, 44, 982, 45),
woosh.Token(woosh.NAME, 'for', 982, 46, 982, 49),
woosh.Token(woosh.NAME, 'g', 982, 50, 982, 51),
woosh.Token(woosh.NAME, 'in', 982, 52, 982, 54),
woosh.Token(woosh.NAME, 'gvars', 982, 55, 982, 60),
woosh.Token(woosh.OP, ')', 982, 60, 982, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 982, 61, 983, 0),
woosh.Token(woosh.NAME, 'raise', 983, 20, 983, 25),
woosh.Token(woosh.NAME, 'TypeError', 983, 26, 983, 35),
woosh.Token(woosh.OP, '(', 983, 35, 983, 36),
woosh.Token(woosh.STRING, 'f"Some type variables ({s_vars}) are"', 983, 36, 983, 73),
woosh.Token(woosh.STRING, 'f" not listed in Generic[{s_args}]"', 984, 36, 984, 71),
woosh.Token(woosh.OP, ')', 984, 71, 984, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 984, 72, 985, 0),
woosh.Token(woosh.DEDENT, '                ', 985, 0, 985, 16),
woosh.Token(woosh.NAME, 'tvars', 985, 16, 985, 21),
woosh.Token(woosh.OP, '=', 985, 22, 985, 23),
woosh.Token(woosh.NAME, 'gvars', 985, 24, 985, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 985, 29, 986, 0),
woosh.Token(woosh.DEDENT, '        ', 986, 0, 986, 8),
woosh.Token(woosh.DEDENT, '', 986, 8, 986, 8),
woosh.Token(woosh.NAME, 'cls', 986, 8, 986, 11),
woosh.Token(woosh.OP, '.', 986, 11, 986, 12),
woosh.Token(woosh.NAME, '__parameters__', 986, 12, 986, 26),
woosh.Token(woosh.OP, '=', 986, 27, 986, 28),
woosh.Token(woosh.NAME, 'tuple', 986, 29, 986, 34),
woosh.Token(woosh.OP, '(', 986, 34, 986, 35),
woosh.Token(woosh.NAME, 'tvars', 986, 35, 986, 40),
woosh.Token(woosh.OP, ')', 986, 40, 986, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 986, 41, 987, 0),
woosh.Token(woosh.DEDENT, '', 989, 0, 989, 0),
woosh.Token(woosh.DEDENT, '', 989, 0, 989, 0),
woosh.Token(woosh.NAME, 'class', 989, 0, 989, 5),
woosh.Token(woosh.NAME, '_TypingEmpty', 989, 6, 989, 18),
woosh.Token(woosh.OP, ':', 989, 18, 989, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 989, 19, 990, 0),
woosh.Token(woosh.INDENT, '    ', 990, 0, 990, 4),
woosh.Token(woosh.STRING, '"""Internal placeholder for () or []. Used by TupleMeta and CallableMeta\r\n    to allow empty list/tuple in specific places, without allowing them\r\n    to sneak in where prohibited.\r\n    """', 990, 4, 993, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 993, 7, 994, 0),
woosh.Token(woosh.DEDENT, '', 996, 0, 996, 0),
woosh.Token(woosh.NAME, 'class', 996, 0, 996, 5),
woosh.Token(woosh.NAME, '_TypingEllipsis', 996, 6, 996, 21),
woosh.Token(woosh.OP, ':', 996, 21, 996, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 996, 22, 997, 0),
woosh.Token(woosh.INDENT, '    ', 997, 0, 997, 4),
woosh.Token(woosh.STRING, '"""Internal placeholder for ... (ellipsis)."""', 997, 4, 997, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 997, 50, 998, 0),
woosh.Token(woosh.DEDENT, '', 1000, 0, 1000, 0),
woosh.Token(woosh.NAME, '_TYPING_INTERNALS', 1000, 0, 1000, 17),
woosh.Token(woosh.OP, '=', 1000, 18, 1000, 19),
woosh.Token(woosh.OP, '[', 1000, 20, 1000, 21),
woosh.Token(woosh.STRING, "'__parameters__'", 1000, 21, 1000, 37),
woosh.Token(woosh.OP, ',', 1000, 37, 1000, 38),
woosh.Token(woosh.STRING, "'__orig_bases__'", 1000, 39, 1000, 55),
woosh.Token(woosh.OP, ',', 1000, 55, 1000, 56),
woosh.Token(woosh.STRING, "'__orig_class__'", 1000, 58, 1000, 74),
woosh.Token(woosh.OP, ',', 1000, 74, 1000, 75),
woosh.Token(woosh.STRING, "'_is_protocol'", 1001, 21, 1001, 35),
woosh.Token(woosh.OP, ',', 1001, 35, 1001, 36),
woosh.Token(woosh.STRING, "'_is_runtime_protocol'", 1001, 37, 1001, 59),
woosh.Token(woosh.OP, ']', 1001, 59, 1001, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1001, 60, 1002, 0),
woosh.Token(woosh.NAME, '_SPECIAL_NAMES', 1003, 0, 1003, 14),
woosh.Token(woosh.OP, '=', 1003, 15, 1003, 16),
woosh.Token(woosh.OP, '[', 1003, 17, 1003, 18),
woosh.Token(woosh.STRING, "'__abstractmethods__'", 1003, 18, 1003, 39),
woosh.Token(woosh.OP, ',', 1003, 39, 1003, 40),
woosh.Token(woosh.STRING, "'__annotations__'", 1003, 41, 1003, 58),
woosh.Token(woosh.OP, ',', 1003, 58, 1003, 59),
woosh.Token(woosh.STRING, "'__dict__'", 1003, 60, 1003, 70),
woosh.Token(woosh.OP, ',', 1003, 70, 1003, 71),
woosh.Token(woosh.STRING, "'__doc__'", 1003, 72, 1003, 81),
woosh.Token(woosh.OP, ',', 1003, 81, 1003, 82),
woosh.Token(woosh.STRING, "'__init__'", 1004, 18, 1004, 28),
woosh.Token(woosh.OP, ',', 1004, 28, 1004, 29),
woosh.Token(woosh.STRING, "'__module__'", 1004, 30, 1004, 42),
woosh.Token(woosh.OP, ',', 1004, 42, 1004, 43),
woosh.Token(woosh.STRING, "'__new__'", 1004, 44, 1004, 53),
woosh.Token(woosh.OP, ',', 1004, 53, 1004, 54),
woosh.Token(woosh.STRING, "'__slots__'", 1004, 55, 1004, 66),
woosh.Token(woosh.OP, ',', 1004, 66, 1004, 67),
woosh.Token(woosh.STRING, "'__subclasshook__'", 1005, 18, 1005, 36),
woosh.Token(woosh.OP, ',', 1005, 36, 1005, 37),
woosh.Token(woosh.STRING, "'__weakref__'", 1005, 38, 1005, 51),
woosh.Token(woosh.OP, ',', 1005, 51, 1005, 52),
woosh.Token(woosh.STRING, "'__class_getitem__'", 1005, 53, 1005, 72),
woosh.Token(woosh.OP, ']', 1005, 72, 1005, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1005, 73, 1006, 0),
woosh.Token(woosh.COMMENT, '# These special attributes will be not collected as protocol members.', 1007, 0, 1007, 69),
woosh.Token(woosh.NAME, 'EXCLUDED_ATTRIBUTES', 1008, 0, 1008, 19),
woosh.Token(woosh.OP, '=', 1008, 20, 1008, 21),
woosh.Token(woosh.NAME, '_TYPING_INTERNALS', 1008, 22, 1008, 39),
woosh.Token(woosh.OP, '+', 1008, 40, 1008, 41),
woosh.Token(woosh.NAME, '_SPECIAL_NAMES', 1008, 42, 1008, 56),
woosh.Token(woosh.OP, '+', 1008, 57, 1008, 58),
woosh.Token(woosh.OP, '[', 1008, 59, 1008, 60),
woosh.Token(woosh.STRING, "'_MutableMapping__marker'", 1008, 60, 1008, 85),
woosh.Token(woosh.OP, ']', 1008, 85, 1008, 86),
woosh.Token(woosh.NEWLINE, '\r\n', 1008, 86, 1009, 0),
woosh.Token(woosh.NAME, 'def', 1011, 0, 1011, 3),
woosh.Token(woosh.NAME, '_get_protocol_attrs', 1011, 4, 1011, 23),
woosh.Token(woosh.OP, '(', 1011, 23, 1011, 24),
woosh.Token(woosh.NAME, 'cls', 1011, 24, 1011, 27),
woosh.Token(woosh.OP, ')', 1011, 27, 1011, 28),
woosh.Token(woosh.OP, ':', 1011, 28, 1011, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1011, 29, 1012, 0),
woosh.Token(woosh.INDENT, '    ', 1012, 0, 1012, 4),
woosh.Token(woosh.STRING, '"""Collect protocol members from a protocol class objects.\r\n\r\n    This includes names actually defined in the class dictionary, as well\r\n    as names that appear in annotations. Special names (above) are skipped.\r\n    """', 1012, 4, 1016, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 7, 1017, 0),
woosh.Token(woosh.NAME, 'attrs', 1017, 4, 1017, 9),
woosh.Token(woosh.OP, '=', 1017, 10, 1017, 11),
woosh.Token(woosh.NAME, 'set', 1017, 12, 1017, 15),
woosh.Token(woosh.OP, '(', 1017, 15, 1017, 16),
woosh.Token(woosh.OP, ')', 1017, 16, 1017, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1017, 17, 1018, 0),
woosh.Token(woosh.NAME, 'for', 1018, 4, 1018, 7),
woosh.Token(woosh.NAME, 'base', 1018, 8, 1018, 12),
woosh.Token(woosh.NAME, 'in', 1018, 13, 1018, 15),
woosh.Token(woosh.NAME, 'cls', 1018, 16, 1018, 19),
woosh.Token(woosh.OP, '.', 1018, 19, 1018, 20),
woosh.Token(woosh.NAME, '__mro__', 1018, 20, 1018, 27),
woosh.Token(woosh.OP, '[', 1018, 27, 1018, 28),
woosh.Token(woosh.OP, ':', 1018, 28, 1018, 29),
woosh.Token(woosh.OP, '-', 1018, 29, 1018, 30),
woosh.Token(woosh.NUMBER, '1', 1018, 30, 1018, 31),
woosh.Token(woosh.OP, ']', 1018, 31, 1018, 32),
woosh.Token(woosh.OP, ':', 1018, 32, 1018, 33),
woosh.Token(woosh.COMMENT, '# without object', 1018, 35, 1018, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1018, 51, 1019, 0),
woosh.Token(woosh.INDENT, '        ', 1019, 0, 1019, 8),
woosh.Token(woosh.NAME, 'if', 1019, 8, 1019, 10),
woosh.Token(woosh.NAME, 'base', 1019, 11, 1019, 15),
woosh.Token(woosh.OP, '.', 1019, 15, 1019, 16),
woosh.Token(woosh.NAME, '__name__', 1019, 16, 1019, 24),
woosh.Token(woosh.NAME, 'in', 1019, 25, 1019, 27),
woosh.Token(woosh.OP, '(', 1019, 28, 1019, 29),
woosh.Token(woosh.STRING, "'Protocol'", 1019, 29, 1019, 39),
woosh.Token(woosh.OP, ',', 1019, 39, 1019, 40),
woosh.Token(woosh.STRING, "'Generic'", 1019, 41, 1019, 50),
woosh.Token(woosh.OP, ')', 1019, 50, 1019, 51),
woosh.Token(woosh.OP, ':', 1019, 51, 1019, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1019, 52, 1020, 0),
woosh.Token(woosh.INDENT, '            ', 1020, 0, 1020, 12),
woosh.Token(woosh.NAME, 'continue', 1020, 12, 1020, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1020, 20, 1021, 0),
woosh.Token(woosh.DEDENT, '        ', 1021, 0, 1021, 8),
woosh.Token(woosh.NAME, 'annotations', 1021, 8, 1021, 19),
woosh.Token(woosh.OP, '=', 1021, 20, 1021, 21),
woosh.Token(woosh.NAME, 'getattr', 1021, 22, 1021, 29),
woosh.Token(woosh.OP, '(', 1021, 29, 1021, 30),
woosh.Token(woosh.NAME, 'base', 1021, 30, 1021, 34),
woosh.Token(woosh.OP, ',', 1021, 34, 1021, 35),
woosh.Token(woosh.STRING, "'__annotations__'", 1021, 36, 1021, 53),
woosh.Token(woosh.OP, ',', 1021, 53, 1021, 54),
woosh.Token(woosh.OP, '{', 1021, 55, 1021, 56),
woosh.Token(woosh.OP, '}', 1021, 56, 1021, 57),
woosh.Token(woosh.OP, ')', 1021, 57, 1021, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1021, 58, 1022, 0),
woosh.Token(woosh.NAME, 'for', 1022, 8, 1022, 11),
woosh.Token(woosh.NAME, 'attr', 1022, 12, 1022, 16),
woosh.Token(woosh.NAME, 'in', 1022, 17, 1022, 19),
woosh.Token(woosh.NAME, 'list', 1022, 20, 1022, 24),
woosh.Token(woosh.OP, '(', 1022, 24, 1022, 25),
woosh.Token(woosh.NAME, 'base', 1022, 25, 1022, 29),
woosh.Token(woosh.OP, '.', 1022, 29, 1022, 30),
woosh.Token(woosh.NAME, '__dict__', 1022, 30, 1022, 38),
woosh.Token(woosh.OP, '.', 1022, 38, 1022, 39),
woosh.Token(woosh.NAME, 'keys', 1022, 39, 1022, 43),
woosh.Token(woosh.OP, '(', 1022, 43, 1022, 44),
woosh.Token(woosh.OP, ')', 1022, 44, 1022, 45),
woosh.Token(woosh.OP, ')', 1022, 45, 1022, 46),
woosh.Token(woosh.OP, '+', 1022, 47, 1022, 48),
woosh.Token(woosh.NAME, 'list', 1022, 49, 1022, 53),
woosh.Token(woosh.OP, '(', 1022, 53, 1022, 54),
woosh.Token(woosh.NAME, 'annotations', 1022, 54, 1022, 65),
woosh.Token(woosh.OP, '.', 1022, 65, 1022, 66),
woosh.Token(woosh.NAME, 'keys', 1022, 66, 1022, 70),
woosh.Token(woosh.OP, '(', 1022, 70, 1022, 71),
woosh.Token(woosh.OP, ')', 1022, 71, 1022, 72),
woosh.Token(woosh.OP, ')', 1022, 72, 1022, 73),
woosh.Token(woosh.OP, ':', 1022, 73, 1022, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1022, 74, 1023, 0),
woosh.Token(woosh.INDENT, '            ', 1023, 0, 1023, 12),
woosh.Token(woosh.NAME, 'if', 1023, 12, 1023, 14),
woosh.Token(woosh.NAME, 'not', 1023, 15, 1023, 18),
woosh.Token(woosh.NAME, 'attr', 1023, 19, 1023, 23),
woosh.Token(woosh.OP, '.', 1023, 23, 1023, 24),
woosh.Token(woosh.NAME, 'startswith', 1023, 24, 1023, 34),
woosh.Token(woosh.OP, '(', 1023, 34, 1023, 35),
woosh.Token(woosh.STRING, "'_abc_'", 1023, 35, 1023, 42),
woosh.Token(woosh.OP, ')', 1023, 42, 1023, 43),
woosh.Token(woosh.NAME, 'and', 1023, 44, 1023, 47),
woosh.Token(woosh.NAME, 'attr', 1023, 48, 1023, 52),
woosh.Token(woosh.NAME, 'not', 1023, 53, 1023, 56),
woosh.Token(woosh.NAME, 'in', 1023, 57, 1023, 59),
woosh.Token(woosh.NAME, 'EXCLUDED_ATTRIBUTES', 1023, 60, 1023, 79),
woosh.Token(woosh.OP, ':', 1023, 79, 1023, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 1023, 80, 1024, 0),
woosh.Token(woosh.INDENT, '                ', 1024, 0, 1024, 16),
woosh.Token(woosh.NAME, 'attrs', 1024, 16, 1024, 21),
woosh.Token(woosh.OP, '.', 1024, 21, 1024, 22),
woosh.Token(woosh.NAME, 'add', 1024, 22, 1024, 25),
woosh.Token(woosh.OP, '(', 1024, 25, 1024, 26),
woosh.Token(woosh.NAME, 'attr', 1024, 26, 1024, 30),
woosh.Token(woosh.OP, ')', 1024, 30, 1024, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1024, 31, 1025, 0),
woosh.Token(woosh.DEDENT, '    ', 1025, 0, 1025, 4),
woosh.Token(woosh.DEDENT, '', 1025, 4, 1025, 4),
woosh.Token(woosh.DEDENT, '', 1025, 4, 1025, 4),
woosh.Token(woosh.NAME, 'return', 1025, 4, 1025, 10),
woosh.Token(woosh.NAME, 'attrs', 1025, 11, 1025, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1025, 16, 1026, 0),
woosh.Token(woosh.DEDENT, '', 1028, 0, 1028, 0),
woosh.Token(woosh.NAME, 'def', 1028, 0, 1028, 3),
woosh.Token(woosh.NAME, '_is_callable_members_only', 1028, 4, 1028, 29),
woosh.Token(woosh.OP, '(', 1028, 29, 1028, 30),
woosh.Token(woosh.NAME, 'cls', 1028, 30, 1028, 33),
woosh.Token(woosh.OP, ')', 1028, 33, 1028, 34),
woosh.Token(woosh.OP, ':', 1028, 34, 1028, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1028, 35, 1029, 0),
woosh.Token(woosh.COMMENT, '# PEP 544 prohibits using issubclass() with protocols that have non-method members.', 1029, 4, 1029, 87),
woosh.Token(woosh.INDENT, '    ', 1030, 0, 1030, 4),
woosh.Token(woosh.NAME, 'return', 1030, 4, 1030, 10),
woosh.Token(woosh.NAME, 'all', 1030, 11, 1030, 14),
woosh.Token(woosh.OP, '(', 1030, 14, 1030, 15),
woosh.Token(woosh.NAME, 'callable', 1030, 15, 1030, 23),
woosh.Token(woosh.OP, '(', 1030, 23, 1030, 24),
woosh.Token(woosh.NAME, 'getattr', 1030, 24, 1030, 31),
woosh.Token(woosh.OP, '(', 1030, 31, 1030, 32),
woosh.Token(woosh.NAME, 'cls', 1030, 32, 1030, 35),
woosh.Token(woosh.OP, ',', 1030, 35, 1030, 36),
woosh.Token(woosh.NAME, 'attr', 1030, 37, 1030, 41),
woosh.Token(woosh.OP, ',', 1030, 41, 1030, 42),
woosh.Token(woosh.NAME, 'None', 1030, 43, 1030, 47),
woosh.Token(woosh.OP, ')', 1030, 47, 1030, 48),
woosh.Token(woosh.OP, ')', 1030, 48, 1030, 49),
woosh.Token(woosh.NAME, 'for', 1030, 50, 1030, 53),
woosh.Token(woosh.NAME, 'attr', 1030, 54, 1030, 58),
woosh.Token(woosh.NAME, 'in', 1030, 59, 1030, 61),
woosh.Token(woosh.NAME, '_get_protocol_attrs', 1030, 62, 1030, 81),
woosh.Token(woosh.OP, '(', 1030, 81, 1030, 82),
woosh.Token(woosh.NAME, 'cls', 1030, 82, 1030, 85),
woosh.Token(woosh.OP, ')', 1030, 85, 1030, 86),
woosh.Token(woosh.OP, ')', 1030, 86, 1030, 87),
woosh.Token(woosh.NEWLINE, '\r\n', 1030, 87, 1031, 0),
woosh.Token(woosh.DEDENT, '', 1033, 0, 1033, 0),
woosh.Token(woosh.NAME, 'def', 1033, 0, 1033, 3),
woosh.Token(woosh.NAME, '_no_init', 1033, 4, 1033, 12),
woosh.Token(woosh.OP, '(', 1033, 12, 1033, 13),
woosh.Token(woosh.NAME, 'self', 1033, 13, 1033, 17),
woosh.Token(woosh.OP, ',', 1033, 17, 1033, 18),
woosh.Token(woosh.OP, '*', 1033, 19, 1033, 20),
woosh.Token(woosh.NAME, 'args', 1033, 20, 1033, 24),
woosh.Token(woosh.OP, ',', 1033, 24, 1033, 25),
woosh.Token(woosh.OP, '**', 1033, 26, 1033, 28),
woosh.Token(woosh.NAME, 'kwargs', 1033, 28, 1033, 34),
woosh.Token(woosh.OP, ')', 1033, 34, 1033, 35),
woosh.Token(woosh.OP, ':', 1033, 35, 1033, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1033, 36, 1034, 0),
woosh.Token(woosh.INDENT, '    ', 1034, 0, 1034, 4),
woosh.Token(woosh.NAME, 'if', 1034, 4, 1034, 6),
woosh.Token(woosh.NAME, 'type', 1034, 7, 1034, 11),
woosh.Token(woosh.OP, '(', 1034, 11, 1034, 12),
woosh.Token(woosh.NAME, 'self', 1034, 12, 1034, 16),
woosh.Token(woosh.OP, ')', 1034, 16, 1034, 17),
woosh.Token(woosh.OP, '.', 1034, 17, 1034, 18),
woosh.Token(woosh.NAME, '_is_protocol', 1034, 18, 1034, 30),
woosh.Token(woosh.OP, ':', 1034, 30, 1034, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1034, 31, 1035, 0),
woosh.Token(woosh.INDENT, '        ', 1035, 0, 1035, 8),
woosh.Token(woosh.NAME, 'raise', 1035, 8, 1035, 13),
woosh.Token(woosh.NAME, 'TypeError', 1035, 14, 1035, 23),
woosh.Token(woosh.OP, '(', 1035, 23, 1035, 24),
woosh.Token(woosh.STRING, "'Protocols cannot be instantiated'", 1035, 24, 1035, 58),
woosh.Token(woosh.OP, ')', 1035, 58, 1035, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1035, 59, 1036, 0),
woosh.Token(woosh.DEDENT, '', 1038, 0, 1038, 0),
woosh.Token(woosh.DEDENT, '', 1038, 0, 1038, 0),
woosh.Token(woosh.NAME, 'def', 1038, 0, 1038, 3),
woosh.Token(woosh.NAME, '_allow_reckless_class_cheks', 1038, 4, 1038, 31),
woosh.Token(woosh.OP, '(', 1038, 31, 1038, 32),
woosh.Token(woosh.OP, ')', 1038, 32, 1038, 33),
woosh.Token(woosh.OP, ':', 1038, 33, 1038, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1038, 34, 1039, 0),
woosh.Token(woosh.INDENT, '    ', 1039, 0, 1039, 4),
woosh.Token(woosh.STRING, '"""Allow instance and class checks for special stdlib modules.\r\n\r\n    The abc and functools modules indiscriminately call isinstance() and\r\n    issubclass() on the whole MRO of a user class, which may contain protocols.\r\n    """', 1039, 4, 1043, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1043, 7, 1044, 0),
woosh.Token(woosh.NAME, 'try', 1044, 4, 1044, 7),
woosh.Token(woosh.OP, ':', 1044, 7, 1044, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1044, 8, 1045, 0),
woosh.Token(woosh.INDENT, '        ', 1045, 0, 1045, 8),
woosh.Token(woosh.NAME, 'return', 1045, 8, 1045, 14),
woosh.Token(woosh.NAME, 'sys', 1045, 15, 1045, 18),
woosh.Token(woosh.OP, '.', 1045, 18, 1045, 19),
woosh.Token(woosh.NAME, '_getframe', 1045, 19, 1045, 28),
woosh.Token(woosh.OP, '(', 1045, 28, 1045, 29),
woosh.Token(woosh.NUMBER, '3', 1045, 29, 1045, 30),
woosh.Token(woosh.OP, ')', 1045, 30, 1045, 31),
woosh.Token(woosh.OP, '.', 1045, 31, 1045, 32),
woosh.Token(woosh.NAME, 'f_globals', 1045, 32, 1045, 41),
woosh.Token(woosh.OP, '[', 1045, 41, 1045, 42),
woosh.Token(woosh.STRING, "'__name__'", 1045, 42, 1045, 52),
woosh.Token(woosh.OP, ']', 1045, 52, 1045, 53),
woosh.Token(woosh.NAME, 'in', 1045, 54, 1045, 56),
woosh.Token(woosh.OP, '[', 1045, 57, 1045, 58),
woosh.Token(woosh.STRING, "'abc'", 1045, 58, 1045, 63),
woosh.Token(woosh.OP, ',', 1045, 63, 1045, 64),
woosh.Token(woosh.STRING, "'functools'", 1045, 65, 1045, 76),
woosh.Token(woosh.OP, ']', 1045, 76, 1045, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 1045, 77, 1046, 0),
woosh.Token(woosh.DEDENT, '    ', 1046, 0, 1046, 4),
woosh.Token(woosh.NAME, 'except', 1046, 4, 1046, 10),
woosh.Token(woosh.OP, '(', 1046, 11, 1046, 12),
woosh.Token(woosh.NAME, 'AttributeError', 1046, 12, 1046, 26),
woosh.Token(woosh.OP, ',', 1046, 26, 1046, 27),
woosh.Token(woosh.NAME, 'ValueError', 1046, 28, 1046, 38),
woosh.Token(woosh.OP, ')', 1046, 38, 1046, 39),
woosh.Token(woosh.OP, ':', 1046, 39, 1046, 40),
woosh.Token(woosh.COMMENT, '# For platforms without _getframe().', 1046, 42, 1046, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1046, 78, 1047, 0),
woosh.Token(woosh.INDENT, '        ', 1047, 0, 1047, 8),
woosh.Token(woosh.NAME, 'return', 1047, 8, 1047, 14),
woosh.Token(woosh.NAME, 'True', 1047, 15, 1047, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 19, 1048, 0),
woosh.Token(woosh.DEDENT, '', 1050, 0, 1050, 0),
woosh.Token(woosh.DEDENT, '', 1050, 0, 1050, 0),
woosh.Token(woosh.NAME, '_PROTO_ALLOWLIST', 1050, 0, 1050, 16),
woosh.Token(woosh.OP, '=', 1050, 17, 1050, 18),
woosh.Token(woosh.OP, '{', 1050, 19, 1050, 20),
woosh.Token(woosh.STRING, "'collections.abc'", 1051, 4, 1051, 21),
woosh.Token(woosh.OP, ':', 1051, 21, 1051, 22),
woosh.Token(woosh.OP, '[', 1051, 23, 1051, 24),
woosh.Token(woosh.STRING, "'Callable'", 1052, 8, 1052, 18),
woosh.Token(woosh.OP, ',', 1052, 18, 1052, 19),
woosh.Token(woosh.STRING, "'Awaitable'", 1052, 20, 1052, 31),
woosh.Token(woosh.OP, ',', 1052, 31, 1052, 32),
woosh.Token(woosh.STRING, "'Iterable'", 1052, 33, 1052, 43),
woosh.Token(woosh.OP, ',', 1052, 43, 1052, 44),
woosh.Token(woosh.STRING, "'Iterator'", 1052, 45, 1052, 55),
woosh.Token(woosh.OP, ',', 1052, 55, 1052, 56),
woosh.Token(woosh.STRING, "'AsyncIterable'", 1052, 57, 1052, 72),
woosh.Token(woosh.OP, ',', 1052, 72, 1052, 73),
woosh.Token(woosh.STRING, "'Hashable'", 1053, 8, 1053, 18),
woosh.Token(woosh.OP, ',', 1053, 18, 1053, 19),
woosh.Token(woosh.STRING, "'Sized'", 1053, 20, 1053, 27),
woosh.Token(woosh.OP, ',', 1053, 27, 1053, 28),
woosh.Token(woosh.STRING, "'Container'", 1053, 29, 1053, 40),
woosh.Token(woosh.OP, ',', 1053, 40, 1053, 41),
woosh.Token(woosh.STRING, "'Collection'", 1053, 42, 1053, 54),
woosh.Token(woosh.OP, ',', 1053, 54, 1053, 55),
woosh.Token(woosh.STRING, "'Reversible'", 1053, 56, 1053, 68),
woosh.Token(woosh.OP, ',', 1053, 68, 1053, 69),
woosh.Token(woosh.OP, ']', 1054, 4, 1054, 5),
woosh.Token(woosh.OP, ',', 1054, 5, 1054, 6),
woosh.Token(woosh.STRING, "'contextlib'", 1055, 4, 1055, 16),
woosh.Token(woosh.OP, ':', 1055, 16, 1055, 17),
woosh.Token(woosh.OP, '[', 1055, 18, 1055, 19),
woosh.Token(woosh.STRING, "'AbstractContextManager'", 1055, 19, 1055, 43),
woosh.Token(woosh.OP, ',', 1055, 43, 1055, 44),
woosh.Token(woosh.STRING, "'AbstractAsyncContextManager'", 1055, 45, 1055, 74),
woosh.Token(woosh.OP, ']', 1055, 74, 1055, 75),
woosh.Token(woosh.OP, ',', 1055, 75, 1055, 76),
woosh.Token(woosh.OP, '}', 1056, 0, 1056, 1),
woosh.Token(woosh.NEWLINE, '\r\n', 1056, 1, 1057, 0),
woosh.Token(woosh.NAME, 'class', 1059, 0, 1059, 5),
woosh.Token(woosh.NAME, '_ProtocolMeta', 1059, 6, 1059, 19),
woosh.Token(woosh.OP, '(', 1059, 19, 1059, 20),
woosh.Token(woosh.NAME, 'ABCMeta', 1059, 20, 1059, 27),
woosh.Token(woosh.OP, ')', 1059, 27, 1059, 28),
woosh.Token(woosh.OP, ':', 1059, 28, 1059, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1059, 29, 1060, 0),
woosh.Token(woosh.COMMENT, '# This metaclass is really unfortunate and exists only because of', 1060, 4, 1060, 69),
woosh.Token(woosh.COMMENT, '# the lack of __instancehook__.', 1061, 4, 1061, 35),
woosh.Token(woosh.INDENT, '    ', 1062, 0, 1062, 4),
woosh.Token(woosh.NAME, 'def', 1062, 4, 1062, 7),
woosh.Token(woosh.NAME, '__instancecheck__', 1062, 8, 1062, 25),
woosh.Token(woosh.OP, '(', 1062, 25, 1062, 26),
woosh.Token(woosh.NAME, 'cls', 1062, 26, 1062, 29),
woosh.Token(woosh.OP, ',', 1062, 29, 1062, 30),
woosh.Token(woosh.NAME, 'instance', 1062, 31, 1062, 39),
woosh.Token(woosh.OP, ')', 1062, 39, 1062, 40),
woosh.Token(woosh.OP, ':', 1062, 40, 1062, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1062, 41, 1063, 0),
woosh.Token(woosh.COMMENT, '# We need this method for situations where attributes are', 1063, 8, 1063, 65),
woosh.Token(woosh.COMMENT, '# assigned in __init__.', 1064, 8, 1064, 31),
woosh.Token(woosh.INDENT, '        ', 1065, 0, 1065, 8),
woosh.Token(woosh.NAME, 'if', 1065, 8, 1065, 10),
woosh.Token(woosh.OP, '(', 1065, 11, 1065, 12),
woosh.Token(woosh.OP, '(', 1065, 12, 1065, 13),
woosh.Token(woosh.NAME, 'not', 1065, 13, 1065, 16),
woosh.Token(woosh.NAME, 'getattr', 1065, 17, 1065, 24),
woosh.Token(woosh.OP, '(', 1065, 24, 1065, 25),
woosh.Token(woosh.NAME, 'cls', 1065, 25, 1065, 28),
woosh.Token(woosh.OP, ',', 1065, 28, 1065, 29),
woosh.Token(woosh.STRING, "'_is_protocol'", 1065, 30, 1065, 44),
woosh.Token(woosh.OP, ',', 1065, 44, 1065, 45),
woosh.Token(woosh.NAME, 'False', 1065, 46, 1065, 51),
woosh.Token(woosh.OP, ')', 1065, 51, 1065, 52),
woosh.Token(woosh.NAME, 'or', 1065, 53, 1065, 55),
woosh.Token(woosh.NAME, '_is_callable_members_only', 1066, 16, 1066, 41),
woosh.Token(woosh.OP, '(', 1066, 41, 1066, 42),
woosh.Token(woosh.NAME, 'cls', 1066, 42, 1066, 45),
woosh.Token(woosh.OP, ')', 1066, 45, 1066, 46),
woosh.Token(woosh.OP, ')', 1066, 46, 1066, 47),
woosh.Token(woosh.NAME, 'and', 1066, 48, 1066, 51),
woosh.Token(woosh.NAME, 'issubclass', 1067, 16, 1067, 26),
woosh.Token(woosh.OP, '(', 1067, 26, 1067, 27),
woosh.Token(woosh.NAME, 'instance', 1067, 27, 1067, 35),
woosh.Token(woosh.OP, '.', 1067, 35, 1067, 36),
woosh.Token(woosh.NAME, '__class__', 1067, 36, 1067, 45),
woosh.Token(woosh.OP, ',', 1067, 45, 1067, 46),
woosh.Token(woosh.NAME, 'cls', 1067, 47, 1067, 50),
woosh.Token(woosh.OP, ')', 1067, 50, 1067, 51),
woosh.Token(woosh.OP, ')', 1067, 51, 1067, 52),
woosh.Token(woosh.OP, ':', 1067, 52, 1067, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1067, 53, 1068, 0),
woosh.Token(woosh.INDENT, '            ', 1068, 0, 1068, 12),
woosh.Token(woosh.NAME, 'return', 1068, 12, 1068, 18),
woosh.Token(woosh.NAME, 'True', 1068, 19, 1068, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1068, 23, 1069, 0),
woosh.Token(woosh.DEDENT, '        ', 1069, 0, 1069, 8),
woosh.Token(woosh.NAME, 'if', 1069, 8, 1069, 10),
woosh.Token(woosh.NAME, 'cls', 1069, 11, 1069, 14),
woosh.Token(woosh.OP, '.', 1069, 14, 1069, 15),
woosh.Token(woosh.NAME, '_is_protocol', 1069, 15, 1069, 27),
woosh.Token(woosh.OP, ':', 1069, 27, 1069, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1069, 28, 1070, 0),
woosh.Token(woosh.INDENT, '            ', 1070, 0, 1070, 12),
woosh.Token(woosh.NAME, 'if', 1070, 12, 1070, 14),
woosh.Token(woosh.NAME, 'all', 1070, 15, 1070, 18),
woosh.Token(woosh.OP, '(', 1070, 18, 1070, 19),
woosh.Token(woosh.NAME, 'hasattr', 1070, 19, 1070, 26),
woosh.Token(woosh.OP, '(', 1070, 26, 1070, 27),
woosh.Token(woosh.NAME, 'instance', 1070, 27, 1070, 35),
woosh.Token(woosh.OP, ',', 1070, 35, 1070, 36),
woosh.Token(woosh.NAME, 'attr', 1070, 37, 1070, 41),
woosh.Token(woosh.OP, ')', 1070, 41, 1070, 42),
woosh.Token(woosh.NAME, 'and', 1070, 43, 1070, 46),
woosh.Token(woosh.COMMENT, '# All *methods* can be blocked by setting them to None.', 1071, 20, 1071, 75),
woosh.Token(woosh.OP, '(', 1072, 20, 1072, 21),
woosh.Token(woosh.NAME, 'not', 1072, 21, 1072, 24),
woosh.Token(woosh.NAME, 'callable', 1072, 25, 1072, 33),
woosh.Token(woosh.OP, '(', 1072, 33, 1072, 34),
woosh.Token(woosh.NAME, 'getattr', 1072, 34, 1072, 41),
woosh.Token(woosh.OP, '(', 1072, 41, 1072, 42),
woosh.Token(woosh.NAME, 'cls', 1072, 42, 1072, 45),
woosh.Token(woosh.OP, ',', 1072, 45, 1072, 46),
woosh.Token(woosh.NAME, 'attr', 1072, 47, 1072, 51),
woosh.Token(woosh.OP, ',', 1072, 51, 1072, 52),
woosh.Token(woosh.NAME, 'None', 1072, 53, 1072, 57),
woosh.Token(woosh.OP, ')', 1072, 57, 1072, 58),
woosh.Token(woosh.OP, ')', 1072, 58, 1072, 59),
woosh.Token(woosh.NAME, 'or', 1072, 60, 1072, 62),
woosh.Token(woosh.NAME, 'getattr', 1073, 21, 1073, 28),
woosh.Token(woosh.OP, '(', 1073, 28, 1073, 29),
woosh.Token(woosh.NAME, 'instance', 1073, 29, 1073, 37),
woosh.Token(woosh.OP, ',', 1073, 37, 1073, 38),
woosh.Token(woosh.NAME, 'attr', 1073, 39, 1073, 43),
woosh.Token(woosh.OP, ')', 1073, 43, 1073, 44),
woosh.Token(woosh.NAME, 'is', 1073, 45, 1073, 47),
woosh.Token(woosh.NAME, 'not', 1073, 48, 1073, 51),
woosh.Token(woosh.NAME, 'None', 1073, 52, 1073, 56),
woosh.Token(woosh.OP, ')', 1073, 56, 1073, 57),
woosh.Token(woosh.NAME, 'for', 1074, 20, 1074, 23),
woosh.Token(woosh.NAME, 'attr', 1074, 24, 1074, 28),
woosh.Token(woosh.NAME, 'in', 1074, 29, 1074, 31),
woosh.Token(woosh.NAME, '_get_protocol_attrs', 1074, 32, 1074, 51),
woosh.Token(woosh.OP, '(', 1074, 51, 1074, 52),
woosh.Token(woosh.NAME, 'cls', 1074, 52, 1074, 55),
woosh.Token(woosh.OP, ')', 1074, 55, 1074, 56),
woosh.Token(woosh.OP, ')', 1074, 56, 1074, 57),
woosh.Token(woosh.OP, ':', 1074, 57, 1074, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 58, 1075, 0),
woosh.Token(woosh.INDENT, '                ', 1075, 0, 1075, 16),
woosh.Token(woosh.NAME, 'return', 1075, 16, 1075, 22),
woosh.Token(woosh.NAME, 'True', 1075, 23, 1075, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1075, 27, 1076, 0),
woosh.Token(woosh.DEDENT, '        ', 1076, 0, 1076, 8),
woosh.Token(woosh.DEDENT, '', 1076, 8, 1076, 8),
woosh.Token(woosh.NAME, 'return', 1076, 8, 1076, 14),
woosh.Token(woosh.NAME, 'super', 1076, 15, 1076, 20),
woosh.Token(woosh.OP, '(', 1076, 20, 1076, 21),
woosh.Token(woosh.OP, ')', 1076, 21, 1076, 22),
woosh.Token(woosh.OP, '.', 1076, 22, 1076, 23),
woosh.Token(woosh.NAME, '__instancecheck__', 1076, 23, 1076, 40),
woosh.Token(woosh.OP, '(', 1076, 40, 1076, 41),
woosh.Token(woosh.NAME, 'instance', 1076, 41, 1076, 49),
woosh.Token(woosh.OP, ')', 1076, 49, 1076, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1076, 50, 1077, 0),
woosh.Token(woosh.DEDENT, '', 1079, 0, 1079, 0),
woosh.Token(woosh.DEDENT, '', 1079, 0, 1079, 0),
woosh.Token(woosh.NAME, 'class', 1079, 0, 1079, 5),
woosh.Token(woosh.NAME, 'Protocol', 1079, 6, 1079, 14),
woosh.Token(woosh.OP, '(', 1079, 14, 1079, 15),
woosh.Token(woosh.NAME, 'Generic', 1079, 15, 1079, 22),
woosh.Token(woosh.OP, ',', 1079, 22, 1079, 23),
woosh.Token(woosh.NAME, 'metaclass', 1079, 24, 1079, 33),
woosh.Token(woosh.OP, '=', 1079, 33, 1079, 34),
woosh.Token(woosh.NAME, '_ProtocolMeta', 1079, 34, 1079, 47),
woosh.Token(woosh.OP, ')', 1079, 47, 1079, 48),
woosh.Token(woosh.OP, ':', 1079, 48, 1079, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1079, 49, 1080, 0),
woosh.Token(woosh.INDENT, '    ', 1080, 0, 1080, 4),
woosh.Token(woosh.STRING, '"""Base class for protocol classes.\r\n\r\n    Protocol classes are defined as::\r\n\r\n        class Proto(Protocol):\r\n            def meth(self) -> int:\r\n                ...\r\n\r\n    Such classes are primarily used with static type checkers that recognize\r\n    structural subtyping (static duck-typing), for example::\r\n\r\n        class C:\r\n            def meth(self) -> int:\r\n                return 0\r\n\r\n        def func(x: Proto) -> int:\r\n            return x.meth()\r\n\r\n        func(C())  # Passes static type check\r\n\r\n    See PEP 544 for details. Protocol classes decorated with\r\n    @typing.runtime_checkable act as simple-minded runtime protocols that check\r\n    only the presence of given attributes, ignoring their type signatures.\r\n    Protocol classes can be generic, they are defined as::\r\n\r\n        class GenProto(Protocol[T]):\r\n            def meth(self) -> T:\r\n                ...\r\n    """', 1080, 4, 1108, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1108, 7, 1109, 0),
woosh.Token(woosh.NAME, '__slots__', 1109, 4, 1109, 13),
woosh.Token(woosh.OP, '=', 1109, 14, 1109, 15),
woosh.Token(woosh.OP, '(', 1109, 16, 1109, 17),
woosh.Token(woosh.OP, ')', 1109, 17, 1109, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1109, 18, 1110, 0),
woosh.Token(woosh.NAME, '_is_protocol', 1110, 4, 1110, 16),
woosh.Token(woosh.OP, '=', 1110, 17, 1110, 18),
woosh.Token(woosh.NAME, 'True', 1110, 19, 1110, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1110, 23, 1111, 0),
woosh.Token(woosh.NAME, '_is_runtime_protocol', 1111, 4, 1111, 24),
woosh.Token(woosh.OP, '=', 1111, 25, 1111, 26),
woosh.Token(woosh.NAME, 'False', 1111, 27, 1111, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1111, 32, 1112, 0),
woosh.Token(woosh.NAME, 'def', 1113, 4, 1113, 7),
woosh.Token(woosh.NAME, '__init_subclass__', 1113, 8, 1113, 25),
woosh.Token(woosh.OP, '(', 1113, 25, 1113, 26),
woosh.Token(woosh.NAME, 'cls', 1113, 26, 1113, 29),
woosh.Token(woosh.OP, ',', 1113, 29, 1113, 30),
woosh.Token(woosh.OP, '*', 1113, 31, 1113, 32),
woosh.Token(woosh.NAME, 'args', 1113, 32, 1113, 36),
woosh.Token(woosh.OP, ',', 1113, 36, 1113, 37),
woosh.Token(woosh.OP, '**', 1113, 38, 1113, 40),
woosh.Token(woosh.NAME, 'kwargs', 1113, 40, 1113, 46),
woosh.Token(woosh.OP, ')', 1113, 46, 1113, 47),
woosh.Token(woosh.OP, ':', 1113, 47, 1113, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1113, 48, 1114, 0),
woosh.Token(woosh.INDENT, '        ', 1114, 0, 1114, 8),
woosh.Token(woosh.NAME, 'super', 1114, 8, 1114, 13),
woosh.Token(woosh.OP, '(', 1114, 13, 1114, 14),
woosh.Token(woosh.OP, ')', 1114, 14, 1114, 15),
woosh.Token(woosh.OP, '.', 1114, 15, 1114, 16),
woosh.Token(woosh.NAME, '__init_subclass__', 1114, 16, 1114, 33),
woosh.Token(woosh.OP, '(', 1114, 33, 1114, 34),
woosh.Token(woosh.OP, '*', 1114, 34, 1114, 35),
woosh.Token(woosh.NAME, 'args', 1114, 35, 1114, 39),
woosh.Token(woosh.OP, ',', 1114, 39, 1114, 40),
woosh.Token(woosh.OP, '**', 1114, 41, 1114, 43),
woosh.Token(woosh.NAME, 'kwargs', 1114, 43, 1114, 49),
woosh.Token(woosh.OP, ')', 1114, 49, 1114, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1114, 50, 1115, 0),
woosh.Token(woosh.COMMENT, '# Determine if this is a protocol or a concrete subclass.', 1116, 8, 1116, 65),
woosh.Token(woosh.NAME, 'if', 1117, 8, 1117, 10),
woosh.Token(woosh.NAME, 'not', 1117, 11, 1117, 14),
woosh.Token(woosh.NAME, 'cls', 1117, 15, 1117, 18),
woosh.Token(woosh.OP, '.', 1117, 18, 1117, 19),
woosh.Token(woosh.NAME, '__dict__', 1117, 19, 1117, 27),
woosh.Token(woosh.OP, '.', 1117, 27, 1117, 28),
woosh.Token(woosh.NAME, 'get', 1117, 28, 1117, 31),
woosh.Token(woosh.OP, '(', 1117, 31, 1117, 32),
woosh.Token(woosh.STRING, "'_is_protocol'", 1117, 32, 1117, 46),
woosh.Token(woosh.OP, ',', 1117, 46, 1117, 47),
woosh.Token(woosh.NAME, 'False', 1117, 48, 1117, 53),
woosh.Token(woosh.OP, ')', 1117, 53, 1117, 54),
woosh.Token(woosh.OP, ':', 1117, 54, 1117, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1117, 55, 1118, 0),
woosh.Token(woosh.INDENT, '            ', 1118, 0, 1118, 12),
woosh.Token(woosh.NAME, 'cls', 1118, 12, 1118, 15),
woosh.Token(woosh.OP, '.', 1118, 15, 1118, 16),
woosh.Token(woosh.NAME, '_is_protocol', 1118, 16, 1118, 28),
woosh.Token(woosh.OP, '=', 1118, 29, 1118, 30),
woosh.Token(woosh.NAME, 'any', 1118, 31, 1118, 34),
woosh.Token(woosh.OP, '(', 1118, 34, 1118, 35),
woosh.Token(woosh.NAME, 'b', 1118, 35, 1118, 36),
woosh.Token(woosh.NAME, 'is', 1118, 37, 1118, 39),
woosh.Token(woosh.NAME, 'Protocol', 1118, 40, 1118, 48),
woosh.Token(woosh.NAME, 'for', 1118, 49, 1118, 52),
woosh.Token(woosh.NAME, 'b', 1118, 53, 1118, 54),
woosh.Token(woosh.NAME, 'in', 1118, 55, 1118, 57),
woosh.Token(woosh.NAME, 'cls', 1118, 58, 1118, 61),
woosh.Token(woosh.OP, '.', 1118, 61, 1118, 62),
woosh.Token(woosh.NAME, '__bases__', 1118, 62, 1118, 71),
woosh.Token(woosh.OP, ')', 1118, 71, 1118, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1118, 72, 1119, 0),
woosh.Token(woosh.COMMENT, '# Set (or override) the protocol subclass hook.', 1120, 8, 1120, 55),
woosh.Token(woosh.DEDENT, '        ', 1121, 0, 1121, 8),
woosh.Token(woosh.NAME, 'def', 1121, 8, 1121, 11),
woosh.Token(woosh.NAME, '_proto_hook', 1121, 12, 1121, 23),
woosh.Token(woosh.OP, '(', 1121, 23, 1121, 24),
woosh.Token(woosh.NAME, 'other', 1121, 24, 1121, 29),
woosh.Token(woosh.OP, ')', 1121, 29, 1121, 30),
woosh.Token(woosh.OP, ':', 1121, 30, 1121, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1121, 31, 1122, 0),
woosh.Token(woosh.INDENT, '            ', 1122, 0, 1122, 12),
woosh.Token(woosh.NAME, 'if', 1122, 12, 1122, 14),
woosh.Token(woosh.NAME, 'not', 1122, 15, 1122, 18),
woosh.Token(woosh.NAME, 'cls', 1122, 19, 1122, 22),
woosh.Token(woosh.OP, '.', 1122, 22, 1122, 23),
woosh.Token(woosh.NAME, '__dict__', 1122, 23, 1122, 31),
woosh.Token(woosh.OP, '.', 1122, 31, 1122, 32),
woosh.Token(woosh.NAME, 'get', 1122, 32, 1122, 35),
woosh.Token(woosh.OP, '(', 1122, 35, 1122, 36),
woosh.Token(woosh.STRING, "'_is_protocol'", 1122, 36, 1122, 50),
woosh.Token(woosh.OP, ',', 1122, 50, 1122, 51),
woosh.Token(woosh.NAME, 'False', 1122, 52, 1122, 57),
woosh.Token(woosh.OP, ')', 1122, 57, 1122, 58),
woosh.Token(woosh.OP, ':', 1122, 58, 1122, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1122, 59, 1123, 0),
woosh.Token(woosh.INDENT, '                ', 1123, 0, 1123, 16),
woosh.Token(woosh.NAME, 'return', 1123, 16, 1123, 22),
woosh.Token(woosh.NAME, 'NotImplemented', 1123, 23, 1123, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1123, 37, 1124, 0),
woosh.Token(woosh.COMMENT, '# First, perform various sanity checks.', 1125, 12, 1125, 51),
woosh.Token(woosh.DEDENT, '            ', 1126, 0, 1126, 12),
woosh.Token(woosh.NAME, 'if', 1126, 12, 1126, 14),
woosh.Token(woosh.NAME, 'not', 1126, 15, 1126, 18),
woosh.Token(woosh.NAME, 'getattr', 1126, 19, 1126, 26),
woosh.Token(woosh.OP, '(', 1126, 26, 1126, 27),
woosh.Token(woosh.NAME, 'cls', 1126, 27, 1126, 30),
woosh.Token(woosh.OP, ',', 1126, 30, 1126, 31),
woosh.Token(woosh.STRING, "'_is_runtime_protocol'", 1126, 32, 1126, 54),
woosh.Token(woosh.OP, ',', 1126, 54, 1126, 55),
woosh.Token(woosh.NAME, 'False', 1126, 56, 1126, 61),
woosh.Token(woosh.OP, ')', 1126, 61, 1126, 62),
woosh.Token(woosh.OP, ':', 1126, 62, 1126, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1126, 63, 1127, 0),
woosh.Token(woosh.INDENT, '                ', 1127, 0, 1127, 16),
woosh.Token(woosh.NAME, 'if', 1127, 16, 1127, 18),
woosh.Token(woosh.NAME, '_allow_reckless_class_cheks', 1127, 19, 1127, 46),
woosh.Token(woosh.OP, '(', 1127, 46, 1127, 47),
woosh.Token(woosh.OP, ')', 1127, 47, 1127, 48),
woosh.Token(woosh.OP, ':', 1127, 48, 1127, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1127, 49, 1128, 0),
woosh.Token(woosh.INDENT, '                    ', 1128, 0, 1128, 20),
woosh.Token(woosh.NAME, 'return', 1128, 20, 1128, 26),
woosh.Token(woosh.NAME, 'NotImplemented', 1128, 27, 1128, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1128, 41, 1129, 0),
woosh.Token(woosh.DEDENT, '                ', 1129, 0, 1129, 16),
woosh.Token(woosh.NAME, 'raise', 1129, 16, 1129, 21),
woosh.Token(woosh.NAME, 'TypeError', 1129, 22, 1129, 31),
woosh.Token(woosh.OP, '(', 1129, 31, 1129, 32),
woosh.Token(woosh.STRING, '"Instance and class checks can only be used with"', 1129, 32, 1129, 81),
woosh.Token(woosh.STRING, '" @runtime_checkable protocols"', 1130, 32, 1130, 63),
woosh.Token(woosh.OP, ')', 1130, 63, 1130, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1130, 64, 1131, 0),
woosh.Token(woosh.DEDENT, '            ', 1131, 0, 1131, 12),
woosh.Token(woosh.NAME, 'if', 1131, 12, 1131, 14),
woosh.Token(woosh.NAME, 'not', 1131, 15, 1131, 18),
woosh.Token(woosh.NAME, '_is_callable_members_only', 1131, 19, 1131, 44),
woosh.Token(woosh.OP, '(', 1131, 44, 1131, 45),
woosh.Token(woosh.NAME, 'cls', 1131, 45, 1131, 48),
woosh.Token(woosh.OP, ')', 1131, 48, 1131, 49),
woosh.Token(woosh.OP, ':', 1131, 49, 1131, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1131, 50, 1132, 0),
woosh.Token(woosh.INDENT, '                ', 1132, 0, 1132, 16),
woosh.Token(woosh.NAME, 'if', 1132, 16, 1132, 18),
woosh.Token(woosh.NAME, '_allow_reckless_class_cheks', 1132, 19, 1132, 46),
woosh.Token(woosh.OP, '(', 1132, 46, 1132, 47),
woosh.Token(woosh.OP, ')', 1132, 47, 1132, 48),
woosh.Token(woosh.OP, ':', 1132, 48, 1132, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1132, 49, 1133, 0),
woosh.Token(woosh.INDENT, '                    ', 1133, 0, 1133, 20),
woosh.Token(woosh.NAME, 'return', 1133, 20, 1133, 26),
woosh.Token(woosh.NAME, 'NotImplemented', 1133, 27, 1133, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1133, 41, 1134, 0),
woosh.Token(woosh.DEDENT, '                ', 1134, 0, 1134, 16),
woosh.Token(woosh.NAME, 'raise', 1134, 16, 1134, 21),
woosh.Token(woosh.NAME, 'TypeError', 1134, 22, 1134, 31),
woosh.Token(woosh.OP, '(', 1134, 31, 1134, 32),
woosh.Token(woosh.STRING, '"Protocols with non-method members"', 1134, 32, 1134, 67),
woosh.Token(woosh.STRING, '" don\'t support issubclass()"', 1135, 32, 1135, 61),
woosh.Token(woosh.OP, ')', 1135, 61, 1135, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1135, 62, 1136, 0),
woosh.Token(woosh.DEDENT, '            ', 1136, 0, 1136, 12),
woosh.Token(woosh.NAME, 'if', 1136, 12, 1136, 14),
woosh.Token(woosh.NAME, 'not', 1136, 15, 1136, 18),
woosh.Token(woosh.NAME, 'isinstance', 1136, 19, 1136, 29),
woosh.Token(woosh.OP, '(', 1136, 29, 1136, 30),
woosh.Token(woosh.NAME, 'other', 1136, 30, 1136, 35),
woosh.Token(woosh.OP, ',', 1136, 35, 1136, 36),
woosh.Token(woosh.NAME, 'type', 1136, 37, 1136, 41),
woosh.Token(woosh.OP, ')', 1136, 41, 1136, 42),
woosh.Token(woosh.OP, ':', 1136, 42, 1136, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1136, 43, 1137, 0),
woosh.Token(woosh.COMMENT, '# Same error message as for issubclass(1, int).', 1137, 16, 1137, 63),
woosh.Token(woosh.INDENT, '                ', 1138, 0, 1138, 16),
woosh.Token(woosh.NAME, 'raise', 1138, 16, 1138, 21),
woosh.Token(woosh.NAME, 'TypeError', 1138, 22, 1138, 31),
woosh.Token(woosh.OP, '(', 1138, 31, 1138, 32),
woosh.Token(woosh.STRING, "'issubclass() arg 1 must be a class'", 1138, 32, 1138, 68),
woosh.Token(woosh.OP, ')', 1138, 68, 1138, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1138, 69, 1139, 0),
woosh.Token(woosh.COMMENT, '# Second, perform the actual structural compatibility check.', 1140, 12, 1140, 72),
woosh.Token(woosh.DEDENT, '            ', 1141, 0, 1141, 12),
woosh.Token(woosh.NAME, 'for', 1141, 12, 1141, 15),
woosh.Token(woosh.NAME, 'attr', 1141, 16, 1141, 20),
woosh.Token(woosh.NAME, 'in', 1141, 21, 1141, 23),
woosh.Token(woosh.NAME, '_get_protocol_attrs', 1141, 24, 1141, 43),
woosh.Token(woosh.OP, '(', 1141, 43, 1141, 44),
woosh.Token(woosh.NAME, 'cls', 1141, 44, 1141, 47),
woosh.Token(woosh.OP, ')', 1141, 47, 1141, 48),
woosh.Token(woosh.OP, ':', 1141, 48, 1141, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1141, 49, 1142, 0),
woosh.Token(woosh.INDENT, '                ', 1142, 0, 1142, 16),
woosh.Token(woosh.NAME, 'for', 1142, 16, 1142, 19),
woosh.Token(woosh.NAME, 'base', 1142, 20, 1142, 24),
woosh.Token(woosh.NAME, 'in', 1142, 25, 1142, 27),
woosh.Token(woosh.NAME, 'other', 1142, 28, 1142, 33),
woosh.Token(woosh.OP, '.', 1142, 33, 1142, 34),
woosh.Token(woosh.NAME, '__mro__', 1142, 34, 1142, 41),
woosh.Token(woosh.OP, ':', 1142, 41, 1142, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1142, 42, 1143, 0),
woosh.Token(woosh.COMMENT, '# Check if the members appears in the class dictionary...', 1143, 20, 1143, 77),
woosh.Token(woosh.INDENT, '                    ', 1144, 0, 1144, 20),
woosh.Token(woosh.NAME, 'if', 1144, 20, 1144, 22),
woosh.Token(woosh.NAME, 'attr', 1144, 23, 1144, 27),
woosh.Token(woosh.NAME, 'in', 1144, 28, 1144, 30),
woosh.Token(woosh.NAME, 'base', 1144, 31, 1144, 35),
woosh.Token(woosh.OP, '.', 1144, 35, 1144, 36),
woosh.Token(woosh.NAME, '__dict__', 1144, 36, 1144, 44),
woosh.Token(woosh.OP, ':', 1144, 44, 1144, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1144, 45, 1145, 0),
woosh.Token(woosh.INDENT, '                        ', 1145, 0, 1145, 24),
woosh.Token(woosh.NAME, 'if', 1145, 24, 1145, 26),
woosh.Token(woosh.NAME, 'base', 1145, 27, 1145, 31),
woosh.Token(woosh.OP, '.', 1145, 31, 1145, 32),
woosh.Token(woosh.NAME, '__dict__', 1145, 32, 1145, 40),
woosh.Token(woosh.OP, '[', 1145, 40, 1145, 41),
woosh.Token(woosh.NAME, 'attr', 1145, 41, 1145, 45),
woosh.Token(woosh.OP, ']', 1145, 45, 1145, 46),
woosh.Token(woosh.NAME, 'is', 1145, 47, 1145, 49),
woosh.Token(woosh.NAME, 'None', 1145, 50, 1145, 54),
woosh.Token(woosh.OP, ':', 1145, 54, 1145, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1145, 55, 1146, 0),
woosh.Token(woosh.INDENT, '                            ', 1146, 0, 1146, 28),
woosh.Token(woosh.NAME, 'return', 1146, 28, 1146, 34),
woosh.Token(woosh.NAME, 'NotImplemented', 1146, 35, 1146, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1146, 49, 1147, 0),
woosh.Token(woosh.DEDENT, '                        ', 1147, 0, 1147, 24),
woosh.Token(woosh.NAME, 'break', 1147, 24, 1147, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1147, 29, 1148, 0),
woosh.Token(woosh.COMMENT, '# ...or in annotations, if it is a sub-protocol.', 1149, 20, 1149, 68),
woosh.Token(woosh.DEDENT, '                    ', 1150, 0, 1150, 20),
woosh.Token(woosh.NAME, 'annotations', 1150, 20, 1150, 31),
woosh.Token(woosh.OP, '=', 1150, 32, 1150, 33),
woosh.Token(woosh.NAME, 'getattr', 1150, 34, 1150, 41),
woosh.Token(woosh.OP, '(', 1150, 41, 1150, 42),
woosh.Token(woosh.NAME, 'base', 1150, 42, 1150, 46),
woosh.Token(woosh.OP, ',', 1150, 46, 1150, 47),
woosh.Token(woosh.STRING, "'__annotations__'", 1150, 48, 1150, 65),
woosh.Token(woosh.OP, ',', 1150, 65, 1150, 66),
woosh.Token(woosh.OP, '{', 1150, 67, 1150, 68),
woosh.Token(woosh.OP, '}', 1150, 68, 1150, 69),
woosh.Token(woosh.OP, ')', 1150, 69, 1150, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1150, 70, 1151, 0),
woosh.Token(woosh.NAME, 'if', 1151, 20, 1151, 22),
woosh.Token(woosh.OP, '(', 1151, 23, 1151, 24),
woosh.Token(woosh.NAME, 'isinstance', 1151, 24, 1151, 34),
woosh.Token(woosh.OP, '(', 1151, 34, 1151, 35),
woosh.Token(woosh.NAME, 'annotations', 1151, 35, 1151, 46),
woosh.Token(woosh.OP, ',', 1151, 46, 1151, 47),
woosh.Token(woosh.NAME, 'collections', 1151, 48, 1151, 59),
woosh.Token(woosh.OP, '.', 1151, 59, 1151, 60),
woosh.Token(woosh.NAME, 'abc', 1151, 60, 1151, 63),
woosh.Token(woosh.OP, '.', 1151, 63, 1151, 64),
woosh.Token(woosh.NAME, 'Mapping', 1151, 64, 1151, 71),
woosh.Token(woosh.OP, ')', 1151, 71, 1151, 72),
woosh.Token(woosh.NAME, 'and', 1151, 73, 1151, 76),
woosh.Token(woosh.NAME, 'attr', 1152, 28, 1152, 32),
woosh.Token(woosh.NAME, 'in', 1152, 33, 1152, 35),
woosh.Token(woosh.NAME, 'annotations', 1152, 36, 1152, 47),
woosh.Token(woosh.NAME, 'and', 1152, 48, 1152, 51),
woosh.Token(woosh.NAME, 'issubclass', 1153, 28, 1153, 38),
woosh.Token(woosh.OP, '(', 1153, 38, 1153, 39),
woosh.Token(woosh.NAME, 'other', 1153, 39, 1153, 44),
woosh.Token(woosh.OP, ',', 1153, 44, 1153, 45),
woosh.Token(woosh.NAME, 'Generic', 1153, 46, 1153, 53),
woosh.Token(woosh.OP, ')', 1153, 53, 1153, 54),
woosh.Token(woosh.NAME, 'and', 1153, 55, 1153, 58),
woosh.Token(woosh.NAME, 'other', 1153, 59, 1153, 64),
woosh.Token(woosh.OP, '.', 1153, 64, 1153, 65),
woosh.Token(woosh.NAME, '_is_protocol', 1153, 65, 1153, 77),
woosh.Token(woosh.OP, ')', 1153, 77, 1153, 78),
woosh.Token(woosh.OP, ':', 1153, 78, 1153, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1153, 79, 1154, 0),
woosh.Token(woosh.INDENT, '                        ', 1154, 0, 1154, 24),
woosh.Token(woosh.NAME, 'break', 1154, 24, 1154, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1154, 29, 1155, 0),
woosh.Token(woosh.DEDENT, '                ', 1155, 0, 1155, 16),
woosh.Token(woosh.DEDENT, '', 1155, 16, 1155, 16),
woosh.Token(woosh.NAME, 'else', 1155, 16, 1155, 20),
woosh.Token(woosh.OP, ':', 1155, 20, 1155, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1155, 21, 1156, 0),
woosh.Token(woosh.INDENT, '                    ', 1156, 0, 1156, 20),
woosh.Token(woosh.NAME, 'return', 1156, 20, 1156, 26),
woosh.Token(woosh.NAME, 'NotImplemented', 1156, 27, 1156, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1156, 41, 1157, 0),
woosh.Token(woosh.DEDENT, '            ', 1157, 0, 1157, 12),
woosh.Token(woosh.DEDENT, '', 1157, 12, 1157, 12),
woosh.Token(woosh.NAME, 'return', 1157, 12, 1157, 18),
woosh.Token(woosh.NAME, 'True', 1157, 19, 1157, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1157, 23, 1158, 0),
woosh.Token(woosh.DEDENT, '        ', 1159, 0, 1159, 8),
woosh.Token(woosh.NAME, 'if', 1159, 8, 1159, 10),
woosh.Token(woosh.STRING, "'__subclasshook__'", 1159, 11, 1159, 29),
woosh.Token(woosh.NAME, 'not', 1159, 30, 1159, 33),
woosh.Token(woosh.NAME, 'in', 1159, 34, 1159, 36),
woosh.Token(woosh.NAME, 'cls', 1159, 37, 1159, 40),
woosh.Token(woosh.OP, '.', 1159, 40, 1159, 41),
woosh.Token(woosh.NAME, '__dict__', 1159, 41, 1159, 49),
woosh.Token(woosh.OP, ':', 1159, 49, 1159, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1159, 50, 1160, 0),
woosh.Token(woosh.INDENT, '            ', 1160, 0, 1160, 12),
woosh.Token(woosh.NAME, 'cls', 1160, 12, 1160, 15),
woosh.Token(woosh.OP, '.', 1160, 15, 1160, 16),
woosh.Token(woosh.NAME, '__subclasshook__', 1160, 16, 1160, 32),
woosh.Token(woosh.OP, '=', 1160, 33, 1160, 34),
woosh.Token(woosh.NAME, '_proto_hook', 1160, 35, 1160, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1160, 46, 1161, 0),
woosh.Token(woosh.COMMENT, '# We have nothing more to do for non-protocols...', 1162, 8, 1162, 57),
woosh.Token(woosh.DEDENT, '        ', 1163, 0, 1163, 8),
woosh.Token(woosh.NAME, 'if', 1163, 8, 1163, 10),
woosh.Token(woosh.NAME, 'not', 1163, 11, 1163, 14),
woosh.Token(woosh.NAME, 'cls', 1163, 15, 1163, 18),
woosh.Token(woosh.OP, '.', 1163, 18, 1163, 19),
woosh.Token(woosh.NAME, '_is_protocol', 1163, 19, 1163, 31),
woosh.Token(woosh.OP, ':', 1163, 31, 1163, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1163, 32, 1164, 0),
woosh.Token(woosh.INDENT, '            ', 1164, 0, 1164, 12),
woosh.Token(woosh.NAME, 'return', 1164, 12, 1164, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1164, 18, 1165, 0),
woosh.Token(woosh.COMMENT, '# ... otherwise check consistency of bases, and prohibit instantiation.', 1166, 8, 1166, 79),
woosh.Token(woosh.DEDENT, '        ', 1167, 0, 1167, 8),
woosh.Token(woosh.NAME, 'for', 1167, 8, 1167, 11),
woosh.Token(woosh.NAME, 'base', 1167, 12, 1167, 16),
woosh.Token(woosh.NAME, 'in', 1167, 17, 1167, 19),
woosh.Token(woosh.NAME, 'cls', 1167, 20, 1167, 23),
woosh.Token(woosh.OP, '.', 1167, 23, 1167, 24),
woosh.Token(woosh.NAME, '__bases__', 1167, 24, 1167, 33),
woosh.Token(woosh.OP, ':', 1167, 33, 1167, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1167, 34, 1168, 0),
woosh.Token(woosh.INDENT, '            ', 1168, 0, 1168, 12),
woosh.Token(woosh.NAME, 'if', 1168, 12, 1168, 14),
woosh.Token(woosh.NAME, 'not', 1168, 15, 1168, 18),
woosh.Token(woosh.OP, '(', 1168, 19, 1168, 20),
woosh.Token(woosh.NAME, 'base', 1168, 20, 1168, 24),
woosh.Token(woosh.NAME, 'in', 1168, 25, 1168, 27),
woosh.Token(woosh.OP, '(', 1168, 28, 1168, 29),
woosh.Token(woosh.NAME, 'object', 1168, 29, 1168, 35),
woosh.Token(woosh.OP, ',', 1168, 35, 1168, 36),
woosh.Token(woosh.NAME, 'Generic', 1168, 37, 1168, 44),
woosh.Token(woosh.OP, ')', 1168, 44, 1168, 45),
woosh.Token(woosh.NAME, 'or', 1168, 46, 1168, 48),
woosh.Token(woosh.NAME, 'base', 1169, 20, 1169, 24),
woosh.Token(woosh.OP, '.', 1169, 24, 1169, 25),
woosh.Token(woosh.NAME, '__module__', 1169, 25, 1169, 35),
woosh.Token(woosh.NAME, 'in', 1169, 36, 1169, 38),
woosh.Token(woosh.NAME, '_PROTO_ALLOWLIST', 1169, 39, 1169, 55),
woosh.Token(woosh.NAME, 'and', 1169, 56, 1169, 59),
woosh.Token(woosh.NAME, 'base', 1170, 20, 1170, 24),
woosh.Token(woosh.OP, '.', 1170, 24, 1170, 25),
woosh.Token(woosh.NAME, '__name__', 1170, 25, 1170, 33),
woosh.Token(woosh.NAME, 'in', 1170, 34, 1170, 36),
woosh.Token(woosh.NAME, '_PROTO_ALLOWLIST', 1170, 37, 1170, 53),
woosh.Token(woosh.OP, '[', 1170, 53, 1170, 54),
woosh.Token(woosh.NAME, 'base', 1170, 54, 1170, 58),
woosh.Token(woosh.OP, '.', 1170, 58, 1170, 59),
woosh.Token(woosh.NAME, '__module__', 1170, 59, 1170, 69),
woosh.Token(woosh.OP, ']', 1170, 69, 1170, 70),
woosh.Token(woosh.NAME, 'or', 1170, 71, 1170, 73),
woosh.Token(woosh.NAME, 'issubclass', 1171, 20, 1171, 30),
woosh.Token(woosh.OP, '(', 1171, 30, 1171, 31),
woosh.Token(woosh.NAME, 'base', 1171, 31, 1171, 35),
woosh.Token(woosh.OP, ',', 1171, 35, 1171, 36),
woosh.Token(woosh.NAME, 'Generic', 1171, 37, 1171, 44),
woosh.Token(woosh.OP, ')', 1171, 44, 1171, 45),
woosh.Token(woosh.NAME, 'and', 1171, 46, 1171, 49),
woosh.Token(woosh.NAME, 'base', 1171, 50, 1171, 54),
woosh.Token(woosh.OP, '.', 1171, 54, 1171, 55),
woosh.Token(woosh.NAME, '_is_protocol', 1171, 55, 1171, 67),
woosh.Token(woosh.OP, ')', 1171, 67, 1171, 68),
woosh.Token(woosh.OP, ':', 1171, 68, 1171, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1171, 69, 1172, 0),
woosh.Token(woosh.INDENT, '                ', 1172, 0, 1172, 16),
woosh.Token(woosh.NAME, 'raise', 1172, 16, 1172, 21),
woosh.Token(woosh.NAME, 'TypeError', 1172, 22, 1172, 31),
woosh.Token(woosh.OP, '(', 1172, 31, 1172, 32),
woosh.Token(woosh.STRING, "'Protocols can only inherit from other'", 1172, 32, 1172, 71),
woosh.Token(woosh.STRING, "' protocols, got %r'", 1173, 32, 1173, 52),
woosh.Token(woosh.OP, '%', 1173, 53, 1173, 54),
woosh.Token(woosh.NAME, 'base', 1173, 55, 1173, 59),
woosh.Token(woosh.OP, ')', 1173, 59, 1173, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1173, 60, 1174, 0),
woosh.Token(woosh.DEDENT, '        ', 1174, 0, 1174, 8),
woosh.Token(woosh.DEDENT, '', 1174, 8, 1174, 8),
woosh.Token(woosh.NAME, 'cls', 1174, 8, 1174, 11),
woosh.Token(woosh.OP, '.', 1174, 11, 1174, 12),
woosh.Token(woosh.NAME, '__init__', 1174, 12, 1174, 20),
woosh.Token(woosh.OP, '=', 1174, 21, 1174, 22),
woosh.Token(woosh.NAME, '_no_init', 1174, 23, 1174, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1174, 31, 1175, 0),
woosh.Token(woosh.DEDENT, '', 1177, 0, 1177, 0),
woosh.Token(woosh.DEDENT, '', 1177, 0, 1177, 0),
woosh.Token(woosh.NAME, 'class', 1177, 0, 1177, 5),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1177, 6, 1177, 21),
woosh.Token(woosh.OP, '(', 1177, 21, 1177, 22),
woosh.Token(woosh.NAME, '_GenericAlias', 1177, 22, 1177, 35),
woosh.Token(woosh.OP, ',', 1177, 35, 1177, 36),
woosh.Token(woosh.NAME, '_root', 1177, 37, 1177, 42),
woosh.Token(woosh.OP, '=', 1177, 42, 1177, 43),
woosh.Token(woosh.NAME, 'True', 1177, 43, 1177, 47),
woosh.Token(woosh.OP, ')', 1177, 47, 1177, 48),
woosh.Token(woosh.OP, ':', 1177, 48, 1177, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1177, 49, 1178, 0),
woosh.Token(woosh.INDENT, '    ', 1178, 0, 1178, 4),
woosh.Token(woosh.STRING, '"""Runtime representation of an annotated type.\r\n\r\n    At its core \'Annotated[t, dec1, dec2, ...]\' is an alias for the type \'t\'\r\n    with extra annotations. The alias behaves like a normal typing alias,\r\n    instantiating is the same as instantiating the underlying type, binding\r\n    it to types is also the same.\r\n    """', 1178, 4, 1184, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1184, 7, 1185, 0),
woosh.Token(woosh.NAME, 'def', 1185, 4, 1185, 7),
woosh.Token(woosh.NAME, '__init__', 1185, 8, 1185, 16),
woosh.Token(woosh.OP, '(', 1185, 16, 1185, 17),
woosh.Token(woosh.NAME, 'self', 1185, 17, 1185, 21),
woosh.Token(woosh.OP, ',', 1185, 21, 1185, 22),
woosh.Token(woosh.NAME, 'origin', 1185, 23, 1185, 29),
woosh.Token(woosh.OP, ',', 1185, 29, 1185, 30),
woosh.Token(woosh.NAME, 'metadata', 1185, 31, 1185, 39),
woosh.Token(woosh.OP, ')', 1185, 39, 1185, 40),
woosh.Token(woosh.OP, ':', 1185, 40, 1185, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1185, 41, 1186, 0),
woosh.Token(woosh.INDENT, '        ', 1186, 0, 1186, 8),
woosh.Token(woosh.NAME, 'if', 1186, 8, 1186, 10),
woosh.Token(woosh.NAME, 'isinstance', 1186, 11, 1186, 21),
woosh.Token(woosh.OP, '(', 1186, 21, 1186, 22),
woosh.Token(woosh.NAME, 'origin', 1186, 22, 1186, 28),
woosh.Token(woosh.OP, ',', 1186, 28, 1186, 29),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1186, 30, 1186, 45),
woosh.Token(woosh.OP, ')', 1186, 45, 1186, 46),
woosh.Token(woosh.OP, ':', 1186, 46, 1186, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1186, 47, 1187, 0),
woosh.Token(woosh.INDENT, '            ', 1187, 0, 1187, 12),
woosh.Token(woosh.NAME, 'metadata', 1187, 12, 1187, 20),
woosh.Token(woosh.OP, '=', 1187, 21, 1187, 22),
woosh.Token(woosh.NAME, 'origin', 1187, 23, 1187, 29),
woosh.Token(woosh.OP, '.', 1187, 29, 1187, 30),
woosh.Token(woosh.NAME, '__metadata__', 1187, 30, 1187, 42),
woosh.Token(woosh.OP, '+', 1187, 43, 1187, 44),
woosh.Token(woosh.NAME, 'metadata', 1187, 45, 1187, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1187, 53, 1188, 0),
woosh.Token(woosh.NAME, 'origin', 1188, 12, 1188, 18),
woosh.Token(woosh.OP, '=', 1188, 19, 1188, 20),
woosh.Token(woosh.NAME, 'origin', 1188, 21, 1188, 27),
woosh.Token(woosh.OP, '.', 1188, 27, 1188, 28),
woosh.Token(woosh.NAME, '__origin__', 1188, 28, 1188, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1188, 38, 1189, 0),
woosh.Token(woosh.DEDENT, '        ', 1189, 0, 1189, 8),
woosh.Token(woosh.NAME, 'super', 1189, 8, 1189, 13),
woosh.Token(woosh.OP, '(', 1189, 13, 1189, 14),
woosh.Token(woosh.OP, ')', 1189, 14, 1189, 15),
woosh.Token(woosh.OP, '.', 1189, 15, 1189, 16),
woosh.Token(woosh.NAME, '__init__', 1189, 16, 1189, 24),
woosh.Token(woosh.OP, '(', 1189, 24, 1189, 25),
woosh.Token(woosh.NAME, 'origin', 1189, 25, 1189, 31),
woosh.Token(woosh.OP, ',', 1189, 31, 1189, 32),
woosh.Token(woosh.NAME, 'origin', 1189, 33, 1189, 39),
woosh.Token(woosh.OP, ')', 1189, 39, 1189, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1189, 40, 1190, 0),
woosh.Token(woosh.NAME, 'self', 1190, 8, 1190, 12),
woosh.Token(woosh.OP, '.', 1190, 12, 1190, 13),
woosh.Token(woosh.NAME, '__metadata__', 1190, 13, 1190, 25),
woosh.Token(woosh.OP, '=', 1190, 26, 1190, 27),
woosh.Token(woosh.NAME, 'metadata', 1190, 28, 1190, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1190, 36, 1191, 0),
woosh.Token(woosh.DEDENT, '    ', 1192, 0, 1192, 4),
woosh.Token(woosh.NAME, 'def', 1192, 4, 1192, 7),
woosh.Token(woosh.NAME, 'copy_with', 1192, 8, 1192, 17),
woosh.Token(woosh.OP, '(', 1192, 17, 1192, 18),
woosh.Token(woosh.NAME, 'self', 1192, 18, 1192, 22),
woosh.Token(woosh.OP, ',', 1192, 22, 1192, 23),
woosh.Token(woosh.NAME, 'params', 1192, 24, 1192, 30),
woosh.Token(woosh.OP, ')', 1192, 30, 1192, 31),
woosh.Token(woosh.OP, ':', 1192, 31, 1192, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1192, 32, 1193, 0),
woosh.Token(woosh.INDENT, '        ', 1193, 0, 1193, 8),
woosh.Token(woosh.NAME, 'assert', 1193, 8, 1193, 14),
woosh.Token(woosh.NAME, 'len', 1193, 15, 1193, 18),
woosh.Token(woosh.OP, '(', 1193, 18, 1193, 19),
woosh.Token(woosh.NAME, 'params', 1193, 19, 1193, 25),
woosh.Token(woosh.OP, ')', 1193, 25, 1193, 26),
woosh.Token(woosh.OP, '==', 1193, 27, 1193, 29),
woosh.Token(woosh.NUMBER, '1', 1193, 30, 1193, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1193, 31, 1194, 0),
woosh.Token(woosh.NAME, 'new_type', 1194, 8, 1194, 16),
woosh.Token(woosh.OP, '=', 1194, 17, 1194, 18),
woosh.Token(woosh.NAME, 'params', 1194, 19, 1194, 25),
woosh.Token(woosh.OP, '[', 1194, 25, 1194, 26),
woosh.Token(woosh.NUMBER, '0', 1194, 26, 1194, 27),
woosh.Token(woosh.OP, ']', 1194, 27, 1194, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1194, 28, 1195, 0),
woosh.Token(woosh.NAME, 'return', 1195, 8, 1195, 14),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1195, 15, 1195, 30),
woosh.Token(woosh.OP, '(', 1195, 30, 1195, 31),
woosh.Token(woosh.NAME, 'new_type', 1195, 31, 1195, 39),
woosh.Token(woosh.OP, ',', 1195, 39, 1195, 40),
woosh.Token(woosh.NAME, 'self', 1195, 41, 1195, 45),
woosh.Token(woosh.OP, '.', 1195, 45, 1195, 46),
woosh.Token(woosh.NAME, '__metadata__', 1195, 46, 1195, 58),
woosh.Token(woosh.OP, ')', 1195, 58, 1195, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1195, 59, 1196, 0),
woosh.Token(woosh.DEDENT, '    ', 1197, 0, 1197, 4),
woosh.Token(woosh.NAME, 'def', 1197, 4, 1197, 7),
woosh.Token(woosh.NAME, '__repr__', 1197, 8, 1197, 16),
woosh.Token(woosh.OP, '(', 1197, 16, 1197, 17),
woosh.Token(woosh.NAME, 'self', 1197, 17, 1197, 21),
woosh.Token(woosh.OP, ')', 1197, 21, 1197, 22),
woosh.Token(woosh.OP, ':', 1197, 22, 1197, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1197, 23, 1198, 0),
woosh.Token(woosh.INDENT, '        ', 1198, 0, 1198, 8),
woosh.Token(woosh.NAME, 'return', 1198, 8, 1198, 14),
woosh.Token(woosh.STRING, '"typing.Annotated[{}, {}]"', 1198, 15, 1198, 41),
woosh.Token(woosh.OP, '.', 1198, 41, 1198, 42),
woosh.Token(woosh.NAME, 'format', 1198, 42, 1198, 48),
woosh.Token(woosh.OP, '(', 1198, 48, 1198, 49),
woosh.Token(woosh.NAME, '_type_repr', 1199, 12, 1199, 22),
woosh.Token(woosh.OP, '(', 1199, 22, 1199, 23),
woosh.Token(woosh.NAME, 'self', 1199, 23, 1199, 27),
woosh.Token(woosh.OP, '.', 1199, 27, 1199, 28),
woosh.Token(woosh.NAME, '__origin__', 1199, 28, 1199, 38),
woosh.Token(woosh.OP, ')', 1199, 38, 1199, 39),
woosh.Token(woosh.OP, ',', 1199, 39, 1199, 40),
woosh.Token(woosh.STRING, '", "', 1200, 12, 1200, 16),
woosh.Token(woosh.OP, '.', 1200, 16, 1200, 17),
woosh.Token(woosh.NAME, 'join', 1200, 17, 1200, 21),
woosh.Token(woosh.OP, '(', 1200, 21, 1200, 22),
woosh.Token(woosh.NAME, 'repr', 1200, 22, 1200, 26),
woosh.Token(woosh.OP, '(', 1200, 26, 1200, 27),
woosh.Token(woosh.NAME, 'a', 1200, 27, 1200, 28),
woosh.Token(woosh.OP, ')', 1200, 28, 1200, 29),
woosh.Token(woosh.NAME, 'for', 1200, 30, 1200, 33),
woosh.Token(woosh.NAME, 'a', 1200, 34, 1200, 35),
woosh.Token(woosh.NAME, 'in', 1200, 36, 1200, 38),
woosh.Token(woosh.NAME, 'self', 1200, 39, 1200, 43),
woosh.Token(woosh.OP, '.', 1200, 43, 1200, 44),
woosh.Token(woosh.NAME, '__metadata__', 1200, 44, 1200, 56),
woosh.Token(woosh.OP, ')', 1200, 56, 1200, 57),
woosh.Token(woosh.OP, ')', 1201, 8, 1201, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1201, 9, 1202, 0),
woosh.Token(woosh.DEDENT, '    ', 1203, 0, 1203, 4),
woosh.Token(woosh.NAME, 'def', 1203, 4, 1203, 7),
woosh.Token(woosh.NAME, '__reduce__', 1203, 8, 1203, 18),
woosh.Token(woosh.OP, '(', 1203, 18, 1203, 19),
woosh.Token(woosh.NAME, 'self', 1203, 19, 1203, 23),
woosh.Token(woosh.OP, ')', 1203, 23, 1203, 24),
woosh.Token(woosh.OP, ':', 1203, 24, 1203, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1203, 25, 1204, 0),
woosh.Token(woosh.INDENT, '        ', 1204, 0, 1204, 8),
woosh.Token(woosh.NAME, 'return', 1204, 8, 1204, 14),
woosh.Token(woosh.NAME, 'operator', 1204, 15, 1204, 23),
woosh.Token(woosh.OP, '.', 1204, 23, 1204, 24),
woosh.Token(woosh.NAME, 'getitem', 1204, 24, 1204, 31),
woosh.Token(woosh.OP, ',', 1204, 31, 1204, 32),
woosh.Token(woosh.OP, '(', 1204, 33, 1204, 34),
woosh.Token(woosh.NAME, 'Annotated', 1205, 12, 1205, 21),
woosh.Token(woosh.OP, ',', 1205, 21, 1205, 22),
woosh.Token(woosh.OP, '(', 1205, 23, 1205, 24),
woosh.Token(woosh.NAME, 'self', 1205, 24, 1205, 28),
woosh.Token(woosh.OP, '.', 1205, 28, 1205, 29),
woosh.Token(woosh.NAME, '__origin__', 1205, 29, 1205, 39),
woosh.Token(woosh.OP, ',', 1205, 39, 1205, 40),
woosh.Token(woosh.OP, ')', 1205, 40, 1205, 41),
woosh.Token(woosh.OP, '+', 1205, 42, 1205, 43),
woosh.Token(woosh.NAME, 'self', 1205, 44, 1205, 48),
woosh.Token(woosh.OP, '.', 1205, 48, 1205, 49),
woosh.Token(woosh.NAME, '__metadata__', 1205, 49, 1205, 61),
woosh.Token(woosh.OP, ')', 1206, 8, 1206, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1206, 9, 1207, 0),
woosh.Token(woosh.DEDENT, '    ', 1208, 0, 1208, 4),
woosh.Token(woosh.NAME, 'def', 1208, 4, 1208, 7),
woosh.Token(woosh.NAME, '__eq__', 1208, 8, 1208, 14),
woosh.Token(woosh.OP, '(', 1208, 14, 1208, 15),
woosh.Token(woosh.NAME, 'self', 1208, 15, 1208, 19),
woosh.Token(woosh.OP, ',', 1208, 19, 1208, 20),
woosh.Token(woosh.NAME, 'other', 1208, 21, 1208, 26),
woosh.Token(woosh.OP, ')', 1208, 26, 1208, 27),
woosh.Token(woosh.OP, ':', 1208, 27, 1208, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1208, 28, 1209, 0),
woosh.Token(woosh.INDENT, '        ', 1209, 0, 1209, 8),
woosh.Token(woosh.NAME, 'if', 1209, 8, 1209, 10),
woosh.Token(woosh.NAME, 'not', 1209, 11, 1209, 14),
woosh.Token(woosh.NAME, 'isinstance', 1209, 15, 1209, 25),
woosh.Token(woosh.OP, '(', 1209, 25, 1209, 26),
woosh.Token(woosh.NAME, 'other', 1209, 26, 1209, 31),
woosh.Token(woosh.OP, ',', 1209, 31, 1209, 32),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1209, 33, 1209, 48),
woosh.Token(woosh.OP, ')', 1209, 48, 1209, 49),
woosh.Token(woosh.OP, ':', 1209, 49, 1209, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1209, 50, 1210, 0),
woosh.Token(woosh.INDENT, '            ', 1210, 0, 1210, 12),
woosh.Token(woosh.NAME, 'return', 1210, 12, 1210, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 1210, 19, 1210, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1210, 33, 1211, 0),
woosh.Token(woosh.DEDENT, '        ', 1211, 0, 1211, 8),
woosh.Token(woosh.NAME, 'return', 1211, 8, 1211, 14),
woosh.Token(woosh.OP, '(', 1211, 15, 1211, 16),
woosh.Token(woosh.NAME, 'self', 1211, 16, 1211, 20),
woosh.Token(woosh.OP, '.', 1211, 20, 1211, 21),
woosh.Token(woosh.NAME, '__origin__', 1211, 21, 1211, 31),
woosh.Token(woosh.OP, '==', 1211, 32, 1211, 34),
woosh.Token(woosh.NAME, 'other', 1211, 35, 1211, 40),
woosh.Token(woosh.OP, '.', 1211, 40, 1211, 41),
woosh.Token(woosh.NAME, '__origin__', 1211, 41, 1211, 51),
woosh.Token(woosh.NAME, 'and', 1212, 16, 1212, 19),
woosh.Token(woosh.NAME, 'self', 1212, 20, 1212, 24),
woosh.Token(woosh.OP, '.', 1212, 24, 1212, 25),
woosh.Token(woosh.NAME, '__metadata__', 1212, 25, 1212, 37),
woosh.Token(woosh.OP, '==', 1212, 38, 1212, 40),
woosh.Token(woosh.NAME, 'other', 1212, 41, 1212, 46),
woosh.Token(woosh.OP, '.', 1212, 46, 1212, 47),
woosh.Token(woosh.NAME, '__metadata__', 1212, 47, 1212, 59),
woosh.Token(woosh.OP, ')', 1212, 59, 1212, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1212, 60, 1213, 0),
woosh.Token(woosh.DEDENT, '    ', 1214, 0, 1214, 4),
woosh.Token(woosh.NAME, 'def', 1214, 4, 1214, 7),
woosh.Token(woosh.NAME, '__hash__', 1214, 8, 1214, 16),
woosh.Token(woosh.OP, '(', 1214, 16, 1214, 17),
woosh.Token(woosh.NAME, 'self', 1214, 17, 1214, 21),
woosh.Token(woosh.OP, ')', 1214, 21, 1214, 22),
woosh.Token(woosh.OP, ':', 1214, 22, 1214, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1214, 23, 1215, 0),
woosh.Token(woosh.INDENT, '        ', 1215, 0, 1215, 8),
woosh.Token(woosh.NAME, 'return', 1215, 8, 1215, 14),
woosh.Token(woosh.NAME, 'hash', 1215, 15, 1215, 19),
woosh.Token(woosh.OP, '(', 1215, 19, 1215, 20),
woosh.Token(woosh.OP, '(', 1215, 20, 1215, 21),
woosh.Token(woosh.NAME, 'self', 1215, 21, 1215, 25),
woosh.Token(woosh.OP, '.', 1215, 25, 1215, 26),
woosh.Token(woosh.NAME, '__origin__', 1215, 26, 1215, 36),
woosh.Token(woosh.OP, ',', 1215, 36, 1215, 37),
woosh.Token(woosh.NAME, 'self', 1215, 38, 1215, 42),
woosh.Token(woosh.OP, '.', 1215, 42, 1215, 43),
woosh.Token(woosh.NAME, '__metadata__', 1215, 43, 1215, 55),
woosh.Token(woosh.OP, ')', 1215, 55, 1215, 56),
woosh.Token(woosh.OP, ')', 1215, 56, 1215, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1215, 57, 1216, 0),
woosh.Token(woosh.DEDENT, '', 1218, 0, 1218, 0),
woosh.Token(woosh.DEDENT, '', 1218, 0, 1218, 0),
woosh.Token(woosh.NAME, 'class', 1218, 0, 1218, 5),
woosh.Token(woosh.NAME, 'Annotated', 1218, 6, 1218, 15),
woosh.Token(woosh.OP, ':', 1218, 15, 1218, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1218, 16, 1219, 0),
woosh.Token(woosh.INDENT, '    ', 1219, 0, 1219, 4),
woosh.Token(woosh.STRING, '"""Add context specific metadata to a type.\r\n\r\n    Example: Annotated[int, runtime_check.Unsigned] indicates to the\r\n    hypothetical runtime_check module that this type is an unsigned int.\r\n    Every other consumer of this type can ignore this metadata and treat\r\n    this type as int.\r\n\r\n    The first argument to Annotated must be a valid type.\r\n\r\n    Details:\r\n\r\n    - It\'s an error to call `Annotated` with less than two arguments.\r\n    - Nested Annotated are flattened::\r\n\r\n        Annotated[Annotated[T, Ann1, Ann2], Ann3] == Annotated[T, Ann1, Ann2, Ann3]\r\n\r\n    - Instantiating an annotated type is equivalent to instantiating the\r\n    underlying type::\r\n\r\n        Annotated[C, Ann1](5) == C(5)\r\n\r\n    - Annotated can be used as a generic type alias::\r\n\r\n        Optimized = Annotated[T, runtime.Optimize()]\r\n        Optimized[int] == Annotated[int, runtime.Optimize()]\r\n\r\n        OptimizedList = Annotated[List[T], runtime.Optimize()]\r\n        OptimizedList[int] == Annotated[List[int], runtime.Optimize()]\r\n    """', 1219, 4, 1247, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1247, 7, 1248, 0),
woosh.Token(woosh.NAME, '__slots__', 1249, 4, 1249, 13),
woosh.Token(woosh.OP, '=', 1249, 14, 1249, 15),
woosh.Token(woosh.OP, '(', 1249, 16, 1249, 17),
woosh.Token(woosh.OP, ')', 1249, 17, 1249, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1249, 18, 1250, 0),
woosh.Token(woosh.NAME, 'def', 1251, 4, 1251, 7),
woosh.Token(woosh.NAME, '__new__', 1251, 8, 1251, 15),
woosh.Token(woosh.OP, '(', 1251, 15, 1251, 16),
woosh.Token(woosh.NAME, 'cls', 1251, 16, 1251, 19),
woosh.Token(woosh.OP, ',', 1251, 19, 1251, 20),
woosh.Token(woosh.OP, '*', 1251, 21, 1251, 22),
woosh.Token(woosh.NAME, 'args', 1251, 22, 1251, 26),
woosh.Token(woosh.OP, ',', 1251, 26, 1251, 27),
woosh.Token(woosh.OP, '**', 1251, 28, 1251, 30),
woosh.Token(woosh.NAME, 'kwargs', 1251, 30, 1251, 36),
woosh.Token(woosh.OP, ')', 1251, 36, 1251, 37),
woosh.Token(woosh.OP, ':', 1251, 37, 1251, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1251, 38, 1252, 0),
woosh.Token(woosh.INDENT, '        ', 1252, 0, 1252, 8),
woosh.Token(woosh.NAME, 'raise', 1252, 8, 1252, 13),
woosh.Token(woosh.NAME, 'TypeError', 1252, 14, 1252, 23),
woosh.Token(woosh.OP, '(', 1252, 23, 1252, 24),
woosh.Token(woosh.STRING, '"Type Annotated cannot be instantiated."', 1252, 24, 1252, 64),
woosh.Token(woosh.OP, ')', 1252, 64, 1252, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1252, 65, 1253, 0),
woosh.Token(woosh.DEDENT, '    ', 1254, 0, 1254, 4),
woosh.Token(woosh.OP, '@', 1254, 4, 1254, 5),
woosh.Token(woosh.NAME, '_tp_cache', 1254, 5, 1254, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1254, 14, 1255, 0),
woosh.Token(woosh.NAME, 'def', 1255, 4, 1255, 7),
woosh.Token(woosh.NAME, '__class_getitem__', 1255, 8, 1255, 25),
woosh.Token(woosh.OP, '(', 1255, 25, 1255, 26),
woosh.Token(woosh.NAME, 'cls', 1255, 26, 1255, 29),
woosh.Token(woosh.OP, ',', 1255, 29, 1255, 30),
woosh.Token(woosh.NAME, 'params', 1255, 31, 1255, 37),
woosh.Token(woosh.OP, ')', 1255, 37, 1255, 38),
woosh.Token(woosh.OP, ':', 1255, 38, 1255, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1255, 39, 1256, 0),
woosh.Token(woosh.INDENT, '        ', 1256, 0, 1256, 8),
woosh.Token(woosh.NAME, 'if', 1256, 8, 1256, 10),
woosh.Token(woosh.NAME, 'not', 1256, 11, 1256, 14),
woosh.Token(woosh.NAME, 'isinstance', 1256, 15, 1256, 25),
woosh.Token(woosh.OP, '(', 1256, 25, 1256, 26),
woosh.Token(woosh.NAME, 'params', 1256, 26, 1256, 32),
woosh.Token(woosh.OP, ',', 1256, 32, 1256, 33),
woosh.Token(woosh.NAME, 'tuple', 1256, 34, 1256, 39),
woosh.Token(woosh.OP, ')', 1256, 39, 1256, 40),
woosh.Token(woosh.NAME, 'or', 1256, 41, 1256, 43),
woosh.Token(woosh.NAME, 'len', 1256, 44, 1256, 47),
woosh.Token(woosh.OP, '(', 1256, 47, 1256, 48),
woosh.Token(woosh.NAME, 'params', 1256, 48, 1256, 54),
woosh.Token(woosh.OP, ')', 1256, 54, 1256, 55),
woosh.Token(woosh.OP, '<', 1256, 56, 1256, 57),
woosh.Token(woosh.NUMBER, '2', 1256, 58, 1256, 59),
woosh.Token(woosh.OP, ':', 1256, 59, 1256, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1256, 60, 1257, 0),
woosh.Token(woosh.INDENT, '            ', 1257, 0, 1257, 12),
woosh.Token(woosh.NAME, 'raise', 1257, 12, 1257, 17),
woosh.Token(woosh.NAME, 'TypeError', 1257, 18, 1257, 27),
woosh.Token(woosh.OP, '(', 1257, 27, 1257, 28),
woosh.Token(woosh.STRING, '"Annotated[...] should be used "', 1257, 28, 1257, 60),
woosh.Token(woosh.STRING, '"with at least two arguments (a type and an "', 1258, 28, 1258, 73),
woosh.Token(woosh.STRING, '"annotation)."', 1259, 28, 1259, 42),
woosh.Token(woosh.OP, ')', 1259, 42, 1259, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1259, 43, 1260, 0),
woosh.Token(woosh.DEDENT, '        ', 1260, 0, 1260, 8),
woosh.Token(woosh.NAME, 'msg', 1260, 8, 1260, 11),
woosh.Token(woosh.OP, '=', 1260, 12, 1260, 13),
woosh.Token(woosh.STRING, '"Annotated[t, ...]: t must be a type."', 1260, 14, 1260, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1260, 52, 1261, 0),
woosh.Token(woosh.NAME, 'origin', 1261, 8, 1261, 14),
woosh.Token(woosh.OP, '=', 1261, 15, 1261, 16),
woosh.Token(woosh.NAME, '_type_check', 1261, 17, 1261, 28),
woosh.Token(woosh.OP, '(', 1261, 28, 1261, 29),
woosh.Token(woosh.NAME, 'params', 1261, 29, 1261, 35),
woosh.Token(woosh.OP, '[', 1261, 35, 1261, 36),
woosh.Token(woosh.NUMBER, '0', 1261, 36, 1261, 37),
woosh.Token(woosh.OP, ']', 1261, 37, 1261, 38),
woosh.Token(woosh.OP, ',', 1261, 38, 1261, 39),
woosh.Token(woosh.NAME, 'msg', 1261, 40, 1261, 43),
woosh.Token(woosh.OP, ')', 1261, 43, 1261, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1261, 44, 1262, 0),
woosh.Token(woosh.NAME, 'metadata', 1262, 8, 1262, 16),
woosh.Token(woosh.OP, '=', 1262, 17, 1262, 18),
woosh.Token(woosh.NAME, 'tuple', 1262, 19, 1262, 24),
woosh.Token(woosh.OP, '(', 1262, 24, 1262, 25),
woosh.Token(woosh.NAME, 'params', 1262, 25, 1262, 31),
woosh.Token(woosh.OP, '[', 1262, 31, 1262, 32),
woosh.Token(woosh.NUMBER, '1', 1262, 32, 1262, 33),
woosh.Token(woosh.OP, ':', 1262, 33, 1262, 34),
woosh.Token(woosh.OP, ']', 1262, 34, 1262, 35),
woosh.Token(woosh.OP, ')', 1262, 35, 1262, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1262, 36, 1263, 0),
woosh.Token(woosh.NAME, 'return', 1263, 8, 1263, 14),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1263, 15, 1263, 30),
woosh.Token(woosh.OP, '(', 1263, 30, 1263, 31),
woosh.Token(woosh.NAME, 'origin', 1263, 31, 1263, 37),
woosh.Token(woosh.OP, ',', 1263, 37, 1263, 38),
woosh.Token(woosh.NAME, 'metadata', 1263, 39, 1263, 47),
woosh.Token(woosh.OP, ')', 1263, 47, 1263, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1263, 48, 1264, 0),
woosh.Token(woosh.DEDENT, '    ', 1265, 0, 1265, 4),
woosh.Token(woosh.NAME, 'def', 1265, 4, 1265, 7),
woosh.Token(woosh.NAME, '__init_subclass__', 1265, 8, 1265, 25),
woosh.Token(woosh.OP, '(', 1265, 25, 1265, 26),
woosh.Token(woosh.NAME, 'cls', 1265, 26, 1265, 29),
woosh.Token(woosh.OP, ',', 1265, 29, 1265, 30),
woosh.Token(woosh.OP, '*', 1265, 31, 1265, 32),
woosh.Token(woosh.NAME, 'args', 1265, 32, 1265, 36),
woosh.Token(woosh.OP, ',', 1265, 36, 1265, 37),
woosh.Token(woosh.OP, '**', 1265, 38, 1265, 40),
woosh.Token(woosh.NAME, 'kwargs', 1265, 40, 1265, 46),
woosh.Token(woosh.OP, ')', 1265, 46, 1265, 47),
woosh.Token(woosh.OP, ':', 1265, 47, 1265, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1265, 48, 1266, 0),
woosh.Token(woosh.INDENT, '        ', 1266, 0, 1266, 8),
woosh.Token(woosh.NAME, 'raise', 1266, 8, 1266, 13),
woosh.Token(woosh.NAME, 'TypeError', 1266, 14, 1266, 23),
woosh.Token(woosh.OP, '(', 1266, 23, 1266, 24),
woosh.Token(woosh.STRING, '"Cannot subclass {}.Annotated"', 1267, 12, 1267, 42),
woosh.Token(woosh.OP, '.', 1267, 42, 1267, 43),
woosh.Token(woosh.NAME, 'format', 1267, 43, 1267, 49),
woosh.Token(woosh.OP, '(', 1267, 49, 1267, 50),
woosh.Token(woosh.NAME, 'cls', 1267, 50, 1267, 53),
woosh.Token(woosh.OP, '.', 1267, 53, 1267, 54),
woosh.Token(woosh.NAME, '__module__', 1267, 54, 1267, 64),
woosh.Token(woosh.OP, ')', 1267, 64, 1267, 65),
woosh.Token(woosh.OP, ')', 1268, 8, 1268, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1268, 9, 1269, 0),
woosh.Token(woosh.DEDENT, '', 1271, 0, 1271, 0),
woosh.Token(woosh.DEDENT, '', 1271, 0, 1271, 0),
woosh.Token(woosh.NAME, 'def', 1271, 0, 1271, 3),
woosh.Token(woosh.NAME, 'runtime_checkable', 1271, 4, 1271, 21),
woosh.Token(woosh.OP, '(', 1271, 21, 1271, 22),
woosh.Token(woosh.NAME, 'cls', 1271, 22, 1271, 25),
woosh.Token(woosh.OP, ')', 1271, 25, 1271, 26),
woosh.Token(woosh.OP, ':', 1271, 26, 1271, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1271, 27, 1272, 0),
woosh.Token(woosh.INDENT, '    ', 1272, 0, 1272, 4),
woosh.Token(woosh.STRING, '"""Mark a protocol class as a runtime protocol.\r\n\r\n    Such protocol can be used with isinstance() and issubclass().\r\n    Raise TypeError if applied to a non-protocol class.\r\n    This allows a simple-minded structural check very similar to\r\n    one trick ponies in collections.abc such as Iterable.\r\n    For example::\r\n\r\n        @runtime_checkable\r\n        class Closable(Protocol):\r\n            def close(self): ...\r\n\r\n        assert isinstance(open(\'/some/file\'), Closable)\r\n\r\n    Warning: this will check only the presence of the required methods,\r\n    not their type signatures!\r\n    """', 1272, 4, 1288, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1288, 7, 1289, 0),
woosh.Token(woosh.NAME, 'if', 1289, 4, 1289, 6),
woosh.Token(woosh.NAME, 'not', 1289, 7, 1289, 10),
woosh.Token(woosh.NAME, 'issubclass', 1289, 11, 1289, 21),
woosh.Token(woosh.OP, '(', 1289, 21, 1289, 22),
woosh.Token(woosh.NAME, 'cls', 1289, 22, 1289, 25),
woosh.Token(woosh.OP, ',', 1289, 25, 1289, 26),
woosh.Token(woosh.NAME, 'Generic', 1289, 27, 1289, 34),
woosh.Token(woosh.OP, ')', 1289, 34, 1289, 35),
woosh.Token(woosh.NAME, 'or', 1289, 36, 1289, 38),
woosh.Token(woosh.NAME, 'not', 1289, 39, 1289, 42),
woosh.Token(woosh.NAME, 'cls', 1289, 43, 1289, 46),
woosh.Token(woosh.OP, '.', 1289, 46, 1289, 47),
woosh.Token(woosh.NAME, '_is_protocol', 1289, 47, 1289, 59),
woosh.Token(woosh.OP, ':', 1289, 59, 1289, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1289, 60, 1290, 0),
woosh.Token(woosh.INDENT, '        ', 1290, 0, 1290, 8),
woosh.Token(woosh.NAME, 'raise', 1290, 8, 1290, 13),
woosh.Token(woosh.NAME, 'TypeError', 1290, 14, 1290, 23),
woosh.Token(woosh.OP, '(', 1290, 23, 1290, 24),
woosh.Token(woosh.STRING, "'@runtime_checkable can be only applied to protocol classes,'", 1290, 24, 1290, 85),
woosh.Token(woosh.STRING, "' got %r'", 1291, 24, 1291, 33),
woosh.Token(woosh.OP, '%', 1291, 34, 1291, 35),
woosh.Token(woosh.NAME, 'cls', 1291, 36, 1291, 39),
woosh.Token(woosh.OP, ')', 1291, 39, 1291, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1291, 40, 1292, 0),
woosh.Token(woosh.DEDENT, '    ', 1292, 0, 1292, 4),
woosh.Token(woosh.NAME, 'cls', 1292, 4, 1292, 7),
woosh.Token(woosh.OP, '.', 1292, 7, 1292, 8),
woosh.Token(woosh.NAME, '_is_runtime_protocol', 1292, 8, 1292, 28),
woosh.Token(woosh.OP, '=', 1292, 29, 1292, 30),
woosh.Token(woosh.NAME, 'True', 1292, 31, 1292, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1292, 35, 1293, 0),
woosh.Token(woosh.NAME, 'return', 1293, 4, 1293, 10),
woosh.Token(woosh.NAME, 'cls', 1293, 11, 1293, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1293, 14, 1294, 0),
woosh.Token(woosh.DEDENT, '', 1296, 0, 1296, 0),
woosh.Token(woosh.NAME, 'def', 1296, 0, 1296, 3),
woosh.Token(woosh.NAME, 'cast', 1296, 4, 1296, 8),
woosh.Token(woosh.OP, '(', 1296, 8, 1296, 9),
woosh.Token(woosh.NAME, 'typ', 1296, 9, 1296, 12),
woosh.Token(woosh.OP, ',', 1296, 12, 1296, 13),
woosh.Token(woosh.NAME, 'val', 1296, 14, 1296, 17),
woosh.Token(woosh.OP, ')', 1296, 17, 1296, 18),
woosh.Token(woosh.OP, ':', 1296, 18, 1296, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1296, 19, 1297, 0),
woosh.Token(woosh.INDENT, '    ', 1297, 0, 1297, 4),
woosh.Token(woosh.STRING, '"""Cast a value to a type.\r\n\r\n    This returns the value unchanged.  To the type checker this\r\n    signals that the return value has the designated type, but at\r\n    runtime we intentionally don\'t check anything (we want this\r\n    to be as fast as possible).\r\n    """', 1297, 4, 1303, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1303, 7, 1304, 0),
woosh.Token(woosh.NAME, 'return', 1304, 4, 1304, 10),
woosh.Token(woosh.NAME, 'val', 1304, 11, 1304, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1304, 14, 1305, 0),
woosh.Token(woosh.DEDENT, '', 1307, 0, 1307, 0),
woosh.Token(woosh.NAME, 'def', 1307, 0, 1307, 3),
woosh.Token(woosh.NAME, '_get_defaults', 1307, 4, 1307, 17),
woosh.Token(woosh.OP, '(', 1307, 17, 1307, 18),
woosh.Token(woosh.NAME, 'func', 1307, 18, 1307, 22),
woosh.Token(woosh.OP, ')', 1307, 22, 1307, 23),
woosh.Token(woosh.OP, ':', 1307, 23, 1307, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1307, 24, 1308, 0),
woosh.Token(woosh.INDENT, '    ', 1308, 0, 1308, 4),
woosh.Token(woosh.STRING, '"""Internal helper to extract the default arguments, by name."""', 1308, 4, 1308, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1308, 68, 1309, 0),
woosh.Token(woosh.NAME, 'try', 1309, 4, 1309, 7),
woosh.Token(woosh.OP, ':', 1309, 7, 1309, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1309, 8, 1310, 0),
woosh.Token(woosh.INDENT, '        ', 1310, 0, 1310, 8),
woosh.Token(woosh.NAME, 'code', 1310, 8, 1310, 12),
woosh.Token(woosh.OP, '=', 1310, 13, 1310, 14),
woosh.Token(woosh.NAME, 'func', 1310, 15, 1310, 19),
woosh.Token(woosh.OP, '.', 1310, 19, 1310, 20),
woosh.Token(woosh.NAME, '__code__', 1310, 20, 1310, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1310, 28, 1311, 0),
woosh.Token(woosh.DEDENT, '    ', 1311, 0, 1311, 4),
woosh.Token(woosh.NAME, 'except', 1311, 4, 1311, 10),
woosh.Token(woosh.NAME, 'AttributeError', 1311, 11, 1311, 25),
woosh.Token(woosh.OP, ':', 1311, 25, 1311, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1311, 26, 1312, 0),
woosh.Token(woosh.COMMENT, "# Some built-in functions don't have __code__, __defaults__, etc.", 1312, 8, 1312, 73),
woosh.Token(woosh.INDENT, '        ', 1313, 0, 1313, 8),
woosh.Token(woosh.NAME, 'return', 1313, 8, 1313, 14),
woosh.Token(woosh.OP, '{', 1313, 15, 1313, 16),
woosh.Token(woosh.OP, '}', 1313, 16, 1313, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1313, 17, 1314, 0),
woosh.Token(woosh.DEDENT, '    ', 1314, 0, 1314, 4),
woosh.Token(woosh.NAME, 'pos_count', 1314, 4, 1314, 13),
woosh.Token(woosh.OP, '=', 1314, 14, 1314, 15),
woosh.Token(woosh.NAME, 'code', 1314, 16, 1314, 20),
woosh.Token(woosh.OP, '.', 1314, 20, 1314, 21),
woosh.Token(woosh.NAME, 'co_argcount', 1314, 21, 1314, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1314, 32, 1315, 0),
woosh.Token(woosh.NAME, 'arg_names', 1315, 4, 1315, 13),
woosh.Token(woosh.OP, '=', 1315, 14, 1315, 15),
woosh.Token(woosh.NAME, 'code', 1315, 16, 1315, 20),
woosh.Token(woosh.OP, '.', 1315, 20, 1315, 21),
woosh.Token(woosh.NAME, 'co_varnames', 1315, 21, 1315, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1315, 32, 1316, 0),
woosh.Token(woosh.NAME, 'arg_names', 1316, 4, 1316, 13),
woosh.Token(woosh.OP, '=', 1316, 14, 1316, 15),
woosh.Token(woosh.NAME, 'arg_names', 1316, 16, 1316, 25),
woosh.Token(woosh.OP, '[', 1316, 25, 1316, 26),
woosh.Token(woosh.OP, ':', 1316, 26, 1316, 27),
woosh.Token(woosh.NAME, 'pos_count', 1316, 27, 1316, 36),
woosh.Token(woosh.OP, ']', 1316, 36, 1316, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1316, 37, 1317, 0),
woosh.Token(woosh.NAME, 'defaults', 1317, 4, 1317, 12),
woosh.Token(woosh.OP, '=', 1317, 13, 1317, 14),
woosh.Token(woosh.NAME, 'func', 1317, 15, 1317, 19),
woosh.Token(woosh.OP, '.', 1317, 19, 1317, 20),
woosh.Token(woosh.NAME, '__defaults__', 1317, 20, 1317, 32),
woosh.Token(woosh.NAME, 'or', 1317, 33, 1317, 35),
woosh.Token(woosh.OP, '(', 1317, 36, 1317, 37),
woosh.Token(woosh.OP, ')', 1317, 37, 1317, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1317, 38, 1318, 0),
woosh.Token(woosh.NAME, 'kwdefaults', 1318, 4, 1318, 14),
woosh.Token(woosh.OP, '=', 1318, 15, 1318, 16),
woosh.Token(woosh.NAME, 'func', 1318, 17, 1318, 21),
woosh.Token(woosh.OP, '.', 1318, 21, 1318, 22),
woosh.Token(woosh.NAME, '__kwdefaults__', 1318, 22, 1318, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1318, 36, 1319, 0),
woosh.Token(woosh.NAME, 'res', 1319, 4, 1319, 7),
woosh.Token(woosh.OP, '=', 1319, 8, 1319, 9),
woosh.Token(woosh.NAME, 'dict', 1319, 10, 1319, 14),
woosh.Token(woosh.OP, '(', 1319, 14, 1319, 15),
woosh.Token(woosh.NAME, 'kwdefaults', 1319, 15, 1319, 25),
woosh.Token(woosh.OP, ')', 1319, 25, 1319, 26),
woosh.Token(woosh.NAME, 'if', 1319, 27, 1319, 29),
woosh.Token(woosh.NAME, 'kwdefaults', 1319, 30, 1319, 40),
woosh.Token(woosh.NAME, 'else', 1319, 41, 1319, 45),
woosh.Token(woosh.OP, '{', 1319, 46, 1319, 47),
woosh.Token(woosh.OP, '}', 1319, 47, 1319, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1319, 48, 1320, 0),
woosh.Token(woosh.NAME, 'pos_offset', 1320, 4, 1320, 14),
woosh.Token(woosh.OP, '=', 1320, 15, 1320, 16),
woosh.Token(woosh.NAME, 'pos_count', 1320, 17, 1320, 26),
woosh.Token(woosh.OP, '-', 1320, 27, 1320, 28),
woosh.Token(woosh.NAME, 'len', 1320, 29, 1320, 32),
woosh.Token(woosh.OP, '(', 1320, 32, 1320, 33),
woosh.Token(woosh.NAME, 'defaults', 1320, 33, 1320, 41),
woosh.Token(woosh.OP, ')', 1320, 41, 1320, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1320, 42, 1321, 0),
woosh.Token(woosh.NAME, 'for', 1321, 4, 1321, 7),
woosh.Token(woosh.NAME, 'name', 1321, 8, 1321, 12),
woosh.Token(woosh.OP, ',', 1321, 12, 1321, 13),
woosh.Token(woosh.NAME, 'value', 1321, 14, 1321, 19),
woosh.Token(woosh.NAME, 'in', 1321, 20, 1321, 22),
woosh.Token(woosh.NAME, 'zip', 1321, 23, 1321, 26),
woosh.Token(woosh.OP, '(', 1321, 26, 1321, 27),
woosh.Token(woosh.NAME, 'arg_names', 1321, 27, 1321, 36),
woosh.Token(woosh.OP, '[', 1321, 36, 1321, 37),
woosh.Token(woosh.NAME, 'pos_offset', 1321, 37, 1321, 47),
woosh.Token(woosh.OP, ':', 1321, 47, 1321, 48),
woosh.Token(woosh.OP, ']', 1321, 48, 1321, 49),
woosh.Token(woosh.OP, ',', 1321, 49, 1321, 50),
woosh.Token(woosh.NAME, 'defaults', 1321, 51, 1321, 59),
woosh.Token(woosh.OP, ')', 1321, 59, 1321, 60),
woosh.Token(woosh.OP, ':', 1321, 60, 1321, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1321, 61, 1322, 0),
woosh.Token(woosh.INDENT, '        ', 1322, 0, 1322, 8),
woosh.Token(woosh.NAME, 'assert', 1322, 8, 1322, 14),
woosh.Token(woosh.NAME, 'name', 1322, 15, 1322, 19),
woosh.Token(woosh.NAME, 'not', 1322, 20, 1322, 23),
woosh.Token(woosh.NAME, 'in', 1322, 24, 1322, 26),
woosh.Token(woosh.NAME, 'res', 1322, 27, 1322, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1322, 30, 1323, 0),
woosh.Token(woosh.NAME, 'res', 1323, 8, 1323, 11),
woosh.Token(woosh.OP, '[', 1323, 11, 1323, 12),
woosh.Token(woosh.NAME, 'name', 1323, 12, 1323, 16),
woosh.Token(woosh.OP, ']', 1323, 16, 1323, 17),
woosh.Token(woosh.OP, '=', 1323, 18, 1323, 19),
woosh.Token(woosh.NAME, 'value', 1323, 20, 1323, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1323, 25, 1324, 0),
woosh.Token(woosh.DEDENT, '    ', 1324, 0, 1324, 4),
woosh.Token(woosh.NAME, 'return', 1324, 4, 1324, 10),
woosh.Token(woosh.NAME, 'res', 1324, 11, 1324, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1324, 14, 1325, 0),
woosh.Token(woosh.DEDENT, '', 1327, 0, 1327, 0),
woosh.Token(woosh.NAME, '_allowed_types', 1327, 0, 1327, 14),
woosh.Token(woosh.OP, '=', 1327, 15, 1327, 16),
woosh.Token(woosh.OP, '(', 1327, 17, 1327, 18),
woosh.Token(woosh.NAME, 'types', 1327, 18, 1327, 23),
woosh.Token(woosh.OP, '.', 1327, 23, 1327, 24),
woosh.Token(woosh.NAME, 'FunctionType', 1327, 24, 1327, 36),
woosh.Token(woosh.OP, ',', 1327, 36, 1327, 37),
woosh.Token(woosh.NAME, 'types', 1327, 38, 1327, 43),
woosh.Token(woosh.OP, '.', 1327, 43, 1327, 44),
woosh.Token(woosh.NAME, 'BuiltinFunctionType', 1327, 44, 1327, 63),
woosh.Token(woosh.OP, ',', 1327, 63, 1327, 64),
woosh.Token(woosh.NAME, 'types', 1328, 18, 1328, 23),
woosh.Token(woosh.OP, '.', 1328, 23, 1328, 24),
woosh.Token(woosh.NAME, 'MethodType', 1328, 24, 1328, 34),
woosh.Token(woosh.OP, ',', 1328, 34, 1328, 35),
woosh.Token(woosh.NAME, 'types', 1328, 36, 1328, 41),
woosh.Token(woosh.OP, '.', 1328, 41, 1328, 42),
woosh.Token(woosh.NAME, 'ModuleType', 1328, 42, 1328, 52),
woosh.Token(woosh.OP, ',', 1328, 52, 1328, 53),
woosh.Token(woosh.NAME, 'WrapperDescriptorType', 1329, 18, 1329, 39),
woosh.Token(woosh.OP, ',', 1329, 39, 1329, 40),
woosh.Token(woosh.NAME, 'MethodWrapperType', 1329, 41, 1329, 58),
woosh.Token(woosh.OP, ',', 1329, 58, 1329, 59),
woosh.Token(woosh.NAME, 'MethodDescriptorType', 1329, 60, 1329, 80),
woosh.Token(woosh.OP, ')', 1329, 80, 1329, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 1329, 81, 1330, 0),
woosh.Token(woosh.NAME, 'def', 1332, 0, 1332, 3),
woosh.Token(woosh.NAME, 'get_type_hints', 1332, 4, 1332, 18),
woosh.Token(woosh.OP, '(', 1332, 18, 1332, 19),
woosh.Token(woosh.NAME, 'obj', 1332, 19, 1332, 22),
woosh.Token(woosh.OP, ',', 1332, 22, 1332, 23),
woosh.Token(woosh.NAME, 'globalns', 1332, 24, 1332, 32),
woosh.Token(woosh.OP, '=', 1332, 32, 1332, 33),
woosh.Token(woosh.NAME, 'None', 1332, 33, 1332, 37),
woosh.Token(woosh.OP, ',', 1332, 37, 1332, 38),
woosh.Token(woosh.NAME, 'localns', 1332, 39, 1332, 46),
woosh.Token(woosh.OP, '=', 1332, 46, 1332, 47),
woosh.Token(woosh.NAME, 'None', 1332, 47, 1332, 51),
woosh.Token(woosh.OP, ',', 1332, 51, 1332, 52),
woosh.Token(woosh.NAME, 'include_extras', 1332, 53, 1332, 67),
woosh.Token(woosh.OP, '=', 1332, 67, 1332, 68),
woosh.Token(woosh.NAME, 'False', 1332, 68, 1332, 73),
woosh.Token(woosh.OP, ')', 1332, 73, 1332, 74),
woosh.Token(woosh.OP, ':', 1332, 74, 1332, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1332, 75, 1333, 0),
woosh.Token(woosh.INDENT, '    ', 1333, 0, 1333, 4),
woosh.Token(woosh.STRING, '"""Return type hints for an object.\r\n\r\n    This is often the same as obj.__annotations__, but it handles\r\n    forward references encoded as string literals, adds Optional[t] if a\r\n    default value equal to None is set and recursively replaces all\r\n    \'Annotated[T, ...]\' with \'T\' (unless \'include_extras=True\').\r\n\r\n    The argument may be a module, class, method, or function. The annotations\r\n    are returned as a dictionary. For classes, annotations include also\r\n    inherited members.\r\n\r\n    TypeError is raised if the argument is not of a type that can contain\r\n    annotations, and an empty dictionary is returned if no annotations are\r\n    present.\r\n\r\n    BEWARE -- the behavior of globalns and localns is counterintuitive\r\n    (unless you are familiar with how eval() and exec() work).  The\r\n    search order is locals first, then globals.\r\n\r\n    - If no dict arguments are passed, an attempt is made to use the\r\n      globals from obj (or the respective module\'s globals for classes),\r\n      and these are also used as the locals.  If the object does not appear\r\n      to have globals, an empty dictionary is used.\r\n\r\n    - If one dict argument is passed, it is used for both globals and\r\n      locals.\r\n\r\n    - If two dict arguments are passed, they specify globals and\r\n      locals, respectively.\r\n    """', 1333, 4, 1362, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1362, 7, 1363, 0),
woosh.Token(woosh.NAME, 'if', 1364, 4, 1364, 6),
woosh.Token(woosh.NAME, 'getattr', 1364, 7, 1364, 14),
woosh.Token(woosh.OP, '(', 1364, 14, 1364, 15),
woosh.Token(woosh.NAME, 'obj', 1364, 15, 1364, 18),
woosh.Token(woosh.OP, ',', 1364, 18, 1364, 19),
woosh.Token(woosh.STRING, "'__no_type_check__'", 1364, 20, 1364, 39),
woosh.Token(woosh.OP, ',', 1364, 39, 1364, 40),
woosh.Token(woosh.NAME, 'None', 1364, 41, 1364, 45),
woosh.Token(woosh.OP, ')', 1364, 45, 1364, 46),
woosh.Token(woosh.OP, ':', 1364, 46, 1364, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1364, 47, 1365, 0),
woosh.Token(woosh.INDENT, '        ', 1365, 0, 1365, 8),
woosh.Token(woosh.NAME, 'return', 1365, 8, 1365, 14),
woosh.Token(woosh.OP, '{', 1365, 15, 1365, 16),
woosh.Token(woosh.OP, '}', 1365, 16, 1365, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1365, 17, 1366, 0),
woosh.Token(woosh.COMMENT, '# Classes require a special treatment.', 1366, 4, 1366, 42),
woosh.Token(woosh.DEDENT, '    ', 1367, 0, 1367, 4),
woosh.Token(woosh.NAME, 'if', 1367, 4, 1367, 6),
woosh.Token(woosh.NAME, 'isinstance', 1367, 7, 1367, 17),
woosh.Token(woosh.OP, '(', 1367, 17, 1367, 18),
woosh.Token(woosh.NAME, 'obj', 1367, 18, 1367, 21),
woosh.Token(woosh.OP, ',', 1367, 21, 1367, 22),
woosh.Token(woosh.NAME, 'type', 1367, 23, 1367, 27),
woosh.Token(woosh.OP, ')', 1367, 27, 1367, 28),
woosh.Token(woosh.OP, ':', 1367, 28, 1367, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1367, 29, 1368, 0),
woosh.Token(woosh.INDENT, '        ', 1368, 0, 1368, 8),
woosh.Token(woosh.NAME, 'hints', 1368, 8, 1368, 13),
woosh.Token(woosh.OP, '=', 1368, 14, 1368, 15),
woosh.Token(woosh.OP, '{', 1368, 16, 1368, 17),
woosh.Token(woosh.OP, '}', 1368, 17, 1368, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1368, 18, 1369, 0),
woosh.Token(woosh.NAME, 'for', 1369, 8, 1369, 11),
woosh.Token(woosh.NAME, 'base', 1369, 12, 1369, 16),
woosh.Token(woosh.NAME, 'in', 1369, 17, 1369, 19),
woosh.Token(woosh.NAME, 'reversed', 1369, 20, 1369, 28),
woosh.Token(woosh.OP, '(', 1369, 28, 1369, 29),
woosh.Token(woosh.NAME, 'obj', 1369, 29, 1369, 32),
woosh.Token(woosh.OP, '.', 1369, 32, 1369, 33),
woosh.Token(woosh.NAME, '__mro__', 1369, 33, 1369, 40),
woosh.Token(woosh.OP, ')', 1369, 40, 1369, 41),
woosh.Token(woosh.OP, ':', 1369, 41, 1369, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1369, 42, 1370, 0),
woosh.Token(woosh.INDENT, '            ', 1370, 0, 1370, 12),
woosh.Token(woosh.NAME, 'if', 1370, 12, 1370, 14),
woosh.Token(woosh.NAME, 'globalns', 1370, 15, 1370, 23),
woosh.Token(woosh.NAME, 'is', 1370, 24, 1370, 26),
woosh.Token(woosh.NAME, 'None', 1370, 27, 1370, 31),
woosh.Token(woosh.OP, ':', 1370, 31, 1370, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1370, 32, 1371, 0),
woosh.Token(woosh.INDENT, '                ', 1371, 0, 1371, 16),
woosh.Token(woosh.NAME, 'base_globals', 1371, 16, 1371, 28),
woosh.Token(woosh.OP, '=', 1371, 29, 1371, 30),
woosh.Token(woosh.NAME, 'sys', 1371, 31, 1371, 34),
woosh.Token(woosh.OP, '.', 1371, 34, 1371, 35),
woosh.Token(woosh.NAME, 'modules', 1371, 35, 1371, 42),
woosh.Token(woosh.OP, '[', 1371, 42, 1371, 43),
woosh.Token(woosh.NAME, 'base', 1371, 43, 1371, 47),
woosh.Token(woosh.OP, '.', 1371, 47, 1371, 48),
woosh.Token(woosh.NAME, '__module__', 1371, 48, 1371, 58),
woosh.Token(woosh.OP, ']', 1371, 58, 1371, 59),
woosh.Token(woosh.OP, '.', 1371, 59, 1371, 60),
woosh.Token(woosh.NAME, '__dict__', 1371, 60, 1371, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1371, 68, 1372, 0),
woosh.Token(woosh.DEDENT, '            ', 1372, 0, 1372, 12),
woosh.Token(woosh.NAME, 'else', 1372, 12, 1372, 16),
woosh.Token(woosh.OP, ':', 1372, 16, 1372, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1372, 17, 1373, 0),
woosh.Token(woosh.INDENT, '                ', 1373, 0, 1373, 16),
woosh.Token(woosh.NAME, 'base_globals', 1373, 16, 1373, 28),
woosh.Token(woosh.OP, '=', 1373, 29, 1373, 30),
woosh.Token(woosh.NAME, 'globalns', 1373, 31, 1373, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1373, 39, 1374, 0),
woosh.Token(woosh.DEDENT, '            ', 1374, 0, 1374, 12),
woosh.Token(woosh.NAME, 'ann', 1374, 12, 1374, 15),
woosh.Token(woosh.OP, '=', 1374, 16, 1374, 17),
woosh.Token(woosh.NAME, 'base', 1374, 18, 1374, 22),
woosh.Token(woosh.OP, '.', 1374, 22, 1374, 23),
woosh.Token(woosh.NAME, '__dict__', 1374, 23, 1374, 31),
woosh.Token(woosh.OP, '.', 1374, 31, 1374, 32),
woosh.Token(woosh.NAME, 'get', 1374, 32, 1374, 35),
woosh.Token(woosh.OP, '(', 1374, 35, 1374, 36),
woosh.Token(woosh.STRING, "'__annotations__'", 1374, 36, 1374, 53),
woosh.Token(woosh.OP, ',', 1374, 53, 1374, 54),
woosh.Token(woosh.OP, '{', 1374, 55, 1374, 56),
woosh.Token(woosh.OP, '}', 1374, 56, 1374, 57),
woosh.Token(woosh.OP, ')', 1374, 57, 1374, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1374, 58, 1375, 0),
woosh.Token(woosh.NAME, 'for', 1375, 12, 1375, 15),
woosh.Token(woosh.NAME, 'name', 1375, 16, 1375, 20),
woosh.Token(woosh.OP, ',', 1375, 20, 1375, 21),
woosh.Token(woosh.NAME, 'value', 1375, 22, 1375, 27),
woosh.Token(woosh.NAME, 'in', 1375, 28, 1375, 30),
woosh.Token(woosh.NAME, 'ann', 1375, 31, 1375, 34),
woosh.Token(woosh.OP, '.', 1375, 34, 1375, 35),
woosh.Token(woosh.NAME, 'items', 1375, 35, 1375, 40),
woosh.Token(woosh.OP, '(', 1375, 40, 1375, 41),
woosh.Token(woosh.OP, ')', 1375, 41, 1375, 42),
woosh.Token(woosh.OP, ':', 1375, 42, 1375, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1375, 43, 1376, 0),
woosh.Token(woosh.INDENT, '                ', 1376, 0, 1376, 16),
woosh.Token(woosh.NAME, 'if', 1376, 16, 1376, 18),
woosh.Token(woosh.NAME, 'value', 1376, 19, 1376, 24),
woosh.Token(woosh.NAME, 'is', 1376, 25, 1376, 27),
woosh.Token(woosh.NAME, 'None', 1376, 28, 1376, 32),
woosh.Token(woosh.OP, ':', 1376, 32, 1376, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1376, 33, 1377, 0),
woosh.Token(woosh.INDENT, '                    ', 1377, 0, 1377, 20),
woosh.Token(woosh.NAME, 'value', 1377, 20, 1377, 25),
woosh.Token(woosh.OP, '=', 1377, 26, 1377, 27),
woosh.Token(woosh.NAME, 'type', 1377, 28, 1377, 32),
woosh.Token(woosh.OP, '(', 1377, 32, 1377, 33),
woosh.Token(woosh.NAME, 'None', 1377, 33, 1377, 37),
woosh.Token(woosh.OP, ')', 1377, 37, 1377, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1377, 38, 1378, 0),
woosh.Token(woosh.DEDENT, '                ', 1378, 0, 1378, 16),
woosh.Token(woosh.NAME, 'if', 1378, 16, 1378, 18),
woosh.Token(woosh.NAME, 'isinstance', 1378, 19, 1378, 29),
woosh.Token(woosh.OP, '(', 1378, 29, 1378, 30),
woosh.Token(woosh.NAME, 'value', 1378, 30, 1378, 35),
woosh.Token(woosh.OP, ',', 1378, 35, 1378, 36),
woosh.Token(woosh.NAME, 'str', 1378, 37, 1378, 40),
woosh.Token(woosh.OP, ')', 1378, 40, 1378, 41),
woosh.Token(woosh.OP, ':', 1378, 41, 1378, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1378, 42, 1379, 0),
woosh.Token(woosh.INDENT, '                    ', 1379, 0, 1379, 20),
woosh.Token(woosh.NAME, 'value', 1379, 20, 1379, 25),
woosh.Token(woosh.OP, '=', 1379, 26, 1379, 27),
woosh.Token(woosh.NAME, 'ForwardRef', 1379, 28, 1379, 38),
woosh.Token(woosh.OP, '(', 1379, 38, 1379, 39),
woosh.Token(woosh.NAME, 'value', 1379, 39, 1379, 44),
woosh.Token(woosh.OP, ',', 1379, 44, 1379, 45),
woosh.Token(woosh.NAME, 'is_argument', 1379, 46, 1379, 57),
woosh.Token(woosh.OP, '=', 1379, 57, 1379, 58),
woosh.Token(woosh.NAME, 'False', 1379, 58, 1379, 63),
woosh.Token(woosh.OP, ')', 1379, 63, 1379, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1379, 64, 1380, 0),
woosh.Token(woosh.DEDENT, '                ', 1380, 0, 1380, 16),
woosh.Token(woosh.NAME, 'value', 1380, 16, 1380, 21),
woosh.Token(woosh.OP, '=', 1380, 22, 1380, 23),
woosh.Token(woosh.NAME, '_eval_type', 1380, 24, 1380, 34),
woosh.Token(woosh.OP, '(', 1380, 34, 1380, 35),
woosh.Token(woosh.NAME, 'value', 1380, 35, 1380, 40),
woosh.Token(woosh.OP, ',', 1380, 40, 1380, 41),
woosh.Token(woosh.NAME, 'base_globals', 1380, 42, 1380, 54),
woosh.Token(woosh.OP, ',', 1380, 54, 1380, 55),
woosh.Token(woosh.NAME, 'localns', 1380, 56, 1380, 63),
woosh.Token(woosh.OP, ')', 1380, 63, 1380, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1380, 64, 1381, 0),
woosh.Token(woosh.NAME, 'hints', 1381, 16, 1381, 21),
woosh.Token(woosh.OP, '[', 1381, 21, 1381, 22),
woosh.Token(woosh.NAME, 'name', 1381, 22, 1381, 26),
woosh.Token(woosh.OP, ']', 1381, 26, 1381, 27),
woosh.Token(woosh.OP, '=', 1381, 28, 1381, 29),
woosh.Token(woosh.NAME, 'value', 1381, 30, 1381, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1381, 35, 1382, 0),
woosh.Token(woosh.DEDENT, '        ', 1382, 0, 1382, 8),
woosh.Token(woosh.DEDENT, '', 1382, 8, 1382, 8),
woosh.Token(woosh.NAME, 'return', 1382, 8, 1382, 14),
woosh.Token(woosh.NAME, 'hints', 1382, 15, 1382, 20),
woosh.Token(woosh.NAME, 'if', 1382, 21, 1382, 23),
woosh.Token(woosh.NAME, 'include_extras', 1382, 24, 1382, 38),
woosh.Token(woosh.NAME, 'else', 1382, 39, 1382, 43),
woosh.Token(woosh.OP, '{', 1382, 44, 1382, 45),
woosh.Token(woosh.NAME, 'k', 1382, 45, 1382, 46),
woosh.Token(woosh.OP, ':', 1382, 46, 1382, 47),
woosh.Token(woosh.NAME, '_strip_annotations', 1382, 48, 1382, 66),
woosh.Token(woosh.OP, '(', 1382, 66, 1382, 67),
woosh.Token(woosh.NAME, 't', 1382, 67, 1382, 68),
woosh.Token(woosh.OP, ')', 1382, 68, 1382, 69),
woosh.Token(woosh.NAME, 'for', 1382, 70, 1382, 73),
woosh.Token(woosh.NAME, 'k', 1382, 74, 1382, 75),
woosh.Token(woosh.OP, ',', 1382, 75, 1382, 76),
woosh.Token(woosh.NAME, 't', 1382, 77, 1382, 78),
woosh.Token(woosh.NAME, 'in', 1382, 79, 1382, 81),
woosh.Token(woosh.NAME, 'hints', 1382, 82, 1382, 87),
woosh.Token(woosh.OP, '.', 1382, 87, 1382, 88),
woosh.Token(woosh.NAME, 'items', 1382, 88, 1382, 93),
woosh.Token(woosh.OP, '(', 1382, 93, 1382, 94),
woosh.Token(woosh.OP, ')', 1382, 94, 1382, 95),
woosh.Token(woosh.OP, '}', 1382, 95, 1382, 96),
woosh.Token(woosh.NEWLINE, '\r\n', 1382, 96, 1383, 0),
woosh.Token(woosh.DEDENT, '    ', 1384, 0, 1384, 4),
woosh.Token(woosh.NAME, 'if', 1384, 4, 1384, 6),
woosh.Token(woosh.NAME, 'globalns', 1384, 7, 1384, 15),
woosh.Token(woosh.NAME, 'is', 1384, 16, 1384, 18),
woosh.Token(woosh.NAME, 'None', 1384, 19, 1384, 23),
woosh.Token(woosh.OP, ':', 1384, 23, 1384, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1384, 24, 1385, 0),
woosh.Token(woosh.INDENT, '        ', 1385, 0, 1385, 8),
woosh.Token(woosh.NAME, 'if', 1385, 8, 1385, 10),
woosh.Token(woosh.NAME, 'isinstance', 1385, 11, 1385, 21),
woosh.Token(woosh.OP, '(', 1385, 21, 1385, 22),
woosh.Token(woosh.NAME, 'obj', 1385, 22, 1385, 25),
woosh.Token(woosh.OP, ',', 1385, 25, 1385, 26),
woosh.Token(woosh.NAME, 'types', 1385, 27, 1385, 32),
woosh.Token(woosh.OP, '.', 1385, 32, 1385, 33),
woosh.Token(woosh.NAME, 'ModuleType', 1385, 33, 1385, 43),
woosh.Token(woosh.OP, ')', 1385, 43, 1385, 44),
woosh.Token(woosh.OP, ':', 1385, 44, 1385, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1385, 45, 1386, 0),
woosh.Token(woosh.INDENT, '            ', 1386, 0, 1386, 12),
woosh.Token(woosh.NAME, 'globalns', 1386, 12, 1386, 20),
woosh.Token(woosh.OP, '=', 1386, 21, 1386, 22),
woosh.Token(woosh.NAME, 'obj', 1386, 23, 1386, 26),
woosh.Token(woosh.OP, '.', 1386, 26, 1386, 27),
woosh.Token(woosh.NAME, '__dict__', 1386, 27, 1386, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1386, 35, 1387, 0),
woosh.Token(woosh.DEDENT, '        ', 1387, 0, 1387, 8),
woosh.Token(woosh.NAME, 'else', 1387, 8, 1387, 12),
woosh.Token(woosh.OP, ':', 1387, 12, 1387, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1387, 13, 1388, 0),
woosh.Token(woosh.INDENT, '            ', 1388, 0, 1388, 12),
woosh.Token(woosh.NAME, 'nsobj', 1388, 12, 1388, 17),
woosh.Token(woosh.OP, '=', 1388, 18, 1388, 19),
woosh.Token(woosh.NAME, 'obj', 1388, 20, 1388, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1388, 23, 1389, 0),
woosh.Token(woosh.COMMENT, '# Find globalns for the unwrapped object.', 1389, 12, 1389, 53),
woosh.Token(woosh.NAME, 'while', 1390, 12, 1390, 17),
woosh.Token(woosh.NAME, 'hasattr', 1390, 18, 1390, 25),
woosh.Token(woosh.OP, '(', 1390, 25, 1390, 26),
woosh.Token(woosh.NAME, 'nsobj', 1390, 26, 1390, 31),
woosh.Token(woosh.OP, ',', 1390, 31, 1390, 32),
woosh.Token(woosh.STRING, "'__wrapped__'", 1390, 33, 1390, 46),
woosh.Token(woosh.OP, ')', 1390, 46, 1390, 47),
woosh.Token(woosh.OP, ':', 1390, 47, 1390, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1390, 48, 1391, 0),
woosh.Token(woosh.INDENT, '                ', 1391, 0, 1391, 16),
woosh.Token(woosh.NAME, 'nsobj', 1391, 16, 1391, 21),
woosh.Token(woosh.OP, '=', 1391, 22, 1391, 23),
woosh.Token(woosh.NAME, 'nsobj', 1391, 24, 1391, 29),
woosh.Token(woosh.OP, '.', 1391, 29, 1391, 30),
woosh.Token(woosh.NAME, '__wrapped__', 1391, 30, 1391, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1391, 41, 1392, 0),
woosh.Token(woosh.DEDENT, '            ', 1392, 0, 1392, 12),
woosh.Token(woosh.NAME, 'globalns', 1392, 12, 1392, 20),
woosh.Token(woosh.OP, '=', 1392, 21, 1392, 22),
woosh.Token(woosh.NAME, 'getattr', 1392, 23, 1392, 30),
woosh.Token(woosh.OP, '(', 1392, 30, 1392, 31),
woosh.Token(woosh.NAME, 'nsobj', 1392, 31, 1392, 36),
woosh.Token(woosh.OP, ',', 1392, 36, 1392, 37),
woosh.Token(woosh.STRING, "'__globals__'", 1392, 38, 1392, 51),
woosh.Token(woosh.OP, ',', 1392, 51, 1392, 52),
woosh.Token(woosh.OP, '{', 1392, 53, 1392, 54),
woosh.Token(woosh.OP, '}', 1392, 54, 1392, 55),
woosh.Token(woosh.OP, ')', 1392, 55, 1392, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1392, 56, 1393, 0),
woosh.Token(woosh.DEDENT, '        ', 1393, 0, 1393, 8),
woosh.Token(woosh.NAME, 'if', 1393, 8, 1393, 10),
woosh.Token(woosh.NAME, 'localns', 1393, 11, 1393, 18),
woosh.Token(woosh.NAME, 'is', 1393, 19, 1393, 21),
woosh.Token(woosh.NAME, 'None', 1393, 22, 1393, 26),
woosh.Token(woosh.OP, ':', 1393, 26, 1393, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1393, 27, 1394, 0),
woosh.Token(woosh.INDENT, '            ', 1394, 0, 1394, 12),
woosh.Token(woosh.NAME, 'localns', 1394, 12, 1394, 19),
woosh.Token(woosh.OP, '=', 1394, 20, 1394, 21),
woosh.Token(woosh.NAME, 'globalns', 1394, 22, 1394, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1394, 30, 1395, 0),
woosh.Token(woosh.DEDENT, '    ', 1395, 0, 1395, 4),
woosh.Token(woosh.DEDENT, '', 1395, 4, 1395, 4),
woosh.Token(woosh.NAME, 'elif', 1395, 4, 1395, 8),
woosh.Token(woosh.NAME, 'localns', 1395, 9, 1395, 16),
woosh.Token(woosh.NAME, 'is', 1395, 17, 1395, 19),
woosh.Token(woosh.NAME, 'None', 1395, 20, 1395, 24),
woosh.Token(woosh.OP, ':', 1395, 24, 1395, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1395, 25, 1396, 0),
woosh.Token(woosh.INDENT, '        ', 1396, 0, 1396, 8),
woosh.Token(woosh.NAME, 'localns', 1396, 8, 1396, 15),
woosh.Token(woosh.OP, '=', 1396, 16, 1396, 17),
woosh.Token(woosh.NAME, 'globalns', 1396, 18, 1396, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1396, 26, 1397, 0),
woosh.Token(woosh.DEDENT, '    ', 1397, 0, 1397, 4),
woosh.Token(woosh.NAME, 'hints', 1397, 4, 1397, 9),
woosh.Token(woosh.OP, '=', 1397, 10, 1397, 11),
woosh.Token(woosh.NAME, 'getattr', 1397, 12, 1397, 19),
woosh.Token(woosh.OP, '(', 1397, 19, 1397, 20),
woosh.Token(woosh.NAME, 'obj', 1397, 20, 1397, 23),
woosh.Token(woosh.OP, ',', 1397, 23, 1397, 24),
woosh.Token(woosh.STRING, "'__annotations__'", 1397, 25, 1397, 42),
woosh.Token(woosh.OP, ',', 1397, 42, 1397, 43),
woosh.Token(woosh.NAME, 'None', 1397, 44, 1397, 48),
woosh.Token(woosh.OP, ')', 1397, 48, 1397, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1397, 49, 1398, 0),
woosh.Token(woosh.NAME, 'if', 1398, 4, 1398, 6),
woosh.Token(woosh.NAME, 'hints', 1398, 7, 1398, 12),
woosh.Token(woosh.NAME, 'is', 1398, 13, 1398, 15),
woosh.Token(woosh.NAME, 'None', 1398, 16, 1398, 20),
woosh.Token(woosh.OP, ':', 1398, 20, 1398, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1398, 21, 1399, 0),
woosh.Token(woosh.COMMENT, '# Return empty annotations for something that _could_ have them.', 1399, 8, 1399, 72),
woosh.Token(woosh.INDENT, '        ', 1400, 0, 1400, 8),
woosh.Token(woosh.NAME, 'if', 1400, 8, 1400, 10),
woosh.Token(woosh.NAME, 'isinstance', 1400, 11, 1400, 21),
woosh.Token(woosh.OP, '(', 1400, 21, 1400, 22),
woosh.Token(woosh.NAME, 'obj', 1400, 22, 1400, 25),
woosh.Token(woosh.OP, ',', 1400, 25, 1400, 26),
woosh.Token(woosh.NAME, '_allowed_types', 1400, 27, 1400, 41),
woosh.Token(woosh.OP, ')', 1400, 41, 1400, 42),
woosh.Token(woosh.OP, ':', 1400, 42, 1400, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1400, 43, 1401, 0),
woosh.Token(woosh.INDENT, '            ', 1401, 0, 1401, 12),
woosh.Token(woosh.NAME, 'return', 1401, 12, 1401, 18),
woosh.Token(woosh.OP, '{', 1401, 19, 1401, 20),
woosh.Token(woosh.OP, '}', 1401, 20, 1401, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1401, 21, 1402, 0),
woosh.Token(woosh.DEDENT, '        ', 1402, 0, 1402, 8),
woosh.Token(woosh.NAME, 'else', 1402, 8, 1402, 12),
woosh.Token(woosh.OP, ':', 1402, 12, 1402, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1402, 13, 1403, 0),
woosh.Token(woosh.INDENT, '            ', 1403, 0, 1403, 12),
woosh.Token(woosh.NAME, 'raise', 1403, 12, 1403, 17),
woosh.Token(woosh.NAME, 'TypeError', 1403, 18, 1403, 27),
woosh.Token(woosh.OP, '(', 1403, 27, 1403, 28),
woosh.Token(woosh.STRING, "'{!r} is not a module, class, method, '", 1403, 28, 1403, 67),
woosh.Token(woosh.STRING, "'or function.'", 1404, 28, 1404, 42),
woosh.Token(woosh.OP, '.', 1404, 42, 1404, 43),
woosh.Token(woosh.NAME, 'format', 1404, 43, 1404, 49),
woosh.Token(woosh.OP, '(', 1404, 49, 1404, 50),
woosh.Token(woosh.NAME, 'obj', 1404, 50, 1404, 53),
woosh.Token(woosh.OP, ')', 1404, 53, 1404, 54),
woosh.Token(woosh.OP, ')', 1404, 54, 1404, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1404, 55, 1405, 0),
woosh.Token(woosh.DEDENT, '    ', 1405, 0, 1405, 4),
woosh.Token(woosh.DEDENT, '', 1405, 4, 1405, 4),
woosh.Token(woosh.NAME, 'defaults', 1405, 4, 1405, 12),
woosh.Token(woosh.OP, '=', 1405, 13, 1405, 14),
woosh.Token(woosh.NAME, '_get_defaults', 1405, 15, 1405, 28),
woosh.Token(woosh.OP, '(', 1405, 28, 1405, 29),
woosh.Token(woosh.NAME, 'obj', 1405, 29, 1405, 32),
woosh.Token(woosh.OP, ')', 1405, 32, 1405, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1405, 33, 1406, 0),
woosh.Token(woosh.NAME, 'hints', 1406, 4, 1406, 9),
woosh.Token(woosh.OP, '=', 1406, 10, 1406, 11),
woosh.Token(woosh.NAME, 'dict', 1406, 12, 1406, 16),
woosh.Token(woosh.OP, '(', 1406, 16, 1406, 17),
woosh.Token(woosh.NAME, 'hints', 1406, 17, 1406, 22),
woosh.Token(woosh.OP, ')', 1406, 22, 1406, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1406, 23, 1407, 0),
woosh.Token(woosh.NAME, 'for', 1407, 4, 1407, 7),
woosh.Token(woosh.NAME, 'name', 1407, 8, 1407, 12),
woosh.Token(woosh.OP, ',', 1407, 12, 1407, 13),
woosh.Token(woosh.NAME, 'value', 1407, 14, 1407, 19),
woosh.Token(woosh.NAME, 'in', 1407, 20, 1407, 22),
woosh.Token(woosh.NAME, 'hints', 1407, 23, 1407, 28),
woosh.Token(woosh.OP, '.', 1407, 28, 1407, 29),
woosh.Token(woosh.NAME, 'items', 1407, 29, 1407, 34),
woosh.Token(woosh.OP, '(', 1407, 34, 1407, 35),
woosh.Token(woosh.OP, ')', 1407, 35, 1407, 36),
woosh.Token(woosh.OP, ':', 1407, 36, 1407, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1407, 37, 1408, 0),
woosh.Token(woosh.INDENT, '        ', 1408, 0, 1408, 8),
woosh.Token(woosh.NAME, 'if', 1408, 8, 1408, 10),
woosh.Token(woosh.NAME, 'value', 1408, 11, 1408, 16),
woosh.Token(woosh.NAME, 'is', 1408, 17, 1408, 19),
woosh.Token(woosh.NAME, 'None', 1408, 20, 1408, 24),
woosh.Token(woosh.OP, ':', 1408, 24, 1408, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1408, 25, 1409, 0),
woosh.Token(woosh.INDENT, '            ', 1409, 0, 1409, 12),
woosh.Token(woosh.NAME, 'value', 1409, 12, 1409, 17),
woosh.Token(woosh.OP, '=', 1409, 18, 1409, 19),
woosh.Token(woosh.NAME, 'type', 1409, 20, 1409, 24),
woosh.Token(woosh.OP, '(', 1409, 24, 1409, 25),
woosh.Token(woosh.NAME, 'None', 1409, 25, 1409, 29),
woosh.Token(woosh.OP, ')', 1409, 29, 1409, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1409, 30, 1410, 0),
woosh.Token(woosh.DEDENT, '        ', 1410, 0, 1410, 8),
woosh.Token(woosh.NAME, 'if', 1410, 8, 1410, 10),
woosh.Token(woosh.NAME, 'isinstance', 1410, 11, 1410, 21),
woosh.Token(woosh.OP, '(', 1410, 21, 1410, 22),
woosh.Token(woosh.NAME, 'value', 1410, 22, 1410, 27),
woosh.Token(woosh.OP, ',', 1410, 27, 1410, 28),
woosh.Token(woosh.NAME, 'str', 1410, 29, 1410, 32),
woosh.Token(woosh.OP, ')', 1410, 32, 1410, 33),
woosh.Token(woosh.OP, ':', 1410, 33, 1410, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1410, 34, 1411, 0),
woosh.Token(woosh.INDENT, '            ', 1411, 0, 1411, 12),
woosh.Token(woosh.NAME, 'value', 1411, 12, 1411, 17),
woosh.Token(woosh.OP, '=', 1411, 18, 1411, 19),
woosh.Token(woosh.NAME, 'ForwardRef', 1411, 20, 1411, 30),
woosh.Token(woosh.OP, '(', 1411, 30, 1411, 31),
woosh.Token(woosh.NAME, 'value', 1411, 31, 1411, 36),
woosh.Token(woosh.OP, ')', 1411, 36, 1411, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1411, 37, 1412, 0),
woosh.Token(woosh.DEDENT, '        ', 1412, 0, 1412, 8),
woosh.Token(woosh.NAME, 'value', 1412, 8, 1412, 13),
woosh.Token(woosh.OP, '=', 1412, 14, 1412, 15),
woosh.Token(woosh.NAME, '_eval_type', 1412, 16, 1412, 26),
woosh.Token(woosh.OP, '(', 1412, 26, 1412, 27),
woosh.Token(woosh.NAME, 'value', 1412, 27, 1412, 32),
woosh.Token(woosh.OP, ',', 1412, 32, 1412, 33),
woosh.Token(woosh.NAME, 'globalns', 1412, 34, 1412, 42),
woosh.Token(woosh.OP, ',', 1412, 42, 1412, 43),
woosh.Token(woosh.NAME, 'localns', 1412, 44, 1412, 51),
woosh.Token(woosh.OP, ')', 1412, 51, 1412, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1412, 52, 1413, 0),
woosh.Token(woosh.NAME, 'if', 1413, 8, 1413, 10),
woosh.Token(woosh.NAME, 'name', 1413, 11, 1413, 15),
woosh.Token(woosh.NAME, 'in', 1413, 16, 1413, 18),
woosh.Token(woosh.NAME, 'defaults', 1413, 19, 1413, 27),
woosh.Token(woosh.NAME, 'and', 1413, 28, 1413, 31),
woosh.Token(woosh.NAME, 'defaults', 1413, 32, 1413, 40),
woosh.Token(woosh.OP, '[', 1413, 40, 1413, 41),
woosh.Token(woosh.NAME, 'name', 1413, 41, 1413, 45),
woosh.Token(woosh.OP, ']', 1413, 45, 1413, 46),
woosh.Token(woosh.NAME, 'is', 1413, 47, 1413, 49),
woosh.Token(woosh.NAME, 'None', 1413, 50, 1413, 54),
woosh.Token(woosh.OP, ':', 1413, 54, 1413, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1413, 55, 1414, 0),
woosh.Token(woosh.INDENT, '            ', 1414, 0, 1414, 12),
woosh.Token(woosh.NAME, 'value', 1414, 12, 1414, 17),
woosh.Token(woosh.OP, '=', 1414, 18, 1414, 19),
woosh.Token(woosh.NAME, 'Optional', 1414, 20, 1414, 28),
woosh.Token(woosh.OP, '[', 1414, 28, 1414, 29),
woosh.Token(woosh.NAME, 'value', 1414, 29, 1414, 34),
woosh.Token(woosh.OP, ']', 1414, 34, 1414, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1414, 35, 1415, 0),
woosh.Token(woosh.DEDENT, '        ', 1415, 0, 1415, 8),
woosh.Token(woosh.NAME, 'hints', 1415, 8, 1415, 13),
woosh.Token(woosh.OP, '[', 1415, 13, 1415, 14),
woosh.Token(woosh.NAME, 'name', 1415, 14, 1415, 18),
woosh.Token(woosh.OP, ']', 1415, 18, 1415, 19),
woosh.Token(woosh.OP, '=', 1415, 20, 1415, 21),
woosh.Token(woosh.NAME, 'value', 1415, 22, 1415, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1415, 27, 1416, 0),
woosh.Token(woosh.DEDENT, '    ', 1416, 0, 1416, 4),
woosh.Token(woosh.NAME, 'return', 1416, 4, 1416, 10),
woosh.Token(woosh.NAME, 'hints', 1416, 11, 1416, 16),
woosh.Token(woosh.NAME, 'if', 1416, 17, 1416, 19),
woosh.Token(woosh.NAME, 'include_extras', 1416, 20, 1416, 34),
woosh.Token(woosh.NAME, 'else', 1416, 35, 1416, 39),
woosh.Token(woosh.OP, '{', 1416, 40, 1416, 41),
woosh.Token(woosh.NAME, 'k', 1416, 41, 1416, 42),
woosh.Token(woosh.OP, ':', 1416, 42, 1416, 43),
woosh.Token(woosh.NAME, '_strip_annotations', 1416, 44, 1416, 62),
woosh.Token(woosh.OP, '(', 1416, 62, 1416, 63),
woosh.Token(woosh.NAME, 't', 1416, 63, 1416, 64),
woosh.Token(woosh.OP, ')', 1416, 64, 1416, 65),
woosh.Token(woosh.NAME, 'for', 1416, 66, 1416, 69),
woosh.Token(woosh.NAME, 'k', 1416, 70, 1416, 71),
woosh.Token(woosh.OP, ',', 1416, 71, 1416, 72),
woosh.Token(woosh.NAME, 't', 1416, 73, 1416, 74),
woosh.Token(woosh.NAME, 'in', 1416, 75, 1416, 77),
woosh.Token(woosh.NAME, 'hints', 1416, 78, 1416, 83),
woosh.Token(woosh.OP, '.', 1416, 83, 1416, 84),
woosh.Token(woosh.NAME, 'items', 1416, 84, 1416, 89),
woosh.Token(woosh.OP, '(', 1416, 89, 1416, 90),
woosh.Token(woosh.OP, ')', 1416, 90, 1416, 91),
woosh.Token(woosh.OP, '}', 1416, 91, 1416, 92),
woosh.Token(woosh.NEWLINE, '\r\n', 1416, 92, 1417, 0),
woosh.Token(woosh.DEDENT, '', 1419, 0, 1419, 0),
woosh.Token(woosh.NAME, 'def', 1419, 0, 1419, 3),
woosh.Token(woosh.NAME, '_strip_annotations', 1419, 4, 1419, 22),
woosh.Token(woosh.OP, '(', 1419, 22, 1419, 23),
woosh.Token(woosh.NAME, 't', 1419, 23, 1419, 24),
woosh.Token(woosh.OP, ')', 1419, 24, 1419, 25),
woosh.Token(woosh.OP, ':', 1419, 25, 1419, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1419, 26, 1420, 0),
woosh.Token(woosh.INDENT, '    ', 1420, 0, 1420, 4),
woosh.Token(woosh.STRING, '"""Strips the annotations from a given type.\r\n    """', 1420, 4, 1421, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1421, 7, 1422, 0),
woosh.Token(woosh.NAME, 'if', 1422, 4, 1422, 6),
woosh.Token(woosh.NAME, 'isinstance', 1422, 7, 1422, 17),
woosh.Token(woosh.OP, '(', 1422, 17, 1422, 18),
woosh.Token(woosh.NAME, 't', 1422, 18, 1422, 19),
woosh.Token(woosh.OP, ',', 1422, 19, 1422, 20),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1422, 21, 1422, 36),
woosh.Token(woosh.OP, ')', 1422, 36, 1422, 37),
woosh.Token(woosh.OP, ':', 1422, 37, 1422, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1422, 38, 1423, 0),
woosh.Token(woosh.INDENT, '        ', 1423, 0, 1423, 8),
woosh.Token(woosh.NAME, 'return', 1423, 8, 1423, 14),
woosh.Token(woosh.NAME, '_strip_annotations', 1423, 15, 1423, 33),
woosh.Token(woosh.OP, '(', 1423, 33, 1423, 34),
woosh.Token(woosh.NAME, 't', 1423, 34, 1423, 35),
woosh.Token(woosh.OP, '.', 1423, 35, 1423, 36),
woosh.Token(woosh.NAME, '__origin__', 1423, 36, 1423, 46),
woosh.Token(woosh.OP, ')', 1423, 46, 1423, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1423, 47, 1424, 0),
woosh.Token(woosh.DEDENT, '    ', 1424, 0, 1424, 4),
woosh.Token(woosh.NAME, 'if', 1424, 4, 1424, 6),
woosh.Token(woosh.NAME, 'isinstance', 1424, 7, 1424, 17),
woosh.Token(woosh.OP, '(', 1424, 17, 1424, 18),
woosh.Token(woosh.NAME, 't', 1424, 18, 1424, 19),
woosh.Token(woosh.OP, ',', 1424, 19, 1424, 20),
woosh.Token(woosh.NAME, '_GenericAlias', 1424, 21, 1424, 34),
woosh.Token(woosh.OP, ')', 1424, 34, 1424, 35),
woosh.Token(woosh.OP, ':', 1424, 35, 1424, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1424, 36, 1425, 0),
woosh.Token(woosh.INDENT, '        ', 1425, 0, 1425, 8),
woosh.Token(woosh.NAME, 'stripped_args', 1425, 8, 1425, 21),
woosh.Token(woosh.OP, '=', 1425, 22, 1425, 23),
woosh.Token(woosh.NAME, 'tuple', 1425, 24, 1425, 29),
woosh.Token(woosh.OP, '(', 1425, 29, 1425, 30),
woosh.Token(woosh.NAME, '_strip_annotations', 1425, 30, 1425, 48),
woosh.Token(woosh.OP, '(', 1425, 48, 1425, 49),
woosh.Token(woosh.NAME, 'a', 1425, 49, 1425, 50),
woosh.Token(woosh.OP, ')', 1425, 50, 1425, 51),
woosh.Token(woosh.NAME, 'for', 1425, 52, 1425, 55),
woosh.Token(woosh.NAME, 'a', 1425, 56, 1425, 57),
woosh.Token(woosh.NAME, 'in', 1425, 58, 1425, 60),
woosh.Token(woosh.NAME, 't', 1425, 61, 1425, 62),
woosh.Token(woosh.OP, '.', 1425, 62, 1425, 63),
woosh.Token(woosh.NAME, '__args__', 1425, 63, 1425, 71),
woosh.Token(woosh.OP, ')', 1425, 71, 1425, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1425, 72, 1426, 0),
woosh.Token(woosh.NAME, 'if', 1426, 8, 1426, 10),
woosh.Token(woosh.NAME, 'stripped_args', 1426, 11, 1426, 24),
woosh.Token(woosh.OP, '==', 1426, 25, 1426, 27),
woosh.Token(woosh.NAME, 't', 1426, 28, 1426, 29),
woosh.Token(woosh.OP, '.', 1426, 29, 1426, 30),
woosh.Token(woosh.NAME, '__args__', 1426, 30, 1426, 38),
woosh.Token(woosh.OP, ':', 1426, 38, 1426, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1426, 39, 1427, 0),
woosh.Token(woosh.INDENT, '            ', 1427, 0, 1427, 12),
woosh.Token(woosh.NAME, 'return', 1427, 12, 1427, 18),
woosh.Token(woosh.NAME, 't', 1427, 19, 1427, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1427, 20, 1428, 0),
woosh.Token(woosh.DEDENT, '        ', 1428, 0, 1428, 8),
woosh.Token(woosh.NAME, 'return', 1428, 8, 1428, 14),
woosh.Token(woosh.NAME, 't', 1428, 15, 1428, 16),
woosh.Token(woosh.OP, '.', 1428, 16, 1428, 17),
woosh.Token(woosh.NAME, 'copy_with', 1428, 17, 1428, 26),
woosh.Token(woosh.OP, '(', 1428, 26, 1428, 27),
woosh.Token(woosh.NAME, 'stripped_args', 1428, 27, 1428, 40),
woosh.Token(woosh.OP, ')', 1428, 40, 1428, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1428, 41, 1429, 0),
woosh.Token(woosh.DEDENT, '    ', 1429, 0, 1429, 4),
woosh.Token(woosh.NAME, 'if', 1429, 4, 1429, 6),
woosh.Token(woosh.NAME, 'isinstance', 1429, 7, 1429, 17),
woosh.Token(woosh.OP, '(', 1429, 17, 1429, 18),
woosh.Token(woosh.NAME, 't', 1429, 18, 1429, 19),
woosh.Token(woosh.OP, ',', 1429, 19, 1429, 20),
woosh.Token(woosh.NAME, 'GenericAlias', 1429, 21, 1429, 33),
woosh.Token(woosh.OP, ')', 1429, 33, 1429, 34),
woosh.Token(woosh.OP, ':', 1429, 34, 1429, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1429, 35, 1430, 0),
woosh.Token(woosh.INDENT, '        ', 1430, 0, 1430, 8),
woosh.Token(woosh.NAME, 'stripped_args', 1430, 8, 1430, 21),
woosh.Token(woosh.OP, '=', 1430, 22, 1430, 23),
woosh.Token(woosh.NAME, 'tuple', 1430, 24, 1430, 29),
woosh.Token(woosh.OP, '(', 1430, 29, 1430, 30),
woosh.Token(woosh.NAME, '_strip_annotations', 1430, 30, 1430, 48),
woosh.Token(woosh.OP, '(', 1430, 48, 1430, 49),
woosh.Token(woosh.NAME, 'a', 1430, 49, 1430, 50),
woosh.Token(woosh.OP, ')', 1430, 50, 1430, 51),
woosh.Token(woosh.NAME, 'for', 1430, 52, 1430, 55),
woosh.Token(woosh.NAME, 'a', 1430, 56, 1430, 57),
woosh.Token(woosh.NAME, 'in', 1430, 58, 1430, 60),
woosh.Token(woosh.NAME, 't', 1430, 61, 1430, 62),
woosh.Token(woosh.OP, '.', 1430, 62, 1430, 63),
woosh.Token(woosh.NAME, '__args__', 1430, 63, 1430, 71),
woosh.Token(woosh.OP, ')', 1430, 71, 1430, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1430, 72, 1431, 0),
woosh.Token(woosh.NAME, 'if', 1431, 8, 1431, 10),
woosh.Token(woosh.NAME, 'stripped_args', 1431, 11, 1431, 24),
woosh.Token(woosh.OP, '==', 1431, 25, 1431, 27),
woosh.Token(woosh.NAME, 't', 1431, 28, 1431, 29),
woosh.Token(woosh.OP, '.', 1431, 29, 1431, 30),
woosh.Token(woosh.NAME, '__args__', 1431, 30, 1431, 38),
woosh.Token(woosh.OP, ':', 1431, 38, 1431, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1431, 39, 1432, 0),
woosh.Token(woosh.INDENT, '            ', 1432, 0, 1432, 12),
woosh.Token(woosh.NAME, 'return', 1432, 12, 1432, 18),
woosh.Token(woosh.NAME, 't', 1432, 19, 1432, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1432, 20, 1433, 0),
woosh.Token(woosh.DEDENT, '        ', 1433, 0, 1433, 8),
woosh.Token(woosh.NAME, 'return', 1433, 8, 1433, 14),
woosh.Token(woosh.NAME, 'GenericAlias', 1433, 15, 1433, 27),
woosh.Token(woosh.OP, '(', 1433, 27, 1433, 28),
woosh.Token(woosh.NAME, 't', 1433, 28, 1433, 29),
woosh.Token(woosh.OP, '.', 1433, 29, 1433, 30),
woosh.Token(woosh.NAME, '__origin__', 1433, 30, 1433, 40),
woosh.Token(woosh.OP, ',', 1433, 40, 1433, 41),
woosh.Token(woosh.NAME, 'stripped_args', 1433, 42, 1433, 55),
woosh.Token(woosh.OP, ')', 1433, 55, 1433, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1433, 56, 1434, 0),
woosh.Token(woosh.DEDENT, '    ', 1434, 0, 1434, 4),
woosh.Token(woosh.NAME, 'return', 1434, 4, 1434, 10),
woosh.Token(woosh.NAME, 't', 1434, 11, 1434, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1434, 12, 1435, 0),
woosh.Token(woosh.DEDENT, '', 1437, 0, 1437, 0),
woosh.Token(woosh.NAME, 'def', 1437, 0, 1437, 3),
woosh.Token(woosh.NAME, 'get_origin', 1437, 4, 1437, 14),
woosh.Token(woosh.OP, '(', 1437, 14, 1437, 15),
woosh.Token(woosh.NAME, 'tp', 1437, 15, 1437, 17),
woosh.Token(woosh.OP, ')', 1437, 17, 1437, 18),
woosh.Token(woosh.OP, ':', 1437, 18, 1437, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1437, 19, 1438, 0),
woosh.Token(woosh.INDENT, '    ', 1438, 0, 1438, 4),
woosh.Token(woosh.STRING, '"""Get the unsubscripted version of a type.\r\n\r\n    This supports generic types, Callable, Tuple, Union, Literal, Final, ClassVar\r\n    and Annotated. Return None for unsupported types. Examples::\r\n\r\n        get_origin(Literal[42]) is Literal\r\n        get_origin(int) is None\r\n        get_origin(ClassVar[int]) is ClassVar\r\n        get_origin(Generic) is Generic\r\n        get_origin(Generic[T]) is Generic\r\n        get_origin(Union[T, int]) is Union\r\n        get_origin(List[Tuple[T, T]][int]) == list\r\n    """', 1438, 4, 1450, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1450, 7, 1451, 0),
woosh.Token(woosh.NAME, 'if', 1451, 4, 1451, 6),
woosh.Token(woosh.NAME, 'isinstance', 1451, 7, 1451, 17),
woosh.Token(woosh.OP, '(', 1451, 17, 1451, 18),
woosh.Token(woosh.NAME, 'tp', 1451, 18, 1451, 20),
woosh.Token(woosh.OP, ',', 1451, 20, 1451, 21),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1451, 22, 1451, 37),
woosh.Token(woosh.OP, ')', 1451, 37, 1451, 38),
woosh.Token(woosh.OP, ':', 1451, 38, 1451, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1451, 39, 1452, 0),
woosh.Token(woosh.INDENT, '        ', 1452, 0, 1452, 8),
woosh.Token(woosh.NAME, 'return', 1452, 8, 1452, 14),
woosh.Token(woosh.NAME, 'Annotated', 1452, 15, 1452, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1452, 24, 1453, 0),
woosh.Token(woosh.DEDENT, '    ', 1453, 0, 1453, 4),
woosh.Token(woosh.NAME, 'if', 1453, 4, 1453, 6),
woosh.Token(woosh.NAME, 'isinstance', 1453, 7, 1453, 17),
woosh.Token(woosh.OP, '(', 1453, 17, 1453, 18),
woosh.Token(woosh.NAME, 'tp', 1453, 18, 1453, 20),
woosh.Token(woosh.OP, ',', 1453, 20, 1453, 21),
woosh.Token(woosh.OP, '(', 1453, 22, 1453, 23),
woosh.Token(woosh.NAME, '_BaseGenericAlias', 1453, 23, 1453, 40),
woosh.Token(woosh.OP, ',', 1453, 40, 1453, 41),
woosh.Token(woosh.NAME, 'GenericAlias', 1453, 42, 1453, 54),
woosh.Token(woosh.OP, ')', 1453, 54, 1453, 55),
woosh.Token(woosh.OP, ')', 1453, 55, 1453, 56),
woosh.Token(woosh.OP, ':', 1453, 56, 1453, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1453, 57, 1454, 0),
woosh.Token(woosh.INDENT, '        ', 1454, 0, 1454, 8),
woosh.Token(woosh.NAME, 'return', 1454, 8, 1454, 14),
woosh.Token(woosh.NAME, 'tp', 1454, 15, 1454, 17),
woosh.Token(woosh.OP, '.', 1454, 17, 1454, 18),
woosh.Token(woosh.NAME, '__origin__', 1454, 18, 1454, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1454, 28, 1455, 0),
woosh.Token(woosh.DEDENT, '    ', 1455, 0, 1455, 4),
woosh.Token(woosh.NAME, 'if', 1455, 4, 1455, 6),
woosh.Token(woosh.NAME, 'tp', 1455, 7, 1455, 9),
woosh.Token(woosh.NAME, 'is', 1455, 10, 1455, 12),
woosh.Token(woosh.NAME, 'Generic', 1455, 13, 1455, 20),
woosh.Token(woosh.OP, ':', 1455, 20, 1455, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1455, 21, 1456, 0),
woosh.Token(woosh.INDENT, '        ', 1456, 0, 1456, 8),
woosh.Token(woosh.NAME, 'return', 1456, 8, 1456, 14),
woosh.Token(woosh.NAME, 'Generic', 1456, 15, 1456, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1456, 22, 1457, 0),
woosh.Token(woosh.DEDENT, '    ', 1457, 0, 1457, 4),
woosh.Token(woosh.NAME, 'return', 1457, 4, 1457, 10),
woosh.Token(woosh.NAME, 'None', 1457, 11, 1457, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 1457, 15, 1458, 0),
woosh.Token(woosh.DEDENT, '', 1460, 0, 1460, 0),
woosh.Token(woosh.NAME, 'def', 1460, 0, 1460, 3),
woosh.Token(woosh.NAME, 'get_args', 1460, 4, 1460, 12),
woosh.Token(woosh.OP, '(', 1460, 12, 1460, 13),
woosh.Token(woosh.NAME, 'tp', 1460, 13, 1460, 15),
woosh.Token(woosh.OP, ')', 1460, 15, 1460, 16),
woosh.Token(woosh.OP, ':', 1460, 16, 1460, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1460, 17, 1461, 0),
woosh.Token(woosh.INDENT, '    ', 1461, 0, 1461, 4),
woosh.Token(woosh.STRING, '"""Get type arguments with all substitutions performed.\r\n\r\n    For unions, basic simplifications used by Union constructor are performed.\r\n    Examples::\r\n        get_args(Dict[str, int]) == (str, int)\r\n        get_args(int) == ()\r\n        get_args(Union[int, Union[T, int], str][int]) == (int, str)\r\n        get_args(Union[int, Tuple[T, int]][str]) == (int, Tuple[str, int])\r\n        get_args(Callable[[], T][int]) == ([], int)\r\n    """', 1461, 4, 1470, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1470, 7, 1471, 0),
woosh.Token(woosh.NAME, 'if', 1471, 4, 1471, 6),
woosh.Token(woosh.NAME, 'isinstance', 1471, 7, 1471, 17),
woosh.Token(woosh.OP, '(', 1471, 17, 1471, 18),
woosh.Token(woosh.NAME, 'tp', 1471, 18, 1471, 20),
woosh.Token(woosh.OP, ',', 1471, 20, 1471, 21),
woosh.Token(woosh.NAME, '_AnnotatedAlias', 1471, 22, 1471, 37),
woosh.Token(woosh.OP, ')', 1471, 37, 1471, 38),
woosh.Token(woosh.OP, ':', 1471, 38, 1471, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1471, 39, 1472, 0),
woosh.Token(woosh.INDENT, '        ', 1472, 0, 1472, 8),
woosh.Token(woosh.NAME, 'return', 1472, 8, 1472, 14),
woosh.Token(woosh.OP, '(', 1472, 15, 1472, 16),
woosh.Token(woosh.NAME, 'tp', 1472, 16, 1472, 18),
woosh.Token(woosh.OP, '.', 1472, 18, 1472, 19),
woosh.Token(woosh.NAME, '__origin__', 1472, 19, 1472, 29),
woosh.Token(woosh.OP, ',', 1472, 29, 1472, 30),
woosh.Token(woosh.OP, ')', 1472, 30, 1472, 31),
woosh.Token(woosh.OP, '+', 1472, 32, 1472, 33),
woosh.Token(woosh.NAME, 'tp', 1472, 34, 1472, 36),
woosh.Token(woosh.OP, '.', 1472, 36, 1472, 37),
woosh.Token(woosh.NAME, '__metadata__', 1472, 37, 1472, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1472, 49, 1473, 0),
woosh.Token(woosh.DEDENT, '    ', 1473, 0, 1473, 4),
woosh.Token(woosh.NAME, 'if', 1473, 4, 1473, 6),
woosh.Token(woosh.NAME, 'isinstance', 1473, 7, 1473, 17),
woosh.Token(woosh.OP, '(', 1473, 17, 1473, 18),
woosh.Token(woosh.NAME, 'tp', 1473, 18, 1473, 20),
woosh.Token(woosh.OP, ',', 1473, 20, 1473, 21),
woosh.Token(woosh.NAME, '_GenericAlias', 1473, 22, 1473, 35),
woosh.Token(woosh.OP, ')', 1473, 35, 1473, 36),
woosh.Token(woosh.OP, ':', 1473, 36, 1473, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1473, 37, 1474, 0),
woosh.Token(woosh.INDENT, '        ', 1474, 0, 1474, 8),
woosh.Token(woosh.NAME, 'res', 1474, 8, 1474, 11),
woosh.Token(woosh.OP, '=', 1474, 12, 1474, 13),
woosh.Token(woosh.NAME, 'tp', 1474, 14, 1474, 16),
woosh.Token(woosh.OP, '.', 1474, 16, 1474, 17),
woosh.Token(woosh.NAME, '__args__', 1474, 17, 1474, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1474, 25, 1475, 0),
woosh.Token(woosh.NAME, 'if', 1475, 8, 1475, 10),
woosh.Token(woosh.NAME, 'tp', 1475, 11, 1475, 13),
woosh.Token(woosh.OP, '.', 1475, 13, 1475, 14),
woosh.Token(woosh.NAME, '__origin__', 1475, 14, 1475, 24),
woosh.Token(woosh.NAME, 'is', 1475, 25, 1475, 27),
woosh.Token(woosh.NAME, 'collections', 1475, 28, 1475, 39),
woosh.Token(woosh.OP, '.', 1475, 39, 1475, 40),
woosh.Token(woosh.NAME, 'abc', 1475, 40, 1475, 43),
woosh.Token(woosh.OP, '.', 1475, 43, 1475, 44),
woosh.Token(woosh.NAME, 'Callable', 1475, 44, 1475, 52),
woosh.Token(woosh.NAME, 'and', 1475, 53, 1475, 56),
woosh.Token(woosh.NAME, 'res', 1475, 57, 1475, 60),
woosh.Token(woosh.OP, '[', 1475, 60, 1475, 61),
woosh.Token(woosh.NUMBER, '0', 1475, 61, 1475, 62),
woosh.Token(woosh.OP, ']', 1475, 62, 1475, 63),
woosh.Token(woosh.NAME, 'is', 1475, 64, 1475, 66),
woosh.Token(woosh.NAME, 'not', 1475, 67, 1475, 70),
woosh.Token(woosh.NAME, 'Ellipsis', 1475, 71, 1475, 79),
woosh.Token(woosh.OP, ':', 1475, 79, 1475, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 1475, 80, 1476, 0),
woosh.Token(woosh.INDENT, '            ', 1476, 0, 1476, 12),
woosh.Token(woosh.NAME, 'res', 1476, 12, 1476, 15),
woosh.Token(woosh.OP, '=', 1476, 16, 1476, 17),
woosh.Token(woosh.OP, '(', 1476, 18, 1476, 19),
woosh.Token(woosh.NAME, 'list', 1476, 19, 1476, 23),
woosh.Token(woosh.OP, '(', 1476, 23, 1476, 24),
woosh.Token(woosh.NAME, 'res', 1476, 24, 1476, 27),
woosh.Token(woosh.OP, '[', 1476, 27, 1476, 28),
woosh.Token(woosh.OP, ':', 1476, 28, 1476, 29),
woosh.Token(woosh.OP, '-', 1476, 29, 1476, 30),
woosh.Token(woosh.NUMBER, '1', 1476, 30, 1476, 31),
woosh.Token(woosh.OP, ']', 1476, 31, 1476, 32),
woosh.Token(woosh.OP, ')', 1476, 32, 1476, 33),
woosh.Token(woosh.OP, ',', 1476, 33, 1476, 34),
woosh.Token(woosh.NAME, 'res', 1476, 35, 1476, 38),
woosh.Token(woosh.OP, '[', 1476, 38, 1476, 39),
woosh.Token(woosh.OP, '-', 1476, 39, 1476, 40),
woosh.Token(woosh.NUMBER, '1', 1476, 40, 1476, 41),
woosh.Token(woosh.OP, ']', 1476, 41, 1476, 42),
woosh.Token(woosh.OP, ')', 1476, 42, 1476, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1476, 43, 1477, 0),
woosh.Token(woosh.DEDENT, '        ', 1477, 0, 1477, 8),
woosh.Token(woosh.NAME, 'return', 1477, 8, 1477, 14),
woosh.Token(woosh.NAME, 'res', 1477, 15, 1477, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1477, 18, 1478, 0),
woosh.Token(woosh.DEDENT, '    ', 1478, 0, 1478, 4),
woosh.Token(woosh.NAME, 'if', 1478, 4, 1478, 6),
woosh.Token(woosh.NAME, 'isinstance', 1478, 7, 1478, 17),
woosh.Token(woosh.OP, '(', 1478, 17, 1478, 18),
woosh.Token(woosh.NAME, 'tp', 1478, 18, 1478, 20),
woosh.Token(woosh.OP, ',', 1478, 20, 1478, 21),
woosh.Token(woosh.NAME, 'GenericAlias', 1478, 22, 1478, 34),
woosh.Token(woosh.OP, ')', 1478, 34, 1478, 35),
woosh.Token(woosh.OP, ':', 1478, 35, 1478, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1478, 36, 1479, 0),
woosh.Token(woosh.INDENT, '        ', 1479, 0, 1479, 8),
woosh.Token(woosh.NAME, 'return', 1479, 8, 1479, 14),
woosh.Token(woosh.NAME, 'tp', 1479, 15, 1479, 17),
woosh.Token(woosh.OP, '.', 1479, 17, 1479, 18),
woosh.Token(woosh.NAME, '__args__', 1479, 18, 1479, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1479, 26, 1480, 0),
woosh.Token(woosh.DEDENT, '    ', 1480, 0, 1480, 4),
woosh.Token(woosh.NAME, 'return', 1480, 4, 1480, 10),
woosh.Token(woosh.OP, '(', 1480, 11, 1480, 12),
woosh.Token(woosh.OP, ')', 1480, 12, 1480, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1480, 13, 1481, 0),
woosh.Token(woosh.DEDENT, '', 1483, 0, 1483, 0),
woosh.Token(woosh.NAME, 'def', 1483, 0, 1483, 3),
woosh.Token(woosh.NAME, 'is_typeddict', 1483, 4, 1483, 16),
woosh.Token(woosh.OP, '(', 1483, 16, 1483, 17),
woosh.Token(woosh.NAME, 'tp', 1483, 17, 1483, 19),
woosh.Token(woosh.OP, ')', 1483, 19, 1483, 20),
woosh.Token(woosh.OP, ':', 1483, 20, 1483, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1483, 21, 1484, 0),
woosh.Token(woosh.INDENT, '    ', 1484, 0, 1484, 4),
woosh.Token(woosh.STRING, '"""Check if an annotation is a TypedDict class\r\n\r\n    For example::\r\n        class Film(TypedDict):\r\n            title: str\r\n            year: int\r\n\r\n        is_typeddict(Film)  # => True\r\n        is_typeddict(Union[list, str])  # => False\r\n    """', 1484, 4, 1493, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1493, 7, 1494, 0),
woosh.Token(woosh.NAME, 'return', 1494, 4, 1494, 10),
woosh.Token(woosh.NAME, 'isinstance', 1494, 11, 1494, 21),
woosh.Token(woosh.OP, '(', 1494, 21, 1494, 22),
woosh.Token(woosh.NAME, 'tp', 1494, 22, 1494, 24),
woosh.Token(woosh.OP, ',', 1494, 24, 1494, 25),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1494, 26, 1494, 40),
woosh.Token(woosh.OP, ')', 1494, 40, 1494, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1494, 41, 1495, 0),
woosh.Token(woosh.DEDENT, '', 1497, 0, 1497, 0),
woosh.Token(woosh.NAME, 'def', 1497, 0, 1497, 3),
woosh.Token(woosh.NAME, 'no_type_check', 1497, 4, 1497, 17),
woosh.Token(woosh.OP, '(', 1497, 17, 1497, 18),
woosh.Token(woosh.NAME, 'arg', 1497, 18, 1497, 21),
woosh.Token(woosh.OP, ')', 1497, 21, 1497, 22),
woosh.Token(woosh.OP, ':', 1497, 22, 1497, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1497, 23, 1498, 0),
woosh.Token(woosh.INDENT, '    ', 1498, 0, 1498, 4),
woosh.Token(woosh.STRING, '"""Decorator to indicate that annotations are not type hints.\r\n\r\n    The argument must be a class or function; if it is a class, it\r\n    applies recursively to all methods and classes defined in that class\r\n    (but not to methods defined in its superclasses or subclasses).\r\n\r\n    This mutates the function(s) or class(es) in place.\r\n    """', 1498, 4, 1505, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1505, 7, 1506, 0),
woosh.Token(woosh.NAME, 'if', 1506, 4, 1506, 6),
woosh.Token(woosh.NAME, 'isinstance', 1506, 7, 1506, 17),
woosh.Token(woosh.OP, '(', 1506, 17, 1506, 18),
woosh.Token(woosh.NAME, 'arg', 1506, 18, 1506, 21),
woosh.Token(woosh.OP, ',', 1506, 21, 1506, 22),
woosh.Token(woosh.NAME, 'type', 1506, 23, 1506, 27),
woosh.Token(woosh.OP, ')', 1506, 27, 1506, 28),
woosh.Token(woosh.OP, ':', 1506, 28, 1506, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1506, 29, 1507, 0),
woosh.Token(woosh.INDENT, '        ', 1507, 0, 1507, 8),
woosh.Token(woosh.NAME, 'arg_attrs', 1507, 8, 1507, 17),
woosh.Token(woosh.OP, '=', 1507, 18, 1507, 19),
woosh.Token(woosh.NAME, 'arg', 1507, 20, 1507, 23),
woosh.Token(woosh.OP, '.', 1507, 23, 1507, 24),
woosh.Token(woosh.NAME, '__dict__', 1507, 24, 1507, 32),
woosh.Token(woosh.OP, '.', 1507, 32, 1507, 33),
woosh.Token(woosh.NAME, 'copy', 1507, 33, 1507, 37),
woosh.Token(woosh.OP, '(', 1507, 37, 1507, 38),
woosh.Token(woosh.OP, ')', 1507, 38, 1507, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1507, 39, 1508, 0),
woosh.Token(woosh.NAME, 'for', 1508, 8, 1508, 11),
woosh.Token(woosh.NAME, 'attr', 1508, 12, 1508, 16),
woosh.Token(woosh.OP, ',', 1508, 16, 1508, 17),
woosh.Token(woosh.NAME, 'val', 1508, 18, 1508, 21),
woosh.Token(woosh.NAME, 'in', 1508, 22, 1508, 24),
woosh.Token(woosh.NAME, 'arg', 1508, 25, 1508, 28),
woosh.Token(woosh.OP, '.', 1508, 28, 1508, 29),
woosh.Token(woosh.NAME, '__dict__', 1508, 29, 1508, 37),
woosh.Token(woosh.OP, '.', 1508, 37, 1508, 38),
woosh.Token(woosh.NAME, 'items', 1508, 38, 1508, 43),
woosh.Token(woosh.OP, '(', 1508, 43, 1508, 44),
woosh.Token(woosh.OP, ')', 1508, 44, 1508, 45),
woosh.Token(woosh.OP, ':', 1508, 45, 1508, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1508, 46, 1509, 0),
woosh.Token(woosh.INDENT, '            ', 1509, 0, 1509, 12),
woosh.Token(woosh.NAME, 'if', 1509, 12, 1509, 14),
woosh.Token(woosh.NAME, 'val', 1509, 15, 1509, 18),
woosh.Token(woosh.NAME, 'in', 1509, 19, 1509, 21),
woosh.Token(woosh.NAME, 'arg', 1509, 22, 1509, 25),
woosh.Token(woosh.OP, '.', 1509, 25, 1509, 26),
woosh.Token(woosh.NAME, '__bases__', 1509, 26, 1509, 35),
woosh.Token(woosh.OP, '+', 1509, 36, 1509, 37),
woosh.Token(woosh.OP, '(', 1509, 38, 1509, 39),
woosh.Token(woosh.NAME, 'arg', 1509, 39, 1509, 42),
woosh.Token(woosh.OP, ',', 1509, 42, 1509, 43),
woosh.Token(woosh.OP, ')', 1509, 43, 1509, 44),
woosh.Token(woosh.OP, ':', 1509, 44, 1509, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1509, 45, 1510, 0),
woosh.Token(woosh.INDENT, '                ', 1510, 0, 1510, 16),
woosh.Token(woosh.NAME, 'arg_attrs', 1510, 16, 1510, 25),
woosh.Token(woosh.OP, '.', 1510, 25, 1510, 26),
woosh.Token(woosh.NAME, 'pop', 1510, 26, 1510, 29),
woosh.Token(woosh.OP, '(', 1510, 29, 1510, 30),
woosh.Token(woosh.NAME, 'attr', 1510, 30, 1510, 34),
woosh.Token(woosh.OP, ')', 1510, 34, 1510, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1510, 35, 1511, 0),
woosh.Token(woosh.DEDENT, '        ', 1511, 0, 1511, 8),
woosh.Token(woosh.DEDENT, '', 1511, 8, 1511, 8),
woosh.Token(woosh.NAME, 'for', 1511, 8, 1511, 11),
woosh.Token(woosh.NAME, 'obj', 1511, 12, 1511, 15),
woosh.Token(woosh.NAME, 'in', 1511, 16, 1511, 18),
woosh.Token(woosh.NAME, 'arg_attrs', 1511, 19, 1511, 28),
woosh.Token(woosh.OP, '.', 1511, 28, 1511, 29),
woosh.Token(woosh.NAME, 'values', 1511, 29, 1511, 35),
woosh.Token(woosh.OP, '(', 1511, 35, 1511, 36),
woosh.Token(woosh.OP, ')', 1511, 36, 1511, 37),
woosh.Token(woosh.OP, ':', 1511, 37, 1511, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1511, 38, 1512, 0),
woosh.Token(woosh.INDENT, '            ', 1512, 0, 1512, 12),
woosh.Token(woosh.NAME, 'if', 1512, 12, 1512, 14),
woosh.Token(woosh.NAME, 'isinstance', 1512, 15, 1512, 25),
woosh.Token(woosh.OP, '(', 1512, 25, 1512, 26),
woosh.Token(woosh.NAME, 'obj', 1512, 26, 1512, 29),
woosh.Token(woosh.OP, ',', 1512, 29, 1512, 30),
woosh.Token(woosh.NAME, 'types', 1512, 31, 1512, 36),
woosh.Token(woosh.OP, '.', 1512, 36, 1512, 37),
woosh.Token(woosh.NAME, 'FunctionType', 1512, 37, 1512, 49),
woosh.Token(woosh.OP, ')', 1512, 49, 1512, 50),
woosh.Token(woosh.OP, ':', 1512, 50, 1512, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1512, 51, 1513, 0),
woosh.Token(woosh.INDENT, '                ', 1513, 0, 1513, 16),
woosh.Token(woosh.NAME, 'obj', 1513, 16, 1513, 19),
woosh.Token(woosh.OP, '.', 1513, 19, 1513, 20),
woosh.Token(woosh.NAME, '__no_type_check__', 1513, 20, 1513, 37),
woosh.Token(woosh.OP, '=', 1513, 38, 1513, 39),
woosh.Token(woosh.NAME, 'True', 1513, 40, 1513, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1513, 44, 1514, 0),
woosh.Token(woosh.DEDENT, '            ', 1514, 0, 1514, 12),
woosh.Token(woosh.NAME, 'if', 1514, 12, 1514, 14),
woosh.Token(woosh.NAME, 'isinstance', 1514, 15, 1514, 25),
woosh.Token(woosh.OP, '(', 1514, 25, 1514, 26),
woosh.Token(woosh.NAME, 'obj', 1514, 26, 1514, 29),
woosh.Token(woosh.OP, ',', 1514, 29, 1514, 30),
woosh.Token(woosh.NAME, 'type', 1514, 31, 1514, 35),
woosh.Token(woosh.OP, ')', 1514, 35, 1514, 36),
woosh.Token(woosh.OP, ':', 1514, 36, 1514, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1514, 37, 1515, 0),
woosh.Token(woosh.INDENT, '                ', 1515, 0, 1515, 16),
woosh.Token(woosh.NAME, 'no_type_check', 1515, 16, 1515, 29),
woosh.Token(woosh.OP, '(', 1515, 29, 1515, 30),
woosh.Token(woosh.NAME, 'obj', 1515, 30, 1515, 33),
woosh.Token(woosh.OP, ')', 1515, 33, 1515, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1515, 34, 1516, 0),
woosh.Token(woosh.DEDENT, '    ', 1516, 0, 1516, 4),
woosh.Token(woosh.DEDENT, '', 1516, 4, 1516, 4),
woosh.Token(woosh.DEDENT, '', 1516, 4, 1516, 4),
woosh.Token(woosh.NAME, 'try', 1516, 4, 1516, 7),
woosh.Token(woosh.OP, ':', 1516, 7, 1516, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1516, 8, 1517, 0),
woosh.Token(woosh.INDENT, '        ', 1517, 0, 1517, 8),
woosh.Token(woosh.NAME, 'arg', 1517, 8, 1517, 11),
woosh.Token(woosh.OP, '.', 1517, 11, 1517, 12),
woosh.Token(woosh.NAME, '__no_type_check__', 1517, 12, 1517, 29),
woosh.Token(woosh.OP, '=', 1517, 30, 1517, 31),
woosh.Token(woosh.NAME, 'True', 1517, 32, 1517, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1517, 36, 1518, 0),
woosh.Token(woosh.DEDENT, '    ', 1518, 0, 1518, 4),
woosh.Token(woosh.NAME, 'except', 1518, 4, 1518, 10),
woosh.Token(woosh.NAME, 'TypeError', 1518, 11, 1518, 20),
woosh.Token(woosh.OP, ':', 1518, 20, 1518, 21),
woosh.Token(woosh.COMMENT, '# built-in classes', 1518, 23, 1518, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1518, 41, 1519, 0),
woosh.Token(woosh.INDENT, '        ', 1519, 0, 1519, 8),
woosh.Token(woosh.NAME, 'pass', 1519, 8, 1519, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1519, 12, 1520, 0),
woosh.Token(woosh.DEDENT, '    ', 1520, 0, 1520, 4),
woosh.Token(woosh.NAME, 'return', 1520, 4, 1520, 10),
woosh.Token(woosh.NAME, 'arg', 1520, 11, 1520, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1520, 14, 1521, 0),
woosh.Token(woosh.DEDENT, '', 1523, 0, 1523, 0),
woosh.Token(woosh.NAME, 'def', 1523, 0, 1523, 3),
woosh.Token(woosh.NAME, 'no_type_check_decorator', 1523, 4, 1523, 27),
woosh.Token(woosh.OP, '(', 1523, 27, 1523, 28),
woosh.Token(woosh.NAME, 'decorator', 1523, 28, 1523, 37),
woosh.Token(woosh.OP, ')', 1523, 37, 1523, 38),
woosh.Token(woosh.OP, ':', 1523, 38, 1523, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1523, 39, 1524, 0),
woosh.Token(woosh.INDENT, '    ', 1524, 0, 1524, 4),
woosh.Token(woosh.STRING, '"""Decorator to give another decorator the @no_type_check effect.\r\n\r\n    This wraps the decorator with something that wraps the decorated\r\n    function in @no_type_check.\r\n    """', 1524, 4, 1528, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1528, 7, 1529, 0),
woosh.Token(woosh.OP, '@', 1530, 4, 1530, 5),
woosh.Token(woosh.NAME, 'functools', 1530, 5, 1530, 14),
woosh.Token(woosh.OP, '.', 1530, 14, 1530, 15),
woosh.Token(woosh.NAME, 'wraps', 1530, 15, 1530, 20),
woosh.Token(woosh.OP, '(', 1530, 20, 1530, 21),
woosh.Token(woosh.NAME, 'decorator', 1530, 21, 1530, 30),
woosh.Token(woosh.OP, ')', 1530, 30, 1530, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1530, 31, 1531, 0),
woosh.Token(woosh.NAME, 'def', 1531, 4, 1531, 7),
woosh.Token(woosh.NAME, 'wrapped_decorator', 1531, 8, 1531, 25),
woosh.Token(woosh.OP, '(', 1531, 25, 1531, 26),
woosh.Token(woosh.OP, '*', 1531, 26, 1531, 27),
woosh.Token(woosh.NAME, 'args', 1531, 27, 1531, 31),
woosh.Token(woosh.OP, ',', 1531, 31, 1531, 32),
woosh.Token(woosh.OP, '**', 1531, 33, 1531, 35),
woosh.Token(woosh.NAME, 'kwds', 1531, 35, 1531, 39),
woosh.Token(woosh.OP, ')', 1531, 39, 1531, 40),
woosh.Token(woosh.OP, ':', 1531, 40, 1531, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1531, 41, 1532, 0),
woosh.Token(woosh.INDENT, '        ', 1532, 0, 1532, 8),
woosh.Token(woosh.NAME, 'func', 1532, 8, 1532, 12),
woosh.Token(woosh.OP, '=', 1532, 13, 1532, 14),
woosh.Token(woosh.NAME, 'decorator', 1532, 15, 1532, 24),
woosh.Token(woosh.OP, '(', 1532, 24, 1532, 25),
woosh.Token(woosh.OP, '*', 1532, 25, 1532, 26),
woosh.Token(woosh.NAME, 'args', 1532, 26, 1532, 30),
woosh.Token(woosh.OP, ',', 1532, 30, 1532, 31),
woosh.Token(woosh.OP, '**', 1532, 32, 1532, 34),
woosh.Token(woosh.NAME, 'kwds', 1532, 34, 1532, 38),
woosh.Token(woosh.OP, ')', 1532, 38, 1532, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1532, 39, 1533, 0),
woosh.Token(woosh.NAME, 'func', 1533, 8, 1533, 12),
woosh.Token(woosh.OP, '=', 1533, 13, 1533, 14),
woosh.Token(woosh.NAME, 'no_type_check', 1533, 15, 1533, 28),
woosh.Token(woosh.OP, '(', 1533, 28, 1533, 29),
woosh.Token(woosh.NAME, 'func', 1533, 29, 1533, 33),
woosh.Token(woosh.OP, ')', 1533, 33, 1533, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1533, 34, 1534, 0),
woosh.Token(woosh.NAME, 'return', 1534, 8, 1534, 14),
woosh.Token(woosh.NAME, 'func', 1534, 15, 1534, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1534, 19, 1535, 0),
woosh.Token(woosh.DEDENT, '    ', 1536, 0, 1536, 4),
woosh.Token(woosh.NAME, 'return', 1536, 4, 1536, 10),
woosh.Token(woosh.NAME, 'wrapped_decorator', 1536, 11, 1536, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1536, 28, 1537, 0),
woosh.Token(woosh.DEDENT, '', 1539, 0, 1539, 0),
woosh.Token(woosh.NAME, 'def', 1539, 0, 1539, 3),
woosh.Token(woosh.NAME, '_overload_dummy', 1539, 4, 1539, 19),
woosh.Token(woosh.OP, '(', 1539, 19, 1539, 20),
woosh.Token(woosh.OP, '*', 1539, 20, 1539, 21),
woosh.Token(woosh.NAME, 'args', 1539, 21, 1539, 25),
woosh.Token(woosh.OP, ',', 1539, 25, 1539, 26),
woosh.Token(woosh.OP, '**', 1539, 27, 1539, 29),
woosh.Token(woosh.NAME, 'kwds', 1539, 29, 1539, 33),
woosh.Token(woosh.OP, ')', 1539, 33, 1539, 34),
woosh.Token(woosh.OP, ':', 1539, 34, 1539, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1539, 35, 1540, 0),
woosh.Token(woosh.INDENT, '    ', 1540, 0, 1540, 4),
woosh.Token(woosh.STRING, '"""Helper for @overload to raise when called."""', 1540, 4, 1540, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1540, 52, 1541, 0),
woosh.Token(woosh.NAME, 'raise', 1541, 4, 1541, 9),
woosh.Token(woosh.NAME, 'NotImplementedError', 1541, 10, 1541, 29),
woosh.Token(woosh.OP, '(', 1541, 29, 1541, 30),
woosh.Token(woosh.STRING, '"You should not call an overloaded function. "', 1542, 8, 1542, 54),
woosh.Token(woosh.STRING, '"A series of @overload-decorated functions "', 1543, 8, 1543, 52),
woosh.Token(woosh.STRING, '"outside a stub module should always be followed "', 1544, 8, 1544, 58),
woosh.Token(woosh.STRING, '"by an implementation that is not @overload-ed."', 1545, 8, 1545, 56),
woosh.Token(woosh.OP, ')', 1545, 56, 1545, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1545, 57, 1546, 0),
woosh.Token(woosh.DEDENT, '', 1548, 0, 1548, 0),
woosh.Token(woosh.NAME, 'def', 1548, 0, 1548, 3),
woosh.Token(woosh.NAME, 'overload', 1548, 4, 1548, 12),
woosh.Token(woosh.OP, '(', 1548, 12, 1548, 13),
woosh.Token(woosh.NAME, 'func', 1548, 13, 1548, 17),
woosh.Token(woosh.OP, ')', 1548, 17, 1548, 18),
woosh.Token(woosh.OP, ':', 1548, 18, 1548, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1548, 19, 1549, 0),
woosh.Token(woosh.INDENT, '    ', 1549, 0, 1549, 4),
woosh.Token(woosh.STRING, '"""Decorator for overloaded functions/methods.\r\n\r\n    In a stub file, place two or more stub definitions for the same\r\n    function in a row, each decorated with @overload.  For example:\r\n\r\n      @overload\r\n      def utf8(value: None) -> None: ...\r\n      @overload\r\n      def utf8(value: bytes) -> bytes: ...\r\n      @overload\r\n      def utf8(value: str) -> bytes: ...\r\n\r\n    In a non-stub file (i.e. a regular .py file), do the same but\r\n    follow it with an implementation.  The implementation should *not*\r\n    be decorated with @overload.  For example:\r\n\r\n      @overload\r\n      def utf8(value: None) -> None: ...\r\n      @overload\r\n      def utf8(value: bytes) -> bytes: ...\r\n      @overload\r\n      def utf8(value: str) -> bytes: ...\r\n      def utf8(value):\r\n          # implementation goes here\r\n    """', 1549, 4, 1573, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1573, 7, 1574, 0),
woosh.Token(woosh.NAME, 'return', 1574, 4, 1574, 10),
woosh.Token(woosh.NAME, '_overload_dummy', 1574, 11, 1574, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1574, 26, 1575, 0),
woosh.Token(woosh.DEDENT, '', 1577, 0, 1577, 0),
woosh.Token(woosh.NAME, 'def', 1577, 0, 1577, 3),
woosh.Token(woosh.NAME, 'final', 1577, 4, 1577, 9),
woosh.Token(woosh.OP, '(', 1577, 9, 1577, 10),
woosh.Token(woosh.NAME, 'f', 1577, 10, 1577, 11),
woosh.Token(woosh.OP, ')', 1577, 11, 1577, 12),
woosh.Token(woosh.OP, ':', 1577, 12, 1577, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1577, 13, 1578, 0),
woosh.Token(woosh.INDENT, '    ', 1578, 0, 1578, 4),
woosh.Token(woosh.STRING, '"""A decorator to indicate final methods and final classes.\r\n\r\n    Use this decorator to indicate to type checkers that the decorated\r\n    method cannot be overridden, and decorated class cannot be subclassed.\r\n    For example:\r\n\r\n      class Base:\r\n          @final\r\n          def done(self) -> None:\r\n              ...\r\n      class Sub(Base):\r\n          def done(self) -> None:  # Error reported by type checker\r\n                ...\r\n\r\n      @final\r\n      class Leaf:\r\n          ...\r\n      class Other(Leaf):  # Error reported by type checker\r\n          ...\r\n\r\n    There is no runtime checking of these properties.\r\n    """', 1578, 4, 1599, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1599, 7, 1600, 0),
woosh.Token(woosh.NAME, 'return', 1600, 4, 1600, 10),
woosh.Token(woosh.NAME, 'f', 1600, 11, 1600, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1600, 12, 1601, 0),
woosh.Token(woosh.COMMENT, '# Some unconstrained type variables.  These are used by the container types.', 1603, 0, 1603, 76),
woosh.Token(woosh.COMMENT, '# (These are not for export.)', 1604, 0, 1604, 29),
woosh.Token(woosh.DEDENT, '', 1605, 0, 1605, 0),
woosh.Token(woosh.NAME, 'T', 1605, 0, 1605, 1),
woosh.Token(woosh.OP, '=', 1605, 2, 1605, 3),
woosh.Token(woosh.NAME, 'TypeVar', 1605, 4, 1605, 11),
woosh.Token(woosh.OP, '(', 1605, 11, 1605, 12),
woosh.Token(woosh.STRING, "'T'", 1605, 12, 1605, 15),
woosh.Token(woosh.OP, ')', 1605, 15, 1605, 16),
woosh.Token(woosh.COMMENT, '# Any type.', 1605, 18, 1605, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1605, 29, 1606, 0),
woosh.Token(woosh.NAME, 'KT', 1606, 0, 1606, 2),
woosh.Token(woosh.OP, '=', 1606, 3, 1606, 4),
woosh.Token(woosh.NAME, 'TypeVar', 1606, 5, 1606, 12),
woosh.Token(woosh.OP, '(', 1606, 12, 1606, 13),
woosh.Token(woosh.STRING, "'KT'", 1606, 13, 1606, 17),
woosh.Token(woosh.OP, ')', 1606, 17, 1606, 18),
woosh.Token(woosh.COMMENT, '# Key type.', 1606, 20, 1606, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1606, 31, 1607, 0),
woosh.Token(woosh.NAME, 'VT', 1607, 0, 1607, 2),
woosh.Token(woosh.OP, '=', 1607, 3, 1607, 4),
woosh.Token(woosh.NAME, 'TypeVar', 1607, 5, 1607, 12),
woosh.Token(woosh.OP, '(', 1607, 12, 1607, 13),
woosh.Token(woosh.STRING, "'VT'", 1607, 13, 1607, 17),
woosh.Token(woosh.OP, ')', 1607, 17, 1607, 18),
woosh.Token(woosh.COMMENT, '# Value type.', 1607, 20, 1607, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1607, 33, 1608, 0),
woosh.Token(woosh.NAME, 'T_co', 1608, 0, 1608, 4),
woosh.Token(woosh.OP, '=', 1608, 5, 1608, 6),
woosh.Token(woosh.NAME, 'TypeVar', 1608, 7, 1608, 14),
woosh.Token(woosh.OP, '(', 1608, 14, 1608, 15),
woosh.Token(woosh.STRING, "'T_co'", 1608, 15, 1608, 21),
woosh.Token(woosh.OP, ',', 1608, 21, 1608, 22),
woosh.Token(woosh.NAME, 'covariant', 1608, 23, 1608, 32),
woosh.Token(woosh.OP, '=', 1608, 32, 1608, 33),
woosh.Token(woosh.NAME, 'True', 1608, 33, 1608, 37),
woosh.Token(woosh.OP, ')', 1608, 37, 1608, 38),
woosh.Token(woosh.COMMENT, '# Any type covariant containers.', 1608, 40, 1608, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1608, 72, 1609, 0),
woosh.Token(woosh.NAME, 'V_co', 1609, 0, 1609, 4),
woosh.Token(woosh.OP, '=', 1609, 5, 1609, 6),
woosh.Token(woosh.NAME, 'TypeVar', 1609, 7, 1609, 14),
woosh.Token(woosh.OP, '(', 1609, 14, 1609, 15),
woosh.Token(woosh.STRING, "'V_co'", 1609, 15, 1609, 21),
woosh.Token(woosh.OP, ',', 1609, 21, 1609, 22),
woosh.Token(woosh.NAME, 'covariant', 1609, 23, 1609, 32),
woosh.Token(woosh.OP, '=', 1609, 32, 1609, 33),
woosh.Token(woosh.NAME, 'True', 1609, 33, 1609, 37),
woosh.Token(woosh.OP, ')', 1609, 37, 1609, 38),
woosh.Token(woosh.COMMENT, '# Any type covariant containers.', 1609, 40, 1609, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1609, 72, 1610, 0),
woosh.Token(woosh.NAME, 'VT_co', 1610, 0, 1610, 5),
woosh.Token(woosh.OP, '=', 1610, 6, 1610, 7),
woosh.Token(woosh.NAME, 'TypeVar', 1610, 8, 1610, 15),
woosh.Token(woosh.OP, '(', 1610, 15, 1610, 16),
woosh.Token(woosh.STRING, "'VT_co'", 1610, 16, 1610, 23),
woosh.Token(woosh.OP, ',', 1610, 23, 1610, 24),
woosh.Token(woosh.NAME, 'covariant', 1610, 25, 1610, 34),
woosh.Token(woosh.OP, '=', 1610, 34, 1610, 35),
woosh.Token(woosh.NAME, 'True', 1610, 35, 1610, 39),
woosh.Token(woosh.OP, ')', 1610, 39, 1610, 40),
woosh.Token(woosh.COMMENT, '# Value type covariant containers.', 1610, 42, 1610, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1610, 76, 1611, 0),
woosh.Token(woosh.NAME, 'T_contra', 1611, 0, 1611, 8),
woosh.Token(woosh.OP, '=', 1611, 9, 1611, 10),
woosh.Token(woosh.NAME, 'TypeVar', 1611, 11, 1611, 18),
woosh.Token(woosh.OP, '(', 1611, 18, 1611, 19),
woosh.Token(woosh.STRING, "'T_contra'", 1611, 19, 1611, 29),
woosh.Token(woosh.OP, ',', 1611, 29, 1611, 30),
woosh.Token(woosh.NAME, 'contravariant', 1611, 31, 1611, 44),
woosh.Token(woosh.OP, '=', 1611, 44, 1611, 45),
woosh.Token(woosh.NAME, 'True', 1611, 45, 1611, 49),
woosh.Token(woosh.OP, ')', 1611, 49, 1611, 50),
woosh.Token(woosh.COMMENT, '# Ditto contravariant.', 1611, 52, 1611, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1611, 74, 1612, 0),
woosh.Token(woosh.COMMENT, '# Internal type variable used for Type[].', 1612, 0, 1612, 41),
woosh.Token(woosh.NAME, 'CT_co', 1613, 0, 1613, 5),
woosh.Token(woosh.OP, '=', 1613, 6, 1613, 7),
woosh.Token(woosh.NAME, 'TypeVar', 1613, 8, 1613, 15),
woosh.Token(woosh.OP, '(', 1613, 15, 1613, 16),
woosh.Token(woosh.STRING, "'CT_co'", 1613, 16, 1613, 23),
woosh.Token(woosh.OP, ',', 1613, 23, 1613, 24),
woosh.Token(woosh.NAME, 'covariant', 1613, 25, 1613, 34),
woosh.Token(woosh.OP, '=', 1613, 34, 1613, 35),
woosh.Token(woosh.NAME, 'True', 1613, 35, 1613, 39),
woosh.Token(woosh.OP, ',', 1613, 39, 1613, 40),
woosh.Token(woosh.NAME, 'bound', 1613, 41, 1613, 46),
woosh.Token(woosh.OP, '=', 1613, 46, 1613, 47),
woosh.Token(woosh.NAME, 'type', 1613, 47, 1613, 51),
woosh.Token(woosh.OP, ')', 1613, 51, 1613, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1613, 52, 1614, 0),
woosh.Token(woosh.COMMENT, '# A useful type variable with constraints.  This represents string types.', 1615, 0, 1615, 73),
woosh.Token(woosh.COMMENT, '# (This one *is* for export!)', 1616, 0, 1616, 29),
woosh.Token(woosh.NAME, 'AnyStr', 1617, 0, 1617, 6),
woosh.Token(woosh.OP, '=', 1617, 7, 1617, 8),
woosh.Token(woosh.NAME, 'TypeVar', 1617, 9, 1617, 16),
woosh.Token(woosh.OP, '(', 1617, 16, 1617, 17),
woosh.Token(woosh.STRING, "'AnyStr'", 1617, 17, 1617, 25),
woosh.Token(woosh.OP, ',', 1617, 25, 1617, 26),
woosh.Token(woosh.NAME, 'bytes', 1617, 27, 1617, 32),
woosh.Token(woosh.OP, ',', 1617, 32, 1617, 33),
woosh.Token(woosh.NAME, 'str', 1617, 34, 1617, 37),
woosh.Token(woosh.OP, ')', 1617, 37, 1617, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1617, 38, 1618, 0),
woosh.Token(woosh.COMMENT, '# Various ABCs mimicking those in collections.abc.', 1620, 0, 1620, 50),
woosh.Token(woosh.NAME, '_alias', 1621, 0, 1621, 6),
woosh.Token(woosh.OP, '=', 1621, 7, 1621, 8),
woosh.Token(woosh.NAME, '_SpecialGenericAlias', 1621, 9, 1621, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1621, 29, 1622, 0),
woosh.Token(woosh.NAME, 'Hashable', 1623, 0, 1623, 8),
woosh.Token(woosh.OP, '=', 1623, 9, 1623, 10),
woosh.Token(woosh.NAME, '_alias', 1623, 11, 1623, 17),
woosh.Token(woosh.OP, '(', 1623, 17, 1623, 18),
woosh.Token(woosh.NAME, 'collections', 1623, 18, 1623, 29),
woosh.Token(woosh.OP, '.', 1623, 29, 1623, 30),
woosh.Token(woosh.NAME, 'abc', 1623, 30, 1623, 33),
woosh.Token(woosh.OP, '.', 1623, 33, 1623, 34),
woosh.Token(woosh.NAME, 'Hashable', 1623, 34, 1623, 42),
woosh.Token(woosh.OP, ',', 1623, 42, 1623, 43),
woosh.Token(woosh.NUMBER, '0', 1623, 44, 1623, 45),
woosh.Token(woosh.OP, ')', 1623, 45, 1623, 46),
woosh.Token(woosh.COMMENT, '# Not generic.', 1623, 48, 1623, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1623, 62, 1624, 0),
woosh.Token(woosh.NAME, 'Awaitable', 1624, 0, 1624, 9),
woosh.Token(woosh.OP, '=', 1624, 10, 1624, 11),
woosh.Token(woosh.NAME, '_alias', 1624, 12, 1624, 18),
woosh.Token(woosh.OP, '(', 1624, 18, 1624, 19),
woosh.Token(woosh.NAME, 'collections', 1624, 19, 1624, 30),
woosh.Token(woosh.OP, '.', 1624, 30, 1624, 31),
woosh.Token(woosh.NAME, 'abc', 1624, 31, 1624, 34),
woosh.Token(woosh.OP, '.', 1624, 34, 1624, 35),
woosh.Token(woosh.NAME, 'Awaitable', 1624, 35, 1624, 44),
woosh.Token(woosh.OP, ',', 1624, 44, 1624, 45),
woosh.Token(woosh.NUMBER, '1', 1624, 46, 1624, 47),
woosh.Token(woosh.OP, ')', 1624, 47, 1624, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1624, 48, 1625, 0),
woosh.Token(woosh.NAME, 'Coroutine', 1625, 0, 1625, 9),
woosh.Token(woosh.OP, '=', 1625, 10, 1625, 11),
woosh.Token(woosh.NAME, '_alias', 1625, 12, 1625, 18),
woosh.Token(woosh.OP, '(', 1625, 18, 1625, 19),
woosh.Token(woosh.NAME, 'collections', 1625, 19, 1625, 30),
woosh.Token(woosh.OP, '.', 1625, 30, 1625, 31),
woosh.Token(woosh.NAME, 'abc', 1625, 31, 1625, 34),
woosh.Token(woosh.OP, '.', 1625, 34, 1625, 35),
woosh.Token(woosh.NAME, 'Coroutine', 1625, 35, 1625, 44),
woosh.Token(woosh.OP, ',', 1625, 44, 1625, 45),
woosh.Token(woosh.NUMBER, '3', 1625, 46, 1625, 47),
woosh.Token(woosh.OP, ')', 1625, 47, 1625, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1625, 48, 1626, 0),
woosh.Token(woosh.NAME, 'AsyncIterable', 1626, 0, 1626, 13),
woosh.Token(woosh.OP, '=', 1626, 14, 1626, 15),
woosh.Token(woosh.NAME, '_alias', 1626, 16, 1626, 22),
woosh.Token(woosh.OP, '(', 1626, 22, 1626, 23),
woosh.Token(woosh.NAME, 'collections', 1626, 23, 1626, 34),
woosh.Token(woosh.OP, '.', 1626, 34, 1626, 35),
woosh.Token(woosh.NAME, 'abc', 1626, 35, 1626, 38),
woosh.Token(woosh.OP, '.', 1626, 38, 1626, 39),
woosh.Token(woosh.NAME, 'AsyncIterable', 1626, 39, 1626, 52),
woosh.Token(woosh.OP, ',', 1626, 52, 1626, 53),
woosh.Token(woosh.NUMBER, '1', 1626, 54, 1626, 55),
woosh.Token(woosh.OP, ')', 1626, 55, 1626, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1626, 56, 1627, 0),
woosh.Token(woosh.NAME, 'AsyncIterator', 1627, 0, 1627, 13),
woosh.Token(woosh.OP, '=', 1627, 14, 1627, 15),
woosh.Token(woosh.NAME, '_alias', 1627, 16, 1627, 22),
woosh.Token(woosh.OP, '(', 1627, 22, 1627, 23),
woosh.Token(woosh.NAME, 'collections', 1627, 23, 1627, 34),
woosh.Token(woosh.OP, '.', 1627, 34, 1627, 35),
woosh.Token(woosh.NAME, 'abc', 1627, 35, 1627, 38),
woosh.Token(woosh.OP, '.', 1627, 38, 1627, 39),
woosh.Token(woosh.NAME, 'AsyncIterator', 1627, 39, 1627, 52),
woosh.Token(woosh.OP, ',', 1627, 52, 1627, 53),
woosh.Token(woosh.NUMBER, '1', 1627, 54, 1627, 55),
woosh.Token(woosh.OP, ')', 1627, 55, 1627, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1627, 56, 1628, 0),
woosh.Token(woosh.NAME, 'Iterable', 1628, 0, 1628, 8),
woosh.Token(woosh.OP, '=', 1628, 9, 1628, 10),
woosh.Token(woosh.NAME, '_alias', 1628, 11, 1628, 17),
woosh.Token(woosh.OP, '(', 1628, 17, 1628, 18),
woosh.Token(woosh.NAME, 'collections', 1628, 18, 1628, 29),
woosh.Token(woosh.OP, '.', 1628, 29, 1628, 30),
woosh.Token(woosh.NAME, 'abc', 1628, 30, 1628, 33),
woosh.Token(woosh.OP, '.', 1628, 33, 1628, 34),
woosh.Token(woosh.NAME, 'Iterable', 1628, 34, 1628, 42),
woosh.Token(woosh.OP, ',', 1628, 42, 1628, 43),
woosh.Token(woosh.NUMBER, '1', 1628, 44, 1628, 45),
woosh.Token(woosh.OP, ')', 1628, 45, 1628, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1628, 46, 1629, 0),
woosh.Token(woosh.NAME, 'Iterator', 1629, 0, 1629, 8),
woosh.Token(woosh.OP, '=', 1629, 9, 1629, 10),
woosh.Token(woosh.NAME, '_alias', 1629, 11, 1629, 17),
woosh.Token(woosh.OP, '(', 1629, 17, 1629, 18),
woosh.Token(woosh.NAME, 'collections', 1629, 18, 1629, 29),
woosh.Token(woosh.OP, '.', 1629, 29, 1629, 30),
woosh.Token(woosh.NAME, 'abc', 1629, 30, 1629, 33),
woosh.Token(woosh.OP, '.', 1629, 33, 1629, 34),
woosh.Token(woosh.NAME, 'Iterator', 1629, 34, 1629, 42),
woosh.Token(woosh.OP, ',', 1629, 42, 1629, 43),
woosh.Token(woosh.NUMBER, '1', 1629, 44, 1629, 45),
woosh.Token(woosh.OP, ')', 1629, 45, 1629, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1629, 46, 1630, 0),
woosh.Token(woosh.NAME, 'Reversible', 1630, 0, 1630, 10),
woosh.Token(woosh.OP, '=', 1630, 11, 1630, 12),
woosh.Token(woosh.NAME, '_alias', 1630, 13, 1630, 19),
woosh.Token(woosh.OP, '(', 1630, 19, 1630, 20),
woosh.Token(woosh.NAME, 'collections', 1630, 20, 1630, 31),
woosh.Token(woosh.OP, '.', 1630, 31, 1630, 32),
woosh.Token(woosh.NAME, 'abc', 1630, 32, 1630, 35),
woosh.Token(woosh.OP, '.', 1630, 35, 1630, 36),
woosh.Token(woosh.NAME, 'Reversible', 1630, 36, 1630, 46),
woosh.Token(woosh.OP, ',', 1630, 46, 1630, 47),
woosh.Token(woosh.NUMBER, '1', 1630, 48, 1630, 49),
woosh.Token(woosh.OP, ')', 1630, 49, 1630, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1630, 50, 1631, 0),
woosh.Token(woosh.NAME, 'Sized', 1631, 0, 1631, 5),
woosh.Token(woosh.OP, '=', 1631, 6, 1631, 7),
woosh.Token(woosh.NAME, '_alias', 1631, 8, 1631, 14),
woosh.Token(woosh.OP, '(', 1631, 14, 1631, 15),
woosh.Token(woosh.NAME, 'collections', 1631, 15, 1631, 26),
woosh.Token(woosh.OP, '.', 1631, 26, 1631, 27),
woosh.Token(woosh.NAME, 'abc', 1631, 27, 1631, 30),
woosh.Token(woosh.OP, '.', 1631, 30, 1631, 31),
woosh.Token(woosh.NAME, 'Sized', 1631, 31, 1631, 36),
woosh.Token(woosh.OP, ',', 1631, 36, 1631, 37),
woosh.Token(woosh.NUMBER, '0', 1631, 38, 1631, 39),
woosh.Token(woosh.OP, ')', 1631, 39, 1631, 40),
woosh.Token(woosh.COMMENT, '# Not generic.', 1631, 42, 1631, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1631, 56, 1632, 0),
woosh.Token(woosh.NAME, 'Container', 1632, 0, 1632, 9),
woosh.Token(woosh.OP, '=', 1632, 10, 1632, 11),
woosh.Token(woosh.NAME, '_alias', 1632, 12, 1632, 18),
woosh.Token(woosh.OP, '(', 1632, 18, 1632, 19),
woosh.Token(woosh.NAME, 'collections', 1632, 19, 1632, 30),
woosh.Token(woosh.OP, '.', 1632, 30, 1632, 31),
woosh.Token(woosh.NAME, 'abc', 1632, 31, 1632, 34),
woosh.Token(woosh.OP, '.', 1632, 34, 1632, 35),
woosh.Token(woosh.NAME, 'Container', 1632, 35, 1632, 44),
woosh.Token(woosh.OP, ',', 1632, 44, 1632, 45),
woosh.Token(woosh.NUMBER, '1', 1632, 46, 1632, 47),
woosh.Token(woosh.OP, ')', 1632, 47, 1632, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1632, 48, 1633, 0),
woosh.Token(woosh.NAME, 'Collection', 1633, 0, 1633, 10),
woosh.Token(woosh.OP, '=', 1633, 11, 1633, 12),
woosh.Token(woosh.NAME, '_alias', 1633, 13, 1633, 19),
woosh.Token(woosh.OP, '(', 1633, 19, 1633, 20),
woosh.Token(woosh.NAME, 'collections', 1633, 20, 1633, 31),
woosh.Token(woosh.OP, '.', 1633, 31, 1633, 32),
woosh.Token(woosh.NAME, 'abc', 1633, 32, 1633, 35),
woosh.Token(woosh.OP, '.', 1633, 35, 1633, 36),
woosh.Token(woosh.NAME, 'Collection', 1633, 36, 1633, 46),
woosh.Token(woosh.OP, ',', 1633, 46, 1633, 47),
woosh.Token(woosh.NUMBER, '1', 1633, 48, 1633, 49),
woosh.Token(woosh.OP, ')', 1633, 49, 1633, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1633, 50, 1634, 0),
woosh.Token(woosh.NAME, 'Callable', 1634, 0, 1634, 8),
woosh.Token(woosh.OP, '=', 1634, 9, 1634, 10),
woosh.Token(woosh.NAME, '_CallableType', 1634, 11, 1634, 24),
woosh.Token(woosh.OP, '(', 1634, 24, 1634, 25),
woosh.Token(woosh.NAME, 'collections', 1634, 25, 1634, 36),
woosh.Token(woosh.OP, '.', 1634, 36, 1634, 37),
woosh.Token(woosh.NAME, 'abc', 1634, 37, 1634, 40),
woosh.Token(woosh.OP, '.', 1634, 40, 1634, 41),
woosh.Token(woosh.NAME, 'Callable', 1634, 41, 1634, 49),
woosh.Token(woosh.OP, ',', 1634, 49, 1634, 50),
woosh.Token(woosh.NUMBER, '2', 1634, 51, 1634, 52),
woosh.Token(woosh.OP, ')', 1634, 52, 1634, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1634, 53, 1635, 0),
woosh.Token(woosh.NAME, 'Callable', 1635, 0, 1635, 8),
woosh.Token(woosh.OP, '.', 1635, 8, 1635, 9),
woosh.Token(woosh.NAME, '__doc__', 1635, 9, 1635, 16),
woosh.Token(woosh.OP, '=', 1635, 17, 1635, 18),
woosh.Token(woosh.STRING, '"""Callable type; Callable[[int], str] is a function of (int) -> str.\r\n\r\n    The subscription syntax must always be used with exactly two\r\n    values: the argument list and the return type.  The argument list\r\n    must be a list of types or ellipsis; the return type must be a single type.\r\n\r\n    There is no syntax to indicate optional or keyword arguments,\r\n    such function types are rarely used as callback types.\r\n    """', 1636, 4, 1644, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1644, 7, 1645, 0),
woosh.Token(woosh.NAME, 'AbstractSet', 1645, 0, 1645, 11),
woosh.Token(woosh.OP, '=', 1645, 12, 1645, 13),
woosh.Token(woosh.NAME, '_alias', 1645, 14, 1645, 20),
woosh.Token(woosh.OP, '(', 1645, 20, 1645, 21),
woosh.Token(woosh.NAME, 'collections', 1645, 21, 1645, 32),
woosh.Token(woosh.OP, '.', 1645, 32, 1645, 33),
woosh.Token(woosh.NAME, 'abc', 1645, 33, 1645, 36),
woosh.Token(woosh.OP, '.', 1645, 36, 1645, 37),
woosh.Token(woosh.NAME, 'Set', 1645, 37, 1645, 40),
woosh.Token(woosh.OP, ',', 1645, 40, 1645, 41),
woosh.Token(woosh.NUMBER, '1', 1645, 42, 1645, 43),
woosh.Token(woosh.OP, ',', 1645, 43, 1645, 44),
woosh.Token(woosh.NAME, 'name', 1645, 45, 1645, 49),
woosh.Token(woosh.OP, '=', 1645, 49, 1645, 50),
woosh.Token(woosh.STRING, "'AbstractSet'", 1645, 50, 1645, 63),
woosh.Token(woosh.OP, ')', 1645, 63, 1645, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1645, 64, 1646, 0),
woosh.Token(woosh.NAME, 'MutableSet', 1646, 0, 1646, 10),
woosh.Token(woosh.OP, '=', 1646, 11, 1646, 12),
woosh.Token(woosh.NAME, '_alias', 1646, 13, 1646, 19),
woosh.Token(woosh.OP, '(', 1646, 19, 1646, 20),
woosh.Token(woosh.NAME, 'collections', 1646, 20, 1646, 31),
woosh.Token(woosh.OP, '.', 1646, 31, 1646, 32),
woosh.Token(woosh.NAME, 'abc', 1646, 32, 1646, 35),
woosh.Token(woosh.OP, '.', 1646, 35, 1646, 36),
woosh.Token(woosh.NAME, 'MutableSet', 1646, 36, 1646, 46),
woosh.Token(woosh.OP, ',', 1646, 46, 1646, 47),
woosh.Token(woosh.NUMBER, '1', 1646, 48, 1646, 49),
woosh.Token(woosh.OP, ')', 1646, 49, 1646, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1646, 50, 1647, 0),
woosh.Token(woosh.COMMENT, '# NOTE: Mapping is only covariant in the value type.', 1647, 0, 1647, 52),
woosh.Token(woosh.NAME, 'Mapping', 1648, 0, 1648, 7),
woosh.Token(woosh.OP, '=', 1648, 8, 1648, 9),
woosh.Token(woosh.NAME, '_alias', 1648, 10, 1648, 16),
woosh.Token(woosh.OP, '(', 1648, 16, 1648, 17),
woosh.Token(woosh.NAME, 'collections', 1648, 17, 1648, 28),
woosh.Token(woosh.OP, '.', 1648, 28, 1648, 29),
woosh.Token(woosh.NAME, 'abc', 1648, 29, 1648, 32),
woosh.Token(woosh.OP, '.', 1648, 32, 1648, 33),
woosh.Token(woosh.NAME, 'Mapping', 1648, 33, 1648, 40),
woosh.Token(woosh.OP, ',', 1648, 40, 1648, 41),
woosh.Token(woosh.NUMBER, '2', 1648, 42, 1648, 43),
woosh.Token(woosh.OP, ')', 1648, 43, 1648, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1648, 44, 1649, 0),
woosh.Token(woosh.NAME, 'MutableMapping', 1649, 0, 1649, 14),
woosh.Token(woosh.OP, '=', 1649, 15, 1649, 16),
woosh.Token(woosh.NAME, '_alias', 1649, 17, 1649, 23),
woosh.Token(woosh.OP, '(', 1649, 23, 1649, 24),
woosh.Token(woosh.NAME, 'collections', 1649, 24, 1649, 35),
woosh.Token(woosh.OP, '.', 1649, 35, 1649, 36),
woosh.Token(woosh.NAME, 'abc', 1649, 36, 1649, 39),
woosh.Token(woosh.OP, '.', 1649, 39, 1649, 40),
woosh.Token(woosh.NAME, 'MutableMapping', 1649, 40, 1649, 54),
woosh.Token(woosh.OP, ',', 1649, 54, 1649, 55),
woosh.Token(woosh.NUMBER, '2', 1649, 56, 1649, 57),
woosh.Token(woosh.OP, ')', 1649, 57, 1649, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1649, 58, 1650, 0),
woosh.Token(woosh.NAME, 'Sequence', 1650, 0, 1650, 8),
woosh.Token(woosh.OP, '=', 1650, 9, 1650, 10),
woosh.Token(woosh.NAME, '_alias', 1650, 11, 1650, 17),
woosh.Token(woosh.OP, '(', 1650, 17, 1650, 18),
woosh.Token(woosh.NAME, 'collections', 1650, 18, 1650, 29),
woosh.Token(woosh.OP, '.', 1650, 29, 1650, 30),
woosh.Token(woosh.NAME, 'abc', 1650, 30, 1650, 33),
woosh.Token(woosh.OP, '.', 1650, 33, 1650, 34),
woosh.Token(woosh.NAME, 'Sequence', 1650, 34, 1650, 42),
woosh.Token(woosh.OP, ',', 1650, 42, 1650, 43),
woosh.Token(woosh.NUMBER, '1', 1650, 44, 1650, 45),
woosh.Token(woosh.OP, ')', 1650, 45, 1650, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1650, 46, 1651, 0),
woosh.Token(woosh.NAME, 'MutableSequence', 1651, 0, 1651, 15),
woosh.Token(woosh.OP, '=', 1651, 16, 1651, 17),
woosh.Token(woosh.NAME, '_alias', 1651, 18, 1651, 24),
woosh.Token(woosh.OP, '(', 1651, 24, 1651, 25),
woosh.Token(woosh.NAME, 'collections', 1651, 25, 1651, 36),
woosh.Token(woosh.OP, '.', 1651, 36, 1651, 37),
woosh.Token(woosh.NAME, 'abc', 1651, 37, 1651, 40),
woosh.Token(woosh.OP, '.', 1651, 40, 1651, 41),
woosh.Token(woosh.NAME, 'MutableSequence', 1651, 41, 1651, 56),
woosh.Token(woosh.OP, ',', 1651, 56, 1651, 57),
woosh.Token(woosh.NUMBER, '1', 1651, 58, 1651, 59),
woosh.Token(woosh.OP, ')', 1651, 59, 1651, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1651, 60, 1652, 0),
woosh.Token(woosh.NAME, 'ByteString', 1652, 0, 1652, 10),
woosh.Token(woosh.OP, '=', 1652, 11, 1652, 12),
woosh.Token(woosh.NAME, '_alias', 1652, 13, 1652, 19),
woosh.Token(woosh.OP, '(', 1652, 19, 1652, 20),
woosh.Token(woosh.NAME, 'collections', 1652, 20, 1652, 31),
woosh.Token(woosh.OP, '.', 1652, 31, 1652, 32),
woosh.Token(woosh.NAME, 'abc', 1652, 32, 1652, 35),
woosh.Token(woosh.OP, '.', 1652, 35, 1652, 36),
woosh.Token(woosh.NAME, 'ByteString', 1652, 36, 1652, 46),
woosh.Token(woosh.OP, ',', 1652, 46, 1652, 47),
woosh.Token(woosh.NUMBER, '0', 1652, 48, 1652, 49),
woosh.Token(woosh.OP, ')', 1652, 49, 1652, 50),
woosh.Token(woosh.COMMENT, '# Not generic', 1652, 52, 1652, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1652, 65, 1653, 0),
woosh.Token(woosh.COMMENT, '# Tuple accepts variable number of parameters.', 1653, 0, 1653, 46),
woosh.Token(woosh.NAME, 'Tuple', 1654, 0, 1654, 5),
woosh.Token(woosh.OP, '=', 1654, 6, 1654, 7),
woosh.Token(woosh.NAME, '_TupleType', 1654, 8, 1654, 18),
woosh.Token(woosh.OP, '(', 1654, 18, 1654, 19),
woosh.Token(woosh.NAME, 'tuple', 1654, 19, 1654, 24),
woosh.Token(woosh.OP, ',', 1654, 24, 1654, 25),
woosh.Token(woosh.OP, '-', 1654, 26, 1654, 27),
woosh.Token(woosh.NUMBER, '1', 1654, 27, 1654, 28),
woosh.Token(woosh.OP, ',', 1654, 28, 1654, 29),
woosh.Token(woosh.NAME, 'inst', 1654, 30, 1654, 34),
woosh.Token(woosh.OP, '=', 1654, 34, 1654, 35),
woosh.Token(woosh.NAME, 'False', 1654, 35, 1654, 40),
woosh.Token(woosh.OP, ',', 1654, 40, 1654, 41),
woosh.Token(woosh.NAME, 'name', 1654, 42, 1654, 46),
woosh.Token(woosh.OP, '=', 1654, 46, 1654, 47),
woosh.Token(woosh.STRING, "'Tuple'", 1654, 47, 1654, 54),
woosh.Token(woosh.OP, ')', 1654, 54, 1654, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1654, 55, 1655, 0),
woosh.Token(woosh.NAME, 'Tuple', 1655, 0, 1655, 5),
woosh.Token(woosh.OP, '.', 1655, 5, 1655, 6),
woosh.Token(woosh.NAME, '__doc__', 1655, 6, 1655, 13),
woosh.Token(woosh.OP, '=', 1655, 14, 1655, 15),
woosh.Token(woosh.STRING, '"""Tuple type; Tuple[X, Y] is the cross-product type of X and Y.\r\n\r\n    Example: Tuple[T1, T2] is a tuple of two elements corresponding\r\n    to type variables T1 and T2.  Tuple[int, float, str] is a tuple\r\n    of an int, a float and a string.\r\n\r\n    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].\r\n    """', 1656, 4, 1663, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1663, 7, 1664, 0),
woosh.Token(woosh.NAME, 'List', 1664, 0, 1664, 4),
woosh.Token(woosh.OP, '=', 1664, 5, 1664, 6),
woosh.Token(woosh.NAME, '_alias', 1664, 7, 1664, 13),
woosh.Token(woosh.OP, '(', 1664, 13, 1664, 14),
woosh.Token(woosh.NAME, 'list', 1664, 14, 1664, 18),
woosh.Token(woosh.OP, ',', 1664, 18, 1664, 19),
woosh.Token(woosh.NUMBER, '1', 1664, 20, 1664, 21),
woosh.Token(woosh.OP, ',', 1664, 21, 1664, 22),
woosh.Token(woosh.NAME, 'inst', 1664, 23, 1664, 27),
woosh.Token(woosh.OP, '=', 1664, 27, 1664, 28),
woosh.Token(woosh.NAME, 'False', 1664, 28, 1664, 33),
woosh.Token(woosh.OP, ',', 1664, 33, 1664, 34),
woosh.Token(woosh.NAME, 'name', 1664, 35, 1664, 39),
woosh.Token(woosh.OP, '=', 1664, 39, 1664, 40),
woosh.Token(woosh.STRING, "'List'", 1664, 40, 1664, 46),
woosh.Token(woosh.OP, ')', 1664, 46, 1664, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1664, 47, 1665, 0),
woosh.Token(woosh.NAME, 'Deque', 1665, 0, 1665, 5),
woosh.Token(woosh.OP, '=', 1665, 6, 1665, 7),
woosh.Token(woosh.NAME, '_alias', 1665, 8, 1665, 14),
woosh.Token(woosh.OP, '(', 1665, 14, 1665, 15),
woosh.Token(woosh.NAME, 'collections', 1665, 15, 1665, 26),
woosh.Token(woosh.OP, '.', 1665, 26, 1665, 27),
woosh.Token(woosh.NAME, 'deque', 1665, 27, 1665, 32),
woosh.Token(woosh.OP, ',', 1665, 32, 1665, 33),
woosh.Token(woosh.NUMBER, '1', 1665, 34, 1665, 35),
woosh.Token(woosh.OP, ',', 1665, 35, 1665, 36),
woosh.Token(woosh.NAME, 'name', 1665, 37, 1665, 41),
woosh.Token(woosh.OP, '=', 1665, 41, 1665, 42),
woosh.Token(woosh.STRING, "'Deque'", 1665, 42, 1665, 49),
woosh.Token(woosh.OP, ')', 1665, 49, 1665, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1665, 50, 1666, 0),
woosh.Token(woosh.NAME, 'Set', 1666, 0, 1666, 3),
woosh.Token(woosh.OP, '=', 1666, 4, 1666, 5),
woosh.Token(woosh.NAME, '_alias', 1666, 6, 1666, 12),
woosh.Token(woosh.OP, '(', 1666, 12, 1666, 13),
woosh.Token(woosh.NAME, 'set', 1666, 13, 1666, 16),
woosh.Token(woosh.OP, ',', 1666, 16, 1666, 17),
woosh.Token(woosh.NUMBER, '1', 1666, 18, 1666, 19),
woosh.Token(woosh.OP, ',', 1666, 19, 1666, 20),
woosh.Token(woosh.NAME, 'inst', 1666, 21, 1666, 25),
woosh.Token(woosh.OP, '=', 1666, 25, 1666, 26),
woosh.Token(woosh.NAME, 'False', 1666, 26, 1666, 31),
woosh.Token(woosh.OP, ',', 1666, 31, 1666, 32),
woosh.Token(woosh.NAME, 'name', 1666, 33, 1666, 37),
woosh.Token(woosh.OP, '=', 1666, 37, 1666, 38),
woosh.Token(woosh.STRING, "'Set'", 1666, 38, 1666, 43),
woosh.Token(woosh.OP, ')', 1666, 43, 1666, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1666, 44, 1667, 0),
woosh.Token(woosh.NAME, 'FrozenSet', 1667, 0, 1667, 9),
woosh.Token(woosh.OP, '=', 1667, 10, 1667, 11),
woosh.Token(woosh.NAME, '_alias', 1667, 12, 1667, 18),
woosh.Token(woosh.OP, '(', 1667, 18, 1667, 19),
woosh.Token(woosh.NAME, 'frozenset', 1667, 19, 1667, 28),
woosh.Token(woosh.OP, ',', 1667, 28, 1667, 29),
woosh.Token(woosh.NUMBER, '1', 1667, 30, 1667, 31),
woosh.Token(woosh.OP, ',', 1667, 31, 1667, 32),
woosh.Token(woosh.NAME, 'inst', 1667, 33, 1667, 37),
woosh.Token(woosh.OP, '=', 1667, 37, 1667, 38),
woosh.Token(woosh.NAME, 'False', 1667, 38, 1667, 43),
woosh.Token(woosh.OP, ',', 1667, 43, 1667, 44),
woosh.Token(woosh.NAME, 'name', 1667, 45, 1667, 49),
woosh.Token(woosh.OP, '=', 1667, 49, 1667, 50),
woosh.Token(woosh.STRING, "'FrozenSet'", 1667, 50, 1667, 61),
woosh.Token(woosh.OP, ')', 1667, 61, 1667, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1667, 62, 1668, 0),
woosh.Token(woosh.NAME, 'MappingView', 1668, 0, 1668, 11),
woosh.Token(woosh.OP, '=', 1668, 12, 1668, 13),
woosh.Token(woosh.NAME, '_alias', 1668, 14, 1668, 20),
woosh.Token(woosh.OP, '(', 1668, 20, 1668, 21),
woosh.Token(woosh.NAME, 'collections', 1668, 21, 1668, 32),
woosh.Token(woosh.OP, '.', 1668, 32, 1668, 33),
woosh.Token(woosh.NAME, 'abc', 1668, 33, 1668, 36),
woosh.Token(woosh.OP, '.', 1668, 36, 1668, 37),
woosh.Token(woosh.NAME, 'MappingView', 1668, 37, 1668, 48),
woosh.Token(woosh.OP, ',', 1668, 48, 1668, 49),
woosh.Token(woosh.NUMBER, '1', 1668, 50, 1668, 51),
woosh.Token(woosh.OP, ')', 1668, 51, 1668, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1668, 52, 1669, 0),
woosh.Token(woosh.NAME, 'KeysView', 1669, 0, 1669, 8),
woosh.Token(woosh.OP, '=', 1669, 9, 1669, 10),
woosh.Token(woosh.NAME, '_alias', 1669, 11, 1669, 17),
woosh.Token(woosh.OP, '(', 1669, 17, 1669, 18),
woosh.Token(woosh.NAME, 'collections', 1669, 18, 1669, 29),
woosh.Token(woosh.OP, '.', 1669, 29, 1669, 30),
woosh.Token(woosh.NAME, 'abc', 1669, 30, 1669, 33),
woosh.Token(woosh.OP, '.', 1669, 33, 1669, 34),
woosh.Token(woosh.NAME, 'KeysView', 1669, 34, 1669, 42),
woosh.Token(woosh.OP, ',', 1669, 42, 1669, 43),
woosh.Token(woosh.NUMBER, '1', 1669, 44, 1669, 45),
woosh.Token(woosh.OP, ')', 1669, 45, 1669, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1669, 46, 1670, 0),
woosh.Token(woosh.NAME, 'ItemsView', 1670, 0, 1670, 9),
woosh.Token(woosh.OP, '=', 1670, 10, 1670, 11),
woosh.Token(woosh.NAME, '_alias', 1670, 12, 1670, 18),
woosh.Token(woosh.OP, '(', 1670, 18, 1670, 19),
woosh.Token(woosh.NAME, 'collections', 1670, 19, 1670, 30),
woosh.Token(woosh.OP, '.', 1670, 30, 1670, 31),
woosh.Token(woosh.NAME, 'abc', 1670, 31, 1670, 34),
woosh.Token(woosh.OP, '.', 1670, 34, 1670, 35),
woosh.Token(woosh.NAME, 'ItemsView', 1670, 35, 1670, 44),
woosh.Token(woosh.OP, ',', 1670, 44, 1670, 45),
woosh.Token(woosh.NUMBER, '2', 1670, 46, 1670, 47),
woosh.Token(woosh.OP, ')', 1670, 47, 1670, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1670, 48, 1671, 0),
woosh.Token(woosh.NAME, 'ValuesView', 1671, 0, 1671, 10),
woosh.Token(woosh.OP, '=', 1671, 11, 1671, 12),
woosh.Token(woosh.NAME, '_alias', 1671, 13, 1671, 19),
woosh.Token(woosh.OP, '(', 1671, 19, 1671, 20),
woosh.Token(woosh.NAME, 'collections', 1671, 20, 1671, 31),
woosh.Token(woosh.OP, '.', 1671, 31, 1671, 32),
woosh.Token(woosh.NAME, 'abc', 1671, 32, 1671, 35),
woosh.Token(woosh.OP, '.', 1671, 35, 1671, 36),
woosh.Token(woosh.NAME, 'ValuesView', 1671, 36, 1671, 46),
woosh.Token(woosh.OP, ',', 1671, 46, 1671, 47),
woosh.Token(woosh.NUMBER, '1', 1671, 48, 1671, 49),
woosh.Token(woosh.OP, ')', 1671, 49, 1671, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1671, 50, 1672, 0),
woosh.Token(woosh.NAME, 'ContextManager', 1672, 0, 1672, 14),
woosh.Token(woosh.OP, '=', 1672, 15, 1672, 16),
woosh.Token(woosh.NAME, '_alias', 1672, 17, 1672, 23),
woosh.Token(woosh.OP, '(', 1672, 23, 1672, 24),
woosh.Token(woosh.NAME, 'contextlib', 1672, 24, 1672, 34),
woosh.Token(woosh.OP, '.', 1672, 34, 1672, 35),
woosh.Token(woosh.NAME, 'AbstractContextManager', 1672, 35, 1672, 57),
woosh.Token(woosh.OP, ',', 1672, 57, 1672, 58),
woosh.Token(woosh.NUMBER, '1', 1672, 59, 1672, 60),
woosh.Token(woosh.OP, ',', 1672, 60, 1672, 61),
woosh.Token(woosh.NAME, 'name', 1672, 62, 1672, 66),
woosh.Token(woosh.OP, '=', 1672, 66, 1672, 67),
woosh.Token(woosh.STRING, "'ContextManager'", 1672, 67, 1672, 83),
woosh.Token(woosh.OP, ')', 1672, 83, 1672, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 1672, 84, 1673, 0),
woosh.Token(woosh.NAME, 'AsyncContextManager', 1673, 0, 1673, 19),
woosh.Token(woosh.OP, '=', 1673, 20, 1673, 21),
woosh.Token(woosh.NAME, '_alias', 1673, 22, 1673, 28),
woosh.Token(woosh.OP, '(', 1673, 28, 1673, 29),
woosh.Token(woosh.NAME, 'contextlib', 1673, 29, 1673, 39),
woosh.Token(woosh.OP, '.', 1673, 39, 1673, 40),
woosh.Token(woosh.NAME, 'AbstractAsyncContextManager', 1673, 40, 1673, 67),
woosh.Token(woosh.OP, ',', 1673, 67, 1673, 68),
woosh.Token(woosh.NUMBER, '1', 1673, 69, 1673, 70),
woosh.Token(woosh.OP, ',', 1673, 70, 1673, 71),
woosh.Token(woosh.NAME, 'name', 1673, 72, 1673, 76),
woosh.Token(woosh.OP, '=', 1673, 76, 1673, 77),
woosh.Token(woosh.STRING, "'AsyncContextManager'", 1673, 77, 1673, 98),
woosh.Token(woosh.OP, ')', 1673, 98, 1673, 99),
woosh.Token(woosh.NEWLINE, '\r\n', 1673, 99, 1674, 0),
woosh.Token(woosh.NAME, 'Dict', 1674, 0, 1674, 4),
woosh.Token(woosh.OP, '=', 1674, 5, 1674, 6),
woosh.Token(woosh.NAME, '_alias', 1674, 7, 1674, 13),
woosh.Token(woosh.OP, '(', 1674, 13, 1674, 14),
woosh.Token(woosh.NAME, 'dict', 1674, 14, 1674, 18),
woosh.Token(woosh.OP, ',', 1674, 18, 1674, 19),
woosh.Token(woosh.NUMBER, '2', 1674, 20, 1674, 21),
woosh.Token(woosh.OP, ',', 1674, 21, 1674, 22),
woosh.Token(woosh.NAME, 'inst', 1674, 23, 1674, 27),
woosh.Token(woosh.OP, '=', 1674, 27, 1674, 28),
woosh.Token(woosh.NAME, 'False', 1674, 28, 1674, 33),
woosh.Token(woosh.OP, ',', 1674, 33, 1674, 34),
woosh.Token(woosh.NAME, 'name', 1674, 35, 1674, 39),
woosh.Token(woosh.OP, '=', 1674, 39, 1674, 40),
woosh.Token(woosh.STRING, "'Dict'", 1674, 40, 1674, 46),
woosh.Token(woosh.OP, ')', 1674, 46, 1674, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1674, 47, 1675, 0),
woosh.Token(woosh.NAME, 'DefaultDict', 1675, 0, 1675, 11),
woosh.Token(woosh.OP, '=', 1675, 12, 1675, 13),
woosh.Token(woosh.NAME, '_alias', 1675, 14, 1675, 20),
woosh.Token(woosh.OP, '(', 1675, 20, 1675, 21),
woosh.Token(woosh.NAME, 'collections', 1675, 21, 1675, 32),
woosh.Token(woosh.OP, '.', 1675, 32, 1675, 33),
woosh.Token(woosh.NAME, 'defaultdict', 1675, 33, 1675, 44),
woosh.Token(woosh.OP, ',', 1675, 44, 1675, 45),
woosh.Token(woosh.NUMBER, '2', 1675, 46, 1675, 47),
woosh.Token(woosh.OP, ',', 1675, 47, 1675, 48),
woosh.Token(woosh.NAME, 'name', 1675, 49, 1675, 53),
woosh.Token(woosh.OP, '=', 1675, 53, 1675, 54),
woosh.Token(woosh.STRING, "'DefaultDict'", 1675, 54, 1675, 67),
woosh.Token(woosh.OP, ')', 1675, 67, 1675, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1675, 68, 1676, 0),
woosh.Token(woosh.NAME, 'OrderedDict', 1676, 0, 1676, 11),
woosh.Token(woosh.OP, '=', 1676, 12, 1676, 13),
woosh.Token(woosh.NAME, '_alias', 1676, 14, 1676, 20),
woosh.Token(woosh.OP, '(', 1676, 20, 1676, 21),
woosh.Token(woosh.NAME, 'collections', 1676, 21, 1676, 32),
woosh.Token(woosh.OP, '.', 1676, 32, 1676, 33),
woosh.Token(woosh.NAME, 'OrderedDict', 1676, 33, 1676, 44),
woosh.Token(woosh.OP, ',', 1676, 44, 1676, 45),
woosh.Token(woosh.NUMBER, '2', 1676, 46, 1676, 47),
woosh.Token(woosh.OP, ')', 1676, 47, 1676, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1676, 48, 1677, 0),
woosh.Token(woosh.NAME, 'Counter', 1677, 0, 1677, 7),
woosh.Token(woosh.OP, '=', 1677, 8, 1677, 9),
woosh.Token(woosh.NAME, '_alias', 1677, 10, 1677, 16),
woosh.Token(woosh.OP, '(', 1677, 16, 1677, 17),
woosh.Token(woosh.NAME, 'collections', 1677, 17, 1677, 28),
woosh.Token(woosh.OP, '.', 1677, 28, 1677, 29),
woosh.Token(woosh.NAME, 'Counter', 1677, 29, 1677, 36),
woosh.Token(woosh.OP, ',', 1677, 36, 1677, 37),
woosh.Token(woosh.NUMBER, '1', 1677, 38, 1677, 39),
woosh.Token(woosh.OP, ')', 1677, 39, 1677, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1677, 40, 1678, 0),
woosh.Token(woosh.NAME, 'ChainMap', 1678, 0, 1678, 8),
woosh.Token(woosh.OP, '=', 1678, 9, 1678, 10),
woosh.Token(woosh.NAME, '_alias', 1678, 11, 1678, 17),
woosh.Token(woosh.OP, '(', 1678, 17, 1678, 18),
woosh.Token(woosh.NAME, 'collections', 1678, 18, 1678, 29),
woosh.Token(woosh.OP, '.', 1678, 29, 1678, 30),
woosh.Token(woosh.NAME, 'ChainMap', 1678, 30, 1678, 38),
woosh.Token(woosh.OP, ',', 1678, 38, 1678, 39),
woosh.Token(woosh.NUMBER, '2', 1678, 40, 1678, 41),
woosh.Token(woosh.OP, ')', 1678, 41, 1678, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1678, 42, 1679, 0),
woosh.Token(woosh.NAME, 'Generator', 1679, 0, 1679, 9),
woosh.Token(woosh.OP, '=', 1679, 10, 1679, 11),
woosh.Token(woosh.NAME, '_alias', 1679, 12, 1679, 18),
woosh.Token(woosh.OP, '(', 1679, 18, 1679, 19),
woosh.Token(woosh.NAME, 'collections', 1679, 19, 1679, 30),
woosh.Token(woosh.OP, '.', 1679, 30, 1679, 31),
woosh.Token(woosh.NAME, 'abc', 1679, 31, 1679, 34),
woosh.Token(woosh.OP, '.', 1679, 34, 1679, 35),
woosh.Token(woosh.NAME, 'Generator', 1679, 35, 1679, 44),
woosh.Token(woosh.OP, ',', 1679, 44, 1679, 45),
woosh.Token(woosh.NUMBER, '3', 1679, 46, 1679, 47),
woosh.Token(woosh.OP, ')', 1679, 47, 1679, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1679, 48, 1680, 0),
woosh.Token(woosh.NAME, 'AsyncGenerator', 1680, 0, 1680, 14),
woosh.Token(woosh.OP, '=', 1680, 15, 1680, 16),
woosh.Token(woosh.NAME, '_alias', 1680, 17, 1680, 23),
woosh.Token(woosh.OP, '(', 1680, 23, 1680, 24),
woosh.Token(woosh.NAME, 'collections', 1680, 24, 1680, 35),
woosh.Token(woosh.OP, '.', 1680, 35, 1680, 36),
woosh.Token(woosh.NAME, 'abc', 1680, 36, 1680, 39),
woosh.Token(woosh.OP, '.', 1680, 39, 1680, 40),
woosh.Token(woosh.NAME, 'AsyncGenerator', 1680, 40, 1680, 54),
woosh.Token(woosh.OP, ',', 1680, 54, 1680, 55),
woosh.Token(woosh.NUMBER, '2', 1680, 56, 1680, 57),
woosh.Token(woosh.OP, ')', 1680, 57, 1680, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1680, 58, 1681, 0),
woosh.Token(woosh.NAME, 'Type', 1681, 0, 1681, 4),
woosh.Token(woosh.OP, '=', 1681, 5, 1681, 6),
woosh.Token(woosh.NAME, '_alias', 1681, 7, 1681, 13),
woosh.Token(woosh.OP, '(', 1681, 13, 1681, 14),
woosh.Token(woosh.NAME, 'type', 1681, 14, 1681, 18),
woosh.Token(woosh.OP, ',', 1681, 18, 1681, 19),
woosh.Token(woosh.NUMBER, '1', 1681, 20, 1681, 21),
woosh.Token(woosh.OP, ',', 1681, 21, 1681, 22),
woosh.Token(woosh.NAME, 'inst', 1681, 23, 1681, 27),
woosh.Token(woosh.OP, '=', 1681, 27, 1681, 28),
woosh.Token(woosh.NAME, 'False', 1681, 28, 1681, 33),
woosh.Token(woosh.OP, ',', 1681, 33, 1681, 34),
woosh.Token(woosh.NAME, 'name', 1681, 35, 1681, 39),
woosh.Token(woosh.OP, '=', 1681, 39, 1681, 40),
woosh.Token(woosh.STRING, "'Type'", 1681, 40, 1681, 46),
woosh.Token(woosh.OP, ')', 1681, 46, 1681, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1681, 47, 1682, 0),
woosh.Token(woosh.NAME, 'Type', 1682, 0, 1682, 4),
woosh.Token(woosh.OP, '.', 1682, 4, 1682, 5),
woosh.Token(woosh.NAME, '__doc__', 1682, 5, 1682, 12),
woosh.Token(woosh.OP, '=', 1682, 13, 1682, 14),
woosh.Token(woosh.STRING, '"""A special construct usable to annotate class objects.\r\n\r\n    For example, suppose we have the following classes::\r\n\r\n      class User: ...  # Abstract base for User classes\r\n      class BasicUser(User): ...\r\n      class ProUser(User): ...\r\n      class TeamUser(User): ...\r\n\r\n    And a function that takes a class argument that\'s a subclass of\r\n    User and returns an instance of the corresponding class::\r\n\r\n      U = TypeVar(\'U\', bound=User)\r\n      def new_user(user_class: Type[U]) -> U:\r\n          user = user_class()\r\n          # (Here we could write the user object to a database)\r\n          return user\r\n\r\n      joe = new_user(BasicUser)\r\n\r\n    At this point the type checker knows that joe has type BasicUser.\r\n    """', 1683, 4, 1704, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1704, 7, 1705, 0),
woosh.Token(woosh.OP, '@', 1707, 0, 1707, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1707, 1, 1707, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1707, 18, 1708, 0),
woosh.Token(woosh.NAME, 'class', 1708, 0, 1708, 5),
woosh.Token(woosh.NAME, 'SupportsInt', 1708, 6, 1708, 17),
woosh.Token(woosh.OP, '(', 1708, 17, 1708, 18),
woosh.Token(woosh.NAME, 'Protocol', 1708, 18, 1708, 26),
woosh.Token(woosh.OP, ')', 1708, 26, 1708, 27),
woosh.Token(woosh.OP, ':', 1708, 27, 1708, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1708, 28, 1709, 0),
woosh.Token(woosh.INDENT, '    ', 1709, 0, 1709, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __int__."""', 1709, 4, 1709, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1709, 50, 1710, 0),
woosh.Token(woosh.NAME, '__slots__', 1710, 4, 1710, 13),
woosh.Token(woosh.OP, '=', 1710, 14, 1710, 15),
woosh.Token(woosh.OP, '(', 1710, 16, 1710, 17),
woosh.Token(woosh.OP, ')', 1710, 17, 1710, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1710, 18, 1711, 0),
woosh.Token(woosh.OP, '@', 1712, 4, 1712, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1712, 5, 1712, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1712, 19, 1713, 0),
woosh.Token(woosh.NAME, 'def', 1713, 4, 1713, 7),
woosh.Token(woosh.NAME, '__int__', 1713, 8, 1713, 15),
woosh.Token(woosh.OP, '(', 1713, 15, 1713, 16),
woosh.Token(woosh.NAME, 'self', 1713, 16, 1713, 20),
woosh.Token(woosh.OP, ')', 1713, 20, 1713, 21),
woosh.Token(woosh.OP, '->', 1713, 22, 1713, 24),
woosh.Token(woosh.NAME, 'int', 1713, 25, 1713, 28),
woosh.Token(woosh.OP, ':', 1713, 28, 1713, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1713, 29, 1714, 0),
woosh.Token(woosh.INDENT, '        ', 1714, 0, 1714, 8),
woosh.Token(woosh.NAME, 'pass', 1714, 8, 1714, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1714, 12, 1715, 0),
woosh.Token(woosh.DEDENT, '', 1717, 0, 1717, 0),
woosh.Token(woosh.DEDENT, '', 1717, 0, 1717, 0),
woosh.Token(woosh.OP, '@', 1717, 0, 1717, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1717, 1, 1717, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1717, 18, 1718, 0),
woosh.Token(woosh.NAME, 'class', 1718, 0, 1718, 5),
woosh.Token(woosh.NAME, 'SupportsFloat', 1718, 6, 1718, 19),
woosh.Token(woosh.OP, '(', 1718, 19, 1718, 20),
woosh.Token(woosh.NAME, 'Protocol', 1718, 20, 1718, 28),
woosh.Token(woosh.OP, ')', 1718, 28, 1718, 29),
woosh.Token(woosh.OP, ':', 1718, 29, 1718, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1718, 30, 1719, 0),
woosh.Token(woosh.INDENT, '    ', 1719, 0, 1719, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __float__."""', 1719, 4, 1719, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1719, 52, 1720, 0),
woosh.Token(woosh.NAME, '__slots__', 1720, 4, 1720, 13),
woosh.Token(woosh.OP, '=', 1720, 14, 1720, 15),
woosh.Token(woosh.OP, '(', 1720, 16, 1720, 17),
woosh.Token(woosh.OP, ')', 1720, 17, 1720, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1720, 18, 1721, 0),
woosh.Token(woosh.OP, '@', 1722, 4, 1722, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1722, 5, 1722, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1722, 19, 1723, 0),
woosh.Token(woosh.NAME, 'def', 1723, 4, 1723, 7),
woosh.Token(woosh.NAME, '__float__', 1723, 8, 1723, 17),
woosh.Token(woosh.OP, '(', 1723, 17, 1723, 18),
woosh.Token(woosh.NAME, 'self', 1723, 18, 1723, 22),
woosh.Token(woosh.OP, ')', 1723, 22, 1723, 23),
woosh.Token(woosh.OP, '->', 1723, 24, 1723, 26),
woosh.Token(woosh.NAME, 'float', 1723, 27, 1723, 32),
woosh.Token(woosh.OP, ':', 1723, 32, 1723, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1723, 33, 1724, 0),
woosh.Token(woosh.INDENT, '        ', 1724, 0, 1724, 8),
woosh.Token(woosh.NAME, 'pass', 1724, 8, 1724, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1724, 12, 1725, 0),
woosh.Token(woosh.DEDENT, '', 1727, 0, 1727, 0),
woosh.Token(woosh.DEDENT, '', 1727, 0, 1727, 0),
woosh.Token(woosh.OP, '@', 1727, 0, 1727, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1727, 1, 1727, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1727, 18, 1728, 0),
woosh.Token(woosh.NAME, 'class', 1728, 0, 1728, 5),
woosh.Token(woosh.NAME, 'SupportsComplex', 1728, 6, 1728, 21),
woosh.Token(woosh.OP, '(', 1728, 21, 1728, 22),
woosh.Token(woosh.NAME, 'Protocol', 1728, 22, 1728, 30),
woosh.Token(woosh.OP, ')', 1728, 30, 1728, 31),
woosh.Token(woosh.OP, ':', 1728, 31, 1728, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1728, 32, 1729, 0),
woosh.Token(woosh.INDENT, '    ', 1729, 0, 1729, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __complex__."""', 1729, 4, 1729, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1729, 54, 1730, 0),
woosh.Token(woosh.NAME, '__slots__', 1730, 4, 1730, 13),
woosh.Token(woosh.OP, '=', 1730, 14, 1730, 15),
woosh.Token(woosh.OP, '(', 1730, 16, 1730, 17),
woosh.Token(woosh.OP, ')', 1730, 17, 1730, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1730, 18, 1731, 0),
woosh.Token(woosh.OP, '@', 1732, 4, 1732, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1732, 5, 1732, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1732, 19, 1733, 0),
woosh.Token(woosh.NAME, 'def', 1733, 4, 1733, 7),
woosh.Token(woosh.NAME, '__complex__', 1733, 8, 1733, 19),
woosh.Token(woosh.OP, '(', 1733, 19, 1733, 20),
woosh.Token(woosh.NAME, 'self', 1733, 20, 1733, 24),
woosh.Token(woosh.OP, ')', 1733, 24, 1733, 25),
woosh.Token(woosh.OP, '->', 1733, 26, 1733, 28),
woosh.Token(woosh.NAME, 'complex', 1733, 29, 1733, 36),
woosh.Token(woosh.OP, ':', 1733, 36, 1733, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1733, 37, 1734, 0),
woosh.Token(woosh.INDENT, '        ', 1734, 0, 1734, 8),
woosh.Token(woosh.NAME, 'pass', 1734, 8, 1734, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1734, 12, 1735, 0),
woosh.Token(woosh.DEDENT, '', 1737, 0, 1737, 0),
woosh.Token(woosh.DEDENT, '', 1737, 0, 1737, 0),
woosh.Token(woosh.OP, '@', 1737, 0, 1737, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1737, 1, 1737, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1737, 18, 1738, 0),
woosh.Token(woosh.NAME, 'class', 1738, 0, 1738, 5),
woosh.Token(woosh.NAME, 'SupportsBytes', 1738, 6, 1738, 19),
woosh.Token(woosh.OP, '(', 1738, 19, 1738, 20),
woosh.Token(woosh.NAME, 'Protocol', 1738, 20, 1738, 28),
woosh.Token(woosh.OP, ')', 1738, 28, 1738, 29),
woosh.Token(woosh.OP, ':', 1738, 29, 1738, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1738, 30, 1739, 0),
woosh.Token(woosh.INDENT, '    ', 1739, 0, 1739, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __bytes__."""', 1739, 4, 1739, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1739, 52, 1740, 0),
woosh.Token(woosh.NAME, '__slots__', 1740, 4, 1740, 13),
woosh.Token(woosh.OP, '=', 1740, 14, 1740, 15),
woosh.Token(woosh.OP, '(', 1740, 16, 1740, 17),
woosh.Token(woosh.OP, ')', 1740, 17, 1740, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1740, 18, 1741, 0),
woosh.Token(woosh.OP, '@', 1742, 4, 1742, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1742, 5, 1742, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1742, 19, 1743, 0),
woosh.Token(woosh.NAME, 'def', 1743, 4, 1743, 7),
woosh.Token(woosh.NAME, '__bytes__', 1743, 8, 1743, 17),
woosh.Token(woosh.OP, '(', 1743, 17, 1743, 18),
woosh.Token(woosh.NAME, 'self', 1743, 18, 1743, 22),
woosh.Token(woosh.OP, ')', 1743, 22, 1743, 23),
woosh.Token(woosh.OP, '->', 1743, 24, 1743, 26),
woosh.Token(woosh.NAME, 'bytes', 1743, 27, 1743, 32),
woosh.Token(woosh.OP, ':', 1743, 32, 1743, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1743, 33, 1744, 0),
woosh.Token(woosh.INDENT, '        ', 1744, 0, 1744, 8),
woosh.Token(woosh.NAME, 'pass', 1744, 8, 1744, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1744, 12, 1745, 0),
woosh.Token(woosh.DEDENT, '', 1747, 0, 1747, 0),
woosh.Token(woosh.DEDENT, '', 1747, 0, 1747, 0),
woosh.Token(woosh.OP, '@', 1747, 0, 1747, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1747, 1, 1747, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1747, 18, 1748, 0),
woosh.Token(woosh.NAME, 'class', 1748, 0, 1748, 5),
woosh.Token(woosh.NAME, 'SupportsIndex', 1748, 6, 1748, 19),
woosh.Token(woosh.OP, '(', 1748, 19, 1748, 20),
woosh.Token(woosh.NAME, 'Protocol', 1748, 20, 1748, 28),
woosh.Token(woosh.OP, ')', 1748, 28, 1748, 29),
woosh.Token(woosh.OP, ':', 1748, 29, 1748, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1748, 30, 1749, 0),
woosh.Token(woosh.INDENT, '    ', 1749, 0, 1749, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __index__."""', 1749, 4, 1749, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1749, 52, 1750, 0),
woosh.Token(woosh.NAME, '__slots__', 1750, 4, 1750, 13),
woosh.Token(woosh.OP, '=', 1750, 14, 1750, 15),
woosh.Token(woosh.OP, '(', 1750, 16, 1750, 17),
woosh.Token(woosh.OP, ')', 1750, 17, 1750, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1750, 18, 1751, 0),
woosh.Token(woosh.OP, '@', 1752, 4, 1752, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1752, 5, 1752, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1752, 19, 1753, 0),
woosh.Token(woosh.NAME, 'def', 1753, 4, 1753, 7),
woosh.Token(woosh.NAME, '__index__', 1753, 8, 1753, 17),
woosh.Token(woosh.OP, '(', 1753, 17, 1753, 18),
woosh.Token(woosh.NAME, 'self', 1753, 18, 1753, 22),
woosh.Token(woosh.OP, ')', 1753, 22, 1753, 23),
woosh.Token(woosh.OP, '->', 1753, 24, 1753, 26),
woosh.Token(woosh.NAME, 'int', 1753, 27, 1753, 30),
woosh.Token(woosh.OP, ':', 1753, 30, 1753, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1753, 31, 1754, 0),
woosh.Token(woosh.INDENT, '        ', 1754, 0, 1754, 8),
woosh.Token(woosh.NAME, 'pass', 1754, 8, 1754, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1754, 12, 1755, 0),
woosh.Token(woosh.DEDENT, '', 1757, 0, 1757, 0),
woosh.Token(woosh.DEDENT, '', 1757, 0, 1757, 0),
woosh.Token(woosh.OP, '@', 1757, 0, 1757, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1757, 1, 1757, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1757, 18, 1758, 0),
woosh.Token(woosh.NAME, 'class', 1758, 0, 1758, 5),
woosh.Token(woosh.NAME, 'SupportsAbs', 1758, 6, 1758, 17),
woosh.Token(woosh.OP, '(', 1758, 17, 1758, 18),
woosh.Token(woosh.NAME, 'Protocol', 1758, 18, 1758, 26),
woosh.Token(woosh.OP, '[', 1758, 26, 1758, 27),
woosh.Token(woosh.NAME, 'T_co', 1758, 27, 1758, 31),
woosh.Token(woosh.OP, ']', 1758, 31, 1758, 32),
woosh.Token(woosh.OP, ')', 1758, 32, 1758, 33),
woosh.Token(woosh.OP, ':', 1758, 33, 1758, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1758, 34, 1759, 0),
woosh.Token(woosh.INDENT, '    ', 1759, 0, 1759, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __abs__ that is covariant in its return type."""', 1759, 4, 1759, 87),
woosh.Token(woosh.NEWLINE, '\r\n', 1759, 87, 1760, 0),
woosh.Token(woosh.NAME, '__slots__', 1760, 4, 1760, 13),
woosh.Token(woosh.OP, '=', 1760, 14, 1760, 15),
woosh.Token(woosh.OP, '(', 1760, 16, 1760, 17),
woosh.Token(woosh.OP, ')', 1760, 17, 1760, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1760, 18, 1761, 0),
woosh.Token(woosh.OP, '@', 1762, 4, 1762, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1762, 5, 1762, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1762, 19, 1763, 0),
woosh.Token(woosh.NAME, 'def', 1763, 4, 1763, 7),
woosh.Token(woosh.NAME, '__abs__', 1763, 8, 1763, 15),
woosh.Token(woosh.OP, '(', 1763, 15, 1763, 16),
woosh.Token(woosh.NAME, 'self', 1763, 16, 1763, 20),
woosh.Token(woosh.OP, ')', 1763, 20, 1763, 21),
woosh.Token(woosh.OP, '->', 1763, 22, 1763, 24),
woosh.Token(woosh.NAME, 'T_co', 1763, 25, 1763, 29),
woosh.Token(woosh.OP, ':', 1763, 29, 1763, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1763, 30, 1764, 0),
woosh.Token(woosh.INDENT, '        ', 1764, 0, 1764, 8),
woosh.Token(woosh.NAME, 'pass', 1764, 8, 1764, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1764, 12, 1765, 0),
woosh.Token(woosh.DEDENT, '', 1767, 0, 1767, 0),
woosh.Token(woosh.DEDENT, '', 1767, 0, 1767, 0),
woosh.Token(woosh.OP, '@', 1767, 0, 1767, 1),
woosh.Token(woosh.NAME, 'runtime_checkable', 1767, 1, 1767, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1767, 18, 1768, 0),
woosh.Token(woosh.NAME, 'class', 1768, 0, 1768, 5),
woosh.Token(woosh.NAME, 'SupportsRound', 1768, 6, 1768, 19),
woosh.Token(woosh.OP, '(', 1768, 19, 1768, 20),
woosh.Token(woosh.NAME, 'Protocol', 1768, 20, 1768, 28),
woosh.Token(woosh.OP, '[', 1768, 28, 1768, 29),
woosh.Token(woosh.NAME, 'T_co', 1768, 29, 1768, 33),
woosh.Token(woosh.OP, ']', 1768, 33, 1768, 34),
woosh.Token(woosh.OP, ')', 1768, 34, 1768, 35),
woosh.Token(woosh.OP, ':', 1768, 35, 1768, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1768, 36, 1769, 0),
woosh.Token(woosh.INDENT, '    ', 1769, 0, 1769, 4),
woosh.Token(woosh.STRING, '"""An ABC with one abstract method __round__ that is covariant in its return type."""', 1769, 4, 1769, 89),
woosh.Token(woosh.NEWLINE, '\r\n', 1769, 89, 1770, 0),
woosh.Token(woosh.NAME, '__slots__', 1770, 4, 1770, 13),
woosh.Token(woosh.OP, '=', 1770, 14, 1770, 15),
woosh.Token(woosh.OP, '(', 1770, 16, 1770, 17),
woosh.Token(woosh.OP, ')', 1770, 17, 1770, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1770, 18, 1771, 0),
woosh.Token(woosh.OP, '@', 1772, 4, 1772, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 1772, 5, 1772, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1772, 19, 1773, 0),
woosh.Token(woosh.NAME, 'def', 1773, 4, 1773, 7),
woosh.Token(woosh.NAME, '__round__', 1773, 8, 1773, 17),
woosh.Token(woosh.OP, '(', 1773, 17, 1773, 18),
woosh.Token(woosh.NAME, 'self', 1773, 18, 1773, 22),
woosh.Token(woosh.OP, ',', 1773, 22, 1773, 23),
woosh.Token(woosh.NAME, 'ndigits', 1773, 24, 1773, 31),
woosh.Token(woosh.OP, ':', 1773, 31, 1773, 32),
woosh.Token(woosh.NAME, 'int', 1773, 33, 1773, 36),
woosh.Token(woosh.OP, '=', 1773, 37, 1773, 38),
woosh.Token(woosh.NUMBER, '0', 1773, 39, 1773, 40),
woosh.Token(woosh.OP, ')', 1773, 40, 1773, 41),
woosh.Token(woosh.OP, '->', 1773, 42, 1773, 44),
woosh.Token(woosh.NAME, 'T_co', 1773, 45, 1773, 49),
woosh.Token(woosh.OP, ':', 1773, 49, 1773, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1773, 50, 1774, 0),
woosh.Token(woosh.INDENT, '        ', 1774, 0, 1774, 8),
woosh.Token(woosh.NAME, 'pass', 1774, 8, 1774, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1774, 12, 1775, 0),
woosh.Token(woosh.DEDENT, '', 1777, 0, 1777, 0),
woosh.Token(woosh.DEDENT, '', 1777, 0, 1777, 0),
woosh.Token(woosh.NAME, 'def', 1777, 0, 1777, 3),
woosh.Token(woosh.NAME, '_make_nmtuple', 1777, 4, 1777, 17),
woosh.Token(woosh.OP, '(', 1777, 17, 1777, 18),
woosh.Token(woosh.NAME, 'name', 1777, 18, 1777, 22),
woosh.Token(woosh.OP, ',', 1777, 22, 1777, 23),
woosh.Token(woosh.NAME, 'types', 1777, 24, 1777, 29),
woosh.Token(woosh.OP, ',', 1777, 29, 1777, 30),
woosh.Token(woosh.NAME, 'module', 1777, 31, 1777, 37),
woosh.Token(woosh.OP, ',', 1777, 37, 1777, 38),
woosh.Token(woosh.NAME, 'defaults', 1777, 39, 1777, 47),
woosh.Token(woosh.OP, '=', 1777, 48, 1777, 49),
woosh.Token(woosh.OP, '(', 1777, 50, 1777, 51),
woosh.Token(woosh.OP, ')', 1777, 51, 1777, 52),
woosh.Token(woosh.OP, ')', 1777, 52, 1777, 53),
woosh.Token(woosh.OP, ':', 1777, 53, 1777, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1777, 54, 1778, 0),
woosh.Token(woosh.INDENT, '    ', 1778, 0, 1778, 4),
woosh.Token(woosh.NAME, 'fields', 1778, 4, 1778, 10),
woosh.Token(woosh.OP, '=', 1778, 11, 1778, 12),
woosh.Token(woosh.OP, '[', 1778, 13, 1778, 14),
woosh.Token(woosh.NAME, 'n', 1778, 14, 1778, 15),
woosh.Token(woosh.NAME, 'for', 1778, 16, 1778, 19),
woosh.Token(woosh.NAME, 'n', 1778, 20, 1778, 21),
woosh.Token(woosh.OP, ',', 1778, 21, 1778, 22),
woosh.Token(woosh.NAME, 't', 1778, 23, 1778, 24),
woosh.Token(woosh.NAME, 'in', 1778, 25, 1778, 27),
woosh.Token(woosh.NAME, 'types', 1778, 28, 1778, 33),
woosh.Token(woosh.OP, ']', 1778, 33, 1778, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1778, 34, 1779, 0),
woosh.Token(woosh.NAME, 'types', 1779, 4, 1779, 9),
woosh.Token(woosh.OP, '=', 1779, 10, 1779, 11),
woosh.Token(woosh.OP, '{', 1779, 12, 1779, 13),
woosh.Token(woosh.NAME, 'n', 1779, 13, 1779, 14),
woosh.Token(woosh.OP, ':', 1779, 14, 1779, 15),
woosh.Token(woosh.NAME, '_type_check', 1779, 16, 1779, 27),
woosh.Token(woosh.OP, '(', 1779, 27, 1779, 28),
woosh.Token(woosh.NAME, 't', 1779, 28, 1779, 29),
woosh.Token(woosh.OP, ',', 1779, 29, 1779, 30),
woosh.Token(woosh.STRING, 'f"field {n} annotation must be a type"', 1779, 31, 1779, 69),
woosh.Token(woosh.OP, ')', 1779, 69, 1779, 70),
woosh.Token(woosh.NAME, 'for', 1780, 13, 1780, 16),
woosh.Token(woosh.NAME, 'n', 1780, 17, 1780, 18),
woosh.Token(woosh.OP, ',', 1780, 18, 1780, 19),
woosh.Token(woosh.NAME, 't', 1780, 20, 1780, 21),
woosh.Token(woosh.NAME, 'in', 1780, 22, 1780, 24),
woosh.Token(woosh.NAME, 'types', 1780, 25, 1780, 30),
woosh.Token(woosh.OP, '}', 1780, 30, 1780, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1780, 31, 1781, 0),
woosh.Token(woosh.NAME, 'nm_tpl', 1781, 4, 1781, 10),
woosh.Token(woosh.OP, '=', 1781, 11, 1781, 12),
woosh.Token(woosh.NAME, 'collections', 1781, 13, 1781, 24),
woosh.Token(woosh.OP, '.', 1781, 24, 1781, 25),
woosh.Token(woosh.NAME, 'namedtuple', 1781, 25, 1781, 35),
woosh.Token(woosh.OP, '(', 1781, 35, 1781, 36),
woosh.Token(woosh.NAME, 'name', 1781, 36, 1781, 40),
woosh.Token(woosh.OP, ',', 1781, 40, 1781, 41),
woosh.Token(woosh.NAME, 'fields', 1781, 42, 1781, 48),
woosh.Token(woosh.OP, ',', 1781, 48, 1781, 49),
woosh.Token(woosh.NAME, 'defaults', 1782, 36, 1782, 44),
woosh.Token(woosh.OP, '=', 1782, 44, 1782, 45),
woosh.Token(woosh.NAME, 'defaults', 1782, 45, 1782, 53),
woosh.Token(woosh.OP, ',', 1782, 53, 1782, 54),
woosh.Token(woosh.NAME, 'module', 1782, 55, 1782, 61),
woosh.Token(woosh.OP, '=', 1782, 61, 1782, 62),
woosh.Token(woosh.NAME, 'module', 1782, 62, 1782, 68),
woosh.Token(woosh.OP, ')', 1782, 68, 1782, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1782, 69, 1783, 0),
woosh.Token(woosh.NAME, 'nm_tpl', 1783, 4, 1783, 10),
woosh.Token(woosh.OP, '.', 1783, 10, 1783, 11),
woosh.Token(woosh.NAME, '__annotations__', 1783, 11, 1783, 26),
woosh.Token(woosh.OP, '=', 1783, 27, 1783, 28),
woosh.Token(woosh.NAME, 'nm_tpl', 1783, 29, 1783, 35),
woosh.Token(woosh.OP, '.', 1783, 35, 1783, 36),
woosh.Token(woosh.NAME, '__new__', 1783, 36, 1783, 43),
woosh.Token(woosh.OP, '.', 1783, 43, 1783, 44),
woosh.Token(woosh.NAME, '__annotations__', 1783, 44, 1783, 59),
woosh.Token(woosh.OP, '=', 1783, 60, 1783, 61),
woosh.Token(woosh.NAME, 'types', 1783, 62, 1783, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1783, 67, 1784, 0),
woosh.Token(woosh.NAME, 'return', 1784, 4, 1784, 10),
woosh.Token(woosh.NAME, 'nm_tpl', 1784, 11, 1784, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1784, 17, 1785, 0),
woosh.Token(woosh.COMMENT, '# attributes prohibited to set in NamedTuple class syntax', 1787, 0, 1787, 57),
woosh.Token(woosh.DEDENT, '', 1788, 0, 1788, 0),
woosh.Token(woosh.NAME, '_prohibited', 1788, 0, 1788, 11),
woosh.Token(woosh.OP, '=', 1788, 12, 1788, 13),
woosh.Token(woosh.NAME, 'frozenset', 1788, 14, 1788, 23),
woosh.Token(woosh.OP, '(', 1788, 23, 1788, 24),
woosh.Token(woosh.OP, '{', 1788, 24, 1788, 25),
woosh.Token(woosh.STRING, "'__new__'", 1788, 25, 1788, 34),
woosh.Token(woosh.OP, ',', 1788, 34, 1788, 35),
woosh.Token(woosh.STRING, "'__init__'", 1788, 36, 1788, 46),
woosh.Token(woosh.OP, ',', 1788, 46, 1788, 47),
woosh.Token(woosh.STRING, "'__slots__'", 1788, 48, 1788, 59),
woosh.Token(woosh.OP, ',', 1788, 59, 1788, 60),
woosh.Token(woosh.STRING, "'__getnewargs__'", 1788, 61, 1788, 77),
woosh.Token(woosh.OP, ',', 1788, 77, 1788, 78),
woosh.Token(woosh.STRING, "'_fields'", 1789, 25, 1789, 34),
woosh.Token(woosh.OP, ',', 1789, 34, 1789, 35),
woosh.Token(woosh.STRING, "'_field_defaults'", 1789, 36, 1789, 53),
woosh.Token(woosh.OP, ',', 1789, 53, 1789, 54),
woosh.Token(woosh.STRING, "'_make'", 1790, 25, 1790, 32),
woosh.Token(woosh.OP, ',', 1790, 32, 1790, 33),
woosh.Token(woosh.STRING, "'_replace'", 1790, 34, 1790, 44),
woosh.Token(woosh.OP, ',', 1790, 44, 1790, 45),
woosh.Token(woosh.STRING, "'_asdict'", 1790, 46, 1790, 55),
woosh.Token(woosh.OP, ',', 1790, 55, 1790, 56),
woosh.Token(woosh.STRING, "'_source'", 1790, 57, 1790, 66),
woosh.Token(woosh.OP, '}', 1790, 66, 1790, 67),
woosh.Token(woosh.OP, ')', 1790, 67, 1790, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1790, 68, 1791, 0),
woosh.Token(woosh.NAME, '_special', 1792, 0, 1792, 8),
woosh.Token(woosh.OP, '=', 1792, 9, 1792, 10),
woosh.Token(woosh.NAME, 'frozenset', 1792, 11, 1792, 20),
woosh.Token(woosh.OP, '(', 1792, 20, 1792, 21),
woosh.Token(woosh.OP, '{', 1792, 21, 1792, 22),
woosh.Token(woosh.STRING, "'__module__'", 1792, 22, 1792, 34),
woosh.Token(woosh.OP, ',', 1792, 34, 1792, 35),
woosh.Token(woosh.STRING, "'__name__'", 1792, 36, 1792, 46),
woosh.Token(woosh.OP, ',', 1792, 46, 1792, 47),
woosh.Token(woosh.STRING, "'__annotations__'", 1792, 48, 1792, 65),
woosh.Token(woosh.OP, '}', 1792, 65, 1792, 66),
woosh.Token(woosh.OP, ')', 1792, 66, 1792, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1792, 67, 1793, 0),
woosh.Token(woosh.NAME, 'class', 1795, 0, 1795, 5),
woosh.Token(woosh.NAME, 'NamedTupleMeta', 1795, 6, 1795, 20),
woosh.Token(woosh.OP, '(', 1795, 20, 1795, 21),
woosh.Token(woosh.NAME, 'type', 1795, 21, 1795, 25),
woosh.Token(woosh.OP, ')', 1795, 25, 1795, 26),
woosh.Token(woosh.OP, ':', 1795, 26, 1795, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1795, 27, 1796, 0),
woosh.Token(woosh.INDENT, '    ', 1797, 0, 1797, 4),
woosh.Token(woosh.NAME, 'def', 1797, 4, 1797, 7),
woosh.Token(woosh.NAME, '__new__', 1797, 8, 1797, 15),
woosh.Token(woosh.OP, '(', 1797, 15, 1797, 16),
woosh.Token(woosh.NAME, 'cls', 1797, 16, 1797, 19),
woosh.Token(woosh.OP, ',', 1797, 19, 1797, 20),
woosh.Token(woosh.NAME, 'typename', 1797, 21, 1797, 29),
woosh.Token(woosh.OP, ',', 1797, 29, 1797, 30),
woosh.Token(woosh.NAME, 'bases', 1797, 31, 1797, 36),
woosh.Token(woosh.OP, ',', 1797, 36, 1797, 37),
woosh.Token(woosh.NAME, 'ns', 1797, 38, 1797, 40),
woosh.Token(woosh.OP, ')', 1797, 40, 1797, 41),
woosh.Token(woosh.OP, ':', 1797, 41, 1797, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1797, 42, 1798, 0),
woosh.Token(woosh.INDENT, '        ', 1798, 0, 1798, 8),
woosh.Token(woosh.NAME, 'assert', 1798, 8, 1798, 14),
woosh.Token(woosh.NAME, 'bases', 1798, 15, 1798, 20),
woosh.Token(woosh.OP, '[', 1798, 20, 1798, 21),
woosh.Token(woosh.NUMBER, '0', 1798, 21, 1798, 22),
woosh.Token(woosh.OP, ']', 1798, 22, 1798, 23),
woosh.Token(woosh.NAME, 'is', 1798, 24, 1798, 26),
woosh.Token(woosh.NAME, '_NamedTuple', 1798, 27, 1798, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1798, 38, 1799, 0),
woosh.Token(woosh.NAME, 'types', 1799, 8, 1799, 13),
woosh.Token(woosh.OP, '=', 1799, 14, 1799, 15),
woosh.Token(woosh.NAME, 'ns', 1799, 16, 1799, 18),
woosh.Token(woosh.OP, '.', 1799, 18, 1799, 19),
woosh.Token(woosh.NAME, 'get', 1799, 19, 1799, 22),
woosh.Token(woosh.OP, '(', 1799, 22, 1799, 23),
woosh.Token(woosh.STRING, "'__annotations__'", 1799, 23, 1799, 40),
woosh.Token(woosh.OP, ',', 1799, 40, 1799, 41),
woosh.Token(woosh.OP, '{', 1799, 42, 1799, 43),
woosh.Token(woosh.OP, '}', 1799, 43, 1799, 44),
woosh.Token(woosh.OP, ')', 1799, 44, 1799, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1799, 45, 1800, 0),
woosh.Token(woosh.NAME, 'default_names', 1800, 8, 1800, 21),
woosh.Token(woosh.OP, '=', 1800, 22, 1800, 23),
woosh.Token(woosh.OP, '[', 1800, 24, 1800, 25),
woosh.Token(woosh.OP, ']', 1800, 25, 1800, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1800, 26, 1801, 0),
woosh.Token(woosh.NAME, 'for', 1801, 8, 1801, 11),
woosh.Token(woosh.NAME, 'field_name', 1801, 12, 1801, 22),
woosh.Token(woosh.NAME, 'in', 1801, 23, 1801, 25),
woosh.Token(woosh.NAME, 'types', 1801, 26, 1801, 31),
woosh.Token(woosh.OP, ':', 1801, 31, 1801, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1801, 32, 1802, 0),
woosh.Token(woosh.INDENT, '            ', 1802, 0, 1802, 12),
woosh.Token(woosh.NAME, 'if', 1802, 12, 1802, 14),
woosh.Token(woosh.NAME, 'field_name', 1802, 15, 1802, 25),
woosh.Token(woosh.NAME, 'in', 1802, 26, 1802, 28),
woosh.Token(woosh.NAME, 'ns', 1802, 29, 1802, 31),
woosh.Token(woosh.OP, ':', 1802, 31, 1802, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1802, 32, 1803, 0),
woosh.Token(woosh.INDENT, '                ', 1803, 0, 1803, 16),
woosh.Token(woosh.NAME, 'default_names', 1803, 16, 1803, 29),
woosh.Token(woosh.OP, '.', 1803, 29, 1803, 30),
woosh.Token(woosh.NAME, 'append', 1803, 30, 1803, 36),
woosh.Token(woosh.OP, '(', 1803, 36, 1803, 37),
woosh.Token(woosh.NAME, 'field_name', 1803, 37, 1803, 47),
woosh.Token(woosh.OP, ')', 1803, 47, 1803, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1803, 48, 1804, 0),
woosh.Token(woosh.DEDENT, '            ', 1804, 0, 1804, 12),
woosh.Token(woosh.NAME, 'elif', 1804, 12, 1804, 16),
woosh.Token(woosh.NAME, 'default_names', 1804, 17, 1804, 30),
woosh.Token(woosh.OP, ':', 1804, 30, 1804, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1804, 31, 1805, 0),
woosh.Token(woosh.INDENT, '                ', 1805, 0, 1805, 16),
woosh.Token(woosh.NAME, 'raise', 1805, 16, 1805, 21),
woosh.Token(woosh.NAME, 'TypeError', 1805, 22, 1805, 31),
woosh.Token(woosh.OP, '(', 1805, 31, 1805, 32),
woosh.Token(woosh.STRING, 'f"Non-default namedtuple field {field_name} "', 1805, 32, 1805, 77),
woosh.Token(woosh.STRING, 'f"cannot follow default field"', 1806, 32, 1806, 62),
woosh.Token(woosh.STRING, 'f"{\'s\' if len(default_names) > 1 else \'\'} "', 1807, 32, 1807, 75),
woosh.Token(woosh.STRING, 'f"{\', \'.join(default_names)}"', 1808, 32, 1808, 61),
woosh.Token(woosh.OP, ')', 1808, 61, 1808, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1808, 62, 1809, 0),
woosh.Token(woosh.DEDENT, '        ', 1809, 0, 1809, 8),
woosh.Token(woosh.DEDENT, '', 1809, 8, 1809, 8),
woosh.Token(woosh.NAME, 'nm_tpl', 1809, 8, 1809, 14),
woosh.Token(woosh.OP, '=', 1809, 15, 1809, 16),
woosh.Token(woosh.NAME, '_make_nmtuple', 1809, 17, 1809, 30),
woosh.Token(woosh.OP, '(', 1809, 30, 1809, 31),
woosh.Token(woosh.NAME, 'typename', 1809, 31, 1809, 39),
woosh.Token(woosh.OP, ',', 1809, 39, 1809, 40),
woosh.Token(woosh.NAME, 'types', 1809, 41, 1809, 46),
woosh.Token(woosh.OP, '.', 1809, 46, 1809, 47),
woosh.Token(woosh.NAME, 'items', 1809, 47, 1809, 52),
woosh.Token(woosh.OP, '(', 1809, 52, 1809, 53),
woosh.Token(woosh.OP, ')', 1809, 53, 1809, 54),
woosh.Token(woosh.OP, ',', 1809, 54, 1809, 55),
woosh.Token(woosh.NAME, 'defaults', 1810, 31, 1810, 39),
woosh.Token(woosh.OP, '=', 1810, 39, 1810, 40),
woosh.Token(woosh.OP, '[', 1810, 40, 1810, 41),
woosh.Token(woosh.NAME, 'ns', 1810, 41, 1810, 43),
woosh.Token(woosh.OP, '[', 1810, 43, 1810, 44),
woosh.Token(woosh.NAME, 'n', 1810, 44, 1810, 45),
woosh.Token(woosh.OP, ']', 1810, 45, 1810, 46),
woosh.Token(woosh.NAME, 'for', 1810, 47, 1810, 50),
woosh.Token(woosh.NAME, 'n', 1810, 51, 1810, 52),
woosh.Token(woosh.NAME, 'in', 1810, 53, 1810, 55),
woosh.Token(woosh.NAME, 'default_names', 1810, 56, 1810, 69),
woosh.Token(woosh.OP, ']', 1810, 69, 1810, 70),
woosh.Token(woosh.OP, ',', 1810, 70, 1810, 71),
woosh.Token(woosh.NAME, 'module', 1811, 31, 1811, 37),
woosh.Token(woosh.OP, '=', 1811, 37, 1811, 38),
woosh.Token(woosh.NAME, 'ns', 1811, 38, 1811, 40),
woosh.Token(woosh.OP, '[', 1811, 40, 1811, 41),
woosh.Token(woosh.STRING, "'__module__'", 1811, 41, 1811, 53),
woosh.Token(woosh.OP, ']', 1811, 53, 1811, 54),
woosh.Token(woosh.OP, ')', 1811, 54, 1811, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1811, 55, 1812, 0),
woosh.Token(woosh.COMMENT, '# update from user namespace without overriding special namedtuple attributes', 1812, 8, 1812, 85),
woosh.Token(woosh.NAME, 'for', 1813, 8, 1813, 11),
woosh.Token(woosh.NAME, 'key', 1813, 12, 1813, 15),
woosh.Token(woosh.NAME, 'in', 1813, 16, 1813, 18),
woosh.Token(woosh.NAME, 'ns', 1813, 19, 1813, 21),
woosh.Token(woosh.OP, ':', 1813, 21, 1813, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1813, 22, 1814, 0),
woosh.Token(woosh.INDENT, '            ', 1814, 0, 1814, 12),
woosh.Token(woosh.NAME, 'if', 1814, 12, 1814, 14),
woosh.Token(woosh.NAME, 'key', 1814, 15, 1814, 18),
woosh.Token(woosh.NAME, 'in', 1814, 19, 1814, 21),
woosh.Token(woosh.NAME, '_prohibited', 1814, 22, 1814, 33),
woosh.Token(woosh.OP, ':', 1814, 33, 1814, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1814, 34, 1815, 0),
woosh.Token(woosh.INDENT, '                ', 1815, 0, 1815, 16),
woosh.Token(woosh.NAME, 'raise', 1815, 16, 1815, 21),
woosh.Token(woosh.NAME, 'AttributeError', 1815, 22, 1815, 36),
woosh.Token(woosh.OP, '(', 1815, 36, 1815, 37),
woosh.Token(woosh.STRING, '"Cannot overwrite NamedTuple attribute "', 1815, 37, 1815, 77),
woosh.Token(woosh.OP, '+', 1815, 78, 1815, 79),
woosh.Token(woosh.NAME, 'key', 1815, 80, 1815, 83),
woosh.Token(woosh.OP, ')', 1815, 83, 1815, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 1815, 84, 1816, 0),
woosh.Token(woosh.DEDENT, '            ', 1816, 0, 1816, 12),
woosh.Token(woosh.NAME, 'elif', 1816, 12, 1816, 16),
woosh.Token(woosh.NAME, 'key', 1816, 17, 1816, 20),
woosh.Token(woosh.NAME, 'not', 1816, 21, 1816, 24),
woosh.Token(woosh.NAME, 'in', 1816, 25, 1816, 27),
woosh.Token(woosh.NAME, '_special', 1816, 28, 1816, 36),
woosh.Token(woosh.NAME, 'and', 1816, 37, 1816, 40),
woosh.Token(woosh.NAME, 'key', 1816, 41, 1816, 44),
woosh.Token(woosh.NAME, 'not', 1816, 45, 1816, 48),
woosh.Token(woosh.NAME, 'in', 1816, 49, 1816, 51),
woosh.Token(woosh.NAME, 'nm_tpl', 1816, 52, 1816, 58),
woosh.Token(woosh.OP, '.', 1816, 58, 1816, 59),
woosh.Token(woosh.NAME, '_fields', 1816, 59, 1816, 66),
woosh.Token(woosh.OP, ':', 1816, 66, 1816, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1816, 67, 1817, 0),
woosh.Token(woosh.INDENT, '                ', 1817, 0, 1817, 16),
woosh.Token(woosh.NAME, 'setattr', 1817, 16, 1817, 23),
woosh.Token(woosh.OP, '(', 1817, 23, 1817, 24),
woosh.Token(woosh.NAME, 'nm_tpl', 1817, 24, 1817, 30),
woosh.Token(woosh.OP, ',', 1817, 30, 1817, 31),
woosh.Token(woosh.NAME, 'key', 1817, 32, 1817, 35),
woosh.Token(woosh.OP, ',', 1817, 35, 1817, 36),
woosh.Token(woosh.NAME, 'ns', 1817, 37, 1817, 39),
woosh.Token(woosh.OP, '[', 1817, 39, 1817, 40),
woosh.Token(woosh.NAME, 'key', 1817, 40, 1817, 43),
woosh.Token(woosh.OP, ']', 1817, 43, 1817, 44),
woosh.Token(woosh.OP, ')', 1817, 44, 1817, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1817, 45, 1818, 0),
woosh.Token(woosh.DEDENT, '        ', 1818, 0, 1818, 8),
woosh.Token(woosh.DEDENT, '', 1818, 8, 1818, 8),
woosh.Token(woosh.NAME, 'return', 1818, 8, 1818, 14),
woosh.Token(woosh.NAME, 'nm_tpl', 1818, 15, 1818, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1818, 21, 1819, 0),
woosh.Token(woosh.DEDENT, '', 1821, 0, 1821, 0),
woosh.Token(woosh.DEDENT, '', 1821, 0, 1821, 0),
woosh.Token(woosh.NAME, 'def', 1821, 0, 1821, 3),
woosh.Token(woosh.NAME, 'NamedTuple', 1821, 4, 1821, 14),
woosh.Token(woosh.OP, '(', 1821, 14, 1821, 15),
woosh.Token(woosh.NAME, 'typename', 1821, 15, 1821, 23),
woosh.Token(woosh.OP, ',', 1821, 23, 1821, 24),
woosh.Token(woosh.NAME, 'fields', 1821, 25, 1821, 31),
woosh.Token(woosh.OP, '=', 1821, 31, 1821, 32),
woosh.Token(woosh.NAME, 'None', 1821, 32, 1821, 36),
woosh.Token(woosh.OP, ',', 1821, 36, 1821, 37),
woosh.Token(woosh.OP, '/', 1821, 38, 1821, 39),
woosh.Token(woosh.OP, ',', 1821, 39, 1821, 40),
woosh.Token(woosh.OP, '**', 1821, 41, 1821, 43),
woosh.Token(woosh.NAME, 'kwargs', 1821, 43, 1821, 49),
woosh.Token(woosh.OP, ')', 1821, 49, 1821, 50),
woosh.Token(woosh.OP, ':', 1821, 50, 1821, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1821, 51, 1822, 0),
woosh.Token(woosh.INDENT, '    ', 1822, 0, 1822, 4),
woosh.Token(woosh.STRING, '"""Typed version of namedtuple.\r\n\r\n    Usage in Python versions >= 3.6::\r\n\r\n        class Employee(NamedTuple):\r\n            name: str\r\n            id: int\r\n\r\n    This is equivalent to::\r\n\r\n        Employee = collections.namedtuple(\'Employee\', [\'name\', \'id\'])\r\n\r\n    The resulting class has an extra __annotations__ attribute, giving a\r\n    dict that maps field names to types.  (The field names are also in\r\n    the _fields attribute, which is part of the namedtuple API.)\r\n    Alternative equivalent keyword syntax is also accepted::\r\n\r\n        Employee = NamedTuple(\'Employee\', name=str, id=int)\r\n\r\n    In Python versions <= 3.5 use::\r\n\r\n        Employee = NamedTuple(\'Employee\', [(\'name\', str), (\'id\', int)])\r\n    """', 1822, 4, 1844, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1844, 7, 1845, 0),
woosh.Token(woosh.NAME, 'if', 1845, 4, 1845, 6),
woosh.Token(woosh.NAME, 'fields', 1845, 7, 1845, 13),
woosh.Token(woosh.NAME, 'is', 1845, 14, 1845, 16),
woosh.Token(woosh.NAME, 'None', 1845, 17, 1845, 21),
woosh.Token(woosh.OP, ':', 1845, 21, 1845, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1845, 22, 1846, 0),
woosh.Token(woosh.INDENT, '        ', 1846, 0, 1846, 8),
woosh.Token(woosh.NAME, 'fields', 1846, 8, 1846, 14),
woosh.Token(woosh.OP, '=', 1846, 15, 1846, 16),
woosh.Token(woosh.NAME, 'kwargs', 1846, 17, 1846, 23),
woosh.Token(woosh.OP, '.', 1846, 23, 1846, 24),
woosh.Token(woosh.NAME, 'items', 1846, 24, 1846, 29),
woosh.Token(woosh.OP, '(', 1846, 29, 1846, 30),
woosh.Token(woosh.OP, ')', 1846, 30, 1846, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1846, 31, 1847, 0),
woosh.Token(woosh.DEDENT, '    ', 1847, 0, 1847, 4),
woosh.Token(woosh.NAME, 'elif', 1847, 4, 1847, 8),
woosh.Token(woosh.NAME, 'kwargs', 1847, 9, 1847, 15),
woosh.Token(woosh.OP, ':', 1847, 15, 1847, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1847, 16, 1848, 0),
woosh.Token(woosh.INDENT, '        ', 1848, 0, 1848, 8),
woosh.Token(woosh.NAME, 'raise', 1848, 8, 1848, 13),
woosh.Token(woosh.NAME, 'TypeError', 1848, 14, 1848, 23),
woosh.Token(woosh.OP, '(', 1848, 23, 1848, 24),
woosh.Token(woosh.STRING, '"Either list of fields or keywords"', 1848, 24, 1848, 59),
woosh.Token(woosh.STRING, '" can be provided to NamedTuple, not both"', 1849, 24, 1849, 66),
woosh.Token(woosh.OP, ')', 1849, 66, 1849, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1849, 67, 1850, 0),
woosh.Token(woosh.DEDENT, '    ', 1850, 0, 1850, 4),
woosh.Token(woosh.NAME, 'try', 1850, 4, 1850, 7),
woosh.Token(woosh.OP, ':', 1850, 7, 1850, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1850, 8, 1851, 0),
woosh.Token(woosh.INDENT, '        ', 1851, 0, 1851, 8),
woosh.Token(woosh.NAME, 'module', 1851, 8, 1851, 14),
woosh.Token(woosh.OP, '=', 1851, 15, 1851, 16),
woosh.Token(woosh.NAME, 'sys', 1851, 17, 1851, 20),
woosh.Token(woosh.OP, '.', 1851, 20, 1851, 21),
woosh.Token(woosh.NAME, '_getframe', 1851, 21, 1851, 30),
woosh.Token(woosh.OP, '(', 1851, 30, 1851, 31),
woosh.Token(woosh.NUMBER, '1', 1851, 31, 1851, 32),
woosh.Token(woosh.OP, ')', 1851, 32, 1851, 33),
woosh.Token(woosh.OP, '.', 1851, 33, 1851, 34),
woosh.Token(woosh.NAME, 'f_globals', 1851, 34, 1851, 43),
woosh.Token(woosh.OP, '.', 1851, 43, 1851, 44),
woosh.Token(woosh.NAME, 'get', 1851, 44, 1851, 47),
woosh.Token(woosh.OP, '(', 1851, 47, 1851, 48),
woosh.Token(woosh.STRING, "'__name__'", 1851, 48, 1851, 58),
woosh.Token(woosh.OP, ',', 1851, 58, 1851, 59),
woosh.Token(woosh.STRING, "'__main__'", 1851, 60, 1851, 70),
woosh.Token(woosh.OP, ')', 1851, 70, 1851, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1851, 71, 1852, 0),
woosh.Token(woosh.DEDENT, '    ', 1852, 0, 1852, 4),
woosh.Token(woosh.NAME, 'except', 1852, 4, 1852, 10),
woosh.Token(woosh.OP, '(', 1852, 11, 1852, 12),
woosh.Token(woosh.NAME, 'AttributeError', 1852, 12, 1852, 26),
woosh.Token(woosh.OP, ',', 1852, 26, 1852, 27),
woosh.Token(woosh.NAME, 'ValueError', 1852, 28, 1852, 38),
woosh.Token(woosh.OP, ')', 1852, 38, 1852, 39),
woosh.Token(woosh.OP, ':', 1852, 39, 1852, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1852, 40, 1853, 0),
woosh.Token(woosh.INDENT, '        ', 1853, 0, 1853, 8),
woosh.Token(woosh.NAME, 'module', 1853, 8, 1853, 14),
woosh.Token(woosh.OP, '=', 1853, 15, 1853, 16),
woosh.Token(woosh.NAME, 'None', 1853, 17, 1853, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1853, 21, 1854, 0),
woosh.Token(woosh.DEDENT, '    ', 1854, 0, 1854, 4),
woosh.Token(woosh.NAME, 'return', 1854, 4, 1854, 10),
woosh.Token(woosh.NAME, '_make_nmtuple', 1854, 11, 1854, 24),
woosh.Token(woosh.OP, '(', 1854, 24, 1854, 25),
woosh.Token(woosh.NAME, 'typename', 1854, 25, 1854, 33),
woosh.Token(woosh.OP, ',', 1854, 33, 1854, 34),
woosh.Token(woosh.NAME, 'fields', 1854, 35, 1854, 41),
woosh.Token(woosh.OP, ',', 1854, 41, 1854, 42),
woosh.Token(woosh.NAME, 'module', 1854, 43, 1854, 49),
woosh.Token(woosh.OP, '=', 1854, 49, 1854, 50),
woosh.Token(woosh.NAME, 'module', 1854, 50, 1854, 56),
woosh.Token(woosh.OP, ')', 1854, 56, 1854, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1854, 57, 1855, 0),
woosh.Token(woosh.DEDENT, '', 1856, 0, 1856, 0),
woosh.Token(woosh.NAME, '_NamedTuple', 1856, 0, 1856, 11),
woosh.Token(woosh.OP, '=', 1856, 12, 1856, 13),
woosh.Token(woosh.NAME, 'type', 1856, 14, 1856, 18),
woosh.Token(woosh.OP, '.', 1856, 18, 1856, 19),
woosh.Token(woosh.NAME, '__new__', 1856, 19, 1856, 26),
woosh.Token(woosh.OP, '(', 1856, 26, 1856, 27),
woosh.Token(woosh.NAME, 'NamedTupleMeta', 1856, 27, 1856, 41),
woosh.Token(woosh.OP, ',', 1856, 41, 1856, 42),
woosh.Token(woosh.STRING, "'NamedTuple'", 1856, 43, 1856, 55),
woosh.Token(woosh.OP, ',', 1856, 55, 1856, 56),
woosh.Token(woosh.OP, '(', 1856, 57, 1856, 58),
woosh.Token(woosh.OP, ')', 1856, 58, 1856, 59),
woosh.Token(woosh.OP, ',', 1856, 59, 1856, 60),
woosh.Token(woosh.OP, '{', 1856, 61, 1856, 62),
woosh.Token(woosh.OP, '}', 1856, 62, 1856, 63),
woosh.Token(woosh.OP, ')', 1856, 63, 1856, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1856, 64, 1857, 0),
woosh.Token(woosh.NAME, 'def', 1858, 0, 1858, 3),
woosh.Token(woosh.NAME, '_namedtuple_mro_entries', 1858, 4, 1858, 27),
woosh.Token(woosh.OP, '(', 1858, 27, 1858, 28),
woosh.Token(woosh.NAME, 'bases', 1858, 28, 1858, 33),
woosh.Token(woosh.OP, ')', 1858, 33, 1858, 34),
woosh.Token(woosh.OP, ':', 1858, 34, 1858, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1858, 35, 1859, 0),
woosh.Token(woosh.INDENT, '    ', 1859, 0, 1859, 4),
woosh.Token(woosh.NAME, 'if', 1859, 4, 1859, 6),
woosh.Token(woosh.NAME, 'len', 1859, 7, 1859, 10),
woosh.Token(woosh.OP, '(', 1859, 10, 1859, 11),
woosh.Token(woosh.NAME, 'bases', 1859, 11, 1859, 16),
woosh.Token(woosh.OP, ')', 1859, 16, 1859, 17),
woosh.Token(woosh.OP, '>', 1859, 18, 1859, 19),
woosh.Token(woosh.NUMBER, '1', 1859, 20, 1859, 21),
woosh.Token(woosh.OP, ':', 1859, 21, 1859, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1859, 22, 1860, 0),
woosh.Token(woosh.INDENT, '        ', 1860, 0, 1860, 8),
woosh.Token(woosh.NAME, 'raise', 1860, 8, 1860, 13),
woosh.Token(woosh.NAME, 'TypeError', 1860, 14, 1860, 23),
woosh.Token(woosh.OP, '(', 1860, 23, 1860, 24),
woosh.Token(woosh.STRING, '"Multiple inheritance with NamedTuple is not supported"', 1860, 24, 1860, 79),
woosh.Token(woosh.OP, ')', 1860, 79, 1860, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 1860, 80, 1861, 0),
woosh.Token(woosh.DEDENT, '    ', 1861, 0, 1861, 4),
woosh.Token(woosh.NAME, 'assert', 1861, 4, 1861, 10),
woosh.Token(woosh.NAME, 'bases', 1861, 11, 1861, 16),
woosh.Token(woosh.OP, '[', 1861, 16, 1861, 17),
woosh.Token(woosh.NUMBER, '0', 1861, 17, 1861, 18),
woosh.Token(woosh.OP, ']', 1861, 18, 1861, 19),
woosh.Token(woosh.NAME, 'is', 1861, 20, 1861, 22),
woosh.Token(woosh.NAME, 'NamedTuple', 1861, 23, 1861, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1861, 33, 1862, 0),
woosh.Token(woosh.NAME, 'return', 1862, 4, 1862, 10),
woosh.Token(woosh.OP, '(', 1862, 11, 1862, 12),
woosh.Token(woosh.NAME, '_NamedTuple', 1862, 12, 1862, 23),
woosh.Token(woosh.OP, ',', 1862, 23, 1862, 24),
woosh.Token(woosh.OP, ')', 1862, 24, 1862, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1862, 25, 1863, 0),
woosh.Token(woosh.DEDENT, '', 1864, 0, 1864, 0),
woosh.Token(woosh.NAME, 'NamedTuple', 1864, 0, 1864, 10),
woosh.Token(woosh.OP, '.', 1864, 10, 1864, 11),
woosh.Token(woosh.NAME, '__mro_entries__', 1864, 11, 1864, 26),
woosh.Token(woosh.OP, '=', 1864, 27, 1864, 28),
woosh.Token(woosh.NAME, '_namedtuple_mro_entries', 1864, 29, 1864, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1864, 52, 1865, 0),
woosh.Token(woosh.NAME, 'class', 1867, 0, 1867, 5),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1867, 6, 1867, 20),
woosh.Token(woosh.OP, '(', 1867, 20, 1867, 21),
woosh.Token(woosh.NAME, 'type', 1867, 21, 1867, 25),
woosh.Token(woosh.OP, ')', 1867, 25, 1867, 26),
woosh.Token(woosh.OP, ':', 1867, 26, 1867, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1867, 27, 1868, 0),
woosh.Token(woosh.INDENT, '    ', 1868, 0, 1868, 4),
woosh.Token(woosh.NAME, 'def', 1868, 4, 1868, 7),
woosh.Token(woosh.NAME, '__new__', 1868, 8, 1868, 15),
woosh.Token(woosh.OP, '(', 1868, 15, 1868, 16),
woosh.Token(woosh.NAME, 'cls', 1868, 16, 1868, 19),
woosh.Token(woosh.OP, ',', 1868, 19, 1868, 20),
woosh.Token(woosh.NAME, 'name', 1868, 21, 1868, 25),
woosh.Token(woosh.OP, ',', 1868, 25, 1868, 26),
woosh.Token(woosh.NAME, 'bases', 1868, 27, 1868, 32),
woosh.Token(woosh.OP, ',', 1868, 32, 1868, 33),
woosh.Token(woosh.NAME, 'ns', 1868, 34, 1868, 36),
woosh.Token(woosh.OP, ',', 1868, 36, 1868, 37),
woosh.Token(woosh.NAME, 'total', 1868, 38, 1868, 43),
woosh.Token(woosh.OP, '=', 1868, 43, 1868, 44),
woosh.Token(woosh.NAME, 'True', 1868, 44, 1868, 48),
woosh.Token(woosh.OP, ')', 1868, 48, 1868, 49),
woosh.Token(woosh.OP, ':', 1868, 49, 1868, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1868, 50, 1869, 0),
woosh.Token(woosh.INDENT, '        ', 1869, 0, 1869, 8),
woosh.Token(woosh.STRING, '"""Create new typed dict class object.\r\n\r\n        This method is called when TypedDict is subclassed,\r\n        or when TypedDict is instantiated. This way\r\n        TypedDict supports all three syntax forms described in its docstring.\r\n        Subclasses and instances of TypedDict return actual dictionaries.\r\n        """', 1869, 8, 1875, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1875, 11, 1876, 0),
woosh.Token(woosh.NAME, 'for', 1876, 8, 1876, 11),
woosh.Token(woosh.NAME, 'base', 1876, 12, 1876, 16),
woosh.Token(woosh.NAME, 'in', 1876, 17, 1876, 19),
woosh.Token(woosh.NAME, 'bases', 1876, 20, 1876, 25),
woosh.Token(woosh.OP, ':', 1876, 25, 1876, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1876, 26, 1877, 0),
woosh.Token(woosh.INDENT, '            ', 1877, 0, 1877, 12),
woosh.Token(woosh.NAME, 'if', 1877, 12, 1877, 14),
woosh.Token(woosh.NAME, 'type', 1877, 15, 1877, 19),
woosh.Token(woosh.OP, '(', 1877, 19, 1877, 20),
woosh.Token(woosh.NAME, 'base', 1877, 20, 1877, 24),
woosh.Token(woosh.OP, ')', 1877, 24, 1877, 25),
woosh.Token(woosh.NAME, 'is', 1877, 26, 1877, 28),
woosh.Token(woosh.NAME, 'not', 1877, 29, 1877, 32),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1877, 33, 1877, 47),
woosh.Token(woosh.OP, ':', 1877, 47, 1877, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1877, 48, 1878, 0),
woosh.Token(woosh.INDENT, '                ', 1878, 0, 1878, 16),
woosh.Token(woosh.NAME, 'raise', 1878, 16, 1878, 21),
woosh.Token(woosh.NAME, 'TypeError', 1878, 22, 1878, 31),
woosh.Token(woosh.OP, '(', 1878, 31, 1878, 32),
woosh.Token(woosh.STRING, "'cannot inherit from both a TypedDict type '", 1878, 32, 1878, 76),
woosh.Token(woosh.STRING, "'and a non-TypedDict base class'", 1879, 32, 1879, 64),
woosh.Token(woosh.OP, ')', 1879, 64, 1879, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1879, 65, 1880, 0),
woosh.Token(woosh.DEDENT, '        ', 1880, 0, 1880, 8),
woosh.Token(woosh.DEDENT, '', 1880, 8, 1880, 8),
woosh.Token(woosh.NAME, 'tp_dict', 1880, 8, 1880, 15),
woosh.Token(woosh.OP, '=', 1880, 16, 1880, 17),
woosh.Token(woosh.NAME, 'type', 1880, 18, 1880, 22),
woosh.Token(woosh.OP, '.', 1880, 22, 1880, 23),
woosh.Token(woosh.NAME, '__new__', 1880, 23, 1880, 30),
woosh.Token(woosh.OP, '(', 1880, 30, 1880, 31),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1880, 31, 1880, 45),
woosh.Token(woosh.OP, ',', 1880, 45, 1880, 46),
woosh.Token(woosh.NAME, 'name', 1880, 47, 1880, 51),
woosh.Token(woosh.OP, ',', 1880, 51, 1880, 52),
woosh.Token(woosh.OP, '(', 1880, 53, 1880, 54),
woosh.Token(woosh.NAME, 'dict', 1880, 54, 1880, 58),
woosh.Token(woosh.OP, ',', 1880, 58, 1880, 59),
woosh.Token(woosh.OP, ')', 1880, 59, 1880, 60),
woosh.Token(woosh.OP, ',', 1880, 60, 1880, 61),
woosh.Token(woosh.NAME, 'ns', 1880, 62, 1880, 64),
woosh.Token(woosh.OP, ')', 1880, 64, 1880, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1880, 65, 1881, 0),
woosh.Token(woosh.NAME, 'annotations', 1882, 8, 1882, 19),
woosh.Token(woosh.OP, '=', 1882, 20, 1882, 21),
woosh.Token(woosh.OP, '{', 1882, 22, 1882, 23),
woosh.Token(woosh.OP, '}', 1882, 23, 1882, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1882, 24, 1883, 0),
woosh.Token(woosh.NAME, 'own_annotations', 1883, 8, 1883, 23),
woosh.Token(woosh.OP, '=', 1883, 24, 1883, 25),
woosh.Token(woosh.NAME, 'ns', 1883, 26, 1883, 28),
woosh.Token(woosh.OP, '.', 1883, 28, 1883, 29),
woosh.Token(woosh.NAME, 'get', 1883, 29, 1883, 32),
woosh.Token(woosh.OP, '(', 1883, 32, 1883, 33),
woosh.Token(woosh.STRING, "'__annotations__'", 1883, 33, 1883, 50),
woosh.Token(woosh.OP, ',', 1883, 50, 1883, 51),
woosh.Token(woosh.OP, '{', 1883, 52, 1883, 53),
woosh.Token(woosh.OP, '}', 1883, 53, 1883, 54),
woosh.Token(woosh.OP, ')', 1883, 54, 1883, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1883, 55, 1884, 0),
woosh.Token(woosh.NAME, 'own_annotation_keys', 1884, 8, 1884, 27),
woosh.Token(woosh.OP, '=', 1884, 28, 1884, 29),
woosh.Token(woosh.NAME, 'set', 1884, 30, 1884, 33),
woosh.Token(woosh.OP, '(', 1884, 33, 1884, 34),
woosh.Token(woosh.NAME, 'own_annotations', 1884, 34, 1884, 49),
woosh.Token(woosh.OP, '.', 1884, 49, 1884, 50),
woosh.Token(woosh.NAME, 'keys', 1884, 50, 1884, 54),
woosh.Token(woosh.OP, '(', 1884, 54, 1884, 55),
woosh.Token(woosh.OP, ')', 1884, 55, 1884, 56),
woosh.Token(woosh.OP, ')', 1884, 56, 1884, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1884, 57, 1885, 0),
woosh.Token(woosh.NAME, 'msg', 1885, 8, 1885, 11),
woosh.Token(woosh.OP, '=', 1885, 12, 1885, 13),
woosh.Token(woosh.STRING, '"TypedDict(\'Name\', {f0: t0, f1: t1, ...}); each t must be a type"', 1885, 14, 1885, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1885, 79, 1886, 0),
woosh.Token(woosh.NAME, 'own_annotations', 1886, 8, 1886, 23),
woosh.Token(woosh.OP, '=', 1886, 24, 1886, 25),
woosh.Token(woosh.OP, '{', 1886, 26, 1886, 27),
woosh.Token(woosh.NAME, 'n', 1887, 12, 1887, 13),
woosh.Token(woosh.OP, ':', 1887, 13, 1887, 14),
woosh.Token(woosh.NAME, '_type_check', 1887, 15, 1887, 26),
woosh.Token(woosh.OP, '(', 1887, 26, 1887, 27),
woosh.Token(woosh.NAME, 'tp', 1887, 27, 1887, 29),
woosh.Token(woosh.OP, ',', 1887, 29, 1887, 30),
woosh.Token(woosh.NAME, 'msg', 1887, 31, 1887, 34),
woosh.Token(woosh.OP, ')', 1887, 34, 1887, 35),
woosh.Token(woosh.NAME, 'for', 1887, 36, 1887, 39),
woosh.Token(woosh.NAME, 'n', 1887, 40, 1887, 41),
woosh.Token(woosh.OP, ',', 1887, 41, 1887, 42),
woosh.Token(woosh.NAME, 'tp', 1887, 43, 1887, 45),
woosh.Token(woosh.NAME, 'in', 1887, 46, 1887, 48),
woosh.Token(woosh.NAME, 'own_annotations', 1887, 49, 1887, 64),
woosh.Token(woosh.OP, '.', 1887, 64, 1887, 65),
woosh.Token(woosh.NAME, 'items', 1887, 65, 1887, 70),
woosh.Token(woosh.OP, '(', 1887, 70, 1887, 71),
woosh.Token(woosh.OP, ')', 1887, 71, 1887, 72),
woosh.Token(woosh.OP, '}', 1888, 8, 1888, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1888, 9, 1889, 0),
woosh.Token(woosh.NAME, 'required_keys', 1889, 8, 1889, 21),
woosh.Token(woosh.OP, '=', 1889, 22, 1889, 23),
woosh.Token(woosh.NAME, 'set', 1889, 24, 1889, 27),
woosh.Token(woosh.OP, '(', 1889, 27, 1889, 28),
woosh.Token(woosh.OP, ')', 1889, 28, 1889, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1889, 29, 1890, 0),
woosh.Token(woosh.NAME, 'optional_keys', 1890, 8, 1890, 21),
woosh.Token(woosh.OP, '=', 1890, 22, 1890, 23),
woosh.Token(woosh.NAME, 'set', 1890, 24, 1890, 27),
woosh.Token(woosh.OP, '(', 1890, 27, 1890, 28),
woosh.Token(woosh.OP, ')', 1890, 28, 1890, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1890, 29, 1891, 0),
woosh.Token(woosh.NAME, 'for', 1892, 8, 1892, 11),
woosh.Token(woosh.NAME, 'base', 1892, 12, 1892, 16),
woosh.Token(woosh.NAME, 'in', 1892, 17, 1892, 19),
woosh.Token(woosh.NAME, 'bases', 1892, 20, 1892, 25),
woosh.Token(woosh.OP, ':', 1892, 25, 1892, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1892, 26, 1893, 0),
woosh.Token(woosh.INDENT, '            ', 1893, 0, 1893, 12),
woosh.Token(woosh.NAME, 'annotations', 1893, 12, 1893, 23),
woosh.Token(woosh.OP, '.', 1893, 23, 1893, 24),
woosh.Token(woosh.NAME, 'update', 1893, 24, 1893, 30),
woosh.Token(woosh.OP, '(', 1893, 30, 1893, 31),
woosh.Token(woosh.NAME, 'base', 1893, 31, 1893, 35),
woosh.Token(woosh.OP, '.', 1893, 35, 1893, 36),
woosh.Token(woosh.NAME, '__dict__', 1893, 36, 1893, 44),
woosh.Token(woosh.OP, '.', 1893, 44, 1893, 45),
woosh.Token(woosh.NAME, 'get', 1893, 45, 1893, 48),
woosh.Token(woosh.OP, '(', 1893, 48, 1893, 49),
woosh.Token(woosh.STRING, "'__annotations__'", 1893, 49, 1893, 66),
woosh.Token(woosh.OP, ',', 1893, 66, 1893, 67),
woosh.Token(woosh.OP, '{', 1893, 68, 1893, 69),
woosh.Token(woosh.OP, '}', 1893, 69, 1893, 70),
woosh.Token(woosh.OP, ')', 1893, 70, 1893, 71),
woosh.Token(woosh.OP, ')', 1893, 71, 1893, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1893, 72, 1894, 0),
woosh.Token(woosh.NAME, 'required_keys', 1894, 12, 1894, 25),
woosh.Token(woosh.OP, '.', 1894, 25, 1894, 26),
woosh.Token(woosh.NAME, 'update', 1894, 26, 1894, 32),
woosh.Token(woosh.OP, '(', 1894, 32, 1894, 33),
woosh.Token(woosh.NAME, 'base', 1894, 33, 1894, 37),
woosh.Token(woosh.OP, '.', 1894, 37, 1894, 38),
woosh.Token(woosh.NAME, '__dict__', 1894, 38, 1894, 46),
woosh.Token(woosh.OP, '.', 1894, 46, 1894, 47),
woosh.Token(woosh.NAME, 'get', 1894, 47, 1894, 50),
woosh.Token(woosh.OP, '(', 1894, 50, 1894, 51),
woosh.Token(woosh.STRING, "'__required_keys__'", 1894, 51, 1894, 70),
woosh.Token(woosh.OP, ',', 1894, 70, 1894, 71),
woosh.Token(woosh.OP, '(', 1894, 72, 1894, 73),
woosh.Token(woosh.OP, ')', 1894, 73, 1894, 74),
woosh.Token(woosh.OP, ')', 1894, 74, 1894, 75),
woosh.Token(woosh.OP, ')', 1894, 75, 1894, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1894, 76, 1895, 0),
woosh.Token(woosh.NAME, 'optional_keys', 1895, 12, 1895, 25),
woosh.Token(woosh.OP, '.', 1895, 25, 1895, 26),
woosh.Token(woosh.NAME, 'update', 1895, 26, 1895, 32),
woosh.Token(woosh.OP, '(', 1895, 32, 1895, 33),
woosh.Token(woosh.NAME, 'base', 1895, 33, 1895, 37),
woosh.Token(woosh.OP, '.', 1895, 37, 1895, 38),
woosh.Token(woosh.NAME, '__dict__', 1895, 38, 1895, 46),
woosh.Token(woosh.OP, '.', 1895, 46, 1895, 47),
woosh.Token(woosh.NAME, 'get', 1895, 47, 1895, 50),
woosh.Token(woosh.OP, '(', 1895, 50, 1895, 51),
woosh.Token(woosh.STRING, "'__optional_keys__'", 1895, 51, 1895, 70),
woosh.Token(woosh.OP, ',', 1895, 70, 1895, 71),
woosh.Token(woosh.OP, '(', 1895, 72, 1895, 73),
woosh.Token(woosh.OP, ')', 1895, 73, 1895, 74),
woosh.Token(woosh.OP, ')', 1895, 74, 1895, 75),
woosh.Token(woosh.OP, ')', 1895, 75, 1895, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1895, 76, 1896, 0),
woosh.Token(woosh.DEDENT, '        ', 1897, 0, 1897, 8),
woosh.Token(woosh.NAME, 'annotations', 1897, 8, 1897, 19),
woosh.Token(woosh.OP, '.', 1897, 19, 1897, 20),
woosh.Token(woosh.NAME, 'update', 1897, 20, 1897, 26),
woosh.Token(woosh.OP, '(', 1897, 26, 1897, 27),
woosh.Token(woosh.NAME, 'own_annotations', 1897, 27, 1897, 42),
woosh.Token(woosh.OP, ')', 1897, 42, 1897, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1897, 43, 1898, 0),
woosh.Token(woosh.NAME, 'if', 1898, 8, 1898, 10),
woosh.Token(woosh.NAME, 'total', 1898, 11, 1898, 16),
woosh.Token(woosh.OP, ':', 1898, 16, 1898, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1898, 17, 1899, 0),
woosh.Token(woosh.INDENT, '            ', 1899, 0, 1899, 12),
woosh.Token(woosh.NAME, 'required_keys', 1899, 12, 1899, 25),
woosh.Token(woosh.OP, '.', 1899, 25, 1899, 26),
woosh.Token(woosh.NAME, 'update', 1899, 26, 1899, 32),
woosh.Token(woosh.OP, '(', 1899, 32, 1899, 33),
woosh.Token(woosh.NAME, 'own_annotation_keys', 1899, 33, 1899, 52),
woosh.Token(woosh.OP, ')', 1899, 52, 1899, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1899, 53, 1900, 0),
woosh.Token(woosh.DEDENT, '        ', 1900, 0, 1900, 8),
woosh.Token(woosh.NAME, 'else', 1900, 8, 1900, 12),
woosh.Token(woosh.OP, ':', 1900, 12, 1900, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1900, 13, 1901, 0),
woosh.Token(woosh.INDENT, '            ', 1901, 0, 1901, 12),
woosh.Token(woosh.NAME, 'optional_keys', 1901, 12, 1901, 25),
woosh.Token(woosh.OP, '.', 1901, 25, 1901, 26),
woosh.Token(woosh.NAME, 'update', 1901, 26, 1901, 32),
woosh.Token(woosh.OP, '(', 1901, 32, 1901, 33),
woosh.Token(woosh.NAME, 'own_annotation_keys', 1901, 33, 1901, 52),
woosh.Token(woosh.OP, ')', 1901, 52, 1901, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1901, 53, 1902, 0),
woosh.Token(woosh.DEDENT, '        ', 1903, 0, 1903, 8),
woosh.Token(woosh.NAME, 'tp_dict', 1903, 8, 1903, 15),
woosh.Token(woosh.OP, '.', 1903, 15, 1903, 16),
woosh.Token(woosh.NAME, '__annotations__', 1903, 16, 1903, 31),
woosh.Token(woosh.OP, '=', 1903, 32, 1903, 33),
woosh.Token(woosh.NAME, 'annotations', 1903, 34, 1903, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1903, 45, 1904, 0),
woosh.Token(woosh.NAME, 'tp_dict', 1904, 8, 1904, 15),
woosh.Token(woosh.OP, '.', 1904, 15, 1904, 16),
woosh.Token(woosh.NAME, '__required_keys__', 1904, 16, 1904, 33),
woosh.Token(woosh.OP, '=', 1904, 34, 1904, 35),
woosh.Token(woosh.NAME, 'frozenset', 1904, 36, 1904, 45),
woosh.Token(woosh.OP, '(', 1904, 45, 1904, 46),
woosh.Token(woosh.NAME, 'required_keys', 1904, 46, 1904, 59),
woosh.Token(woosh.OP, ')', 1904, 59, 1904, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1904, 60, 1905, 0),
woosh.Token(woosh.NAME, 'tp_dict', 1905, 8, 1905, 15),
woosh.Token(woosh.OP, '.', 1905, 15, 1905, 16),
woosh.Token(woosh.NAME, '__optional_keys__', 1905, 16, 1905, 33),
woosh.Token(woosh.OP, '=', 1905, 34, 1905, 35),
woosh.Token(woosh.NAME, 'frozenset', 1905, 36, 1905, 45),
woosh.Token(woosh.OP, '(', 1905, 45, 1905, 46),
woosh.Token(woosh.NAME, 'optional_keys', 1905, 46, 1905, 59),
woosh.Token(woosh.OP, ')', 1905, 59, 1905, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1905, 60, 1906, 0),
woosh.Token(woosh.NAME, 'if', 1906, 8, 1906, 10),
woosh.Token(woosh.NAME, 'not', 1906, 11, 1906, 14),
woosh.Token(woosh.NAME, 'hasattr', 1906, 15, 1906, 22),
woosh.Token(woosh.OP, '(', 1906, 22, 1906, 23),
woosh.Token(woosh.NAME, 'tp_dict', 1906, 23, 1906, 30),
woosh.Token(woosh.OP, ',', 1906, 30, 1906, 31),
woosh.Token(woosh.STRING, "'__total__'", 1906, 32, 1906, 43),
woosh.Token(woosh.OP, ')', 1906, 43, 1906, 44),
woosh.Token(woosh.OP, ':', 1906, 44, 1906, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1906, 45, 1907, 0),
woosh.Token(woosh.INDENT, '            ', 1907, 0, 1907, 12),
woosh.Token(woosh.NAME, 'tp_dict', 1907, 12, 1907, 19),
woosh.Token(woosh.OP, '.', 1907, 19, 1907, 20),
woosh.Token(woosh.NAME, '__total__', 1907, 20, 1907, 29),
woosh.Token(woosh.OP, '=', 1907, 30, 1907, 31),
woosh.Token(woosh.NAME, 'total', 1907, 32, 1907, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1907, 37, 1908, 0),
woosh.Token(woosh.DEDENT, '        ', 1908, 0, 1908, 8),
woosh.Token(woosh.NAME, 'return', 1908, 8, 1908, 14),
woosh.Token(woosh.NAME, 'tp_dict', 1908, 15, 1908, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1908, 22, 1909, 0),
woosh.Token(woosh.DEDENT, '    ', 1910, 0, 1910, 4),
woosh.Token(woosh.NAME, '__call__', 1910, 4, 1910, 12),
woosh.Token(woosh.OP, '=', 1910, 13, 1910, 14),
woosh.Token(woosh.NAME, 'dict', 1910, 15, 1910, 19),
woosh.Token(woosh.COMMENT, '# static method', 1910, 21, 1910, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1910, 36, 1911, 0),
woosh.Token(woosh.NAME, 'def', 1912, 4, 1912, 7),
woosh.Token(woosh.NAME, '__subclasscheck__', 1912, 8, 1912, 25),
woosh.Token(woosh.OP, '(', 1912, 25, 1912, 26),
woosh.Token(woosh.NAME, 'cls', 1912, 26, 1912, 29),
woosh.Token(woosh.OP, ',', 1912, 29, 1912, 30),
woosh.Token(woosh.NAME, 'other', 1912, 31, 1912, 36),
woosh.Token(woosh.OP, ')', 1912, 36, 1912, 37),
woosh.Token(woosh.OP, ':', 1912, 37, 1912, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1912, 38, 1913, 0),
woosh.Token(woosh.COMMENT, '# Typed dicts are only for static structural subtyping.', 1913, 8, 1913, 63),
woosh.Token(woosh.INDENT, '        ', 1914, 0, 1914, 8),
woosh.Token(woosh.NAME, 'raise', 1914, 8, 1914, 13),
woosh.Token(woosh.NAME, 'TypeError', 1914, 14, 1914, 23),
woosh.Token(woosh.OP, '(', 1914, 23, 1914, 24),
woosh.Token(woosh.STRING, "'TypedDict does not support instance and class checks'", 1914, 24, 1914, 78),
woosh.Token(woosh.OP, ')', 1914, 78, 1914, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1914, 79, 1915, 0),
woosh.Token(woosh.DEDENT, '    ', 1916, 0, 1916, 4),
woosh.Token(woosh.NAME, '__instancecheck__', 1916, 4, 1916, 21),
woosh.Token(woosh.OP, '=', 1916, 22, 1916, 23),
woosh.Token(woosh.NAME, '__subclasscheck__', 1916, 24, 1916, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1916, 41, 1917, 0),
woosh.Token(woosh.DEDENT, '', 1919, 0, 1919, 0),
woosh.Token(woosh.NAME, 'def', 1919, 0, 1919, 3),
woosh.Token(woosh.NAME, 'TypedDict', 1919, 4, 1919, 13),
woosh.Token(woosh.OP, '(', 1919, 13, 1919, 14),
woosh.Token(woosh.NAME, 'typename', 1919, 14, 1919, 22),
woosh.Token(woosh.OP, ',', 1919, 22, 1919, 23),
woosh.Token(woosh.NAME, 'fields', 1919, 24, 1919, 30),
woosh.Token(woosh.OP, '=', 1919, 30, 1919, 31),
woosh.Token(woosh.NAME, 'None', 1919, 31, 1919, 35),
woosh.Token(woosh.OP, ',', 1919, 35, 1919, 36),
woosh.Token(woosh.OP, '/', 1919, 37, 1919, 38),
woosh.Token(woosh.OP, ',', 1919, 38, 1919, 39),
woosh.Token(woosh.OP, '*', 1919, 40, 1919, 41),
woosh.Token(woosh.OP, ',', 1919, 41, 1919, 42),
woosh.Token(woosh.NAME, 'total', 1919, 43, 1919, 48),
woosh.Token(woosh.OP, '=', 1919, 48, 1919, 49),
woosh.Token(woosh.NAME, 'True', 1919, 49, 1919, 53),
woosh.Token(woosh.OP, ',', 1919, 53, 1919, 54),
woosh.Token(woosh.OP, '**', 1919, 55, 1919, 57),
woosh.Token(woosh.NAME, 'kwargs', 1919, 57, 1919, 63),
woosh.Token(woosh.OP, ')', 1919, 63, 1919, 64),
woosh.Token(woosh.OP, ':', 1919, 64, 1919, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1919, 65, 1920, 0),
woosh.Token(woosh.INDENT, '    ', 1920, 0, 1920, 4),
woosh.Token(woosh.STRING, '"""A simple typed namespace. At runtime it is equivalent to a plain dict.\r\n\r\n    TypedDict creates a dictionary type that expects all of its\r\n    instances to have a certain set of keys, where each key is\r\n    associated with a value of a consistent type. This expectation\r\n    is not checked at runtime but is only enforced by type checkers.\r\n    Usage::\r\n\r\n        class Point2D(TypedDict):\r\n            x: int\r\n            y: int\r\n            label: str\r\n\r\n        a: Point2D = {\'x\': 1, \'y\': 2, \'label\': \'good\'}  # OK\r\n        b: Point2D = {\'z\': 3, \'label\': \'bad\'}           # Fails type check\r\n\r\n        assert Point2D(x=1, y=2, label=\'first\') == dict(x=1, y=2, label=\'first\')\r\n\r\n    The type info can be accessed via the Point2D.__annotations__ dict, and\r\n    the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\r\n    TypedDict supports two additional equivalent forms::\r\n\r\n        Point2D = TypedDict(\'Point2D\', x=int, y=int, label=str)\r\n        Point2D = TypedDict(\'Point2D\', {\'x\': int, \'y\': int, \'label\': str})\r\n\r\n    By default, all keys must be present in a TypedDict. It is possible\r\n    to override this by specifying totality.\r\n    Usage::\r\n\r\n        class point2D(TypedDict, total=False):\r\n            x: int\r\n            y: int\r\n\r\n    This means that a point2D TypedDict can have any of the keys omitted.A type\r\n    checker is only expected to support a literal False or True as the value of\r\n    the total argument. True is the default, and makes all items defined in the\r\n    class body be required.\r\n\r\n    The class syntax is only supported in Python 3.6+, while two other\r\n    syntax forms work for Python 2.7 and 3.2+\r\n    """', 1920, 4, 1960, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1960, 7, 1961, 0),
woosh.Token(woosh.NAME, 'if', 1961, 4, 1961, 6),
woosh.Token(woosh.NAME, 'fields', 1961, 7, 1961, 13),
woosh.Token(woosh.NAME, 'is', 1961, 14, 1961, 16),
woosh.Token(woosh.NAME, 'None', 1961, 17, 1961, 21),
woosh.Token(woosh.OP, ':', 1961, 21, 1961, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1961, 22, 1962, 0),
woosh.Token(woosh.INDENT, '        ', 1962, 0, 1962, 8),
woosh.Token(woosh.NAME, 'fields', 1962, 8, 1962, 14),
woosh.Token(woosh.OP, '=', 1962, 15, 1962, 16),
woosh.Token(woosh.NAME, 'kwargs', 1962, 17, 1962, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1962, 23, 1963, 0),
woosh.Token(woosh.DEDENT, '    ', 1963, 0, 1963, 4),
woosh.Token(woosh.NAME, 'elif', 1963, 4, 1963, 8),
woosh.Token(woosh.NAME, 'kwargs', 1963, 9, 1963, 15),
woosh.Token(woosh.OP, ':', 1963, 15, 1963, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1963, 16, 1964, 0),
woosh.Token(woosh.INDENT, '        ', 1964, 0, 1964, 8),
woosh.Token(woosh.NAME, 'raise', 1964, 8, 1964, 13),
woosh.Token(woosh.NAME, 'TypeError', 1964, 14, 1964, 23),
woosh.Token(woosh.OP, '(', 1964, 23, 1964, 24),
woosh.Token(woosh.STRING, '"TypedDict takes either a dict or keyword arguments,"', 1964, 24, 1964, 77),
woosh.Token(woosh.STRING, '" but not both"', 1965, 24, 1965, 39),
woosh.Token(woosh.OP, ')', 1965, 39, 1965, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1965, 40, 1966, 0),
woosh.Token(woosh.DEDENT, '    ', 1967, 0, 1967, 4),
woosh.Token(woosh.NAME, 'ns', 1967, 4, 1967, 6),
woosh.Token(woosh.OP, '=', 1967, 7, 1967, 8),
woosh.Token(woosh.OP, '{', 1967, 9, 1967, 10),
woosh.Token(woosh.STRING, "'__annotations__'", 1967, 10, 1967, 27),
woosh.Token(woosh.OP, ':', 1967, 27, 1967, 28),
woosh.Token(woosh.NAME, 'dict', 1967, 29, 1967, 33),
woosh.Token(woosh.OP, '(', 1967, 33, 1967, 34),
woosh.Token(woosh.NAME, 'fields', 1967, 34, 1967, 40),
woosh.Token(woosh.OP, ')', 1967, 40, 1967, 41),
woosh.Token(woosh.OP, ',', 1967, 41, 1967, 42),
woosh.Token(woosh.STRING, "'__total__'", 1967, 43, 1967, 54),
woosh.Token(woosh.OP, ':', 1967, 54, 1967, 55),
woosh.Token(woosh.NAME, 'total', 1967, 56, 1967, 61),
woosh.Token(woosh.OP, '}', 1967, 61, 1967, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1967, 62, 1968, 0),
woosh.Token(woosh.NAME, 'try', 1968, 4, 1968, 7),
woosh.Token(woosh.OP, ':', 1968, 7, 1968, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1968, 8, 1969, 0),
woosh.Token(woosh.COMMENT, '# Setting correct module is necessary to make typed dict classes pickleable.', 1969, 8, 1969, 84),
woosh.Token(woosh.INDENT, '        ', 1970, 0, 1970, 8),
woosh.Token(woosh.NAME, 'ns', 1970, 8, 1970, 10),
woosh.Token(woosh.OP, '[', 1970, 10, 1970, 11),
woosh.Token(woosh.STRING, "'__module__'", 1970, 11, 1970, 23),
woosh.Token(woosh.OP, ']', 1970, 23, 1970, 24),
woosh.Token(woosh.OP, '=', 1970, 25, 1970, 26),
woosh.Token(woosh.NAME, 'sys', 1970, 27, 1970, 30),
woosh.Token(woosh.OP, '.', 1970, 30, 1970, 31),
woosh.Token(woosh.NAME, '_getframe', 1970, 31, 1970, 40),
woosh.Token(woosh.OP, '(', 1970, 40, 1970, 41),
woosh.Token(woosh.NUMBER, '1', 1970, 41, 1970, 42),
woosh.Token(woosh.OP, ')', 1970, 42, 1970, 43),
woosh.Token(woosh.OP, '.', 1970, 43, 1970, 44),
woosh.Token(woosh.NAME, 'f_globals', 1970, 44, 1970, 53),
woosh.Token(woosh.OP, '.', 1970, 53, 1970, 54),
woosh.Token(woosh.NAME, 'get', 1970, 54, 1970, 57),
woosh.Token(woosh.OP, '(', 1970, 57, 1970, 58),
woosh.Token(woosh.STRING, "'__name__'", 1970, 58, 1970, 68),
woosh.Token(woosh.OP, ',', 1970, 68, 1970, 69),
woosh.Token(woosh.STRING, "'__main__'", 1970, 70, 1970, 80),
woosh.Token(woosh.OP, ')', 1970, 80, 1970, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 1970, 81, 1971, 0),
woosh.Token(woosh.DEDENT, '    ', 1971, 0, 1971, 4),
woosh.Token(woosh.NAME, 'except', 1971, 4, 1971, 10),
woosh.Token(woosh.OP, '(', 1971, 11, 1971, 12),
woosh.Token(woosh.NAME, 'AttributeError', 1971, 12, 1971, 26),
woosh.Token(woosh.OP, ',', 1971, 26, 1971, 27),
woosh.Token(woosh.NAME, 'ValueError', 1971, 28, 1971, 38),
woosh.Token(woosh.OP, ')', 1971, 38, 1971, 39),
woosh.Token(woosh.OP, ':', 1971, 39, 1971, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1971, 40, 1972, 0),
woosh.Token(woosh.INDENT, '        ', 1972, 0, 1972, 8),
woosh.Token(woosh.NAME, 'pass', 1972, 8, 1972, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1972, 12, 1973, 0),
woosh.Token(woosh.DEDENT, '    ', 1974, 0, 1974, 4),
woosh.Token(woosh.NAME, 'return', 1974, 4, 1974, 10),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1974, 11, 1974, 25),
woosh.Token(woosh.OP, '(', 1974, 25, 1974, 26),
woosh.Token(woosh.NAME, 'typename', 1974, 26, 1974, 34),
woosh.Token(woosh.OP, ',', 1974, 34, 1974, 35),
woosh.Token(woosh.OP, '(', 1974, 36, 1974, 37),
woosh.Token(woosh.OP, ')', 1974, 37, 1974, 38),
woosh.Token(woosh.OP, ',', 1974, 38, 1974, 39),
woosh.Token(woosh.NAME, 'ns', 1974, 40, 1974, 42),
woosh.Token(woosh.OP, ')', 1974, 42, 1974, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1974, 43, 1975, 0),
woosh.Token(woosh.DEDENT, '', 1976, 0, 1976, 0),
woosh.Token(woosh.NAME, '_TypedDict', 1976, 0, 1976, 10),
woosh.Token(woosh.OP, '=', 1976, 11, 1976, 12),
woosh.Token(woosh.NAME, 'type', 1976, 13, 1976, 17),
woosh.Token(woosh.OP, '.', 1976, 17, 1976, 18),
woosh.Token(woosh.NAME, '__new__', 1976, 18, 1976, 25),
woosh.Token(woosh.OP, '(', 1976, 25, 1976, 26),
woosh.Token(woosh.NAME, '_TypedDictMeta', 1976, 26, 1976, 40),
woosh.Token(woosh.OP, ',', 1976, 40, 1976, 41),
woosh.Token(woosh.STRING, "'TypedDict'", 1976, 42, 1976, 53),
woosh.Token(woosh.OP, ',', 1976, 53, 1976, 54),
woosh.Token(woosh.OP, '(', 1976, 55, 1976, 56),
woosh.Token(woosh.OP, ')', 1976, 56, 1976, 57),
woosh.Token(woosh.OP, ',', 1976, 57, 1976, 58),
woosh.Token(woosh.OP, '{', 1976, 59, 1976, 60),
woosh.Token(woosh.OP, '}', 1976, 60, 1976, 61),
woosh.Token(woosh.OP, ')', 1976, 61, 1976, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1976, 62, 1977, 0),
woosh.Token(woosh.NAME, 'TypedDict', 1977, 0, 1977, 9),
woosh.Token(woosh.OP, '.', 1977, 9, 1977, 10),
woosh.Token(woosh.NAME, '__mro_entries__', 1977, 10, 1977, 25),
woosh.Token(woosh.OP, '=', 1977, 26, 1977, 27),
woosh.Token(woosh.NAME, 'lambda', 1977, 28, 1977, 34),
woosh.Token(woosh.NAME, 'bases', 1977, 35, 1977, 40),
woosh.Token(woosh.OP, ':', 1977, 40, 1977, 41),
woosh.Token(woosh.OP, '(', 1977, 42, 1977, 43),
woosh.Token(woosh.NAME, '_TypedDict', 1977, 43, 1977, 53),
woosh.Token(woosh.OP, ',', 1977, 53, 1977, 54),
woosh.Token(woosh.OP, ')', 1977, 54, 1977, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1977, 55, 1978, 0),
woosh.Token(woosh.NAME, 'def', 1980, 0, 1980, 3),
woosh.Token(woosh.NAME, 'NewType', 1980, 4, 1980, 11),
woosh.Token(woosh.OP, '(', 1980, 11, 1980, 12),
woosh.Token(woosh.NAME, 'name', 1980, 12, 1980, 16),
woosh.Token(woosh.OP, ',', 1980, 16, 1980, 17),
woosh.Token(woosh.NAME, 'tp', 1980, 18, 1980, 20),
woosh.Token(woosh.OP, ')', 1980, 20, 1980, 21),
woosh.Token(woosh.OP, ':', 1980, 21, 1980, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1980, 22, 1981, 0),
woosh.Token(woosh.INDENT, '    ', 1981, 0, 1981, 4),
woosh.Token(woosh.STRING, '"""NewType creates simple unique types with almost zero\r\n    runtime overhead. NewType(name, tp) is considered a subtype of tp\r\n    by static type checkers. At runtime, NewType(name, tp) returns\r\n    a dummy function that simply returns its argument. Usage::\r\n\r\n        UserId = NewType(\'UserId\', int)\r\n\r\n        def name_by_id(user_id: UserId) -> str:\r\n            ...\r\n\r\n        UserId(\'user\')          # Fails type check\r\n\r\n        name_by_id(42)          # Fails type check\r\n        name_by_id(UserId(42))  # OK\r\n\r\n        num = UserId(5) + 1     # type: int\r\n    """', 1981, 4, 1997, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1997, 7, 1998, 0),
woosh.Token(woosh.NAME, 'def', 1999, 4, 1999, 7),
woosh.Token(woosh.NAME, 'new_type', 1999, 8, 1999, 16),
woosh.Token(woosh.OP, '(', 1999, 16, 1999, 17),
woosh.Token(woosh.NAME, 'x', 1999, 17, 1999, 18),
woosh.Token(woosh.OP, ')', 1999, 18, 1999, 19),
woosh.Token(woosh.OP, ':', 1999, 19, 1999, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1999, 20, 2000, 0),
woosh.Token(woosh.INDENT, '        ', 2000, 0, 2000, 8),
woosh.Token(woosh.NAME, 'return', 2000, 8, 2000, 14),
woosh.Token(woosh.NAME, 'x', 2000, 15, 2000, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2000, 16, 2001, 0),
woosh.Token(woosh.DEDENT, '    ', 2002, 0, 2002, 4),
woosh.Token(woosh.NAME, 'new_type', 2002, 4, 2002, 12),
woosh.Token(woosh.OP, '.', 2002, 12, 2002, 13),
woosh.Token(woosh.NAME, '__name__', 2002, 13, 2002, 21),
woosh.Token(woosh.OP, '=', 2002, 22, 2002, 23),
woosh.Token(woosh.NAME, 'name', 2002, 24, 2002, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2002, 28, 2003, 0),
woosh.Token(woosh.NAME, 'new_type', 2003, 4, 2003, 12),
woosh.Token(woosh.OP, '.', 2003, 12, 2003, 13),
woosh.Token(woosh.NAME, '__supertype__', 2003, 13, 2003, 26),
woosh.Token(woosh.OP, '=', 2003, 27, 2003, 28),
woosh.Token(woosh.NAME, 'tp', 2003, 29, 2003, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2003, 31, 2004, 0),
woosh.Token(woosh.NAME, 'return', 2004, 4, 2004, 10),
woosh.Token(woosh.NAME, 'new_type', 2004, 11, 2004, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2004, 19, 2005, 0),
woosh.Token(woosh.COMMENT, '# Python-version-specific alias (Python 2: unicode; Python 3: str)', 2007, 0, 2007, 66),
woosh.Token(woosh.DEDENT, '', 2008, 0, 2008, 0),
woosh.Token(woosh.NAME, 'Text', 2008, 0, 2008, 4),
woosh.Token(woosh.OP, '=', 2008, 5, 2008, 6),
woosh.Token(woosh.NAME, 'str', 2008, 7, 2008, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 2008, 10, 2009, 0),
woosh.Token(woosh.COMMENT, "# Constant that's True when type checking, but False here.", 2011, 0, 2011, 58),
woosh.Token(woosh.NAME, 'TYPE_CHECKING', 2012, 0, 2012, 13),
woosh.Token(woosh.OP, '=', 2012, 14, 2012, 15),
woosh.Token(woosh.NAME, 'False', 2012, 16, 2012, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2012, 21, 2013, 0),
woosh.Token(woosh.NAME, 'class', 2015, 0, 2015, 5),
woosh.Token(woosh.NAME, 'IO', 2015, 6, 2015, 8),
woosh.Token(woosh.OP, '(', 2015, 8, 2015, 9),
woosh.Token(woosh.NAME, 'Generic', 2015, 9, 2015, 16),
woosh.Token(woosh.OP, '[', 2015, 16, 2015, 17),
woosh.Token(woosh.NAME, 'AnyStr', 2015, 17, 2015, 23),
woosh.Token(woosh.OP, ']', 2015, 23, 2015, 24),
woosh.Token(woosh.OP, ')', 2015, 24, 2015, 25),
woosh.Token(woosh.OP, ':', 2015, 25, 2015, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2015, 26, 2016, 0),
woosh.Token(woosh.INDENT, '    ', 2016, 0, 2016, 4),
woosh.Token(woosh.STRING, '"""Generic base class for TextIO and BinaryIO.\r\n\r\n    This is an abstract, generic version of the return of open().\r\n\r\n    NOTE: This does not distinguish between the different possible\r\n    classes (text vs. binary, read vs. write vs. read/write,\r\n    append-only, unbuffered).  The TextIO and BinaryIO subclasses\r\n    below capture the distinctions between text vs. binary, which is\r\n    pervasive in the interface; however we currently do not offer a\r\n    way to track the other distinctions in the type system.\r\n    """', 2016, 4, 2026, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2026, 7, 2027, 0),
woosh.Token(woosh.NAME, '__slots__', 2028, 4, 2028, 13),
woosh.Token(woosh.OP, '=', 2028, 14, 2028, 15),
woosh.Token(woosh.OP, '(', 2028, 16, 2028, 17),
woosh.Token(woosh.OP, ')', 2028, 17, 2028, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2028, 18, 2029, 0),
woosh.Token(woosh.OP, '@', 2030, 4, 2030, 5),
woosh.Token(woosh.NAME, 'property', 2030, 5, 2030, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2030, 13, 2031, 0),
woosh.Token(woosh.OP, '@', 2031, 4, 2031, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2031, 5, 2031, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2031, 19, 2032, 0),
woosh.Token(woosh.NAME, 'def', 2032, 4, 2032, 7),
woosh.Token(woosh.NAME, 'mode', 2032, 8, 2032, 12),
woosh.Token(woosh.OP, '(', 2032, 12, 2032, 13),
woosh.Token(woosh.NAME, 'self', 2032, 13, 2032, 17),
woosh.Token(woosh.OP, ')', 2032, 17, 2032, 18),
woosh.Token(woosh.OP, '->', 2032, 19, 2032, 21),
woosh.Token(woosh.NAME, 'str', 2032, 22, 2032, 25),
woosh.Token(woosh.OP, ':', 2032, 25, 2032, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2032, 26, 2033, 0),
woosh.Token(woosh.INDENT, '        ', 2033, 0, 2033, 8),
woosh.Token(woosh.NAME, 'pass', 2033, 8, 2033, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2033, 12, 2034, 0),
woosh.Token(woosh.DEDENT, '    ', 2035, 0, 2035, 4),
woosh.Token(woosh.OP, '@', 2035, 4, 2035, 5),
woosh.Token(woosh.NAME, 'property', 2035, 5, 2035, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2035, 13, 2036, 0),
woosh.Token(woosh.OP, '@', 2036, 4, 2036, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2036, 5, 2036, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2036, 19, 2037, 0),
woosh.Token(woosh.NAME, 'def', 2037, 4, 2037, 7),
woosh.Token(woosh.NAME, 'name', 2037, 8, 2037, 12),
woosh.Token(woosh.OP, '(', 2037, 12, 2037, 13),
woosh.Token(woosh.NAME, 'self', 2037, 13, 2037, 17),
woosh.Token(woosh.OP, ')', 2037, 17, 2037, 18),
woosh.Token(woosh.OP, '->', 2037, 19, 2037, 21),
woosh.Token(woosh.NAME, 'str', 2037, 22, 2037, 25),
woosh.Token(woosh.OP, ':', 2037, 25, 2037, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2037, 26, 2038, 0),
woosh.Token(woosh.INDENT, '        ', 2038, 0, 2038, 8),
woosh.Token(woosh.NAME, 'pass', 2038, 8, 2038, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2038, 12, 2039, 0),
woosh.Token(woosh.DEDENT, '    ', 2040, 0, 2040, 4),
woosh.Token(woosh.OP, '@', 2040, 4, 2040, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2040, 5, 2040, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2040, 19, 2041, 0),
woosh.Token(woosh.NAME, 'def', 2041, 4, 2041, 7),
woosh.Token(woosh.NAME, 'close', 2041, 8, 2041, 13),
woosh.Token(woosh.OP, '(', 2041, 13, 2041, 14),
woosh.Token(woosh.NAME, 'self', 2041, 14, 2041, 18),
woosh.Token(woosh.OP, ')', 2041, 18, 2041, 19),
woosh.Token(woosh.OP, '->', 2041, 20, 2041, 22),
woosh.Token(woosh.NAME, 'None', 2041, 23, 2041, 27),
woosh.Token(woosh.OP, ':', 2041, 27, 2041, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2041, 28, 2042, 0),
woosh.Token(woosh.INDENT, '        ', 2042, 0, 2042, 8),
woosh.Token(woosh.NAME, 'pass', 2042, 8, 2042, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2042, 12, 2043, 0),
woosh.Token(woosh.DEDENT, '    ', 2044, 0, 2044, 4),
woosh.Token(woosh.OP, '@', 2044, 4, 2044, 5),
woosh.Token(woosh.NAME, 'property', 2044, 5, 2044, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2044, 13, 2045, 0),
woosh.Token(woosh.OP, '@', 2045, 4, 2045, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2045, 5, 2045, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2045, 19, 2046, 0),
woosh.Token(woosh.NAME, 'def', 2046, 4, 2046, 7),
woosh.Token(woosh.NAME, 'closed', 2046, 8, 2046, 14),
woosh.Token(woosh.OP, '(', 2046, 14, 2046, 15),
woosh.Token(woosh.NAME, 'self', 2046, 15, 2046, 19),
woosh.Token(woosh.OP, ')', 2046, 19, 2046, 20),
woosh.Token(woosh.OP, '->', 2046, 21, 2046, 23),
woosh.Token(woosh.NAME, 'bool', 2046, 24, 2046, 28),
woosh.Token(woosh.OP, ':', 2046, 28, 2046, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2046, 29, 2047, 0),
woosh.Token(woosh.INDENT, '        ', 2047, 0, 2047, 8),
woosh.Token(woosh.NAME, 'pass', 2047, 8, 2047, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2047, 12, 2048, 0),
woosh.Token(woosh.DEDENT, '    ', 2049, 0, 2049, 4),
woosh.Token(woosh.OP, '@', 2049, 4, 2049, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2049, 5, 2049, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2049, 19, 2050, 0),
woosh.Token(woosh.NAME, 'def', 2050, 4, 2050, 7),
woosh.Token(woosh.NAME, 'fileno', 2050, 8, 2050, 14),
woosh.Token(woosh.OP, '(', 2050, 14, 2050, 15),
woosh.Token(woosh.NAME, 'self', 2050, 15, 2050, 19),
woosh.Token(woosh.OP, ')', 2050, 19, 2050, 20),
woosh.Token(woosh.OP, '->', 2050, 21, 2050, 23),
woosh.Token(woosh.NAME, 'int', 2050, 24, 2050, 27),
woosh.Token(woosh.OP, ':', 2050, 27, 2050, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2050, 28, 2051, 0),
woosh.Token(woosh.INDENT, '        ', 2051, 0, 2051, 8),
woosh.Token(woosh.NAME, 'pass', 2051, 8, 2051, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2051, 12, 2052, 0),
woosh.Token(woosh.DEDENT, '    ', 2053, 0, 2053, 4),
woosh.Token(woosh.OP, '@', 2053, 4, 2053, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2053, 5, 2053, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2053, 19, 2054, 0),
woosh.Token(woosh.NAME, 'def', 2054, 4, 2054, 7),
woosh.Token(woosh.NAME, 'flush', 2054, 8, 2054, 13),
woosh.Token(woosh.OP, '(', 2054, 13, 2054, 14),
woosh.Token(woosh.NAME, 'self', 2054, 14, 2054, 18),
woosh.Token(woosh.OP, ')', 2054, 18, 2054, 19),
woosh.Token(woosh.OP, '->', 2054, 20, 2054, 22),
woosh.Token(woosh.NAME, 'None', 2054, 23, 2054, 27),
woosh.Token(woosh.OP, ':', 2054, 27, 2054, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2054, 28, 2055, 0),
woosh.Token(woosh.INDENT, '        ', 2055, 0, 2055, 8),
woosh.Token(woosh.NAME, 'pass', 2055, 8, 2055, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2055, 12, 2056, 0),
woosh.Token(woosh.DEDENT, '    ', 2057, 0, 2057, 4),
woosh.Token(woosh.OP, '@', 2057, 4, 2057, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2057, 5, 2057, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2057, 19, 2058, 0),
woosh.Token(woosh.NAME, 'def', 2058, 4, 2058, 7),
woosh.Token(woosh.NAME, 'isatty', 2058, 8, 2058, 14),
woosh.Token(woosh.OP, '(', 2058, 14, 2058, 15),
woosh.Token(woosh.NAME, 'self', 2058, 15, 2058, 19),
woosh.Token(woosh.OP, ')', 2058, 19, 2058, 20),
woosh.Token(woosh.OP, '->', 2058, 21, 2058, 23),
woosh.Token(woosh.NAME, 'bool', 2058, 24, 2058, 28),
woosh.Token(woosh.OP, ':', 2058, 28, 2058, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2058, 29, 2059, 0),
woosh.Token(woosh.INDENT, '        ', 2059, 0, 2059, 8),
woosh.Token(woosh.NAME, 'pass', 2059, 8, 2059, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2059, 12, 2060, 0),
woosh.Token(woosh.DEDENT, '    ', 2061, 0, 2061, 4),
woosh.Token(woosh.OP, '@', 2061, 4, 2061, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2061, 5, 2061, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2061, 19, 2062, 0),
woosh.Token(woosh.NAME, 'def', 2062, 4, 2062, 7),
woosh.Token(woosh.NAME, 'read', 2062, 8, 2062, 12),
woosh.Token(woosh.OP, '(', 2062, 12, 2062, 13),
woosh.Token(woosh.NAME, 'self', 2062, 13, 2062, 17),
woosh.Token(woosh.OP, ',', 2062, 17, 2062, 18),
woosh.Token(woosh.NAME, 'n', 2062, 19, 2062, 20),
woosh.Token(woosh.OP, ':', 2062, 20, 2062, 21),
woosh.Token(woosh.NAME, 'int', 2062, 22, 2062, 25),
woosh.Token(woosh.OP, '=', 2062, 26, 2062, 27),
woosh.Token(woosh.OP, '-', 2062, 28, 2062, 29),
woosh.Token(woosh.NUMBER, '1', 2062, 29, 2062, 30),
woosh.Token(woosh.OP, ')', 2062, 30, 2062, 31),
woosh.Token(woosh.OP, '->', 2062, 32, 2062, 34),
woosh.Token(woosh.NAME, 'AnyStr', 2062, 35, 2062, 41),
woosh.Token(woosh.OP, ':', 2062, 41, 2062, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2062, 42, 2063, 0),
woosh.Token(woosh.INDENT, '        ', 2063, 0, 2063, 8),
woosh.Token(woosh.NAME, 'pass', 2063, 8, 2063, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2063, 12, 2064, 0),
woosh.Token(woosh.DEDENT, '    ', 2065, 0, 2065, 4),
woosh.Token(woosh.OP, '@', 2065, 4, 2065, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2065, 5, 2065, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2065, 19, 2066, 0),
woosh.Token(woosh.NAME, 'def', 2066, 4, 2066, 7),
woosh.Token(woosh.NAME, 'readable', 2066, 8, 2066, 16),
woosh.Token(woosh.OP, '(', 2066, 16, 2066, 17),
woosh.Token(woosh.NAME, 'self', 2066, 17, 2066, 21),
woosh.Token(woosh.OP, ')', 2066, 21, 2066, 22),
woosh.Token(woosh.OP, '->', 2066, 23, 2066, 25),
woosh.Token(woosh.NAME, 'bool', 2066, 26, 2066, 30),
woosh.Token(woosh.OP, ':', 2066, 30, 2066, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2066, 31, 2067, 0),
woosh.Token(woosh.INDENT, '        ', 2067, 0, 2067, 8),
woosh.Token(woosh.NAME, 'pass', 2067, 8, 2067, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2067, 12, 2068, 0),
woosh.Token(woosh.DEDENT, '    ', 2069, 0, 2069, 4),
woosh.Token(woosh.OP, '@', 2069, 4, 2069, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2069, 5, 2069, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2069, 19, 2070, 0),
woosh.Token(woosh.NAME, 'def', 2070, 4, 2070, 7),
woosh.Token(woosh.NAME, 'readline', 2070, 8, 2070, 16),
woosh.Token(woosh.OP, '(', 2070, 16, 2070, 17),
woosh.Token(woosh.NAME, 'self', 2070, 17, 2070, 21),
woosh.Token(woosh.OP, ',', 2070, 21, 2070, 22),
woosh.Token(woosh.NAME, 'limit', 2070, 23, 2070, 28),
woosh.Token(woosh.OP, ':', 2070, 28, 2070, 29),
woosh.Token(woosh.NAME, 'int', 2070, 30, 2070, 33),
woosh.Token(woosh.OP, '=', 2070, 34, 2070, 35),
woosh.Token(woosh.OP, '-', 2070, 36, 2070, 37),
woosh.Token(woosh.NUMBER, '1', 2070, 37, 2070, 38),
woosh.Token(woosh.OP, ')', 2070, 38, 2070, 39),
woosh.Token(woosh.OP, '->', 2070, 40, 2070, 42),
woosh.Token(woosh.NAME, 'AnyStr', 2070, 43, 2070, 49),
woosh.Token(woosh.OP, ':', 2070, 49, 2070, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 2070, 50, 2071, 0),
woosh.Token(woosh.INDENT, '        ', 2071, 0, 2071, 8),
woosh.Token(woosh.NAME, 'pass', 2071, 8, 2071, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2071, 12, 2072, 0),
woosh.Token(woosh.DEDENT, '    ', 2073, 0, 2073, 4),
woosh.Token(woosh.OP, '@', 2073, 4, 2073, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2073, 5, 2073, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2073, 19, 2074, 0),
woosh.Token(woosh.NAME, 'def', 2074, 4, 2074, 7),
woosh.Token(woosh.NAME, 'readlines', 2074, 8, 2074, 17),
woosh.Token(woosh.OP, '(', 2074, 17, 2074, 18),
woosh.Token(woosh.NAME, 'self', 2074, 18, 2074, 22),
woosh.Token(woosh.OP, ',', 2074, 22, 2074, 23),
woosh.Token(woosh.NAME, 'hint', 2074, 24, 2074, 28),
woosh.Token(woosh.OP, ':', 2074, 28, 2074, 29),
woosh.Token(woosh.NAME, 'int', 2074, 30, 2074, 33),
woosh.Token(woosh.OP, '=', 2074, 34, 2074, 35),
woosh.Token(woosh.OP, '-', 2074, 36, 2074, 37),
woosh.Token(woosh.NUMBER, '1', 2074, 37, 2074, 38),
woosh.Token(woosh.OP, ')', 2074, 38, 2074, 39),
woosh.Token(woosh.OP, '->', 2074, 40, 2074, 42),
woosh.Token(woosh.NAME, 'List', 2074, 43, 2074, 47),
woosh.Token(woosh.OP, '[', 2074, 47, 2074, 48),
woosh.Token(woosh.NAME, 'AnyStr', 2074, 48, 2074, 54),
woosh.Token(woosh.OP, ']', 2074, 54, 2074, 55),
woosh.Token(woosh.OP, ':', 2074, 55, 2074, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 2074, 56, 2075, 0),
woosh.Token(woosh.INDENT, '        ', 2075, 0, 2075, 8),
woosh.Token(woosh.NAME, 'pass', 2075, 8, 2075, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2075, 12, 2076, 0),
woosh.Token(woosh.DEDENT, '    ', 2077, 0, 2077, 4),
woosh.Token(woosh.OP, '@', 2077, 4, 2077, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2077, 5, 2077, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2077, 19, 2078, 0),
woosh.Token(woosh.NAME, 'def', 2078, 4, 2078, 7),
woosh.Token(woosh.NAME, 'seek', 2078, 8, 2078, 12),
woosh.Token(woosh.OP, '(', 2078, 12, 2078, 13),
woosh.Token(woosh.NAME, 'self', 2078, 13, 2078, 17),
woosh.Token(woosh.OP, ',', 2078, 17, 2078, 18),
woosh.Token(woosh.NAME, 'offset', 2078, 19, 2078, 25),
woosh.Token(woosh.OP, ':', 2078, 25, 2078, 26),
woosh.Token(woosh.NAME, 'int', 2078, 27, 2078, 30),
woosh.Token(woosh.OP, ',', 2078, 30, 2078, 31),
woosh.Token(woosh.NAME, 'whence', 2078, 32, 2078, 38),
woosh.Token(woosh.OP, ':', 2078, 38, 2078, 39),
woosh.Token(woosh.NAME, 'int', 2078, 40, 2078, 43),
woosh.Token(woosh.OP, '=', 2078, 44, 2078, 45),
woosh.Token(woosh.NUMBER, '0', 2078, 46, 2078, 47),
woosh.Token(woosh.OP, ')', 2078, 47, 2078, 48),
woosh.Token(woosh.OP, '->', 2078, 49, 2078, 51),
woosh.Token(woosh.NAME, 'int', 2078, 52, 2078, 55),
woosh.Token(woosh.OP, ':', 2078, 55, 2078, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 2078, 56, 2079, 0),
woosh.Token(woosh.INDENT, '        ', 2079, 0, 2079, 8),
woosh.Token(woosh.NAME, 'pass', 2079, 8, 2079, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2079, 12, 2080, 0),
woosh.Token(woosh.DEDENT, '    ', 2081, 0, 2081, 4),
woosh.Token(woosh.OP, '@', 2081, 4, 2081, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2081, 5, 2081, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2081, 19, 2082, 0),
woosh.Token(woosh.NAME, 'def', 2082, 4, 2082, 7),
woosh.Token(woosh.NAME, 'seekable', 2082, 8, 2082, 16),
woosh.Token(woosh.OP, '(', 2082, 16, 2082, 17),
woosh.Token(woosh.NAME, 'self', 2082, 17, 2082, 21),
woosh.Token(woosh.OP, ')', 2082, 21, 2082, 22),
woosh.Token(woosh.OP, '->', 2082, 23, 2082, 25),
woosh.Token(woosh.NAME, 'bool', 2082, 26, 2082, 30),
woosh.Token(woosh.OP, ':', 2082, 30, 2082, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2082, 31, 2083, 0),
woosh.Token(woosh.INDENT, '        ', 2083, 0, 2083, 8),
woosh.Token(woosh.NAME, 'pass', 2083, 8, 2083, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2083, 12, 2084, 0),
woosh.Token(woosh.DEDENT, '    ', 2085, 0, 2085, 4),
woosh.Token(woosh.OP, '@', 2085, 4, 2085, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2085, 5, 2085, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2085, 19, 2086, 0),
woosh.Token(woosh.NAME, 'def', 2086, 4, 2086, 7),
woosh.Token(woosh.NAME, 'tell', 2086, 8, 2086, 12),
woosh.Token(woosh.OP, '(', 2086, 12, 2086, 13),
woosh.Token(woosh.NAME, 'self', 2086, 13, 2086, 17),
woosh.Token(woosh.OP, ')', 2086, 17, 2086, 18),
woosh.Token(woosh.OP, '->', 2086, 19, 2086, 21),
woosh.Token(woosh.NAME, 'int', 2086, 22, 2086, 25),
woosh.Token(woosh.OP, ':', 2086, 25, 2086, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2086, 26, 2087, 0),
woosh.Token(woosh.INDENT, '        ', 2087, 0, 2087, 8),
woosh.Token(woosh.NAME, 'pass', 2087, 8, 2087, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2087, 12, 2088, 0),
woosh.Token(woosh.DEDENT, '    ', 2089, 0, 2089, 4),
woosh.Token(woosh.OP, '@', 2089, 4, 2089, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2089, 5, 2089, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2089, 19, 2090, 0),
woosh.Token(woosh.NAME, 'def', 2090, 4, 2090, 7),
woosh.Token(woosh.NAME, 'truncate', 2090, 8, 2090, 16),
woosh.Token(woosh.OP, '(', 2090, 16, 2090, 17),
woosh.Token(woosh.NAME, 'self', 2090, 17, 2090, 21),
woosh.Token(woosh.OP, ',', 2090, 21, 2090, 22),
woosh.Token(woosh.NAME, 'size', 2090, 23, 2090, 27),
woosh.Token(woosh.OP, ':', 2090, 27, 2090, 28),
woosh.Token(woosh.NAME, 'int', 2090, 29, 2090, 32),
woosh.Token(woosh.OP, '=', 2090, 33, 2090, 34),
woosh.Token(woosh.NAME, 'None', 2090, 35, 2090, 39),
woosh.Token(woosh.OP, ')', 2090, 39, 2090, 40),
woosh.Token(woosh.OP, '->', 2090, 41, 2090, 43),
woosh.Token(woosh.NAME, 'int', 2090, 44, 2090, 47),
woosh.Token(woosh.OP, ':', 2090, 47, 2090, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 2090, 48, 2091, 0),
woosh.Token(woosh.INDENT, '        ', 2091, 0, 2091, 8),
woosh.Token(woosh.NAME, 'pass', 2091, 8, 2091, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2091, 12, 2092, 0),
woosh.Token(woosh.DEDENT, '    ', 2093, 0, 2093, 4),
woosh.Token(woosh.OP, '@', 2093, 4, 2093, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2093, 5, 2093, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2093, 19, 2094, 0),
woosh.Token(woosh.NAME, 'def', 2094, 4, 2094, 7),
woosh.Token(woosh.NAME, 'writable', 2094, 8, 2094, 16),
woosh.Token(woosh.OP, '(', 2094, 16, 2094, 17),
woosh.Token(woosh.NAME, 'self', 2094, 17, 2094, 21),
woosh.Token(woosh.OP, ')', 2094, 21, 2094, 22),
woosh.Token(woosh.OP, '->', 2094, 23, 2094, 25),
woosh.Token(woosh.NAME, 'bool', 2094, 26, 2094, 30),
woosh.Token(woosh.OP, ':', 2094, 30, 2094, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2094, 31, 2095, 0),
woosh.Token(woosh.INDENT, '        ', 2095, 0, 2095, 8),
woosh.Token(woosh.NAME, 'pass', 2095, 8, 2095, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2095, 12, 2096, 0),
woosh.Token(woosh.DEDENT, '    ', 2097, 0, 2097, 4),
woosh.Token(woosh.OP, '@', 2097, 4, 2097, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2097, 5, 2097, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2097, 19, 2098, 0),
woosh.Token(woosh.NAME, 'def', 2098, 4, 2098, 7),
woosh.Token(woosh.NAME, 'write', 2098, 8, 2098, 13),
woosh.Token(woosh.OP, '(', 2098, 13, 2098, 14),
woosh.Token(woosh.NAME, 'self', 2098, 14, 2098, 18),
woosh.Token(woosh.OP, ',', 2098, 18, 2098, 19),
woosh.Token(woosh.NAME, 's', 2098, 20, 2098, 21),
woosh.Token(woosh.OP, ':', 2098, 21, 2098, 22),
woosh.Token(woosh.NAME, 'AnyStr', 2098, 23, 2098, 29),
woosh.Token(woosh.OP, ')', 2098, 29, 2098, 30),
woosh.Token(woosh.OP, '->', 2098, 31, 2098, 33),
woosh.Token(woosh.NAME, 'int', 2098, 34, 2098, 37),
woosh.Token(woosh.OP, ':', 2098, 37, 2098, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2098, 38, 2099, 0),
woosh.Token(woosh.INDENT, '        ', 2099, 0, 2099, 8),
woosh.Token(woosh.NAME, 'pass', 2099, 8, 2099, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2099, 12, 2100, 0),
woosh.Token(woosh.DEDENT, '    ', 2101, 0, 2101, 4),
woosh.Token(woosh.OP, '@', 2101, 4, 2101, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2101, 5, 2101, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2101, 19, 2102, 0),
woosh.Token(woosh.NAME, 'def', 2102, 4, 2102, 7),
woosh.Token(woosh.NAME, 'writelines', 2102, 8, 2102, 18),
woosh.Token(woosh.OP, '(', 2102, 18, 2102, 19),
woosh.Token(woosh.NAME, 'self', 2102, 19, 2102, 23),
woosh.Token(woosh.OP, ',', 2102, 23, 2102, 24),
woosh.Token(woosh.NAME, 'lines', 2102, 25, 2102, 30),
woosh.Token(woosh.OP, ':', 2102, 30, 2102, 31),
woosh.Token(woosh.NAME, 'List', 2102, 32, 2102, 36),
woosh.Token(woosh.OP, '[', 2102, 36, 2102, 37),
woosh.Token(woosh.NAME, 'AnyStr', 2102, 37, 2102, 43),
woosh.Token(woosh.OP, ']', 2102, 43, 2102, 44),
woosh.Token(woosh.OP, ')', 2102, 44, 2102, 45),
woosh.Token(woosh.OP, '->', 2102, 46, 2102, 48),
woosh.Token(woosh.NAME, 'None', 2102, 49, 2102, 53),
woosh.Token(woosh.OP, ':', 2102, 53, 2102, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 2102, 54, 2103, 0),
woosh.Token(woosh.INDENT, '        ', 2103, 0, 2103, 8),
woosh.Token(woosh.NAME, 'pass', 2103, 8, 2103, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2103, 12, 2104, 0),
woosh.Token(woosh.DEDENT, '    ', 2105, 0, 2105, 4),
woosh.Token(woosh.OP, '@', 2105, 4, 2105, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2105, 5, 2105, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2105, 19, 2106, 0),
woosh.Token(woosh.NAME, 'def', 2106, 4, 2106, 7),
woosh.Token(woosh.NAME, '__enter__', 2106, 8, 2106, 17),
woosh.Token(woosh.OP, '(', 2106, 17, 2106, 18),
woosh.Token(woosh.NAME, 'self', 2106, 18, 2106, 22),
woosh.Token(woosh.OP, ')', 2106, 22, 2106, 23),
woosh.Token(woosh.OP, '->', 2106, 24, 2106, 26),
woosh.Token(woosh.STRING, "'IO[AnyStr]'", 2106, 27, 2106, 39),
woosh.Token(woosh.OP, ':', 2106, 39, 2106, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2106, 40, 2107, 0),
woosh.Token(woosh.INDENT, '        ', 2107, 0, 2107, 8),
woosh.Token(woosh.NAME, 'pass', 2107, 8, 2107, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2107, 12, 2108, 0),
woosh.Token(woosh.DEDENT, '    ', 2109, 0, 2109, 4),
woosh.Token(woosh.OP, '@', 2109, 4, 2109, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2109, 5, 2109, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2109, 19, 2110, 0),
woosh.Token(woosh.NAME, 'def', 2110, 4, 2110, 7),
woosh.Token(woosh.NAME, '__exit__', 2110, 8, 2110, 16),
woosh.Token(woosh.OP, '(', 2110, 16, 2110, 17),
woosh.Token(woosh.NAME, 'self', 2110, 17, 2110, 21),
woosh.Token(woosh.OP, ',', 2110, 21, 2110, 22),
woosh.Token(woosh.NAME, 'type', 2110, 23, 2110, 27),
woosh.Token(woosh.OP, ',', 2110, 27, 2110, 28),
woosh.Token(woosh.NAME, 'value', 2110, 29, 2110, 34),
woosh.Token(woosh.OP, ',', 2110, 34, 2110, 35),
woosh.Token(woosh.NAME, 'traceback', 2110, 36, 2110, 45),
woosh.Token(woosh.OP, ')', 2110, 45, 2110, 46),
woosh.Token(woosh.OP, '->', 2110, 47, 2110, 49),
woosh.Token(woosh.NAME, 'None', 2110, 50, 2110, 54),
woosh.Token(woosh.OP, ':', 2110, 54, 2110, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 2110, 55, 2111, 0),
woosh.Token(woosh.INDENT, '        ', 2111, 0, 2111, 8),
woosh.Token(woosh.NAME, 'pass', 2111, 8, 2111, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2111, 12, 2112, 0),
woosh.Token(woosh.DEDENT, '', 2114, 0, 2114, 0),
woosh.Token(woosh.DEDENT, '', 2114, 0, 2114, 0),
woosh.Token(woosh.NAME, 'class', 2114, 0, 2114, 5),
woosh.Token(woosh.NAME, 'BinaryIO', 2114, 6, 2114, 14),
woosh.Token(woosh.OP, '(', 2114, 14, 2114, 15),
woosh.Token(woosh.NAME, 'IO', 2114, 15, 2114, 17),
woosh.Token(woosh.OP, '[', 2114, 17, 2114, 18),
woosh.Token(woosh.NAME, 'bytes', 2114, 18, 2114, 23),
woosh.Token(woosh.OP, ']', 2114, 23, 2114, 24),
woosh.Token(woosh.OP, ')', 2114, 24, 2114, 25),
woosh.Token(woosh.OP, ':', 2114, 25, 2114, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2114, 26, 2115, 0),
woosh.Token(woosh.INDENT, '    ', 2115, 0, 2115, 4),
woosh.Token(woosh.STRING, '"""Typed version of the return of open() in binary mode."""', 2115, 4, 2115, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 2115, 63, 2116, 0),
woosh.Token(woosh.NAME, '__slots__', 2117, 4, 2117, 13),
woosh.Token(woosh.OP, '=', 2117, 14, 2117, 15),
woosh.Token(woosh.OP, '(', 2117, 16, 2117, 17),
woosh.Token(woosh.OP, ')', 2117, 17, 2117, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2117, 18, 2118, 0),
woosh.Token(woosh.OP, '@', 2119, 4, 2119, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2119, 5, 2119, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2119, 19, 2120, 0),
woosh.Token(woosh.NAME, 'def', 2120, 4, 2120, 7),
woosh.Token(woosh.NAME, 'write', 2120, 8, 2120, 13),
woosh.Token(woosh.OP, '(', 2120, 13, 2120, 14),
woosh.Token(woosh.NAME, 'self', 2120, 14, 2120, 18),
woosh.Token(woosh.OP, ',', 2120, 18, 2120, 19),
woosh.Token(woosh.NAME, 's', 2120, 20, 2120, 21),
woosh.Token(woosh.OP, ':', 2120, 21, 2120, 22),
woosh.Token(woosh.NAME, 'Union', 2120, 23, 2120, 28),
woosh.Token(woosh.OP, '[', 2120, 28, 2120, 29),
woosh.Token(woosh.NAME, 'bytes', 2120, 29, 2120, 34),
woosh.Token(woosh.OP, ',', 2120, 34, 2120, 35),
woosh.Token(woosh.NAME, 'bytearray', 2120, 36, 2120, 45),
woosh.Token(woosh.OP, ']', 2120, 45, 2120, 46),
woosh.Token(woosh.OP, ')', 2120, 46, 2120, 47),
woosh.Token(woosh.OP, '->', 2120, 48, 2120, 50),
woosh.Token(woosh.NAME, 'int', 2120, 51, 2120, 54),
woosh.Token(woosh.OP, ':', 2120, 54, 2120, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 2120, 55, 2121, 0),
woosh.Token(woosh.INDENT, '        ', 2121, 0, 2121, 8),
woosh.Token(woosh.NAME, 'pass', 2121, 8, 2121, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2121, 12, 2122, 0),
woosh.Token(woosh.DEDENT, '    ', 2123, 0, 2123, 4),
woosh.Token(woosh.OP, '@', 2123, 4, 2123, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2123, 5, 2123, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2123, 19, 2124, 0),
woosh.Token(woosh.NAME, 'def', 2124, 4, 2124, 7),
woosh.Token(woosh.NAME, '__enter__', 2124, 8, 2124, 17),
woosh.Token(woosh.OP, '(', 2124, 17, 2124, 18),
woosh.Token(woosh.NAME, 'self', 2124, 18, 2124, 22),
woosh.Token(woosh.OP, ')', 2124, 22, 2124, 23),
woosh.Token(woosh.OP, '->', 2124, 24, 2124, 26),
woosh.Token(woosh.STRING, "'BinaryIO'", 2124, 27, 2124, 37),
woosh.Token(woosh.OP, ':', 2124, 37, 2124, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2124, 38, 2125, 0),
woosh.Token(woosh.INDENT, '        ', 2125, 0, 2125, 8),
woosh.Token(woosh.NAME, 'pass', 2125, 8, 2125, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2125, 12, 2126, 0),
woosh.Token(woosh.DEDENT, '', 2128, 0, 2128, 0),
woosh.Token(woosh.DEDENT, '', 2128, 0, 2128, 0),
woosh.Token(woosh.NAME, 'class', 2128, 0, 2128, 5),
woosh.Token(woosh.NAME, 'TextIO', 2128, 6, 2128, 12),
woosh.Token(woosh.OP, '(', 2128, 12, 2128, 13),
woosh.Token(woosh.NAME, 'IO', 2128, 13, 2128, 15),
woosh.Token(woosh.OP, '[', 2128, 15, 2128, 16),
woosh.Token(woosh.NAME, 'str', 2128, 16, 2128, 19),
woosh.Token(woosh.OP, ']', 2128, 19, 2128, 20),
woosh.Token(woosh.OP, ')', 2128, 20, 2128, 21),
woosh.Token(woosh.OP, ':', 2128, 21, 2128, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2128, 22, 2129, 0),
woosh.Token(woosh.INDENT, '    ', 2129, 0, 2129, 4),
woosh.Token(woosh.STRING, '"""Typed version of the return of open() in text mode."""', 2129, 4, 2129, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 2129, 61, 2130, 0),
woosh.Token(woosh.NAME, '__slots__', 2131, 4, 2131, 13),
woosh.Token(woosh.OP, '=', 2131, 14, 2131, 15),
woosh.Token(woosh.OP, '(', 2131, 16, 2131, 17),
woosh.Token(woosh.OP, ')', 2131, 17, 2131, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2131, 18, 2132, 0),
woosh.Token(woosh.OP, '@', 2133, 4, 2133, 5),
woosh.Token(woosh.NAME, 'property', 2133, 5, 2133, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2133, 13, 2134, 0),
woosh.Token(woosh.OP, '@', 2134, 4, 2134, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2134, 5, 2134, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2134, 19, 2135, 0),
woosh.Token(woosh.NAME, 'def', 2135, 4, 2135, 7),
woosh.Token(woosh.NAME, 'buffer', 2135, 8, 2135, 14),
woosh.Token(woosh.OP, '(', 2135, 14, 2135, 15),
woosh.Token(woosh.NAME, 'self', 2135, 15, 2135, 19),
woosh.Token(woosh.OP, ')', 2135, 19, 2135, 20),
woosh.Token(woosh.OP, '->', 2135, 21, 2135, 23),
woosh.Token(woosh.NAME, 'BinaryIO', 2135, 24, 2135, 32),
woosh.Token(woosh.OP, ':', 2135, 32, 2135, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 2135, 33, 2136, 0),
woosh.Token(woosh.INDENT, '        ', 2136, 0, 2136, 8),
woosh.Token(woosh.NAME, 'pass', 2136, 8, 2136, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2136, 12, 2137, 0),
woosh.Token(woosh.DEDENT, '    ', 2138, 0, 2138, 4),
woosh.Token(woosh.OP, '@', 2138, 4, 2138, 5),
woosh.Token(woosh.NAME, 'property', 2138, 5, 2138, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2138, 13, 2139, 0),
woosh.Token(woosh.OP, '@', 2139, 4, 2139, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2139, 5, 2139, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2139, 19, 2140, 0),
woosh.Token(woosh.NAME, 'def', 2140, 4, 2140, 7),
woosh.Token(woosh.NAME, 'encoding', 2140, 8, 2140, 16),
woosh.Token(woosh.OP, '(', 2140, 16, 2140, 17),
woosh.Token(woosh.NAME, 'self', 2140, 17, 2140, 21),
woosh.Token(woosh.OP, ')', 2140, 21, 2140, 22),
woosh.Token(woosh.OP, '->', 2140, 23, 2140, 25),
woosh.Token(woosh.NAME, 'str', 2140, 26, 2140, 29),
woosh.Token(woosh.OP, ':', 2140, 29, 2140, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2140, 30, 2141, 0),
woosh.Token(woosh.INDENT, '        ', 2141, 0, 2141, 8),
woosh.Token(woosh.NAME, 'pass', 2141, 8, 2141, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2141, 12, 2142, 0),
woosh.Token(woosh.DEDENT, '    ', 2143, 0, 2143, 4),
woosh.Token(woosh.OP, '@', 2143, 4, 2143, 5),
woosh.Token(woosh.NAME, 'property', 2143, 5, 2143, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2143, 13, 2144, 0),
woosh.Token(woosh.OP, '@', 2144, 4, 2144, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2144, 5, 2144, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2144, 19, 2145, 0),
woosh.Token(woosh.NAME, 'def', 2145, 4, 2145, 7),
woosh.Token(woosh.NAME, 'errors', 2145, 8, 2145, 14),
woosh.Token(woosh.OP, '(', 2145, 14, 2145, 15),
woosh.Token(woosh.NAME, 'self', 2145, 15, 2145, 19),
woosh.Token(woosh.OP, ')', 2145, 19, 2145, 20),
woosh.Token(woosh.OP, '->', 2145, 21, 2145, 23),
woosh.Token(woosh.NAME, 'Optional', 2145, 24, 2145, 32),
woosh.Token(woosh.OP, '[', 2145, 32, 2145, 33),
woosh.Token(woosh.NAME, 'str', 2145, 33, 2145, 36),
woosh.Token(woosh.OP, ']', 2145, 36, 2145, 37),
woosh.Token(woosh.OP, ':', 2145, 37, 2145, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2145, 38, 2146, 0),
woosh.Token(woosh.INDENT, '        ', 2146, 0, 2146, 8),
woosh.Token(woosh.NAME, 'pass', 2146, 8, 2146, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2146, 12, 2147, 0),
woosh.Token(woosh.DEDENT, '    ', 2148, 0, 2148, 4),
woosh.Token(woosh.OP, '@', 2148, 4, 2148, 5),
woosh.Token(woosh.NAME, 'property', 2148, 5, 2148, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2148, 13, 2149, 0),
woosh.Token(woosh.OP, '@', 2149, 4, 2149, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2149, 5, 2149, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2149, 19, 2150, 0),
woosh.Token(woosh.NAME, 'def', 2150, 4, 2150, 7),
woosh.Token(woosh.NAME, 'line_buffering', 2150, 8, 2150, 22),
woosh.Token(woosh.OP, '(', 2150, 22, 2150, 23),
woosh.Token(woosh.NAME, 'self', 2150, 23, 2150, 27),
woosh.Token(woosh.OP, ')', 2150, 27, 2150, 28),
woosh.Token(woosh.OP, '->', 2150, 29, 2150, 31),
woosh.Token(woosh.NAME, 'bool', 2150, 32, 2150, 36),
woosh.Token(woosh.OP, ':', 2150, 36, 2150, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 2150, 37, 2151, 0),
woosh.Token(woosh.INDENT, '        ', 2151, 0, 2151, 8),
woosh.Token(woosh.NAME, 'pass', 2151, 8, 2151, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2151, 12, 2152, 0),
woosh.Token(woosh.DEDENT, '    ', 2153, 0, 2153, 4),
woosh.Token(woosh.OP, '@', 2153, 4, 2153, 5),
woosh.Token(woosh.NAME, 'property', 2153, 5, 2153, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2153, 13, 2154, 0),
woosh.Token(woosh.OP, '@', 2154, 4, 2154, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2154, 5, 2154, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2154, 19, 2155, 0),
woosh.Token(woosh.NAME, 'def', 2155, 4, 2155, 7),
woosh.Token(woosh.NAME, 'newlines', 2155, 8, 2155, 16),
woosh.Token(woosh.OP, '(', 2155, 16, 2155, 17),
woosh.Token(woosh.NAME, 'self', 2155, 17, 2155, 21),
woosh.Token(woosh.OP, ')', 2155, 21, 2155, 22),
woosh.Token(woosh.OP, '->', 2155, 23, 2155, 25),
woosh.Token(woosh.NAME, 'Any', 2155, 26, 2155, 29),
woosh.Token(woosh.OP, ':', 2155, 29, 2155, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2155, 30, 2156, 0),
woosh.Token(woosh.INDENT, '        ', 2156, 0, 2156, 8),
woosh.Token(woosh.NAME, 'pass', 2156, 8, 2156, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2156, 12, 2157, 0),
woosh.Token(woosh.DEDENT, '    ', 2158, 0, 2158, 4),
woosh.Token(woosh.OP, '@', 2158, 4, 2158, 5),
woosh.Token(woosh.NAME, 'abstractmethod', 2158, 5, 2158, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2158, 19, 2159, 0),
woosh.Token(woosh.NAME, 'def', 2159, 4, 2159, 7),
woosh.Token(woosh.NAME, '__enter__', 2159, 8, 2159, 17),
woosh.Token(woosh.OP, '(', 2159, 17, 2159, 18),
woosh.Token(woosh.NAME, 'self', 2159, 18, 2159, 22),
woosh.Token(woosh.OP, ')', 2159, 22, 2159, 23),
woosh.Token(woosh.OP, '->', 2159, 24, 2159, 26),
woosh.Token(woosh.STRING, "'TextIO'", 2159, 27, 2159, 35),
woosh.Token(woosh.OP, ':', 2159, 35, 2159, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2159, 36, 2160, 0),
woosh.Token(woosh.INDENT, '        ', 2160, 0, 2160, 8),
woosh.Token(woosh.NAME, 'pass', 2160, 8, 2160, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2160, 12, 2161, 0),
woosh.Token(woosh.DEDENT, '', 2163, 0, 2163, 0),
woosh.Token(woosh.DEDENT, '', 2163, 0, 2163, 0),
woosh.Token(woosh.NAME, 'class', 2163, 0, 2163, 5),
woosh.Token(woosh.NAME, 'io', 2163, 6, 2163, 8),
woosh.Token(woosh.OP, ':', 2163, 8, 2163, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2163, 9, 2164, 0),
woosh.Token(woosh.INDENT, '    ', 2164, 0, 2164, 4),
woosh.Token(woosh.STRING, '"""Wrapper namespace for IO generic classes."""', 2164, 4, 2164, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 2164, 51, 2165, 0),
woosh.Token(woosh.NAME, '__all__', 2166, 4, 2166, 11),
woosh.Token(woosh.OP, '=', 2166, 12, 2166, 13),
woosh.Token(woosh.OP, '[', 2166, 14, 2166, 15),
woosh.Token(woosh.STRING, "'IO'", 2166, 15, 2166, 19),
woosh.Token(woosh.OP, ',', 2166, 19, 2166, 20),
woosh.Token(woosh.STRING, "'TextIO'", 2166, 21, 2166, 29),
woosh.Token(woosh.OP, ',', 2166, 29, 2166, 30),
woosh.Token(woosh.STRING, "'BinaryIO'", 2166, 31, 2166, 41),
woosh.Token(woosh.OP, ']', 2166, 41, 2166, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2166, 42, 2167, 0),
woosh.Token(woosh.NAME, 'IO', 2167, 4, 2167, 6),
woosh.Token(woosh.OP, '=', 2167, 7, 2167, 8),
woosh.Token(woosh.NAME, 'IO', 2167, 9, 2167, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 2167, 11, 2168, 0),
woosh.Token(woosh.NAME, 'TextIO', 2168, 4, 2168, 10),
woosh.Token(woosh.OP, '=', 2168, 11, 2168, 12),
woosh.Token(woosh.NAME, 'TextIO', 2168, 13, 2168, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2168, 19, 2169, 0),
woosh.Token(woosh.NAME, 'BinaryIO', 2169, 4, 2169, 12),
woosh.Token(woosh.OP, '=', 2169, 13, 2169, 14),
woosh.Token(woosh.NAME, 'BinaryIO', 2169, 15, 2169, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2169, 23, 2170, 0),
woosh.Token(woosh.DEDENT, '', 2172, 0, 2172, 0),
woosh.Token(woosh.NAME, 'io', 2172, 0, 2172, 2),
woosh.Token(woosh.OP, '.', 2172, 2, 2172, 3),
woosh.Token(woosh.NAME, '__name__', 2172, 3, 2172, 11),
woosh.Token(woosh.OP, '=', 2172, 12, 2172, 13),
woosh.Token(woosh.NAME, '__name__', 2172, 14, 2172, 22),
woosh.Token(woosh.OP, '+', 2172, 23, 2172, 24),
woosh.Token(woosh.STRING, "'.io'", 2172, 25, 2172, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2172, 30, 2173, 0),
woosh.Token(woosh.NAME, 'sys', 2173, 0, 2173, 3),
woosh.Token(woosh.OP, '.', 2173, 3, 2173, 4),
woosh.Token(woosh.NAME, 'modules', 2173, 4, 2173, 11),
woosh.Token(woosh.OP, '[', 2173, 11, 2173, 12),
woosh.Token(woosh.NAME, 'io', 2173, 12, 2173, 14),
woosh.Token(woosh.OP, '.', 2173, 14, 2173, 15),
woosh.Token(woosh.NAME, '__name__', 2173, 15, 2173, 23),
woosh.Token(woosh.OP, ']', 2173, 23, 2173, 24),
woosh.Token(woosh.OP, '=', 2173, 25, 2173, 26),
woosh.Token(woosh.NAME, 'io', 2173, 27, 2173, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2173, 29, 2174, 0),
woosh.Token(woosh.NAME, 'Pattern', 2175, 0, 2175, 7),
woosh.Token(woosh.OP, '=', 2175, 8, 2175, 9),
woosh.Token(woosh.NAME, '_alias', 2175, 10, 2175, 16),
woosh.Token(woosh.OP, '(', 2175, 16, 2175, 17),
woosh.Token(woosh.NAME, 'stdlib_re', 2175, 17, 2175, 26),
woosh.Token(woosh.OP, '.', 2175, 26, 2175, 27),
woosh.Token(woosh.NAME, 'Pattern', 2175, 27, 2175, 34),
woosh.Token(woosh.OP, ',', 2175, 34, 2175, 35),
woosh.Token(woosh.NUMBER, '1', 2175, 36, 2175, 37),
woosh.Token(woosh.OP, ')', 2175, 37, 2175, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2175, 38, 2176, 0),
woosh.Token(woosh.NAME, 'Match', 2176, 0, 2176, 5),
woosh.Token(woosh.OP, '=', 2176, 6, 2176, 7),
woosh.Token(woosh.NAME, '_alias', 2176, 8, 2176, 14),
woosh.Token(woosh.OP, '(', 2176, 14, 2176, 15),
woosh.Token(woosh.NAME, 'stdlib_re', 2176, 15, 2176, 24),
woosh.Token(woosh.OP, '.', 2176, 24, 2176, 25),
woosh.Token(woosh.NAME, 'Match', 2176, 25, 2176, 30),
woosh.Token(woosh.OP, ',', 2176, 30, 2176, 31),
woosh.Token(woosh.NUMBER, '1', 2176, 32, 2176, 33),
woosh.Token(woosh.OP, ')', 2176, 33, 2176, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2176, 34, 2177, 0),
woosh.Token(woosh.NAME, 'class', 2178, 0, 2178, 5),
woosh.Token(woosh.NAME, 're', 2178, 6, 2178, 8),
woosh.Token(woosh.OP, ':', 2178, 8, 2178, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2178, 9, 2179, 0),
woosh.Token(woosh.INDENT, '    ', 2179, 0, 2179, 4),
woosh.Token(woosh.STRING, '"""Wrapper namespace for re type aliases."""', 2179, 4, 2179, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 2179, 48, 2180, 0),
woosh.Token(woosh.NAME, '__all__', 2181, 4, 2181, 11),
woosh.Token(woosh.OP, '=', 2181, 12, 2181, 13),
woosh.Token(woosh.OP, '[', 2181, 14, 2181, 15),
woosh.Token(woosh.STRING, "'Pattern'", 2181, 15, 2181, 24),
woosh.Token(woosh.OP, ',', 2181, 24, 2181, 25),
woosh.Token(woosh.STRING, "'Match'", 2181, 26, 2181, 33),
woosh.Token(woosh.OP, ']', 2181, 33, 2181, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2181, 34, 2182, 0),
woosh.Token(woosh.NAME, 'Pattern', 2182, 4, 2182, 11),
woosh.Token(woosh.OP, '=', 2182, 12, 2182, 13),
woosh.Token(woosh.NAME, 'Pattern', 2182, 14, 2182, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2182, 21, 2183, 0),
woosh.Token(woosh.NAME, 'Match', 2183, 4, 2183, 9),
woosh.Token(woosh.OP, '=', 2183, 10, 2183, 11),
woosh.Token(woosh.NAME, 'Match', 2183, 12, 2183, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2183, 17, 2184, 0),
woosh.Token(woosh.DEDENT, '', 2186, 0, 2186, 0),
woosh.Token(woosh.NAME, 're', 2186, 0, 2186, 2),
woosh.Token(woosh.OP, '.', 2186, 2, 2186, 3),
woosh.Token(woosh.NAME, '__name__', 2186, 3, 2186, 11),
woosh.Token(woosh.OP, '=', 2186, 12, 2186, 13),
woosh.Token(woosh.NAME, '__name__', 2186, 14, 2186, 22),
woosh.Token(woosh.OP, '+', 2186, 23, 2186, 24),
woosh.Token(woosh.STRING, "'.re'", 2186, 25, 2186, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2186, 30, 2187, 0),
woosh.Token(woosh.NAME, 'sys', 2187, 0, 2187, 3),
woosh.Token(woosh.OP, '.', 2187, 3, 2187, 4),
woosh.Token(woosh.NAME, 'modules', 2187, 4, 2187, 11),
woosh.Token(woosh.OP, '[', 2187, 11, 2187, 12),
woosh.Token(woosh.NAME, 're', 2187, 12, 2187, 14),
woosh.Token(woosh.OP, '.', 2187, 14, 2187, 15),
woosh.Token(woosh.NAME, '__name__', 2187, 15, 2187, 23),
woosh.Token(woosh.OP, ']', 2187, 23, 2187, 24),
woosh.Token(woosh.OP, '=', 2187, 25, 2187, 26),
woosh.Token(woosh.NAME, 're', 2187, 27, 2187, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2187, 29, 2188, 0),
woosh.Token(woosh.EOF, '', 2188, 0, 2188, 0),
]
