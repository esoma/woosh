
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'
def test():
    with open(SAMPLE_DIR / 'stdlib/getpass.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""Utilities to get a password and/or the current user name.\r\n\r\ngetpass(prompt[, stream]) - Prompt for a password, with echo turned off.\r\ngetuser() - Get the user name from the environment or password database.\r\n\r\nGetPassWarning - This UserWarning is issued when getpass() cannot prevent\r\n                 echoing of the password contents while reading.\r\n\r\nOn Windows, the msvcrt module will be used.\r\n\r\n"""', 1, 0, 11, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 11, 3, 12, 0),
woosh.Token(woosh.COMMENT, '# Authors: Piers Lauder (original)', 13, 0, 13, 34),
woosh.Token(woosh.COMMENT, '#          Guido van Rossum (Windows support and cleanup)', 14, 0, 14, 57),
woosh.Token(woosh.COMMENT, '#          Gregory P. Smith (tty support & GetPassWarning)', 15, 0, 15, 58),
woosh.Token(woosh.NAME, 'import', 17, 0, 17, 6),
woosh.Token(woosh.NAME, 'contextlib', 17, 7, 17, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 17, 17, 18, 0),
woosh.Token(woosh.NAME, 'import', 18, 0, 18, 6),
woosh.Token(woosh.NAME, 'io', 18, 7, 18, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 18, 9, 19, 0),
woosh.Token(woosh.NAME, 'import', 19, 0, 19, 6),
woosh.Token(woosh.NAME, 'os', 19, 7, 19, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 19, 9, 20, 0),
woosh.Token(woosh.NAME, 'import', 20, 0, 20, 6),
woosh.Token(woosh.NAME, 'sys', 20, 7, 20, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 20, 10, 21, 0),
woosh.Token(woosh.NAME, 'import', 21, 0, 21, 6),
woosh.Token(woosh.NAME, 'warnings', 21, 7, 21, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 15, 22, 0),
woosh.Token(woosh.NAME, '__all__', 23, 0, 23, 7),
woosh.Token(woosh.OP, '=', 23, 8, 23, 9),
woosh.Token(woosh.OP, '[', 23, 10, 23, 11),
woosh.Token(woosh.STRING, '"getpass"', 23, 11, 23, 20),
woosh.Token(woosh.OP, ',', 23, 20, 23, 21),
woosh.Token(woosh.STRING, '"getuser"', 23, 21, 23, 30),
woosh.Token(woosh.OP, ',', 23, 30, 23, 31),
woosh.Token(woosh.STRING, '"GetPassWarning"', 23, 31, 23, 47),
woosh.Token(woosh.OP, ']', 23, 47, 23, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 23, 48, 24, 0),
woosh.Token(woosh.NAME, 'class', 26, 0, 26, 5),
woosh.Token(woosh.NAME, 'GetPassWarning', 26, 6, 26, 20),
woosh.Token(woosh.OP, '(', 26, 20, 26, 21),
woosh.Token(woosh.NAME, 'UserWarning', 26, 21, 26, 32),
woosh.Token(woosh.OP, ')', 26, 32, 26, 33),
woosh.Token(woosh.OP, ':', 26, 33, 26, 34),
woosh.Token(woosh.NAME, 'pass', 26, 35, 26, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 26, 39, 27, 0),
woosh.Token(woosh.NAME, 'def', 29, 0, 29, 3),
woosh.Token(woosh.NAME, 'unix_getpass', 29, 4, 29, 16),
woosh.Token(woosh.OP, '(', 29, 16, 29, 17),
woosh.Token(woosh.NAME, 'prompt', 29, 17, 29, 23),
woosh.Token(woosh.OP, '=', 29, 23, 29, 24),
woosh.Token(woosh.STRING, "'Password: '", 29, 24, 29, 36),
woosh.Token(woosh.OP, ',', 29, 36, 29, 37),
woosh.Token(woosh.NAME, 'stream', 29, 38, 29, 44),
woosh.Token(woosh.OP, '=', 29, 44, 29, 45),
woosh.Token(woosh.NAME, 'None', 29, 45, 29, 49),
woosh.Token(woosh.OP, ')', 29, 49, 29, 50),
woosh.Token(woosh.OP, ':', 29, 50, 29, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 51, 30, 0),
woosh.Token(woosh.INDENT, '    ', 30, 0, 30, 4),
woosh.Token(woosh.STRING, '"""Prompt for a password, with echo turned off.\r\n\r\n    Args:\r\n      prompt: Written on stream to ask for the input.  Default: \'Password: \'\r\n      stream: A writable file object to display the prompt.  Defaults to\r\n              the tty.  If no tty is available defaults to sys.stderr.\r\n    Returns:\r\n      The seKr3t input.\r\n    Raises:\r\n      EOFError: If our input tty or stdin was closed.\r\n      GetPassWarning: When we were unable to turn echo off on the input.\r\n\r\n    Always restores terminal settings before returning.\r\n    """', 30, 4, 43, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 43, 7, 44, 0),
woosh.Token(woosh.NAME, 'passwd', 44, 4, 44, 10),
woosh.Token(woosh.OP, '=', 44, 11, 44, 12),
woosh.Token(woosh.NAME, 'None', 44, 13, 44, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 44, 17, 45, 0),
woosh.Token(woosh.NAME, 'with', 45, 4, 45, 8),
woosh.Token(woosh.NAME, 'contextlib', 45, 9, 45, 19),
woosh.Token(woosh.OP, '.', 45, 19, 45, 20),
woosh.Token(woosh.NAME, 'ExitStack', 45, 20, 45, 29),
woosh.Token(woosh.OP, '(', 45, 29, 45, 30),
woosh.Token(woosh.OP, ')', 45, 30, 45, 31),
woosh.Token(woosh.NAME, 'as', 45, 32, 45, 34),
woosh.Token(woosh.NAME, 'stack', 45, 35, 45, 40),
woosh.Token(woosh.OP, ':', 45, 40, 45, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 45, 41, 46, 0),
woosh.Token(woosh.INDENT, '        ', 46, 0, 46, 8),
woosh.Token(woosh.NAME, 'try', 46, 8, 46, 11),
woosh.Token(woosh.OP, ':', 46, 11, 46, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 12, 47, 0),
woosh.Token(woosh.COMMENT, '# Always try reading and writing directly on the tty first.', 47, 12, 47, 71),
woosh.Token(woosh.INDENT, '            ', 48, 0, 48, 12),
woosh.Token(woosh.NAME, 'fd', 48, 12, 48, 14),
woosh.Token(woosh.OP, '=', 48, 15, 48, 16),
woosh.Token(woosh.NAME, 'os', 48, 17, 48, 19),
woosh.Token(woosh.OP, '.', 48, 19, 48, 20),
woosh.Token(woosh.NAME, 'open', 48, 20, 48, 24),
woosh.Token(woosh.OP, '(', 48, 24, 48, 25),
woosh.Token(woosh.STRING, "'/dev/tty'", 48, 25, 48, 35),
woosh.Token(woosh.OP, ',', 48, 35, 48, 36),
woosh.Token(woosh.NAME, 'os', 48, 37, 48, 39),
woosh.Token(woosh.OP, '.', 48, 39, 48, 40),
woosh.Token(woosh.NAME, 'O_RDWR', 48, 40, 48, 46),
woosh.Token(woosh.OP, '|', 48, 46, 48, 47),
woosh.Token(woosh.NAME, 'os', 48, 47, 48, 49),
woosh.Token(woosh.OP, '.', 48, 49, 48, 50),
woosh.Token(woosh.NAME, 'O_NOCTTY', 48, 50, 48, 58),
woosh.Token(woosh.OP, ')', 48, 58, 48, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 48, 59, 49, 0),
woosh.Token(woosh.NAME, 'tty', 49, 12, 49, 15),
woosh.Token(woosh.OP, '=', 49, 16, 49, 17),
woosh.Token(woosh.NAME, 'io', 49, 18, 49, 20),
woosh.Token(woosh.OP, '.', 49, 20, 49, 21),
woosh.Token(woosh.NAME, 'FileIO', 49, 21, 49, 27),
woosh.Token(woosh.OP, '(', 49, 27, 49, 28),
woosh.Token(woosh.NAME, 'fd', 49, 28, 49, 30),
woosh.Token(woosh.OP, ',', 49, 30, 49, 31),
woosh.Token(woosh.STRING, "'w+'", 49, 32, 49, 36),
woosh.Token(woosh.OP, ')', 49, 36, 49, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 49, 37, 50, 0),
woosh.Token(woosh.NAME, 'stack', 50, 12, 50, 17),
woosh.Token(woosh.OP, '.', 50, 17, 50, 18),
woosh.Token(woosh.NAME, 'enter_context', 50, 18, 50, 31),
woosh.Token(woosh.OP, '(', 50, 31, 50, 32),
woosh.Token(woosh.NAME, 'tty', 50, 32, 50, 35),
woosh.Token(woosh.OP, ')', 50, 35, 50, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 50, 36, 51, 0),
woosh.Token(woosh.NAME, 'input', 51, 12, 51, 17),
woosh.Token(woosh.OP, '=', 51, 18, 51, 19),
woosh.Token(woosh.NAME, 'io', 51, 20, 51, 22),
woosh.Token(woosh.OP, '.', 51, 22, 51, 23),
woosh.Token(woosh.NAME, 'TextIOWrapper', 51, 23, 51, 36),
woosh.Token(woosh.OP, '(', 51, 36, 51, 37),
woosh.Token(woosh.NAME, 'tty', 51, 37, 51, 40),
woosh.Token(woosh.OP, ')', 51, 40, 51, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 51, 41, 52, 0),
woosh.Token(woosh.NAME, 'stack', 52, 12, 52, 17),
woosh.Token(woosh.OP, '.', 52, 17, 52, 18),
woosh.Token(woosh.NAME, 'enter_context', 52, 18, 52, 31),
woosh.Token(woosh.OP, '(', 52, 31, 52, 32),
woosh.Token(woosh.NAME, 'input', 52, 32, 52, 37),
woosh.Token(woosh.OP, ')', 52, 37, 52, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 38, 53, 0),
woosh.Token(woosh.NAME, 'if', 53, 12, 53, 14),
woosh.Token(woosh.NAME, 'not', 53, 15, 53, 18),
woosh.Token(woosh.NAME, 'stream', 53, 19, 53, 25),
woosh.Token(woosh.OP, ':', 53, 25, 53, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 26, 54, 0),
woosh.Token(woosh.INDENT, '                ', 54, 0, 54, 16),
woosh.Token(woosh.NAME, 'stream', 54, 16, 54, 22),
woosh.Token(woosh.OP, '=', 54, 23, 54, 24),
woosh.Token(woosh.NAME, 'input', 54, 25, 54, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 30, 55, 0),
woosh.Token(woosh.DEDENT, '        ', 55, 0, 55, 8),
woosh.Token(woosh.DEDENT, '', 55, 8, 55, 8),
woosh.Token(woosh.NAME, 'except', 55, 8, 55, 14),
woosh.Token(woosh.NAME, 'OSError', 55, 15, 55, 22),
woosh.Token(woosh.OP, ':', 55, 22, 55, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 23, 56, 0),
woosh.Token(woosh.COMMENT, '# If that fails, see if stdin can be controlled.', 56, 12, 56, 60),
woosh.Token(woosh.INDENT, '            ', 57, 0, 57, 12),
woosh.Token(woosh.NAME, 'stack', 57, 12, 57, 17),
woosh.Token(woosh.OP, '.', 57, 17, 57, 18),
woosh.Token(woosh.NAME, 'close', 57, 18, 57, 23),
woosh.Token(woosh.OP, '(', 57, 23, 57, 24),
woosh.Token(woosh.OP, ')', 57, 24, 57, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 25, 58, 0),
woosh.Token(woosh.NAME, 'try', 58, 12, 58, 15),
woosh.Token(woosh.OP, ':', 58, 15, 58, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 16, 59, 0),
woosh.Token(woosh.INDENT, '                ', 59, 0, 59, 16),
woosh.Token(woosh.NAME, 'fd', 59, 16, 59, 18),
woosh.Token(woosh.OP, '=', 59, 19, 59, 20),
woosh.Token(woosh.NAME, 'sys', 59, 21, 59, 24),
woosh.Token(woosh.OP, '.', 59, 24, 59, 25),
woosh.Token(woosh.NAME, 'stdin', 59, 25, 59, 30),
woosh.Token(woosh.OP, '.', 59, 30, 59, 31),
woosh.Token(woosh.NAME, 'fileno', 59, 31, 59, 37),
woosh.Token(woosh.OP, '(', 59, 37, 59, 38),
woosh.Token(woosh.OP, ')', 59, 38, 59, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 39, 60, 0),
woosh.Token(woosh.DEDENT, '            ', 60, 0, 60, 12),
woosh.Token(woosh.NAME, 'except', 60, 12, 60, 18),
woosh.Token(woosh.OP, '(', 60, 19, 60, 20),
woosh.Token(woosh.NAME, 'AttributeError', 60, 20, 60, 34),
woosh.Token(woosh.OP, ',', 60, 34, 60, 35),
woosh.Token(woosh.NAME, 'ValueError', 60, 36, 60, 46),
woosh.Token(woosh.OP, ')', 60, 46, 60, 47),
woosh.Token(woosh.OP, ':', 60, 47, 60, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 48, 61, 0),
woosh.Token(woosh.INDENT, '                ', 61, 0, 61, 16),
woosh.Token(woosh.NAME, 'fd', 61, 16, 61, 18),
woosh.Token(woosh.OP, '=', 61, 19, 61, 20),
woosh.Token(woosh.NAME, 'None', 61, 21, 61, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 25, 62, 0),
woosh.Token(woosh.NAME, 'passwd', 62, 16, 62, 22),
woosh.Token(woosh.OP, '=', 62, 23, 62, 24),
woosh.Token(woosh.NAME, 'fallback_getpass', 62, 25, 62, 41),
woosh.Token(woosh.OP, '(', 62, 41, 62, 42),
woosh.Token(woosh.NAME, 'prompt', 62, 42, 62, 48),
woosh.Token(woosh.OP, ',', 62, 48, 62, 49),
woosh.Token(woosh.NAME, 'stream', 62, 50, 62, 56),
woosh.Token(woosh.OP, ')', 62, 56, 62, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 62, 57, 63, 0),
woosh.Token(woosh.DEDENT, '            ', 63, 0, 63, 12),
woosh.Token(woosh.NAME, 'input', 63, 12, 63, 17),
woosh.Token(woosh.OP, '=', 63, 18, 63, 19),
woosh.Token(woosh.NAME, 'sys', 63, 20, 63, 23),
woosh.Token(woosh.OP, '.', 63, 23, 63, 24),
woosh.Token(woosh.NAME, 'stdin', 63, 24, 63, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 63, 29, 64, 0),
woosh.Token(woosh.NAME, 'if', 64, 12, 64, 14),
woosh.Token(woosh.NAME, 'not', 64, 15, 64, 18),
woosh.Token(woosh.NAME, 'stream', 64, 19, 64, 25),
woosh.Token(woosh.OP, ':', 64, 25, 64, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 64, 26, 65, 0),
woosh.Token(woosh.INDENT, '                ', 65, 0, 65, 16),
woosh.Token(woosh.NAME, 'stream', 65, 16, 65, 22),
woosh.Token(woosh.OP, '=', 65, 23, 65, 24),
woosh.Token(woosh.NAME, 'sys', 65, 25, 65, 28),
woosh.Token(woosh.OP, '.', 65, 28, 65, 29),
woosh.Token(woosh.NAME, 'stderr', 65, 29, 65, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 65, 35, 66, 0),
woosh.Token(woosh.DEDENT, '        ', 67, 0, 67, 8),
woosh.Token(woosh.DEDENT, '', 67, 8, 67, 8),
woosh.Token(woosh.NAME, 'if', 67, 8, 67, 10),
woosh.Token(woosh.NAME, 'fd', 67, 11, 67, 13),
woosh.Token(woosh.NAME, 'is', 67, 14, 67, 16),
woosh.Token(woosh.NAME, 'not', 67, 17, 67, 20),
woosh.Token(woosh.NAME, 'None', 67, 21, 67, 25),
woosh.Token(woosh.OP, ':', 67, 25, 67, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 67, 26, 68, 0),
woosh.Token(woosh.INDENT, '            ', 68, 0, 68, 12),
woosh.Token(woosh.NAME, 'try', 68, 12, 68, 15),
woosh.Token(woosh.OP, ':', 68, 15, 68, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 68, 16, 69, 0),
woosh.Token(woosh.INDENT, '                ', 69, 0, 69, 16),
woosh.Token(woosh.NAME, 'old', 69, 16, 69, 19),
woosh.Token(woosh.OP, '=', 69, 20, 69, 21),
woosh.Token(woosh.NAME, 'termios', 69, 22, 69, 29),
woosh.Token(woosh.OP, '.', 69, 29, 69, 30),
woosh.Token(woosh.NAME, 'tcgetattr', 69, 30, 69, 39),
woosh.Token(woosh.OP, '(', 69, 39, 69, 40),
woosh.Token(woosh.NAME, 'fd', 69, 40, 69, 42),
woosh.Token(woosh.OP, ')', 69, 42, 69, 43),
woosh.Token(woosh.COMMENT, '# a copy to save', 69, 48, 69, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 64, 70, 0),
woosh.Token(woosh.NAME, 'new', 70, 16, 70, 19),
woosh.Token(woosh.OP, '=', 70, 20, 70, 21),
woosh.Token(woosh.NAME, 'old', 70, 22, 70, 25),
woosh.Token(woosh.OP, '[', 70, 25, 70, 26),
woosh.Token(woosh.OP, ':', 70, 26, 70, 27),
woosh.Token(woosh.OP, ']', 70, 27, 70, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 28, 71, 0),
woosh.Token(woosh.NAME, 'new', 71, 16, 71, 19),
woosh.Token(woosh.OP, '[', 71, 19, 71, 20),
woosh.Token(woosh.NUMBER, '3', 71, 20, 71, 21),
woosh.Token(woosh.OP, ']', 71, 21, 71, 22),
woosh.Token(woosh.OP, '&=', 71, 23, 71, 25),
woosh.Token(woosh.OP, '~', 71, 26, 71, 27),
woosh.Token(woosh.NAME, 'termios', 71, 27, 71, 34),
woosh.Token(woosh.OP, '.', 71, 34, 71, 35),
woosh.Token(woosh.NAME, 'ECHO', 71, 35, 71, 39),
woosh.Token(woosh.COMMENT, "# 3 == 'lflags'", 71, 41, 71, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 56, 72, 0),
woosh.Token(woosh.NAME, 'tcsetattr_flags', 72, 16, 72, 31),
woosh.Token(woosh.OP, '=', 72, 32, 72, 33),
woosh.Token(woosh.NAME, 'termios', 72, 34, 72, 41),
woosh.Token(woosh.OP, '.', 72, 41, 72, 42),
woosh.Token(woosh.NAME, 'TCSAFLUSH', 72, 42, 72, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 51, 73, 0),
woosh.Token(woosh.NAME, 'if', 73, 16, 73, 18),
woosh.Token(woosh.NAME, 'hasattr', 73, 19, 73, 26),
woosh.Token(woosh.OP, '(', 73, 26, 73, 27),
woosh.Token(woosh.NAME, 'termios', 73, 27, 73, 34),
woosh.Token(woosh.OP, ',', 73, 34, 73, 35),
woosh.Token(woosh.STRING, "'TCSASOFT'", 73, 36, 73, 46),
woosh.Token(woosh.OP, ')', 73, 46, 73, 47),
woosh.Token(woosh.OP, ':', 73, 47, 73, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 48, 74, 0),
woosh.Token(woosh.INDENT, '                    ', 74, 0, 74, 20),
woosh.Token(woosh.NAME, 'tcsetattr_flags', 74, 20, 74, 35),
woosh.Token(woosh.OP, '|=', 74, 36, 74, 38),
woosh.Token(woosh.NAME, 'termios', 74, 39, 74, 46),
woosh.Token(woosh.OP, '.', 74, 46, 74, 47),
woosh.Token(woosh.NAME, 'TCSASOFT', 74, 47, 74, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 55, 75, 0),
woosh.Token(woosh.DEDENT, '                ', 75, 0, 75, 16),
woosh.Token(woosh.NAME, 'try', 75, 16, 75, 19),
woosh.Token(woosh.OP, ':', 75, 19, 75, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 20, 76, 0),
woosh.Token(woosh.INDENT, '                    ', 76, 0, 76, 20),
woosh.Token(woosh.NAME, 'termios', 76, 20, 76, 27),
woosh.Token(woosh.OP, '.', 76, 27, 76, 28),
woosh.Token(woosh.NAME, 'tcsetattr', 76, 28, 76, 37),
woosh.Token(woosh.OP, '(', 76, 37, 76, 38),
woosh.Token(woosh.NAME, 'fd', 76, 38, 76, 40),
woosh.Token(woosh.OP, ',', 76, 40, 76, 41),
woosh.Token(woosh.NAME, 'tcsetattr_flags', 76, 42, 76, 57),
woosh.Token(woosh.OP, ',', 76, 57, 76, 58),
woosh.Token(woosh.NAME, 'new', 76, 59, 76, 62),
woosh.Token(woosh.OP, ')', 76, 62, 76, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 63, 77, 0),
woosh.Token(woosh.NAME, 'passwd', 77, 20, 77, 26),
woosh.Token(woosh.OP, '=', 77, 27, 77, 28),
woosh.Token(woosh.NAME, '_raw_input', 77, 29, 77, 39),
woosh.Token(woosh.OP, '(', 77, 39, 77, 40),
woosh.Token(woosh.NAME, 'prompt', 77, 40, 77, 46),
woosh.Token(woosh.OP, ',', 77, 46, 77, 47),
woosh.Token(woosh.NAME, 'stream', 77, 48, 77, 54),
woosh.Token(woosh.OP, ',', 77, 54, 77, 55),
woosh.Token(woosh.NAME, 'input', 77, 56, 77, 61),
woosh.Token(woosh.OP, '=', 77, 61, 77, 62),
woosh.Token(woosh.NAME, 'input', 77, 62, 77, 67),
woosh.Token(woosh.OP, ')', 77, 67, 77, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 68, 78, 0),
woosh.Token(woosh.DEDENT, '                ', 78, 0, 78, 16),
woosh.Token(woosh.NAME, 'finally', 78, 16, 78, 23),
woosh.Token(woosh.OP, ':', 78, 23, 78, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 24, 79, 0),
woosh.Token(woosh.INDENT, '                    ', 79, 0, 79, 20),
woosh.Token(woosh.NAME, 'termios', 79, 20, 79, 27),
woosh.Token(woosh.OP, '.', 79, 27, 79, 28),
woosh.Token(woosh.NAME, 'tcsetattr', 79, 28, 79, 37),
woosh.Token(woosh.OP, '(', 79, 37, 79, 38),
woosh.Token(woosh.NAME, 'fd', 79, 38, 79, 40),
woosh.Token(woosh.OP, ',', 79, 40, 79, 41),
woosh.Token(woosh.NAME, 'tcsetattr_flags', 79, 42, 79, 57),
woosh.Token(woosh.OP, ',', 79, 57, 79, 58),
woosh.Token(woosh.NAME, 'old', 79, 59, 79, 62),
woosh.Token(woosh.OP, ')', 79, 62, 79, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 79, 63, 80, 0),
woosh.Token(woosh.NAME, 'stream', 80, 20, 80, 26),
woosh.Token(woosh.OP, '.', 80, 26, 80, 27),
woosh.Token(woosh.NAME, 'flush', 80, 27, 80, 32),
woosh.Token(woosh.OP, '(', 80, 32, 80, 33),
woosh.Token(woosh.OP, ')', 80, 33, 80, 34),
woosh.Token(woosh.COMMENT, '# issue7208', 80, 36, 80, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 80, 47, 81, 0),
woosh.Token(woosh.DEDENT, '            ', 81, 0, 81, 12),
woosh.Token(woosh.DEDENT, '', 81, 12, 81, 12),
woosh.Token(woosh.NAME, 'except', 81, 12, 81, 18),
woosh.Token(woosh.NAME, 'termios', 81, 19, 81, 26),
woosh.Token(woosh.OP, '.', 81, 26, 81, 27),
woosh.Token(woosh.NAME, 'error', 81, 27, 81, 32),
woosh.Token(woosh.OP, ':', 81, 32, 81, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 81, 33, 82, 0),
woosh.Token(woosh.INDENT, '                ', 82, 0, 82, 16),
woosh.Token(woosh.NAME, 'if', 82, 16, 82, 18),
woosh.Token(woosh.NAME, 'passwd', 82, 19, 82, 25),
woosh.Token(woosh.NAME, 'is', 82, 26, 82, 28),
woosh.Token(woosh.NAME, 'not', 82, 29, 82, 32),
woosh.Token(woosh.NAME, 'None', 82, 33, 82, 37),
woosh.Token(woosh.OP, ':', 82, 37, 82, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 82, 38, 83, 0),
woosh.Token(woosh.COMMENT, '# _raw_input succeeded.  The final tcsetattr failed.  Reraise', 83, 20, 83, 81),
woosh.Token(woosh.COMMENT, '# instead of leaving the terminal in an unknown state.', 84, 20, 84, 74),
woosh.Token(woosh.INDENT, '                    ', 85, 0, 85, 20),
woosh.Token(woosh.NAME, 'raise', 85, 20, 85, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 85, 25, 86, 0),
woosh.Token(woosh.COMMENT, "# We can't control the tty or stdin.  Give up and use normal IO.", 86, 16, 86, 80),
woosh.Token(woosh.COMMENT, '# fallback_getpass() raises an appropriate warning.', 87, 16, 87, 67),
woosh.Token(woosh.DEDENT, '                ', 88, 0, 88, 16),
woosh.Token(woosh.NAME, 'if', 88, 16, 88, 18),
woosh.Token(woosh.NAME, 'stream', 88, 19, 88, 25),
woosh.Token(woosh.NAME, 'is', 88, 26, 88, 28),
woosh.Token(woosh.NAME, 'not', 88, 29, 88, 32),
woosh.Token(woosh.NAME, 'input', 88, 33, 88, 38),
woosh.Token(woosh.OP, ':', 88, 38, 88, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 39, 89, 0),
woosh.Token(woosh.COMMENT, '# clean up unused file objects before blocking', 89, 20, 89, 66),
woosh.Token(woosh.INDENT, '                    ', 90, 0, 90, 20),
woosh.Token(woosh.NAME, 'stack', 90, 20, 90, 25),
woosh.Token(woosh.OP, '.', 90, 25, 90, 26),
woosh.Token(woosh.NAME, 'close', 90, 26, 90, 31),
woosh.Token(woosh.OP, '(', 90, 31, 90, 32),
woosh.Token(woosh.OP, ')', 90, 32, 90, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 90, 33, 91, 0),
woosh.Token(woosh.DEDENT, '                ', 91, 0, 91, 16),
woosh.Token(woosh.NAME, 'passwd', 91, 16, 91, 22),
woosh.Token(woosh.OP, '=', 91, 23, 91, 24),
woosh.Token(woosh.NAME, 'fallback_getpass', 91, 25, 91, 41),
woosh.Token(woosh.OP, '(', 91, 41, 91, 42),
woosh.Token(woosh.NAME, 'prompt', 91, 42, 91, 48),
woosh.Token(woosh.OP, ',', 91, 48, 91, 49),
woosh.Token(woosh.NAME, 'stream', 91, 50, 91, 56),
woosh.Token(woosh.OP, ')', 91, 56, 91, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 91, 57, 92, 0),
woosh.Token(woosh.DEDENT, '        ', 93, 0, 93, 8),
woosh.Token(woosh.DEDENT, '', 93, 8, 93, 8),
woosh.Token(woosh.NAME, 'stream', 93, 8, 93, 14),
woosh.Token(woosh.OP, '.', 93, 14, 93, 15),
woosh.Token(woosh.NAME, 'write', 93, 15, 93, 20),
woosh.Token(woosh.OP, '(', 93, 20, 93, 21),
woosh.Token(woosh.STRING, "'\\n'", 93, 21, 93, 25),
woosh.Token(woosh.OP, ')', 93, 25, 93, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 26, 94, 0),
woosh.Token(woosh.NAME, 'return', 94, 8, 94, 14),
woosh.Token(woosh.NAME, 'passwd', 94, 15, 94, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 21, 95, 0),
woosh.Token(woosh.DEDENT, '', 97, 0, 97, 0),
woosh.Token(woosh.DEDENT, '', 97, 0, 97, 0),
woosh.Token(woosh.NAME, 'def', 97, 0, 97, 3),
woosh.Token(woosh.NAME, 'win_getpass', 97, 4, 97, 15),
woosh.Token(woosh.OP, '(', 97, 15, 97, 16),
woosh.Token(woosh.NAME, 'prompt', 97, 16, 97, 22),
woosh.Token(woosh.OP, '=', 97, 22, 97, 23),
woosh.Token(woosh.STRING, "'Password: '", 97, 23, 97, 35),
woosh.Token(woosh.OP, ',', 97, 35, 97, 36),
woosh.Token(woosh.NAME, 'stream', 97, 37, 97, 43),
woosh.Token(woosh.OP, '=', 97, 43, 97, 44),
woosh.Token(woosh.NAME, 'None', 97, 44, 97, 48),
woosh.Token(woosh.OP, ')', 97, 48, 97, 49),
woosh.Token(woosh.OP, ':', 97, 49, 97, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 50, 98, 0),
woosh.Token(woosh.INDENT, '    ', 98, 0, 98, 4),
woosh.Token(woosh.STRING, '"""Prompt for password with echo off, using Windows getch()."""', 98, 4, 98, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 67, 99, 0),
woosh.Token(woosh.NAME, 'if', 99, 4, 99, 6),
woosh.Token(woosh.NAME, 'sys', 99, 7, 99, 10),
woosh.Token(woosh.OP, '.', 99, 10, 99, 11),
woosh.Token(woosh.NAME, 'stdin', 99, 11, 99, 16),
woosh.Token(woosh.NAME, 'is', 99, 17, 99, 19),
woosh.Token(woosh.NAME, 'not', 99, 20, 99, 23),
woosh.Token(woosh.NAME, 'sys', 99, 24, 99, 27),
woosh.Token(woosh.OP, '.', 99, 27, 99, 28),
woosh.Token(woosh.NAME, '__stdin__', 99, 28, 99, 37),
woosh.Token(woosh.OP, ':', 99, 37, 99, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 38, 100, 0),
woosh.Token(woosh.INDENT, '        ', 100, 0, 100, 8),
woosh.Token(woosh.NAME, 'return', 100, 8, 100, 14),
woosh.Token(woosh.NAME, 'fallback_getpass', 100, 15, 100, 31),
woosh.Token(woosh.OP, '(', 100, 31, 100, 32),
woosh.Token(woosh.NAME, 'prompt', 100, 32, 100, 38),
woosh.Token(woosh.OP, ',', 100, 38, 100, 39),
woosh.Token(woosh.NAME, 'stream', 100, 40, 100, 46),
woosh.Token(woosh.OP, ')', 100, 46, 100, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 47, 101, 0),
woosh.Token(woosh.DEDENT, '    ', 102, 0, 102, 4),
woosh.Token(woosh.NAME, 'for', 102, 4, 102, 7),
woosh.Token(woosh.NAME, 'c', 102, 8, 102, 9),
woosh.Token(woosh.NAME, 'in', 102, 10, 102, 12),
woosh.Token(woosh.NAME, 'prompt', 102, 13, 102, 19),
woosh.Token(woosh.OP, ':', 102, 19, 102, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 20, 103, 0),
woosh.Token(woosh.INDENT, '        ', 103, 0, 103, 8),
woosh.Token(woosh.NAME, 'msvcrt', 103, 8, 103, 14),
woosh.Token(woosh.OP, '.', 103, 14, 103, 15),
woosh.Token(woosh.NAME, 'putwch', 103, 15, 103, 21),
woosh.Token(woosh.OP, '(', 103, 21, 103, 22),
woosh.Token(woosh.NAME, 'c', 103, 22, 103, 23),
woosh.Token(woosh.OP, ')', 103, 23, 103, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 103, 24, 104, 0),
woosh.Token(woosh.DEDENT, '    ', 104, 0, 104, 4),
woosh.Token(woosh.NAME, 'pw', 104, 4, 104, 6),
woosh.Token(woosh.OP, '=', 104, 7, 104, 8),
woosh.Token(woosh.STRING, '""', 104, 9, 104, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 11, 105, 0),
woosh.Token(woosh.NAME, 'while', 105, 4, 105, 9),
woosh.Token(woosh.NUMBER, '1', 105, 10, 105, 11),
woosh.Token(woosh.OP, ':', 105, 11, 105, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 12, 106, 0),
woosh.Token(woosh.INDENT, '        ', 106, 0, 106, 8),
woosh.Token(woosh.NAME, 'c', 106, 8, 106, 9),
woosh.Token(woosh.OP, '=', 106, 10, 106, 11),
woosh.Token(woosh.NAME, 'msvcrt', 106, 12, 106, 18),
woosh.Token(woosh.OP, '.', 106, 18, 106, 19),
woosh.Token(woosh.NAME, 'getwch', 106, 19, 106, 25),
woosh.Token(woosh.OP, '(', 106, 25, 106, 26),
woosh.Token(woosh.OP, ')', 106, 26, 106, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 27, 107, 0),
woosh.Token(woosh.NAME, 'if', 107, 8, 107, 10),
woosh.Token(woosh.NAME, 'c', 107, 11, 107, 12),
woosh.Token(woosh.OP, '==', 107, 13, 107, 15),
woosh.Token(woosh.STRING, "'\\r'", 107, 16, 107, 20),
woosh.Token(woosh.NAME, 'or', 107, 21, 107, 23),
woosh.Token(woosh.NAME, 'c', 107, 24, 107, 25),
woosh.Token(woosh.OP, '==', 107, 26, 107, 28),
woosh.Token(woosh.STRING, "'\\n'", 107, 29, 107, 33),
woosh.Token(woosh.OP, ':', 107, 33, 107, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 34, 108, 0),
woosh.Token(woosh.INDENT, '            ', 108, 0, 108, 12),
woosh.Token(woosh.NAME, 'break', 108, 12, 108, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 17, 109, 0),
woosh.Token(woosh.DEDENT, '        ', 109, 0, 109, 8),
woosh.Token(woosh.NAME, 'if', 109, 8, 109, 10),
woosh.Token(woosh.NAME, 'c', 109, 11, 109, 12),
woosh.Token(woosh.OP, '==', 109, 13, 109, 15),
woosh.Token(woosh.STRING, "'\\003'", 109, 16, 109, 22),
woosh.Token(woosh.OP, ':', 109, 22, 109, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 23, 110, 0),
woosh.Token(woosh.INDENT, '            ', 110, 0, 110, 12),
woosh.Token(woosh.NAME, 'raise', 110, 12, 110, 17),
woosh.Token(woosh.NAME, 'KeyboardInterrupt', 110, 18, 110, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 35, 111, 0),
woosh.Token(woosh.DEDENT, '        ', 111, 0, 111, 8),
woosh.Token(woosh.NAME, 'if', 111, 8, 111, 10),
woosh.Token(woosh.NAME, 'c', 111, 11, 111, 12),
woosh.Token(woosh.OP, '==', 111, 13, 111, 15),
woosh.Token(woosh.STRING, "'\\b'", 111, 16, 111, 20),
woosh.Token(woosh.OP, ':', 111, 20, 111, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 21, 112, 0),
woosh.Token(woosh.INDENT, '            ', 112, 0, 112, 12),
woosh.Token(woosh.NAME, 'pw', 112, 12, 112, 14),
woosh.Token(woosh.OP, '=', 112, 15, 112, 16),
woosh.Token(woosh.NAME, 'pw', 112, 17, 112, 19),
woosh.Token(woosh.OP, '[', 112, 19, 112, 20),
woosh.Token(woosh.OP, ':', 112, 20, 112, 21),
woosh.Token(woosh.OP, '-', 112, 21, 112, 22),
woosh.Token(woosh.NUMBER, '1', 112, 22, 112, 23),
woosh.Token(woosh.OP, ']', 112, 23, 112, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 24, 113, 0),
woosh.Token(woosh.DEDENT, '        ', 113, 0, 113, 8),
woosh.Token(woosh.NAME, 'else', 113, 8, 113, 12),
woosh.Token(woosh.OP, ':', 113, 12, 113, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 13, 114, 0),
woosh.Token(woosh.INDENT, '            ', 114, 0, 114, 12),
woosh.Token(woosh.NAME, 'pw', 114, 12, 114, 14),
woosh.Token(woosh.OP, '=', 114, 15, 114, 16),
woosh.Token(woosh.NAME, 'pw', 114, 17, 114, 19),
woosh.Token(woosh.OP, '+', 114, 20, 114, 21),
woosh.Token(woosh.NAME, 'c', 114, 22, 114, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 23, 115, 0),
woosh.Token(woosh.DEDENT, '    ', 115, 0, 115, 4),
woosh.Token(woosh.DEDENT, '', 115, 4, 115, 4),
woosh.Token(woosh.NAME, 'msvcrt', 115, 4, 115, 10),
woosh.Token(woosh.OP, '.', 115, 10, 115, 11),
woosh.Token(woosh.NAME, 'putwch', 115, 11, 115, 17),
woosh.Token(woosh.OP, '(', 115, 17, 115, 18),
woosh.Token(woosh.STRING, "'\\r'", 115, 18, 115, 22),
woosh.Token(woosh.OP, ')', 115, 22, 115, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 23, 116, 0),
woosh.Token(woosh.NAME, 'msvcrt', 116, 4, 116, 10),
woosh.Token(woosh.OP, '.', 116, 10, 116, 11),
woosh.Token(woosh.NAME, 'putwch', 116, 11, 116, 17),
woosh.Token(woosh.OP, '(', 116, 17, 116, 18),
woosh.Token(woosh.STRING, "'\\n'", 116, 18, 116, 22),
woosh.Token(woosh.OP, ')', 116, 22, 116, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 23, 117, 0),
woosh.Token(woosh.NAME, 'return', 117, 4, 117, 10),
woosh.Token(woosh.NAME, 'pw', 117, 11, 117, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 13, 118, 0),
woosh.Token(woosh.DEDENT, '', 120, 0, 120, 0),
woosh.Token(woosh.NAME, 'def', 120, 0, 120, 3),
woosh.Token(woosh.NAME, 'fallback_getpass', 120, 4, 120, 20),
woosh.Token(woosh.OP, '(', 120, 20, 120, 21),
woosh.Token(woosh.NAME, 'prompt', 120, 21, 120, 27),
woosh.Token(woosh.OP, '=', 120, 27, 120, 28),
woosh.Token(woosh.STRING, "'Password: '", 120, 28, 120, 40),
woosh.Token(woosh.OP, ',', 120, 40, 120, 41),
woosh.Token(woosh.NAME, 'stream', 120, 42, 120, 48),
woosh.Token(woosh.OP, '=', 120, 48, 120, 49),
woosh.Token(woosh.NAME, 'None', 120, 49, 120, 53),
woosh.Token(woosh.OP, ')', 120, 53, 120, 54),
woosh.Token(woosh.OP, ':', 120, 54, 120, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 55, 121, 0),
woosh.Token(woosh.INDENT, '    ', 121, 0, 121, 4),
woosh.Token(woosh.NAME, 'warnings', 121, 4, 121, 12),
woosh.Token(woosh.OP, '.', 121, 12, 121, 13),
woosh.Token(woosh.NAME, 'warn', 121, 13, 121, 17),
woosh.Token(woosh.OP, '(', 121, 17, 121, 18),
woosh.Token(woosh.STRING, '"Can not control echo on the terminal."', 121, 18, 121, 57),
woosh.Token(woosh.OP, ',', 121, 57, 121, 58),
woosh.Token(woosh.NAME, 'GetPassWarning', 121, 59, 121, 73),
woosh.Token(woosh.OP, ',', 121, 73, 121, 74),
woosh.Token(woosh.NAME, 'stacklevel', 122, 18, 122, 28),
woosh.Token(woosh.OP, '=', 122, 28, 122, 29),
woosh.Token(woosh.NUMBER, '2', 122, 29, 122, 30),
woosh.Token(woosh.OP, ')', 122, 30, 122, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 31, 123, 0),
woosh.Token(woosh.NAME, 'if', 123, 4, 123, 6),
woosh.Token(woosh.NAME, 'not', 123, 7, 123, 10),
woosh.Token(woosh.NAME, 'stream', 123, 11, 123, 17),
woosh.Token(woosh.OP, ':', 123, 17, 123, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 18, 124, 0),
woosh.Token(woosh.INDENT, '        ', 124, 0, 124, 8),
woosh.Token(woosh.NAME, 'stream', 124, 8, 124, 14),
woosh.Token(woosh.OP, '=', 124, 15, 124, 16),
woosh.Token(woosh.NAME, 'sys', 124, 17, 124, 20),
woosh.Token(woosh.OP, '.', 124, 20, 124, 21),
woosh.Token(woosh.NAME, 'stderr', 124, 21, 124, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 27, 125, 0),
woosh.Token(woosh.DEDENT, '    ', 125, 0, 125, 4),
woosh.Token(woosh.NAME, 'print', 125, 4, 125, 9),
woosh.Token(woosh.OP, '(', 125, 9, 125, 10),
woosh.Token(woosh.STRING, '"Warning: Password input may be echoed."', 125, 10, 125, 50),
woosh.Token(woosh.OP, ',', 125, 50, 125, 51),
woosh.Token(woosh.NAME, 'file', 125, 52, 125, 56),
woosh.Token(woosh.OP, '=', 125, 56, 125, 57),
woosh.Token(woosh.NAME, 'stream', 125, 57, 125, 63),
woosh.Token(woosh.OP, ')', 125, 63, 125, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 64, 126, 0),
woosh.Token(woosh.NAME, 'return', 126, 4, 126, 10),
woosh.Token(woosh.NAME, '_raw_input', 126, 11, 126, 21),
woosh.Token(woosh.OP, '(', 126, 21, 126, 22),
woosh.Token(woosh.NAME, 'prompt', 126, 22, 126, 28),
woosh.Token(woosh.OP, ',', 126, 28, 126, 29),
woosh.Token(woosh.NAME, 'stream', 126, 30, 126, 36),
woosh.Token(woosh.OP, ')', 126, 36, 126, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 37, 127, 0),
woosh.Token(woosh.DEDENT, '', 129, 0, 129, 0),
woosh.Token(woosh.NAME, 'def', 129, 0, 129, 3),
woosh.Token(woosh.NAME, '_raw_input', 129, 4, 129, 14),
woosh.Token(woosh.OP, '(', 129, 14, 129, 15),
woosh.Token(woosh.NAME, 'prompt', 129, 15, 129, 21),
woosh.Token(woosh.OP, '=', 129, 21, 129, 22),
woosh.Token(woosh.STRING, '""', 129, 22, 129, 24),
woosh.Token(woosh.OP, ',', 129, 24, 129, 25),
woosh.Token(woosh.NAME, 'stream', 129, 26, 129, 32),
woosh.Token(woosh.OP, '=', 129, 32, 129, 33),
woosh.Token(woosh.NAME, 'None', 129, 33, 129, 37),
woosh.Token(woosh.OP, ',', 129, 37, 129, 38),
woosh.Token(woosh.NAME, 'input', 129, 39, 129, 44),
woosh.Token(woosh.OP, '=', 129, 44, 129, 45),
woosh.Token(woosh.NAME, 'None', 129, 45, 129, 49),
woosh.Token(woosh.OP, ')', 129, 49, 129, 50),
woosh.Token(woosh.OP, ':', 129, 50, 129, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 51, 130, 0),
woosh.Token(woosh.COMMENT, "# This doesn't save the string in the GNU readline history.", 130, 4, 130, 63),
woosh.Token(woosh.INDENT, '    ', 131, 0, 131, 4),
woosh.Token(woosh.NAME, 'if', 131, 4, 131, 6),
woosh.Token(woosh.NAME, 'not', 131, 7, 131, 10),
woosh.Token(woosh.NAME, 'stream', 131, 11, 131, 17),
woosh.Token(woosh.OP, ':', 131, 17, 131, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 18, 132, 0),
woosh.Token(woosh.INDENT, '        ', 132, 0, 132, 8),
woosh.Token(woosh.NAME, 'stream', 132, 8, 132, 14),
woosh.Token(woosh.OP, '=', 132, 15, 132, 16),
woosh.Token(woosh.NAME, 'sys', 132, 17, 132, 20),
woosh.Token(woosh.OP, '.', 132, 20, 132, 21),
woosh.Token(woosh.NAME, 'stderr', 132, 21, 132, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 27, 133, 0),
woosh.Token(woosh.DEDENT, '    ', 133, 0, 133, 4),
woosh.Token(woosh.NAME, 'if', 133, 4, 133, 6),
woosh.Token(woosh.NAME, 'not', 133, 7, 133, 10),
woosh.Token(woosh.NAME, 'input', 133, 11, 133, 16),
woosh.Token(woosh.OP, ':', 133, 16, 133, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 17, 134, 0),
woosh.Token(woosh.INDENT, '        ', 134, 0, 134, 8),
woosh.Token(woosh.NAME, 'input', 134, 8, 134, 13),
woosh.Token(woosh.OP, '=', 134, 14, 134, 15),
woosh.Token(woosh.NAME, 'sys', 134, 16, 134, 19),
woosh.Token(woosh.OP, '.', 134, 19, 134, 20),
woosh.Token(woosh.NAME, 'stdin', 134, 20, 134, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 25, 135, 0),
woosh.Token(woosh.DEDENT, '    ', 135, 0, 135, 4),
woosh.Token(woosh.NAME, 'prompt', 135, 4, 135, 10),
woosh.Token(woosh.OP, '=', 135, 11, 135, 12),
woosh.Token(woosh.NAME, 'str', 135, 13, 135, 16),
woosh.Token(woosh.OP, '(', 135, 16, 135, 17),
woosh.Token(woosh.NAME, 'prompt', 135, 17, 135, 23),
woosh.Token(woosh.OP, ')', 135, 23, 135, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 24, 136, 0),
woosh.Token(woosh.NAME, 'if', 136, 4, 136, 6),
woosh.Token(woosh.NAME, 'prompt', 136, 7, 136, 13),
woosh.Token(woosh.OP, ':', 136, 13, 136, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 14, 137, 0),
woosh.Token(woosh.INDENT, '        ', 137, 0, 137, 8),
woosh.Token(woosh.NAME, 'try', 137, 8, 137, 11),
woosh.Token(woosh.OP, ':', 137, 11, 137, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 12, 138, 0),
woosh.Token(woosh.INDENT, '            ', 138, 0, 138, 12),
woosh.Token(woosh.NAME, 'stream', 138, 12, 138, 18),
woosh.Token(woosh.OP, '.', 138, 18, 138, 19),
woosh.Token(woosh.NAME, 'write', 138, 19, 138, 24),
woosh.Token(woosh.OP, '(', 138, 24, 138, 25),
woosh.Token(woosh.NAME, 'prompt', 138, 25, 138, 31),
woosh.Token(woosh.OP, ')', 138, 31, 138, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 32, 139, 0),
woosh.Token(woosh.DEDENT, '        ', 139, 0, 139, 8),
woosh.Token(woosh.NAME, 'except', 139, 8, 139, 14),
woosh.Token(woosh.NAME, 'UnicodeEncodeError', 139, 15, 139, 33),
woosh.Token(woosh.OP, ':', 139, 33, 139, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 34, 140, 0),
woosh.Token(woosh.COMMENT, '# Use replace error handler to get as much as possible printed.', 140, 12, 140, 75),
woosh.Token(woosh.INDENT, '            ', 141, 0, 141, 12),
woosh.Token(woosh.NAME, 'prompt', 141, 12, 141, 18),
woosh.Token(woosh.OP, '=', 141, 19, 141, 20),
woosh.Token(woosh.NAME, 'prompt', 141, 21, 141, 27),
woosh.Token(woosh.OP, '.', 141, 27, 141, 28),
woosh.Token(woosh.NAME, 'encode', 141, 28, 141, 34),
woosh.Token(woosh.OP, '(', 141, 34, 141, 35),
woosh.Token(woosh.NAME, 'stream', 141, 35, 141, 41),
woosh.Token(woosh.OP, '.', 141, 41, 141, 42),
woosh.Token(woosh.NAME, 'encoding', 141, 42, 141, 50),
woosh.Token(woosh.OP, ',', 141, 50, 141, 51),
woosh.Token(woosh.STRING, "'replace'", 141, 52, 141, 61),
woosh.Token(woosh.OP, ')', 141, 61, 141, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 62, 142, 0),
woosh.Token(woosh.NAME, 'prompt', 142, 12, 142, 18),
woosh.Token(woosh.OP, '=', 142, 19, 142, 20),
woosh.Token(woosh.NAME, 'prompt', 142, 21, 142, 27),
woosh.Token(woosh.OP, '.', 142, 27, 142, 28),
woosh.Token(woosh.NAME, 'decode', 142, 28, 142, 34),
woosh.Token(woosh.OP, '(', 142, 34, 142, 35),
woosh.Token(woosh.NAME, 'stream', 142, 35, 142, 41),
woosh.Token(woosh.OP, '.', 142, 41, 142, 42),
woosh.Token(woosh.NAME, 'encoding', 142, 42, 142, 50),
woosh.Token(woosh.OP, ')', 142, 50, 142, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 51, 143, 0),
woosh.Token(woosh.NAME, 'stream', 143, 12, 143, 18),
woosh.Token(woosh.OP, '.', 143, 18, 143, 19),
woosh.Token(woosh.NAME, 'write', 143, 19, 143, 24),
woosh.Token(woosh.OP, '(', 143, 24, 143, 25),
woosh.Token(woosh.NAME, 'prompt', 143, 25, 143, 31),
woosh.Token(woosh.OP, ')', 143, 31, 143, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 32, 144, 0),
woosh.Token(woosh.DEDENT, '        ', 144, 0, 144, 8),
woosh.Token(woosh.NAME, 'stream', 144, 8, 144, 14),
woosh.Token(woosh.OP, '.', 144, 14, 144, 15),
woosh.Token(woosh.NAME, 'flush', 144, 15, 144, 20),
woosh.Token(woosh.OP, '(', 144, 20, 144, 21),
woosh.Token(woosh.OP, ')', 144, 21, 144, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 22, 145, 0),
woosh.Token(woosh.COMMENT, '# NOTE: The Python C API calls flockfile() (and unlock) during readline.', 145, 4, 145, 76),
woosh.Token(woosh.DEDENT, '    ', 146, 0, 146, 4),
woosh.Token(woosh.NAME, 'line', 146, 4, 146, 8),
woosh.Token(woosh.OP, '=', 146, 9, 146, 10),
woosh.Token(woosh.NAME, 'input', 146, 11, 146, 16),
woosh.Token(woosh.OP, '.', 146, 16, 146, 17),
woosh.Token(woosh.NAME, 'readline', 146, 17, 146, 25),
woosh.Token(woosh.OP, '(', 146, 25, 146, 26),
woosh.Token(woosh.OP, ')', 146, 26, 146, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 27, 147, 0),
woosh.Token(woosh.NAME, 'if', 147, 4, 147, 6),
woosh.Token(woosh.NAME, 'not', 147, 7, 147, 10),
woosh.Token(woosh.NAME, 'line', 147, 11, 147, 15),
woosh.Token(woosh.OP, ':', 147, 15, 147, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 16, 148, 0),
woosh.Token(woosh.INDENT, '        ', 148, 0, 148, 8),
woosh.Token(woosh.NAME, 'raise', 148, 8, 148, 13),
woosh.Token(woosh.NAME, 'EOFError', 148, 14, 148, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 22, 149, 0),
woosh.Token(woosh.DEDENT, '    ', 149, 0, 149, 4),
woosh.Token(woosh.NAME, 'if', 149, 4, 149, 6),
woosh.Token(woosh.NAME, 'line', 149, 7, 149, 11),
woosh.Token(woosh.OP, '[', 149, 11, 149, 12),
woosh.Token(woosh.OP, '-', 149, 12, 149, 13),
woosh.Token(woosh.NUMBER, '1', 149, 13, 149, 14),
woosh.Token(woosh.OP, ']', 149, 14, 149, 15),
woosh.Token(woosh.OP, '==', 149, 16, 149, 18),
woosh.Token(woosh.STRING, "'\\n'", 149, 19, 149, 23),
woosh.Token(woosh.OP, ':', 149, 23, 149, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 24, 150, 0),
woosh.Token(woosh.INDENT, '        ', 150, 0, 150, 8),
woosh.Token(woosh.NAME, 'line', 150, 8, 150, 12),
woosh.Token(woosh.OP, '=', 150, 13, 150, 14),
woosh.Token(woosh.NAME, 'line', 150, 15, 150, 19),
woosh.Token(woosh.OP, '[', 150, 19, 150, 20),
woosh.Token(woosh.OP, ':', 150, 20, 150, 21),
woosh.Token(woosh.OP, '-', 150, 21, 150, 22),
woosh.Token(woosh.NUMBER, '1', 150, 22, 150, 23),
woosh.Token(woosh.OP, ']', 150, 23, 150, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 24, 151, 0),
woosh.Token(woosh.DEDENT, '    ', 151, 0, 151, 4),
woosh.Token(woosh.NAME, 'return', 151, 4, 151, 10),
woosh.Token(woosh.NAME, 'line', 151, 11, 151, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 15, 152, 0),
woosh.Token(woosh.DEDENT, '', 154, 0, 154, 0),
woosh.Token(woosh.NAME, 'def', 154, 0, 154, 3),
woosh.Token(woosh.NAME, 'getuser', 154, 4, 154, 11),
woosh.Token(woosh.OP, '(', 154, 11, 154, 12),
woosh.Token(woosh.OP, ')', 154, 12, 154, 13),
woosh.Token(woosh.OP, ':', 154, 13, 154, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 14, 155, 0),
woosh.Token(woosh.INDENT, '    ', 155, 0, 155, 4),
woosh.Token(woosh.STRING, '"""Get the username from the environment or password database.\r\n\r\n    First try various environment variables, then the password\r\n    database.  This works on Windows as long as USERNAME is set.\r\n\r\n    """', 155, 4, 160, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 7, 161, 0),
woosh.Token(woosh.NAME, 'for', 162, 4, 162, 7),
woosh.Token(woosh.NAME, 'name', 162, 8, 162, 12),
woosh.Token(woosh.NAME, 'in', 162, 13, 162, 15),
woosh.Token(woosh.OP, '(', 162, 16, 162, 17),
woosh.Token(woosh.STRING, "'LOGNAME'", 162, 17, 162, 26),
woosh.Token(woosh.OP, ',', 162, 26, 162, 27),
woosh.Token(woosh.STRING, "'USER'", 162, 28, 162, 34),
woosh.Token(woosh.OP, ',', 162, 34, 162, 35),
woosh.Token(woosh.STRING, "'LNAME'", 162, 36, 162, 43),
woosh.Token(woosh.OP, ',', 162, 43, 162, 44),
woosh.Token(woosh.STRING, "'USERNAME'", 162, 45, 162, 55),
woosh.Token(woosh.OP, ')', 162, 55, 162, 56),
woosh.Token(woosh.OP, ':', 162, 56, 162, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 57, 163, 0),
woosh.Token(woosh.INDENT, '        ', 163, 0, 163, 8),
woosh.Token(woosh.NAME, 'user', 163, 8, 163, 12),
woosh.Token(woosh.OP, '=', 163, 13, 163, 14),
woosh.Token(woosh.NAME, 'os', 163, 15, 163, 17),
woosh.Token(woosh.OP, '.', 163, 17, 163, 18),
woosh.Token(woosh.NAME, 'environ', 163, 18, 163, 25),
woosh.Token(woosh.OP, '.', 163, 25, 163, 26),
woosh.Token(woosh.NAME, 'get', 163, 26, 163, 29),
woosh.Token(woosh.OP, '(', 163, 29, 163, 30),
woosh.Token(woosh.NAME, 'name', 163, 30, 163, 34),
woosh.Token(woosh.OP, ')', 163, 34, 163, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 35, 164, 0),
woosh.Token(woosh.NAME, 'if', 164, 8, 164, 10),
woosh.Token(woosh.NAME, 'user', 164, 11, 164, 15),
woosh.Token(woosh.OP, ':', 164, 15, 164, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 16, 165, 0),
woosh.Token(woosh.INDENT, '            ', 165, 0, 165, 12),
woosh.Token(woosh.NAME, 'return', 165, 12, 165, 18),
woosh.Token(woosh.NAME, 'user', 165, 19, 165, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 23, 166, 0),
woosh.Token(woosh.COMMENT, '# If this fails, the exception will "explain" why', 167, 4, 167, 53),
woosh.Token(woosh.DEDENT, '    ', 168, 0, 168, 4),
woosh.Token(woosh.DEDENT, '', 168, 4, 168, 4),
woosh.Token(woosh.NAME, 'import', 168, 4, 168, 10),
woosh.Token(woosh.NAME, 'pwd', 168, 11, 168, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 14, 169, 0),
woosh.Token(woosh.NAME, 'return', 169, 4, 169, 10),
woosh.Token(woosh.NAME, 'pwd', 169, 11, 169, 14),
woosh.Token(woosh.OP, '.', 169, 14, 169, 15),
woosh.Token(woosh.NAME, 'getpwuid', 169, 15, 169, 23),
woosh.Token(woosh.OP, '(', 169, 23, 169, 24),
woosh.Token(woosh.NAME, 'os', 169, 24, 169, 26),
woosh.Token(woosh.OP, '.', 169, 26, 169, 27),
woosh.Token(woosh.NAME, 'getuid', 169, 27, 169, 33),
woosh.Token(woosh.OP, '(', 169, 33, 169, 34),
woosh.Token(woosh.OP, ')', 169, 34, 169, 35),
woosh.Token(woosh.OP, ')', 169, 35, 169, 36),
woosh.Token(woosh.OP, '[', 169, 36, 169, 37),
woosh.Token(woosh.NUMBER, '0', 169, 37, 169, 38),
woosh.Token(woosh.OP, ']', 169, 38, 169, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 39, 170, 0),
woosh.Token(woosh.COMMENT, '# Bind the name getpass to the appropriate function', 171, 0, 171, 51),
woosh.Token(woosh.DEDENT, '', 172, 0, 172, 0),
woosh.Token(woosh.NAME, 'try', 172, 0, 172, 3),
woosh.Token(woosh.OP, ':', 172, 3, 172, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 4, 173, 0),
woosh.Token(woosh.INDENT, '    ', 173, 0, 173, 4),
woosh.Token(woosh.NAME, 'import', 173, 4, 173, 10),
woosh.Token(woosh.NAME, 'termios', 173, 11, 173, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 18, 174, 0),
woosh.Token(woosh.COMMENT, "# it's possible there is an incompatible termios from the", 174, 4, 174, 61),
woosh.Token(woosh.COMMENT, '# McMillan Installer, make sure we have a UNIX-compatible termios', 175, 4, 175, 69),
woosh.Token(woosh.NAME, 'termios', 176, 4, 176, 11),
woosh.Token(woosh.OP, '.', 176, 11, 176, 12),
woosh.Token(woosh.NAME, 'tcgetattr', 176, 12, 176, 21),
woosh.Token(woosh.OP, ',', 176, 21, 176, 22),
woosh.Token(woosh.NAME, 'termios', 176, 23, 176, 30),
woosh.Token(woosh.OP, '.', 176, 30, 176, 31),
woosh.Token(woosh.NAME, 'tcsetattr', 176, 31, 176, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 40, 177, 0),
woosh.Token(woosh.DEDENT, '', 177, 0, 177, 0),
woosh.Token(woosh.NAME, 'except', 177, 0, 177, 6),
woosh.Token(woosh.OP, '(', 177, 7, 177, 8),
woosh.Token(woosh.NAME, 'ImportError', 177, 8, 177, 19),
woosh.Token(woosh.OP, ',', 177, 19, 177, 20),
woosh.Token(woosh.NAME, 'AttributeError', 177, 21, 177, 35),
woosh.Token(woosh.OP, ')', 177, 35, 177, 36),
woosh.Token(woosh.OP, ':', 177, 36, 177, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 37, 178, 0),
woosh.Token(woosh.INDENT, '    ', 178, 0, 178, 4),
woosh.Token(woosh.NAME, 'try', 178, 4, 178, 7),
woosh.Token(woosh.OP, ':', 178, 7, 178, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 8, 179, 0),
woosh.Token(woosh.INDENT, '        ', 179, 0, 179, 8),
woosh.Token(woosh.NAME, 'import', 179, 8, 179, 14),
woosh.Token(woosh.NAME, 'msvcrt', 179, 15, 179, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 21, 180, 0),
woosh.Token(woosh.DEDENT, '    ', 180, 0, 180, 4),
woosh.Token(woosh.NAME, 'except', 180, 4, 180, 10),
woosh.Token(woosh.NAME, 'ImportError', 180, 11, 180, 22),
woosh.Token(woosh.OP, ':', 180, 22, 180, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 23, 181, 0),
woosh.Token(woosh.INDENT, '        ', 181, 0, 181, 8),
woosh.Token(woosh.NAME, 'getpass', 181, 8, 181, 15),
woosh.Token(woosh.OP, '=', 181, 16, 181, 17),
woosh.Token(woosh.NAME, 'fallback_getpass', 181, 18, 181, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 34, 182, 0),
woosh.Token(woosh.DEDENT, '    ', 182, 0, 182, 4),
woosh.Token(woosh.NAME, 'else', 182, 4, 182, 8),
woosh.Token(woosh.OP, ':', 182, 8, 182, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 9, 183, 0),
woosh.Token(woosh.INDENT, '        ', 183, 0, 183, 8),
woosh.Token(woosh.NAME, 'getpass', 183, 8, 183, 15),
woosh.Token(woosh.OP, '=', 183, 16, 183, 17),
woosh.Token(woosh.NAME, 'win_getpass', 183, 18, 183, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 29, 184, 0),
woosh.Token(woosh.DEDENT, '', 184, 0, 184, 0),
woosh.Token(woosh.DEDENT, '', 184, 0, 184, 0),
woosh.Token(woosh.NAME, 'else', 184, 0, 184, 4),
woosh.Token(woosh.OP, ':', 184, 4, 184, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 5, 185, 0),
woosh.Token(woosh.INDENT, '    ', 185, 0, 185, 4),
woosh.Token(woosh.NAME, 'getpass', 185, 4, 185, 11),
woosh.Token(woosh.OP, '=', 185, 12, 185, 13),
woosh.Token(woosh.NAME, 'unix_getpass', 185, 14, 185, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 26, 186, 0),
woosh.Token(woosh.DEDENT, '', 186, 0, 186, 0),
woosh.Token(woosh.EOF, '', 186, 0, 186, 0),
]
