
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../../sample/'
def test():
    with open('F:\\code\\woosh\\sample\\stdlib\\doctest.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.COMMENT, '# Module doctest.', 1, 0, 1, 17),
woosh.Token(woosh.COMMENT, '# Released to the public domain 16-Jan-2001, by Tim Peters (tim@python.org).', 2, 0, 2, 76),
woosh.Token(woosh.COMMENT, '# Major enhancements and refactoring by:', 3, 0, 3, 40),
woosh.Token(woosh.COMMENT, '#     Jim Fulton', 4, 0, 4, 16),
woosh.Token(woosh.COMMENT, '#     Edward Loper', 5, 0, 5, 18),
woosh.Token(woosh.COMMENT, '# Provided as-is; use at your own risk; no warranty; no promises; enjoy!', 7, 0, 7, 72),
woosh.Token(woosh.STRING, 'r"""Module doctest -- a framework for running examples in docstrings.\r\n\r\nIn simplest use, end each module M to be tested with:\r\n\r\ndef _test():\r\n    import doctest\r\n    doctest.testmod()\r\n\r\nif __name__ == "__main__":\r\n    _test()\r\n\r\nThen running the module as a script will cause the examples in the\r\ndocstrings to get executed and verified:\r\n\r\npython M.py\r\n\r\nThis won\'t display anything unless an example fails, in which case the\r\nfailing example(s) and the cause(s) of the failure(s) are printed to stdout\r\n(why not stderr? because stderr is a lame hack <0.2 wink>), and the final\r\nline of output is "Test failed.".\r\n\r\nRun it with the -v switch instead:\r\n\r\npython M.py -v\r\n\r\nand a detailed report of all examples tried is printed to stdout, along\r\nwith assorted summaries at the end.\r\n\r\nYou can force verbose mode by passing "verbose=True" to testmod, or prohibit\r\nit by passing "verbose=False".  In either of those cases, sys.argv is not\r\nexamined by testmod.\r\n\r\nThere are a variety of other ways to run doctests, including integration\r\nwith the unittest framework, and support for running non-Python text\r\nfiles containing doctests.  There are also many ways to override parts\r\nof doctest\'s default behaviors.  See the Library Reference Manual for\r\ndetails.\r\n"""', 9, 0, 46, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 46, 3, 47, 0),
woosh.Token(woosh.NAME, '__docformat__', 48, 0, 48, 13),
woosh.Token(woosh.OP, '=', 48, 14, 48, 15),
woosh.Token(woosh.STRING, "'reStructuredText en'", 48, 16, 48, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 48, 37, 49, 0),
woosh.Token(woosh.NAME, '__all__', 50, 0, 50, 7),
woosh.Token(woosh.OP, '=', 50, 8, 50, 9),
woosh.Token(woosh.OP, '[', 50, 10, 50, 11),
woosh.Token(woosh.COMMENT, '# 0, Option Flags', 51, 4, 51, 21),
woosh.Token(woosh.STRING, "'register_optionflag'", 52, 4, 52, 25),
woosh.Token(woosh.OP, ',', 52, 25, 52, 26),
woosh.Token(woosh.STRING, "'DONT_ACCEPT_TRUE_FOR_1'", 53, 4, 53, 28),
woosh.Token(woosh.OP, ',', 53, 28, 53, 29),
woosh.Token(woosh.STRING, "'DONT_ACCEPT_BLANKLINE'", 54, 4, 54, 27),
woosh.Token(woosh.OP, ',', 54, 27, 54, 28),
woosh.Token(woosh.STRING, "'NORMALIZE_WHITESPACE'", 55, 4, 55, 26),
woosh.Token(woosh.OP, ',', 55, 26, 55, 27),
woosh.Token(woosh.STRING, "'ELLIPSIS'", 56, 4, 56, 14),
woosh.Token(woosh.OP, ',', 56, 14, 56, 15),
woosh.Token(woosh.STRING, "'SKIP'", 57, 4, 57, 10),
woosh.Token(woosh.OP, ',', 57, 10, 57, 11),
woosh.Token(woosh.STRING, "'IGNORE_EXCEPTION_DETAIL'", 58, 4, 58, 29),
woosh.Token(woosh.OP, ',', 58, 29, 58, 30),
woosh.Token(woosh.STRING, "'COMPARISON_FLAGS'", 59, 4, 59, 22),
woosh.Token(woosh.OP, ',', 59, 22, 59, 23),
woosh.Token(woosh.STRING, "'REPORT_UDIFF'", 60, 4, 60, 18),
woosh.Token(woosh.OP, ',', 60, 18, 60, 19),
woosh.Token(woosh.STRING, "'REPORT_CDIFF'", 61, 4, 61, 18),
woosh.Token(woosh.OP, ',', 61, 18, 61, 19),
woosh.Token(woosh.STRING, "'REPORT_NDIFF'", 62, 4, 62, 18),
woosh.Token(woosh.OP, ',', 62, 18, 62, 19),
woosh.Token(woosh.STRING, "'REPORT_ONLY_FIRST_FAILURE'", 63, 4, 63, 31),
woosh.Token(woosh.OP, ',', 63, 31, 63, 32),
woosh.Token(woosh.STRING, "'REPORTING_FLAGS'", 64, 4, 64, 21),
woosh.Token(woosh.OP, ',', 64, 21, 64, 22),
woosh.Token(woosh.STRING, "'FAIL_FAST'", 65, 4, 65, 15),
woosh.Token(woosh.OP, ',', 65, 15, 65, 16),
woosh.Token(woosh.COMMENT, '# 1. Utility Functions', 66, 4, 66, 26),
woosh.Token(woosh.COMMENT, '# 2. Example & DocTest', 67, 4, 67, 26),
woosh.Token(woosh.STRING, "'Example'", 68, 4, 68, 13),
woosh.Token(woosh.OP, ',', 68, 13, 68, 14),
woosh.Token(woosh.STRING, "'DocTest'", 69, 4, 69, 13),
woosh.Token(woosh.OP, ',', 69, 13, 69, 14),
woosh.Token(woosh.COMMENT, '# 3. Doctest Parser', 70, 4, 70, 23),
woosh.Token(woosh.STRING, "'DocTestParser'", 71, 4, 71, 19),
woosh.Token(woosh.OP, ',', 71, 19, 71, 20),
woosh.Token(woosh.COMMENT, '# 4. Doctest Finder', 72, 4, 72, 23),
woosh.Token(woosh.STRING, "'DocTestFinder'", 73, 4, 73, 19),
woosh.Token(woosh.OP, ',', 73, 19, 73, 20),
woosh.Token(woosh.COMMENT, '# 5. Doctest Runner', 74, 4, 74, 23),
woosh.Token(woosh.STRING, "'DocTestRunner'", 75, 4, 75, 19),
woosh.Token(woosh.OP, ',', 75, 19, 75, 20),
woosh.Token(woosh.STRING, "'OutputChecker'", 76, 4, 76, 19),
woosh.Token(woosh.OP, ',', 76, 19, 76, 20),
woosh.Token(woosh.STRING, "'DocTestFailure'", 77, 4, 77, 20),
woosh.Token(woosh.OP, ',', 77, 20, 77, 21),
woosh.Token(woosh.STRING, "'UnexpectedException'", 78, 4, 78, 25),
woosh.Token(woosh.OP, ',', 78, 25, 78, 26),
woosh.Token(woosh.STRING, "'DebugRunner'", 79, 4, 79, 17),
woosh.Token(woosh.OP, ',', 79, 17, 79, 18),
woosh.Token(woosh.COMMENT, '# 6. Test Functions', 80, 4, 80, 23),
woosh.Token(woosh.STRING, "'testmod'", 81, 4, 81, 13),
woosh.Token(woosh.OP, ',', 81, 13, 81, 14),
woosh.Token(woosh.STRING, "'testfile'", 82, 4, 82, 14),
woosh.Token(woosh.OP, ',', 82, 14, 82, 15),
woosh.Token(woosh.STRING, "'run_docstring_examples'", 83, 4, 83, 28),
woosh.Token(woosh.OP, ',', 83, 28, 83, 29),
woosh.Token(woosh.COMMENT, '# 7. Unittest Support', 84, 4, 84, 25),
woosh.Token(woosh.STRING, "'DocTestSuite'", 85, 4, 85, 18),
woosh.Token(woosh.OP, ',', 85, 18, 85, 19),
woosh.Token(woosh.STRING, "'DocFileSuite'", 86, 4, 86, 18),
woosh.Token(woosh.OP, ',', 86, 18, 86, 19),
woosh.Token(woosh.STRING, "'set_unittest_reportflags'", 87, 4, 87, 30),
woosh.Token(woosh.OP, ',', 87, 30, 87, 31),
woosh.Token(woosh.COMMENT, '# 8. Debugging Support', 88, 4, 88, 26),
woosh.Token(woosh.STRING, "'script_from_examples'", 89, 4, 89, 26),
woosh.Token(woosh.OP, ',', 89, 26, 89, 27),
woosh.Token(woosh.STRING, "'testsource'", 90, 4, 90, 16),
woosh.Token(woosh.OP, ',', 90, 16, 90, 17),
woosh.Token(woosh.STRING, "'debug_src'", 91, 4, 91, 15),
woosh.Token(woosh.OP, ',', 91, 15, 91, 16),
woosh.Token(woosh.STRING, "'debug'", 92, 4, 92, 11),
woosh.Token(woosh.OP, ',', 92, 11, 92, 12),
woosh.Token(woosh.OP, ']', 93, 0, 93, 1),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 1, 94, 0),
woosh.Token(woosh.NAME, 'import', 95, 0, 95, 6),
woosh.Token(woosh.NAME, '__future__', 95, 7, 95, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 17, 96, 0),
woosh.Token(woosh.NAME, 'import', 96, 0, 96, 6),
woosh.Token(woosh.NAME, 'difflib', 96, 7, 96, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 14, 97, 0),
woosh.Token(woosh.NAME, 'import', 97, 0, 97, 6),
woosh.Token(woosh.NAME, 'inspect', 97, 7, 97, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 14, 98, 0),
woosh.Token(woosh.NAME, 'import', 98, 0, 98, 6),
woosh.Token(woosh.NAME, 'linecache', 98, 7, 98, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 16, 99, 0),
woosh.Token(woosh.NAME, 'import', 99, 0, 99, 6),
woosh.Token(woosh.NAME, 'os', 99, 7, 99, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 9, 100, 0),
woosh.Token(woosh.NAME, 'import', 100, 0, 100, 6),
woosh.Token(woosh.NAME, 'pdb', 100, 7, 100, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 100, 10, 101, 0),
woosh.Token(woosh.NAME, 'import', 101, 0, 101, 6),
woosh.Token(woosh.NAME, 're', 101, 7, 101, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 101, 9, 102, 0),
woosh.Token(woosh.NAME, 'import', 102, 0, 102, 6),
woosh.Token(woosh.NAME, 'sys', 102, 7, 102, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 102, 10, 103, 0),
woosh.Token(woosh.NAME, 'import', 103, 0, 103, 6),
woosh.Token(woosh.NAME, 'traceback', 103, 7, 103, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 103, 16, 104, 0),
woosh.Token(woosh.NAME, 'import', 104, 0, 104, 6),
woosh.Token(woosh.NAME, 'unittest', 104, 7, 104, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 15, 105, 0),
woosh.Token(woosh.NAME, 'from', 105, 0, 105, 4),
woosh.Token(woosh.NAME, 'io', 105, 5, 105, 7),
woosh.Token(woosh.NAME, 'import', 105, 8, 105, 14),
woosh.Token(woosh.NAME, 'StringIO', 105, 15, 105, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 23, 106, 0),
woosh.Token(woosh.NAME, 'from', 106, 0, 106, 4),
woosh.Token(woosh.NAME, 'collections', 106, 5, 106, 16),
woosh.Token(woosh.NAME, 'import', 106, 17, 106, 23),
woosh.Token(woosh.NAME, 'namedtuple', 106, 24, 106, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 34, 107, 0),
woosh.Token(woosh.NAME, 'TestResults', 108, 0, 108, 11),
woosh.Token(woosh.OP, '=', 108, 12, 108, 13),
woosh.Token(woosh.NAME, 'namedtuple', 108, 14, 108, 24),
woosh.Token(woosh.OP, '(', 108, 24, 108, 25),
woosh.Token(woosh.STRING, "'TestResults'", 108, 25, 108, 38),
woosh.Token(woosh.OP, ',', 108, 38, 108, 39),
woosh.Token(woosh.STRING, "'failed attempted'", 108, 40, 108, 58),
woosh.Token(woosh.OP, ')', 108, 58, 108, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 59, 109, 0),
woosh.Token(woosh.COMMENT, '# There are 4 basic classes:', 110, 0, 110, 28),
woosh.Token(woosh.COMMENT, '#  - Example: a <source, want> pair, plus an intra-docstring line number.', 111, 0, 111, 73),
woosh.Token(woosh.COMMENT, '#  - DocTest: a collection of examples, parsed from a docstring, plus', 112, 0, 112, 69),
woosh.Token(woosh.COMMENT, '#    info about where the docstring came from (name, filename, lineno).', 113, 0, 113, 71),
woosh.Token(woosh.COMMENT, "#  - DocTestFinder: extracts DocTests from a given object's docstring and", 114, 0, 114, 73),
woosh.Token(woosh.COMMENT, "#    its contained objects' docstrings.", 115, 0, 115, 39),
woosh.Token(woosh.COMMENT, '#  - DocTestRunner: runs DocTest cases, and accumulates statistics.', 116, 0, 116, 67),
woosh.Token(woosh.COMMENT, '#', 117, 0, 117, 1),
woosh.Token(woosh.COMMENT, '# So the basic picture is:', 118, 0, 118, 26),
woosh.Token(woosh.COMMENT, '#', 119, 0, 119, 1),
woosh.Token(woosh.COMMENT, '#                             list of:', 120, 0, 120, 38),
woosh.Token(woosh.COMMENT, '# +------+                   +---------+                   +-------+', 121, 0, 121, 68),
woosh.Token(woosh.COMMENT, '# |object| --DocTestFinder-> | DocTest | --DocTestRunner-> |results|', 122, 0, 122, 68),
woosh.Token(woosh.COMMENT, '# +------+                   +---------+                   +-------+', 123, 0, 123, 68),
woosh.Token(woosh.COMMENT, '#                            | Example |', 124, 0, 124, 40),
woosh.Token(woosh.COMMENT, '#                            |   ...   |', 125, 0, 125, 40),
woosh.Token(woosh.COMMENT, '#                            | Example |', 126, 0, 126, 40),
woosh.Token(woosh.COMMENT, '#                            +---------+', 127, 0, 127, 40),
woosh.Token(woosh.COMMENT, '# Option constants.', 129, 0, 129, 19),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 131, 0, 131, 19),
woosh.Token(woosh.OP, '=', 131, 20, 131, 21),
woosh.Token(woosh.OP, '{', 131, 22, 131, 23),
woosh.Token(woosh.OP, '}', 131, 23, 131, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 24, 132, 0),
woosh.Token(woosh.NAME, 'def', 132, 0, 132, 3),
woosh.Token(woosh.NAME, 'register_optionflag', 132, 4, 132, 23),
woosh.Token(woosh.OP, '(', 132, 23, 132, 24),
woosh.Token(woosh.NAME, 'name', 132, 24, 132, 28),
woosh.Token(woosh.OP, ')', 132, 28, 132, 29),
woosh.Token(woosh.OP, ':', 132, 29, 132, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 30, 133, 0),
woosh.Token(woosh.COMMENT, '# Create a new flag unless `name` is already known.', 133, 4, 133, 55),
woosh.Token(woosh.INDENT, '    ', 134, 0, 134, 4),
woosh.Token(woosh.NAME, 'return', 134, 4, 134, 10),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 134, 11, 134, 30),
woosh.Token(woosh.OP, '.', 134, 30, 134, 31),
woosh.Token(woosh.NAME, 'setdefault', 134, 31, 134, 41),
woosh.Token(woosh.OP, '(', 134, 41, 134, 42),
woosh.Token(woosh.NAME, 'name', 134, 42, 134, 46),
woosh.Token(woosh.OP, ',', 134, 46, 134, 47),
woosh.Token(woosh.NUMBER, '1', 134, 48, 134, 49),
woosh.Token(woosh.OP, '<<', 134, 50, 134, 52),
woosh.Token(woosh.NAME, 'len', 134, 53, 134, 56),
woosh.Token(woosh.OP, '(', 134, 56, 134, 57),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 134, 57, 134, 76),
woosh.Token(woosh.OP, ')', 134, 76, 134, 77),
woosh.Token(woosh.OP, ')', 134, 77, 134, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 78, 135, 0),
woosh.Token(woosh.DEDENT, '', 136, 0, 136, 0),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_TRUE_FOR_1', 136, 0, 136, 22),
woosh.Token(woosh.OP, '=', 136, 23, 136, 24),
woosh.Token(woosh.NAME, 'register_optionflag', 136, 25, 136, 44),
woosh.Token(woosh.OP, '(', 136, 44, 136, 45),
woosh.Token(woosh.STRING, "'DONT_ACCEPT_TRUE_FOR_1'", 136, 45, 136, 69),
woosh.Token(woosh.OP, ')', 136, 69, 136, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 70, 137, 0),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_BLANKLINE', 137, 0, 137, 21),
woosh.Token(woosh.OP, '=', 137, 22, 137, 23),
woosh.Token(woosh.NAME, 'register_optionflag', 137, 24, 137, 43),
woosh.Token(woosh.OP, '(', 137, 43, 137, 44),
woosh.Token(woosh.STRING, "'DONT_ACCEPT_BLANKLINE'", 137, 44, 137, 67),
woosh.Token(woosh.OP, ')', 137, 67, 137, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 68, 138, 0),
woosh.Token(woosh.NAME, 'NORMALIZE_WHITESPACE', 138, 0, 138, 20),
woosh.Token(woosh.OP, '=', 138, 21, 138, 22),
woosh.Token(woosh.NAME, 'register_optionflag', 138, 23, 138, 42),
woosh.Token(woosh.OP, '(', 138, 42, 138, 43),
woosh.Token(woosh.STRING, "'NORMALIZE_WHITESPACE'", 138, 43, 138, 65),
woosh.Token(woosh.OP, ')', 138, 65, 138, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 66, 139, 0),
woosh.Token(woosh.NAME, 'ELLIPSIS', 139, 0, 139, 8),
woosh.Token(woosh.OP, '=', 139, 9, 139, 10),
woosh.Token(woosh.NAME, 'register_optionflag', 139, 11, 139, 30),
woosh.Token(woosh.OP, '(', 139, 30, 139, 31),
woosh.Token(woosh.STRING, "'ELLIPSIS'", 139, 31, 139, 41),
woosh.Token(woosh.OP, ')', 139, 41, 139, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 42, 140, 0),
woosh.Token(woosh.NAME, 'SKIP', 140, 0, 140, 4),
woosh.Token(woosh.OP, '=', 140, 5, 140, 6),
woosh.Token(woosh.NAME, 'register_optionflag', 140, 7, 140, 26),
woosh.Token(woosh.OP, '(', 140, 26, 140, 27),
woosh.Token(woosh.STRING, "'SKIP'", 140, 27, 140, 33),
woosh.Token(woosh.OP, ')', 140, 33, 140, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 34, 141, 0),
woosh.Token(woosh.NAME, 'IGNORE_EXCEPTION_DETAIL', 141, 0, 141, 23),
woosh.Token(woosh.OP, '=', 141, 24, 141, 25),
woosh.Token(woosh.NAME, 'register_optionflag', 141, 26, 141, 45),
woosh.Token(woosh.OP, '(', 141, 45, 141, 46),
woosh.Token(woosh.STRING, "'IGNORE_EXCEPTION_DETAIL'", 141, 46, 141, 71),
woosh.Token(woosh.OP, ')', 141, 71, 141, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 72, 142, 0),
woosh.Token(woosh.NAME, 'COMPARISON_FLAGS', 143, 0, 143, 16),
woosh.Token(woosh.OP, '=', 143, 17, 143, 18),
woosh.Token(woosh.OP, '(', 143, 19, 143, 20),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_TRUE_FOR_1', 143, 20, 143, 42),
woosh.Token(woosh.OP, '|', 143, 43, 143, 44),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_BLANKLINE', 144, 20, 144, 41),
woosh.Token(woosh.OP, '|', 144, 42, 144, 43),
woosh.Token(woosh.NAME, 'NORMALIZE_WHITESPACE', 145, 20, 145, 40),
woosh.Token(woosh.OP, '|', 145, 41, 145, 42),
woosh.Token(woosh.NAME, 'ELLIPSIS', 146, 20, 146, 28),
woosh.Token(woosh.OP, '|', 146, 29, 146, 30),
woosh.Token(woosh.NAME, 'SKIP', 147, 20, 147, 24),
woosh.Token(woosh.OP, '|', 147, 25, 147, 26),
woosh.Token(woosh.NAME, 'IGNORE_EXCEPTION_DETAIL', 148, 20, 148, 43),
woosh.Token(woosh.OP, ')', 148, 43, 148, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 44, 149, 0),
woosh.Token(woosh.NAME, 'REPORT_UDIFF', 150, 0, 150, 12),
woosh.Token(woosh.OP, '=', 150, 13, 150, 14),
woosh.Token(woosh.NAME, 'register_optionflag', 150, 15, 150, 34),
woosh.Token(woosh.OP, '(', 150, 34, 150, 35),
woosh.Token(woosh.STRING, "'REPORT_UDIFF'", 150, 35, 150, 49),
woosh.Token(woosh.OP, ')', 150, 49, 150, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 50, 151, 0),
woosh.Token(woosh.NAME, 'REPORT_CDIFF', 151, 0, 151, 12),
woosh.Token(woosh.OP, '=', 151, 13, 151, 14),
woosh.Token(woosh.NAME, 'register_optionflag', 151, 15, 151, 34),
woosh.Token(woosh.OP, '(', 151, 34, 151, 35),
woosh.Token(woosh.STRING, "'REPORT_CDIFF'", 151, 35, 151, 49),
woosh.Token(woosh.OP, ')', 151, 49, 151, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 50, 152, 0),
woosh.Token(woosh.NAME, 'REPORT_NDIFF', 152, 0, 152, 12),
woosh.Token(woosh.OP, '=', 152, 13, 152, 14),
woosh.Token(woosh.NAME, 'register_optionflag', 152, 15, 152, 34),
woosh.Token(woosh.OP, '(', 152, 34, 152, 35),
woosh.Token(woosh.STRING, "'REPORT_NDIFF'", 152, 35, 152, 49),
woosh.Token(woosh.OP, ')', 152, 49, 152, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 50, 153, 0),
woosh.Token(woosh.NAME, 'REPORT_ONLY_FIRST_FAILURE', 153, 0, 153, 25),
woosh.Token(woosh.OP, '=', 153, 26, 153, 27),
woosh.Token(woosh.NAME, 'register_optionflag', 153, 28, 153, 47),
woosh.Token(woosh.OP, '(', 153, 47, 153, 48),
woosh.Token(woosh.STRING, "'REPORT_ONLY_FIRST_FAILURE'", 153, 48, 153, 75),
woosh.Token(woosh.OP, ')', 153, 75, 153, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 76, 154, 0),
woosh.Token(woosh.NAME, 'FAIL_FAST', 154, 0, 154, 9),
woosh.Token(woosh.OP, '=', 154, 10, 154, 11),
woosh.Token(woosh.NAME, 'register_optionflag', 154, 12, 154, 31),
woosh.Token(woosh.OP, '(', 154, 31, 154, 32),
woosh.Token(woosh.STRING, "'FAIL_FAST'", 154, 32, 154, 43),
woosh.Token(woosh.OP, ')', 154, 43, 154, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 44, 155, 0),
woosh.Token(woosh.NAME, 'REPORTING_FLAGS', 156, 0, 156, 15),
woosh.Token(woosh.OP, '=', 156, 16, 156, 17),
woosh.Token(woosh.OP, '(', 156, 18, 156, 19),
woosh.Token(woosh.NAME, 'REPORT_UDIFF', 156, 19, 156, 31),
woosh.Token(woosh.OP, '|', 156, 32, 156, 33),
woosh.Token(woosh.NAME, 'REPORT_CDIFF', 157, 19, 157, 31),
woosh.Token(woosh.OP, '|', 157, 32, 157, 33),
woosh.Token(woosh.NAME, 'REPORT_NDIFF', 158, 19, 158, 31),
woosh.Token(woosh.OP, '|', 158, 32, 158, 33),
woosh.Token(woosh.NAME, 'REPORT_ONLY_FIRST_FAILURE', 159, 19, 159, 44),
woosh.Token(woosh.OP, '|', 159, 45, 159, 46),
woosh.Token(woosh.NAME, 'FAIL_FAST', 160, 19, 160, 28),
woosh.Token(woosh.OP, ')', 160, 28, 160, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 29, 161, 0),
woosh.Token(woosh.COMMENT, '# Special string markers for use in `want` strings:', 162, 0, 162, 51),
woosh.Token(woosh.NAME, 'BLANKLINE_MARKER', 163, 0, 163, 16),
woosh.Token(woosh.OP, '=', 163, 17, 163, 18),
woosh.Token(woosh.STRING, "'<BLANKLINE>'", 163, 19, 163, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 32, 164, 0),
woosh.Token(woosh.NAME, 'ELLIPSIS_MARKER', 164, 0, 164, 15),
woosh.Token(woosh.OP, '=', 164, 16, 164, 17),
woosh.Token(woosh.STRING, "'...'", 164, 18, 164, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 23, 165, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 166, 0, 166, 70),
woosh.Token(woosh.COMMENT, '## Table of Contents', 167, 0, 167, 20),
woosh.Token(woosh.COMMENT, '######################################################################', 168, 0, 168, 70),
woosh.Token(woosh.COMMENT, '#  1. Utility Functions', 169, 0, 169, 23),
woosh.Token(woosh.COMMENT, '#  2. Example & DocTest -- store test cases', 170, 0, 170, 43),
woosh.Token(woosh.COMMENT, '#  3. DocTest Parser -- extracts examples from strings', 171, 0, 171, 54),
woosh.Token(woosh.COMMENT, '#  4. DocTest Finder -- extracts test cases from objects', 172, 0, 172, 56),
woosh.Token(woosh.COMMENT, '#  5. DocTest Runner -- runs test cases', 173, 0, 173, 39),
woosh.Token(woosh.COMMENT, '#  6. Test Functions -- convenient wrappers for testing', 174, 0, 174, 55),
woosh.Token(woosh.COMMENT, '#  7. Unittest Support', 175, 0, 175, 22),
woosh.Token(woosh.COMMENT, '#  8. Debugging Support', 176, 0, 176, 23),
woosh.Token(woosh.COMMENT, '#  9. Example Usage', 177, 0, 177, 19),
woosh.Token(woosh.COMMENT, '######################################################################', 179, 0, 179, 70),
woosh.Token(woosh.COMMENT, '## 1. Utility Functions', 180, 0, 180, 23),
woosh.Token(woosh.COMMENT, '######################################################################', 181, 0, 181, 70),
woosh.Token(woosh.NAME, 'def', 183, 0, 183, 3),
woosh.Token(woosh.NAME, '_extract_future_flags', 183, 4, 183, 25),
woosh.Token(woosh.OP, '(', 183, 25, 183, 26),
woosh.Token(woosh.NAME, 'globs', 183, 26, 183, 31),
woosh.Token(woosh.OP, ')', 183, 31, 183, 32),
woosh.Token(woosh.OP, ':', 183, 32, 183, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 33, 184, 0),
woosh.Token(woosh.INDENT, '    ', 184, 0, 184, 4),
woosh.Token(woosh.STRING, '"""\r\n    Return the compiler-flags associated with the future features that\r\n    have been imported into the given namespace (globs).\r\n    """', 184, 4, 187, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 7, 188, 0),
woosh.Token(woosh.NAME, 'flags', 188, 4, 188, 9),
woosh.Token(woosh.OP, '=', 188, 10, 188, 11),
woosh.Token(woosh.NUMBER, '0', 188, 12, 188, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 13, 189, 0),
woosh.Token(woosh.NAME, 'for', 189, 4, 189, 7),
woosh.Token(woosh.NAME, 'fname', 189, 8, 189, 13),
woosh.Token(woosh.NAME, 'in', 189, 14, 189, 16),
woosh.Token(woosh.NAME, '__future__', 189, 17, 189, 27),
woosh.Token(woosh.OP, '.', 189, 27, 189, 28),
woosh.Token(woosh.NAME, 'all_feature_names', 189, 28, 189, 45),
woosh.Token(woosh.OP, ':', 189, 45, 189, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 189, 46, 190, 0),
woosh.Token(woosh.INDENT, '        ', 190, 0, 190, 8),
woosh.Token(woosh.NAME, 'feature', 190, 8, 190, 15),
woosh.Token(woosh.OP, '=', 190, 16, 190, 17),
woosh.Token(woosh.NAME, 'globs', 190, 18, 190, 23),
woosh.Token(woosh.OP, '.', 190, 23, 190, 24),
woosh.Token(woosh.NAME, 'get', 190, 24, 190, 27),
woosh.Token(woosh.OP, '(', 190, 27, 190, 28),
woosh.Token(woosh.NAME, 'fname', 190, 28, 190, 33),
woosh.Token(woosh.OP, ',', 190, 33, 190, 34),
woosh.Token(woosh.NAME, 'None', 190, 35, 190, 39),
woosh.Token(woosh.OP, ')', 190, 39, 190, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 40, 191, 0),
woosh.Token(woosh.NAME, 'if', 191, 8, 191, 10),
woosh.Token(woosh.NAME, 'feature', 191, 11, 191, 18),
woosh.Token(woosh.NAME, 'is', 191, 19, 191, 21),
woosh.Token(woosh.NAME, 'getattr', 191, 22, 191, 29),
woosh.Token(woosh.OP, '(', 191, 29, 191, 30),
woosh.Token(woosh.NAME, '__future__', 191, 30, 191, 40),
woosh.Token(woosh.OP, ',', 191, 40, 191, 41),
woosh.Token(woosh.NAME, 'fname', 191, 42, 191, 47),
woosh.Token(woosh.OP, ')', 191, 47, 191, 48),
woosh.Token(woosh.OP, ':', 191, 48, 191, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 49, 192, 0),
woosh.Token(woosh.INDENT, '            ', 192, 0, 192, 12),
woosh.Token(woosh.NAME, 'flags', 192, 12, 192, 17),
woosh.Token(woosh.OP, '|=', 192, 18, 192, 20),
woosh.Token(woosh.NAME, 'feature', 192, 21, 192, 28),
woosh.Token(woosh.OP, '.', 192, 28, 192, 29),
woosh.Token(woosh.NAME, 'compiler_flag', 192, 29, 192, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 42, 193, 0),
woosh.Token(woosh.DEDENT, '    ', 193, 0, 193, 4),
woosh.Token(woosh.DEDENT, '', 193, 4, 193, 4),
woosh.Token(woosh.NAME, 'return', 193, 4, 193, 10),
woosh.Token(woosh.NAME, 'flags', 193, 11, 193, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 16, 194, 0),
woosh.Token(woosh.DEDENT, '', 195, 0, 195, 0),
woosh.Token(woosh.NAME, 'def', 195, 0, 195, 3),
woosh.Token(woosh.NAME, '_normalize_module', 195, 4, 195, 21),
woosh.Token(woosh.OP, '(', 195, 21, 195, 22),
woosh.Token(woosh.NAME, 'module', 195, 22, 195, 28),
woosh.Token(woosh.OP, ',', 195, 28, 195, 29),
woosh.Token(woosh.NAME, 'depth', 195, 30, 195, 35),
woosh.Token(woosh.OP, '=', 195, 35, 195, 36),
woosh.Token(woosh.NUMBER, '2', 195, 36, 195, 37),
woosh.Token(woosh.OP, ')', 195, 37, 195, 38),
woosh.Token(woosh.OP, ':', 195, 38, 195, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 39, 196, 0),
woosh.Token(woosh.INDENT, '    ', 196, 0, 196, 4),
woosh.Token(woosh.STRING, '"""\r\n    Return the module specified by `module`.  In particular:\r\n      - If `module` is a module, then return module.\r\n      - If `module` is a string, then import and return the\r\n        module with that name.\r\n      - If `module` is None, then return the calling module.\r\n        The calling module is assumed to be the module of\r\n        the stack frame at the given depth in the call stack.\r\n    """', 196, 4, 204, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 7, 205, 0),
woosh.Token(woosh.NAME, 'if', 205, 4, 205, 6),
woosh.Token(woosh.NAME, 'inspect', 205, 7, 205, 14),
woosh.Token(woosh.OP, '.', 205, 14, 205, 15),
woosh.Token(woosh.NAME, 'ismodule', 205, 15, 205, 23),
woosh.Token(woosh.OP, '(', 205, 23, 205, 24),
woosh.Token(woosh.NAME, 'module', 205, 24, 205, 30),
woosh.Token(woosh.OP, ')', 205, 30, 205, 31),
woosh.Token(woosh.OP, ':', 205, 31, 205, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 32, 206, 0),
woosh.Token(woosh.INDENT, '        ', 206, 0, 206, 8),
woosh.Token(woosh.NAME, 'return', 206, 8, 206, 14),
woosh.Token(woosh.NAME, 'module', 206, 15, 206, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 21, 207, 0),
woosh.Token(woosh.DEDENT, '    ', 207, 0, 207, 4),
woosh.Token(woosh.NAME, 'elif', 207, 4, 207, 8),
woosh.Token(woosh.NAME, 'isinstance', 207, 9, 207, 19),
woosh.Token(woosh.OP, '(', 207, 19, 207, 20),
woosh.Token(woosh.NAME, 'module', 207, 20, 207, 26),
woosh.Token(woosh.OP, ',', 207, 26, 207, 27),
woosh.Token(woosh.NAME, 'str', 207, 28, 207, 31),
woosh.Token(woosh.OP, ')', 207, 31, 207, 32),
woosh.Token(woosh.OP, ':', 207, 32, 207, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 33, 208, 0),
woosh.Token(woosh.INDENT, '        ', 208, 0, 208, 8),
woosh.Token(woosh.NAME, 'return', 208, 8, 208, 14),
woosh.Token(woosh.NAME, '__import__', 208, 15, 208, 25),
woosh.Token(woosh.OP, '(', 208, 25, 208, 26),
woosh.Token(woosh.NAME, 'module', 208, 26, 208, 32),
woosh.Token(woosh.OP, ',', 208, 32, 208, 33),
woosh.Token(woosh.NAME, 'globals', 208, 34, 208, 41),
woosh.Token(woosh.OP, '(', 208, 41, 208, 42),
woosh.Token(woosh.OP, ')', 208, 42, 208, 43),
woosh.Token(woosh.OP, ',', 208, 43, 208, 44),
woosh.Token(woosh.NAME, 'locals', 208, 45, 208, 51),
woosh.Token(woosh.OP, '(', 208, 51, 208, 52),
woosh.Token(woosh.OP, ')', 208, 52, 208, 53),
woosh.Token(woosh.OP, ',', 208, 53, 208, 54),
woosh.Token(woosh.OP, '[', 208, 55, 208, 56),
woosh.Token(woosh.STRING, '"*"', 208, 56, 208, 59),
woosh.Token(woosh.OP, ']', 208, 59, 208, 60),
woosh.Token(woosh.OP, ')', 208, 60, 208, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 61, 209, 0),
woosh.Token(woosh.DEDENT, '    ', 209, 0, 209, 4),
woosh.Token(woosh.NAME, 'elif', 209, 4, 209, 8),
woosh.Token(woosh.NAME, 'module', 209, 9, 209, 15),
woosh.Token(woosh.NAME, 'is', 209, 16, 209, 18),
woosh.Token(woosh.NAME, 'None', 209, 19, 209, 23),
woosh.Token(woosh.OP, ':', 209, 23, 209, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 24, 210, 0),
woosh.Token(woosh.INDENT, '        ', 210, 0, 210, 8),
woosh.Token(woosh.NAME, 'return', 210, 8, 210, 14),
woosh.Token(woosh.NAME, 'sys', 210, 15, 210, 18),
woosh.Token(woosh.OP, '.', 210, 18, 210, 19),
woosh.Token(woosh.NAME, 'modules', 210, 19, 210, 26),
woosh.Token(woosh.OP, '[', 210, 26, 210, 27),
woosh.Token(woosh.NAME, 'sys', 210, 27, 210, 30),
woosh.Token(woosh.OP, '.', 210, 30, 210, 31),
woosh.Token(woosh.NAME, '_getframe', 210, 31, 210, 40),
woosh.Token(woosh.OP, '(', 210, 40, 210, 41),
woosh.Token(woosh.NAME, 'depth', 210, 41, 210, 46),
woosh.Token(woosh.OP, ')', 210, 46, 210, 47),
woosh.Token(woosh.OP, '.', 210, 47, 210, 48),
woosh.Token(woosh.NAME, 'f_globals', 210, 48, 210, 57),
woosh.Token(woosh.OP, '[', 210, 57, 210, 58),
woosh.Token(woosh.STRING, "'__name__'", 210, 58, 210, 68),
woosh.Token(woosh.OP, ']', 210, 68, 210, 69),
woosh.Token(woosh.OP, ']', 210, 69, 210, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 70, 211, 0),
woosh.Token(woosh.DEDENT, '    ', 211, 0, 211, 4),
woosh.Token(woosh.NAME, 'else', 211, 4, 211, 8),
woosh.Token(woosh.OP, ':', 211, 8, 211, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 9, 212, 0),
woosh.Token(woosh.INDENT, '        ', 212, 0, 212, 8),
woosh.Token(woosh.NAME, 'raise', 212, 8, 212, 13),
woosh.Token(woosh.NAME, 'TypeError', 212, 14, 212, 23),
woosh.Token(woosh.OP, '(', 212, 23, 212, 24),
woosh.Token(woosh.STRING, '"Expected a module, string, or None"', 212, 24, 212, 60),
woosh.Token(woosh.OP, ')', 212, 60, 212, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 61, 213, 0),
woosh.Token(woosh.DEDENT, '', 214, 0, 214, 0),
woosh.Token(woosh.DEDENT, '', 214, 0, 214, 0),
woosh.Token(woosh.NAME, 'def', 214, 0, 214, 3),
woosh.Token(woosh.NAME, '_newline_convert', 214, 4, 214, 20),
woosh.Token(woosh.OP, '(', 214, 20, 214, 21),
woosh.Token(woosh.NAME, 'data', 214, 21, 214, 25),
woosh.Token(woosh.OP, ')', 214, 25, 214, 26),
woosh.Token(woosh.OP, ':', 214, 26, 214, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 27, 215, 0),
woosh.Token(woosh.COMMENT, '# We have two cases to cover and we need to make sure we do', 215, 4, 215, 63),
woosh.Token(woosh.COMMENT, '# them in the right order', 216, 4, 216, 29),
woosh.Token(woosh.INDENT, '    ', 217, 0, 217, 4),
woosh.Token(woosh.NAME, 'for', 217, 4, 217, 7),
woosh.Token(woosh.NAME, 'newline', 217, 8, 217, 15),
woosh.Token(woosh.NAME, 'in', 217, 16, 217, 18),
woosh.Token(woosh.OP, '(', 217, 19, 217, 20),
woosh.Token(woosh.STRING, "'\\r\\n'", 217, 20, 217, 26),
woosh.Token(woosh.OP, ',', 217, 26, 217, 27),
woosh.Token(woosh.STRING, "'\\r'", 217, 28, 217, 32),
woosh.Token(woosh.OP, ')', 217, 32, 217, 33),
woosh.Token(woosh.OP, ':', 217, 33, 217, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 34, 218, 0),
woosh.Token(woosh.INDENT, '        ', 218, 0, 218, 8),
woosh.Token(woosh.NAME, 'data', 218, 8, 218, 12),
woosh.Token(woosh.OP, '=', 218, 13, 218, 14),
woosh.Token(woosh.NAME, 'data', 218, 15, 218, 19),
woosh.Token(woosh.OP, '.', 218, 19, 218, 20),
woosh.Token(woosh.NAME, 'replace', 218, 20, 218, 27),
woosh.Token(woosh.OP, '(', 218, 27, 218, 28),
woosh.Token(woosh.NAME, 'newline', 218, 28, 218, 35),
woosh.Token(woosh.OP, ',', 218, 35, 218, 36),
woosh.Token(woosh.STRING, "'\\n'", 218, 37, 218, 41),
woosh.Token(woosh.OP, ')', 218, 41, 218, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 42, 219, 0),
woosh.Token(woosh.DEDENT, '    ', 219, 0, 219, 4),
woosh.Token(woosh.NAME, 'return', 219, 4, 219, 10),
woosh.Token(woosh.NAME, 'data', 219, 11, 219, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 15, 220, 0),
woosh.Token(woosh.DEDENT, '', 221, 0, 221, 0),
woosh.Token(woosh.NAME, 'def', 221, 0, 221, 3),
woosh.Token(woosh.NAME, '_load_testfile', 221, 4, 221, 18),
woosh.Token(woosh.OP, '(', 221, 18, 221, 19),
woosh.Token(woosh.NAME, 'filename', 221, 19, 221, 27),
woosh.Token(woosh.OP, ',', 221, 27, 221, 28),
woosh.Token(woosh.NAME, 'package', 221, 29, 221, 36),
woosh.Token(woosh.OP, ',', 221, 36, 221, 37),
woosh.Token(woosh.NAME, 'module_relative', 221, 38, 221, 53),
woosh.Token(woosh.OP, ',', 221, 53, 221, 54),
woosh.Token(woosh.NAME, 'encoding', 221, 55, 221, 63),
woosh.Token(woosh.OP, ')', 221, 63, 221, 64),
woosh.Token(woosh.OP, ':', 221, 64, 221, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 65, 222, 0),
woosh.Token(woosh.INDENT, '    ', 222, 0, 222, 4),
woosh.Token(woosh.NAME, 'if', 222, 4, 222, 6),
woosh.Token(woosh.NAME, 'module_relative', 222, 7, 222, 22),
woosh.Token(woosh.OP, ':', 222, 22, 222, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 23, 223, 0),
woosh.Token(woosh.INDENT, '        ', 223, 0, 223, 8),
woosh.Token(woosh.NAME, 'package', 223, 8, 223, 15),
woosh.Token(woosh.OP, '=', 223, 16, 223, 17),
woosh.Token(woosh.NAME, '_normalize_module', 223, 18, 223, 35),
woosh.Token(woosh.OP, '(', 223, 35, 223, 36),
woosh.Token(woosh.NAME, 'package', 223, 36, 223, 43),
woosh.Token(woosh.OP, ',', 223, 43, 223, 44),
woosh.Token(woosh.NUMBER, '3', 223, 45, 223, 46),
woosh.Token(woosh.OP, ')', 223, 46, 223, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 47, 224, 0),
woosh.Token(woosh.NAME, 'filename', 224, 8, 224, 16),
woosh.Token(woosh.OP, '=', 224, 17, 224, 18),
woosh.Token(woosh.NAME, '_module_relative_path', 224, 19, 224, 40),
woosh.Token(woosh.OP, '(', 224, 40, 224, 41),
woosh.Token(woosh.NAME, 'package', 224, 41, 224, 48),
woosh.Token(woosh.OP, ',', 224, 48, 224, 49),
woosh.Token(woosh.NAME, 'filename', 224, 50, 224, 58),
woosh.Token(woosh.OP, ')', 224, 58, 224, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 59, 225, 0),
woosh.Token(woosh.NAME, 'if', 225, 8, 225, 10),
woosh.Token(woosh.NAME, 'getattr', 225, 11, 225, 18),
woosh.Token(woosh.OP, '(', 225, 18, 225, 19),
woosh.Token(woosh.NAME, 'package', 225, 19, 225, 26),
woosh.Token(woosh.OP, ',', 225, 26, 225, 27),
woosh.Token(woosh.STRING, "'__loader__'", 225, 28, 225, 40),
woosh.Token(woosh.OP, ',', 225, 40, 225, 41),
woosh.Token(woosh.NAME, 'None', 225, 42, 225, 46),
woosh.Token(woosh.OP, ')', 225, 46, 225, 47),
woosh.Token(woosh.NAME, 'is', 225, 48, 225, 50),
woosh.Token(woosh.NAME, 'not', 225, 51, 225, 54),
woosh.Token(woosh.NAME, 'None', 225, 55, 225, 59),
woosh.Token(woosh.OP, ':', 225, 59, 225, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 60, 226, 0),
woosh.Token(woosh.INDENT, '            ', 226, 0, 226, 12),
woosh.Token(woosh.NAME, 'if', 226, 12, 226, 14),
woosh.Token(woosh.NAME, 'hasattr', 226, 15, 226, 22),
woosh.Token(woosh.OP, '(', 226, 22, 226, 23),
woosh.Token(woosh.NAME, 'package', 226, 23, 226, 30),
woosh.Token(woosh.OP, '.', 226, 30, 226, 31),
woosh.Token(woosh.NAME, '__loader__', 226, 31, 226, 41),
woosh.Token(woosh.OP, ',', 226, 41, 226, 42),
woosh.Token(woosh.STRING, "'get_data'", 226, 43, 226, 53),
woosh.Token(woosh.OP, ')', 226, 53, 226, 54),
woosh.Token(woosh.OP, ':', 226, 54, 226, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 55, 227, 0),
woosh.Token(woosh.INDENT, '                ', 227, 0, 227, 16),
woosh.Token(woosh.NAME, 'file_contents', 227, 16, 227, 29),
woosh.Token(woosh.OP, '=', 227, 30, 227, 31),
woosh.Token(woosh.NAME, 'package', 227, 32, 227, 39),
woosh.Token(woosh.OP, '.', 227, 39, 227, 40),
woosh.Token(woosh.NAME, '__loader__', 227, 40, 227, 50),
woosh.Token(woosh.OP, '.', 227, 50, 227, 51),
woosh.Token(woosh.NAME, 'get_data', 227, 51, 227, 59),
woosh.Token(woosh.OP, '(', 227, 59, 227, 60),
woosh.Token(woosh.NAME, 'filename', 227, 60, 227, 68),
woosh.Token(woosh.OP, ')', 227, 68, 227, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 69, 228, 0),
woosh.Token(woosh.NAME, 'file_contents', 228, 16, 228, 29),
woosh.Token(woosh.OP, '=', 228, 30, 228, 31),
woosh.Token(woosh.NAME, 'file_contents', 228, 32, 228, 45),
woosh.Token(woosh.OP, '.', 228, 45, 228, 46),
woosh.Token(woosh.NAME, 'decode', 228, 46, 228, 52),
woosh.Token(woosh.OP, '(', 228, 52, 228, 53),
woosh.Token(woosh.NAME, 'encoding', 228, 53, 228, 61),
woosh.Token(woosh.OP, ')', 228, 61, 228, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 62, 229, 0),
woosh.Token(woosh.COMMENT, "# get_data() opens files as 'rb', so one must do the equivalent", 229, 16, 229, 79),
woosh.Token(woosh.COMMENT, '# conversion as universal newlines would do.', 230, 16, 230, 60),
woosh.Token(woosh.NAME, 'return', 231, 16, 231, 22),
woosh.Token(woosh.NAME, '_newline_convert', 231, 23, 231, 39),
woosh.Token(woosh.OP, '(', 231, 39, 231, 40),
woosh.Token(woosh.NAME, 'file_contents', 231, 40, 231, 53),
woosh.Token(woosh.OP, ')', 231, 53, 231, 54),
woosh.Token(woosh.OP, ',', 231, 54, 231, 55),
woosh.Token(woosh.NAME, 'filename', 231, 56, 231, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 64, 232, 0),
woosh.Token(woosh.DEDENT, '    ', 232, 0, 232, 4),
woosh.Token(woosh.DEDENT, '', 232, 4, 232, 4),
woosh.Token(woosh.DEDENT, '', 232, 4, 232, 4),
woosh.Token(woosh.NAME, 'with', 232, 4, 232, 8),
woosh.Token(woosh.NAME, 'open', 232, 9, 232, 13),
woosh.Token(woosh.OP, '(', 232, 13, 232, 14),
woosh.Token(woosh.NAME, 'filename', 232, 14, 232, 22),
woosh.Token(woosh.OP, ',', 232, 22, 232, 23),
woosh.Token(woosh.NAME, 'encoding', 232, 24, 232, 32),
woosh.Token(woosh.OP, '=', 232, 32, 232, 33),
woosh.Token(woosh.NAME, 'encoding', 232, 33, 232, 41),
woosh.Token(woosh.OP, ')', 232, 41, 232, 42),
woosh.Token(woosh.NAME, 'as', 232, 43, 232, 45),
woosh.Token(woosh.NAME, 'f', 232, 46, 232, 47),
woosh.Token(woosh.OP, ':', 232, 47, 232, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 48, 233, 0),
woosh.Token(woosh.INDENT, '        ', 233, 0, 233, 8),
woosh.Token(woosh.NAME, 'return', 233, 8, 233, 14),
woosh.Token(woosh.NAME, 'f', 233, 15, 233, 16),
woosh.Token(woosh.OP, '.', 233, 16, 233, 17),
woosh.Token(woosh.NAME, 'read', 233, 17, 233, 21),
woosh.Token(woosh.OP, '(', 233, 21, 233, 22),
woosh.Token(woosh.OP, ')', 233, 22, 233, 23),
woosh.Token(woosh.OP, ',', 233, 23, 233, 24),
woosh.Token(woosh.NAME, 'filename', 233, 25, 233, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 33, 234, 0),
woosh.Token(woosh.DEDENT, '', 235, 0, 235, 0),
woosh.Token(woosh.DEDENT, '', 235, 0, 235, 0),
woosh.Token(woosh.NAME, 'def', 235, 0, 235, 3),
woosh.Token(woosh.NAME, '_indent', 235, 4, 235, 11),
woosh.Token(woosh.OP, '(', 235, 11, 235, 12),
woosh.Token(woosh.NAME, 's', 235, 12, 235, 13),
woosh.Token(woosh.OP, ',', 235, 13, 235, 14),
woosh.Token(woosh.NAME, 'indent', 235, 15, 235, 21),
woosh.Token(woosh.OP, '=', 235, 21, 235, 22),
woosh.Token(woosh.NUMBER, '4', 235, 22, 235, 23),
woosh.Token(woosh.OP, ')', 235, 23, 235, 24),
woosh.Token(woosh.OP, ':', 235, 24, 235, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 25, 236, 0),
woosh.Token(woosh.INDENT, '    ', 236, 0, 236, 4),
woosh.Token(woosh.STRING, '"""\r\n    Add the given number of space characters to the beginning of\r\n    every non-blank line in `s`, and return the result.\r\n    """', 236, 4, 239, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 7, 240, 0),
woosh.Token(woosh.COMMENT, '# This regexp matches the start of non-blank lines:', 240, 4, 240, 55),
woosh.Token(woosh.NAME, 'return', 241, 4, 241, 10),
woosh.Token(woosh.NAME, 're', 241, 11, 241, 13),
woosh.Token(woosh.OP, '.', 241, 13, 241, 14),
woosh.Token(woosh.NAME, 'sub', 241, 14, 241, 17),
woosh.Token(woosh.OP, '(', 241, 17, 241, 18),
woosh.Token(woosh.STRING, "'(?m)^(?!$)'", 241, 18, 241, 30),
woosh.Token(woosh.OP, ',', 241, 30, 241, 31),
woosh.Token(woosh.NAME, 'indent', 241, 32, 241, 38),
woosh.Token(woosh.OP, '*', 241, 38, 241, 39),
woosh.Token(woosh.STRING, "' '", 241, 39, 241, 42),
woosh.Token(woosh.OP, ',', 241, 42, 241, 43),
woosh.Token(woosh.NAME, 's', 241, 44, 241, 45),
woosh.Token(woosh.OP, ')', 241, 45, 241, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 46, 242, 0),
woosh.Token(woosh.DEDENT, '', 243, 0, 243, 0),
woosh.Token(woosh.NAME, 'def', 243, 0, 243, 3),
woosh.Token(woosh.NAME, '_exception_traceback', 243, 4, 243, 24),
woosh.Token(woosh.OP, '(', 243, 24, 243, 25),
woosh.Token(woosh.NAME, 'exc_info', 243, 25, 243, 33),
woosh.Token(woosh.OP, ')', 243, 33, 243, 34),
woosh.Token(woosh.OP, ':', 243, 34, 243, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 35, 244, 0),
woosh.Token(woosh.INDENT, '    ', 244, 0, 244, 4),
woosh.Token(woosh.STRING, '"""\r\n    Return a string containing a traceback message for the given\r\n    exc_info tuple (as returned by sys.exc_info()).\r\n    """', 244, 4, 247, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 7, 248, 0),
woosh.Token(woosh.COMMENT, '# Get a traceback message.', 248, 4, 248, 30),
woosh.Token(woosh.NAME, 'excout', 249, 4, 249, 10),
woosh.Token(woosh.OP, '=', 249, 11, 249, 12),
woosh.Token(woosh.NAME, 'StringIO', 249, 13, 249, 21),
woosh.Token(woosh.OP, '(', 249, 21, 249, 22),
woosh.Token(woosh.OP, ')', 249, 22, 249, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 23, 250, 0),
woosh.Token(woosh.NAME, 'exc_type', 250, 4, 250, 12),
woosh.Token(woosh.OP, ',', 250, 12, 250, 13),
woosh.Token(woosh.NAME, 'exc_val', 250, 14, 250, 21),
woosh.Token(woosh.OP, ',', 250, 21, 250, 22),
woosh.Token(woosh.NAME, 'exc_tb', 250, 23, 250, 29),
woosh.Token(woosh.OP, '=', 250, 30, 250, 31),
woosh.Token(woosh.NAME, 'exc_info', 250, 32, 250, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 40, 251, 0),
woosh.Token(woosh.NAME, 'traceback', 251, 4, 251, 13),
woosh.Token(woosh.OP, '.', 251, 13, 251, 14),
woosh.Token(woosh.NAME, 'print_exception', 251, 14, 251, 29),
woosh.Token(woosh.OP, '(', 251, 29, 251, 30),
woosh.Token(woosh.NAME, 'exc_type', 251, 30, 251, 38),
woosh.Token(woosh.OP, ',', 251, 38, 251, 39),
woosh.Token(woosh.NAME, 'exc_val', 251, 40, 251, 47),
woosh.Token(woosh.OP, ',', 251, 47, 251, 48),
woosh.Token(woosh.NAME, 'exc_tb', 251, 49, 251, 55),
woosh.Token(woosh.OP, ',', 251, 55, 251, 56),
woosh.Token(woosh.NAME, 'file', 251, 57, 251, 61),
woosh.Token(woosh.OP, '=', 251, 61, 251, 62),
woosh.Token(woosh.NAME, 'excout', 251, 62, 251, 68),
woosh.Token(woosh.OP, ')', 251, 68, 251, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 69, 252, 0),
woosh.Token(woosh.NAME, 'return', 252, 4, 252, 10),
woosh.Token(woosh.NAME, 'excout', 252, 11, 252, 17),
woosh.Token(woosh.OP, '.', 252, 17, 252, 18),
woosh.Token(woosh.NAME, 'getvalue', 252, 18, 252, 26),
woosh.Token(woosh.OP, '(', 252, 26, 252, 27),
woosh.Token(woosh.OP, ')', 252, 27, 252, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 28, 253, 0),
woosh.Token(woosh.COMMENT, '# Override some StringIO methods.', 254, 0, 254, 33),
woosh.Token(woosh.DEDENT, '', 255, 0, 255, 0),
woosh.Token(woosh.NAME, 'class', 255, 0, 255, 5),
woosh.Token(woosh.NAME, '_SpoofOut', 255, 6, 255, 15),
woosh.Token(woosh.OP, '(', 255, 15, 255, 16),
woosh.Token(woosh.NAME, 'StringIO', 255, 16, 255, 24),
woosh.Token(woosh.OP, ')', 255, 24, 255, 25),
woosh.Token(woosh.OP, ':', 255, 25, 255, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 26, 256, 0),
woosh.Token(woosh.INDENT, '    ', 256, 0, 256, 4),
woosh.Token(woosh.NAME, 'def', 256, 4, 256, 7),
woosh.Token(woosh.NAME, 'getvalue', 256, 8, 256, 16),
woosh.Token(woosh.OP, '(', 256, 16, 256, 17),
woosh.Token(woosh.NAME, 'self', 256, 17, 256, 21),
woosh.Token(woosh.OP, ')', 256, 21, 256, 22),
woosh.Token(woosh.OP, ':', 256, 22, 256, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 23, 257, 0),
woosh.Token(woosh.INDENT, '        ', 257, 0, 257, 8),
woosh.Token(woosh.NAME, 'result', 257, 8, 257, 14),
woosh.Token(woosh.OP, '=', 257, 15, 257, 16),
woosh.Token(woosh.NAME, 'StringIO', 257, 17, 257, 25),
woosh.Token(woosh.OP, '.', 257, 25, 257, 26),
woosh.Token(woosh.NAME, 'getvalue', 257, 26, 257, 34),
woosh.Token(woosh.OP, '(', 257, 34, 257, 35),
woosh.Token(woosh.NAME, 'self', 257, 35, 257, 39),
woosh.Token(woosh.OP, ')', 257, 39, 257, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 40, 258, 0),
woosh.Token(woosh.COMMENT, "# If anything at all was written, make sure there's a trailing", 258, 8, 258, 70),
woosh.Token(woosh.COMMENT, "# newline.  There's no way for the expected output to indicate", 259, 8, 259, 70),
woosh.Token(woosh.COMMENT, '# that a trailing newline is missing.', 260, 8, 260, 45),
woosh.Token(woosh.NAME, 'if', 261, 8, 261, 10),
woosh.Token(woosh.NAME, 'result', 261, 11, 261, 17),
woosh.Token(woosh.NAME, 'and', 261, 18, 261, 21),
woosh.Token(woosh.NAME, 'not', 261, 22, 261, 25),
woosh.Token(woosh.NAME, 'result', 261, 26, 261, 32),
woosh.Token(woosh.OP, '.', 261, 32, 261, 33),
woosh.Token(woosh.NAME, 'endswith', 261, 33, 261, 41),
woosh.Token(woosh.OP, '(', 261, 41, 261, 42),
woosh.Token(woosh.STRING, '"\\n"', 261, 42, 261, 46),
woosh.Token(woosh.OP, ')', 261, 46, 261, 47),
woosh.Token(woosh.OP, ':', 261, 47, 261, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 48, 262, 0),
woosh.Token(woosh.INDENT, '            ', 262, 0, 262, 12),
woosh.Token(woosh.NAME, 'result', 262, 12, 262, 18),
woosh.Token(woosh.OP, '+=', 262, 19, 262, 21),
woosh.Token(woosh.STRING, '"\\n"', 262, 22, 262, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 26, 263, 0),
woosh.Token(woosh.DEDENT, '        ', 263, 0, 263, 8),
woosh.Token(woosh.NAME, 'return', 263, 8, 263, 14),
woosh.Token(woosh.NAME, 'result', 263, 15, 263, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 21, 264, 0),
woosh.Token(woosh.DEDENT, '    ', 265, 0, 265, 4),
woosh.Token(woosh.NAME, 'def', 265, 4, 265, 7),
woosh.Token(woosh.NAME, 'truncate', 265, 8, 265, 16),
woosh.Token(woosh.OP, '(', 265, 16, 265, 17),
woosh.Token(woosh.NAME, 'self', 265, 17, 265, 21),
woosh.Token(woosh.OP, ',', 265, 21, 265, 22),
woosh.Token(woosh.NAME, 'size', 265, 23, 265, 27),
woosh.Token(woosh.OP, '=', 265, 27, 265, 28),
woosh.Token(woosh.NAME, 'None', 265, 28, 265, 32),
woosh.Token(woosh.OP, ')', 265, 32, 265, 33),
woosh.Token(woosh.OP, ':', 265, 33, 265, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 34, 266, 0),
woosh.Token(woosh.INDENT, '        ', 266, 0, 266, 8),
woosh.Token(woosh.NAME, 'self', 266, 8, 266, 12),
woosh.Token(woosh.OP, '.', 266, 12, 266, 13),
woosh.Token(woosh.NAME, 'seek', 266, 13, 266, 17),
woosh.Token(woosh.OP, '(', 266, 17, 266, 18),
woosh.Token(woosh.NAME, 'size', 266, 18, 266, 22),
woosh.Token(woosh.OP, ')', 266, 22, 266, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 23, 267, 0),
woosh.Token(woosh.NAME, 'StringIO', 267, 8, 267, 16),
woosh.Token(woosh.OP, '.', 267, 16, 267, 17),
woosh.Token(woosh.NAME, 'truncate', 267, 17, 267, 25),
woosh.Token(woosh.OP, '(', 267, 25, 267, 26),
woosh.Token(woosh.NAME, 'self', 267, 26, 267, 30),
woosh.Token(woosh.OP, ')', 267, 30, 267, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 31, 268, 0),
woosh.Token(woosh.COMMENT, '# Worst-case linear-time ellipsis matching.', 269, 0, 269, 43),
woosh.Token(woosh.DEDENT, '', 270, 0, 270, 0),
woosh.Token(woosh.DEDENT, '', 270, 0, 270, 0),
woosh.Token(woosh.NAME, 'def', 270, 0, 270, 3),
woosh.Token(woosh.NAME, '_ellipsis_match', 270, 4, 270, 19),
woosh.Token(woosh.OP, '(', 270, 19, 270, 20),
woosh.Token(woosh.NAME, 'want', 270, 20, 270, 24),
woosh.Token(woosh.OP, ',', 270, 24, 270, 25),
woosh.Token(woosh.NAME, 'got', 270, 26, 270, 29),
woosh.Token(woosh.OP, ')', 270, 29, 270, 30),
woosh.Token(woosh.OP, ':', 270, 30, 270, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 31, 271, 0),
woosh.Token(woosh.INDENT, '    ', 271, 0, 271, 4),
woosh.Token(woosh.STRING, '"""\r\n    Essentially the only subtle case:\r\n    >>> _ellipsis_match(\'aa...aa\', \'aaa\')\r\n    False\r\n    """', 271, 4, 275, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 7, 276, 0),
woosh.Token(woosh.NAME, 'if', 276, 4, 276, 6),
woosh.Token(woosh.NAME, 'ELLIPSIS_MARKER', 276, 7, 276, 22),
woosh.Token(woosh.NAME, 'not', 276, 23, 276, 26),
woosh.Token(woosh.NAME, 'in', 276, 27, 276, 29),
woosh.Token(woosh.NAME, 'want', 276, 30, 276, 34),
woosh.Token(woosh.OP, ':', 276, 34, 276, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 35, 277, 0),
woosh.Token(woosh.INDENT, '        ', 277, 0, 277, 8),
woosh.Token(woosh.NAME, 'return', 277, 8, 277, 14),
woosh.Token(woosh.NAME, 'want', 277, 15, 277, 19),
woosh.Token(woosh.OP, '==', 277, 20, 277, 22),
woosh.Token(woosh.NAME, 'got', 277, 23, 277, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 26, 278, 0),
woosh.Token(woosh.COMMENT, '# Find "the real" strings.', 279, 4, 279, 30),
woosh.Token(woosh.DEDENT, '    ', 280, 0, 280, 4),
woosh.Token(woosh.NAME, 'ws', 280, 4, 280, 6),
woosh.Token(woosh.OP, '=', 280, 7, 280, 8),
woosh.Token(woosh.NAME, 'want', 280, 9, 280, 13),
woosh.Token(woosh.OP, '.', 280, 13, 280, 14),
woosh.Token(woosh.NAME, 'split', 280, 14, 280, 19),
woosh.Token(woosh.OP, '(', 280, 19, 280, 20),
woosh.Token(woosh.NAME, 'ELLIPSIS_MARKER', 280, 20, 280, 35),
woosh.Token(woosh.OP, ')', 280, 35, 280, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 36, 281, 0),
woosh.Token(woosh.NAME, 'assert', 281, 4, 281, 10),
woosh.Token(woosh.NAME, 'len', 281, 11, 281, 14),
woosh.Token(woosh.OP, '(', 281, 14, 281, 15),
woosh.Token(woosh.NAME, 'ws', 281, 15, 281, 17),
woosh.Token(woosh.OP, ')', 281, 17, 281, 18),
woosh.Token(woosh.OP, '>=', 281, 19, 281, 21),
woosh.Token(woosh.NUMBER, '2', 281, 22, 281, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 23, 282, 0),
woosh.Token(woosh.COMMENT, '# Deal with exact matches possibly needed at one or both ends.', 283, 4, 283, 66),
woosh.Token(woosh.NAME, 'startpos', 284, 4, 284, 12),
woosh.Token(woosh.OP, ',', 284, 12, 284, 13),
woosh.Token(woosh.NAME, 'endpos', 284, 14, 284, 20),
woosh.Token(woosh.OP, '=', 284, 21, 284, 22),
woosh.Token(woosh.NUMBER, '0', 284, 23, 284, 24),
woosh.Token(woosh.OP, ',', 284, 24, 284, 25),
woosh.Token(woosh.NAME, 'len', 284, 26, 284, 29),
woosh.Token(woosh.OP, '(', 284, 29, 284, 30),
woosh.Token(woosh.NAME, 'got', 284, 30, 284, 33),
woosh.Token(woosh.OP, ')', 284, 33, 284, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 34, 285, 0),
woosh.Token(woosh.NAME, 'w', 285, 4, 285, 5),
woosh.Token(woosh.OP, '=', 285, 6, 285, 7),
woosh.Token(woosh.NAME, 'ws', 285, 8, 285, 10),
woosh.Token(woosh.OP, '[', 285, 10, 285, 11),
woosh.Token(woosh.NUMBER, '0', 285, 11, 285, 12),
woosh.Token(woosh.OP, ']', 285, 12, 285, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 285, 13, 286, 0),
woosh.Token(woosh.NAME, 'if', 286, 4, 286, 6),
woosh.Token(woosh.NAME, 'w', 286, 7, 286, 8),
woosh.Token(woosh.OP, ':', 286, 8, 286, 9),
woosh.Token(woosh.COMMENT, '# starts with exact match', 286, 12, 286, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 37, 287, 0),
woosh.Token(woosh.INDENT, '        ', 287, 0, 287, 8),
woosh.Token(woosh.NAME, 'if', 287, 8, 287, 10),
woosh.Token(woosh.NAME, 'got', 287, 11, 287, 14),
woosh.Token(woosh.OP, '.', 287, 14, 287, 15),
woosh.Token(woosh.NAME, 'startswith', 287, 15, 287, 25),
woosh.Token(woosh.OP, '(', 287, 25, 287, 26),
woosh.Token(woosh.NAME, 'w', 287, 26, 287, 27),
woosh.Token(woosh.OP, ')', 287, 27, 287, 28),
woosh.Token(woosh.OP, ':', 287, 28, 287, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 287, 29, 288, 0),
woosh.Token(woosh.INDENT, '            ', 288, 0, 288, 12),
woosh.Token(woosh.NAME, 'startpos', 288, 12, 288, 20),
woosh.Token(woosh.OP, '=', 288, 21, 288, 22),
woosh.Token(woosh.NAME, 'len', 288, 23, 288, 26),
woosh.Token(woosh.OP, '(', 288, 26, 288, 27),
woosh.Token(woosh.NAME, 'w', 288, 27, 288, 28),
woosh.Token(woosh.OP, ')', 288, 28, 288, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 288, 29, 289, 0),
woosh.Token(woosh.NAME, 'del', 289, 12, 289, 15),
woosh.Token(woosh.NAME, 'ws', 289, 16, 289, 18),
woosh.Token(woosh.OP, '[', 289, 18, 289, 19),
woosh.Token(woosh.NUMBER, '0', 289, 19, 289, 20),
woosh.Token(woosh.OP, ']', 289, 20, 289, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 289, 21, 290, 0),
woosh.Token(woosh.DEDENT, '        ', 290, 0, 290, 8),
woosh.Token(woosh.NAME, 'else', 290, 8, 290, 12),
woosh.Token(woosh.OP, ':', 290, 12, 290, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 13, 291, 0),
woosh.Token(woosh.INDENT, '            ', 291, 0, 291, 12),
woosh.Token(woosh.NAME, 'return', 291, 12, 291, 18),
woosh.Token(woosh.NAME, 'False', 291, 19, 291, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 24, 292, 0),
woosh.Token(woosh.DEDENT, '    ', 292, 0, 292, 4),
woosh.Token(woosh.DEDENT, '', 292, 4, 292, 4),
woosh.Token(woosh.NAME, 'w', 292, 4, 292, 5),
woosh.Token(woosh.OP, '=', 292, 6, 292, 7),
woosh.Token(woosh.NAME, 'ws', 292, 8, 292, 10),
woosh.Token(woosh.OP, '[', 292, 10, 292, 11),
woosh.Token(woosh.OP, '-', 292, 11, 292, 12),
woosh.Token(woosh.NUMBER, '1', 292, 12, 292, 13),
woosh.Token(woosh.OP, ']', 292, 13, 292, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 14, 293, 0),
woosh.Token(woosh.NAME, 'if', 293, 4, 293, 6),
woosh.Token(woosh.NAME, 'w', 293, 7, 293, 8),
woosh.Token(woosh.OP, ':', 293, 8, 293, 9),
woosh.Token(woosh.COMMENT, '# ends with exact match', 293, 12, 293, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 35, 294, 0),
woosh.Token(woosh.INDENT, '        ', 294, 0, 294, 8),
woosh.Token(woosh.NAME, 'if', 294, 8, 294, 10),
woosh.Token(woosh.NAME, 'got', 294, 11, 294, 14),
woosh.Token(woosh.OP, '.', 294, 14, 294, 15),
woosh.Token(woosh.NAME, 'endswith', 294, 15, 294, 23),
woosh.Token(woosh.OP, '(', 294, 23, 294, 24),
woosh.Token(woosh.NAME, 'w', 294, 24, 294, 25),
woosh.Token(woosh.OP, ')', 294, 25, 294, 26),
woosh.Token(woosh.OP, ':', 294, 26, 294, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 27, 295, 0),
woosh.Token(woosh.INDENT, '            ', 295, 0, 295, 12),
woosh.Token(woosh.NAME, 'endpos', 295, 12, 295, 18),
woosh.Token(woosh.OP, '-=', 295, 19, 295, 21),
woosh.Token(woosh.NAME, 'len', 295, 22, 295, 25),
woosh.Token(woosh.OP, '(', 295, 25, 295, 26),
woosh.Token(woosh.NAME, 'w', 295, 26, 295, 27),
woosh.Token(woosh.OP, ')', 295, 27, 295, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 295, 28, 296, 0),
woosh.Token(woosh.NAME, 'del', 296, 12, 296, 15),
woosh.Token(woosh.NAME, 'ws', 296, 16, 296, 18),
woosh.Token(woosh.OP, '[', 296, 18, 296, 19),
woosh.Token(woosh.OP, '-', 296, 19, 296, 20),
woosh.Token(woosh.NUMBER, '1', 296, 20, 296, 21),
woosh.Token(woosh.OP, ']', 296, 21, 296, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 296, 22, 297, 0),
woosh.Token(woosh.DEDENT, '        ', 297, 0, 297, 8),
woosh.Token(woosh.NAME, 'else', 297, 8, 297, 12),
woosh.Token(woosh.OP, ':', 297, 12, 297, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 297, 13, 298, 0),
woosh.Token(woosh.INDENT, '            ', 298, 0, 298, 12),
woosh.Token(woosh.NAME, 'return', 298, 12, 298, 18),
woosh.Token(woosh.NAME, 'False', 298, 19, 298, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 24, 299, 0),
woosh.Token(woosh.DEDENT, '    ', 300, 0, 300, 4),
woosh.Token(woosh.DEDENT, '', 300, 4, 300, 4),
woosh.Token(woosh.NAME, 'if', 300, 4, 300, 6),
woosh.Token(woosh.NAME, 'startpos', 300, 7, 300, 15),
woosh.Token(woosh.OP, '>', 300, 16, 300, 17),
woosh.Token(woosh.NAME, 'endpos', 300, 18, 300, 24),
woosh.Token(woosh.OP, ':', 300, 24, 300, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 25, 301, 0),
woosh.Token(woosh.COMMENT, '# Exact end matches required more characters than we have, as in', 301, 8, 301, 72),
woosh.Token(woosh.COMMENT, "# _ellipsis_match('aa...aa', 'aaa')", 302, 8, 302, 43),
woosh.Token(woosh.INDENT, '        ', 303, 0, 303, 8),
woosh.Token(woosh.NAME, 'return', 303, 8, 303, 14),
woosh.Token(woosh.NAME, 'False', 303, 15, 303, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 20, 304, 0),
woosh.Token(woosh.COMMENT, '# For the rest, we only need to find the leftmost non-overlapping', 305, 4, 305, 69),
woosh.Token(woosh.COMMENT, "# match for each piece.  If there's no overall match that way alone,", 306, 4, 306, 72),
woosh.Token(woosh.COMMENT, "# there's no overall match period.", 307, 4, 307, 38),
woosh.Token(woosh.DEDENT, '    ', 308, 0, 308, 4),
woosh.Token(woosh.NAME, 'for', 308, 4, 308, 7),
woosh.Token(woosh.NAME, 'w', 308, 8, 308, 9),
woosh.Token(woosh.NAME, 'in', 308, 10, 308, 12),
woosh.Token(woosh.NAME, 'ws', 308, 13, 308, 15),
woosh.Token(woosh.OP, ':', 308, 15, 308, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 16, 309, 0),
woosh.Token(woosh.COMMENT, "# w may be '' at times, if there are consecutive ellipses, or", 309, 8, 309, 69),
woosh.Token(woosh.COMMENT, "# due to an ellipsis at the start or end of `want`.  That's OK.", 310, 8, 310, 71),
woosh.Token(woosh.COMMENT, "# Search for an empty string succeeds, and doesn't change startpos.", 311, 8, 311, 75),
woosh.Token(woosh.INDENT, '        ', 312, 0, 312, 8),
woosh.Token(woosh.NAME, 'startpos', 312, 8, 312, 16),
woosh.Token(woosh.OP, '=', 312, 17, 312, 18),
woosh.Token(woosh.NAME, 'got', 312, 19, 312, 22),
woosh.Token(woosh.OP, '.', 312, 22, 312, 23),
woosh.Token(woosh.NAME, 'find', 312, 23, 312, 27),
woosh.Token(woosh.OP, '(', 312, 27, 312, 28),
woosh.Token(woosh.NAME, 'w', 312, 28, 312, 29),
woosh.Token(woosh.OP, ',', 312, 29, 312, 30),
woosh.Token(woosh.NAME, 'startpos', 312, 31, 312, 39),
woosh.Token(woosh.OP, ',', 312, 39, 312, 40),
woosh.Token(woosh.NAME, 'endpos', 312, 41, 312, 47),
woosh.Token(woosh.OP, ')', 312, 47, 312, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 48, 313, 0),
woosh.Token(woosh.NAME, 'if', 313, 8, 313, 10),
woosh.Token(woosh.NAME, 'startpos', 313, 11, 313, 19),
woosh.Token(woosh.OP, '<', 313, 20, 313, 21),
woosh.Token(woosh.NUMBER, '0', 313, 22, 313, 23),
woosh.Token(woosh.OP, ':', 313, 23, 313, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 313, 24, 314, 0),
woosh.Token(woosh.INDENT, '            ', 314, 0, 314, 12),
woosh.Token(woosh.NAME, 'return', 314, 12, 314, 18),
woosh.Token(woosh.NAME, 'False', 314, 19, 314, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 24, 315, 0),
woosh.Token(woosh.DEDENT, '        ', 315, 0, 315, 8),
woosh.Token(woosh.NAME, 'startpos', 315, 8, 315, 16),
woosh.Token(woosh.OP, '+=', 315, 17, 315, 19),
woosh.Token(woosh.NAME, 'len', 315, 20, 315, 23),
woosh.Token(woosh.OP, '(', 315, 23, 315, 24),
woosh.Token(woosh.NAME, 'w', 315, 24, 315, 25),
woosh.Token(woosh.OP, ')', 315, 25, 315, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 26, 316, 0),
woosh.Token(woosh.DEDENT, '    ', 317, 0, 317, 4),
woosh.Token(woosh.NAME, 'return', 317, 4, 317, 10),
woosh.Token(woosh.NAME, 'True', 317, 11, 317, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 15, 318, 0),
woosh.Token(woosh.DEDENT, '', 319, 0, 319, 0),
woosh.Token(woosh.NAME, 'def', 319, 0, 319, 3),
woosh.Token(woosh.NAME, '_comment_line', 319, 4, 319, 17),
woosh.Token(woosh.OP, '(', 319, 17, 319, 18),
woosh.Token(woosh.NAME, 'line', 319, 18, 319, 22),
woosh.Token(woosh.OP, ')', 319, 22, 319, 23),
woosh.Token(woosh.OP, ':', 319, 23, 319, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 24, 320, 0),
woosh.Token(woosh.INDENT, '    ', 320, 0, 320, 4),
woosh.Token(woosh.STRING, '"Return a commented form of the given line"', 320, 4, 320, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 47, 321, 0),
woosh.Token(woosh.NAME, 'line', 321, 4, 321, 8),
woosh.Token(woosh.OP, '=', 321, 9, 321, 10),
woosh.Token(woosh.NAME, 'line', 321, 11, 321, 15),
woosh.Token(woosh.OP, '.', 321, 15, 321, 16),
woosh.Token(woosh.NAME, 'rstrip', 321, 16, 321, 22),
woosh.Token(woosh.OP, '(', 321, 22, 321, 23),
woosh.Token(woosh.OP, ')', 321, 23, 321, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 321, 24, 322, 0),
woosh.Token(woosh.NAME, 'if', 322, 4, 322, 6),
woosh.Token(woosh.NAME, 'line', 322, 7, 322, 11),
woosh.Token(woosh.OP, ':', 322, 11, 322, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 12, 323, 0),
woosh.Token(woosh.INDENT, '        ', 323, 0, 323, 8),
woosh.Token(woosh.NAME, 'return', 323, 8, 323, 14),
woosh.Token(woosh.STRING, "'# '", 323, 15, 323, 19),
woosh.Token(woosh.OP, '+', 323, 19, 323, 20),
woosh.Token(woosh.NAME, 'line', 323, 20, 323, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 24, 324, 0),
woosh.Token(woosh.DEDENT, '    ', 324, 0, 324, 4),
woosh.Token(woosh.NAME, 'else', 324, 4, 324, 8),
woosh.Token(woosh.OP, ':', 324, 8, 324, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 9, 325, 0),
woosh.Token(woosh.INDENT, '        ', 325, 0, 325, 8),
woosh.Token(woosh.NAME, 'return', 325, 8, 325, 14),
woosh.Token(woosh.STRING, "'#'", 325, 15, 325, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 18, 326, 0),
woosh.Token(woosh.DEDENT, '', 327, 0, 327, 0),
woosh.Token(woosh.DEDENT, '', 327, 0, 327, 0),
woosh.Token(woosh.NAME, 'def', 327, 0, 327, 3),
woosh.Token(woosh.NAME, '_strip_exception_details', 327, 4, 327, 28),
woosh.Token(woosh.OP, '(', 327, 28, 327, 29),
woosh.Token(woosh.NAME, 'msg', 327, 29, 327, 32),
woosh.Token(woosh.OP, ')', 327, 32, 327, 33),
woosh.Token(woosh.OP, ':', 327, 33, 327, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 34, 328, 0),
woosh.Token(woosh.COMMENT, '# Support for IGNORE_EXCEPTION_DETAIL.', 328, 4, 328, 42),
woosh.Token(woosh.COMMENT, '# Get rid of everything except the exception name; in particular, drop', 329, 4, 329, 74),
woosh.Token(woosh.COMMENT, '# the possibly dotted module path (if any) and the exception message (if', 330, 4, 330, 76),
woosh.Token(woosh.COMMENT, '# any).  We assume that a colon is never part of a dotted name, or of an', 331, 4, 331, 76),
woosh.Token(woosh.COMMENT, '# exception name.', 332, 4, 332, 21),
woosh.Token(woosh.COMMENT, '# E.g., given', 333, 4, 333, 17),
woosh.Token(woosh.COMMENT, '#    "foo.bar.MyError: la di da"', 334, 4, 334, 36),
woosh.Token(woosh.COMMENT, '# return "MyError"', 335, 4, 335, 22),
woosh.Token(woosh.COMMENT, '# Or for "abc.def" or "abc.def:\\n" return "def".', 336, 4, 336, 52),
woosh.Token(woosh.INDENT, '    ', 338, 0, 338, 4),
woosh.Token(woosh.NAME, 'start', 338, 4, 338, 9),
woosh.Token(woosh.OP, ',', 338, 9, 338, 10),
woosh.Token(woosh.NAME, 'end', 338, 11, 338, 14),
woosh.Token(woosh.OP, '=', 338, 15, 338, 16),
woosh.Token(woosh.NUMBER, '0', 338, 17, 338, 18),
woosh.Token(woosh.OP, ',', 338, 18, 338, 19),
woosh.Token(woosh.NAME, 'len', 338, 20, 338, 23),
woosh.Token(woosh.OP, '(', 338, 23, 338, 24),
woosh.Token(woosh.NAME, 'msg', 338, 24, 338, 27),
woosh.Token(woosh.OP, ')', 338, 27, 338, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 338, 28, 339, 0),
woosh.Token(woosh.COMMENT, '# The exception name must appear on the first line.', 339, 4, 339, 55),
woosh.Token(woosh.NAME, 'i', 340, 4, 340, 5),
woosh.Token(woosh.OP, '=', 340, 6, 340, 7),
woosh.Token(woosh.NAME, 'msg', 340, 8, 340, 11),
woosh.Token(woosh.OP, '.', 340, 11, 340, 12),
woosh.Token(woosh.NAME, 'find', 340, 12, 340, 16),
woosh.Token(woosh.OP, '(', 340, 16, 340, 17),
woosh.Token(woosh.STRING, '"\\n"', 340, 17, 340, 21),
woosh.Token(woosh.OP, ')', 340, 21, 340, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 22, 341, 0),
woosh.Token(woosh.NAME, 'if', 341, 4, 341, 6),
woosh.Token(woosh.NAME, 'i', 341, 7, 341, 8),
woosh.Token(woosh.OP, '>=', 341, 9, 341, 11),
woosh.Token(woosh.NUMBER, '0', 341, 12, 341, 13),
woosh.Token(woosh.OP, ':', 341, 13, 341, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 14, 342, 0),
woosh.Token(woosh.INDENT, '        ', 342, 0, 342, 8),
woosh.Token(woosh.NAME, 'end', 342, 8, 342, 11),
woosh.Token(woosh.OP, '=', 342, 12, 342, 13),
woosh.Token(woosh.NAME, 'i', 342, 14, 342, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 15, 343, 0),
woosh.Token(woosh.COMMENT, '# retain up to the first colon (if any)', 343, 4, 343, 43),
woosh.Token(woosh.DEDENT, '    ', 344, 0, 344, 4),
woosh.Token(woosh.NAME, 'i', 344, 4, 344, 5),
woosh.Token(woosh.OP, '=', 344, 6, 344, 7),
woosh.Token(woosh.NAME, 'msg', 344, 8, 344, 11),
woosh.Token(woosh.OP, '.', 344, 11, 344, 12),
woosh.Token(woosh.NAME, 'find', 344, 12, 344, 16),
woosh.Token(woosh.OP, '(', 344, 16, 344, 17),
woosh.Token(woosh.STRING, "':'", 344, 17, 344, 20),
woosh.Token(woosh.OP, ',', 344, 20, 344, 21),
woosh.Token(woosh.NUMBER, '0', 344, 22, 344, 23),
woosh.Token(woosh.OP, ',', 344, 23, 344, 24),
woosh.Token(woosh.NAME, 'end', 344, 25, 344, 28),
woosh.Token(woosh.OP, ')', 344, 28, 344, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 29, 345, 0),
woosh.Token(woosh.NAME, 'if', 345, 4, 345, 6),
woosh.Token(woosh.NAME, 'i', 345, 7, 345, 8),
woosh.Token(woosh.OP, '>=', 345, 9, 345, 11),
woosh.Token(woosh.NUMBER, '0', 345, 12, 345, 13),
woosh.Token(woosh.OP, ':', 345, 13, 345, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 14, 346, 0),
woosh.Token(woosh.INDENT, '        ', 346, 0, 346, 8),
woosh.Token(woosh.NAME, 'end', 346, 8, 346, 11),
woosh.Token(woosh.OP, '=', 346, 12, 346, 13),
woosh.Token(woosh.NAME, 'i', 346, 14, 346, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 15, 347, 0),
woosh.Token(woosh.COMMENT, '# retain just the exception name', 347, 4, 347, 36),
woosh.Token(woosh.DEDENT, '    ', 348, 0, 348, 4),
woosh.Token(woosh.NAME, 'i', 348, 4, 348, 5),
woosh.Token(woosh.OP, '=', 348, 6, 348, 7),
woosh.Token(woosh.NAME, 'msg', 348, 8, 348, 11),
woosh.Token(woosh.OP, '.', 348, 11, 348, 12),
woosh.Token(woosh.NAME, 'rfind', 348, 12, 348, 17),
woosh.Token(woosh.OP, '(', 348, 17, 348, 18),
woosh.Token(woosh.STRING, "'.'", 348, 18, 348, 21),
woosh.Token(woosh.OP, ',', 348, 21, 348, 22),
woosh.Token(woosh.NUMBER, '0', 348, 23, 348, 24),
woosh.Token(woosh.OP, ',', 348, 24, 348, 25),
woosh.Token(woosh.NAME, 'end', 348, 26, 348, 29),
woosh.Token(woosh.OP, ')', 348, 29, 348, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 30, 349, 0),
woosh.Token(woosh.NAME, 'if', 349, 4, 349, 6),
woosh.Token(woosh.NAME, 'i', 349, 7, 349, 8),
woosh.Token(woosh.OP, '>=', 349, 9, 349, 11),
woosh.Token(woosh.NUMBER, '0', 349, 12, 349, 13),
woosh.Token(woosh.OP, ':', 349, 13, 349, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 14, 350, 0),
woosh.Token(woosh.INDENT, '        ', 350, 0, 350, 8),
woosh.Token(woosh.NAME, 'start', 350, 8, 350, 13),
woosh.Token(woosh.OP, '=', 350, 14, 350, 15),
woosh.Token(woosh.NAME, 'i', 350, 16, 350, 17),
woosh.Token(woosh.OP, '+', 350, 17, 350, 18),
woosh.Token(woosh.NUMBER, '1', 350, 18, 350, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 19, 351, 0),
woosh.Token(woosh.DEDENT, '    ', 351, 0, 351, 4),
woosh.Token(woosh.NAME, 'return', 351, 4, 351, 10),
woosh.Token(woosh.NAME, 'msg', 351, 11, 351, 14),
woosh.Token(woosh.OP, '[', 351, 14, 351, 15),
woosh.Token(woosh.NAME, 'start', 351, 15, 351, 20),
woosh.Token(woosh.OP, ':', 351, 20, 351, 21),
woosh.Token(woosh.NAME, 'end', 351, 22, 351, 25),
woosh.Token(woosh.OP, ']', 351, 25, 351, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 26, 352, 0),
woosh.Token(woosh.DEDENT, '', 353, 0, 353, 0),
woosh.Token(woosh.NAME, 'class', 353, 0, 353, 5),
woosh.Token(woosh.NAME, '_OutputRedirectingPdb', 353, 6, 353, 27),
woosh.Token(woosh.OP, '(', 353, 27, 353, 28),
woosh.Token(woosh.NAME, 'pdb', 353, 28, 353, 31),
woosh.Token(woosh.OP, '.', 353, 31, 353, 32),
woosh.Token(woosh.NAME, 'Pdb', 353, 32, 353, 35),
woosh.Token(woosh.OP, ')', 353, 35, 353, 36),
woosh.Token(woosh.OP, ':', 353, 36, 353, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 353, 37, 354, 0),
woosh.Token(woosh.INDENT, '    ', 354, 0, 354, 4),
woosh.Token(woosh.STRING, '"""\r\n    A specialized version of the python debugger that redirects stdout\r\n    to a given stream when interacting with the user.  Stdout is *not*\r\n    redirected when traced code is executed.\r\n    """', 354, 4, 358, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 7, 359, 0),
woosh.Token(woosh.NAME, 'def', 359, 4, 359, 7),
woosh.Token(woosh.NAME, '__init__', 359, 8, 359, 16),
woosh.Token(woosh.OP, '(', 359, 16, 359, 17),
woosh.Token(woosh.NAME, 'self', 359, 17, 359, 21),
woosh.Token(woosh.OP, ',', 359, 21, 359, 22),
woosh.Token(woosh.NAME, 'out', 359, 23, 359, 26),
woosh.Token(woosh.OP, ')', 359, 26, 359, 27),
woosh.Token(woosh.OP, ':', 359, 27, 359, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 28, 360, 0),
woosh.Token(woosh.INDENT, '        ', 360, 0, 360, 8),
woosh.Token(woosh.NAME, 'self', 360, 8, 360, 12),
woosh.Token(woosh.OP, '.', 360, 12, 360, 13),
woosh.Token(woosh.NAME, '__out', 360, 13, 360, 18),
woosh.Token(woosh.OP, '=', 360, 19, 360, 20),
woosh.Token(woosh.NAME, 'out', 360, 21, 360, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 24, 361, 0),
woosh.Token(woosh.NAME, 'self', 361, 8, 361, 12),
woosh.Token(woosh.OP, '.', 361, 12, 361, 13),
woosh.Token(woosh.NAME, '__debugger_used', 361, 13, 361, 28),
woosh.Token(woosh.OP, '=', 361, 29, 361, 30),
woosh.Token(woosh.NAME, 'False', 361, 31, 361, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 36, 362, 0),
woosh.Token(woosh.COMMENT, '# do not play signal games in the pdb', 362, 8, 362, 45),
woosh.Token(woosh.NAME, 'pdb', 363, 8, 363, 11),
woosh.Token(woosh.OP, '.', 363, 11, 363, 12),
woosh.Token(woosh.NAME, 'Pdb', 363, 12, 363, 15),
woosh.Token(woosh.OP, '.', 363, 15, 363, 16),
woosh.Token(woosh.NAME, '__init__', 363, 16, 363, 24),
woosh.Token(woosh.OP, '(', 363, 24, 363, 25),
woosh.Token(woosh.NAME, 'self', 363, 25, 363, 29),
woosh.Token(woosh.OP, ',', 363, 29, 363, 30),
woosh.Token(woosh.NAME, 'stdout', 363, 31, 363, 37),
woosh.Token(woosh.OP, '=', 363, 37, 363, 38),
woosh.Token(woosh.NAME, 'out', 363, 38, 363, 41),
woosh.Token(woosh.OP, ',', 363, 41, 363, 42),
woosh.Token(woosh.NAME, 'nosigint', 363, 43, 363, 51),
woosh.Token(woosh.OP, '=', 363, 51, 363, 52),
woosh.Token(woosh.NAME, 'True', 363, 52, 363, 56),
woosh.Token(woosh.OP, ')', 363, 56, 363, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 57, 364, 0),
woosh.Token(woosh.COMMENT, '# still use input() to get user input', 364, 8, 364, 45),
woosh.Token(woosh.NAME, 'self', 365, 8, 365, 12),
woosh.Token(woosh.OP, '.', 365, 12, 365, 13),
woosh.Token(woosh.NAME, 'use_rawinput', 365, 13, 365, 25),
woosh.Token(woosh.OP, '=', 365, 26, 365, 27),
woosh.Token(woosh.NUMBER, '1', 365, 28, 365, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 29, 366, 0),
woosh.Token(woosh.DEDENT, '    ', 367, 0, 367, 4),
woosh.Token(woosh.NAME, 'def', 367, 4, 367, 7),
woosh.Token(woosh.NAME, 'set_trace', 367, 8, 367, 17),
woosh.Token(woosh.OP, '(', 367, 17, 367, 18),
woosh.Token(woosh.NAME, 'self', 367, 18, 367, 22),
woosh.Token(woosh.OP, ',', 367, 22, 367, 23),
woosh.Token(woosh.NAME, 'frame', 367, 24, 367, 29),
woosh.Token(woosh.OP, '=', 367, 29, 367, 30),
woosh.Token(woosh.NAME, 'None', 367, 30, 367, 34),
woosh.Token(woosh.OP, ')', 367, 34, 367, 35),
woosh.Token(woosh.OP, ':', 367, 35, 367, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 36, 368, 0),
woosh.Token(woosh.INDENT, '        ', 368, 0, 368, 8),
woosh.Token(woosh.NAME, 'self', 368, 8, 368, 12),
woosh.Token(woosh.OP, '.', 368, 12, 368, 13),
woosh.Token(woosh.NAME, '__debugger_used', 368, 13, 368, 28),
woosh.Token(woosh.OP, '=', 368, 29, 368, 30),
woosh.Token(woosh.NAME, 'True', 368, 31, 368, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 35, 369, 0),
woosh.Token(woosh.NAME, 'if', 369, 8, 369, 10),
woosh.Token(woosh.NAME, 'frame', 369, 11, 369, 16),
woosh.Token(woosh.NAME, 'is', 369, 17, 369, 19),
woosh.Token(woosh.NAME, 'None', 369, 20, 369, 24),
woosh.Token(woosh.OP, ':', 369, 24, 369, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 25, 370, 0),
woosh.Token(woosh.INDENT, '            ', 370, 0, 370, 12),
woosh.Token(woosh.NAME, 'frame', 370, 12, 370, 17),
woosh.Token(woosh.OP, '=', 370, 18, 370, 19),
woosh.Token(woosh.NAME, 'sys', 370, 20, 370, 23),
woosh.Token(woosh.OP, '.', 370, 23, 370, 24),
woosh.Token(woosh.NAME, '_getframe', 370, 24, 370, 33),
woosh.Token(woosh.OP, '(', 370, 33, 370, 34),
woosh.Token(woosh.OP, ')', 370, 34, 370, 35),
woosh.Token(woosh.OP, '.', 370, 35, 370, 36),
woosh.Token(woosh.NAME, 'f_back', 370, 36, 370, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 42, 371, 0),
woosh.Token(woosh.DEDENT, '        ', 371, 0, 371, 8),
woosh.Token(woosh.NAME, 'pdb', 371, 8, 371, 11),
woosh.Token(woosh.OP, '.', 371, 11, 371, 12),
woosh.Token(woosh.NAME, 'Pdb', 371, 12, 371, 15),
woosh.Token(woosh.OP, '.', 371, 15, 371, 16),
woosh.Token(woosh.NAME, 'set_trace', 371, 16, 371, 25),
woosh.Token(woosh.OP, '(', 371, 25, 371, 26),
woosh.Token(woosh.NAME, 'self', 371, 26, 371, 30),
woosh.Token(woosh.OP, ',', 371, 30, 371, 31),
woosh.Token(woosh.NAME, 'frame', 371, 32, 371, 37),
woosh.Token(woosh.OP, ')', 371, 37, 371, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 38, 372, 0),
woosh.Token(woosh.DEDENT, '    ', 373, 0, 373, 4),
woosh.Token(woosh.NAME, 'def', 373, 4, 373, 7),
woosh.Token(woosh.NAME, 'set_continue', 373, 8, 373, 20),
woosh.Token(woosh.OP, '(', 373, 20, 373, 21),
woosh.Token(woosh.NAME, 'self', 373, 21, 373, 25),
woosh.Token(woosh.OP, ')', 373, 25, 373, 26),
woosh.Token(woosh.OP, ':', 373, 26, 373, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 27, 374, 0),
woosh.Token(woosh.COMMENT, '# Calling set_continue unconditionally would break unit test', 374, 8, 374, 68),
woosh.Token(woosh.COMMENT, '# coverage reporting, as Bdb.set_continue calls sys.settrace(None).', 375, 8, 375, 75),
woosh.Token(woosh.INDENT, '        ', 376, 0, 376, 8),
woosh.Token(woosh.NAME, 'if', 376, 8, 376, 10),
woosh.Token(woosh.NAME, 'self', 376, 11, 376, 15),
woosh.Token(woosh.OP, '.', 376, 15, 376, 16),
woosh.Token(woosh.NAME, '__debugger_used', 376, 16, 376, 31),
woosh.Token(woosh.OP, ':', 376, 31, 376, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 32, 377, 0),
woosh.Token(woosh.INDENT, '            ', 377, 0, 377, 12),
woosh.Token(woosh.NAME, 'pdb', 377, 12, 377, 15),
woosh.Token(woosh.OP, '.', 377, 15, 377, 16),
woosh.Token(woosh.NAME, 'Pdb', 377, 16, 377, 19),
woosh.Token(woosh.OP, '.', 377, 19, 377, 20),
woosh.Token(woosh.NAME, 'set_continue', 377, 20, 377, 32),
woosh.Token(woosh.OP, '(', 377, 32, 377, 33),
woosh.Token(woosh.NAME, 'self', 377, 33, 377, 37),
woosh.Token(woosh.OP, ')', 377, 37, 377, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 38, 378, 0),
woosh.Token(woosh.DEDENT, '    ', 379, 0, 379, 4),
woosh.Token(woosh.DEDENT, '', 379, 4, 379, 4),
woosh.Token(woosh.NAME, 'def', 379, 4, 379, 7),
woosh.Token(woosh.NAME, 'trace_dispatch', 379, 8, 379, 22),
woosh.Token(woosh.OP, '(', 379, 22, 379, 23),
woosh.Token(woosh.NAME, 'self', 379, 23, 379, 27),
woosh.Token(woosh.OP, ',', 379, 27, 379, 28),
woosh.Token(woosh.OP, '*', 379, 29, 379, 30),
woosh.Token(woosh.NAME, 'args', 379, 30, 379, 34),
woosh.Token(woosh.OP, ')', 379, 34, 379, 35),
woosh.Token(woosh.OP, ':', 379, 35, 379, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 36, 380, 0),
woosh.Token(woosh.COMMENT, '# Redirect stdout to the given stream.', 380, 8, 380, 46),
woosh.Token(woosh.INDENT, '        ', 381, 0, 381, 8),
woosh.Token(woosh.NAME, 'save_stdout', 381, 8, 381, 19),
woosh.Token(woosh.OP, '=', 381, 20, 381, 21),
woosh.Token(woosh.NAME, 'sys', 381, 22, 381, 25),
woosh.Token(woosh.OP, '.', 381, 25, 381, 26),
woosh.Token(woosh.NAME, 'stdout', 381, 26, 381, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 32, 382, 0),
woosh.Token(woosh.NAME, 'sys', 382, 8, 382, 11),
woosh.Token(woosh.OP, '.', 382, 11, 382, 12),
woosh.Token(woosh.NAME, 'stdout', 382, 12, 382, 18),
woosh.Token(woosh.OP, '=', 382, 19, 382, 20),
woosh.Token(woosh.NAME, 'self', 382, 21, 382, 25),
woosh.Token(woosh.OP, '.', 382, 25, 382, 26),
woosh.Token(woosh.NAME, '__out', 382, 26, 382, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 31, 383, 0),
woosh.Token(woosh.COMMENT, "# Call Pdb's trace dispatch method.", 383, 8, 383, 43),
woosh.Token(woosh.NAME, 'try', 384, 8, 384, 11),
woosh.Token(woosh.OP, ':', 384, 11, 384, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 12, 385, 0),
woosh.Token(woosh.INDENT, '            ', 385, 0, 385, 12),
woosh.Token(woosh.NAME, 'return', 385, 12, 385, 18),
woosh.Token(woosh.NAME, 'pdb', 385, 19, 385, 22),
woosh.Token(woosh.OP, '.', 385, 22, 385, 23),
woosh.Token(woosh.NAME, 'Pdb', 385, 23, 385, 26),
woosh.Token(woosh.OP, '.', 385, 26, 385, 27),
woosh.Token(woosh.NAME, 'trace_dispatch', 385, 27, 385, 41),
woosh.Token(woosh.OP, '(', 385, 41, 385, 42),
woosh.Token(woosh.NAME, 'self', 385, 42, 385, 46),
woosh.Token(woosh.OP, ',', 385, 46, 385, 47),
woosh.Token(woosh.OP, '*', 385, 48, 385, 49),
woosh.Token(woosh.NAME, 'args', 385, 49, 385, 53),
woosh.Token(woosh.OP, ')', 385, 53, 385, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 54, 386, 0),
woosh.Token(woosh.DEDENT, '        ', 386, 0, 386, 8),
woosh.Token(woosh.NAME, 'finally', 386, 8, 386, 15),
woosh.Token(woosh.OP, ':', 386, 15, 386, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 16, 387, 0),
woosh.Token(woosh.INDENT, '            ', 387, 0, 387, 12),
woosh.Token(woosh.NAME, 'sys', 387, 12, 387, 15),
woosh.Token(woosh.OP, '.', 387, 15, 387, 16),
woosh.Token(woosh.NAME, 'stdout', 387, 16, 387, 22),
woosh.Token(woosh.OP, '=', 387, 23, 387, 24),
woosh.Token(woosh.NAME, 'save_stdout', 387, 25, 387, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 36, 388, 0),
woosh.Token(woosh.COMMENT, '# [XX] Normalize with respect to os.path.pardir?', 389, 0, 389, 48),
woosh.Token(woosh.DEDENT, '', 390, 0, 390, 0),
woosh.Token(woosh.DEDENT, '', 390, 0, 390, 0),
woosh.Token(woosh.DEDENT, '', 390, 0, 390, 0),
woosh.Token(woosh.NAME, 'def', 390, 0, 390, 3),
woosh.Token(woosh.NAME, '_module_relative_path', 390, 4, 390, 25),
woosh.Token(woosh.OP, '(', 390, 25, 390, 26),
woosh.Token(woosh.NAME, 'module', 390, 26, 390, 32),
woosh.Token(woosh.OP, ',', 390, 32, 390, 33),
woosh.Token(woosh.NAME, 'test_path', 390, 34, 390, 43),
woosh.Token(woosh.OP, ')', 390, 43, 390, 44),
woosh.Token(woosh.OP, ':', 390, 44, 390, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 45, 391, 0),
woosh.Token(woosh.INDENT, '    ', 391, 0, 391, 4),
woosh.Token(woosh.NAME, 'if', 391, 4, 391, 6),
woosh.Token(woosh.NAME, 'not', 391, 7, 391, 10),
woosh.Token(woosh.NAME, 'inspect', 391, 11, 391, 18),
woosh.Token(woosh.OP, '.', 391, 18, 391, 19),
woosh.Token(woosh.NAME, 'ismodule', 391, 19, 391, 27),
woosh.Token(woosh.OP, '(', 391, 27, 391, 28),
woosh.Token(woosh.NAME, 'module', 391, 28, 391, 34),
woosh.Token(woosh.OP, ')', 391, 34, 391, 35),
woosh.Token(woosh.OP, ':', 391, 35, 391, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 36, 392, 0),
woosh.Token(woosh.INDENT, '        ', 392, 0, 392, 8),
woosh.Token(woosh.NAME, 'raise', 392, 8, 392, 13),
woosh.Token(woosh.NAME, 'TypeError', 392, 14, 392, 23),
woosh.Token(woosh.OP, '(', 392, 23, 392, 24),
woosh.Token(woosh.STRING, "'Expected a module: %r'", 392, 24, 392, 47),
woosh.Token(woosh.OP, '%', 392, 48, 392, 49),
woosh.Token(woosh.NAME, 'module', 392, 50, 392, 56),
woosh.Token(woosh.OP, ')', 392, 56, 392, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 392, 57, 393, 0),
woosh.Token(woosh.DEDENT, '    ', 393, 0, 393, 4),
woosh.Token(woosh.NAME, 'if', 393, 4, 393, 6),
woosh.Token(woosh.NAME, 'test_path', 393, 7, 393, 16),
woosh.Token(woosh.OP, '.', 393, 16, 393, 17),
woosh.Token(woosh.NAME, 'startswith', 393, 17, 393, 27),
woosh.Token(woosh.OP, '(', 393, 27, 393, 28),
woosh.Token(woosh.STRING, "'/'", 393, 28, 393, 31),
woosh.Token(woosh.OP, ')', 393, 31, 393, 32),
woosh.Token(woosh.OP, ':', 393, 32, 393, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 33, 394, 0),
woosh.Token(woosh.INDENT, '        ', 394, 0, 394, 8),
woosh.Token(woosh.NAME, 'raise', 394, 8, 394, 13),
woosh.Token(woosh.NAME, 'ValueError', 394, 14, 394, 24),
woosh.Token(woosh.OP, '(', 394, 24, 394, 25),
woosh.Token(woosh.STRING, "'Module-relative files may not have absolute paths'", 394, 25, 394, 76),
woosh.Token(woosh.OP, ')', 394, 76, 394, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 77, 395, 0),
woosh.Token(woosh.COMMENT, '# Normalize the path. On Windows, replace "/" with "\\".', 396, 4, 396, 59),
woosh.Token(woosh.DEDENT, '    ', 397, 0, 397, 4),
woosh.Token(woosh.NAME, 'test_path', 397, 4, 397, 13),
woosh.Token(woosh.OP, '=', 397, 14, 397, 15),
woosh.Token(woosh.NAME, 'os', 397, 16, 397, 18),
woosh.Token(woosh.OP, '.', 397, 18, 397, 19),
woosh.Token(woosh.NAME, 'path', 397, 19, 397, 23),
woosh.Token(woosh.OP, '.', 397, 23, 397, 24),
woosh.Token(woosh.NAME, 'join', 397, 24, 397, 28),
woosh.Token(woosh.OP, '(', 397, 28, 397, 29),
woosh.Token(woosh.OP, '*', 397, 29, 397, 30),
woosh.Token(woosh.OP, '(', 397, 30, 397, 31),
woosh.Token(woosh.NAME, 'test_path', 397, 31, 397, 40),
woosh.Token(woosh.OP, '.', 397, 40, 397, 41),
woosh.Token(woosh.NAME, 'split', 397, 41, 397, 46),
woosh.Token(woosh.OP, '(', 397, 46, 397, 47),
woosh.Token(woosh.STRING, "'/'", 397, 47, 397, 50),
woosh.Token(woosh.OP, ')', 397, 50, 397, 51),
woosh.Token(woosh.OP, ')', 397, 51, 397, 52),
woosh.Token(woosh.OP, ')', 397, 52, 397, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 397, 53, 398, 0),
woosh.Token(woosh.COMMENT, '# Find the base directory for the path.', 399, 4, 399, 43),
woosh.Token(woosh.NAME, 'if', 400, 4, 400, 6),
woosh.Token(woosh.NAME, 'hasattr', 400, 7, 400, 14),
woosh.Token(woosh.OP, '(', 400, 14, 400, 15),
woosh.Token(woosh.NAME, 'module', 400, 15, 400, 21),
woosh.Token(woosh.OP, ',', 400, 21, 400, 22),
woosh.Token(woosh.STRING, "'__file__'", 400, 23, 400, 33),
woosh.Token(woosh.OP, ')', 400, 33, 400, 34),
woosh.Token(woosh.OP, ':', 400, 34, 400, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 35, 401, 0),
woosh.Token(woosh.COMMENT, '# A normal module/package', 401, 8, 401, 33),
woosh.Token(woosh.INDENT, '        ', 402, 0, 402, 8),
woosh.Token(woosh.NAME, 'basedir', 402, 8, 402, 15),
woosh.Token(woosh.OP, '=', 402, 16, 402, 17),
woosh.Token(woosh.NAME, 'os', 402, 18, 402, 20),
woosh.Token(woosh.OP, '.', 402, 20, 402, 21),
woosh.Token(woosh.NAME, 'path', 402, 21, 402, 25),
woosh.Token(woosh.OP, '.', 402, 25, 402, 26),
woosh.Token(woosh.NAME, 'split', 402, 26, 402, 31),
woosh.Token(woosh.OP, '(', 402, 31, 402, 32),
woosh.Token(woosh.NAME, 'module', 402, 32, 402, 38),
woosh.Token(woosh.OP, '.', 402, 38, 402, 39),
woosh.Token(woosh.NAME, '__file__', 402, 39, 402, 47),
woosh.Token(woosh.OP, ')', 402, 47, 402, 48),
woosh.Token(woosh.OP, '[', 402, 48, 402, 49),
woosh.Token(woosh.NUMBER, '0', 402, 49, 402, 50),
woosh.Token(woosh.OP, ']', 402, 50, 402, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 402, 51, 403, 0),
woosh.Token(woosh.DEDENT, '    ', 403, 0, 403, 4),
woosh.Token(woosh.NAME, 'elif', 403, 4, 403, 8),
woosh.Token(woosh.NAME, 'module', 403, 9, 403, 15),
woosh.Token(woosh.OP, '.', 403, 15, 403, 16),
woosh.Token(woosh.NAME, '__name__', 403, 16, 403, 24),
woosh.Token(woosh.OP, '==', 403, 25, 403, 27),
woosh.Token(woosh.STRING, "'__main__'", 403, 28, 403, 38),
woosh.Token(woosh.OP, ':', 403, 38, 403, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 403, 39, 404, 0),
woosh.Token(woosh.COMMENT, '# An interactive session.', 404, 8, 404, 33),
woosh.Token(woosh.INDENT, '        ', 405, 0, 405, 8),
woosh.Token(woosh.NAME, 'if', 405, 8, 405, 10),
woosh.Token(woosh.NAME, 'len', 405, 11, 405, 14),
woosh.Token(woosh.OP, '(', 405, 14, 405, 15),
woosh.Token(woosh.NAME, 'sys', 405, 15, 405, 18),
woosh.Token(woosh.OP, '.', 405, 18, 405, 19),
woosh.Token(woosh.NAME, 'argv', 405, 19, 405, 23),
woosh.Token(woosh.OP, ')', 405, 23, 405, 24),
woosh.Token(woosh.OP, '>', 405, 24, 405, 25),
woosh.Token(woosh.NUMBER, '0', 405, 25, 405, 26),
woosh.Token(woosh.NAME, 'and', 405, 27, 405, 30),
woosh.Token(woosh.NAME, 'sys', 405, 31, 405, 34),
woosh.Token(woosh.OP, '.', 405, 34, 405, 35),
woosh.Token(woosh.NAME, 'argv', 405, 35, 405, 39),
woosh.Token(woosh.OP, '[', 405, 39, 405, 40),
woosh.Token(woosh.NUMBER, '0', 405, 40, 405, 41),
woosh.Token(woosh.OP, ']', 405, 41, 405, 42),
woosh.Token(woosh.OP, '!=', 405, 43, 405, 45),
woosh.Token(woosh.STRING, "''", 405, 46, 405, 48),
woosh.Token(woosh.OP, ':', 405, 48, 405, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 49, 406, 0),
woosh.Token(woosh.INDENT, '            ', 406, 0, 406, 12),
woosh.Token(woosh.NAME, 'basedir', 406, 12, 406, 19),
woosh.Token(woosh.OP, '=', 406, 20, 406, 21),
woosh.Token(woosh.NAME, 'os', 406, 22, 406, 24),
woosh.Token(woosh.OP, '.', 406, 24, 406, 25),
woosh.Token(woosh.NAME, 'path', 406, 25, 406, 29),
woosh.Token(woosh.OP, '.', 406, 29, 406, 30),
woosh.Token(woosh.NAME, 'split', 406, 30, 406, 35),
woosh.Token(woosh.OP, '(', 406, 35, 406, 36),
woosh.Token(woosh.NAME, 'sys', 406, 36, 406, 39),
woosh.Token(woosh.OP, '.', 406, 39, 406, 40),
woosh.Token(woosh.NAME, 'argv', 406, 40, 406, 44),
woosh.Token(woosh.OP, '[', 406, 44, 406, 45),
woosh.Token(woosh.NUMBER, '0', 406, 45, 406, 46),
woosh.Token(woosh.OP, ']', 406, 46, 406, 47),
woosh.Token(woosh.OP, ')', 406, 47, 406, 48),
woosh.Token(woosh.OP, '[', 406, 48, 406, 49),
woosh.Token(woosh.NUMBER, '0', 406, 49, 406, 50),
woosh.Token(woosh.OP, ']', 406, 50, 406, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 51, 407, 0),
woosh.Token(woosh.DEDENT, '        ', 407, 0, 407, 8),
woosh.Token(woosh.NAME, 'else', 407, 8, 407, 12),
woosh.Token(woosh.OP, ':', 407, 12, 407, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 13, 408, 0),
woosh.Token(woosh.INDENT, '            ', 408, 0, 408, 12),
woosh.Token(woosh.NAME, 'basedir', 408, 12, 408, 19),
woosh.Token(woosh.OP, '=', 408, 20, 408, 21),
woosh.Token(woosh.NAME, 'os', 408, 22, 408, 24),
woosh.Token(woosh.OP, '.', 408, 24, 408, 25),
woosh.Token(woosh.NAME, 'curdir', 408, 25, 408, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 31, 409, 0),
woosh.Token(woosh.DEDENT, '    ', 409, 0, 409, 4),
woosh.Token(woosh.DEDENT, '', 409, 4, 409, 4),
woosh.Token(woosh.NAME, 'else', 409, 4, 409, 8),
woosh.Token(woosh.OP, ':', 409, 8, 409, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 409, 9, 410, 0),
woosh.Token(woosh.INDENT, '        ', 410, 0, 410, 8),
woosh.Token(woosh.NAME, 'if', 410, 8, 410, 10),
woosh.Token(woosh.NAME, 'hasattr', 410, 11, 410, 18),
woosh.Token(woosh.OP, '(', 410, 18, 410, 19),
woosh.Token(woosh.NAME, 'module', 410, 19, 410, 25),
woosh.Token(woosh.OP, ',', 410, 25, 410, 26),
woosh.Token(woosh.STRING, "'__path__'", 410, 27, 410, 37),
woosh.Token(woosh.OP, ')', 410, 37, 410, 38),
woosh.Token(woosh.OP, ':', 410, 38, 410, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 39, 411, 0),
woosh.Token(woosh.INDENT, '            ', 411, 0, 411, 12),
woosh.Token(woosh.NAME, 'for', 411, 12, 411, 15),
woosh.Token(woosh.NAME, 'directory', 411, 16, 411, 25),
woosh.Token(woosh.NAME, 'in', 411, 26, 411, 28),
woosh.Token(woosh.NAME, 'module', 411, 29, 411, 35),
woosh.Token(woosh.OP, '.', 411, 35, 411, 36),
woosh.Token(woosh.NAME, '__path__', 411, 36, 411, 44),
woosh.Token(woosh.OP, ':', 411, 44, 411, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 45, 412, 0),
woosh.Token(woosh.INDENT, '                ', 412, 0, 412, 16),
woosh.Token(woosh.NAME, 'fullpath', 412, 16, 412, 24),
woosh.Token(woosh.OP, '=', 412, 25, 412, 26),
woosh.Token(woosh.NAME, 'os', 412, 27, 412, 29),
woosh.Token(woosh.OP, '.', 412, 29, 412, 30),
woosh.Token(woosh.NAME, 'path', 412, 30, 412, 34),
woosh.Token(woosh.OP, '.', 412, 34, 412, 35),
woosh.Token(woosh.NAME, 'join', 412, 35, 412, 39),
woosh.Token(woosh.OP, '(', 412, 39, 412, 40),
woosh.Token(woosh.NAME, 'directory', 412, 40, 412, 49),
woosh.Token(woosh.OP, ',', 412, 49, 412, 50),
woosh.Token(woosh.NAME, 'test_path', 412, 51, 412, 60),
woosh.Token(woosh.OP, ')', 412, 60, 412, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 61, 413, 0),
woosh.Token(woosh.NAME, 'if', 413, 16, 413, 18),
woosh.Token(woosh.NAME, 'os', 413, 19, 413, 21),
woosh.Token(woosh.OP, '.', 413, 21, 413, 22),
woosh.Token(woosh.NAME, 'path', 413, 22, 413, 26),
woosh.Token(woosh.OP, '.', 413, 26, 413, 27),
woosh.Token(woosh.NAME, 'exists', 413, 27, 413, 33),
woosh.Token(woosh.OP, '(', 413, 33, 413, 34),
woosh.Token(woosh.NAME, 'fullpath', 413, 34, 413, 42),
woosh.Token(woosh.OP, ')', 413, 42, 413, 43),
woosh.Token(woosh.OP, ':', 413, 43, 413, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 44, 414, 0),
woosh.Token(woosh.INDENT, '                    ', 414, 0, 414, 20),
woosh.Token(woosh.NAME, 'return', 414, 20, 414, 26),
woosh.Token(woosh.NAME, 'fullpath', 414, 27, 414, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 35, 415, 0),
woosh.Token(woosh.COMMENT, '# A module w/o __file__ (this includes builtins)', 416, 8, 416, 56),
woosh.Token(woosh.DEDENT, '        ', 417, 0, 417, 8),
woosh.Token(woosh.DEDENT, '', 417, 8, 417, 8),
woosh.Token(woosh.DEDENT, '', 417, 8, 417, 8),
woosh.Token(woosh.NAME, 'raise', 417, 8, 417, 13),
woosh.Token(woosh.NAME, 'ValueError', 417, 14, 417, 24),
woosh.Token(woosh.OP, '(', 417, 24, 417, 25),
woosh.Token(woosh.STRING, '"Can\'t resolve paths relative to the module "', 417, 25, 417, 70),
woosh.Token(woosh.STRING, '"%r (it has no __file__)"', 418, 25, 418, 50),
woosh.Token(woosh.OP, '%', 419, 25, 419, 26),
woosh.Token(woosh.NAME, 'module', 419, 27, 419, 33),
woosh.Token(woosh.OP, '.', 419, 33, 419, 34),
woosh.Token(woosh.NAME, '__name__', 419, 34, 419, 42),
woosh.Token(woosh.OP, ')', 419, 42, 419, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 419, 43, 420, 0),
woosh.Token(woosh.COMMENT, '# Combine the base directory and the test path.', 421, 4, 421, 51),
woosh.Token(woosh.DEDENT, '    ', 422, 0, 422, 4),
woosh.Token(woosh.NAME, 'return', 422, 4, 422, 10),
woosh.Token(woosh.NAME, 'os', 422, 11, 422, 13),
woosh.Token(woosh.OP, '.', 422, 13, 422, 14),
woosh.Token(woosh.NAME, 'path', 422, 14, 422, 18),
woosh.Token(woosh.OP, '.', 422, 18, 422, 19),
woosh.Token(woosh.NAME, 'join', 422, 19, 422, 23),
woosh.Token(woosh.OP, '(', 422, 23, 422, 24),
woosh.Token(woosh.NAME, 'basedir', 422, 24, 422, 31),
woosh.Token(woosh.OP, ',', 422, 31, 422, 32),
woosh.Token(woosh.NAME, 'test_path', 422, 33, 422, 42),
woosh.Token(woosh.OP, ')', 422, 42, 422, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 43, 423, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 424, 0, 424, 70),
woosh.Token(woosh.COMMENT, '## 2. Example & DocTest', 425, 0, 425, 23),
woosh.Token(woosh.COMMENT, '######################################################################', 426, 0, 426, 70),
woosh.Token(woosh.COMMENT, '## - An "example" is a <source, want> pair, where "source" is a', 427, 0, 427, 63),
woosh.Token(woosh.COMMENT, '##   fragment of source code, and "want" is the expected output for', 428, 0, 428, 67),
woosh.Token(woosh.COMMENT, '##   "source."  The Example class also includes information about', 429, 0, 429, 65),
woosh.Token(woosh.COMMENT, '##   where the example was extracted from.', 430, 0, 430, 42),
woosh.Token(woosh.COMMENT, '##', 431, 0, 431, 2),
woosh.Token(woosh.COMMENT, '## - A "doctest" is a collection of examples, typically extracted from', 432, 0, 432, 70),
woosh.Token(woosh.COMMENT, "##   a string (such as an object's docstring).  The DocTest class also", 433, 0, 433, 70),
woosh.Token(woosh.COMMENT, '##   includes information about where the string was extracted from.', 434, 0, 434, 68),
woosh.Token(woosh.DEDENT, '', 436, 0, 436, 0),
woosh.Token(woosh.NAME, 'class', 436, 0, 436, 5),
woosh.Token(woosh.NAME, 'Example', 436, 6, 436, 13),
woosh.Token(woosh.OP, ':', 436, 13, 436, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 14, 437, 0),
woosh.Token(woosh.INDENT, '    ', 437, 0, 437, 4),
woosh.Token(woosh.STRING, '"""\r\n    A single doctest example, consisting of source code and expected\r\n    output.  `Example` defines the following attributes:\r\n\r\n      - source: A single Python statement, always ending with a newline.\r\n        The constructor adds a newline if needed.\r\n\r\n      - want: The expected output from running the source code (either\r\n        from stdout, or a traceback in case of exception).  `want` ends\r\n        with a newline unless it\'s empty, in which case it\'s an empty\r\n        string.  The constructor adds a newline if needed.\r\n\r\n      - exc_msg: The exception message generated by the example, if\r\n        the example is expected to generate an exception; or `None` if\r\n        it is not expected to generate an exception.  This exception\r\n        message is compared against the return value of\r\n        `traceback.format_exception_only()`.  `exc_msg` ends with a\r\n        newline unless it\'s `None`.  The constructor adds a newline\r\n        if needed.\r\n\r\n      - lineno: The line number within the DocTest string containing\r\n        this Example where the Example begins.  This line number is\r\n        zero-based, with respect to the beginning of the DocTest.\r\n\r\n      - indent: The example\'s indentation in the DocTest string.\r\n        I.e., the number of space characters that precede the\r\n        example\'s first prompt.\r\n\r\n      - options: A dictionary mapping from option flags to True or\r\n        False, which is used to override default options for this\r\n        example.  Any option flags not contained in this dictionary\r\n        are left at their default value (as specified by the\r\n        DocTestRunner\'s optionflags).  By default, no options are set.\r\n    """', 437, 4, 470, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 7, 471, 0),
woosh.Token(woosh.NAME, 'def', 471, 4, 471, 7),
woosh.Token(woosh.NAME, '__init__', 471, 8, 471, 16),
woosh.Token(woosh.OP, '(', 471, 16, 471, 17),
woosh.Token(woosh.NAME, 'self', 471, 17, 471, 21),
woosh.Token(woosh.OP, ',', 471, 21, 471, 22),
woosh.Token(woosh.NAME, 'source', 471, 23, 471, 29),
woosh.Token(woosh.OP, ',', 471, 29, 471, 30),
woosh.Token(woosh.NAME, 'want', 471, 31, 471, 35),
woosh.Token(woosh.OP, ',', 471, 35, 471, 36),
woosh.Token(woosh.NAME, 'exc_msg', 471, 37, 471, 44),
woosh.Token(woosh.OP, '=', 471, 44, 471, 45),
woosh.Token(woosh.NAME, 'None', 471, 45, 471, 49),
woosh.Token(woosh.OP, ',', 471, 49, 471, 50),
woosh.Token(woosh.NAME, 'lineno', 471, 51, 471, 57),
woosh.Token(woosh.OP, '=', 471, 57, 471, 58),
woosh.Token(woosh.NUMBER, '0', 471, 58, 471, 59),
woosh.Token(woosh.OP, ',', 471, 59, 471, 60),
woosh.Token(woosh.NAME, 'indent', 471, 61, 471, 67),
woosh.Token(woosh.OP, '=', 471, 67, 471, 68),
woosh.Token(woosh.NUMBER, '0', 471, 68, 471, 69),
woosh.Token(woosh.OP, ',', 471, 69, 471, 70),
woosh.Token(woosh.NAME, 'options', 472, 17, 472, 24),
woosh.Token(woosh.OP, '=', 472, 24, 472, 25),
woosh.Token(woosh.NAME, 'None', 472, 25, 472, 29),
woosh.Token(woosh.OP, ')', 472, 29, 472, 30),
woosh.Token(woosh.OP, ':', 472, 30, 472, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 472, 31, 473, 0),
woosh.Token(woosh.COMMENT, '# Normalize inputs.', 473, 8, 473, 27),
woosh.Token(woosh.INDENT, '        ', 474, 0, 474, 8),
woosh.Token(woosh.NAME, 'if', 474, 8, 474, 10),
woosh.Token(woosh.NAME, 'not', 474, 11, 474, 14),
woosh.Token(woosh.NAME, 'source', 474, 15, 474, 21),
woosh.Token(woosh.OP, '.', 474, 21, 474, 22),
woosh.Token(woosh.NAME, 'endswith', 474, 22, 474, 30),
woosh.Token(woosh.OP, '(', 474, 30, 474, 31),
woosh.Token(woosh.STRING, "'\\n'", 474, 31, 474, 35),
woosh.Token(woosh.OP, ')', 474, 35, 474, 36),
woosh.Token(woosh.OP, ':', 474, 36, 474, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 474, 37, 475, 0),
woosh.Token(woosh.INDENT, '            ', 475, 0, 475, 12),
woosh.Token(woosh.NAME, 'source', 475, 12, 475, 18),
woosh.Token(woosh.OP, '+=', 475, 19, 475, 21),
woosh.Token(woosh.STRING, "'\\n'", 475, 22, 475, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 26, 476, 0),
woosh.Token(woosh.DEDENT, '        ', 476, 0, 476, 8),
woosh.Token(woosh.NAME, 'if', 476, 8, 476, 10),
woosh.Token(woosh.NAME, 'want', 476, 11, 476, 15),
woosh.Token(woosh.NAME, 'and', 476, 16, 476, 19),
woosh.Token(woosh.NAME, 'not', 476, 20, 476, 23),
woosh.Token(woosh.NAME, 'want', 476, 24, 476, 28),
woosh.Token(woosh.OP, '.', 476, 28, 476, 29),
woosh.Token(woosh.NAME, 'endswith', 476, 29, 476, 37),
woosh.Token(woosh.OP, '(', 476, 37, 476, 38),
woosh.Token(woosh.STRING, "'\\n'", 476, 38, 476, 42),
woosh.Token(woosh.OP, ')', 476, 42, 476, 43),
woosh.Token(woosh.OP, ':', 476, 43, 476, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 476, 44, 477, 0),
woosh.Token(woosh.INDENT, '            ', 477, 0, 477, 12),
woosh.Token(woosh.NAME, 'want', 477, 12, 477, 16),
woosh.Token(woosh.OP, '+=', 477, 17, 477, 19),
woosh.Token(woosh.STRING, "'\\n'", 477, 20, 477, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 24, 478, 0),
woosh.Token(woosh.DEDENT, '        ', 478, 0, 478, 8),
woosh.Token(woosh.NAME, 'if', 478, 8, 478, 10),
woosh.Token(woosh.NAME, 'exc_msg', 478, 11, 478, 18),
woosh.Token(woosh.NAME, 'is', 478, 19, 478, 21),
woosh.Token(woosh.NAME, 'not', 478, 22, 478, 25),
woosh.Token(woosh.NAME, 'None', 478, 26, 478, 30),
woosh.Token(woosh.NAME, 'and', 478, 31, 478, 34),
woosh.Token(woosh.NAME, 'not', 478, 35, 478, 38),
woosh.Token(woosh.NAME, 'exc_msg', 478, 39, 478, 46),
woosh.Token(woosh.OP, '.', 478, 46, 478, 47),
woosh.Token(woosh.NAME, 'endswith', 478, 47, 478, 55),
woosh.Token(woosh.OP, '(', 478, 55, 478, 56),
woosh.Token(woosh.STRING, "'\\n'", 478, 56, 478, 60),
woosh.Token(woosh.OP, ')', 478, 60, 478, 61),
woosh.Token(woosh.OP, ':', 478, 61, 478, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 62, 479, 0),
woosh.Token(woosh.INDENT, '            ', 479, 0, 479, 12),
woosh.Token(woosh.NAME, 'exc_msg', 479, 12, 479, 19),
woosh.Token(woosh.OP, '+=', 479, 20, 479, 22),
woosh.Token(woosh.STRING, "'\\n'", 479, 23, 479, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 27, 480, 0),
woosh.Token(woosh.COMMENT, '# Store properties.', 480, 8, 480, 27),
woosh.Token(woosh.DEDENT, '        ', 481, 0, 481, 8),
woosh.Token(woosh.NAME, 'self', 481, 8, 481, 12),
woosh.Token(woosh.OP, '.', 481, 12, 481, 13),
woosh.Token(woosh.NAME, 'source', 481, 13, 481, 19),
woosh.Token(woosh.OP, '=', 481, 20, 481, 21),
woosh.Token(woosh.NAME, 'source', 481, 22, 481, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 481, 28, 482, 0),
woosh.Token(woosh.NAME, 'self', 482, 8, 482, 12),
woosh.Token(woosh.OP, '.', 482, 12, 482, 13),
woosh.Token(woosh.NAME, 'want', 482, 13, 482, 17),
woosh.Token(woosh.OP, '=', 482, 18, 482, 19),
woosh.Token(woosh.NAME, 'want', 482, 20, 482, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 24, 483, 0),
woosh.Token(woosh.NAME, 'self', 483, 8, 483, 12),
woosh.Token(woosh.OP, '.', 483, 12, 483, 13),
woosh.Token(woosh.NAME, 'lineno', 483, 13, 483, 19),
woosh.Token(woosh.OP, '=', 483, 20, 483, 21),
woosh.Token(woosh.NAME, 'lineno', 483, 22, 483, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 28, 484, 0),
woosh.Token(woosh.NAME, 'self', 484, 8, 484, 12),
woosh.Token(woosh.OP, '.', 484, 12, 484, 13),
woosh.Token(woosh.NAME, 'indent', 484, 13, 484, 19),
woosh.Token(woosh.OP, '=', 484, 20, 484, 21),
woosh.Token(woosh.NAME, 'indent', 484, 22, 484, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 28, 485, 0),
woosh.Token(woosh.NAME, 'if', 485, 8, 485, 10),
woosh.Token(woosh.NAME, 'options', 485, 11, 485, 18),
woosh.Token(woosh.NAME, 'is', 485, 19, 485, 21),
woosh.Token(woosh.NAME, 'None', 485, 22, 485, 26),
woosh.Token(woosh.OP, ':', 485, 26, 485, 27),
woosh.Token(woosh.NAME, 'options', 485, 28, 485, 35),
woosh.Token(woosh.OP, '=', 485, 36, 485, 37),
woosh.Token(woosh.OP, '{', 485, 38, 485, 39),
woosh.Token(woosh.OP, '}', 485, 39, 485, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 40, 486, 0),
woosh.Token(woosh.NAME, 'self', 486, 8, 486, 12),
woosh.Token(woosh.OP, '.', 486, 12, 486, 13),
woosh.Token(woosh.NAME, 'options', 486, 13, 486, 20),
woosh.Token(woosh.OP, '=', 486, 21, 486, 22),
woosh.Token(woosh.NAME, 'options', 486, 23, 486, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 30, 487, 0),
woosh.Token(woosh.NAME, 'self', 487, 8, 487, 12),
woosh.Token(woosh.OP, '.', 487, 12, 487, 13),
woosh.Token(woosh.NAME, 'exc_msg', 487, 13, 487, 20),
woosh.Token(woosh.OP, '=', 487, 21, 487, 22),
woosh.Token(woosh.NAME, 'exc_msg', 487, 23, 487, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 30, 488, 0),
woosh.Token(woosh.DEDENT, '    ', 489, 0, 489, 4),
woosh.Token(woosh.NAME, 'def', 489, 4, 489, 7),
woosh.Token(woosh.NAME, '__eq__', 489, 8, 489, 14),
woosh.Token(woosh.OP, '(', 489, 14, 489, 15),
woosh.Token(woosh.NAME, 'self', 489, 15, 489, 19),
woosh.Token(woosh.OP, ',', 489, 19, 489, 20),
woosh.Token(woosh.NAME, 'other', 489, 21, 489, 26),
woosh.Token(woosh.OP, ')', 489, 26, 489, 27),
woosh.Token(woosh.OP, ':', 489, 27, 489, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 28, 490, 0),
woosh.Token(woosh.INDENT, '        ', 490, 0, 490, 8),
woosh.Token(woosh.NAME, 'if', 490, 8, 490, 10),
woosh.Token(woosh.NAME, 'type', 490, 11, 490, 15),
woosh.Token(woosh.OP, '(', 490, 15, 490, 16),
woosh.Token(woosh.NAME, 'self', 490, 16, 490, 20),
woosh.Token(woosh.OP, ')', 490, 20, 490, 21),
woosh.Token(woosh.NAME, 'is', 490, 22, 490, 24),
woosh.Token(woosh.NAME, 'not', 490, 25, 490, 28),
woosh.Token(woosh.NAME, 'type', 490, 29, 490, 33),
woosh.Token(woosh.OP, '(', 490, 33, 490, 34),
woosh.Token(woosh.NAME, 'other', 490, 34, 490, 39),
woosh.Token(woosh.OP, ')', 490, 39, 490, 40),
woosh.Token(woosh.OP, ':', 490, 40, 490, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 41, 491, 0),
woosh.Token(woosh.INDENT, '            ', 491, 0, 491, 12),
woosh.Token(woosh.NAME, 'return', 491, 12, 491, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 491, 19, 491, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 33, 492, 0),
woosh.Token(woosh.DEDENT, '        ', 493, 0, 493, 8),
woosh.Token(woosh.NAME, 'return', 493, 8, 493, 14),
woosh.Token(woosh.NAME, 'self', 493, 15, 493, 19),
woosh.Token(woosh.OP, '.', 493, 19, 493, 20),
woosh.Token(woosh.NAME, 'source', 493, 20, 493, 26),
woosh.Token(woosh.OP, '==', 493, 27, 493, 29),
woosh.Token(woosh.NAME, 'other', 493, 30, 493, 35),
woosh.Token(woosh.OP, '.', 493, 35, 493, 36),
woosh.Token(woosh.NAME, 'source', 493, 36, 493, 42),
woosh.Token(woosh.NAME, 'and', 493, 43, 493, 46),
woosh.Token(woosh.NAME, 'self', 494, 15, 494, 19),
woosh.Token(woosh.OP, '.', 494, 19, 494, 20),
woosh.Token(woosh.NAME, 'want', 494, 20, 494, 24),
woosh.Token(woosh.OP, '==', 494, 25, 494, 27),
woosh.Token(woosh.NAME, 'other', 494, 28, 494, 33),
woosh.Token(woosh.OP, '.', 494, 33, 494, 34),
woosh.Token(woosh.NAME, 'want', 494, 34, 494, 38),
woosh.Token(woosh.NAME, 'and', 494, 39, 494, 42),
woosh.Token(woosh.NAME, 'self', 495, 15, 495, 19),
woosh.Token(woosh.OP, '.', 495, 19, 495, 20),
woosh.Token(woosh.NAME, 'lineno', 495, 20, 495, 26),
woosh.Token(woosh.OP, '==', 495, 27, 495, 29),
woosh.Token(woosh.NAME, 'other', 495, 30, 495, 35),
woosh.Token(woosh.OP, '.', 495, 35, 495, 36),
woosh.Token(woosh.NAME, 'lineno', 495, 36, 495, 42),
woosh.Token(woosh.NAME, 'and', 495, 43, 495, 46),
woosh.Token(woosh.NAME, 'self', 496, 15, 496, 19),
woosh.Token(woosh.OP, '.', 496, 19, 496, 20),
woosh.Token(woosh.NAME, 'indent', 496, 20, 496, 26),
woosh.Token(woosh.OP, '==', 496, 27, 496, 29),
woosh.Token(woosh.NAME, 'other', 496, 30, 496, 35),
woosh.Token(woosh.OP, '.', 496, 35, 496, 36),
woosh.Token(woosh.NAME, 'indent', 496, 36, 496, 42),
woosh.Token(woosh.NAME, 'and', 496, 43, 496, 46),
woosh.Token(woosh.NAME, 'self', 497, 15, 497, 19),
woosh.Token(woosh.OP, '.', 497, 19, 497, 20),
woosh.Token(woosh.NAME, 'options', 497, 20, 497, 27),
woosh.Token(woosh.OP, '==', 497, 28, 497, 30),
woosh.Token(woosh.NAME, 'other', 497, 31, 497, 36),
woosh.Token(woosh.OP, '.', 497, 36, 497, 37),
woosh.Token(woosh.NAME, 'options', 497, 37, 497, 44),
woosh.Token(woosh.NAME, 'and', 497, 45, 497, 48),
woosh.Token(woosh.NAME, 'self', 498, 15, 498, 19),
woosh.Token(woosh.OP, '.', 498, 19, 498, 20),
woosh.Token(woosh.NAME, 'exc_msg', 498, 20, 498, 27),
woosh.Token(woosh.OP, '==', 498, 28, 498, 30),
woosh.Token(woosh.NAME, 'other', 498, 31, 498, 36),
woosh.Token(woosh.OP, '.', 498, 36, 498, 37),
woosh.Token(woosh.NAME, 'exc_msg', 498, 37, 498, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 44, 499, 0),
woosh.Token(woosh.DEDENT, '    ', 500, 0, 500, 4),
woosh.Token(woosh.NAME, 'def', 500, 4, 500, 7),
woosh.Token(woosh.NAME, '__hash__', 500, 8, 500, 16),
woosh.Token(woosh.OP, '(', 500, 16, 500, 17),
woosh.Token(woosh.NAME, 'self', 500, 17, 500, 21),
woosh.Token(woosh.OP, ')', 500, 21, 500, 22),
woosh.Token(woosh.OP, ':', 500, 22, 500, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 23, 501, 0),
woosh.Token(woosh.INDENT, '        ', 501, 0, 501, 8),
woosh.Token(woosh.NAME, 'return', 501, 8, 501, 14),
woosh.Token(woosh.NAME, 'hash', 501, 15, 501, 19),
woosh.Token(woosh.OP, '(', 501, 19, 501, 20),
woosh.Token(woosh.OP, '(', 501, 20, 501, 21),
woosh.Token(woosh.NAME, 'self', 501, 21, 501, 25),
woosh.Token(woosh.OP, '.', 501, 25, 501, 26),
woosh.Token(woosh.NAME, 'source', 501, 26, 501, 32),
woosh.Token(woosh.OP, ',', 501, 32, 501, 33),
woosh.Token(woosh.NAME, 'self', 501, 34, 501, 38),
woosh.Token(woosh.OP, '.', 501, 38, 501, 39),
woosh.Token(woosh.NAME, 'want', 501, 39, 501, 43),
woosh.Token(woosh.OP, ',', 501, 43, 501, 44),
woosh.Token(woosh.NAME, 'self', 501, 45, 501, 49),
woosh.Token(woosh.OP, '.', 501, 49, 501, 50),
woosh.Token(woosh.NAME, 'lineno', 501, 50, 501, 56),
woosh.Token(woosh.OP, ',', 501, 56, 501, 57),
woosh.Token(woosh.NAME, 'self', 501, 58, 501, 62),
woosh.Token(woosh.OP, '.', 501, 62, 501, 63),
woosh.Token(woosh.NAME, 'indent', 501, 63, 501, 69),
woosh.Token(woosh.OP, ',', 501, 69, 501, 70),
woosh.Token(woosh.NAME, 'self', 502, 21, 502, 25),
woosh.Token(woosh.OP, '.', 502, 25, 502, 26),
woosh.Token(woosh.NAME, 'exc_msg', 502, 26, 502, 33),
woosh.Token(woosh.OP, ')', 502, 33, 502, 34),
woosh.Token(woosh.OP, ')', 502, 34, 502, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 35, 503, 0),
woosh.Token(woosh.DEDENT, '', 504, 0, 504, 0),
woosh.Token(woosh.DEDENT, '', 504, 0, 504, 0),
woosh.Token(woosh.NAME, 'class', 504, 0, 504, 5),
woosh.Token(woosh.NAME, 'DocTest', 504, 6, 504, 13),
woosh.Token(woosh.OP, ':', 504, 13, 504, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 504, 14, 505, 0),
woosh.Token(woosh.INDENT, '    ', 505, 0, 505, 4),
woosh.Token(woosh.STRING, '"""\r\n    A collection of doctest examples that should be run in a single\r\n    namespace.  Each `DocTest` defines the following attributes:\r\n\r\n      - examples: the list of examples.\r\n\r\n      - globs: The namespace (aka globals) that the examples should\r\n        be run in.\r\n\r\n      - name: A name identifying the DocTest (typically, the name of\r\n        the object whose docstring this DocTest was extracted from).\r\n\r\n      - filename: The name of the file that this DocTest was extracted\r\n        from, or `None` if the filename is unknown.\r\n\r\n      - lineno: The line number within filename where this DocTest\r\n        begins, or `None` if the line number is unavailable.  This\r\n        line number is zero-based, with respect to the beginning of\r\n        the file.\r\n\r\n      - docstring: The string that the examples were extracted from,\r\n        or `None` if the string is unavailable.\r\n    """', 505, 4, 527, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 527, 7, 528, 0),
woosh.Token(woosh.NAME, 'def', 528, 4, 528, 7),
woosh.Token(woosh.NAME, '__init__', 528, 8, 528, 16),
woosh.Token(woosh.OP, '(', 528, 16, 528, 17),
woosh.Token(woosh.NAME, 'self', 528, 17, 528, 21),
woosh.Token(woosh.OP, ',', 528, 21, 528, 22),
woosh.Token(woosh.NAME, 'examples', 528, 23, 528, 31),
woosh.Token(woosh.OP, ',', 528, 31, 528, 32),
woosh.Token(woosh.NAME, 'globs', 528, 33, 528, 38),
woosh.Token(woosh.OP, ',', 528, 38, 528, 39),
woosh.Token(woosh.NAME, 'name', 528, 40, 528, 44),
woosh.Token(woosh.OP, ',', 528, 44, 528, 45),
woosh.Token(woosh.NAME, 'filename', 528, 46, 528, 54),
woosh.Token(woosh.OP, ',', 528, 54, 528, 55),
woosh.Token(woosh.NAME, 'lineno', 528, 56, 528, 62),
woosh.Token(woosh.OP, ',', 528, 62, 528, 63),
woosh.Token(woosh.NAME, 'docstring', 528, 64, 528, 73),
woosh.Token(woosh.OP, ')', 528, 73, 528, 74),
woosh.Token(woosh.OP, ':', 528, 74, 528, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 75, 529, 0),
woosh.Token(woosh.INDENT, '        ', 529, 0, 529, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create a new DocTest containing the given examples.  The\r\n        DocTest\'s globals are initialized with a copy of `globs`.\r\n        """', 529, 8, 532, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 11, 533, 0),
woosh.Token(woosh.NAME, 'assert', 533, 8, 533, 14),
woosh.Token(woosh.NAME, 'not', 533, 15, 533, 18),
woosh.Token(woosh.NAME, 'isinstance', 533, 19, 533, 29),
woosh.Token(woosh.OP, '(', 533, 29, 533, 30),
woosh.Token(woosh.NAME, 'examples', 533, 30, 533, 38),
woosh.Token(woosh.OP, ',', 533, 38, 533, 39),
woosh.Token(woosh.NAME, 'str', 533, 40, 533, 43),
woosh.Token(woosh.OP, ')', 533, 43, 533, 44),
woosh.Token(woosh.OP, ',', 533, 44, 533, 45),
woosh.Token(woosh.STRING, '"DocTest no longer accepts str; use DocTestParser instead"', 534, 15, 534, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 534, 73, 535, 0),
woosh.Token(woosh.NAME, 'self', 535, 8, 535, 12),
woosh.Token(woosh.OP, '.', 535, 12, 535, 13),
woosh.Token(woosh.NAME, 'examples', 535, 13, 535, 21),
woosh.Token(woosh.OP, '=', 535, 22, 535, 23),
woosh.Token(woosh.NAME, 'examples', 535, 24, 535, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 32, 536, 0),
woosh.Token(woosh.NAME, 'self', 536, 8, 536, 12),
woosh.Token(woosh.OP, '.', 536, 12, 536, 13),
woosh.Token(woosh.NAME, 'docstring', 536, 13, 536, 22),
woosh.Token(woosh.OP, '=', 536, 23, 536, 24),
woosh.Token(woosh.NAME, 'docstring', 536, 25, 536, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 34, 537, 0),
woosh.Token(woosh.NAME, 'self', 537, 8, 537, 12),
woosh.Token(woosh.OP, '.', 537, 12, 537, 13),
woosh.Token(woosh.NAME, 'globs', 537, 13, 537, 18),
woosh.Token(woosh.OP, '=', 537, 19, 537, 20),
woosh.Token(woosh.NAME, 'globs', 537, 21, 537, 26),
woosh.Token(woosh.OP, '.', 537, 26, 537, 27),
woosh.Token(woosh.NAME, 'copy', 537, 27, 537, 31),
woosh.Token(woosh.OP, '(', 537, 31, 537, 32),
woosh.Token(woosh.OP, ')', 537, 32, 537, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 537, 33, 538, 0),
woosh.Token(woosh.NAME, 'self', 538, 8, 538, 12),
woosh.Token(woosh.OP, '.', 538, 12, 538, 13),
woosh.Token(woosh.NAME, 'name', 538, 13, 538, 17),
woosh.Token(woosh.OP, '=', 538, 18, 538, 19),
woosh.Token(woosh.NAME, 'name', 538, 20, 538, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 538, 24, 539, 0),
woosh.Token(woosh.NAME, 'self', 539, 8, 539, 12),
woosh.Token(woosh.OP, '.', 539, 12, 539, 13),
woosh.Token(woosh.NAME, 'filename', 539, 13, 539, 21),
woosh.Token(woosh.OP, '=', 539, 22, 539, 23),
woosh.Token(woosh.NAME, 'filename', 539, 24, 539, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 539, 32, 540, 0),
woosh.Token(woosh.NAME, 'self', 540, 8, 540, 12),
woosh.Token(woosh.OP, '.', 540, 12, 540, 13),
woosh.Token(woosh.NAME, 'lineno', 540, 13, 540, 19),
woosh.Token(woosh.OP, '=', 540, 20, 540, 21),
woosh.Token(woosh.NAME, 'lineno', 540, 22, 540, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 540, 28, 541, 0),
woosh.Token(woosh.DEDENT, '    ', 542, 0, 542, 4),
woosh.Token(woosh.NAME, 'def', 542, 4, 542, 7),
woosh.Token(woosh.NAME, '__repr__', 542, 8, 542, 16),
woosh.Token(woosh.OP, '(', 542, 16, 542, 17),
woosh.Token(woosh.NAME, 'self', 542, 17, 542, 21),
woosh.Token(woosh.OP, ')', 542, 21, 542, 22),
woosh.Token(woosh.OP, ':', 542, 22, 542, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 23, 543, 0),
woosh.Token(woosh.INDENT, '        ', 543, 0, 543, 8),
woosh.Token(woosh.NAME, 'if', 543, 8, 543, 10),
woosh.Token(woosh.NAME, 'len', 543, 11, 543, 14),
woosh.Token(woosh.OP, '(', 543, 14, 543, 15),
woosh.Token(woosh.NAME, 'self', 543, 15, 543, 19),
woosh.Token(woosh.OP, '.', 543, 19, 543, 20),
woosh.Token(woosh.NAME, 'examples', 543, 20, 543, 28),
woosh.Token(woosh.OP, ')', 543, 28, 543, 29),
woosh.Token(woosh.OP, '==', 543, 30, 543, 32),
woosh.Token(woosh.NUMBER, '0', 543, 33, 543, 34),
woosh.Token(woosh.OP, ':', 543, 34, 543, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 35, 544, 0),
woosh.Token(woosh.INDENT, '            ', 544, 0, 544, 12),
woosh.Token(woosh.NAME, 'examples', 544, 12, 544, 20),
woosh.Token(woosh.OP, '=', 544, 21, 544, 22),
woosh.Token(woosh.STRING, "'no examples'", 544, 23, 544, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 36, 545, 0),
woosh.Token(woosh.DEDENT, '        ', 545, 0, 545, 8),
woosh.Token(woosh.NAME, 'elif', 545, 8, 545, 12),
woosh.Token(woosh.NAME, 'len', 545, 13, 545, 16),
woosh.Token(woosh.OP, '(', 545, 16, 545, 17),
woosh.Token(woosh.NAME, 'self', 545, 17, 545, 21),
woosh.Token(woosh.OP, '.', 545, 21, 545, 22),
woosh.Token(woosh.NAME, 'examples', 545, 22, 545, 30),
woosh.Token(woosh.OP, ')', 545, 30, 545, 31),
woosh.Token(woosh.OP, '==', 545, 32, 545, 34),
woosh.Token(woosh.NUMBER, '1', 545, 35, 545, 36),
woosh.Token(woosh.OP, ':', 545, 36, 545, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 37, 546, 0),
woosh.Token(woosh.INDENT, '            ', 546, 0, 546, 12),
woosh.Token(woosh.NAME, 'examples', 546, 12, 546, 20),
woosh.Token(woosh.OP, '=', 546, 21, 546, 22),
woosh.Token(woosh.STRING, "'1 example'", 546, 23, 546, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 34, 547, 0),
woosh.Token(woosh.DEDENT, '        ', 547, 0, 547, 8),
woosh.Token(woosh.NAME, 'else', 547, 8, 547, 12),
woosh.Token(woosh.OP, ':', 547, 12, 547, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 13, 548, 0),
woosh.Token(woosh.INDENT, '            ', 548, 0, 548, 12),
woosh.Token(woosh.NAME, 'examples', 548, 12, 548, 20),
woosh.Token(woosh.OP, '=', 548, 21, 548, 22),
woosh.Token(woosh.STRING, "'%d examples'", 548, 23, 548, 36),
woosh.Token(woosh.OP, '%', 548, 37, 548, 38),
woosh.Token(woosh.NAME, 'len', 548, 39, 548, 42),
woosh.Token(woosh.OP, '(', 548, 42, 548, 43),
woosh.Token(woosh.NAME, 'self', 548, 43, 548, 47),
woosh.Token(woosh.OP, '.', 548, 47, 548, 48),
woosh.Token(woosh.NAME, 'examples', 548, 48, 548, 56),
woosh.Token(woosh.OP, ')', 548, 56, 548, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 57, 549, 0),
woosh.Token(woosh.DEDENT, '        ', 549, 0, 549, 8),
woosh.Token(woosh.NAME, 'return', 549, 8, 549, 14),
woosh.Token(woosh.OP, '(', 549, 15, 549, 16),
woosh.Token(woosh.STRING, "'<%s %s from %s:%s (%s)>'", 549, 16, 549, 41),
woosh.Token(woosh.OP, '%', 549, 42, 549, 43),
woosh.Token(woosh.OP, '(', 550, 16, 550, 17),
woosh.Token(woosh.NAME, 'self', 550, 17, 550, 21),
woosh.Token(woosh.OP, '.', 550, 21, 550, 22),
woosh.Token(woosh.NAME, '__class__', 550, 22, 550, 31),
woosh.Token(woosh.OP, '.', 550, 31, 550, 32),
woosh.Token(woosh.NAME, '__name__', 550, 32, 550, 40),
woosh.Token(woosh.OP, ',', 550, 40, 550, 41),
woosh.Token(woosh.NAME, 'self', 551, 17, 551, 21),
woosh.Token(woosh.OP, '.', 551, 21, 551, 22),
woosh.Token(woosh.NAME, 'name', 551, 22, 551, 26),
woosh.Token(woosh.OP, ',', 551, 26, 551, 27),
woosh.Token(woosh.NAME, 'self', 551, 28, 551, 32),
woosh.Token(woosh.OP, '.', 551, 32, 551, 33),
woosh.Token(woosh.NAME, 'filename', 551, 33, 551, 41),
woosh.Token(woosh.OP, ',', 551, 41, 551, 42),
woosh.Token(woosh.NAME, 'self', 551, 43, 551, 47),
woosh.Token(woosh.OP, '.', 551, 47, 551, 48),
woosh.Token(woosh.NAME, 'lineno', 551, 48, 551, 54),
woosh.Token(woosh.OP, ',', 551, 54, 551, 55),
woosh.Token(woosh.NAME, 'examples', 551, 56, 551, 64),
woosh.Token(woosh.OP, ')', 551, 64, 551, 65),
woosh.Token(woosh.OP, ')', 551, 65, 551, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 551, 66, 552, 0),
woosh.Token(woosh.DEDENT, '    ', 553, 0, 553, 4),
woosh.Token(woosh.NAME, 'def', 553, 4, 553, 7),
woosh.Token(woosh.NAME, '__eq__', 553, 8, 553, 14),
woosh.Token(woosh.OP, '(', 553, 14, 553, 15),
woosh.Token(woosh.NAME, 'self', 553, 15, 553, 19),
woosh.Token(woosh.OP, ',', 553, 19, 553, 20),
woosh.Token(woosh.NAME, 'other', 553, 21, 553, 26),
woosh.Token(woosh.OP, ')', 553, 26, 553, 27),
woosh.Token(woosh.OP, ':', 553, 27, 553, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 553, 28, 554, 0),
woosh.Token(woosh.INDENT, '        ', 554, 0, 554, 8),
woosh.Token(woosh.NAME, 'if', 554, 8, 554, 10),
woosh.Token(woosh.NAME, 'type', 554, 11, 554, 15),
woosh.Token(woosh.OP, '(', 554, 15, 554, 16),
woosh.Token(woosh.NAME, 'self', 554, 16, 554, 20),
woosh.Token(woosh.OP, ')', 554, 20, 554, 21),
woosh.Token(woosh.NAME, 'is', 554, 22, 554, 24),
woosh.Token(woosh.NAME, 'not', 554, 25, 554, 28),
woosh.Token(woosh.NAME, 'type', 554, 29, 554, 33),
woosh.Token(woosh.OP, '(', 554, 33, 554, 34),
woosh.Token(woosh.NAME, 'other', 554, 34, 554, 39),
woosh.Token(woosh.OP, ')', 554, 39, 554, 40),
woosh.Token(woosh.OP, ':', 554, 40, 554, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 41, 555, 0),
woosh.Token(woosh.INDENT, '            ', 555, 0, 555, 12),
woosh.Token(woosh.NAME, 'return', 555, 12, 555, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 555, 19, 555, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 33, 556, 0),
woosh.Token(woosh.DEDENT, '        ', 557, 0, 557, 8),
woosh.Token(woosh.NAME, 'return', 557, 8, 557, 14),
woosh.Token(woosh.NAME, 'self', 557, 15, 557, 19),
woosh.Token(woosh.OP, '.', 557, 19, 557, 20),
woosh.Token(woosh.NAME, 'examples', 557, 20, 557, 28),
woosh.Token(woosh.OP, '==', 557, 29, 557, 31),
woosh.Token(woosh.NAME, 'other', 557, 32, 557, 37),
woosh.Token(woosh.OP, '.', 557, 37, 557, 38),
woosh.Token(woosh.NAME, 'examples', 557, 38, 557, 46),
woosh.Token(woosh.NAME, 'and', 557, 47, 557, 50),
woosh.Token(woosh.NAME, 'self', 558, 15, 558, 19),
woosh.Token(woosh.OP, '.', 558, 19, 558, 20),
woosh.Token(woosh.NAME, 'docstring', 558, 20, 558, 29),
woosh.Token(woosh.OP, '==', 558, 30, 558, 32),
woosh.Token(woosh.NAME, 'other', 558, 33, 558, 38),
woosh.Token(woosh.OP, '.', 558, 38, 558, 39),
woosh.Token(woosh.NAME, 'docstring', 558, 39, 558, 48),
woosh.Token(woosh.NAME, 'and', 558, 49, 558, 52),
woosh.Token(woosh.NAME, 'self', 559, 15, 559, 19),
woosh.Token(woosh.OP, '.', 559, 19, 559, 20),
woosh.Token(woosh.NAME, 'globs', 559, 20, 559, 25),
woosh.Token(woosh.OP, '==', 559, 26, 559, 28),
woosh.Token(woosh.NAME, 'other', 559, 29, 559, 34),
woosh.Token(woosh.OP, '.', 559, 34, 559, 35),
woosh.Token(woosh.NAME, 'globs', 559, 35, 559, 40),
woosh.Token(woosh.NAME, 'and', 559, 41, 559, 44),
woosh.Token(woosh.NAME, 'self', 560, 15, 560, 19),
woosh.Token(woosh.OP, '.', 560, 19, 560, 20),
woosh.Token(woosh.NAME, 'name', 560, 20, 560, 24),
woosh.Token(woosh.OP, '==', 560, 25, 560, 27),
woosh.Token(woosh.NAME, 'other', 560, 28, 560, 33),
woosh.Token(woosh.OP, '.', 560, 33, 560, 34),
woosh.Token(woosh.NAME, 'name', 560, 34, 560, 38),
woosh.Token(woosh.NAME, 'and', 560, 39, 560, 42),
woosh.Token(woosh.NAME, 'self', 561, 15, 561, 19),
woosh.Token(woosh.OP, '.', 561, 19, 561, 20),
woosh.Token(woosh.NAME, 'filename', 561, 20, 561, 28),
woosh.Token(woosh.OP, '==', 561, 29, 561, 31),
woosh.Token(woosh.NAME, 'other', 561, 32, 561, 37),
woosh.Token(woosh.OP, '.', 561, 37, 561, 38),
woosh.Token(woosh.NAME, 'filename', 561, 38, 561, 46),
woosh.Token(woosh.NAME, 'and', 561, 47, 561, 50),
woosh.Token(woosh.NAME, 'self', 562, 15, 562, 19),
woosh.Token(woosh.OP, '.', 562, 19, 562, 20),
woosh.Token(woosh.NAME, 'lineno', 562, 20, 562, 26),
woosh.Token(woosh.OP, '==', 562, 27, 562, 29),
woosh.Token(woosh.NAME, 'other', 562, 30, 562, 35),
woosh.Token(woosh.OP, '.', 562, 35, 562, 36),
woosh.Token(woosh.NAME, 'lineno', 562, 36, 562, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 562, 42, 563, 0),
woosh.Token(woosh.DEDENT, '    ', 564, 0, 564, 4),
woosh.Token(woosh.NAME, 'def', 564, 4, 564, 7),
woosh.Token(woosh.NAME, '__hash__', 564, 8, 564, 16),
woosh.Token(woosh.OP, '(', 564, 16, 564, 17),
woosh.Token(woosh.NAME, 'self', 564, 17, 564, 21),
woosh.Token(woosh.OP, ')', 564, 21, 564, 22),
woosh.Token(woosh.OP, ':', 564, 22, 564, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 564, 23, 565, 0),
woosh.Token(woosh.INDENT, '        ', 565, 0, 565, 8),
woosh.Token(woosh.NAME, 'return', 565, 8, 565, 14),
woosh.Token(woosh.NAME, 'hash', 565, 15, 565, 19),
woosh.Token(woosh.OP, '(', 565, 19, 565, 20),
woosh.Token(woosh.OP, '(', 565, 20, 565, 21),
woosh.Token(woosh.NAME, 'self', 565, 21, 565, 25),
woosh.Token(woosh.OP, '.', 565, 25, 565, 26),
woosh.Token(woosh.NAME, 'docstring', 565, 26, 565, 35),
woosh.Token(woosh.OP, ',', 565, 35, 565, 36),
woosh.Token(woosh.NAME, 'self', 565, 37, 565, 41),
woosh.Token(woosh.OP, '.', 565, 41, 565, 42),
woosh.Token(woosh.NAME, 'name', 565, 42, 565, 46),
woosh.Token(woosh.OP, ',', 565, 46, 565, 47),
woosh.Token(woosh.NAME, 'self', 565, 48, 565, 52),
woosh.Token(woosh.OP, '.', 565, 52, 565, 53),
woosh.Token(woosh.NAME, 'filename', 565, 53, 565, 61),
woosh.Token(woosh.OP, ',', 565, 61, 565, 62),
woosh.Token(woosh.NAME, 'self', 565, 63, 565, 67),
woosh.Token(woosh.OP, '.', 565, 67, 565, 68),
woosh.Token(woosh.NAME, 'lineno', 565, 68, 565, 74),
woosh.Token(woosh.OP, ')', 565, 74, 565, 75),
woosh.Token(woosh.OP, ')', 565, 75, 565, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 565, 76, 566, 0),
woosh.Token(woosh.COMMENT, '# This lets us sort tests by name:', 567, 4, 567, 38),
woosh.Token(woosh.DEDENT, '    ', 568, 0, 568, 4),
woosh.Token(woosh.NAME, 'def', 568, 4, 568, 7),
woosh.Token(woosh.NAME, '__lt__', 568, 8, 568, 14),
woosh.Token(woosh.OP, '(', 568, 14, 568, 15),
woosh.Token(woosh.NAME, 'self', 568, 15, 568, 19),
woosh.Token(woosh.OP, ',', 568, 19, 568, 20),
woosh.Token(woosh.NAME, 'other', 568, 21, 568, 26),
woosh.Token(woosh.OP, ')', 568, 26, 568, 27),
woosh.Token(woosh.OP, ':', 568, 27, 568, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 28, 569, 0),
woosh.Token(woosh.INDENT, '        ', 569, 0, 569, 8),
woosh.Token(woosh.NAME, 'if', 569, 8, 569, 10),
woosh.Token(woosh.NAME, 'not', 569, 11, 569, 14),
woosh.Token(woosh.NAME, 'isinstance', 569, 15, 569, 25),
woosh.Token(woosh.OP, '(', 569, 25, 569, 26),
woosh.Token(woosh.NAME, 'other', 569, 26, 569, 31),
woosh.Token(woosh.OP, ',', 569, 31, 569, 32),
woosh.Token(woosh.NAME, 'DocTest', 569, 33, 569, 40),
woosh.Token(woosh.OP, ')', 569, 40, 569, 41),
woosh.Token(woosh.OP, ':', 569, 41, 569, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 569, 42, 570, 0),
woosh.Token(woosh.INDENT, '            ', 570, 0, 570, 12),
woosh.Token(woosh.NAME, 'return', 570, 12, 570, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 570, 19, 570, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 570, 33, 571, 0),
woosh.Token(woosh.DEDENT, '        ', 571, 0, 571, 8),
woosh.Token(woosh.NAME, 'return', 571, 8, 571, 14),
woosh.Token(woosh.OP, '(', 571, 15, 571, 16),
woosh.Token(woosh.OP, '(', 571, 16, 571, 17),
woosh.Token(woosh.NAME, 'self', 571, 17, 571, 21),
woosh.Token(woosh.OP, '.', 571, 21, 571, 22),
woosh.Token(woosh.NAME, 'name', 571, 22, 571, 26),
woosh.Token(woosh.OP, ',', 571, 26, 571, 27),
woosh.Token(woosh.NAME, 'self', 571, 28, 571, 32),
woosh.Token(woosh.OP, '.', 571, 32, 571, 33),
woosh.Token(woosh.NAME, 'filename', 571, 33, 571, 41),
woosh.Token(woosh.OP, ',', 571, 41, 571, 42),
woosh.Token(woosh.NAME, 'self', 571, 43, 571, 47),
woosh.Token(woosh.OP, '.', 571, 47, 571, 48),
woosh.Token(woosh.NAME, 'lineno', 571, 48, 571, 54),
woosh.Token(woosh.OP, ',', 571, 54, 571, 55),
woosh.Token(woosh.NAME, 'id', 571, 56, 571, 58),
woosh.Token(woosh.OP, '(', 571, 58, 571, 59),
woosh.Token(woosh.NAME, 'self', 571, 59, 571, 63),
woosh.Token(woosh.OP, ')', 571, 63, 571, 64),
woosh.Token(woosh.OP, ')', 571, 64, 571, 65),
woosh.Token(woosh.OP, '<', 572, 16, 572, 17),
woosh.Token(woosh.OP, '(', 573, 16, 573, 17),
woosh.Token(woosh.NAME, 'other', 573, 17, 573, 22),
woosh.Token(woosh.OP, '.', 573, 22, 573, 23),
woosh.Token(woosh.NAME, 'name', 573, 23, 573, 27),
woosh.Token(woosh.OP, ',', 573, 27, 573, 28),
woosh.Token(woosh.NAME, 'other', 573, 29, 573, 34),
woosh.Token(woosh.OP, '.', 573, 34, 573, 35),
woosh.Token(woosh.NAME, 'filename', 573, 35, 573, 43),
woosh.Token(woosh.OP, ',', 573, 43, 573, 44),
woosh.Token(woosh.NAME, 'other', 573, 45, 573, 50),
woosh.Token(woosh.OP, '.', 573, 50, 573, 51),
woosh.Token(woosh.NAME, 'lineno', 573, 51, 573, 57),
woosh.Token(woosh.OP, ',', 573, 57, 573, 58),
woosh.Token(woosh.NAME, 'id', 573, 59, 573, 61),
woosh.Token(woosh.OP, '(', 573, 61, 573, 62),
woosh.Token(woosh.NAME, 'other', 573, 62, 573, 67),
woosh.Token(woosh.OP, ')', 573, 67, 573, 68),
woosh.Token(woosh.OP, ')', 573, 68, 573, 69),
woosh.Token(woosh.OP, ')', 573, 69, 573, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 70, 574, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 575, 0, 575, 70),
woosh.Token(woosh.COMMENT, '## 3. DocTestParser', 576, 0, 576, 19),
woosh.Token(woosh.COMMENT, '######################################################################', 577, 0, 577, 70),
woosh.Token(woosh.DEDENT, '', 579, 0, 579, 0),
woosh.Token(woosh.DEDENT, '', 579, 0, 579, 0),
woosh.Token(woosh.NAME, 'class', 579, 0, 579, 5),
woosh.Token(woosh.NAME, 'DocTestParser', 579, 6, 579, 19),
woosh.Token(woosh.OP, ':', 579, 19, 579, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 20, 580, 0),
woosh.Token(woosh.INDENT, '    ', 580, 0, 580, 4),
woosh.Token(woosh.STRING, '"""\r\n    A class used to parse strings containing doctest examples.\r\n    """', 580, 4, 582, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 7, 583, 0),
woosh.Token(woosh.COMMENT, '# This regular expression is used to find doctest examples in a', 583, 4, 583, 67),
woosh.Token(woosh.COMMENT, '# string.  It defines three groups: `source` is the source code', 584, 4, 584, 67),
woosh.Token(woosh.COMMENT, '# (including leading indentation and prompts); `indent` is the', 585, 4, 585, 66),
woosh.Token(woosh.COMMENT, '# indentation of the first (PS1) line of the source code; and', 586, 4, 586, 65),
woosh.Token(woosh.COMMENT, '# `want` is the expected output (including leading indentation).', 587, 4, 587, 68),
woosh.Token(woosh.NAME, '_EXAMPLE_RE', 588, 4, 588, 15),
woosh.Token(woosh.OP, '=', 588, 16, 588, 17),
woosh.Token(woosh.NAME, 're', 588, 18, 588, 20),
woosh.Token(woosh.OP, '.', 588, 20, 588, 21),
woosh.Token(woosh.NAME, 'compile', 588, 21, 588, 28),
woosh.Token(woosh.OP, '(', 588, 28, 588, 29),
woosh.Token(woosh.STRING, "r'''\r\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\r\n        (?P<source>\r\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\r\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\r\n        \\n?\r\n        # Want consists of any non-blank lines that do not start with PS1.\r\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\r\n                     (?![ ]*>>>)  # Not a line starting with PS1\r\n                     .+$\\n?       # But any other line\r\n                  )*)\r\n        '''", 588, 29, 599, 11),
woosh.Token(woosh.OP, ',', 599, 11, 599, 12),
woosh.Token(woosh.NAME, 're', 599, 13, 599, 15),
woosh.Token(woosh.OP, '.', 599, 15, 599, 16),
woosh.Token(woosh.NAME, 'MULTILINE', 599, 16, 599, 25),
woosh.Token(woosh.OP, '|', 599, 26, 599, 27),
woosh.Token(woosh.NAME, 're', 599, 28, 599, 30),
woosh.Token(woosh.OP, '.', 599, 30, 599, 31),
woosh.Token(woosh.NAME, 'VERBOSE', 599, 31, 599, 38),
woosh.Token(woosh.OP, ')', 599, 38, 599, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 39, 600, 0),
woosh.Token(woosh.COMMENT, '# A regular expression for handling `want` strings that contain', 601, 4, 601, 67),
woosh.Token(woosh.COMMENT, '# expected exceptions.  It divides `want` into three pieces:', 602, 4, 602, 64),
woosh.Token(woosh.COMMENT, '#    - the traceback header line (`hdr`)', 603, 4, 603, 44),
woosh.Token(woosh.COMMENT, '#    - the traceback stack (`stack`)', 604, 4, 604, 40),
woosh.Token(woosh.COMMENT, '#    - the exception message (`msg`), as generated by', 605, 4, 605, 57),
woosh.Token(woosh.COMMENT, '#      traceback.format_exception_only()', 606, 4, 606, 44),
woosh.Token(woosh.COMMENT, '# `msg` may have multiple lines.  We assume/require that the', 607, 4, 607, 64),
woosh.Token(woosh.COMMENT, '# exception message is the first non-indented line starting with a word', 608, 4, 608, 75),
woosh.Token(woosh.COMMENT, '# character following the traceback header line.', 609, 4, 609, 52),
woosh.Token(woosh.NAME, '_EXCEPTION_RE', 610, 4, 610, 17),
woosh.Token(woosh.OP, '=', 610, 18, 610, 19),
woosh.Token(woosh.NAME, 're', 610, 20, 610, 22),
woosh.Token(woosh.OP, '.', 610, 22, 610, 23),
woosh.Token(woosh.NAME, 'compile', 610, 23, 610, 30),
woosh.Token(woosh.OP, '(', 610, 30, 610, 31),
woosh.Token(woosh.STRING, 'r"""\r\n        # Grab the traceback header.  Different versions of Python have\r\n        # said different things on the first traceback line.\r\n        ^(?P<hdr> Traceback\\ \\(\r\n            (?: most\\ recent\\ call\\ last\r\n            |   innermost\\ last\r\n            ) \\) :\r\n        )\r\n        \\s* $                # toss trailing whitespace on the header.\r\n        (?P<stack> .*?)      # don\'t blink: absorb stuff until...\r\n        ^ (?P<msg> \\w+ .*)   #     a line *starts* with alphanum.\r\n        """', 610, 31, 621, 11),
woosh.Token(woosh.OP, ',', 621, 11, 621, 12),
woosh.Token(woosh.NAME, 're', 621, 13, 621, 15),
woosh.Token(woosh.OP, '.', 621, 15, 621, 16),
woosh.Token(woosh.NAME, 'VERBOSE', 621, 16, 621, 23),
woosh.Token(woosh.OP, '|', 621, 24, 621, 25),
woosh.Token(woosh.NAME, 're', 621, 26, 621, 28),
woosh.Token(woosh.OP, '.', 621, 28, 621, 29),
woosh.Token(woosh.NAME, 'MULTILINE', 621, 29, 621, 38),
woosh.Token(woosh.OP, '|', 621, 39, 621, 40),
woosh.Token(woosh.NAME, 're', 621, 41, 621, 43),
woosh.Token(woosh.OP, '.', 621, 43, 621, 44),
woosh.Token(woosh.NAME, 'DOTALL', 621, 44, 621, 50),
woosh.Token(woosh.OP, ')', 621, 50, 621, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 51, 622, 0),
woosh.Token(woosh.COMMENT, '# A callable returning a true value iff its argument is a blank line', 623, 4, 623, 72),
woosh.Token(woosh.COMMENT, '# or contains a single comment.', 624, 4, 624, 35),
woosh.Token(woosh.NAME, '_IS_BLANK_OR_COMMENT', 625, 4, 625, 24),
woosh.Token(woosh.OP, '=', 625, 25, 625, 26),
woosh.Token(woosh.NAME, 're', 625, 27, 625, 29),
woosh.Token(woosh.OP, '.', 625, 29, 625, 30),
woosh.Token(woosh.NAME, 'compile', 625, 30, 625, 37),
woosh.Token(woosh.OP, '(', 625, 37, 625, 38),
woosh.Token(woosh.STRING, "r'^[ ]*(#.*)?$'", 625, 38, 625, 53),
woosh.Token(woosh.OP, ')', 625, 53, 625, 54),
woosh.Token(woosh.OP, '.', 625, 54, 625, 55),
woosh.Token(woosh.NAME, 'match', 625, 55, 625, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 60, 626, 0),
woosh.Token(woosh.NAME, 'def', 627, 4, 627, 7),
woosh.Token(woosh.NAME, 'parse', 627, 8, 627, 13),
woosh.Token(woosh.OP, '(', 627, 13, 627, 14),
woosh.Token(woosh.NAME, 'self', 627, 14, 627, 18),
woosh.Token(woosh.OP, ',', 627, 18, 627, 19),
woosh.Token(woosh.NAME, 'string', 627, 20, 627, 26),
woosh.Token(woosh.OP, ',', 627, 26, 627, 27),
woosh.Token(woosh.NAME, 'name', 627, 28, 627, 32),
woosh.Token(woosh.OP, '=', 627, 32, 627, 33),
woosh.Token(woosh.STRING, "'<string>'", 627, 33, 627, 43),
woosh.Token(woosh.OP, ')', 627, 43, 627, 44),
woosh.Token(woosh.OP, ':', 627, 44, 627, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 627, 45, 628, 0),
woosh.Token(woosh.INDENT, '        ', 628, 0, 628, 8),
woosh.Token(woosh.STRING, '"""\r\n        Divide the given string into examples and intervening text,\r\n        and return them as a list of alternating Examples and strings.\r\n        Line numbers for the Examples are 0-based.  The optional\r\n        argument `name` is a name identifying this string, and is only\r\n        used for error messages.\r\n        """', 628, 8, 634, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 11, 635, 0),
woosh.Token(woosh.NAME, 'string', 635, 8, 635, 14),
woosh.Token(woosh.OP, '=', 635, 15, 635, 16),
woosh.Token(woosh.NAME, 'string', 635, 17, 635, 23),
woosh.Token(woosh.OP, '.', 635, 23, 635, 24),
woosh.Token(woosh.NAME, 'expandtabs', 635, 24, 635, 34),
woosh.Token(woosh.OP, '(', 635, 34, 635, 35),
woosh.Token(woosh.OP, ')', 635, 35, 635, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 635, 36, 636, 0),
woosh.Token(woosh.COMMENT, '# If all lines begin with the same indentation, then strip it.', 636, 8, 636, 70),
woosh.Token(woosh.NAME, 'min_indent', 637, 8, 637, 18),
woosh.Token(woosh.OP, '=', 637, 19, 637, 20),
woosh.Token(woosh.NAME, 'self', 637, 21, 637, 25),
woosh.Token(woosh.OP, '.', 637, 25, 637, 26),
woosh.Token(woosh.NAME, '_min_indent', 637, 26, 637, 37),
woosh.Token(woosh.OP, '(', 637, 37, 637, 38),
woosh.Token(woosh.NAME, 'string', 637, 38, 637, 44),
woosh.Token(woosh.OP, ')', 637, 44, 637, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 45, 638, 0),
woosh.Token(woosh.NAME, 'if', 638, 8, 638, 10),
woosh.Token(woosh.NAME, 'min_indent', 638, 11, 638, 21),
woosh.Token(woosh.OP, '>', 638, 22, 638, 23),
woosh.Token(woosh.NUMBER, '0', 638, 24, 638, 25),
woosh.Token(woosh.OP, ':', 638, 25, 638, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 26, 639, 0),
woosh.Token(woosh.INDENT, '            ', 639, 0, 639, 12),
woosh.Token(woosh.NAME, 'string', 639, 12, 639, 18),
woosh.Token(woosh.OP, '=', 639, 19, 639, 20),
woosh.Token(woosh.STRING, "'\\n'", 639, 21, 639, 25),
woosh.Token(woosh.OP, '.', 639, 25, 639, 26),
woosh.Token(woosh.NAME, 'join', 639, 26, 639, 30),
woosh.Token(woosh.OP, '(', 639, 30, 639, 31),
woosh.Token(woosh.OP, '[', 639, 31, 639, 32),
woosh.Token(woosh.NAME, 'l', 639, 32, 639, 33),
woosh.Token(woosh.OP, '[', 639, 33, 639, 34),
woosh.Token(woosh.NAME, 'min_indent', 639, 34, 639, 44),
woosh.Token(woosh.OP, ':', 639, 44, 639, 45),
woosh.Token(woosh.OP, ']', 639, 45, 639, 46),
woosh.Token(woosh.NAME, 'for', 639, 47, 639, 50),
woosh.Token(woosh.NAME, 'l', 639, 51, 639, 52),
woosh.Token(woosh.NAME, 'in', 639, 53, 639, 55),
woosh.Token(woosh.NAME, 'string', 639, 56, 639, 62),
woosh.Token(woosh.OP, '.', 639, 62, 639, 63),
woosh.Token(woosh.NAME, 'split', 639, 63, 639, 68),
woosh.Token(woosh.OP, '(', 639, 68, 639, 69),
woosh.Token(woosh.STRING, "'\\n'", 639, 69, 639, 73),
woosh.Token(woosh.OP, ')', 639, 73, 639, 74),
woosh.Token(woosh.OP, ']', 639, 74, 639, 75),
woosh.Token(woosh.OP, ')', 639, 75, 639, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 76, 640, 0),
woosh.Token(woosh.DEDENT, '        ', 641, 0, 641, 8),
woosh.Token(woosh.NAME, 'output', 641, 8, 641, 14),
woosh.Token(woosh.OP, '=', 641, 15, 641, 16),
woosh.Token(woosh.OP, '[', 641, 17, 641, 18),
woosh.Token(woosh.OP, ']', 641, 18, 641, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 19, 642, 0),
woosh.Token(woosh.NAME, 'charno', 642, 8, 642, 14),
woosh.Token(woosh.OP, ',', 642, 14, 642, 15),
woosh.Token(woosh.NAME, 'lineno', 642, 16, 642, 22),
woosh.Token(woosh.OP, '=', 642, 23, 642, 24),
woosh.Token(woosh.NUMBER, '0', 642, 25, 642, 26),
woosh.Token(woosh.OP, ',', 642, 26, 642, 27),
woosh.Token(woosh.NUMBER, '0', 642, 28, 642, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 29, 643, 0),
woosh.Token(woosh.COMMENT, '# Find all doctest examples in the string:', 643, 8, 643, 50),
woosh.Token(woosh.NAME, 'for', 644, 8, 644, 11),
woosh.Token(woosh.NAME, 'm', 644, 12, 644, 13),
woosh.Token(woosh.NAME, 'in', 644, 14, 644, 16),
woosh.Token(woosh.NAME, 'self', 644, 17, 644, 21),
woosh.Token(woosh.OP, '.', 644, 21, 644, 22),
woosh.Token(woosh.NAME, '_EXAMPLE_RE', 644, 22, 644, 33),
woosh.Token(woosh.OP, '.', 644, 33, 644, 34),
woosh.Token(woosh.NAME, 'finditer', 644, 34, 644, 42),
woosh.Token(woosh.OP, '(', 644, 42, 644, 43),
woosh.Token(woosh.NAME, 'string', 644, 43, 644, 49),
woosh.Token(woosh.OP, ')', 644, 49, 644, 50),
woosh.Token(woosh.OP, ':', 644, 50, 644, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 644, 51, 645, 0),
woosh.Token(woosh.COMMENT, '# Add the pre-example text to `output`.', 645, 12, 645, 51),
woosh.Token(woosh.INDENT, '            ', 646, 0, 646, 12),
woosh.Token(woosh.NAME, 'output', 646, 12, 646, 18),
woosh.Token(woosh.OP, '.', 646, 18, 646, 19),
woosh.Token(woosh.NAME, 'append', 646, 19, 646, 25),
woosh.Token(woosh.OP, '(', 646, 25, 646, 26),
woosh.Token(woosh.NAME, 'string', 646, 26, 646, 32),
woosh.Token(woosh.OP, '[', 646, 32, 646, 33),
woosh.Token(woosh.NAME, 'charno', 646, 33, 646, 39),
woosh.Token(woosh.OP, ':', 646, 39, 646, 40),
woosh.Token(woosh.NAME, 'm', 646, 40, 646, 41),
woosh.Token(woosh.OP, '.', 646, 41, 646, 42),
woosh.Token(woosh.NAME, 'start', 646, 42, 646, 47),
woosh.Token(woosh.OP, '(', 646, 47, 646, 48),
woosh.Token(woosh.OP, ')', 646, 48, 646, 49),
woosh.Token(woosh.OP, ']', 646, 49, 646, 50),
woosh.Token(woosh.OP, ')', 646, 50, 646, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 646, 51, 647, 0),
woosh.Token(woosh.COMMENT, '# Update lineno (lines before this example)', 647, 12, 647, 55),
woosh.Token(woosh.NAME, 'lineno', 648, 12, 648, 18),
woosh.Token(woosh.OP, '+=', 648, 19, 648, 21),
woosh.Token(woosh.NAME, 'string', 648, 22, 648, 28),
woosh.Token(woosh.OP, '.', 648, 28, 648, 29),
woosh.Token(woosh.NAME, 'count', 648, 29, 648, 34),
woosh.Token(woosh.OP, '(', 648, 34, 648, 35),
woosh.Token(woosh.STRING, "'\\n'", 648, 35, 648, 39),
woosh.Token(woosh.OP, ',', 648, 39, 648, 40),
woosh.Token(woosh.NAME, 'charno', 648, 41, 648, 47),
woosh.Token(woosh.OP, ',', 648, 47, 648, 48),
woosh.Token(woosh.NAME, 'm', 648, 49, 648, 50),
woosh.Token(woosh.OP, '.', 648, 50, 648, 51),
woosh.Token(woosh.NAME, 'start', 648, 51, 648, 56),
woosh.Token(woosh.OP, '(', 648, 56, 648, 57),
woosh.Token(woosh.OP, ')', 648, 57, 648, 58),
woosh.Token(woosh.OP, ')', 648, 58, 648, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 648, 59, 649, 0),
woosh.Token(woosh.COMMENT, '# Extract info from the regexp match.', 649, 12, 649, 49),
woosh.Token(woosh.OP, '(', 650, 12, 650, 13),
woosh.Token(woosh.NAME, 'source', 650, 13, 650, 19),
woosh.Token(woosh.OP, ',', 650, 19, 650, 20),
woosh.Token(woosh.NAME, 'options', 650, 21, 650, 28),
woosh.Token(woosh.OP, ',', 650, 28, 650, 29),
woosh.Token(woosh.NAME, 'want', 650, 30, 650, 34),
woosh.Token(woosh.OP, ',', 650, 34, 650, 35),
woosh.Token(woosh.NAME, 'exc_msg', 650, 36, 650, 43),
woosh.Token(woosh.OP, ')', 650, 43, 650, 44),
woosh.Token(woosh.OP, '=', 650, 45, 650, 46),
woosh.Token(woosh.NAME, 'self', 651, 21, 651, 25),
woosh.Token(woosh.OP, '.', 651, 25, 651, 26),
woosh.Token(woosh.NAME, '_parse_example', 651, 26, 651, 40),
woosh.Token(woosh.OP, '(', 651, 40, 651, 41),
woosh.Token(woosh.NAME, 'm', 651, 41, 651, 42),
woosh.Token(woosh.OP, ',', 651, 42, 651, 43),
woosh.Token(woosh.NAME, 'name', 651, 44, 651, 48),
woosh.Token(woosh.OP, ',', 651, 48, 651, 49),
woosh.Token(woosh.NAME, 'lineno', 651, 50, 651, 56),
woosh.Token(woosh.OP, ')', 651, 56, 651, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 651, 57, 652, 0),
woosh.Token(woosh.COMMENT, '# Create an Example, and add it to the list.', 652, 12, 652, 56),
woosh.Token(woosh.NAME, 'if', 653, 12, 653, 14),
woosh.Token(woosh.NAME, 'not', 653, 15, 653, 18),
woosh.Token(woosh.NAME, 'self', 653, 19, 653, 23),
woosh.Token(woosh.OP, '.', 653, 23, 653, 24),
woosh.Token(woosh.NAME, '_IS_BLANK_OR_COMMENT', 653, 24, 653, 44),
woosh.Token(woosh.OP, '(', 653, 44, 653, 45),
woosh.Token(woosh.NAME, 'source', 653, 45, 653, 51),
woosh.Token(woosh.OP, ')', 653, 51, 653, 52),
woosh.Token(woosh.OP, ':', 653, 52, 653, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 53, 654, 0),
woosh.Token(woosh.INDENT, '                ', 654, 0, 654, 16),
woosh.Token(woosh.NAME, 'output', 654, 16, 654, 22),
woosh.Token(woosh.OP, '.', 654, 22, 654, 23),
woosh.Token(woosh.NAME, 'append', 654, 23, 654, 29),
woosh.Token(woosh.OP, '(', 654, 29, 654, 30),
woosh.Token(woosh.NAME, 'Example', 654, 31, 654, 38),
woosh.Token(woosh.OP, '(', 654, 38, 654, 39),
woosh.Token(woosh.NAME, 'source', 654, 39, 654, 45),
woosh.Token(woosh.OP, ',', 654, 45, 654, 46),
woosh.Token(woosh.NAME, 'want', 654, 47, 654, 51),
woosh.Token(woosh.OP, ',', 654, 51, 654, 52),
woosh.Token(woosh.NAME, 'exc_msg', 654, 53, 654, 60),
woosh.Token(woosh.OP, ',', 654, 60, 654, 61),
woosh.Token(woosh.NAME, 'lineno', 655, 36, 655, 42),
woosh.Token(woosh.OP, '=', 655, 42, 655, 43),
woosh.Token(woosh.NAME, 'lineno', 655, 43, 655, 49),
woosh.Token(woosh.OP, ',', 655, 49, 655, 50),
woosh.Token(woosh.NAME, 'indent', 656, 36, 656, 42),
woosh.Token(woosh.OP, '=', 656, 42, 656, 43),
woosh.Token(woosh.NAME, 'min_indent', 656, 43, 656, 53),
woosh.Token(woosh.OP, '+', 656, 53, 656, 54),
woosh.Token(woosh.NAME, 'len', 656, 54, 656, 57),
woosh.Token(woosh.OP, '(', 656, 57, 656, 58),
woosh.Token(woosh.NAME, 'm', 656, 58, 656, 59),
woosh.Token(woosh.OP, '.', 656, 59, 656, 60),
woosh.Token(woosh.NAME, 'group', 656, 60, 656, 65),
woosh.Token(woosh.OP, '(', 656, 65, 656, 66),
woosh.Token(woosh.STRING, "'indent'", 656, 66, 656, 74),
woosh.Token(woosh.OP, ')', 656, 74, 656, 75),
woosh.Token(woosh.OP, ')', 656, 75, 656, 76),
woosh.Token(woosh.OP, ',', 656, 76, 656, 77),
woosh.Token(woosh.NAME, 'options', 657, 36, 657, 43),
woosh.Token(woosh.OP, '=', 657, 43, 657, 44),
woosh.Token(woosh.NAME, 'options', 657, 44, 657, 51),
woosh.Token(woosh.OP, ')', 657, 51, 657, 52),
woosh.Token(woosh.OP, ')', 657, 53, 657, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 657, 54, 658, 0),
woosh.Token(woosh.COMMENT, '# Update lineno (lines inside this example)', 658, 12, 658, 55),
woosh.Token(woosh.DEDENT, '            ', 659, 0, 659, 12),
woosh.Token(woosh.NAME, 'lineno', 659, 12, 659, 18),
woosh.Token(woosh.OP, '+=', 659, 19, 659, 21),
woosh.Token(woosh.NAME, 'string', 659, 22, 659, 28),
woosh.Token(woosh.OP, '.', 659, 28, 659, 29),
woosh.Token(woosh.NAME, 'count', 659, 29, 659, 34),
woosh.Token(woosh.OP, '(', 659, 34, 659, 35),
woosh.Token(woosh.STRING, "'\\n'", 659, 35, 659, 39),
woosh.Token(woosh.OP, ',', 659, 39, 659, 40),
woosh.Token(woosh.NAME, 'm', 659, 41, 659, 42),
woosh.Token(woosh.OP, '.', 659, 42, 659, 43),
woosh.Token(woosh.NAME, 'start', 659, 43, 659, 48),
woosh.Token(woosh.OP, '(', 659, 48, 659, 49),
woosh.Token(woosh.OP, ')', 659, 49, 659, 50),
woosh.Token(woosh.OP, ',', 659, 50, 659, 51),
woosh.Token(woosh.NAME, 'm', 659, 52, 659, 53),
woosh.Token(woosh.OP, '.', 659, 53, 659, 54),
woosh.Token(woosh.NAME, 'end', 659, 54, 659, 57),
woosh.Token(woosh.OP, '(', 659, 57, 659, 58),
woosh.Token(woosh.OP, ')', 659, 58, 659, 59),
woosh.Token(woosh.OP, ')', 659, 59, 659, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 60, 660, 0),
woosh.Token(woosh.COMMENT, '# Update charno.', 660, 12, 660, 28),
woosh.Token(woosh.NAME, 'charno', 661, 12, 661, 18),
woosh.Token(woosh.OP, '=', 661, 19, 661, 20),
woosh.Token(woosh.NAME, 'm', 661, 21, 661, 22),
woosh.Token(woosh.OP, '.', 661, 22, 661, 23),
woosh.Token(woosh.NAME, 'end', 661, 23, 661, 26),
woosh.Token(woosh.OP, '(', 661, 26, 661, 27),
woosh.Token(woosh.OP, ')', 661, 27, 661, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 28, 662, 0),
woosh.Token(woosh.COMMENT, '# Add any remaining post-example text to `output`.', 662, 8, 662, 58),
woosh.Token(woosh.DEDENT, '        ', 663, 0, 663, 8),
woosh.Token(woosh.NAME, 'output', 663, 8, 663, 14),
woosh.Token(woosh.OP, '.', 663, 14, 663, 15),
woosh.Token(woosh.NAME, 'append', 663, 15, 663, 21),
woosh.Token(woosh.OP, '(', 663, 21, 663, 22),
woosh.Token(woosh.NAME, 'string', 663, 22, 663, 28),
woosh.Token(woosh.OP, '[', 663, 28, 663, 29),
woosh.Token(woosh.NAME, 'charno', 663, 29, 663, 35),
woosh.Token(woosh.OP, ':', 663, 35, 663, 36),
woosh.Token(woosh.OP, ']', 663, 36, 663, 37),
woosh.Token(woosh.OP, ')', 663, 37, 663, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 38, 664, 0),
woosh.Token(woosh.NAME, 'return', 664, 8, 664, 14),
woosh.Token(woosh.NAME, 'output', 664, 15, 664, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 21, 665, 0),
woosh.Token(woosh.DEDENT, '    ', 666, 0, 666, 4),
woosh.Token(woosh.NAME, 'def', 666, 4, 666, 7),
woosh.Token(woosh.NAME, 'get_doctest', 666, 8, 666, 19),
woosh.Token(woosh.OP, '(', 666, 19, 666, 20),
woosh.Token(woosh.NAME, 'self', 666, 20, 666, 24),
woosh.Token(woosh.OP, ',', 666, 24, 666, 25),
woosh.Token(woosh.NAME, 'string', 666, 26, 666, 32),
woosh.Token(woosh.OP, ',', 666, 32, 666, 33),
woosh.Token(woosh.NAME, 'globs', 666, 34, 666, 39),
woosh.Token(woosh.OP, ',', 666, 39, 666, 40),
woosh.Token(woosh.NAME, 'name', 666, 41, 666, 45),
woosh.Token(woosh.OP, ',', 666, 45, 666, 46),
woosh.Token(woosh.NAME, 'filename', 666, 47, 666, 55),
woosh.Token(woosh.OP, ',', 666, 55, 666, 56),
woosh.Token(woosh.NAME, 'lineno', 666, 57, 666, 63),
woosh.Token(woosh.OP, ')', 666, 63, 666, 64),
woosh.Token(woosh.OP, ':', 666, 64, 666, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 666, 65, 667, 0),
woosh.Token(woosh.INDENT, '        ', 667, 0, 667, 8),
woosh.Token(woosh.STRING, '"""\r\n        Extract all doctest examples from the given string, and\r\n        collect them into a `DocTest` object.\r\n\r\n        `globs`, `name`, `filename`, and `lineno` are attributes for\r\n        the new `DocTest` object.  See the documentation for `DocTest`\r\n        for more information.\r\n        """', 667, 8, 674, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 674, 11, 675, 0),
woosh.Token(woosh.NAME, 'return', 675, 8, 675, 14),
woosh.Token(woosh.NAME, 'DocTest', 675, 15, 675, 22),
woosh.Token(woosh.OP, '(', 675, 22, 675, 23),
woosh.Token(woosh.NAME, 'self', 675, 23, 675, 27),
woosh.Token(woosh.OP, '.', 675, 27, 675, 28),
woosh.Token(woosh.NAME, 'get_examples', 675, 28, 675, 40),
woosh.Token(woosh.OP, '(', 675, 40, 675, 41),
woosh.Token(woosh.NAME, 'string', 675, 41, 675, 47),
woosh.Token(woosh.OP, ',', 675, 47, 675, 48),
woosh.Token(woosh.NAME, 'name', 675, 49, 675, 53),
woosh.Token(woosh.OP, ')', 675, 53, 675, 54),
woosh.Token(woosh.OP, ',', 675, 54, 675, 55),
woosh.Token(woosh.NAME, 'globs', 675, 56, 675, 61),
woosh.Token(woosh.OP, ',', 675, 61, 675, 62),
woosh.Token(woosh.NAME, 'name', 676, 23, 676, 27),
woosh.Token(woosh.OP, ',', 676, 27, 676, 28),
woosh.Token(woosh.NAME, 'filename', 676, 29, 676, 37),
woosh.Token(woosh.OP, ',', 676, 37, 676, 38),
woosh.Token(woosh.NAME, 'lineno', 676, 39, 676, 45),
woosh.Token(woosh.OP, ',', 676, 45, 676, 46),
woosh.Token(woosh.NAME, 'string', 676, 47, 676, 53),
woosh.Token(woosh.OP, ')', 676, 53, 676, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 54, 677, 0),
woosh.Token(woosh.DEDENT, '    ', 678, 0, 678, 4),
woosh.Token(woosh.NAME, 'def', 678, 4, 678, 7),
woosh.Token(woosh.NAME, 'get_examples', 678, 8, 678, 20),
woosh.Token(woosh.OP, '(', 678, 20, 678, 21),
woosh.Token(woosh.NAME, 'self', 678, 21, 678, 25),
woosh.Token(woosh.OP, ',', 678, 25, 678, 26),
woosh.Token(woosh.NAME, 'string', 678, 27, 678, 33),
woosh.Token(woosh.OP, ',', 678, 33, 678, 34),
woosh.Token(woosh.NAME, 'name', 678, 35, 678, 39),
woosh.Token(woosh.OP, '=', 678, 39, 678, 40),
woosh.Token(woosh.STRING, "'<string>'", 678, 40, 678, 50),
woosh.Token(woosh.OP, ')', 678, 50, 678, 51),
woosh.Token(woosh.OP, ':', 678, 51, 678, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 678, 52, 679, 0),
woosh.Token(woosh.INDENT, '        ', 679, 0, 679, 8),
woosh.Token(woosh.STRING, '"""\r\n        Extract all doctest examples from the given string, and return\r\n        them as a list of `Example` objects.  Line numbers are\r\n        0-based, because it\'s most common in doctests that nothing\r\n        interesting appears on the same line as opening triple-quote,\r\n        and so the first interesting line is called \\"line 1\\" then.\r\n\r\n        The optional argument `name` is a name identifying this\r\n        string, and is only used for error messages.\r\n        """', 679, 8, 688, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 11, 689, 0),
woosh.Token(woosh.NAME, 'return', 689, 8, 689, 14),
woosh.Token(woosh.OP, '[', 689, 15, 689, 16),
woosh.Token(woosh.NAME, 'x', 689, 16, 689, 17),
woosh.Token(woosh.NAME, 'for', 689, 18, 689, 21),
woosh.Token(woosh.NAME, 'x', 689, 22, 689, 23),
woosh.Token(woosh.NAME, 'in', 689, 24, 689, 26),
woosh.Token(woosh.NAME, 'self', 689, 27, 689, 31),
woosh.Token(woosh.OP, '.', 689, 31, 689, 32),
woosh.Token(woosh.NAME, 'parse', 689, 32, 689, 37),
woosh.Token(woosh.OP, '(', 689, 37, 689, 38),
woosh.Token(woosh.NAME, 'string', 689, 38, 689, 44),
woosh.Token(woosh.OP, ',', 689, 44, 689, 45),
woosh.Token(woosh.NAME, 'name', 689, 46, 689, 50),
woosh.Token(woosh.OP, ')', 689, 50, 689, 51),
woosh.Token(woosh.NAME, 'if', 690, 16, 690, 18),
woosh.Token(woosh.NAME, 'isinstance', 690, 19, 690, 29),
woosh.Token(woosh.OP, '(', 690, 29, 690, 30),
woosh.Token(woosh.NAME, 'x', 690, 30, 690, 31),
woosh.Token(woosh.OP, ',', 690, 31, 690, 32),
woosh.Token(woosh.NAME, 'Example', 690, 33, 690, 40),
woosh.Token(woosh.OP, ')', 690, 40, 690, 41),
woosh.Token(woosh.OP, ']', 690, 41, 690, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 690, 42, 691, 0),
woosh.Token(woosh.DEDENT, '    ', 692, 0, 692, 4),
woosh.Token(woosh.NAME, 'def', 692, 4, 692, 7),
woosh.Token(woosh.NAME, '_parse_example', 692, 8, 692, 22),
woosh.Token(woosh.OP, '(', 692, 22, 692, 23),
woosh.Token(woosh.NAME, 'self', 692, 23, 692, 27),
woosh.Token(woosh.OP, ',', 692, 27, 692, 28),
woosh.Token(woosh.NAME, 'm', 692, 29, 692, 30),
woosh.Token(woosh.OP, ',', 692, 30, 692, 31),
woosh.Token(woosh.NAME, 'name', 692, 32, 692, 36),
woosh.Token(woosh.OP, ',', 692, 36, 692, 37),
woosh.Token(woosh.NAME, 'lineno', 692, 38, 692, 44),
woosh.Token(woosh.OP, ')', 692, 44, 692, 45),
woosh.Token(woosh.OP, ':', 692, 45, 692, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 692, 46, 693, 0),
woosh.Token(woosh.INDENT, '        ', 693, 0, 693, 8),
woosh.Token(woosh.STRING, '"""\r\n        Given a regular expression match from `_EXAMPLE_RE` (`m`),\r\n        return a pair `(source, want)`, where `source` is the matched\r\n        example\'s source code (with prompts and indentation stripped);\r\n        and `want` is the example\'s expected output (with indentation\r\n        stripped).\r\n\r\n        `name` is the string\'s name, and `lineno` is the line number\r\n        where the example starts; both are used for error messages.\r\n        """', 693, 8, 702, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 11, 703, 0),
woosh.Token(woosh.COMMENT, "# Get the example's indentation level.", 703, 8, 703, 46),
woosh.Token(woosh.NAME, 'indent', 704, 8, 704, 14),
woosh.Token(woosh.OP, '=', 704, 15, 704, 16),
woosh.Token(woosh.NAME, 'len', 704, 17, 704, 20),
woosh.Token(woosh.OP, '(', 704, 20, 704, 21),
woosh.Token(woosh.NAME, 'm', 704, 21, 704, 22),
woosh.Token(woosh.OP, '.', 704, 22, 704, 23),
woosh.Token(woosh.NAME, 'group', 704, 23, 704, 28),
woosh.Token(woosh.OP, '(', 704, 28, 704, 29),
woosh.Token(woosh.STRING, "'indent'", 704, 29, 704, 37),
woosh.Token(woosh.OP, ')', 704, 37, 704, 38),
woosh.Token(woosh.OP, ')', 704, 38, 704, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 704, 39, 705, 0),
woosh.Token(woosh.COMMENT, "# Divide source into lines; check that they're properly", 706, 8, 706, 63),
woosh.Token(woosh.COMMENT, '# indented; and then strip their indentation & prompts.', 707, 8, 707, 63),
woosh.Token(woosh.NAME, 'source_lines', 708, 8, 708, 20),
woosh.Token(woosh.OP, '=', 708, 21, 708, 22),
woosh.Token(woosh.NAME, 'm', 708, 23, 708, 24),
woosh.Token(woosh.OP, '.', 708, 24, 708, 25),
woosh.Token(woosh.NAME, 'group', 708, 25, 708, 30),
woosh.Token(woosh.OP, '(', 708, 30, 708, 31),
woosh.Token(woosh.STRING, "'source'", 708, 31, 708, 39),
woosh.Token(woosh.OP, ')', 708, 39, 708, 40),
woosh.Token(woosh.OP, '.', 708, 40, 708, 41),
woosh.Token(woosh.NAME, 'split', 708, 41, 708, 46),
woosh.Token(woosh.OP, '(', 708, 46, 708, 47),
woosh.Token(woosh.STRING, "'\\n'", 708, 47, 708, 51),
woosh.Token(woosh.OP, ')', 708, 51, 708, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 708, 52, 709, 0),
woosh.Token(woosh.NAME, 'self', 709, 8, 709, 12),
woosh.Token(woosh.OP, '.', 709, 12, 709, 13),
woosh.Token(woosh.NAME, '_check_prompt_blank', 709, 13, 709, 32),
woosh.Token(woosh.OP, '(', 709, 32, 709, 33),
woosh.Token(woosh.NAME, 'source_lines', 709, 33, 709, 45),
woosh.Token(woosh.OP, ',', 709, 45, 709, 46),
woosh.Token(woosh.NAME, 'indent', 709, 47, 709, 53),
woosh.Token(woosh.OP, ',', 709, 53, 709, 54),
woosh.Token(woosh.NAME, 'name', 709, 55, 709, 59),
woosh.Token(woosh.OP, ',', 709, 59, 709, 60),
woosh.Token(woosh.NAME, 'lineno', 709, 61, 709, 67),
woosh.Token(woosh.OP, ')', 709, 67, 709, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 68, 710, 0),
woosh.Token(woosh.NAME, 'self', 710, 8, 710, 12),
woosh.Token(woosh.OP, '.', 710, 12, 710, 13),
woosh.Token(woosh.NAME, '_check_prefix', 710, 13, 710, 26),
woosh.Token(woosh.OP, '(', 710, 26, 710, 27),
woosh.Token(woosh.NAME, 'source_lines', 710, 27, 710, 39),
woosh.Token(woosh.OP, '[', 710, 39, 710, 40),
woosh.Token(woosh.NUMBER, '1', 710, 40, 710, 41),
woosh.Token(woosh.OP, ':', 710, 41, 710, 42),
woosh.Token(woosh.OP, ']', 710, 42, 710, 43),
woosh.Token(woosh.OP, ',', 710, 43, 710, 44),
woosh.Token(woosh.STRING, "' '", 710, 45, 710, 48),
woosh.Token(woosh.OP, '*', 710, 48, 710, 49),
woosh.Token(woosh.NAME, 'indent', 710, 49, 710, 55),
woosh.Token(woosh.OP, '+', 710, 56, 710, 57),
woosh.Token(woosh.STRING, "'.'", 710, 58, 710, 61),
woosh.Token(woosh.OP, ',', 710, 61, 710, 62),
woosh.Token(woosh.NAME, 'name', 710, 63, 710, 67),
woosh.Token(woosh.OP, ',', 710, 67, 710, 68),
woosh.Token(woosh.NAME, 'lineno', 710, 69, 710, 75),
woosh.Token(woosh.OP, ')', 710, 75, 710, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 710, 76, 711, 0),
woosh.Token(woosh.NAME, 'source', 711, 8, 711, 14),
woosh.Token(woosh.OP, '=', 711, 15, 711, 16),
woosh.Token(woosh.STRING, "'\\n'", 711, 17, 711, 21),
woosh.Token(woosh.OP, '.', 711, 21, 711, 22),
woosh.Token(woosh.NAME, 'join', 711, 22, 711, 26),
woosh.Token(woosh.OP, '(', 711, 26, 711, 27),
woosh.Token(woosh.OP, '[', 711, 27, 711, 28),
woosh.Token(woosh.NAME, 'sl', 711, 28, 711, 30),
woosh.Token(woosh.OP, '[', 711, 30, 711, 31),
woosh.Token(woosh.NAME, 'indent', 711, 31, 711, 37),
woosh.Token(woosh.OP, '+', 711, 37, 711, 38),
woosh.Token(woosh.NUMBER, '4', 711, 38, 711, 39),
woosh.Token(woosh.OP, ':', 711, 39, 711, 40),
woosh.Token(woosh.OP, ']', 711, 40, 711, 41),
woosh.Token(woosh.NAME, 'for', 711, 42, 711, 45),
woosh.Token(woosh.NAME, 'sl', 711, 46, 711, 48),
woosh.Token(woosh.NAME, 'in', 711, 49, 711, 51),
woosh.Token(woosh.NAME, 'source_lines', 711, 52, 711, 64),
woosh.Token(woosh.OP, ']', 711, 64, 711, 65),
woosh.Token(woosh.OP, ')', 711, 65, 711, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 66, 712, 0),
woosh.Token(woosh.COMMENT, "# Divide want into lines; check that it's properly indented; and", 713, 8, 713, 72),
woosh.Token(woosh.COMMENT, '# then strip the indentation.  Spaces before the last newline should', 714, 8, 714, 76),
woosh.Token(woosh.COMMENT, "# be preserved, so plain rstrip() isn't good enough.", 715, 8, 715, 60),
woosh.Token(woosh.NAME, 'want', 716, 8, 716, 12),
woosh.Token(woosh.OP, '=', 716, 13, 716, 14),
woosh.Token(woosh.NAME, 'm', 716, 15, 716, 16),
woosh.Token(woosh.OP, '.', 716, 16, 716, 17),
woosh.Token(woosh.NAME, 'group', 716, 17, 716, 22),
woosh.Token(woosh.OP, '(', 716, 22, 716, 23),
woosh.Token(woosh.STRING, "'want'", 716, 23, 716, 29),
woosh.Token(woosh.OP, ')', 716, 29, 716, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 30, 717, 0),
woosh.Token(woosh.NAME, 'want_lines', 717, 8, 717, 18),
woosh.Token(woosh.OP, '=', 717, 19, 717, 20),
woosh.Token(woosh.NAME, 'want', 717, 21, 717, 25),
woosh.Token(woosh.OP, '.', 717, 25, 717, 26),
woosh.Token(woosh.NAME, 'split', 717, 26, 717, 31),
woosh.Token(woosh.OP, '(', 717, 31, 717, 32),
woosh.Token(woosh.STRING, "'\\n'", 717, 32, 717, 36),
woosh.Token(woosh.OP, ')', 717, 36, 717, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 37, 718, 0),
woosh.Token(woosh.NAME, 'if', 718, 8, 718, 10),
woosh.Token(woosh.NAME, 'len', 718, 11, 718, 14),
woosh.Token(woosh.OP, '(', 718, 14, 718, 15),
woosh.Token(woosh.NAME, 'want_lines', 718, 15, 718, 25),
woosh.Token(woosh.OP, ')', 718, 25, 718, 26),
woosh.Token(woosh.OP, '>', 718, 27, 718, 28),
woosh.Token(woosh.NUMBER, '1', 718, 29, 718, 30),
woosh.Token(woosh.NAME, 'and', 718, 31, 718, 34),
woosh.Token(woosh.NAME, 're', 718, 35, 718, 37),
woosh.Token(woosh.OP, '.', 718, 37, 718, 38),
woosh.Token(woosh.NAME, 'match', 718, 38, 718, 43),
woosh.Token(woosh.OP, '(', 718, 43, 718, 44),
woosh.Token(woosh.STRING, "r' *$'", 718, 44, 718, 50),
woosh.Token(woosh.OP, ',', 718, 50, 718, 51),
woosh.Token(woosh.NAME, 'want_lines', 718, 52, 718, 62),
woosh.Token(woosh.OP, '[', 718, 62, 718, 63),
woosh.Token(woosh.OP, '-', 718, 63, 718, 64),
woosh.Token(woosh.NUMBER, '1', 718, 64, 718, 65),
woosh.Token(woosh.OP, ']', 718, 65, 718, 66),
woosh.Token(woosh.OP, ')', 718, 66, 718, 67),
woosh.Token(woosh.OP, ':', 718, 67, 718, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 718, 68, 719, 0),
woosh.Token(woosh.INDENT, '            ', 719, 0, 719, 12),
woosh.Token(woosh.NAME, 'del', 719, 12, 719, 15),
woosh.Token(woosh.NAME, 'want_lines', 719, 16, 719, 26),
woosh.Token(woosh.OP, '[', 719, 26, 719, 27),
woosh.Token(woosh.OP, '-', 719, 27, 719, 28),
woosh.Token(woosh.NUMBER, '1', 719, 28, 719, 29),
woosh.Token(woosh.OP, ']', 719, 29, 719, 30),
woosh.Token(woosh.COMMENT, '# forget final newline & spaces after it', 719, 32, 719, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 719, 72, 720, 0),
woosh.Token(woosh.DEDENT, '        ', 720, 0, 720, 8),
woosh.Token(woosh.NAME, 'self', 720, 8, 720, 12),
woosh.Token(woosh.OP, '.', 720, 12, 720, 13),
woosh.Token(woosh.NAME, '_check_prefix', 720, 13, 720, 26),
woosh.Token(woosh.OP, '(', 720, 26, 720, 27),
woosh.Token(woosh.NAME, 'want_lines', 720, 27, 720, 37),
woosh.Token(woosh.OP, ',', 720, 37, 720, 38),
woosh.Token(woosh.STRING, "' '", 720, 39, 720, 42),
woosh.Token(woosh.OP, '*', 720, 42, 720, 43),
woosh.Token(woosh.NAME, 'indent', 720, 43, 720, 49),
woosh.Token(woosh.OP, ',', 720, 49, 720, 50),
woosh.Token(woosh.NAME, 'name', 720, 51, 720, 55),
woosh.Token(woosh.OP, ',', 720, 55, 720, 56),
woosh.Token(woosh.NAME, 'lineno', 721, 27, 721, 33),
woosh.Token(woosh.OP, '+', 721, 34, 721, 35),
woosh.Token(woosh.NAME, 'len', 721, 36, 721, 39),
woosh.Token(woosh.OP, '(', 721, 39, 721, 40),
woosh.Token(woosh.NAME, 'source_lines', 721, 40, 721, 52),
woosh.Token(woosh.OP, ')', 721, 52, 721, 53),
woosh.Token(woosh.OP, ')', 721, 53, 721, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 54, 722, 0),
woosh.Token(woosh.NAME, 'want', 722, 8, 722, 12),
woosh.Token(woosh.OP, '=', 722, 13, 722, 14),
woosh.Token(woosh.STRING, "'\\n'", 722, 15, 722, 19),
woosh.Token(woosh.OP, '.', 722, 19, 722, 20),
woosh.Token(woosh.NAME, 'join', 722, 20, 722, 24),
woosh.Token(woosh.OP, '(', 722, 24, 722, 25),
woosh.Token(woosh.OP, '[', 722, 25, 722, 26),
woosh.Token(woosh.NAME, 'wl', 722, 26, 722, 28),
woosh.Token(woosh.OP, '[', 722, 28, 722, 29),
woosh.Token(woosh.NAME, 'indent', 722, 29, 722, 35),
woosh.Token(woosh.OP, ':', 722, 35, 722, 36),
woosh.Token(woosh.OP, ']', 722, 36, 722, 37),
woosh.Token(woosh.NAME, 'for', 722, 38, 722, 41),
woosh.Token(woosh.NAME, 'wl', 722, 42, 722, 44),
woosh.Token(woosh.NAME, 'in', 722, 45, 722, 47),
woosh.Token(woosh.NAME, 'want_lines', 722, 48, 722, 58),
woosh.Token(woosh.OP, ']', 722, 58, 722, 59),
woosh.Token(woosh.OP, ')', 722, 59, 722, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 722, 60, 723, 0),
woosh.Token(woosh.COMMENT, '# If `want` contains a traceback message, then extract it.', 724, 8, 724, 66),
woosh.Token(woosh.NAME, 'm', 725, 8, 725, 9),
woosh.Token(woosh.OP, '=', 725, 10, 725, 11),
woosh.Token(woosh.NAME, 'self', 725, 12, 725, 16),
woosh.Token(woosh.OP, '.', 725, 16, 725, 17),
woosh.Token(woosh.NAME, '_EXCEPTION_RE', 725, 17, 725, 30),
woosh.Token(woosh.OP, '.', 725, 30, 725, 31),
woosh.Token(woosh.NAME, 'match', 725, 31, 725, 36),
woosh.Token(woosh.OP, '(', 725, 36, 725, 37),
woosh.Token(woosh.NAME, 'want', 725, 37, 725, 41),
woosh.Token(woosh.OP, ')', 725, 41, 725, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 42, 726, 0),
woosh.Token(woosh.NAME, 'if', 726, 8, 726, 10),
woosh.Token(woosh.NAME, 'm', 726, 11, 726, 12),
woosh.Token(woosh.OP, ':', 726, 12, 726, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 13, 727, 0),
woosh.Token(woosh.INDENT, '            ', 727, 0, 727, 12),
woosh.Token(woosh.NAME, 'exc_msg', 727, 12, 727, 19),
woosh.Token(woosh.OP, '=', 727, 20, 727, 21),
woosh.Token(woosh.NAME, 'm', 727, 22, 727, 23),
woosh.Token(woosh.OP, '.', 727, 23, 727, 24),
woosh.Token(woosh.NAME, 'group', 727, 24, 727, 29),
woosh.Token(woosh.OP, '(', 727, 29, 727, 30),
woosh.Token(woosh.STRING, "'msg'", 727, 30, 727, 35),
woosh.Token(woosh.OP, ')', 727, 35, 727, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 36, 728, 0),
woosh.Token(woosh.DEDENT, '        ', 728, 0, 728, 8),
woosh.Token(woosh.NAME, 'else', 728, 8, 728, 12),
woosh.Token(woosh.OP, ':', 728, 12, 728, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 13, 729, 0),
woosh.Token(woosh.INDENT, '            ', 729, 0, 729, 12),
woosh.Token(woosh.NAME, 'exc_msg', 729, 12, 729, 19),
woosh.Token(woosh.OP, '=', 729, 20, 729, 21),
woosh.Token(woosh.NAME, 'None', 729, 22, 729, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 729, 26, 730, 0),
woosh.Token(woosh.COMMENT, '# Extract options from the source.', 731, 8, 731, 42),
woosh.Token(woosh.DEDENT, '        ', 732, 0, 732, 8),
woosh.Token(woosh.NAME, 'options', 732, 8, 732, 15),
woosh.Token(woosh.OP, '=', 732, 16, 732, 17),
woosh.Token(woosh.NAME, 'self', 732, 18, 732, 22),
woosh.Token(woosh.OP, '.', 732, 22, 732, 23),
woosh.Token(woosh.NAME, '_find_options', 732, 23, 732, 36),
woosh.Token(woosh.OP, '(', 732, 36, 732, 37),
woosh.Token(woosh.NAME, 'source', 732, 37, 732, 43),
woosh.Token(woosh.OP, ',', 732, 43, 732, 44),
woosh.Token(woosh.NAME, 'name', 732, 45, 732, 49),
woosh.Token(woosh.OP, ',', 732, 49, 732, 50),
woosh.Token(woosh.NAME, 'lineno', 732, 51, 732, 57),
woosh.Token(woosh.OP, ')', 732, 57, 732, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 732, 58, 733, 0),
woosh.Token(woosh.NAME, 'return', 734, 8, 734, 14),
woosh.Token(woosh.NAME, 'source', 734, 15, 734, 21),
woosh.Token(woosh.OP, ',', 734, 21, 734, 22),
woosh.Token(woosh.NAME, 'options', 734, 23, 734, 30),
woosh.Token(woosh.OP, ',', 734, 30, 734, 31),
woosh.Token(woosh.NAME, 'want', 734, 32, 734, 36),
woosh.Token(woosh.OP, ',', 734, 36, 734, 37),
woosh.Token(woosh.NAME, 'exc_msg', 734, 38, 734, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 45, 735, 0),
woosh.Token(woosh.COMMENT, '# This regular expression looks for option directives in the', 736, 4, 736, 64),
woosh.Token(woosh.COMMENT, '# source code of an example.  Option directives are comments', 737, 4, 737, 64),
woosh.Token(woosh.COMMENT, '# starting with "doctest:".  Warning: this may give false', 738, 4, 738, 61),
woosh.Token(woosh.COMMENT, '# positives for string-literals that contain the string', 739, 4, 739, 59),
woosh.Token(woosh.COMMENT, '# "#doctest:".  Eliminating these false positives would require', 740, 4, 740, 67),
woosh.Token(woosh.COMMENT, '# actually parsing the string; but we limit them by ignoring any', 741, 4, 741, 68),
woosh.Token(woosh.COMMENT, '# line containing "#doctest:" that is *followed* by a quote mark.', 742, 4, 742, 69),
woosh.Token(woosh.DEDENT, '    ', 743, 0, 743, 4),
woosh.Token(woosh.NAME, '_OPTION_DIRECTIVE_RE', 743, 4, 743, 24),
woosh.Token(woosh.OP, '=', 743, 25, 743, 26),
woosh.Token(woosh.NAME, 're', 743, 27, 743, 29),
woosh.Token(woosh.OP, '.', 743, 29, 743, 30),
woosh.Token(woosh.NAME, 'compile', 743, 30, 743, 37),
woosh.Token(woosh.OP, '(', 743, 37, 743, 38),
woosh.Token(woosh.STRING, 'r\'#\\s*doctest:\\s*([^\\n\\\'"]*)$\'', 743, 38, 743, 68),
woosh.Token(woosh.OP, ',', 743, 68, 743, 69),
woosh.Token(woosh.NAME, 're', 744, 38, 744, 40),
woosh.Token(woosh.OP, '.', 744, 40, 744, 41),
woosh.Token(woosh.NAME, 'MULTILINE', 744, 41, 744, 50),
woosh.Token(woosh.OP, ')', 744, 50, 744, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 51, 745, 0),
woosh.Token(woosh.NAME, 'def', 746, 4, 746, 7),
woosh.Token(woosh.NAME, '_find_options', 746, 8, 746, 21),
woosh.Token(woosh.OP, '(', 746, 21, 746, 22),
woosh.Token(woosh.NAME, 'self', 746, 22, 746, 26),
woosh.Token(woosh.OP, ',', 746, 26, 746, 27),
woosh.Token(woosh.NAME, 'source', 746, 28, 746, 34),
woosh.Token(woosh.OP, ',', 746, 34, 746, 35),
woosh.Token(woosh.NAME, 'name', 746, 36, 746, 40),
woosh.Token(woosh.OP, ',', 746, 40, 746, 41),
woosh.Token(woosh.NAME, 'lineno', 746, 42, 746, 48),
woosh.Token(woosh.OP, ')', 746, 48, 746, 49),
woosh.Token(woosh.OP, ':', 746, 49, 746, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 50, 747, 0),
woosh.Token(woosh.INDENT, '        ', 747, 0, 747, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return a dictionary containing option overrides extracted from\r\n        option directives in the given source string.\r\n\r\n        `name` is the string\'s name, and `lineno` is the line number\r\n        where the example starts; both are used for error messages.\r\n        """', 747, 8, 753, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 11, 754, 0),
woosh.Token(woosh.NAME, 'options', 754, 8, 754, 15),
woosh.Token(woosh.OP, '=', 754, 16, 754, 17),
woosh.Token(woosh.OP, '{', 754, 18, 754, 19),
woosh.Token(woosh.OP, '}', 754, 19, 754, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 20, 755, 0),
woosh.Token(woosh.COMMENT, '# (note: with the current regexp, this will match at most once:)', 755, 8, 755, 72),
woosh.Token(woosh.NAME, 'for', 756, 8, 756, 11),
woosh.Token(woosh.NAME, 'm', 756, 12, 756, 13),
woosh.Token(woosh.NAME, 'in', 756, 14, 756, 16),
woosh.Token(woosh.NAME, 'self', 756, 17, 756, 21),
woosh.Token(woosh.OP, '.', 756, 21, 756, 22),
woosh.Token(woosh.NAME, '_OPTION_DIRECTIVE_RE', 756, 22, 756, 42),
woosh.Token(woosh.OP, '.', 756, 42, 756, 43),
woosh.Token(woosh.NAME, 'finditer', 756, 43, 756, 51),
woosh.Token(woosh.OP, '(', 756, 51, 756, 52),
woosh.Token(woosh.NAME, 'source', 756, 52, 756, 58),
woosh.Token(woosh.OP, ')', 756, 58, 756, 59),
woosh.Token(woosh.OP, ':', 756, 59, 756, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 60, 757, 0),
woosh.Token(woosh.INDENT, '            ', 757, 0, 757, 12),
woosh.Token(woosh.NAME, 'option_strings', 757, 12, 757, 26),
woosh.Token(woosh.OP, '=', 757, 27, 757, 28),
woosh.Token(woosh.NAME, 'm', 757, 29, 757, 30),
woosh.Token(woosh.OP, '.', 757, 30, 757, 31),
woosh.Token(woosh.NAME, 'group', 757, 31, 757, 36),
woosh.Token(woosh.OP, '(', 757, 36, 757, 37),
woosh.Token(woosh.NUMBER, '1', 757, 37, 757, 38),
woosh.Token(woosh.OP, ')', 757, 38, 757, 39),
woosh.Token(woosh.OP, '.', 757, 39, 757, 40),
woosh.Token(woosh.NAME, 'replace', 757, 40, 757, 47),
woosh.Token(woosh.OP, '(', 757, 47, 757, 48),
woosh.Token(woosh.STRING, "','", 757, 48, 757, 51),
woosh.Token(woosh.OP, ',', 757, 51, 757, 52),
woosh.Token(woosh.STRING, "' '", 757, 53, 757, 56),
woosh.Token(woosh.OP, ')', 757, 56, 757, 57),
woosh.Token(woosh.OP, '.', 757, 57, 757, 58),
woosh.Token(woosh.NAME, 'split', 757, 58, 757, 63),
woosh.Token(woosh.OP, '(', 757, 63, 757, 64),
woosh.Token(woosh.OP, ')', 757, 64, 757, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 65, 758, 0),
woosh.Token(woosh.NAME, 'for', 758, 12, 758, 15),
woosh.Token(woosh.NAME, 'option', 758, 16, 758, 22),
woosh.Token(woosh.NAME, 'in', 758, 23, 758, 25),
woosh.Token(woosh.NAME, 'option_strings', 758, 26, 758, 40),
woosh.Token(woosh.OP, ':', 758, 40, 758, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 41, 759, 0),
woosh.Token(woosh.INDENT, '                ', 759, 0, 759, 16),
woosh.Token(woosh.NAME, 'if', 759, 16, 759, 18),
woosh.Token(woosh.OP, '(', 759, 19, 759, 20),
woosh.Token(woosh.NAME, 'option', 759, 20, 759, 26),
woosh.Token(woosh.OP, '[', 759, 26, 759, 27),
woosh.Token(woosh.NUMBER, '0', 759, 27, 759, 28),
woosh.Token(woosh.OP, ']', 759, 28, 759, 29),
woosh.Token(woosh.NAME, 'not', 759, 30, 759, 33),
woosh.Token(woosh.NAME, 'in', 759, 34, 759, 36),
woosh.Token(woosh.STRING, "'+-'", 759, 37, 759, 41),
woosh.Token(woosh.NAME, 'or', 759, 42, 759, 44),
woosh.Token(woosh.NAME, 'option', 760, 20, 760, 26),
woosh.Token(woosh.OP, '[', 760, 26, 760, 27),
woosh.Token(woosh.NUMBER, '1', 760, 27, 760, 28),
woosh.Token(woosh.OP, ':', 760, 28, 760, 29),
woosh.Token(woosh.OP, ']', 760, 29, 760, 30),
woosh.Token(woosh.NAME, 'not', 760, 31, 760, 34),
woosh.Token(woosh.NAME, 'in', 760, 35, 760, 37),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 760, 38, 760, 57),
woosh.Token(woosh.OP, ')', 760, 57, 760, 58),
woosh.Token(woosh.OP, ':', 760, 58, 760, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 59, 761, 0),
woosh.Token(woosh.INDENT, '                    ', 761, 0, 761, 20),
woosh.Token(woosh.NAME, 'raise', 761, 20, 761, 25),
woosh.Token(woosh.NAME, 'ValueError', 761, 26, 761, 36),
woosh.Token(woosh.OP, '(', 761, 36, 761, 37),
woosh.Token(woosh.STRING, "'line %r of the doctest for %s '", 761, 37, 761, 69),
woosh.Token(woosh.STRING, "'has an invalid option: %r'", 762, 37, 762, 64),
woosh.Token(woosh.OP, '%', 762, 65, 762, 66),
woosh.Token(woosh.OP, '(', 763, 37, 763, 38),
woosh.Token(woosh.NAME, 'lineno', 763, 38, 763, 44),
woosh.Token(woosh.OP, '+', 763, 44, 763, 45),
woosh.Token(woosh.NUMBER, '1', 763, 45, 763, 46),
woosh.Token(woosh.OP, ',', 763, 46, 763, 47),
woosh.Token(woosh.NAME, 'name', 763, 48, 763, 52),
woosh.Token(woosh.OP, ',', 763, 52, 763, 53),
woosh.Token(woosh.NAME, 'option', 763, 54, 763, 60),
woosh.Token(woosh.OP, ')', 763, 60, 763, 61),
woosh.Token(woosh.OP, ')', 763, 61, 763, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 763, 62, 764, 0),
woosh.Token(woosh.DEDENT, '                ', 764, 0, 764, 16),
woosh.Token(woosh.NAME, 'flag', 764, 16, 764, 20),
woosh.Token(woosh.OP, '=', 764, 21, 764, 22),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 764, 23, 764, 42),
woosh.Token(woosh.OP, '[', 764, 42, 764, 43),
woosh.Token(woosh.NAME, 'option', 764, 43, 764, 49),
woosh.Token(woosh.OP, '[', 764, 49, 764, 50),
woosh.Token(woosh.NUMBER, '1', 764, 50, 764, 51),
woosh.Token(woosh.OP, ':', 764, 51, 764, 52),
woosh.Token(woosh.OP, ']', 764, 52, 764, 53),
woosh.Token(woosh.OP, ']', 764, 53, 764, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 764, 54, 765, 0),
woosh.Token(woosh.NAME, 'options', 765, 16, 765, 23),
woosh.Token(woosh.OP, '[', 765, 23, 765, 24),
woosh.Token(woosh.NAME, 'flag', 765, 24, 765, 28),
woosh.Token(woosh.OP, ']', 765, 28, 765, 29),
woosh.Token(woosh.OP, '=', 765, 30, 765, 31),
woosh.Token(woosh.OP, '(', 765, 32, 765, 33),
woosh.Token(woosh.NAME, 'option', 765, 33, 765, 39),
woosh.Token(woosh.OP, '[', 765, 39, 765, 40),
woosh.Token(woosh.NUMBER, '0', 765, 40, 765, 41),
woosh.Token(woosh.OP, ']', 765, 41, 765, 42),
woosh.Token(woosh.OP, '==', 765, 43, 765, 45),
woosh.Token(woosh.STRING, "'+'", 765, 46, 765, 49),
woosh.Token(woosh.OP, ')', 765, 49, 765, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 765, 50, 766, 0),
woosh.Token(woosh.DEDENT, '        ', 766, 0, 766, 8),
woosh.Token(woosh.DEDENT, '', 766, 8, 766, 8),
woosh.Token(woosh.NAME, 'if', 766, 8, 766, 10),
woosh.Token(woosh.NAME, 'options', 766, 11, 766, 18),
woosh.Token(woosh.NAME, 'and', 766, 19, 766, 22),
woosh.Token(woosh.NAME, 'self', 766, 23, 766, 27),
woosh.Token(woosh.OP, '.', 766, 27, 766, 28),
woosh.Token(woosh.NAME, '_IS_BLANK_OR_COMMENT', 766, 28, 766, 48),
woosh.Token(woosh.OP, '(', 766, 48, 766, 49),
woosh.Token(woosh.NAME, 'source', 766, 49, 766, 55),
woosh.Token(woosh.OP, ')', 766, 55, 766, 56),
woosh.Token(woosh.OP, ':', 766, 56, 766, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 766, 57, 767, 0),
woosh.Token(woosh.INDENT, '            ', 767, 0, 767, 12),
woosh.Token(woosh.NAME, 'raise', 767, 12, 767, 17),
woosh.Token(woosh.NAME, 'ValueError', 767, 18, 767, 28),
woosh.Token(woosh.OP, '(', 767, 28, 767, 29),
woosh.Token(woosh.STRING, "'line %r of the doctest for %s has an option '", 767, 29, 767, 75),
woosh.Token(woosh.STRING, "'directive on a line with no example: %r'", 768, 29, 768, 70),
woosh.Token(woosh.OP, '%', 768, 71, 768, 72),
woosh.Token(woosh.OP, '(', 769, 29, 769, 30),
woosh.Token(woosh.NAME, 'lineno', 769, 30, 769, 36),
woosh.Token(woosh.OP, ',', 769, 36, 769, 37),
woosh.Token(woosh.NAME, 'name', 769, 38, 769, 42),
woosh.Token(woosh.OP, ',', 769, 42, 769, 43),
woosh.Token(woosh.NAME, 'source', 769, 44, 769, 50),
woosh.Token(woosh.OP, ')', 769, 50, 769, 51),
woosh.Token(woosh.OP, ')', 769, 51, 769, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 769, 52, 770, 0),
woosh.Token(woosh.DEDENT, '        ', 770, 0, 770, 8),
woosh.Token(woosh.NAME, 'return', 770, 8, 770, 14),
woosh.Token(woosh.NAME, 'options', 770, 15, 770, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 22, 771, 0),
woosh.Token(woosh.COMMENT, '# This regular expression finds the indentation of every non-blank', 772, 4, 772, 70),
woosh.Token(woosh.COMMENT, '# line in a string.', 773, 4, 773, 23),
woosh.Token(woosh.DEDENT, '    ', 774, 0, 774, 4),
woosh.Token(woosh.NAME, '_INDENT_RE', 774, 4, 774, 14),
woosh.Token(woosh.OP, '=', 774, 15, 774, 16),
woosh.Token(woosh.NAME, 're', 774, 17, 774, 19),
woosh.Token(woosh.OP, '.', 774, 19, 774, 20),
woosh.Token(woosh.NAME, 'compile', 774, 20, 774, 27),
woosh.Token(woosh.OP, '(', 774, 27, 774, 28),
woosh.Token(woosh.STRING, "r'^([ ]*)(?=\\S)'", 774, 28, 774, 44),
woosh.Token(woosh.OP, ',', 774, 44, 774, 45),
woosh.Token(woosh.NAME, 're', 774, 46, 774, 48),
woosh.Token(woosh.OP, '.', 774, 48, 774, 49),
woosh.Token(woosh.NAME, 'MULTILINE', 774, 49, 774, 58),
woosh.Token(woosh.OP, ')', 774, 58, 774, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 59, 775, 0),
woosh.Token(woosh.NAME, 'def', 776, 4, 776, 7),
woosh.Token(woosh.NAME, '_min_indent', 776, 8, 776, 19),
woosh.Token(woosh.OP, '(', 776, 19, 776, 20),
woosh.Token(woosh.NAME, 'self', 776, 20, 776, 24),
woosh.Token(woosh.OP, ',', 776, 24, 776, 25),
woosh.Token(woosh.NAME, 's', 776, 26, 776, 27),
woosh.Token(woosh.OP, ')', 776, 27, 776, 28),
woosh.Token(woosh.OP, ':', 776, 28, 776, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 776, 29, 777, 0),
woosh.Token(woosh.INDENT, '        ', 777, 0, 777, 8),
woosh.Token(woosh.STRING, '"Return the minimum indentation of any non-blank line in `s`"', 777, 8, 777, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 69, 778, 0),
woosh.Token(woosh.NAME, 'indents', 778, 8, 778, 15),
woosh.Token(woosh.OP, '=', 778, 16, 778, 17),
woosh.Token(woosh.OP, '[', 778, 18, 778, 19),
woosh.Token(woosh.NAME, 'len', 778, 19, 778, 22),
woosh.Token(woosh.OP, '(', 778, 22, 778, 23),
woosh.Token(woosh.NAME, 'indent', 778, 23, 778, 29),
woosh.Token(woosh.OP, ')', 778, 29, 778, 30),
woosh.Token(woosh.NAME, 'for', 778, 31, 778, 34),
woosh.Token(woosh.NAME, 'indent', 778, 35, 778, 41),
woosh.Token(woosh.NAME, 'in', 778, 42, 778, 44),
woosh.Token(woosh.NAME, 'self', 778, 45, 778, 49),
woosh.Token(woosh.OP, '.', 778, 49, 778, 50),
woosh.Token(woosh.NAME, '_INDENT_RE', 778, 50, 778, 60),
woosh.Token(woosh.OP, '.', 778, 60, 778, 61),
woosh.Token(woosh.NAME, 'findall', 778, 61, 778, 68),
woosh.Token(woosh.OP, '(', 778, 68, 778, 69),
woosh.Token(woosh.NAME, 's', 778, 69, 778, 70),
woosh.Token(woosh.OP, ')', 778, 70, 778, 71),
woosh.Token(woosh.OP, ']', 778, 71, 778, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 72, 779, 0),
woosh.Token(woosh.NAME, 'if', 779, 8, 779, 10),
woosh.Token(woosh.NAME, 'len', 779, 11, 779, 14),
woosh.Token(woosh.OP, '(', 779, 14, 779, 15),
woosh.Token(woosh.NAME, 'indents', 779, 15, 779, 22),
woosh.Token(woosh.OP, ')', 779, 22, 779, 23),
woosh.Token(woosh.OP, '>', 779, 24, 779, 25),
woosh.Token(woosh.NUMBER, '0', 779, 26, 779, 27),
woosh.Token(woosh.OP, ':', 779, 27, 779, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 28, 780, 0),
woosh.Token(woosh.INDENT, '            ', 780, 0, 780, 12),
woosh.Token(woosh.NAME, 'return', 780, 12, 780, 18),
woosh.Token(woosh.NAME, 'min', 780, 19, 780, 22),
woosh.Token(woosh.OP, '(', 780, 22, 780, 23),
woosh.Token(woosh.NAME, 'indents', 780, 23, 780, 30),
woosh.Token(woosh.OP, ')', 780, 30, 780, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 780, 31, 781, 0),
woosh.Token(woosh.DEDENT, '        ', 781, 0, 781, 8),
woosh.Token(woosh.NAME, 'else', 781, 8, 781, 12),
woosh.Token(woosh.OP, ':', 781, 12, 781, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 13, 782, 0),
woosh.Token(woosh.INDENT, '            ', 782, 0, 782, 12),
woosh.Token(woosh.NAME, 'return', 782, 12, 782, 18),
woosh.Token(woosh.NUMBER, '0', 782, 19, 782, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 20, 783, 0),
woosh.Token(woosh.DEDENT, '    ', 784, 0, 784, 4),
woosh.Token(woosh.DEDENT, '', 784, 4, 784, 4),
woosh.Token(woosh.NAME, 'def', 784, 4, 784, 7),
woosh.Token(woosh.NAME, '_check_prompt_blank', 784, 8, 784, 27),
woosh.Token(woosh.OP, '(', 784, 27, 784, 28),
woosh.Token(woosh.NAME, 'self', 784, 28, 784, 32),
woosh.Token(woosh.OP, ',', 784, 32, 784, 33),
woosh.Token(woosh.NAME, 'lines', 784, 34, 784, 39),
woosh.Token(woosh.OP, ',', 784, 39, 784, 40),
woosh.Token(woosh.NAME, 'indent', 784, 41, 784, 47),
woosh.Token(woosh.OP, ',', 784, 47, 784, 48),
woosh.Token(woosh.NAME, 'name', 784, 49, 784, 53),
woosh.Token(woosh.OP, ',', 784, 53, 784, 54),
woosh.Token(woosh.NAME, 'lineno', 784, 55, 784, 61),
woosh.Token(woosh.OP, ')', 784, 61, 784, 62),
woosh.Token(woosh.OP, ':', 784, 62, 784, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 784, 63, 785, 0),
woosh.Token(woosh.INDENT, '        ', 785, 0, 785, 8),
woosh.Token(woosh.STRING, '"""\r\n        Given the lines of a source string (including prompts and\r\n        leading indentation), check to make sure that every prompt is\r\n        followed by a space character.  If any line is not followed by\r\n        a space character, then raise ValueError.\r\n        """', 785, 8, 790, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 11, 791, 0),
woosh.Token(woosh.NAME, 'for', 791, 8, 791, 11),
woosh.Token(woosh.NAME, 'i', 791, 12, 791, 13),
woosh.Token(woosh.OP, ',', 791, 13, 791, 14),
woosh.Token(woosh.NAME, 'line', 791, 15, 791, 19),
woosh.Token(woosh.NAME, 'in', 791, 20, 791, 22),
woosh.Token(woosh.NAME, 'enumerate', 791, 23, 791, 32),
woosh.Token(woosh.OP, '(', 791, 32, 791, 33),
woosh.Token(woosh.NAME, 'lines', 791, 33, 791, 38),
woosh.Token(woosh.OP, ')', 791, 38, 791, 39),
woosh.Token(woosh.OP, ':', 791, 39, 791, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 791, 40, 792, 0),
woosh.Token(woosh.INDENT, '            ', 792, 0, 792, 12),
woosh.Token(woosh.NAME, 'if', 792, 12, 792, 14),
woosh.Token(woosh.NAME, 'len', 792, 15, 792, 18),
woosh.Token(woosh.OP, '(', 792, 18, 792, 19),
woosh.Token(woosh.NAME, 'line', 792, 19, 792, 23),
woosh.Token(woosh.OP, ')', 792, 23, 792, 24),
woosh.Token(woosh.OP, '>=', 792, 25, 792, 27),
woosh.Token(woosh.NAME, 'indent', 792, 28, 792, 34),
woosh.Token(woosh.OP, '+', 792, 34, 792, 35),
woosh.Token(woosh.NUMBER, '4', 792, 35, 792, 36),
woosh.Token(woosh.NAME, 'and', 792, 37, 792, 40),
woosh.Token(woosh.NAME, 'line', 792, 41, 792, 45),
woosh.Token(woosh.OP, '[', 792, 45, 792, 46),
woosh.Token(woosh.NAME, 'indent', 792, 46, 792, 52),
woosh.Token(woosh.OP, '+', 792, 52, 792, 53),
woosh.Token(woosh.NUMBER, '3', 792, 53, 792, 54),
woosh.Token(woosh.OP, ']', 792, 54, 792, 55),
woosh.Token(woosh.OP, '!=', 792, 56, 792, 58),
woosh.Token(woosh.STRING, "' '", 792, 59, 792, 62),
woosh.Token(woosh.OP, ':', 792, 62, 792, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 63, 793, 0),
woosh.Token(woosh.INDENT, '                ', 793, 0, 793, 16),
woosh.Token(woosh.NAME, 'raise', 793, 16, 793, 21),
woosh.Token(woosh.NAME, 'ValueError', 793, 22, 793, 32),
woosh.Token(woosh.OP, '(', 793, 32, 793, 33),
woosh.Token(woosh.STRING, "'line %r of the docstring for %s '", 793, 33, 793, 67),
woosh.Token(woosh.STRING, "'lacks blank after %s: %r'", 794, 33, 794, 59),
woosh.Token(woosh.OP, '%', 794, 60, 794, 61),
woosh.Token(woosh.OP, '(', 795, 33, 795, 34),
woosh.Token(woosh.NAME, 'lineno', 795, 34, 795, 40),
woosh.Token(woosh.OP, '+', 795, 40, 795, 41),
woosh.Token(woosh.NAME, 'i', 795, 41, 795, 42),
woosh.Token(woosh.OP, '+', 795, 42, 795, 43),
woosh.Token(woosh.NUMBER, '1', 795, 43, 795, 44),
woosh.Token(woosh.OP, ',', 795, 44, 795, 45),
woosh.Token(woosh.NAME, 'name', 795, 46, 795, 50),
woosh.Token(woosh.OP, ',', 795, 50, 795, 51),
woosh.Token(woosh.NAME, 'line', 796, 34, 796, 38),
woosh.Token(woosh.OP, '[', 796, 38, 796, 39),
woosh.Token(woosh.NAME, 'indent', 796, 39, 796, 45),
woosh.Token(woosh.OP, ':', 796, 45, 796, 46),
woosh.Token(woosh.NAME, 'indent', 796, 46, 796, 52),
woosh.Token(woosh.OP, '+', 796, 52, 796, 53),
woosh.Token(woosh.NUMBER, '3', 796, 53, 796, 54),
woosh.Token(woosh.OP, ']', 796, 54, 796, 55),
woosh.Token(woosh.OP, ',', 796, 55, 796, 56),
woosh.Token(woosh.NAME, 'line', 796, 57, 796, 61),
woosh.Token(woosh.OP, ')', 796, 61, 796, 62),
woosh.Token(woosh.OP, ')', 796, 62, 796, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 63, 797, 0),
woosh.Token(woosh.DEDENT, '    ', 798, 0, 798, 4),
woosh.Token(woosh.DEDENT, '', 798, 4, 798, 4),
woosh.Token(woosh.DEDENT, '', 798, 4, 798, 4),
woosh.Token(woosh.NAME, 'def', 798, 4, 798, 7),
woosh.Token(woosh.NAME, '_check_prefix', 798, 8, 798, 21),
woosh.Token(woosh.OP, '(', 798, 21, 798, 22),
woosh.Token(woosh.NAME, 'self', 798, 22, 798, 26),
woosh.Token(woosh.OP, ',', 798, 26, 798, 27),
woosh.Token(woosh.NAME, 'lines', 798, 28, 798, 33),
woosh.Token(woosh.OP, ',', 798, 33, 798, 34),
woosh.Token(woosh.NAME, 'prefix', 798, 35, 798, 41),
woosh.Token(woosh.OP, ',', 798, 41, 798, 42),
woosh.Token(woosh.NAME, 'name', 798, 43, 798, 47),
woosh.Token(woosh.OP, ',', 798, 47, 798, 48),
woosh.Token(woosh.NAME, 'lineno', 798, 49, 798, 55),
woosh.Token(woosh.OP, ')', 798, 55, 798, 56),
woosh.Token(woosh.OP, ':', 798, 56, 798, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 57, 799, 0),
woosh.Token(woosh.INDENT, '        ', 799, 0, 799, 8),
woosh.Token(woosh.STRING, '"""\r\n        Check that every line in the given list starts with the given\r\n        prefix; if any line does not, then raise a ValueError.\r\n        """', 799, 8, 802, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 11, 803, 0),
woosh.Token(woosh.NAME, 'for', 803, 8, 803, 11),
woosh.Token(woosh.NAME, 'i', 803, 12, 803, 13),
woosh.Token(woosh.OP, ',', 803, 13, 803, 14),
woosh.Token(woosh.NAME, 'line', 803, 15, 803, 19),
woosh.Token(woosh.NAME, 'in', 803, 20, 803, 22),
woosh.Token(woosh.NAME, 'enumerate', 803, 23, 803, 32),
woosh.Token(woosh.OP, '(', 803, 32, 803, 33),
woosh.Token(woosh.NAME, 'lines', 803, 33, 803, 38),
woosh.Token(woosh.OP, ')', 803, 38, 803, 39),
woosh.Token(woosh.OP, ':', 803, 39, 803, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 803, 40, 804, 0),
woosh.Token(woosh.INDENT, '            ', 804, 0, 804, 12),
woosh.Token(woosh.NAME, 'if', 804, 12, 804, 14),
woosh.Token(woosh.NAME, 'line', 804, 15, 804, 19),
woosh.Token(woosh.NAME, 'and', 804, 20, 804, 23),
woosh.Token(woosh.NAME, 'not', 804, 24, 804, 27),
woosh.Token(woosh.NAME, 'line', 804, 28, 804, 32),
woosh.Token(woosh.OP, '.', 804, 32, 804, 33),
woosh.Token(woosh.NAME, 'startswith', 804, 33, 804, 43),
woosh.Token(woosh.OP, '(', 804, 43, 804, 44),
woosh.Token(woosh.NAME, 'prefix', 804, 44, 804, 50),
woosh.Token(woosh.OP, ')', 804, 50, 804, 51),
woosh.Token(woosh.OP, ':', 804, 51, 804, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 804, 52, 805, 0),
woosh.Token(woosh.INDENT, '                ', 805, 0, 805, 16),
woosh.Token(woosh.NAME, 'raise', 805, 16, 805, 21),
woosh.Token(woosh.NAME, 'ValueError', 805, 22, 805, 32),
woosh.Token(woosh.OP, '(', 805, 32, 805, 33),
woosh.Token(woosh.STRING, "'line %r of the docstring for %s has '", 805, 33, 805, 71),
woosh.Token(woosh.STRING, "'inconsistent leading whitespace: %r'", 806, 33, 806, 70),
woosh.Token(woosh.OP, '%', 806, 71, 806, 72),
woosh.Token(woosh.OP, '(', 807, 33, 807, 34),
woosh.Token(woosh.NAME, 'lineno', 807, 34, 807, 40),
woosh.Token(woosh.OP, '+', 807, 40, 807, 41),
woosh.Token(woosh.NAME, 'i', 807, 41, 807, 42),
woosh.Token(woosh.OP, '+', 807, 42, 807, 43),
woosh.Token(woosh.NUMBER, '1', 807, 43, 807, 44),
woosh.Token(woosh.OP, ',', 807, 44, 807, 45),
woosh.Token(woosh.NAME, 'name', 807, 46, 807, 50),
woosh.Token(woosh.OP, ',', 807, 50, 807, 51),
woosh.Token(woosh.NAME, 'line', 807, 52, 807, 56),
woosh.Token(woosh.OP, ')', 807, 56, 807, 57),
woosh.Token(woosh.OP, ')', 807, 57, 807, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 58, 808, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 810, 0, 810, 70),
woosh.Token(woosh.COMMENT, '## 4. DocTest Finder', 811, 0, 811, 20),
woosh.Token(woosh.COMMENT, '######################################################################', 812, 0, 812, 70),
woosh.Token(woosh.DEDENT, '', 814, 0, 814, 0),
woosh.Token(woosh.DEDENT, '', 814, 0, 814, 0),
woosh.Token(woosh.DEDENT, '', 814, 0, 814, 0),
woosh.Token(woosh.DEDENT, '', 814, 0, 814, 0),
woosh.Token(woosh.NAME, 'class', 814, 0, 814, 5),
woosh.Token(woosh.NAME, 'DocTestFinder', 814, 6, 814, 19),
woosh.Token(woosh.OP, ':', 814, 19, 814, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 20, 815, 0),
woosh.Token(woosh.INDENT, '    ', 815, 0, 815, 4),
woosh.Token(woosh.STRING, '"""\r\n    A class used to extract the DocTests that are relevant to a given\r\n    object, from its docstring and the docstrings of its contained\r\n    objects.  Doctests can currently be extracted from the following\r\n    object types: modules, functions, classes, methods, staticmethods,\r\n    classmethods, and properties.\r\n    """', 815, 4, 821, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 7, 822, 0),
woosh.Token(woosh.NAME, 'def', 823, 4, 823, 7),
woosh.Token(woosh.NAME, '__init__', 823, 8, 823, 16),
woosh.Token(woosh.OP, '(', 823, 16, 823, 17),
woosh.Token(woosh.NAME, 'self', 823, 17, 823, 21),
woosh.Token(woosh.OP, ',', 823, 21, 823, 22),
woosh.Token(woosh.NAME, 'verbose', 823, 23, 823, 30),
woosh.Token(woosh.OP, '=', 823, 30, 823, 31),
woosh.Token(woosh.NAME, 'False', 823, 31, 823, 36),
woosh.Token(woosh.OP, ',', 823, 36, 823, 37),
woosh.Token(woosh.NAME, 'parser', 823, 38, 823, 44),
woosh.Token(woosh.OP, '=', 823, 44, 823, 45),
woosh.Token(woosh.NAME, 'DocTestParser', 823, 45, 823, 58),
woosh.Token(woosh.OP, '(', 823, 58, 823, 59),
woosh.Token(woosh.OP, ')', 823, 59, 823, 60),
woosh.Token(woosh.OP, ',', 823, 60, 823, 61),
woosh.Token(woosh.NAME, 'recurse', 824, 17, 824, 24),
woosh.Token(woosh.OP, '=', 824, 24, 824, 25),
woosh.Token(woosh.NAME, 'True', 824, 25, 824, 29),
woosh.Token(woosh.OP, ',', 824, 29, 824, 30),
woosh.Token(woosh.NAME, 'exclude_empty', 824, 31, 824, 44),
woosh.Token(woosh.OP, '=', 824, 44, 824, 45),
woosh.Token(woosh.NAME, 'True', 824, 45, 824, 49),
woosh.Token(woosh.OP, ')', 824, 49, 824, 50),
woosh.Token(woosh.OP, ':', 824, 50, 824, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 51, 825, 0),
woosh.Token(woosh.INDENT, '        ', 825, 0, 825, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create a new doctest finder.\r\n\r\n        The optional argument `parser` specifies a class or\r\n        function that should be used to create new DocTest objects (or\r\n        objects that implement the same interface as DocTest).  The\r\n        signature for this factory function should match the signature\r\n        of the DocTest constructor.\r\n\r\n        If the optional argument `recurse` is false, then `find` will\r\n        only examine the given object, and not any contained objects.\r\n\r\n        If the optional argument `exclude_empty` is false, then `find`\r\n        will include tests for objects with empty docstrings.\r\n        """', 825, 8, 839, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 11, 840, 0),
woosh.Token(woosh.NAME, 'self', 840, 8, 840, 12),
woosh.Token(woosh.OP, '.', 840, 12, 840, 13),
woosh.Token(woosh.NAME, '_parser', 840, 13, 840, 20),
woosh.Token(woosh.OP, '=', 840, 21, 840, 22),
woosh.Token(woosh.NAME, 'parser', 840, 23, 840, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 29, 841, 0),
woosh.Token(woosh.NAME, 'self', 841, 8, 841, 12),
woosh.Token(woosh.OP, '.', 841, 12, 841, 13),
woosh.Token(woosh.NAME, '_verbose', 841, 13, 841, 21),
woosh.Token(woosh.OP, '=', 841, 22, 841, 23),
woosh.Token(woosh.NAME, 'verbose', 841, 24, 841, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 31, 842, 0),
woosh.Token(woosh.NAME, 'self', 842, 8, 842, 12),
woosh.Token(woosh.OP, '.', 842, 12, 842, 13),
woosh.Token(woosh.NAME, '_recurse', 842, 13, 842, 21),
woosh.Token(woosh.OP, '=', 842, 22, 842, 23),
woosh.Token(woosh.NAME, 'recurse', 842, 24, 842, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 31, 843, 0),
woosh.Token(woosh.NAME, 'self', 843, 8, 843, 12),
woosh.Token(woosh.OP, '.', 843, 12, 843, 13),
woosh.Token(woosh.NAME, '_exclude_empty', 843, 13, 843, 27),
woosh.Token(woosh.OP, '=', 843, 28, 843, 29),
woosh.Token(woosh.NAME, 'exclude_empty', 843, 30, 843, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 43, 844, 0),
woosh.Token(woosh.DEDENT, '    ', 845, 0, 845, 4),
woosh.Token(woosh.NAME, 'def', 845, 4, 845, 7),
woosh.Token(woosh.NAME, 'find', 845, 8, 845, 12),
woosh.Token(woosh.OP, '(', 845, 12, 845, 13),
woosh.Token(woosh.NAME, 'self', 845, 13, 845, 17),
woosh.Token(woosh.OP, ',', 845, 17, 845, 18),
woosh.Token(woosh.NAME, 'obj', 845, 19, 845, 22),
woosh.Token(woosh.OP, ',', 845, 22, 845, 23),
woosh.Token(woosh.NAME, 'name', 845, 24, 845, 28),
woosh.Token(woosh.OP, '=', 845, 28, 845, 29),
woosh.Token(woosh.NAME, 'None', 845, 29, 845, 33),
woosh.Token(woosh.OP, ',', 845, 33, 845, 34),
woosh.Token(woosh.NAME, 'module', 845, 35, 845, 41),
woosh.Token(woosh.OP, '=', 845, 41, 845, 42),
woosh.Token(woosh.NAME, 'None', 845, 42, 845, 46),
woosh.Token(woosh.OP, ',', 845, 46, 845, 47),
woosh.Token(woosh.NAME, 'globs', 845, 48, 845, 53),
woosh.Token(woosh.OP, '=', 845, 53, 845, 54),
woosh.Token(woosh.NAME, 'None', 845, 54, 845, 58),
woosh.Token(woosh.OP, ',', 845, 58, 845, 59),
woosh.Token(woosh.NAME, 'extraglobs', 845, 60, 845, 70),
woosh.Token(woosh.OP, '=', 845, 70, 845, 71),
woosh.Token(woosh.NAME, 'None', 845, 71, 845, 75),
woosh.Token(woosh.OP, ')', 845, 75, 845, 76),
woosh.Token(woosh.OP, ':', 845, 76, 845, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 845, 77, 846, 0),
woosh.Token(woosh.INDENT, '        ', 846, 0, 846, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return a list of the DocTests that are defined by the given\r\n        object\'s docstring, or by any of its contained objects\'\r\n        docstrings.\r\n\r\n        The optional parameter `module` is the module that contains\r\n        the given object.  If the module is not specified or is None, then\r\n        the test finder will attempt to automatically determine the\r\n        correct module.  The object\'s module is used:\r\n\r\n            - As a default namespace, if `globs` is not specified.\r\n            - To prevent the DocTestFinder from extracting DocTests\r\n              from objects that are imported from other modules.\r\n            - To find the name of the file containing the object.\r\n            - To help find the line number of the object within its\r\n              file.\r\n\r\n        Contained objects whose module does not match `module` are ignored.\r\n\r\n        If `module` is False, no attempt to find the module will be made.\r\n        This is obscure, of use mostly in tests:  if `module` is False, or\r\n        is None but cannot be found automatically, then all objects are\r\n        considered to belong to the (non-existent) module, so all contained\r\n        objects will (recursively) be searched for doctests.\r\n\r\n        The globals for each DocTest is formed by combining `globs`\r\n        and `extraglobs` (bindings in `extraglobs` override bindings\r\n        in `globs`).  A new copy of the globals dictionary is created\r\n        for each DocTest.  If `globs` is not specified, then it\r\n        defaults to the module\'s `__dict__`, if specified, or {}\r\n        otherwise.  If `extraglobs` is not specified, then it defaults\r\n        to {}.\r\n\r\n        """', 846, 8, 879, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 879, 11, 880, 0),
woosh.Token(woosh.COMMENT, '# If name was not specified, then extract it from the object.', 880, 8, 880, 69),
woosh.Token(woosh.NAME, 'if', 881, 8, 881, 10),
woosh.Token(woosh.NAME, 'name', 881, 11, 881, 15),
woosh.Token(woosh.NAME, 'is', 881, 16, 881, 18),
woosh.Token(woosh.NAME, 'None', 881, 19, 881, 23),
woosh.Token(woosh.OP, ':', 881, 23, 881, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 24, 882, 0),
woosh.Token(woosh.INDENT, '            ', 882, 0, 882, 12),
woosh.Token(woosh.NAME, 'name', 882, 12, 882, 16),
woosh.Token(woosh.OP, '=', 882, 17, 882, 18),
woosh.Token(woosh.NAME, 'getattr', 882, 19, 882, 26),
woosh.Token(woosh.OP, '(', 882, 26, 882, 27),
woosh.Token(woosh.NAME, 'obj', 882, 27, 882, 30),
woosh.Token(woosh.OP, ',', 882, 30, 882, 31),
woosh.Token(woosh.STRING, "'__name__'", 882, 32, 882, 42),
woosh.Token(woosh.OP, ',', 882, 42, 882, 43),
woosh.Token(woosh.NAME, 'None', 882, 44, 882, 48),
woosh.Token(woosh.OP, ')', 882, 48, 882, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 882, 49, 883, 0),
woosh.Token(woosh.NAME, 'if', 883, 12, 883, 14),
woosh.Token(woosh.NAME, 'name', 883, 15, 883, 19),
woosh.Token(woosh.NAME, 'is', 883, 20, 883, 22),
woosh.Token(woosh.NAME, 'None', 883, 23, 883, 27),
woosh.Token(woosh.OP, ':', 883, 27, 883, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 883, 28, 884, 0),
woosh.Token(woosh.INDENT, '                ', 884, 0, 884, 16),
woosh.Token(woosh.NAME, 'raise', 884, 16, 884, 21),
woosh.Token(woosh.NAME, 'ValueError', 884, 22, 884, 32),
woosh.Token(woosh.OP, '(', 884, 32, 884, 33),
woosh.Token(woosh.STRING, '"DocTestFinder.find: name must be given "', 884, 33, 884, 74),
woosh.Token(woosh.STRING, '"when obj.__name__ doesn\'t exist: %r"', 885, 24, 885, 61),
woosh.Token(woosh.OP, '%', 885, 62, 885, 63),
woosh.Token(woosh.OP, '(', 886, 33, 886, 34),
woosh.Token(woosh.NAME, 'type', 886, 34, 886, 38),
woosh.Token(woosh.OP, '(', 886, 38, 886, 39),
woosh.Token(woosh.NAME, 'obj', 886, 39, 886, 42),
woosh.Token(woosh.OP, ')', 886, 42, 886, 43),
woosh.Token(woosh.OP, ',', 886, 43, 886, 44),
woosh.Token(woosh.OP, ')', 886, 44, 886, 45),
woosh.Token(woosh.OP, ')', 886, 45, 886, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 46, 887, 0),
woosh.Token(woosh.COMMENT, '# Find the module that contains the given object (if obj is', 888, 8, 888, 67),
woosh.Token(woosh.COMMENT, '# a module, then module=obj.).  Note: this may fail, in which', 889, 8, 889, 69),
woosh.Token(woosh.COMMENT, '# case module will be None.', 890, 8, 890, 35),
woosh.Token(woosh.DEDENT, '        ', 891, 0, 891, 8),
woosh.Token(woosh.DEDENT, '', 891, 8, 891, 8),
woosh.Token(woosh.NAME, 'if', 891, 8, 891, 10),
woosh.Token(woosh.NAME, 'module', 891, 11, 891, 17),
woosh.Token(woosh.NAME, 'is', 891, 18, 891, 20),
woosh.Token(woosh.NAME, 'False', 891, 21, 891, 26),
woosh.Token(woosh.OP, ':', 891, 26, 891, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 27, 892, 0),
woosh.Token(woosh.INDENT, '            ', 892, 0, 892, 12),
woosh.Token(woosh.NAME, 'module', 892, 12, 892, 18),
woosh.Token(woosh.OP, '=', 892, 19, 892, 20),
woosh.Token(woosh.NAME, 'None', 892, 21, 892, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 25, 893, 0),
woosh.Token(woosh.DEDENT, '        ', 893, 0, 893, 8),
woosh.Token(woosh.NAME, 'elif', 893, 8, 893, 12),
woosh.Token(woosh.NAME, 'module', 893, 13, 893, 19),
woosh.Token(woosh.NAME, 'is', 893, 20, 893, 22),
woosh.Token(woosh.NAME, 'None', 893, 23, 893, 27),
woosh.Token(woosh.OP, ':', 893, 27, 893, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 28, 894, 0),
woosh.Token(woosh.INDENT, '            ', 894, 0, 894, 12),
woosh.Token(woosh.NAME, 'module', 894, 12, 894, 18),
woosh.Token(woosh.OP, '=', 894, 19, 894, 20),
woosh.Token(woosh.NAME, 'inspect', 894, 21, 894, 28),
woosh.Token(woosh.OP, '.', 894, 28, 894, 29),
woosh.Token(woosh.NAME, 'getmodule', 894, 29, 894, 38),
woosh.Token(woosh.OP, '(', 894, 38, 894, 39),
woosh.Token(woosh.NAME, 'obj', 894, 39, 894, 42),
woosh.Token(woosh.OP, ')', 894, 42, 894, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 43, 895, 0),
woosh.Token(woosh.COMMENT, "# Read the module's source code.  This is used by", 896, 8, 896, 57),
woosh.Token(woosh.COMMENT, '# DocTestFinder._find_lineno to find the line number for a', 897, 8, 897, 66),
woosh.Token(woosh.COMMENT, "# given object's docstring.", 898, 8, 898, 35),
woosh.Token(woosh.DEDENT, '        ', 899, 0, 899, 8),
woosh.Token(woosh.NAME, 'try', 899, 8, 899, 11),
woosh.Token(woosh.OP, ':', 899, 11, 899, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 12, 900, 0),
woosh.Token(woosh.INDENT, '            ', 900, 0, 900, 12),
woosh.Token(woosh.NAME, 'file', 900, 12, 900, 16),
woosh.Token(woosh.OP, '=', 900, 17, 900, 18),
woosh.Token(woosh.NAME, 'inspect', 900, 19, 900, 26),
woosh.Token(woosh.OP, '.', 900, 26, 900, 27),
woosh.Token(woosh.NAME, 'getsourcefile', 900, 27, 900, 40),
woosh.Token(woosh.OP, '(', 900, 40, 900, 41),
woosh.Token(woosh.NAME, 'obj', 900, 41, 900, 44),
woosh.Token(woosh.OP, ')', 900, 44, 900, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 900, 45, 901, 0),
woosh.Token(woosh.DEDENT, '        ', 901, 0, 901, 8),
woosh.Token(woosh.NAME, 'except', 901, 8, 901, 14),
woosh.Token(woosh.NAME, 'TypeError', 901, 15, 901, 24),
woosh.Token(woosh.OP, ':', 901, 24, 901, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 25, 902, 0),
woosh.Token(woosh.INDENT, '            ', 902, 0, 902, 12),
woosh.Token(woosh.NAME, 'source_lines', 902, 12, 902, 24),
woosh.Token(woosh.OP, '=', 902, 25, 902, 26),
woosh.Token(woosh.NAME, 'None', 902, 27, 902, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 902, 31, 903, 0),
woosh.Token(woosh.DEDENT, '        ', 903, 0, 903, 8),
woosh.Token(woosh.NAME, 'else', 903, 8, 903, 12),
woosh.Token(woosh.OP, ':', 903, 12, 903, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 903, 13, 904, 0),
woosh.Token(woosh.INDENT, '            ', 904, 0, 904, 12),
woosh.Token(woosh.NAME, 'if', 904, 12, 904, 14),
woosh.Token(woosh.NAME, 'not', 904, 15, 904, 18),
woosh.Token(woosh.NAME, 'file', 904, 19, 904, 23),
woosh.Token(woosh.OP, ':', 904, 23, 904, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 904, 24, 905, 0),
woosh.Token(woosh.COMMENT, '# Check to see if it\'s one of our special internal "files"', 905, 16, 905, 74),
woosh.Token(woosh.COMMENT, '# (see __patched_linecache_getlines).', 906, 16, 906, 53),
woosh.Token(woosh.INDENT, '                ', 907, 0, 907, 16),
woosh.Token(woosh.NAME, 'file', 907, 16, 907, 20),
woosh.Token(woosh.OP, '=', 907, 21, 907, 22),
woosh.Token(woosh.NAME, 'inspect', 907, 23, 907, 30),
woosh.Token(woosh.OP, '.', 907, 30, 907, 31),
woosh.Token(woosh.NAME, 'getfile', 907, 31, 907, 38),
woosh.Token(woosh.OP, '(', 907, 38, 907, 39),
woosh.Token(woosh.NAME, 'obj', 907, 39, 907, 42),
woosh.Token(woosh.OP, ')', 907, 42, 907, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 907, 43, 908, 0),
woosh.Token(woosh.NAME, 'if', 908, 16, 908, 18),
woosh.Token(woosh.NAME, 'not', 908, 19, 908, 22),
woosh.Token(woosh.NAME, 'file', 908, 23, 908, 27),
woosh.Token(woosh.OP, '[', 908, 27, 908, 28),
woosh.Token(woosh.NUMBER, '0', 908, 28, 908, 29),
woosh.Token(woosh.OP, ']', 908, 29, 908, 30),
woosh.Token(woosh.OP, '+', 908, 30, 908, 31),
woosh.Token(woosh.NAME, 'file', 908, 31, 908, 35),
woosh.Token(woosh.OP, '[', 908, 35, 908, 36),
woosh.Token(woosh.OP, '-', 908, 36, 908, 37),
woosh.Token(woosh.NUMBER, '2', 908, 37, 908, 38),
woosh.Token(woosh.OP, ':', 908, 38, 908, 39),
woosh.Token(woosh.OP, ']', 908, 39, 908, 40),
woosh.Token(woosh.OP, '==', 908, 41, 908, 43),
woosh.Token(woosh.STRING, "'<]>'", 908, 44, 908, 49),
woosh.Token(woosh.OP, ':', 908, 49, 908, 50),
woosh.Token(woosh.NAME, 'file', 908, 51, 908, 55),
woosh.Token(woosh.OP, '=', 908, 56, 908, 57),
woosh.Token(woosh.NAME, 'None', 908, 58, 908, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 908, 62, 909, 0),
woosh.Token(woosh.DEDENT, '            ', 909, 0, 909, 12),
woosh.Token(woosh.NAME, 'if', 909, 12, 909, 14),
woosh.Token(woosh.NAME, 'file', 909, 15, 909, 19),
woosh.Token(woosh.NAME, 'is', 909, 20, 909, 22),
woosh.Token(woosh.NAME, 'None', 909, 23, 909, 27),
woosh.Token(woosh.OP, ':', 909, 27, 909, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 909, 28, 910, 0),
woosh.Token(woosh.INDENT, '                ', 910, 0, 910, 16),
woosh.Token(woosh.NAME, 'source_lines', 910, 16, 910, 28),
woosh.Token(woosh.OP, '=', 910, 29, 910, 30),
woosh.Token(woosh.NAME, 'None', 910, 31, 910, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 35, 911, 0),
woosh.Token(woosh.DEDENT, '            ', 911, 0, 911, 12),
woosh.Token(woosh.NAME, 'else', 911, 12, 911, 16),
woosh.Token(woosh.OP, ':', 911, 16, 911, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 17, 912, 0),
woosh.Token(woosh.INDENT, '                ', 912, 0, 912, 16),
woosh.Token(woosh.NAME, 'if', 912, 16, 912, 18),
woosh.Token(woosh.NAME, 'module', 912, 19, 912, 25),
woosh.Token(woosh.NAME, 'is', 912, 26, 912, 28),
woosh.Token(woosh.NAME, 'not', 912, 29, 912, 32),
woosh.Token(woosh.NAME, 'None', 912, 33, 912, 37),
woosh.Token(woosh.OP, ':', 912, 37, 912, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 38, 913, 0),
woosh.Token(woosh.COMMENT, '# Supply the module globals in case the module was', 913, 20, 913, 70),
woosh.Token(woosh.COMMENT, '# originally loaded via a PEP 302 loader and', 914, 20, 914, 64),
woosh.Token(woosh.COMMENT, '# file is not a valid filesystem path', 915, 20, 915, 57),
woosh.Token(woosh.INDENT, '                    ', 916, 0, 916, 20),
woosh.Token(woosh.NAME, 'source_lines', 916, 20, 916, 32),
woosh.Token(woosh.OP, '=', 916, 33, 916, 34),
woosh.Token(woosh.NAME, 'linecache', 916, 35, 916, 44),
woosh.Token(woosh.OP, '.', 916, 44, 916, 45),
woosh.Token(woosh.NAME, 'getlines', 916, 45, 916, 53),
woosh.Token(woosh.OP, '(', 916, 53, 916, 54),
woosh.Token(woosh.NAME, 'file', 916, 54, 916, 58),
woosh.Token(woosh.OP, ',', 916, 58, 916, 59),
woosh.Token(woosh.NAME, 'module', 916, 60, 916, 66),
woosh.Token(woosh.OP, '.', 916, 66, 916, 67),
woosh.Token(woosh.NAME, '__dict__', 916, 67, 916, 75),
woosh.Token(woosh.OP, ')', 916, 75, 916, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 916, 76, 917, 0),
woosh.Token(woosh.DEDENT, '                ', 917, 0, 917, 16),
woosh.Token(woosh.NAME, 'else', 917, 16, 917, 20),
woosh.Token(woosh.OP, ':', 917, 20, 917, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 917, 21, 918, 0),
woosh.Token(woosh.COMMENT, "# No access to a loader, so assume it's a normal", 918, 20, 918, 68),
woosh.Token(woosh.COMMENT, '# filesystem path', 919, 20, 919, 37),
woosh.Token(woosh.INDENT, '                    ', 920, 0, 920, 20),
woosh.Token(woosh.NAME, 'source_lines', 920, 20, 920, 32),
woosh.Token(woosh.OP, '=', 920, 33, 920, 34),
woosh.Token(woosh.NAME, 'linecache', 920, 35, 920, 44),
woosh.Token(woosh.OP, '.', 920, 44, 920, 45),
woosh.Token(woosh.NAME, 'getlines', 920, 45, 920, 53),
woosh.Token(woosh.OP, '(', 920, 53, 920, 54),
woosh.Token(woosh.NAME, 'file', 920, 54, 920, 58),
woosh.Token(woosh.OP, ')', 920, 58, 920, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 920, 59, 921, 0),
woosh.Token(woosh.DEDENT, '                ', 921, 0, 921, 16),
woosh.Token(woosh.NAME, 'if', 921, 16, 921, 18),
woosh.Token(woosh.NAME, 'not', 921, 19, 921, 22),
woosh.Token(woosh.NAME, 'source_lines', 921, 23, 921, 35),
woosh.Token(woosh.OP, ':', 921, 35, 921, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 921, 36, 922, 0),
woosh.Token(woosh.INDENT, '                    ', 922, 0, 922, 20),
woosh.Token(woosh.NAME, 'source_lines', 922, 20, 922, 32),
woosh.Token(woosh.OP, '=', 922, 33, 922, 34),
woosh.Token(woosh.NAME, 'None', 922, 35, 922, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 922, 39, 923, 0),
woosh.Token(woosh.COMMENT, '# Initialize globals, and merge in extraglobs.', 924, 8, 924, 54),
woosh.Token(woosh.DEDENT, '        ', 925, 0, 925, 8),
woosh.Token(woosh.DEDENT, '', 925, 8, 925, 8),
woosh.Token(woosh.DEDENT, '', 925, 8, 925, 8),
woosh.Token(woosh.NAME, 'if', 925, 8, 925, 10),
woosh.Token(woosh.NAME, 'globs', 925, 11, 925, 16),
woosh.Token(woosh.NAME, 'is', 925, 17, 925, 19),
woosh.Token(woosh.NAME, 'None', 925, 20, 925, 24),
woosh.Token(woosh.OP, ':', 925, 24, 925, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 25, 926, 0),
woosh.Token(woosh.INDENT, '            ', 926, 0, 926, 12),
woosh.Token(woosh.NAME, 'if', 926, 12, 926, 14),
woosh.Token(woosh.NAME, 'module', 926, 15, 926, 21),
woosh.Token(woosh.NAME, 'is', 926, 22, 926, 24),
woosh.Token(woosh.NAME, 'None', 926, 25, 926, 29),
woosh.Token(woosh.OP, ':', 926, 29, 926, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 926, 30, 927, 0),
woosh.Token(woosh.INDENT, '                ', 927, 0, 927, 16),
woosh.Token(woosh.NAME, 'globs', 927, 16, 927, 21),
woosh.Token(woosh.OP, '=', 927, 22, 927, 23),
woosh.Token(woosh.OP, '{', 927, 24, 927, 25),
woosh.Token(woosh.OP, '}', 927, 25, 927, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 26, 928, 0),
woosh.Token(woosh.DEDENT, '            ', 928, 0, 928, 12),
woosh.Token(woosh.NAME, 'else', 928, 12, 928, 16),
woosh.Token(woosh.OP, ':', 928, 16, 928, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 928, 17, 929, 0),
woosh.Token(woosh.INDENT, '                ', 929, 0, 929, 16),
woosh.Token(woosh.NAME, 'globs', 929, 16, 929, 21),
woosh.Token(woosh.OP, '=', 929, 22, 929, 23),
woosh.Token(woosh.NAME, 'module', 929, 24, 929, 30),
woosh.Token(woosh.OP, '.', 929, 30, 929, 31),
woosh.Token(woosh.NAME, '__dict__', 929, 31, 929, 39),
woosh.Token(woosh.OP, '.', 929, 39, 929, 40),
woosh.Token(woosh.NAME, 'copy', 929, 40, 929, 44),
woosh.Token(woosh.OP, '(', 929, 44, 929, 45),
woosh.Token(woosh.OP, ')', 929, 45, 929, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 929, 46, 930, 0),
woosh.Token(woosh.DEDENT, '        ', 930, 0, 930, 8),
woosh.Token(woosh.DEDENT, '', 930, 8, 930, 8),
woosh.Token(woosh.NAME, 'else', 930, 8, 930, 12),
woosh.Token(woosh.OP, ':', 930, 12, 930, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 930, 13, 931, 0),
woosh.Token(woosh.INDENT, '            ', 931, 0, 931, 12),
woosh.Token(woosh.NAME, 'globs', 931, 12, 931, 17),
woosh.Token(woosh.OP, '=', 931, 18, 931, 19),
woosh.Token(woosh.NAME, 'globs', 931, 20, 931, 25),
woosh.Token(woosh.OP, '.', 931, 25, 931, 26),
woosh.Token(woosh.NAME, 'copy', 931, 26, 931, 30),
woosh.Token(woosh.OP, '(', 931, 30, 931, 31),
woosh.Token(woosh.OP, ')', 931, 31, 931, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 931, 32, 932, 0),
woosh.Token(woosh.DEDENT, '        ', 932, 0, 932, 8),
woosh.Token(woosh.NAME, 'if', 932, 8, 932, 10),
woosh.Token(woosh.NAME, 'extraglobs', 932, 11, 932, 21),
woosh.Token(woosh.NAME, 'is', 932, 22, 932, 24),
woosh.Token(woosh.NAME, 'not', 932, 25, 932, 28),
woosh.Token(woosh.NAME, 'None', 932, 29, 932, 33),
woosh.Token(woosh.OP, ':', 932, 33, 932, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 34, 933, 0),
woosh.Token(woosh.INDENT, '            ', 933, 0, 933, 12),
woosh.Token(woosh.NAME, 'globs', 933, 12, 933, 17),
woosh.Token(woosh.OP, '.', 933, 17, 933, 18),
woosh.Token(woosh.NAME, 'update', 933, 18, 933, 24),
woosh.Token(woosh.OP, '(', 933, 24, 933, 25),
woosh.Token(woosh.NAME, 'extraglobs', 933, 25, 933, 35),
woosh.Token(woosh.OP, ')', 933, 35, 933, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 933, 36, 934, 0),
woosh.Token(woosh.DEDENT, '        ', 934, 0, 934, 8),
woosh.Token(woosh.NAME, 'if', 934, 8, 934, 10),
woosh.Token(woosh.STRING, "'__name__'", 934, 11, 934, 21),
woosh.Token(woosh.NAME, 'not', 934, 22, 934, 25),
woosh.Token(woosh.NAME, 'in', 934, 26, 934, 28),
woosh.Token(woosh.NAME, 'globs', 934, 29, 934, 34),
woosh.Token(woosh.OP, ':', 934, 34, 934, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 934, 35, 935, 0),
woosh.Token(woosh.INDENT, '            ', 935, 0, 935, 12),
woosh.Token(woosh.NAME, 'globs', 935, 12, 935, 17),
woosh.Token(woosh.OP, '[', 935, 17, 935, 18),
woosh.Token(woosh.STRING, "'__name__'", 935, 18, 935, 28),
woosh.Token(woosh.OP, ']', 935, 28, 935, 29),
woosh.Token(woosh.OP, '=', 935, 30, 935, 31),
woosh.Token(woosh.STRING, "'__main__'", 935, 32, 935, 42),
woosh.Token(woosh.COMMENT, '# provide a default module name', 935, 44, 935, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 935, 75, 936, 0),
woosh.Token(woosh.COMMENT, '# Recursively explore `obj`, extracting DocTests.', 937, 8, 937, 57),
woosh.Token(woosh.DEDENT, '        ', 938, 0, 938, 8),
woosh.Token(woosh.NAME, 'tests', 938, 8, 938, 13),
woosh.Token(woosh.OP, '=', 938, 14, 938, 15),
woosh.Token(woosh.OP, '[', 938, 16, 938, 17),
woosh.Token(woosh.OP, ']', 938, 17, 938, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 18, 939, 0),
woosh.Token(woosh.NAME, 'self', 939, 8, 939, 12),
woosh.Token(woosh.OP, '.', 939, 12, 939, 13),
woosh.Token(woosh.NAME, '_find', 939, 13, 939, 18),
woosh.Token(woosh.OP, '(', 939, 18, 939, 19),
woosh.Token(woosh.NAME, 'tests', 939, 19, 939, 24),
woosh.Token(woosh.OP, ',', 939, 24, 939, 25),
woosh.Token(woosh.NAME, 'obj', 939, 26, 939, 29),
woosh.Token(woosh.OP, ',', 939, 29, 939, 30),
woosh.Token(woosh.NAME, 'name', 939, 31, 939, 35),
woosh.Token(woosh.OP, ',', 939, 35, 939, 36),
woosh.Token(woosh.NAME, 'module', 939, 37, 939, 43),
woosh.Token(woosh.OP, ',', 939, 43, 939, 44),
woosh.Token(woosh.NAME, 'source_lines', 939, 45, 939, 57),
woosh.Token(woosh.OP, ',', 939, 57, 939, 58),
woosh.Token(woosh.NAME, 'globs', 939, 59, 939, 64),
woosh.Token(woosh.OP, ',', 939, 64, 939, 65),
woosh.Token(woosh.OP, '{', 939, 66, 939, 67),
woosh.Token(woosh.OP, '}', 939, 67, 939, 68),
woosh.Token(woosh.OP, ')', 939, 68, 939, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 69, 940, 0),
woosh.Token(woosh.COMMENT, '# Sort the tests by alpha order of names, for consistency in', 940, 8, 940, 68),
woosh.Token(woosh.COMMENT, '# verbose-mode output.  This was a feature of doctest in Pythons', 941, 8, 941, 72),
woosh.Token(woosh.COMMENT, '# <= 2.3 that got lost by accident in 2.4.  It was repaired in', 942, 8, 942, 70),
woosh.Token(woosh.COMMENT, '# 2.4.4 and 2.5.', 943, 8, 943, 24),
woosh.Token(woosh.NAME, 'tests', 944, 8, 944, 13),
woosh.Token(woosh.OP, '.', 944, 13, 944, 14),
woosh.Token(woosh.NAME, 'sort', 944, 14, 944, 18),
woosh.Token(woosh.OP, '(', 944, 18, 944, 19),
woosh.Token(woosh.OP, ')', 944, 19, 944, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 20, 945, 0),
woosh.Token(woosh.NAME, 'return', 945, 8, 945, 14),
woosh.Token(woosh.NAME, 'tests', 945, 15, 945, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 945, 20, 946, 0),
woosh.Token(woosh.DEDENT, '    ', 947, 0, 947, 4),
woosh.Token(woosh.NAME, 'def', 947, 4, 947, 7),
woosh.Token(woosh.NAME, '_from_module', 947, 8, 947, 20),
woosh.Token(woosh.OP, '(', 947, 20, 947, 21),
woosh.Token(woosh.NAME, 'self', 947, 21, 947, 25),
woosh.Token(woosh.OP, ',', 947, 25, 947, 26),
woosh.Token(woosh.NAME, 'module', 947, 27, 947, 33),
woosh.Token(woosh.OP, ',', 947, 33, 947, 34),
woosh.Token(woosh.NAME, 'object', 947, 35, 947, 41),
woosh.Token(woosh.OP, ')', 947, 41, 947, 42),
woosh.Token(woosh.OP, ':', 947, 42, 947, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 947, 43, 948, 0),
woosh.Token(woosh.INDENT, '        ', 948, 0, 948, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return true if the given object is defined in the given\r\n        module.\r\n        """', 948, 8, 951, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 11, 952, 0),
woosh.Token(woosh.NAME, 'if', 952, 8, 952, 10),
woosh.Token(woosh.NAME, 'module', 952, 11, 952, 17),
woosh.Token(woosh.NAME, 'is', 952, 18, 952, 20),
woosh.Token(woosh.NAME, 'None', 952, 21, 952, 25),
woosh.Token(woosh.OP, ':', 952, 25, 952, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 952, 26, 953, 0),
woosh.Token(woosh.INDENT, '            ', 953, 0, 953, 12),
woosh.Token(woosh.NAME, 'return', 953, 12, 953, 18),
woosh.Token(woosh.NAME, 'True', 953, 19, 953, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 23, 954, 0),
woosh.Token(woosh.DEDENT, '        ', 954, 0, 954, 8),
woosh.Token(woosh.NAME, 'elif', 954, 8, 954, 12),
woosh.Token(woosh.NAME, 'inspect', 954, 13, 954, 20),
woosh.Token(woosh.OP, '.', 954, 20, 954, 21),
woosh.Token(woosh.NAME, 'getmodule', 954, 21, 954, 30),
woosh.Token(woosh.OP, '(', 954, 30, 954, 31),
woosh.Token(woosh.NAME, 'object', 954, 31, 954, 37),
woosh.Token(woosh.OP, ')', 954, 37, 954, 38),
woosh.Token(woosh.NAME, 'is', 954, 39, 954, 41),
woosh.Token(woosh.NAME, 'not', 954, 42, 954, 45),
woosh.Token(woosh.NAME, 'None', 954, 46, 954, 50),
woosh.Token(woosh.OP, ':', 954, 50, 954, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 954, 51, 955, 0),
woosh.Token(woosh.INDENT, '            ', 955, 0, 955, 12),
woosh.Token(woosh.NAME, 'return', 955, 12, 955, 18),
woosh.Token(woosh.NAME, 'module', 955, 19, 955, 25),
woosh.Token(woosh.NAME, 'is', 955, 26, 955, 28),
woosh.Token(woosh.NAME, 'inspect', 955, 29, 955, 36),
woosh.Token(woosh.OP, '.', 955, 36, 955, 37),
woosh.Token(woosh.NAME, 'getmodule', 955, 37, 955, 46),
woosh.Token(woosh.OP, '(', 955, 46, 955, 47),
woosh.Token(woosh.NAME, 'object', 955, 47, 955, 53),
woosh.Token(woosh.OP, ')', 955, 53, 955, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 54, 956, 0),
woosh.Token(woosh.DEDENT, '        ', 956, 0, 956, 8),
woosh.Token(woosh.NAME, 'elif', 956, 8, 956, 12),
woosh.Token(woosh.NAME, 'inspect', 956, 13, 956, 20),
woosh.Token(woosh.OP, '.', 956, 20, 956, 21),
woosh.Token(woosh.NAME, 'isfunction', 956, 21, 956, 31),
woosh.Token(woosh.OP, '(', 956, 31, 956, 32),
woosh.Token(woosh.NAME, 'object', 956, 32, 956, 38),
woosh.Token(woosh.OP, ')', 956, 38, 956, 39),
woosh.Token(woosh.OP, ':', 956, 39, 956, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 956, 40, 957, 0),
woosh.Token(woosh.INDENT, '            ', 957, 0, 957, 12),
woosh.Token(woosh.NAME, 'return', 957, 12, 957, 18),
woosh.Token(woosh.NAME, 'module', 957, 19, 957, 25),
woosh.Token(woosh.OP, '.', 957, 25, 957, 26),
woosh.Token(woosh.NAME, '__dict__', 957, 26, 957, 34),
woosh.Token(woosh.NAME, 'is', 957, 35, 957, 37),
woosh.Token(woosh.NAME, 'object', 957, 38, 957, 44),
woosh.Token(woosh.OP, '.', 957, 44, 957, 45),
woosh.Token(woosh.NAME, '__globals__', 957, 45, 957, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 957, 56, 958, 0),
woosh.Token(woosh.DEDENT, '        ', 958, 0, 958, 8),
woosh.Token(woosh.NAME, 'elif', 958, 8, 958, 12),
woosh.Token(woosh.NAME, 'inspect', 958, 13, 958, 20),
woosh.Token(woosh.OP, '.', 958, 20, 958, 21),
woosh.Token(woosh.NAME, 'ismethoddescriptor', 958, 21, 958, 39),
woosh.Token(woosh.OP, '(', 958, 39, 958, 40),
woosh.Token(woosh.NAME, 'object', 958, 40, 958, 46),
woosh.Token(woosh.OP, ')', 958, 46, 958, 47),
woosh.Token(woosh.OP, ':', 958, 47, 958, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 48, 959, 0),
woosh.Token(woosh.INDENT, '            ', 959, 0, 959, 12),
woosh.Token(woosh.NAME, 'if', 959, 12, 959, 14),
woosh.Token(woosh.NAME, 'hasattr', 959, 15, 959, 22),
woosh.Token(woosh.OP, '(', 959, 22, 959, 23),
woosh.Token(woosh.NAME, 'object', 959, 23, 959, 29),
woosh.Token(woosh.OP, ',', 959, 29, 959, 30),
woosh.Token(woosh.STRING, "'__objclass__'", 959, 31, 959, 45),
woosh.Token(woosh.OP, ')', 959, 45, 959, 46),
woosh.Token(woosh.OP, ':', 959, 46, 959, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 959, 47, 960, 0),
woosh.Token(woosh.INDENT, '                ', 960, 0, 960, 16),
woosh.Token(woosh.NAME, 'obj_mod', 960, 16, 960, 23),
woosh.Token(woosh.OP, '=', 960, 24, 960, 25),
woosh.Token(woosh.NAME, 'object', 960, 26, 960, 32),
woosh.Token(woosh.OP, '.', 960, 32, 960, 33),
woosh.Token(woosh.NAME, '__objclass__', 960, 33, 960, 45),
woosh.Token(woosh.OP, '.', 960, 45, 960, 46),
woosh.Token(woosh.NAME, '__module__', 960, 46, 960, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 56, 961, 0),
woosh.Token(woosh.DEDENT, '            ', 961, 0, 961, 12),
woosh.Token(woosh.NAME, 'elif', 961, 12, 961, 16),
woosh.Token(woosh.NAME, 'hasattr', 961, 17, 961, 24),
woosh.Token(woosh.OP, '(', 961, 24, 961, 25),
woosh.Token(woosh.NAME, 'object', 961, 25, 961, 31),
woosh.Token(woosh.OP, ',', 961, 31, 961, 32),
woosh.Token(woosh.STRING, "'__module__'", 961, 33, 961, 45),
woosh.Token(woosh.OP, ')', 961, 45, 961, 46),
woosh.Token(woosh.OP, ':', 961, 46, 961, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 47, 962, 0),
woosh.Token(woosh.INDENT, '                ', 962, 0, 962, 16),
woosh.Token(woosh.NAME, 'obj_mod', 962, 16, 962, 23),
woosh.Token(woosh.OP, '=', 962, 24, 962, 25),
woosh.Token(woosh.NAME, 'object', 962, 26, 962, 32),
woosh.Token(woosh.OP, '.', 962, 32, 962, 33),
woosh.Token(woosh.NAME, '__module__', 962, 33, 962, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 962, 43, 963, 0),
woosh.Token(woosh.DEDENT, '            ', 963, 0, 963, 12),
woosh.Token(woosh.NAME, 'else', 963, 12, 963, 16),
woosh.Token(woosh.OP, ':', 963, 16, 963, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 963, 17, 964, 0),
woosh.Token(woosh.INDENT, '                ', 964, 0, 964, 16),
woosh.Token(woosh.NAME, 'return', 964, 16, 964, 22),
woosh.Token(woosh.NAME, 'True', 964, 23, 964, 27),
woosh.Token(woosh.COMMENT, '# [XX] no easy way to tell otherwise', 964, 28, 964, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 964, 64, 965, 0),
woosh.Token(woosh.DEDENT, '            ', 965, 0, 965, 12),
woosh.Token(woosh.NAME, 'return', 965, 12, 965, 18),
woosh.Token(woosh.NAME, 'module', 965, 19, 965, 25),
woosh.Token(woosh.OP, '.', 965, 25, 965, 26),
woosh.Token(woosh.NAME, '__name__', 965, 26, 965, 34),
woosh.Token(woosh.OP, '==', 965, 35, 965, 37),
woosh.Token(woosh.NAME, 'obj_mod', 965, 38, 965, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 965, 45, 966, 0),
woosh.Token(woosh.DEDENT, '        ', 966, 0, 966, 8),
woosh.Token(woosh.NAME, 'elif', 966, 8, 966, 12),
woosh.Token(woosh.NAME, 'inspect', 966, 13, 966, 20),
woosh.Token(woosh.OP, '.', 966, 20, 966, 21),
woosh.Token(woosh.NAME, 'isclass', 966, 21, 966, 28),
woosh.Token(woosh.OP, '(', 966, 28, 966, 29),
woosh.Token(woosh.NAME, 'object', 966, 29, 966, 35),
woosh.Token(woosh.OP, ')', 966, 35, 966, 36),
woosh.Token(woosh.OP, ':', 966, 36, 966, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 37, 967, 0),
woosh.Token(woosh.INDENT, '            ', 967, 0, 967, 12),
woosh.Token(woosh.NAME, 'return', 967, 12, 967, 18),
woosh.Token(woosh.NAME, 'module', 967, 19, 967, 25),
woosh.Token(woosh.OP, '.', 967, 25, 967, 26),
woosh.Token(woosh.NAME, '__name__', 967, 26, 967, 34),
woosh.Token(woosh.OP, '==', 967, 35, 967, 37),
woosh.Token(woosh.NAME, 'object', 967, 38, 967, 44),
woosh.Token(woosh.OP, '.', 967, 44, 967, 45),
woosh.Token(woosh.NAME, '__module__', 967, 45, 967, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 967, 55, 968, 0),
woosh.Token(woosh.DEDENT, '        ', 968, 0, 968, 8),
woosh.Token(woosh.NAME, 'elif', 968, 8, 968, 12),
woosh.Token(woosh.NAME, 'hasattr', 968, 13, 968, 20),
woosh.Token(woosh.OP, '(', 968, 20, 968, 21),
woosh.Token(woosh.NAME, 'object', 968, 21, 968, 27),
woosh.Token(woosh.OP, ',', 968, 27, 968, 28),
woosh.Token(woosh.STRING, "'__module__'", 968, 29, 968, 41),
woosh.Token(woosh.OP, ')', 968, 41, 968, 42),
woosh.Token(woosh.OP, ':', 968, 42, 968, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 968, 43, 969, 0),
woosh.Token(woosh.INDENT, '            ', 969, 0, 969, 12),
woosh.Token(woosh.NAME, 'return', 969, 12, 969, 18),
woosh.Token(woosh.NAME, 'module', 969, 19, 969, 25),
woosh.Token(woosh.OP, '.', 969, 25, 969, 26),
woosh.Token(woosh.NAME, '__name__', 969, 26, 969, 34),
woosh.Token(woosh.OP, '==', 969, 35, 969, 37),
woosh.Token(woosh.NAME, 'object', 969, 38, 969, 44),
woosh.Token(woosh.OP, '.', 969, 44, 969, 45),
woosh.Token(woosh.NAME, '__module__', 969, 45, 969, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 969, 55, 970, 0),
woosh.Token(woosh.DEDENT, '        ', 970, 0, 970, 8),
woosh.Token(woosh.NAME, 'elif', 970, 8, 970, 12),
woosh.Token(woosh.NAME, 'isinstance', 970, 13, 970, 23),
woosh.Token(woosh.OP, '(', 970, 23, 970, 24),
woosh.Token(woosh.NAME, 'object', 970, 24, 970, 30),
woosh.Token(woosh.OP, ',', 970, 30, 970, 31),
woosh.Token(woosh.NAME, 'property', 970, 32, 970, 40),
woosh.Token(woosh.OP, ')', 970, 40, 970, 41),
woosh.Token(woosh.OP, ':', 970, 41, 970, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 42, 971, 0),
woosh.Token(woosh.INDENT, '            ', 971, 0, 971, 12),
woosh.Token(woosh.NAME, 'return', 971, 12, 971, 18),
woosh.Token(woosh.NAME, 'True', 971, 19, 971, 23),
woosh.Token(woosh.COMMENT, '# [XX] no way not be sure.', 971, 24, 971, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 971, 50, 972, 0),
woosh.Token(woosh.DEDENT, '        ', 972, 0, 972, 8),
woosh.Token(woosh.NAME, 'else', 972, 8, 972, 12),
woosh.Token(woosh.OP, ':', 972, 12, 972, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 972, 13, 973, 0),
woosh.Token(woosh.INDENT, '            ', 973, 0, 973, 12),
woosh.Token(woosh.NAME, 'raise', 973, 12, 973, 17),
woosh.Token(woosh.NAME, 'ValueError', 973, 18, 973, 28),
woosh.Token(woosh.OP, '(', 973, 28, 973, 29),
woosh.Token(woosh.STRING, '"object must be a class or function"', 973, 29, 973, 65),
woosh.Token(woosh.OP, ')', 973, 65, 973, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 973, 66, 974, 0),
woosh.Token(woosh.DEDENT, '    ', 975, 0, 975, 4),
woosh.Token(woosh.DEDENT, '', 975, 4, 975, 4),
woosh.Token(woosh.NAME, 'def', 975, 4, 975, 7),
woosh.Token(woosh.NAME, '_find', 975, 8, 975, 13),
woosh.Token(woosh.OP, '(', 975, 13, 975, 14),
woosh.Token(woosh.NAME, 'self', 975, 14, 975, 18),
woosh.Token(woosh.OP, ',', 975, 18, 975, 19),
woosh.Token(woosh.NAME, 'tests', 975, 20, 975, 25),
woosh.Token(woosh.OP, ',', 975, 25, 975, 26),
woosh.Token(woosh.NAME, 'obj', 975, 27, 975, 30),
woosh.Token(woosh.OP, ',', 975, 30, 975, 31),
woosh.Token(woosh.NAME, 'name', 975, 32, 975, 36),
woosh.Token(woosh.OP, ',', 975, 36, 975, 37),
woosh.Token(woosh.NAME, 'module', 975, 38, 975, 44),
woosh.Token(woosh.OP, ',', 975, 44, 975, 45),
woosh.Token(woosh.NAME, 'source_lines', 975, 46, 975, 58),
woosh.Token(woosh.OP, ',', 975, 58, 975, 59),
woosh.Token(woosh.NAME, 'globs', 975, 60, 975, 65),
woosh.Token(woosh.OP, ',', 975, 65, 975, 66),
woosh.Token(woosh.NAME, 'seen', 975, 67, 975, 71),
woosh.Token(woosh.OP, ')', 975, 71, 975, 72),
woosh.Token(woosh.OP, ':', 975, 72, 975, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 975, 73, 976, 0),
woosh.Token(woosh.INDENT, '        ', 976, 0, 976, 8),
woosh.Token(woosh.STRING, '"""\r\n        Find tests for the given object and any contained objects, and\r\n        add them to `tests`.\r\n        """', 976, 8, 979, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 979, 11, 980, 0),
woosh.Token(woosh.NAME, 'if', 980, 8, 980, 10),
woosh.Token(woosh.NAME, 'self', 980, 11, 980, 15),
woosh.Token(woosh.OP, '.', 980, 15, 980, 16),
woosh.Token(woosh.NAME, '_verbose', 980, 16, 980, 24),
woosh.Token(woosh.OP, ':', 980, 24, 980, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 980, 25, 981, 0),
woosh.Token(woosh.INDENT, '            ', 981, 0, 981, 12),
woosh.Token(woosh.NAME, 'print', 981, 12, 981, 17),
woosh.Token(woosh.OP, '(', 981, 17, 981, 18),
woosh.Token(woosh.STRING, "'Finding tests in %s'", 981, 18, 981, 39),
woosh.Token(woosh.OP, '%', 981, 40, 981, 41),
woosh.Token(woosh.NAME, 'name', 981, 42, 981, 46),
woosh.Token(woosh.OP, ')', 981, 46, 981, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 981, 47, 982, 0),
woosh.Token(woosh.COMMENT, "# If we've already processed this object, then ignore it.", 983, 8, 983, 65),
woosh.Token(woosh.DEDENT, '        ', 984, 0, 984, 8),
woosh.Token(woosh.NAME, 'if', 984, 8, 984, 10),
woosh.Token(woosh.NAME, 'id', 984, 11, 984, 13),
woosh.Token(woosh.OP, '(', 984, 13, 984, 14),
woosh.Token(woosh.NAME, 'obj', 984, 14, 984, 17),
woosh.Token(woosh.OP, ')', 984, 17, 984, 18),
woosh.Token(woosh.NAME, 'in', 984, 19, 984, 21),
woosh.Token(woosh.NAME, 'seen', 984, 22, 984, 26),
woosh.Token(woosh.OP, ':', 984, 26, 984, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 984, 27, 985, 0),
woosh.Token(woosh.INDENT, '            ', 985, 0, 985, 12),
woosh.Token(woosh.NAME, 'return', 985, 12, 985, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 985, 18, 986, 0),
woosh.Token(woosh.DEDENT, '        ', 986, 0, 986, 8),
woosh.Token(woosh.NAME, 'seen', 986, 8, 986, 12),
woosh.Token(woosh.OP, '[', 986, 12, 986, 13),
woosh.Token(woosh.NAME, 'id', 986, 13, 986, 15),
woosh.Token(woosh.OP, '(', 986, 15, 986, 16),
woosh.Token(woosh.NAME, 'obj', 986, 16, 986, 19),
woosh.Token(woosh.OP, ')', 986, 19, 986, 20),
woosh.Token(woosh.OP, ']', 986, 20, 986, 21),
woosh.Token(woosh.OP, '=', 986, 22, 986, 23),
woosh.Token(woosh.NUMBER, '1', 986, 24, 986, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 986, 25, 987, 0),
woosh.Token(woosh.COMMENT, '# Find a test for this object, and add it to the list of tests.', 988, 8, 988, 71),
woosh.Token(woosh.NAME, 'test', 989, 8, 989, 12),
woosh.Token(woosh.OP, '=', 989, 13, 989, 14),
woosh.Token(woosh.NAME, 'self', 989, 15, 989, 19),
woosh.Token(woosh.OP, '.', 989, 19, 989, 20),
woosh.Token(woosh.NAME, '_get_test', 989, 20, 989, 29),
woosh.Token(woosh.OP, '(', 989, 29, 989, 30),
woosh.Token(woosh.NAME, 'obj', 989, 30, 989, 33),
woosh.Token(woosh.OP, ',', 989, 33, 989, 34),
woosh.Token(woosh.NAME, 'name', 989, 35, 989, 39),
woosh.Token(woosh.OP, ',', 989, 39, 989, 40),
woosh.Token(woosh.NAME, 'module', 989, 41, 989, 47),
woosh.Token(woosh.OP, ',', 989, 47, 989, 48),
woosh.Token(woosh.NAME, 'globs', 989, 49, 989, 54),
woosh.Token(woosh.OP, ',', 989, 54, 989, 55),
woosh.Token(woosh.NAME, 'source_lines', 989, 56, 989, 68),
woosh.Token(woosh.OP, ')', 989, 68, 989, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 989, 69, 990, 0),
woosh.Token(woosh.NAME, 'if', 990, 8, 990, 10),
woosh.Token(woosh.NAME, 'test', 990, 11, 990, 15),
woosh.Token(woosh.NAME, 'is', 990, 16, 990, 18),
woosh.Token(woosh.NAME, 'not', 990, 19, 990, 22),
woosh.Token(woosh.NAME, 'None', 990, 23, 990, 27),
woosh.Token(woosh.OP, ':', 990, 27, 990, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 990, 28, 991, 0),
woosh.Token(woosh.INDENT, '            ', 991, 0, 991, 12),
woosh.Token(woosh.NAME, 'tests', 991, 12, 991, 17),
woosh.Token(woosh.OP, '.', 991, 17, 991, 18),
woosh.Token(woosh.NAME, 'append', 991, 18, 991, 24),
woosh.Token(woosh.OP, '(', 991, 24, 991, 25),
woosh.Token(woosh.NAME, 'test', 991, 25, 991, 29),
woosh.Token(woosh.OP, ')', 991, 29, 991, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 991, 30, 992, 0),
woosh.Token(woosh.COMMENT, "# Look for tests in a module's contained objects.", 993, 8, 993, 57),
woosh.Token(woosh.DEDENT, '        ', 994, 0, 994, 8),
woosh.Token(woosh.NAME, 'if', 994, 8, 994, 10),
woosh.Token(woosh.NAME, 'inspect', 994, 11, 994, 18),
woosh.Token(woosh.OP, '.', 994, 18, 994, 19),
woosh.Token(woosh.NAME, 'ismodule', 994, 19, 994, 27),
woosh.Token(woosh.OP, '(', 994, 27, 994, 28),
woosh.Token(woosh.NAME, 'obj', 994, 28, 994, 31),
woosh.Token(woosh.OP, ')', 994, 31, 994, 32),
woosh.Token(woosh.NAME, 'and', 994, 33, 994, 36),
woosh.Token(woosh.NAME, 'self', 994, 37, 994, 41),
woosh.Token(woosh.OP, '.', 994, 41, 994, 42),
woosh.Token(woosh.NAME, '_recurse', 994, 42, 994, 50),
woosh.Token(woosh.OP, ':', 994, 50, 994, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 994, 51, 995, 0),
woosh.Token(woosh.INDENT, '            ', 995, 0, 995, 12),
woosh.Token(woosh.NAME, 'for', 995, 12, 995, 15),
woosh.Token(woosh.NAME, 'valname', 995, 16, 995, 23),
woosh.Token(woosh.OP, ',', 995, 23, 995, 24),
woosh.Token(woosh.NAME, 'val', 995, 25, 995, 28),
woosh.Token(woosh.NAME, 'in', 995, 29, 995, 31),
woosh.Token(woosh.NAME, 'obj', 995, 32, 995, 35),
woosh.Token(woosh.OP, '.', 995, 35, 995, 36),
woosh.Token(woosh.NAME, '__dict__', 995, 36, 995, 44),
woosh.Token(woosh.OP, '.', 995, 44, 995, 45),
woosh.Token(woosh.NAME, 'items', 995, 45, 995, 50),
woosh.Token(woosh.OP, '(', 995, 50, 995, 51),
woosh.Token(woosh.OP, ')', 995, 51, 995, 52),
woosh.Token(woosh.OP, ':', 995, 52, 995, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 995, 53, 996, 0),
woosh.Token(woosh.INDENT, '                ', 996, 0, 996, 16),
woosh.Token(woosh.NAME, 'valname', 996, 16, 996, 23),
woosh.Token(woosh.OP, '=', 996, 24, 996, 25),
woosh.Token(woosh.STRING, "'%s.%s'", 996, 26, 996, 33),
woosh.Token(woosh.OP, '%', 996, 34, 996, 35),
woosh.Token(woosh.OP, '(', 996, 36, 996, 37),
woosh.Token(woosh.NAME, 'name', 996, 37, 996, 41),
woosh.Token(woosh.OP, ',', 996, 41, 996, 42),
woosh.Token(woosh.NAME, 'valname', 996, 43, 996, 50),
woosh.Token(woosh.OP, ')', 996, 50, 996, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 996, 51, 997, 0),
woosh.Token(woosh.COMMENT, '# Recurse to functions & classes.', 997, 16, 997, 49),
woosh.Token(woosh.NAME, 'if', 998, 16, 998, 18),
woosh.Token(woosh.OP, '(', 998, 19, 998, 20),
woosh.Token(woosh.OP, '(', 998, 20, 998, 21),
woosh.Token(woosh.NAME, 'inspect', 998, 21, 998, 28),
woosh.Token(woosh.OP, '.', 998, 28, 998, 29),
woosh.Token(woosh.NAME, 'isroutine', 998, 29, 998, 38),
woosh.Token(woosh.OP, '(', 998, 38, 998, 39),
woosh.Token(woosh.NAME, 'inspect', 998, 39, 998, 46),
woosh.Token(woosh.OP, '.', 998, 46, 998, 47),
woosh.Token(woosh.NAME, 'unwrap', 998, 47, 998, 53),
woosh.Token(woosh.OP, '(', 998, 53, 998, 54),
woosh.Token(woosh.NAME, 'val', 998, 54, 998, 57),
woosh.Token(woosh.OP, ')', 998, 57, 998, 58),
woosh.Token(woosh.OP, ')', 998, 58, 998, 59),
woosh.Token(woosh.NAME, 'or', 999, 21, 999, 23),
woosh.Token(woosh.NAME, 'inspect', 999, 24, 999, 31),
woosh.Token(woosh.OP, '.', 999, 31, 999, 32),
woosh.Token(woosh.NAME, 'isclass', 999, 32, 999, 39),
woosh.Token(woosh.OP, '(', 999, 39, 999, 40),
woosh.Token(woosh.NAME, 'val', 999, 40, 999, 43),
woosh.Token(woosh.OP, ')', 999, 43, 999, 44),
woosh.Token(woosh.OP, ')', 999, 44, 999, 45),
woosh.Token(woosh.NAME, 'and', 999, 46, 999, 49),
woosh.Token(woosh.NAME, 'self', 1000, 20, 1000, 24),
woosh.Token(woosh.OP, '.', 1000, 24, 1000, 25),
woosh.Token(woosh.NAME, '_from_module', 1000, 25, 1000, 37),
woosh.Token(woosh.OP, '(', 1000, 37, 1000, 38),
woosh.Token(woosh.NAME, 'module', 1000, 38, 1000, 44),
woosh.Token(woosh.OP, ',', 1000, 44, 1000, 45),
woosh.Token(woosh.NAME, 'val', 1000, 46, 1000, 49),
woosh.Token(woosh.OP, ')', 1000, 49, 1000, 50),
woosh.Token(woosh.OP, ')', 1000, 50, 1000, 51),
woosh.Token(woosh.OP, ':', 1000, 51, 1000, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1000, 52, 1001, 0),
woosh.Token(woosh.INDENT, '                    ', 1001, 0, 1001, 20),
woosh.Token(woosh.NAME, 'self', 1001, 20, 1001, 24),
woosh.Token(woosh.OP, '.', 1001, 24, 1001, 25),
woosh.Token(woosh.NAME, '_find', 1001, 25, 1001, 30),
woosh.Token(woosh.OP, '(', 1001, 30, 1001, 31),
woosh.Token(woosh.NAME, 'tests', 1001, 31, 1001, 36),
woosh.Token(woosh.OP, ',', 1001, 36, 1001, 37),
woosh.Token(woosh.NAME, 'val', 1001, 38, 1001, 41),
woosh.Token(woosh.OP, ',', 1001, 41, 1001, 42),
woosh.Token(woosh.NAME, 'valname', 1001, 43, 1001, 50),
woosh.Token(woosh.OP, ',', 1001, 50, 1001, 51),
woosh.Token(woosh.NAME, 'module', 1001, 52, 1001, 58),
woosh.Token(woosh.OP, ',', 1001, 58, 1001, 59),
woosh.Token(woosh.NAME, 'source_lines', 1001, 60, 1001, 72),
woosh.Token(woosh.OP, ',', 1001, 72, 1001, 73),
woosh.Token(woosh.NAME, 'globs', 1002, 31, 1002, 36),
woosh.Token(woosh.OP, ',', 1002, 36, 1002, 37),
woosh.Token(woosh.NAME, 'seen', 1002, 38, 1002, 42),
woosh.Token(woosh.OP, ')', 1002, 42, 1002, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1002, 43, 1003, 0),
woosh.Token(woosh.COMMENT, "# Look for tests in a module's __test__ dictionary.", 1004, 8, 1004, 59),
woosh.Token(woosh.DEDENT, '        ', 1005, 0, 1005, 8),
woosh.Token(woosh.DEDENT, '', 1005, 8, 1005, 8),
woosh.Token(woosh.DEDENT, '', 1005, 8, 1005, 8),
woosh.Token(woosh.NAME, 'if', 1005, 8, 1005, 10),
woosh.Token(woosh.NAME, 'inspect', 1005, 11, 1005, 18),
woosh.Token(woosh.OP, '.', 1005, 18, 1005, 19),
woosh.Token(woosh.NAME, 'ismodule', 1005, 19, 1005, 27),
woosh.Token(woosh.OP, '(', 1005, 27, 1005, 28),
woosh.Token(woosh.NAME, 'obj', 1005, 28, 1005, 31),
woosh.Token(woosh.OP, ')', 1005, 31, 1005, 32),
woosh.Token(woosh.NAME, 'and', 1005, 33, 1005, 36),
woosh.Token(woosh.NAME, 'self', 1005, 37, 1005, 41),
woosh.Token(woosh.OP, '.', 1005, 41, 1005, 42),
woosh.Token(woosh.NAME, '_recurse', 1005, 42, 1005, 50),
woosh.Token(woosh.OP, ':', 1005, 50, 1005, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1005, 51, 1006, 0),
woosh.Token(woosh.INDENT, '            ', 1006, 0, 1006, 12),
woosh.Token(woosh.NAME, 'for', 1006, 12, 1006, 15),
woosh.Token(woosh.NAME, 'valname', 1006, 16, 1006, 23),
woosh.Token(woosh.OP, ',', 1006, 23, 1006, 24),
woosh.Token(woosh.NAME, 'val', 1006, 25, 1006, 28),
woosh.Token(woosh.NAME, 'in', 1006, 29, 1006, 31),
woosh.Token(woosh.NAME, 'getattr', 1006, 32, 1006, 39),
woosh.Token(woosh.OP, '(', 1006, 39, 1006, 40),
woosh.Token(woosh.NAME, 'obj', 1006, 40, 1006, 43),
woosh.Token(woosh.OP, ',', 1006, 43, 1006, 44),
woosh.Token(woosh.STRING, "'__test__'", 1006, 45, 1006, 55),
woosh.Token(woosh.OP, ',', 1006, 55, 1006, 56),
woosh.Token(woosh.OP, '{', 1006, 57, 1006, 58),
woosh.Token(woosh.OP, '}', 1006, 58, 1006, 59),
woosh.Token(woosh.OP, ')', 1006, 59, 1006, 60),
woosh.Token(woosh.OP, '.', 1006, 60, 1006, 61),
woosh.Token(woosh.NAME, 'items', 1006, 61, 1006, 66),
woosh.Token(woosh.OP, '(', 1006, 66, 1006, 67),
woosh.Token(woosh.OP, ')', 1006, 67, 1006, 68),
woosh.Token(woosh.OP, ':', 1006, 68, 1006, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1006, 69, 1007, 0),
woosh.Token(woosh.INDENT, '                ', 1007, 0, 1007, 16),
woosh.Token(woosh.NAME, 'if', 1007, 16, 1007, 18),
woosh.Token(woosh.NAME, 'not', 1007, 19, 1007, 22),
woosh.Token(woosh.NAME, 'isinstance', 1007, 23, 1007, 33),
woosh.Token(woosh.OP, '(', 1007, 33, 1007, 34),
woosh.Token(woosh.NAME, 'valname', 1007, 34, 1007, 41),
woosh.Token(woosh.OP, ',', 1007, 41, 1007, 42),
woosh.Token(woosh.NAME, 'str', 1007, 43, 1007, 46),
woosh.Token(woosh.OP, ')', 1007, 46, 1007, 47),
woosh.Token(woosh.OP, ':', 1007, 47, 1007, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1007, 48, 1008, 0),
woosh.Token(woosh.INDENT, '                    ', 1008, 0, 1008, 20),
woosh.Token(woosh.NAME, 'raise', 1008, 20, 1008, 25),
woosh.Token(woosh.NAME, 'ValueError', 1008, 26, 1008, 36),
woosh.Token(woosh.OP, '(', 1008, 36, 1008, 37),
woosh.Token(woosh.STRING, '"DocTestFinder.find: __test__ keys "', 1008, 37, 1008, 73),
woosh.Token(woosh.STRING, '"must be strings: %r"', 1009, 37, 1009, 58),
woosh.Token(woosh.OP, '%', 1009, 59, 1009, 60),
woosh.Token(woosh.OP, '(', 1010, 37, 1010, 38),
woosh.Token(woosh.NAME, 'type', 1010, 38, 1010, 42),
woosh.Token(woosh.OP, '(', 1010, 42, 1010, 43),
woosh.Token(woosh.NAME, 'valname', 1010, 43, 1010, 50),
woosh.Token(woosh.OP, ')', 1010, 50, 1010, 51),
woosh.Token(woosh.OP, ',', 1010, 51, 1010, 52),
woosh.Token(woosh.OP, ')', 1010, 52, 1010, 53),
woosh.Token(woosh.OP, ')', 1010, 53, 1010, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1010, 54, 1011, 0),
woosh.Token(woosh.DEDENT, '                ', 1011, 0, 1011, 16),
woosh.Token(woosh.NAME, 'if', 1011, 16, 1011, 18),
woosh.Token(woosh.NAME, 'not', 1011, 19, 1011, 22),
woosh.Token(woosh.OP, '(', 1011, 23, 1011, 24),
woosh.Token(woosh.NAME, 'inspect', 1011, 24, 1011, 31),
woosh.Token(woosh.OP, '.', 1011, 31, 1011, 32),
woosh.Token(woosh.NAME, 'isroutine', 1011, 32, 1011, 41),
woosh.Token(woosh.OP, '(', 1011, 41, 1011, 42),
woosh.Token(woosh.NAME, 'val', 1011, 42, 1011, 45),
woosh.Token(woosh.OP, ')', 1011, 45, 1011, 46),
woosh.Token(woosh.NAME, 'or', 1011, 47, 1011, 49),
woosh.Token(woosh.NAME, 'inspect', 1011, 50, 1011, 57),
woosh.Token(woosh.OP, '.', 1011, 57, 1011, 58),
woosh.Token(woosh.NAME, 'isclass', 1011, 58, 1011, 65),
woosh.Token(woosh.OP, '(', 1011, 65, 1011, 66),
woosh.Token(woosh.NAME, 'val', 1011, 66, 1011, 69),
woosh.Token(woosh.OP, ')', 1011, 69, 1011, 70),
woosh.Token(woosh.NAME, 'or', 1011, 71, 1011, 73),
woosh.Token(woosh.NAME, 'inspect', 1012, 24, 1012, 31),
woosh.Token(woosh.OP, '.', 1012, 31, 1012, 32),
woosh.Token(woosh.NAME, 'ismodule', 1012, 32, 1012, 40),
woosh.Token(woosh.OP, '(', 1012, 40, 1012, 41),
woosh.Token(woosh.NAME, 'val', 1012, 41, 1012, 44),
woosh.Token(woosh.OP, ')', 1012, 44, 1012, 45),
woosh.Token(woosh.NAME, 'or', 1012, 46, 1012, 48),
woosh.Token(woosh.NAME, 'isinstance', 1012, 49, 1012, 59),
woosh.Token(woosh.OP, '(', 1012, 59, 1012, 60),
woosh.Token(woosh.NAME, 'val', 1012, 60, 1012, 63),
woosh.Token(woosh.OP, ',', 1012, 63, 1012, 64),
woosh.Token(woosh.NAME, 'str', 1012, 65, 1012, 68),
woosh.Token(woosh.OP, ')', 1012, 68, 1012, 69),
woosh.Token(woosh.OP, ')', 1012, 69, 1012, 70),
woosh.Token(woosh.OP, ':', 1012, 70, 1012, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1012, 71, 1013, 0),
woosh.Token(woosh.INDENT, '                    ', 1013, 0, 1013, 20),
woosh.Token(woosh.NAME, 'raise', 1013, 20, 1013, 25),
woosh.Token(woosh.NAME, 'ValueError', 1013, 26, 1013, 36),
woosh.Token(woosh.OP, '(', 1013, 36, 1013, 37),
woosh.Token(woosh.STRING, '"DocTestFinder.find: __test__ values "', 1013, 37, 1013, 75),
woosh.Token(woosh.STRING, '"must be strings, functions, methods, "', 1014, 37, 1014, 76),
woosh.Token(woosh.STRING, '"classes, or modules: %r"', 1015, 37, 1015, 62),
woosh.Token(woosh.OP, '%', 1015, 63, 1015, 64),
woosh.Token(woosh.OP, '(', 1016, 37, 1016, 38),
woosh.Token(woosh.NAME, 'type', 1016, 38, 1016, 42),
woosh.Token(woosh.OP, '(', 1016, 42, 1016, 43),
woosh.Token(woosh.NAME, 'val', 1016, 43, 1016, 46),
woosh.Token(woosh.OP, ')', 1016, 46, 1016, 47),
woosh.Token(woosh.OP, ',', 1016, 47, 1016, 48),
woosh.Token(woosh.OP, ')', 1016, 48, 1016, 49),
woosh.Token(woosh.OP, ')', 1016, 49, 1016, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 50, 1017, 0),
woosh.Token(woosh.DEDENT, '                ', 1017, 0, 1017, 16),
woosh.Token(woosh.NAME, 'valname', 1017, 16, 1017, 23),
woosh.Token(woosh.OP, '=', 1017, 24, 1017, 25),
woosh.Token(woosh.STRING, "'%s.__test__.%s'", 1017, 26, 1017, 42),
woosh.Token(woosh.OP, '%', 1017, 43, 1017, 44),
woosh.Token(woosh.OP, '(', 1017, 45, 1017, 46),
woosh.Token(woosh.NAME, 'name', 1017, 46, 1017, 50),
woosh.Token(woosh.OP, ',', 1017, 50, 1017, 51),
woosh.Token(woosh.NAME, 'valname', 1017, 52, 1017, 59),
woosh.Token(woosh.OP, ')', 1017, 59, 1017, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1017, 60, 1018, 0),
woosh.Token(woosh.NAME, 'self', 1018, 16, 1018, 20),
woosh.Token(woosh.OP, '.', 1018, 20, 1018, 21),
woosh.Token(woosh.NAME, '_find', 1018, 21, 1018, 26),
woosh.Token(woosh.OP, '(', 1018, 26, 1018, 27),
woosh.Token(woosh.NAME, 'tests', 1018, 27, 1018, 32),
woosh.Token(woosh.OP, ',', 1018, 32, 1018, 33),
woosh.Token(woosh.NAME, 'val', 1018, 34, 1018, 37),
woosh.Token(woosh.OP, ',', 1018, 37, 1018, 38),
woosh.Token(woosh.NAME, 'valname', 1018, 39, 1018, 46),
woosh.Token(woosh.OP, ',', 1018, 46, 1018, 47),
woosh.Token(woosh.NAME, 'module', 1018, 48, 1018, 54),
woosh.Token(woosh.OP, ',', 1018, 54, 1018, 55),
woosh.Token(woosh.NAME, 'source_lines', 1018, 56, 1018, 68),
woosh.Token(woosh.OP, ',', 1018, 68, 1018, 69),
woosh.Token(woosh.NAME, 'globs', 1019, 27, 1019, 32),
woosh.Token(woosh.OP, ',', 1019, 32, 1019, 33),
woosh.Token(woosh.NAME, 'seen', 1019, 34, 1019, 38),
woosh.Token(woosh.OP, ')', 1019, 38, 1019, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1019, 39, 1020, 0),
woosh.Token(woosh.COMMENT, "# Look for tests in a class's contained objects.", 1021, 8, 1021, 56),
woosh.Token(woosh.DEDENT, '        ', 1022, 0, 1022, 8),
woosh.Token(woosh.DEDENT, '', 1022, 8, 1022, 8),
woosh.Token(woosh.NAME, 'if', 1022, 8, 1022, 10),
woosh.Token(woosh.NAME, 'inspect', 1022, 11, 1022, 18),
woosh.Token(woosh.OP, '.', 1022, 18, 1022, 19),
woosh.Token(woosh.NAME, 'isclass', 1022, 19, 1022, 26),
woosh.Token(woosh.OP, '(', 1022, 26, 1022, 27),
woosh.Token(woosh.NAME, 'obj', 1022, 27, 1022, 30),
woosh.Token(woosh.OP, ')', 1022, 30, 1022, 31),
woosh.Token(woosh.NAME, 'and', 1022, 32, 1022, 35),
woosh.Token(woosh.NAME, 'self', 1022, 36, 1022, 40),
woosh.Token(woosh.OP, '.', 1022, 40, 1022, 41),
woosh.Token(woosh.NAME, '_recurse', 1022, 41, 1022, 49),
woosh.Token(woosh.OP, ':', 1022, 49, 1022, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1022, 50, 1023, 0),
woosh.Token(woosh.INDENT, '            ', 1023, 0, 1023, 12),
woosh.Token(woosh.NAME, 'for', 1023, 12, 1023, 15),
woosh.Token(woosh.NAME, 'valname', 1023, 16, 1023, 23),
woosh.Token(woosh.OP, ',', 1023, 23, 1023, 24),
woosh.Token(woosh.NAME, 'val', 1023, 25, 1023, 28),
woosh.Token(woosh.NAME, 'in', 1023, 29, 1023, 31),
woosh.Token(woosh.NAME, 'obj', 1023, 32, 1023, 35),
woosh.Token(woosh.OP, '.', 1023, 35, 1023, 36),
woosh.Token(woosh.NAME, '__dict__', 1023, 36, 1023, 44),
woosh.Token(woosh.OP, '.', 1023, 44, 1023, 45),
woosh.Token(woosh.NAME, 'items', 1023, 45, 1023, 50),
woosh.Token(woosh.OP, '(', 1023, 50, 1023, 51),
woosh.Token(woosh.OP, ')', 1023, 51, 1023, 52),
woosh.Token(woosh.OP, ':', 1023, 52, 1023, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1023, 53, 1024, 0),
woosh.Token(woosh.COMMENT, '# Special handling for staticmethod/classmethod.', 1024, 16, 1024, 64),
woosh.Token(woosh.INDENT, '                ', 1025, 0, 1025, 16),
woosh.Token(woosh.NAME, 'if', 1025, 16, 1025, 18),
woosh.Token(woosh.NAME, 'isinstance', 1025, 19, 1025, 29),
woosh.Token(woosh.OP, '(', 1025, 29, 1025, 30),
woosh.Token(woosh.NAME, 'val', 1025, 30, 1025, 33),
woosh.Token(woosh.OP, ',', 1025, 33, 1025, 34),
woosh.Token(woosh.NAME, 'staticmethod', 1025, 35, 1025, 47),
woosh.Token(woosh.OP, ')', 1025, 47, 1025, 48),
woosh.Token(woosh.OP, ':', 1025, 48, 1025, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1025, 49, 1026, 0),
woosh.Token(woosh.INDENT, '                    ', 1026, 0, 1026, 20),
woosh.Token(woosh.NAME, 'val', 1026, 20, 1026, 23),
woosh.Token(woosh.OP, '=', 1026, 24, 1026, 25),
woosh.Token(woosh.NAME, 'getattr', 1026, 26, 1026, 33),
woosh.Token(woosh.OP, '(', 1026, 33, 1026, 34),
woosh.Token(woosh.NAME, 'obj', 1026, 34, 1026, 37),
woosh.Token(woosh.OP, ',', 1026, 37, 1026, 38),
woosh.Token(woosh.NAME, 'valname', 1026, 39, 1026, 46),
woosh.Token(woosh.OP, ')', 1026, 46, 1026, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1026, 47, 1027, 0),
woosh.Token(woosh.DEDENT, '                ', 1027, 0, 1027, 16),
woosh.Token(woosh.NAME, 'if', 1027, 16, 1027, 18),
woosh.Token(woosh.NAME, 'isinstance', 1027, 19, 1027, 29),
woosh.Token(woosh.OP, '(', 1027, 29, 1027, 30),
woosh.Token(woosh.NAME, 'val', 1027, 30, 1027, 33),
woosh.Token(woosh.OP, ',', 1027, 33, 1027, 34),
woosh.Token(woosh.NAME, 'classmethod', 1027, 35, 1027, 46),
woosh.Token(woosh.OP, ')', 1027, 46, 1027, 47),
woosh.Token(woosh.OP, ':', 1027, 47, 1027, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1027, 48, 1028, 0),
woosh.Token(woosh.INDENT, '                    ', 1028, 0, 1028, 20),
woosh.Token(woosh.NAME, 'val', 1028, 20, 1028, 23),
woosh.Token(woosh.OP, '=', 1028, 24, 1028, 25),
woosh.Token(woosh.NAME, 'getattr', 1028, 26, 1028, 33),
woosh.Token(woosh.OP, '(', 1028, 33, 1028, 34),
woosh.Token(woosh.NAME, 'obj', 1028, 34, 1028, 37),
woosh.Token(woosh.OP, ',', 1028, 37, 1028, 38),
woosh.Token(woosh.NAME, 'valname', 1028, 39, 1028, 46),
woosh.Token(woosh.OP, ')', 1028, 46, 1028, 47),
woosh.Token(woosh.OP, '.', 1028, 47, 1028, 48),
woosh.Token(woosh.NAME, '__func__', 1028, 48, 1028, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1028, 56, 1029, 0),
woosh.Token(woosh.COMMENT, '# Recurse to methods, properties, and nested classes.', 1030, 16, 1030, 69),
woosh.Token(woosh.DEDENT, '                ', 1031, 0, 1031, 16),
woosh.Token(woosh.NAME, 'if', 1031, 16, 1031, 18),
woosh.Token(woosh.OP, '(', 1031, 19, 1031, 20),
woosh.Token(woosh.OP, '(', 1031, 20, 1031, 21),
woosh.Token(woosh.NAME, 'inspect', 1031, 21, 1031, 28),
woosh.Token(woosh.OP, '.', 1031, 28, 1031, 29),
woosh.Token(woosh.NAME, 'isroutine', 1031, 29, 1031, 38),
woosh.Token(woosh.OP, '(', 1031, 38, 1031, 39),
woosh.Token(woosh.NAME, 'val', 1031, 39, 1031, 42),
woosh.Token(woosh.OP, ')', 1031, 42, 1031, 43),
woosh.Token(woosh.NAME, 'or', 1031, 44, 1031, 46),
woosh.Token(woosh.NAME, 'inspect', 1031, 47, 1031, 54),
woosh.Token(woosh.OP, '.', 1031, 54, 1031, 55),
woosh.Token(woosh.NAME, 'isclass', 1031, 55, 1031, 62),
woosh.Token(woosh.OP, '(', 1031, 62, 1031, 63),
woosh.Token(woosh.NAME, 'val', 1031, 63, 1031, 66),
woosh.Token(woosh.OP, ')', 1031, 66, 1031, 67),
woosh.Token(woosh.NAME, 'or', 1031, 68, 1031, 70),
woosh.Token(woosh.NAME, 'isinstance', 1032, 22, 1032, 32),
woosh.Token(woosh.OP, '(', 1032, 32, 1032, 33),
woosh.Token(woosh.NAME, 'val', 1032, 33, 1032, 36),
woosh.Token(woosh.OP, ',', 1032, 36, 1032, 37),
woosh.Token(woosh.NAME, 'property', 1032, 38, 1032, 46),
woosh.Token(woosh.OP, ')', 1032, 46, 1032, 47),
woosh.Token(woosh.OP, ')', 1032, 47, 1032, 48),
woosh.Token(woosh.NAME, 'and', 1032, 49, 1032, 52),
woosh.Token(woosh.NAME, 'self', 1033, 22, 1033, 26),
woosh.Token(woosh.OP, '.', 1033, 26, 1033, 27),
woosh.Token(woosh.NAME, '_from_module', 1033, 27, 1033, 39),
woosh.Token(woosh.OP, '(', 1033, 39, 1033, 40),
woosh.Token(woosh.NAME, 'module', 1033, 40, 1033, 46),
woosh.Token(woosh.OP, ',', 1033, 46, 1033, 47),
woosh.Token(woosh.NAME, 'val', 1033, 48, 1033, 51),
woosh.Token(woosh.OP, ')', 1033, 51, 1033, 52),
woosh.Token(woosh.OP, ')', 1033, 52, 1033, 53),
woosh.Token(woosh.OP, ':', 1033, 53, 1033, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1033, 54, 1034, 0),
woosh.Token(woosh.INDENT, '                    ', 1034, 0, 1034, 20),
woosh.Token(woosh.NAME, 'valname', 1034, 20, 1034, 27),
woosh.Token(woosh.OP, '=', 1034, 28, 1034, 29),
woosh.Token(woosh.STRING, "'%s.%s'", 1034, 30, 1034, 37),
woosh.Token(woosh.OP, '%', 1034, 38, 1034, 39),
woosh.Token(woosh.OP, '(', 1034, 40, 1034, 41),
woosh.Token(woosh.NAME, 'name', 1034, 41, 1034, 45),
woosh.Token(woosh.OP, ',', 1034, 45, 1034, 46),
woosh.Token(woosh.NAME, 'valname', 1034, 47, 1034, 54),
woosh.Token(woosh.OP, ')', 1034, 54, 1034, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1034, 55, 1035, 0),
woosh.Token(woosh.NAME, 'self', 1035, 20, 1035, 24),
woosh.Token(woosh.OP, '.', 1035, 24, 1035, 25),
woosh.Token(woosh.NAME, '_find', 1035, 25, 1035, 30),
woosh.Token(woosh.OP, '(', 1035, 30, 1035, 31),
woosh.Token(woosh.NAME, 'tests', 1035, 31, 1035, 36),
woosh.Token(woosh.OP, ',', 1035, 36, 1035, 37),
woosh.Token(woosh.NAME, 'val', 1035, 38, 1035, 41),
woosh.Token(woosh.OP, ',', 1035, 41, 1035, 42),
woosh.Token(woosh.NAME, 'valname', 1035, 43, 1035, 50),
woosh.Token(woosh.OP, ',', 1035, 50, 1035, 51),
woosh.Token(woosh.NAME, 'module', 1035, 52, 1035, 58),
woosh.Token(woosh.OP, ',', 1035, 58, 1035, 59),
woosh.Token(woosh.NAME, 'source_lines', 1035, 60, 1035, 72),
woosh.Token(woosh.OP, ',', 1035, 72, 1035, 73),
woosh.Token(woosh.NAME, 'globs', 1036, 31, 1036, 36),
woosh.Token(woosh.OP, ',', 1036, 36, 1036, 37),
woosh.Token(woosh.NAME, 'seen', 1036, 38, 1036, 42),
woosh.Token(woosh.OP, ')', 1036, 42, 1036, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1036, 43, 1037, 0),
woosh.Token(woosh.DEDENT, '    ', 1038, 0, 1038, 4),
woosh.Token(woosh.DEDENT, '', 1038, 4, 1038, 4),
woosh.Token(woosh.DEDENT, '', 1038, 4, 1038, 4),
woosh.Token(woosh.DEDENT, '', 1038, 4, 1038, 4),
woosh.Token(woosh.NAME, 'def', 1038, 4, 1038, 7),
woosh.Token(woosh.NAME, '_get_test', 1038, 8, 1038, 17),
woosh.Token(woosh.OP, '(', 1038, 17, 1038, 18),
woosh.Token(woosh.NAME, 'self', 1038, 18, 1038, 22),
woosh.Token(woosh.OP, ',', 1038, 22, 1038, 23),
woosh.Token(woosh.NAME, 'obj', 1038, 24, 1038, 27),
woosh.Token(woosh.OP, ',', 1038, 27, 1038, 28),
woosh.Token(woosh.NAME, 'name', 1038, 29, 1038, 33),
woosh.Token(woosh.OP, ',', 1038, 33, 1038, 34),
woosh.Token(woosh.NAME, 'module', 1038, 35, 1038, 41),
woosh.Token(woosh.OP, ',', 1038, 41, 1038, 42),
woosh.Token(woosh.NAME, 'globs', 1038, 43, 1038, 48),
woosh.Token(woosh.OP, ',', 1038, 48, 1038, 49),
woosh.Token(woosh.NAME, 'source_lines', 1038, 50, 1038, 62),
woosh.Token(woosh.OP, ')', 1038, 62, 1038, 63),
woosh.Token(woosh.OP, ':', 1038, 63, 1038, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1038, 64, 1039, 0),
woosh.Token(woosh.INDENT, '        ', 1039, 0, 1039, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return a DocTest for the given object, if it defines a docstring;\r\n        otherwise, return None.\r\n        """', 1039, 8, 1042, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1042, 11, 1043, 0),
woosh.Token(woosh.COMMENT, "# Extract the object's docstring.  If it doesn't have one,", 1043, 8, 1043, 66),
woosh.Token(woosh.COMMENT, '# then return None (no test for this object).', 1044, 8, 1044, 53),
woosh.Token(woosh.NAME, 'if', 1045, 8, 1045, 10),
woosh.Token(woosh.NAME, 'isinstance', 1045, 11, 1045, 21),
woosh.Token(woosh.OP, '(', 1045, 21, 1045, 22),
woosh.Token(woosh.NAME, 'obj', 1045, 22, 1045, 25),
woosh.Token(woosh.OP, ',', 1045, 25, 1045, 26),
woosh.Token(woosh.NAME, 'str', 1045, 27, 1045, 30),
woosh.Token(woosh.OP, ')', 1045, 30, 1045, 31),
woosh.Token(woosh.OP, ':', 1045, 31, 1045, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1045, 32, 1046, 0),
woosh.Token(woosh.INDENT, '            ', 1046, 0, 1046, 12),
woosh.Token(woosh.NAME, 'docstring', 1046, 12, 1046, 21),
woosh.Token(woosh.OP, '=', 1046, 22, 1046, 23),
woosh.Token(woosh.NAME, 'obj', 1046, 24, 1046, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1046, 27, 1047, 0),
woosh.Token(woosh.DEDENT, '        ', 1047, 0, 1047, 8),
woosh.Token(woosh.NAME, 'else', 1047, 8, 1047, 12),
woosh.Token(woosh.OP, ':', 1047, 12, 1047, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 13, 1048, 0),
woosh.Token(woosh.INDENT, '            ', 1048, 0, 1048, 12),
woosh.Token(woosh.NAME, 'try', 1048, 12, 1048, 15),
woosh.Token(woosh.OP, ':', 1048, 15, 1048, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1048, 16, 1049, 0),
woosh.Token(woosh.INDENT, '                ', 1049, 0, 1049, 16),
woosh.Token(woosh.NAME, 'if', 1049, 16, 1049, 18),
woosh.Token(woosh.NAME, 'obj', 1049, 19, 1049, 22),
woosh.Token(woosh.OP, '.', 1049, 22, 1049, 23),
woosh.Token(woosh.NAME, '__doc__', 1049, 23, 1049, 30),
woosh.Token(woosh.NAME, 'is', 1049, 31, 1049, 33),
woosh.Token(woosh.NAME, 'None', 1049, 34, 1049, 38),
woosh.Token(woosh.OP, ':', 1049, 38, 1049, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1049, 39, 1050, 0),
woosh.Token(woosh.INDENT, '                    ', 1050, 0, 1050, 20),
woosh.Token(woosh.NAME, 'docstring', 1050, 20, 1050, 29),
woosh.Token(woosh.OP, '=', 1050, 30, 1050, 31),
woosh.Token(woosh.STRING, "''", 1050, 32, 1050, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1050, 34, 1051, 0),
woosh.Token(woosh.DEDENT, '                ', 1051, 0, 1051, 16),
woosh.Token(woosh.NAME, 'else', 1051, 16, 1051, 20),
woosh.Token(woosh.OP, ':', 1051, 20, 1051, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1051, 21, 1052, 0),
woosh.Token(woosh.INDENT, '                    ', 1052, 0, 1052, 20),
woosh.Token(woosh.NAME, 'docstring', 1052, 20, 1052, 29),
woosh.Token(woosh.OP, '=', 1052, 30, 1052, 31),
woosh.Token(woosh.NAME, 'obj', 1052, 32, 1052, 35),
woosh.Token(woosh.OP, '.', 1052, 35, 1052, 36),
woosh.Token(woosh.NAME, '__doc__', 1052, 36, 1052, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1052, 43, 1053, 0),
woosh.Token(woosh.NAME, 'if', 1053, 20, 1053, 22),
woosh.Token(woosh.NAME, 'not', 1053, 23, 1053, 26),
woosh.Token(woosh.NAME, 'isinstance', 1053, 27, 1053, 37),
woosh.Token(woosh.OP, '(', 1053, 37, 1053, 38),
woosh.Token(woosh.NAME, 'docstring', 1053, 38, 1053, 47),
woosh.Token(woosh.OP, ',', 1053, 47, 1053, 48),
woosh.Token(woosh.NAME, 'str', 1053, 49, 1053, 52),
woosh.Token(woosh.OP, ')', 1053, 52, 1053, 53),
woosh.Token(woosh.OP, ':', 1053, 53, 1053, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1053, 54, 1054, 0),
woosh.Token(woosh.INDENT, '                        ', 1054, 0, 1054, 24),
woosh.Token(woosh.NAME, 'docstring', 1054, 24, 1054, 33),
woosh.Token(woosh.OP, '=', 1054, 34, 1054, 35),
woosh.Token(woosh.NAME, 'str', 1054, 36, 1054, 39),
woosh.Token(woosh.OP, '(', 1054, 39, 1054, 40),
woosh.Token(woosh.NAME, 'docstring', 1054, 40, 1054, 49),
woosh.Token(woosh.OP, ')', 1054, 49, 1054, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1054, 50, 1055, 0),
woosh.Token(woosh.DEDENT, '            ', 1055, 0, 1055, 12),
woosh.Token(woosh.DEDENT, '', 1055, 12, 1055, 12),
woosh.Token(woosh.DEDENT, '', 1055, 12, 1055, 12),
woosh.Token(woosh.NAME, 'except', 1055, 12, 1055, 18),
woosh.Token(woosh.OP, '(', 1055, 19, 1055, 20),
woosh.Token(woosh.NAME, 'TypeError', 1055, 20, 1055, 29),
woosh.Token(woosh.OP, ',', 1055, 29, 1055, 30),
woosh.Token(woosh.NAME, 'AttributeError', 1055, 31, 1055, 45),
woosh.Token(woosh.OP, ')', 1055, 45, 1055, 46),
woosh.Token(woosh.OP, ':', 1055, 46, 1055, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1055, 47, 1056, 0),
woosh.Token(woosh.INDENT, '                ', 1056, 0, 1056, 16),
woosh.Token(woosh.NAME, 'docstring', 1056, 16, 1056, 25),
woosh.Token(woosh.OP, '=', 1056, 26, 1056, 27),
woosh.Token(woosh.STRING, "''", 1056, 28, 1056, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1056, 30, 1057, 0),
woosh.Token(woosh.COMMENT, "# Find the docstring's location in the file.", 1058, 8, 1058, 52),
woosh.Token(woosh.DEDENT, '        ', 1059, 0, 1059, 8),
woosh.Token(woosh.DEDENT, '', 1059, 8, 1059, 8),
woosh.Token(woosh.NAME, 'lineno', 1059, 8, 1059, 14),
woosh.Token(woosh.OP, '=', 1059, 15, 1059, 16),
woosh.Token(woosh.NAME, 'self', 1059, 17, 1059, 21),
woosh.Token(woosh.OP, '.', 1059, 21, 1059, 22),
woosh.Token(woosh.NAME, '_find_lineno', 1059, 22, 1059, 34),
woosh.Token(woosh.OP, '(', 1059, 34, 1059, 35),
woosh.Token(woosh.NAME, 'obj', 1059, 35, 1059, 38),
woosh.Token(woosh.OP, ',', 1059, 38, 1059, 39),
woosh.Token(woosh.NAME, 'source_lines', 1059, 40, 1059, 52),
woosh.Token(woosh.OP, ')', 1059, 52, 1059, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1059, 53, 1060, 0),
woosh.Token(woosh.COMMENT, "# Don't bother if the docstring is empty.", 1061, 8, 1061, 49),
woosh.Token(woosh.NAME, 'if', 1062, 8, 1062, 10),
woosh.Token(woosh.NAME, 'self', 1062, 11, 1062, 15),
woosh.Token(woosh.OP, '.', 1062, 15, 1062, 16),
woosh.Token(woosh.NAME, '_exclude_empty', 1062, 16, 1062, 30),
woosh.Token(woosh.NAME, 'and', 1062, 31, 1062, 34),
woosh.Token(woosh.NAME, 'not', 1062, 35, 1062, 38),
woosh.Token(woosh.NAME, 'docstring', 1062, 39, 1062, 48),
woosh.Token(woosh.OP, ':', 1062, 48, 1062, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1062, 49, 1063, 0),
woosh.Token(woosh.INDENT, '            ', 1063, 0, 1063, 12),
woosh.Token(woosh.NAME, 'return', 1063, 12, 1063, 18),
woosh.Token(woosh.NAME, 'None', 1063, 19, 1063, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1063, 23, 1064, 0),
woosh.Token(woosh.COMMENT, '# Return a DocTest for this object.', 1065, 8, 1065, 43),
woosh.Token(woosh.DEDENT, '        ', 1066, 0, 1066, 8),
woosh.Token(woosh.NAME, 'if', 1066, 8, 1066, 10),
woosh.Token(woosh.NAME, 'module', 1066, 11, 1066, 17),
woosh.Token(woosh.NAME, 'is', 1066, 18, 1066, 20),
woosh.Token(woosh.NAME, 'None', 1066, 21, 1066, 25),
woosh.Token(woosh.OP, ':', 1066, 25, 1066, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1066, 26, 1067, 0),
woosh.Token(woosh.INDENT, '            ', 1067, 0, 1067, 12),
woosh.Token(woosh.NAME, 'filename', 1067, 12, 1067, 20),
woosh.Token(woosh.OP, '=', 1067, 21, 1067, 22),
woosh.Token(woosh.NAME, 'None', 1067, 23, 1067, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1067, 27, 1068, 0),
woosh.Token(woosh.DEDENT, '        ', 1068, 0, 1068, 8),
woosh.Token(woosh.NAME, 'else', 1068, 8, 1068, 12),
woosh.Token(woosh.OP, ':', 1068, 12, 1068, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1068, 13, 1069, 0),
woosh.Token(woosh.COMMENT, '# __file__ can be None for namespace packages.', 1069, 12, 1069, 58),
woosh.Token(woosh.INDENT, '            ', 1070, 0, 1070, 12),
woosh.Token(woosh.NAME, 'filename', 1070, 12, 1070, 20),
woosh.Token(woosh.OP, '=', 1070, 21, 1070, 22),
woosh.Token(woosh.NAME, 'getattr', 1070, 23, 1070, 30),
woosh.Token(woosh.OP, '(', 1070, 30, 1070, 31),
woosh.Token(woosh.NAME, 'module', 1070, 31, 1070, 37),
woosh.Token(woosh.OP, ',', 1070, 37, 1070, 38),
woosh.Token(woosh.STRING, "'__file__'", 1070, 39, 1070, 49),
woosh.Token(woosh.OP, ',', 1070, 49, 1070, 50),
woosh.Token(woosh.NAME, 'None', 1070, 51, 1070, 55),
woosh.Token(woosh.OP, ')', 1070, 55, 1070, 56),
woosh.Token(woosh.NAME, 'or', 1070, 57, 1070, 59),
woosh.Token(woosh.NAME, 'module', 1070, 60, 1070, 66),
woosh.Token(woosh.OP, '.', 1070, 66, 1070, 67),
woosh.Token(woosh.NAME, '__name__', 1070, 67, 1070, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1070, 75, 1071, 0),
woosh.Token(woosh.NAME, 'if', 1071, 12, 1071, 14),
woosh.Token(woosh.NAME, 'filename', 1071, 15, 1071, 23),
woosh.Token(woosh.OP, '[', 1071, 23, 1071, 24),
woosh.Token(woosh.OP, '-', 1071, 24, 1071, 25),
woosh.Token(woosh.NUMBER, '4', 1071, 25, 1071, 26),
woosh.Token(woosh.OP, ':', 1071, 26, 1071, 27),
woosh.Token(woosh.OP, ']', 1071, 27, 1071, 28),
woosh.Token(woosh.OP, '==', 1071, 29, 1071, 31),
woosh.Token(woosh.STRING, '".pyc"', 1071, 32, 1071, 38),
woosh.Token(woosh.OP, ':', 1071, 38, 1071, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1071, 39, 1072, 0),
woosh.Token(woosh.INDENT, '                ', 1072, 0, 1072, 16),
woosh.Token(woosh.NAME, 'filename', 1072, 16, 1072, 24),
woosh.Token(woosh.OP, '=', 1072, 25, 1072, 26),
woosh.Token(woosh.NAME, 'filename', 1072, 27, 1072, 35),
woosh.Token(woosh.OP, '[', 1072, 35, 1072, 36),
woosh.Token(woosh.OP, ':', 1072, 36, 1072, 37),
woosh.Token(woosh.OP, '-', 1072, 37, 1072, 38),
woosh.Token(woosh.NUMBER, '1', 1072, 38, 1072, 39),
woosh.Token(woosh.OP, ']', 1072, 39, 1072, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1072, 40, 1073, 0),
woosh.Token(woosh.DEDENT, '        ', 1073, 0, 1073, 8),
woosh.Token(woosh.DEDENT, '', 1073, 8, 1073, 8),
woosh.Token(woosh.NAME, 'return', 1073, 8, 1073, 14),
woosh.Token(woosh.NAME, 'self', 1073, 15, 1073, 19),
woosh.Token(woosh.OP, '.', 1073, 19, 1073, 20),
woosh.Token(woosh.NAME, '_parser', 1073, 20, 1073, 27),
woosh.Token(woosh.OP, '.', 1073, 27, 1073, 28),
woosh.Token(woosh.NAME, 'get_doctest', 1073, 28, 1073, 39),
woosh.Token(woosh.OP, '(', 1073, 39, 1073, 40),
woosh.Token(woosh.NAME, 'docstring', 1073, 40, 1073, 49),
woosh.Token(woosh.OP, ',', 1073, 49, 1073, 50),
woosh.Token(woosh.NAME, 'globs', 1073, 51, 1073, 56),
woosh.Token(woosh.OP, ',', 1073, 56, 1073, 57),
woosh.Token(woosh.NAME, 'name', 1073, 58, 1073, 62),
woosh.Token(woosh.OP, ',', 1073, 62, 1073, 63),
woosh.Token(woosh.NAME, 'filename', 1074, 40, 1074, 48),
woosh.Token(woosh.OP, ',', 1074, 48, 1074, 49),
woosh.Token(woosh.NAME, 'lineno', 1074, 50, 1074, 56),
woosh.Token(woosh.OP, ')', 1074, 56, 1074, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 57, 1075, 0),
woosh.Token(woosh.DEDENT, '    ', 1076, 0, 1076, 4),
woosh.Token(woosh.NAME, 'def', 1076, 4, 1076, 7),
woosh.Token(woosh.NAME, '_find_lineno', 1076, 8, 1076, 20),
woosh.Token(woosh.OP, '(', 1076, 20, 1076, 21),
woosh.Token(woosh.NAME, 'self', 1076, 21, 1076, 25),
woosh.Token(woosh.OP, ',', 1076, 25, 1076, 26),
woosh.Token(woosh.NAME, 'obj', 1076, 27, 1076, 30),
woosh.Token(woosh.OP, ',', 1076, 30, 1076, 31),
woosh.Token(woosh.NAME, 'source_lines', 1076, 32, 1076, 44),
woosh.Token(woosh.OP, ')', 1076, 44, 1076, 45),
woosh.Token(woosh.OP, ':', 1076, 45, 1076, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1076, 46, 1077, 0),
woosh.Token(woosh.INDENT, '        ', 1077, 0, 1077, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return a line number of the given object\'s docstring.  Note:\r\n        this method assumes that the object has a docstring.\r\n        """', 1077, 8, 1080, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1080, 11, 1081, 0),
woosh.Token(woosh.NAME, 'lineno', 1081, 8, 1081, 14),
woosh.Token(woosh.OP, '=', 1081, 15, 1081, 16),
woosh.Token(woosh.NAME, 'None', 1081, 17, 1081, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1081, 21, 1082, 0),
woosh.Token(woosh.COMMENT, '# Find the line number for modules.', 1083, 8, 1083, 43),
woosh.Token(woosh.NAME, 'if', 1084, 8, 1084, 10),
woosh.Token(woosh.NAME, 'inspect', 1084, 11, 1084, 18),
woosh.Token(woosh.OP, '.', 1084, 18, 1084, 19),
woosh.Token(woosh.NAME, 'ismodule', 1084, 19, 1084, 27),
woosh.Token(woosh.OP, '(', 1084, 27, 1084, 28),
woosh.Token(woosh.NAME, 'obj', 1084, 28, 1084, 31),
woosh.Token(woosh.OP, ')', 1084, 31, 1084, 32),
woosh.Token(woosh.OP, ':', 1084, 32, 1084, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1084, 33, 1085, 0),
woosh.Token(woosh.INDENT, '            ', 1085, 0, 1085, 12),
woosh.Token(woosh.NAME, 'lineno', 1085, 12, 1085, 18),
woosh.Token(woosh.OP, '=', 1085, 19, 1085, 20),
woosh.Token(woosh.NUMBER, '0', 1085, 21, 1085, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1085, 22, 1086, 0),
woosh.Token(woosh.COMMENT, '# Find the line number for classes.', 1087, 8, 1087, 43),
woosh.Token(woosh.COMMENT, '# Note: this could be fooled if a class is defined multiple', 1088, 8, 1088, 67),
woosh.Token(woosh.COMMENT, '# times in a single file.', 1089, 8, 1089, 33),
woosh.Token(woosh.DEDENT, '        ', 1090, 0, 1090, 8),
woosh.Token(woosh.NAME, 'if', 1090, 8, 1090, 10),
woosh.Token(woosh.NAME, 'inspect', 1090, 11, 1090, 18),
woosh.Token(woosh.OP, '.', 1090, 18, 1090, 19),
woosh.Token(woosh.NAME, 'isclass', 1090, 19, 1090, 26),
woosh.Token(woosh.OP, '(', 1090, 26, 1090, 27),
woosh.Token(woosh.NAME, 'obj', 1090, 27, 1090, 30),
woosh.Token(woosh.OP, ')', 1090, 30, 1090, 31),
woosh.Token(woosh.OP, ':', 1090, 31, 1090, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1090, 32, 1091, 0),
woosh.Token(woosh.INDENT, '            ', 1091, 0, 1091, 12),
woosh.Token(woosh.NAME, 'if', 1091, 12, 1091, 14),
woosh.Token(woosh.NAME, 'source_lines', 1091, 15, 1091, 27),
woosh.Token(woosh.NAME, 'is', 1091, 28, 1091, 30),
woosh.Token(woosh.NAME, 'None', 1091, 31, 1091, 35),
woosh.Token(woosh.OP, ':', 1091, 35, 1091, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1091, 36, 1092, 0),
woosh.Token(woosh.INDENT, '                ', 1092, 0, 1092, 16),
woosh.Token(woosh.NAME, 'return', 1092, 16, 1092, 22),
woosh.Token(woosh.NAME, 'None', 1092, 23, 1092, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1092, 27, 1093, 0),
woosh.Token(woosh.DEDENT, '            ', 1093, 0, 1093, 12),
woosh.Token(woosh.NAME, 'pat', 1093, 12, 1093, 15),
woosh.Token(woosh.OP, '=', 1093, 16, 1093, 17),
woosh.Token(woosh.NAME, 're', 1093, 18, 1093, 20),
woosh.Token(woosh.OP, '.', 1093, 20, 1093, 21),
woosh.Token(woosh.NAME, 'compile', 1093, 21, 1093, 28),
woosh.Token(woosh.OP, '(', 1093, 28, 1093, 29),
woosh.Token(woosh.STRING, "r'^\\s*class\\s*%s\\b'", 1093, 29, 1093, 48),
woosh.Token(woosh.OP, '%', 1093, 49, 1093, 50),
woosh.Token(woosh.NAME, 'getattr', 1094, 29, 1094, 36),
woosh.Token(woosh.OP, '(', 1094, 36, 1094, 37),
woosh.Token(woosh.NAME, 'obj', 1094, 37, 1094, 40),
woosh.Token(woosh.OP, ',', 1094, 40, 1094, 41),
woosh.Token(woosh.STRING, "'__name__'", 1094, 42, 1094, 52),
woosh.Token(woosh.OP, ',', 1094, 52, 1094, 53),
woosh.Token(woosh.STRING, "'-'", 1094, 54, 1094, 57),
woosh.Token(woosh.OP, ')', 1094, 57, 1094, 58),
woosh.Token(woosh.OP, ')', 1094, 58, 1094, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1094, 59, 1095, 0),
woosh.Token(woosh.NAME, 'for', 1095, 12, 1095, 15),
woosh.Token(woosh.NAME, 'i', 1095, 16, 1095, 17),
woosh.Token(woosh.OP, ',', 1095, 17, 1095, 18),
woosh.Token(woosh.NAME, 'line', 1095, 19, 1095, 23),
woosh.Token(woosh.NAME, 'in', 1095, 24, 1095, 26),
woosh.Token(woosh.NAME, 'enumerate', 1095, 27, 1095, 36),
woosh.Token(woosh.OP, '(', 1095, 36, 1095, 37),
woosh.Token(woosh.NAME, 'source_lines', 1095, 37, 1095, 49),
woosh.Token(woosh.OP, ')', 1095, 49, 1095, 50),
woosh.Token(woosh.OP, ':', 1095, 50, 1095, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1095, 51, 1096, 0),
woosh.Token(woosh.INDENT, '                ', 1096, 0, 1096, 16),
woosh.Token(woosh.NAME, 'if', 1096, 16, 1096, 18),
woosh.Token(woosh.NAME, 'pat', 1096, 19, 1096, 22),
woosh.Token(woosh.OP, '.', 1096, 22, 1096, 23),
woosh.Token(woosh.NAME, 'match', 1096, 23, 1096, 28),
woosh.Token(woosh.OP, '(', 1096, 28, 1096, 29),
woosh.Token(woosh.NAME, 'line', 1096, 29, 1096, 33),
woosh.Token(woosh.OP, ')', 1096, 33, 1096, 34),
woosh.Token(woosh.OP, ':', 1096, 34, 1096, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1096, 35, 1097, 0),
woosh.Token(woosh.INDENT, '                    ', 1097, 0, 1097, 20),
woosh.Token(woosh.NAME, 'lineno', 1097, 20, 1097, 26),
woosh.Token(woosh.OP, '=', 1097, 27, 1097, 28),
woosh.Token(woosh.NAME, 'i', 1097, 29, 1097, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1097, 30, 1098, 0),
woosh.Token(woosh.NAME, 'break', 1098, 20, 1098, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1098, 25, 1099, 0),
woosh.Token(woosh.COMMENT, '# Find the line number for functions & methods.', 1100, 8, 1100, 55),
woosh.Token(woosh.DEDENT, '        ', 1101, 0, 1101, 8),
woosh.Token(woosh.DEDENT, '', 1101, 8, 1101, 8),
woosh.Token(woosh.DEDENT, '', 1101, 8, 1101, 8),
woosh.Token(woosh.NAME, 'if', 1101, 8, 1101, 10),
woosh.Token(woosh.NAME, 'inspect', 1101, 11, 1101, 18),
woosh.Token(woosh.OP, '.', 1101, 18, 1101, 19),
woosh.Token(woosh.NAME, 'ismethod', 1101, 19, 1101, 27),
woosh.Token(woosh.OP, '(', 1101, 27, 1101, 28),
woosh.Token(woosh.NAME, 'obj', 1101, 28, 1101, 31),
woosh.Token(woosh.OP, ')', 1101, 31, 1101, 32),
woosh.Token(woosh.OP, ':', 1101, 32, 1101, 33),
woosh.Token(woosh.NAME, 'obj', 1101, 34, 1101, 37),
woosh.Token(woosh.OP, '=', 1101, 38, 1101, 39),
woosh.Token(woosh.NAME, 'obj', 1101, 40, 1101, 43),
woosh.Token(woosh.OP, '.', 1101, 43, 1101, 44),
woosh.Token(woosh.NAME, '__func__', 1101, 44, 1101, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1101, 52, 1102, 0),
woosh.Token(woosh.NAME, 'if', 1102, 8, 1102, 10),
woosh.Token(woosh.NAME, 'inspect', 1102, 11, 1102, 18),
woosh.Token(woosh.OP, '.', 1102, 18, 1102, 19),
woosh.Token(woosh.NAME, 'isfunction', 1102, 19, 1102, 29),
woosh.Token(woosh.OP, '(', 1102, 29, 1102, 30),
woosh.Token(woosh.NAME, 'obj', 1102, 30, 1102, 33),
woosh.Token(woosh.OP, ')', 1102, 33, 1102, 34),
woosh.Token(woosh.OP, ':', 1102, 34, 1102, 35),
woosh.Token(woosh.NAME, 'obj', 1102, 36, 1102, 39),
woosh.Token(woosh.OP, '=', 1102, 40, 1102, 41),
woosh.Token(woosh.NAME, 'obj', 1102, 42, 1102, 45),
woosh.Token(woosh.OP, '.', 1102, 45, 1102, 46),
woosh.Token(woosh.NAME, '__code__', 1102, 46, 1102, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1102, 54, 1103, 0),
woosh.Token(woosh.NAME, 'if', 1103, 8, 1103, 10),
woosh.Token(woosh.NAME, 'inspect', 1103, 11, 1103, 18),
woosh.Token(woosh.OP, '.', 1103, 18, 1103, 19),
woosh.Token(woosh.NAME, 'istraceback', 1103, 19, 1103, 30),
woosh.Token(woosh.OP, '(', 1103, 30, 1103, 31),
woosh.Token(woosh.NAME, 'obj', 1103, 31, 1103, 34),
woosh.Token(woosh.OP, ')', 1103, 34, 1103, 35),
woosh.Token(woosh.OP, ':', 1103, 35, 1103, 36),
woosh.Token(woosh.NAME, 'obj', 1103, 37, 1103, 40),
woosh.Token(woosh.OP, '=', 1103, 41, 1103, 42),
woosh.Token(woosh.NAME, 'obj', 1103, 43, 1103, 46),
woosh.Token(woosh.OP, '.', 1103, 46, 1103, 47),
woosh.Token(woosh.NAME, 'tb_frame', 1103, 47, 1103, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1103, 55, 1104, 0),
woosh.Token(woosh.NAME, 'if', 1104, 8, 1104, 10),
woosh.Token(woosh.NAME, 'inspect', 1104, 11, 1104, 18),
woosh.Token(woosh.OP, '.', 1104, 18, 1104, 19),
woosh.Token(woosh.NAME, 'isframe', 1104, 19, 1104, 26),
woosh.Token(woosh.OP, '(', 1104, 26, 1104, 27),
woosh.Token(woosh.NAME, 'obj', 1104, 27, 1104, 30),
woosh.Token(woosh.OP, ')', 1104, 30, 1104, 31),
woosh.Token(woosh.OP, ':', 1104, 31, 1104, 32),
woosh.Token(woosh.NAME, 'obj', 1104, 33, 1104, 36),
woosh.Token(woosh.OP, '=', 1104, 37, 1104, 38),
woosh.Token(woosh.NAME, 'obj', 1104, 39, 1104, 42),
woosh.Token(woosh.OP, '.', 1104, 42, 1104, 43),
woosh.Token(woosh.NAME, 'f_code', 1104, 43, 1104, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1104, 49, 1105, 0),
woosh.Token(woosh.NAME, 'if', 1105, 8, 1105, 10),
woosh.Token(woosh.NAME, 'inspect', 1105, 11, 1105, 18),
woosh.Token(woosh.OP, '.', 1105, 18, 1105, 19),
woosh.Token(woosh.NAME, 'iscode', 1105, 19, 1105, 25),
woosh.Token(woosh.OP, '(', 1105, 25, 1105, 26),
woosh.Token(woosh.NAME, 'obj', 1105, 26, 1105, 29),
woosh.Token(woosh.OP, ')', 1105, 29, 1105, 30),
woosh.Token(woosh.OP, ':', 1105, 30, 1105, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1105, 31, 1106, 0),
woosh.Token(woosh.INDENT, '            ', 1106, 0, 1106, 12),
woosh.Token(woosh.NAME, 'lineno', 1106, 12, 1106, 18),
woosh.Token(woosh.OP, '=', 1106, 19, 1106, 20),
woosh.Token(woosh.NAME, 'getattr', 1106, 21, 1106, 28),
woosh.Token(woosh.OP, '(', 1106, 28, 1106, 29),
woosh.Token(woosh.NAME, 'obj', 1106, 29, 1106, 32),
woosh.Token(woosh.OP, ',', 1106, 32, 1106, 33),
woosh.Token(woosh.STRING, "'co_firstlineno'", 1106, 34, 1106, 50),
woosh.Token(woosh.OP, ',', 1106, 50, 1106, 51),
woosh.Token(woosh.NAME, 'None', 1106, 52, 1106, 56),
woosh.Token(woosh.OP, ')', 1106, 56, 1106, 57),
woosh.Token(woosh.OP, '-', 1106, 57, 1106, 58),
woosh.Token(woosh.NUMBER, '1', 1106, 58, 1106, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1106, 59, 1107, 0),
woosh.Token(woosh.COMMENT, '# Find the line number where the docstring starts.  Assume', 1108, 8, 1108, 66),
woosh.Token(woosh.COMMENT, "# that it's the first line that begins with a quote mark.", 1109, 8, 1109, 65),
woosh.Token(woosh.COMMENT, '# Note: this could be fooled by a multiline function', 1110, 8, 1110, 60),
woosh.Token(woosh.COMMENT, '# signature, where a continuation line begins with a quote', 1111, 8, 1111, 66),
woosh.Token(woosh.COMMENT, '# mark.', 1112, 8, 1112, 15),
woosh.Token(woosh.DEDENT, '        ', 1113, 0, 1113, 8),
woosh.Token(woosh.NAME, 'if', 1113, 8, 1113, 10),
woosh.Token(woosh.NAME, 'lineno', 1113, 11, 1113, 17),
woosh.Token(woosh.NAME, 'is', 1113, 18, 1113, 20),
woosh.Token(woosh.NAME, 'not', 1113, 21, 1113, 24),
woosh.Token(woosh.NAME, 'None', 1113, 25, 1113, 29),
woosh.Token(woosh.OP, ':', 1113, 29, 1113, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1113, 30, 1114, 0),
woosh.Token(woosh.INDENT, '            ', 1114, 0, 1114, 12),
woosh.Token(woosh.NAME, 'if', 1114, 12, 1114, 14),
woosh.Token(woosh.NAME, 'source_lines', 1114, 15, 1114, 27),
woosh.Token(woosh.NAME, 'is', 1114, 28, 1114, 30),
woosh.Token(woosh.NAME, 'None', 1114, 31, 1114, 35),
woosh.Token(woosh.OP, ':', 1114, 35, 1114, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1114, 36, 1115, 0),
woosh.Token(woosh.INDENT, '                ', 1115, 0, 1115, 16),
woosh.Token(woosh.NAME, 'return', 1115, 16, 1115, 22),
woosh.Token(woosh.NAME, 'lineno', 1115, 23, 1115, 29),
woosh.Token(woosh.OP, '+', 1115, 29, 1115, 30),
woosh.Token(woosh.NUMBER, '1', 1115, 30, 1115, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1115, 31, 1116, 0),
woosh.Token(woosh.DEDENT, '            ', 1116, 0, 1116, 12),
woosh.Token(woosh.NAME, 'pat', 1116, 12, 1116, 15),
woosh.Token(woosh.OP, '=', 1116, 16, 1116, 17),
woosh.Token(woosh.NAME, 're', 1116, 18, 1116, 20),
woosh.Token(woosh.OP, '.', 1116, 20, 1116, 21),
woosh.Token(woosh.NAME, 'compile', 1116, 21, 1116, 28),
woosh.Token(woosh.OP, '(', 1116, 28, 1116, 29),
woosh.Token(woosh.STRING, 'r\'(^|.*:)\\s*\\w*("|\\\')\'', 1116, 29, 1116, 51),
woosh.Token(woosh.OP, ')', 1116, 51, 1116, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1116, 52, 1117, 0),
woosh.Token(woosh.NAME, 'for', 1117, 12, 1117, 15),
woosh.Token(woosh.NAME, 'lineno', 1117, 16, 1117, 22),
woosh.Token(woosh.NAME, 'in', 1117, 23, 1117, 25),
woosh.Token(woosh.NAME, 'range', 1117, 26, 1117, 31),
woosh.Token(woosh.OP, '(', 1117, 31, 1117, 32),
woosh.Token(woosh.NAME, 'lineno', 1117, 32, 1117, 38),
woosh.Token(woosh.OP, ',', 1117, 38, 1117, 39),
woosh.Token(woosh.NAME, 'len', 1117, 40, 1117, 43),
woosh.Token(woosh.OP, '(', 1117, 43, 1117, 44),
woosh.Token(woosh.NAME, 'source_lines', 1117, 44, 1117, 56),
woosh.Token(woosh.OP, ')', 1117, 56, 1117, 57),
woosh.Token(woosh.OP, ')', 1117, 57, 1117, 58),
woosh.Token(woosh.OP, ':', 1117, 58, 1117, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1117, 59, 1118, 0),
woosh.Token(woosh.INDENT, '                ', 1118, 0, 1118, 16),
woosh.Token(woosh.NAME, 'if', 1118, 16, 1118, 18),
woosh.Token(woosh.NAME, 'pat', 1118, 19, 1118, 22),
woosh.Token(woosh.OP, '.', 1118, 22, 1118, 23),
woosh.Token(woosh.NAME, 'match', 1118, 23, 1118, 28),
woosh.Token(woosh.OP, '(', 1118, 28, 1118, 29),
woosh.Token(woosh.NAME, 'source_lines', 1118, 29, 1118, 41),
woosh.Token(woosh.OP, '[', 1118, 41, 1118, 42),
woosh.Token(woosh.NAME, 'lineno', 1118, 42, 1118, 48),
woosh.Token(woosh.OP, ']', 1118, 48, 1118, 49),
woosh.Token(woosh.OP, ')', 1118, 49, 1118, 50),
woosh.Token(woosh.OP, ':', 1118, 50, 1118, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1118, 51, 1119, 0),
woosh.Token(woosh.INDENT, '                    ', 1119, 0, 1119, 20),
woosh.Token(woosh.NAME, 'return', 1119, 20, 1119, 26),
woosh.Token(woosh.NAME, 'lineno', 1119, 27, 1119, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1119, 33, 1120, 0),
woosh.Token(woosh.COMMENT, "# We couldn't find the line number.", 1121, 8, 1121, 43),
woosh.Token(woosh.DEDENT, '        ', 1122, 0, 1122, 8),
woosh.Token(woosh.DEDENT, '', 1122, 8, 1122, 8),
woosh.Token(woosh.DEDENT, '', 1122, 8, 1122, 8),
woosh.Token(woosh.NAME, 'return', 1122, 8, 1122, 14),
woosh.Token(woosh.NAME, 'None', 1122, 15, 1122, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1122, 19, 1123, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 1124, 0, 1124, 70),
woosh.Token(woosh.COMMENT, '## 5. DocTest Runner', 1125, 0, 1125, 20),
woosh.Token(woosh.COMMENT, '######################################################################', 1126, 0, 1126, 70),
woosh.Token(woosh.DEDENT, '', 1128, 0, 1128, 0),
woosh.Token(woosh.DEDENT, '', 1128, 0, 1128, 0),
woosh.Token(woosh.NAME, 'class', 1128, 0, 1128, 5),
woosh.Token(woosh.NAME, 'DocTestRunner', 1128, 6, 1128, 19),
woosh.Token(woosh.OP, ':', 1128, 19, 1128, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1128, 20, 1129, 0),
woosh.Token(woosh.INDENT, '    ', 1129, 0, 1129, 4),
woosh.Token(woosh.STRING, '"""\r\n    A class used to run DocTest test cases, and accumulate statistics.\r\n    The `run` method is used to process a single DocTest case.  It\r\n    returns a tuple `(f, t)`, where `t` is the number of test cases\r\n    tried, and `f` is the number of test cases that failed.\r\n\r\n        >>> tests = DocTestFinder().find(_TestClass)\r\n        >>> runner = DocTestRunner(verbose=False)\r\n        >>> tests.sort(key = lambda test: test.name)\r\n        >>> for test in tests:\r\n        ...     print(test.name, \'->\', runner.run(test))\r\n        _TestClass -> TestResults(failed=0, attempted=2)\r\n        _TestClass.__init__ -> TestResults(failed=0, attempted=2)\r\n        _TestClass.get -> TestResults(failed=0, attempted=2)\r\n        _TestClass.square -> TestResults(failed=0, attempted=1)\r\n\r\n    The `summarize` method prints a summary of all the test cases that\r\n    have been run by the runner, and returns an aggregated `(f, t)`\r\n    tuple:\r\n\r\n        >>> runner.summarize(verbose=1)\r\n        4 items passed all tests:\r\n           2 tests in _TestClass\r\n           2 tests in _TestClass.__init__\r\n           2 tests in _TestClass.get\r\n           1 tests in _TestClass.square\r\n        7 tests in 4 items.\r\n        7 passed and 0 failed.\r\n        Test passed.\r\n        TestResults(failed=0, attempted=7)\r\n\r\n    The aggregated number of tried examples and failed examples is\r\n    also available via the `tries` and `failures` attributes:\r\n\r\n        >>> runner.tries\r\n        7\r\n        >>> runner.failures\r\n        0\r\n\r\n    The comparison between expected outputs and actual outputs is done\r\n    by an `OutputChecker`.  This comparison may be customized with a\r\n    number of option flags; see the documentation for `testmod` for\r\n    more information.  If the option flags are insufficient, then the\r\n    comparison may also be customized by passing a subclass of\r\n    `OutputChecker` to the constructor.\r\n\r\n    The test runner\'s display output can be controlled in two ways.\r\n    First, an output function (`out) can be passed to\r\n    `TestRunner.run`; this function will be called with strings that\r\n    should be displayed.  It defaults to `sys.stdout.write`.  If\r\n    capturing the output is not sufficient, then the display output\r\n    can be also customized by subclassing DocTestRunner, and\r\n    overriding the methods `report_start`, `report_success`,\r\n    `report_unexpected_exception`, and `report_failure`.\r\n    """', 1129, 4, 1183, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1183, 7, 1184, 0),
woosh.Token(woosh.COMMENT, '# This divider string is used to separate failure messages, and to', 1184, 4, 1184, 70),
woosh.Token(woosh.COMMENT, '# separate sections of the summary.', 1185, 4, 1185, 39),
woosh.Token(woosh.NAME, 'DIVIDER', 1186, 4, 1186, 11),
woosh.Token(woosh.OP, '=', 1186, 12, 1186, 13),
woosh.Token(woosh.STRING, '"*"', 1186, 14, 1186, 17),
woosh.Token(woosh.OP, '*', 1186, 18, 1186, 19),
woosh.Token(woosh.NUMBER, '70', 1186, 20, 1186, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1186, 22, 1187, 0),
woosh.Token(woosh.NAME, 'def', 1188, 4, 1188, 7),
woosh.Token(woosh.NAME, '__init__', 1188, 8, 1188, 16),
woosh.Token(woosh.OP, '(', 1188, 16, 1188, 17),
woosh.Token(woosh.NAME, 'self', 1188, 17, 1188, 21),
woosh.Token(woosh.OP, ',', 1188, 21, 1188, 22),
woosh.Token(woosh.NAME, 'checker', 1188, 23, 1188, 30),
woosh.Token(woosh.OP, '=', 1188, 30, 1188, 31),
woosh.Token(woosh.NAME, 'None', 1188, 31, 1188, 35),
woosh.Token(woosh.OP, ',', 1188, 35, 1188, 36),
woosh.Token(woosh.NAME, 'verbose', 1188, 37, 1188, 44),
woosh.Token(woosh.OP, '=', 1188, 44, 1188, 45),
woosh.Token(woosh.NAME, 'None', 1188, 45, 1188, 49),
woosh.Token(woosh.OP, ',', 1188, 49, 1188, 50),
woosh.Token(woosh.NAME, 'optionflags', 1188, 51, 1188, 62),
woosh.Token(woosh.OP, '=', 1188, 62, 1188, 63),
woosh.Token(woosh.NUMBER, '0', 1188, 63, 1188, 64),
woosh.Token(woosh.OP, ')', 1188, 64, 1188, 65),
woosh.Token(woosh.OP, ':', 1188, 65, 1188, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1188, 66, 1189, 0),
woosh.Token(woosh.INDENT, '        ', 1189, 0, 1189, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create a new test runner.\r\n\r\n        Optional keyword arg `checker` is the `OutputChecker` that\r\n        should be used to compare the expected outputs and actual\r\n        outputs of doctest examples.\r\n\r\n        Optional keyword arg \'verbose\' prints lots of stuff if true,\r\n        only failures if false; by default, it\'s true iff \'-v\' is in\r\n        sys.argv.\r\n\r\n        Optional argument `optionflags` can be used to control how the\r\n        test runner compares expected output to actual output, and how\r\n        it displays failures.  See the documentation for `testmod` for\r\n        more information.\r\n        """', 1189, 8, 1204, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1204, 11, 1205, 0),
woosh.Token(woosh.NAME, 'self', 1205, 8, 1205, 12),
woosh.Token(woosh.OP, '.', 1205, 12, 1205, 13),
woosh.Token(woosh.NAME, '_checker', 1205, 13, 1205, 21),
woosh.Token(woosh.OP, '=', 1205, 22, 1205, 23),
woosh.Token(woosh.NAME, 'checker', 1205, 24, 1205, 31),
woosh.Token(woosh.NAME, 'or', 1205, 32, 1205, 34),
woosh.Token(woosh.NAME, 'OutputChecker', 1205, 35, 1205, 48),
woosh.Token(woosh.OP, '(', 1205, 48, 1205, 49),
woosh.Token(woosh.OP, ')', 1205, 49, 1205, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1205, 50, 1206, 0),
woosh.Token(woosh.NAME, 'if', 1206, 8, 1206, 10),
woosh.Token(woosh.NAME, 'verbose', 1206, 11, 1206, 18),
woosh.Token(woosh.NAME, 'is', 1206, 19, 1206, 21),
woosh.Token(woosh.NAME, 'None', 1206, 22, 1206, 26),
woosh.Token(woosh.OP, ':', 1206, 26, 1206, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1206, 27, 1207, 0),
woosh.Token(woosh.INDENT, '            ', 1207, 0, 1207, 12),
woosh.Token(woosh.NAME, 'verbose', 1207, 12, 1207, 19),
woosh.Token(woosh.OP, '=', 1207, 20, 1207, 21),
woosh.Token(woosh.STRING, "'-v'", 1207, 22, 1207, 26),
woosh.Token(woosh.NAME, 'in', 1207, 27, 1207, 29),
woosh.Token(woosh.NAME, 'sys', 1207, 30, 1207, 33),
woosh.Token(woosh.OP, '.', 1207, 33, 1207, 34),
woosh.Token(woosh.NAME, 'argv', 1207, 34, 1207, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1207, 38, 1208, 0),
woosh.Token(woosh.DEDENT, '        ', 1208, 0, 1208, 8),
woosh.Token(woosh.NAME, 'self', 1208, 8, 1208, 12),
woosh.Token(woosh.OP, '.', 1208, 12, 1208, 13),
woosh.Token(woosh.NAME, '_verbose', 1208, 13, 1208, 21),
woosh.Token(woosh.OP, '=', 1208, 22, 1208, 23),
woosh.Token(woosh.NAME, 'verbose', 1208, 24, 1208, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1208, 31, 1209, 0),
woosh.Token(woosh.NAME, 'self', 1209, 8, 1209, 12),
woosh.Token(woosh.OP, '.', 1209, 12, 1209, 13),
woosh.Token(woosh.NAME, 'optionflags', 1209, 13, 1209, 24),
woosh.Token(woosh.OP, '=', 1209, 25, 1209, 26),
woosh.Token(woosh.NAME, 'optionflags', 1209, 27, 1209, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1209, 38, 1210, 0),
woosh.Token(woosh.NAME, 'self', 1210, 8, 1210, 12),
woosh.Token(woosh.OP, '.', 1210, 12, 1210, 13),
woosh.Token(woosh.NAME, 'original_optionflags', 1210, 13, 1210, 33),
woosh.Token(woosh.OP, '=', 1210, 34, 1210, 35),
woosh.Token(woosh.NAME, 'optionflags', 1210, 36, 1210, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1210, 47, 1211, 0),
woosh.Token(woosh.COMMENT, "# Keep track of the examples we've run.", 1212, 8, 1212, 47),
woosh.Token(woosh.NAME, 'self', 1213, 8, 1213, 12),
woosh.Token(woosh.OP, '.', 1213, 12, 1213, 13),
woosh.Token(woosh.NAME, 'tries', 1213, 13, 1213, 18),
woosh.Token(woosh.OP, '=', 1213, 19, 1213, 20),
woosh.Token(woosh.NUMBER, '0', 1213, 21, 1213, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1213, 22, 1214, 0),
woosh.Token(woosh.NAME, 'self', 1214, 8, 1214, 12),
woosh.Token(woosh.OP, '.', 1214, 12, 1214, 13),
woosh.Token(woosh.NAME, 'failures', 1214, 13, 1214, 21),
woosh.Token(woosh.OP, '=', 1214, 22, 1214, 23),
woosh.Token(woosh.NUMBER, '0', 1214, 24, 1214, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1214, 25, 1215, 0),
woosh.Token(woosh.NAME, 'self', 1215, 8, 1215, 12),
woosh.Token(woosh.OP, '.', 1215, 12, 1215, 13),
woosh.Token(woosh.NAME, '_name2ft', 1215, 13, 1215, 21),
woosh.Token(woosh.OP, '=', 1215, 22, 1215, 23),
woosh.Token(woosh.OP, '{', 1215, 24, 1215, 25),
woosh.Token(woosh.OP, '}', 1215, 25, 1215, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1215, 26, 1216, 0),
woosh.Token(woosh.COMMENT, '# Create a fake output target for capturing doctest output.', 1217, 8, 1217, 67),
woosh.Token(woosh.NAME, 'self', 1218, 8, 1218, 12),
woosh.Token(woosh.OP, '.', 1218, 12, 1218, 13),
woosh.Token(woosh.NAME, '_fakeout', 1218, 13, 1218, 21),
woosh.Token(woosh.OP, '=', 1218, 22, 1218, 23),
woosh.Token(woosh.NAME, '_SpoofOut', 1218, 24, 1218, 33),
woosh.Token(woosh.OP, '(', 1218, 33, 1218, 34),
woosh.Token(woosh.OP, ')', 1218, 34, 1218, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1218, 35, 1219, 0),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1220, 4, 1220, 70),
woosh.Token(woosh.COMMENT, '# Reporting methods', 1221, 4, 1221, 23),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1222, 4, 1222, 70),
woosh.Token(woosh.DEDENT, '    ', 1224, 0, 1224, 4),
woosh.Token(woosh.NAME, 'def', 1224, 4, 1224, 7),
woosh.Token(woosh.NAME, 'report_start', 1224, 8, 1224, 20),
woosh.Token(woosh.OP, '(', 1224, 20, 1224, 21),
woosh.Token(woosh.NAME, 'self', 1224, 21, 1224, 25),
woosh.Token(woosh.OP, ',', 1224, 25, 1224, 26),
woosh.Token(woosh.NAME, 'out', 1224, 27, 1224, 30),
woosh.Token(woosh.OP, ',', 1224, 30, 1224, 31),
woosh.Token(woosh.NAME, 'test', 1224, 32, 1224, 36),
woosh.Token(woosh.OP, ',', 1224, 36, 1224, 37),
woosh.Token(woosh.NAME, 'example', 1224, 38, 1224, 45),
woosh.Token(woosh.OP, ')', 1224, 45, 1224, 46),
woosh.Token(woosh.OP, ':', 1224, 46, 1224, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1224, 47, 1225, 0),
woosh.Token(woosh.INDENT, '        ', 1225, 0, 1225, 8),
woosh.Token(woosh.STRING, '"""\r\n        Report that the test runner is about to process the given\r\n        example.  (Only displays a message if verbose=True)\r\n        """', 1225, 8, 1228, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1228, 11, 1229, 0),
woosh.Token(woosh.NAME, 'if', 1229, 8, 1229, 10),
woosh.Token(woosh.NAME, 'self', 1229, 11, 1229, 15),
woosh.Token(woosh.OP, '.', 1229, 15, 1229, 16),
woosh.Token(woosh.NAME, '_verbose', 1229, 16, 1229, 24),
woosh.Token(woosh.OP, ':', 1229, 24, 1229, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1229, 25, 1230, 0),
woosh.Token(woosh.INDENT, '            ', 1230, 0, 1230, 12),
woosh.Token(woosh.NAME, 'if', 1230, 12, 1230, 14),
woosh.Token(woosh.NAME, 'example', 1230, 15, 1230, 22),
woosh.Token(woosh.OP, '.', 1230, 22, 1230, 23),
woosh.Token(woosh.NAME, 'want', 1230, 23, 1230, 27),
woosh.Token(woosh.OP, ':', 1230, 27, 1230, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1230, 28, 1231, 0),
woosh.Token(woosh.INDENT, '                ', 1231, 0, 1231, 16),
woosh.Token(woosh.NAME, 'out', 1231, 16, 1231, 19),
woosh.Token(woosh.OP, '(', 1231, 19, 1231, 20),
woosh.Token(woosh.STRING, "'Trying:\\n'", 1231, 20, 1231, 31),
woosh.Token(woosh.OP, '+', 1231, 32, 1231, 33),
woosh.Token(woosh.NAME, '_indent', 1231, 34, 1231, 41),
woosh.Token(woosh.OP, '(', 1231, 41, 1231, 42),
woosh.Token(woosh.NAME, 'example', 1231, 42, 1231, 49),
woosh.Token(woosh.OP, '.', 1231, 49, 1231, 50),
woosh.Token(woosh.NAME, 'source', 1231, 50, 1231, 56),
woosh.Token(woosh.OP, ')', 1231, 56, 1231, 57),
woosh.Token(woosh.OP, '+', 1231, 58, 1231, 59),
woosh.Token(woosh.STRING, "'Expecting:\\n'", 1232, 20, 1232, 34),
woosh.Token(woosh.OP, '+', 1232, 35, 1232, 36),
woosh.Token(woosh.NAME, '_indent', 1232, 37, 1232, 44),
woosh.Token(woosh.OP, '(', 1232, 44, 1232, 45),
woosh.Token(woosh.NAME, 'example', 1232, 45, 1232, 52),
woosh.Token(woosh.OP, '.', 1232, 52, 1232, 53),
woosh.Token(woosh.NAME, 'want', 1232, 53, 1232, 57),
woosh.Token(woosh.OP, ')', 1232, 57, 1232, 58),
woosh.Token(woosh.OP, ')', 1232, 58, 1232, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1232, 59, 1233, 0),
woosh.Token(woosh.DEDENT, '            ', 1233, 0, 1233, 12),
woosh.Token(woosh.NAME, 'else', 1233, 12, 1233, 16),
woosh.Token(woosh.OP, ':', 1233, 16, 1233, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1233, 17, 1234, 0),
woosh.Token(woosh.INDENT, '                ', 1234, 0, 1234, 16),
woosh.Token(woosh.NAME, 'out', 1234, 16, 1234, 19),
woosh.Token(woosh.OP, '(', 1234, 19, 1234, 20),
woosh.Token(woosh.STRING, "'Trying:\\n'", 1234, 20, 1234, 31),
woosh.Token(woosh.OP, '+', 1234, 32, 1234, 33),
woosh.Token(woosh.NAME, '_indent', 1234, 34, 1234, 41),
woosh.Token(woosh.OP, '(', 1234, 41, 1234, 42),
woosh.Token(woosh.NAME, 'example', 1234, 42, 1234, 49),
woosh.Token(woosh.OP, '.', 1234, 49, 1234, 50),
woosh.Token(woosh.NAME, 'source', 1234, 50, 1234, 56),
woosh.Token(woosh.OP, ')', 1234, 56, 1234, 57),
woosh.Token(woosh.OP, '+', 1234, 58, 1234, 59),
woosh.Token(woosh.STRING, "'Expecting nothing\\n'", 1235, 20, 1235, 41),
woosh.Token(woosh.OP, ')', 1235, 41, 1235, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1235, 42, 1236, 0),
woosh.Token(woosh.DEDENT, '    ', 1237, 0, 1237, 4),
woosh.Token(woosh.DEDENT, '', 1237, 4, 1237, 4),
woosh.Token(woosh.DEDENT, '', 1237, 4, 1237, 4),
woosh.Token(woosh.NAME, 'def', 1237, 4, 1237, 7),
woosh.Token(woosh.NAME, 'report_success', 1237, 8, 1237, 22),
woosh.Token(woosh.OP, '(', 1237, 22, 1237, 23),
woosh.Token(woosh.NAME, 'self', 1237, 23, 1237, 27),
woosh.Token(woosh.OP, ',', 1237, 27, 1237, 28),
woosh.Token(woosh.NAME, 'out', 1237, 29, 1237, 32),
woosh.Token(woosh.OP, ',', 1237, 32, 1237, 33),
woosh.Token(woosh.NAME, 'test', 1237, 34, 1237, 38),
woosh.Token(woosh.OP, ',', 1237, 38, 1237, 39),
woosh.Token(woosh.NAME, 'example', 1237, 40, 1237, 47),
woosh.Token(woosh.OP, ',', 1237, 47, 1237, 48),
woosh.Token(woosh.NAME, 'got', 1237, 49, 1237, 52),
woosh.Token(woosh.OP, ')', 1237, 52, 1237, 53),
woosh.Token(woosh.OP, ':', 1237, 53, 1237, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1237, 54, 1238, 0),
woosh.Token(woosh.INDENT, '        ', 1238, 0, 1238, 8),
woosh.Token(woosh.STRING, '"""\r\n        Report that the given example ran successfully.  (Only\r\n        displays a message if verbose=True)\r\n        """', 1238, 8, 1241, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1241, 11, 1242, 0),
woosh.Token(woosh.NAME, 'if', 1242, 8, 1242, 10),
woosh.Token(woosh.NAME, 'self', 1242, 11, 1242, 15),
woosh.Token(woosh.OP, '.', 1242, 15, 1242, 16),
woosh.Token(woosh.NAME, '_verbose', 1242, 16, 1242, 24),
woosh.Token(woosh.OP, ':', 1242, 24, 1242, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1242, 25, 1243, 0),
woosh.Token(woosh.INDENT, '            ', 1243, 0, 1243, 12),
woosh.Token(woosh.NAME, 'out', 1243, 12, 1243, 15),
woosh.Token(woosh.OP, '(', 1243, 15, 1243, 16),
woosh.Token(woosh.STRING, '"ok\\n"', 1243, 16, 1243, 22),
woosh.Token(woosh.OP, ')', 1243, 22, 1243, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1243, 23, 1244, 0),
woosh.Token(woosh.DEDENT, '    ', 1245, 0, 1245, 4),
woosh.Token(woosh.DEDENT, '', 1245, 4, 1245, 4),
woosh.Token(woosh.NAME, 'def', 1245, 4, 1245, 7),
woosh.Token(woosh.NAME, 'report_failure', 1245, 8, 1245, 22),
woosh.Token(woosh.OP, '(', 1245, 22, 1245, 23),
woosh.Token(woosh.NAME, 'self', 1245, 23, 1245, 27),
woosh.Token(woosh.OP, ',', 1245, 27, 1245, 28),
woosh.Token(woosh.NAME, 'out', 1245, 29, 1245, 32),
woosh.Token(woosh.OP, ',', 1245, 32, 1245, 33),
woosh.Token(woosh.NAME, 'test', 1245, 34, 1245, 38),
woosh.Token(woosh.OP, ',', 1245, 38, 1245, 39),
woosh.Token(woosh.NAME, 'example', 1245, 40, 1245, 47),
woosh.Token(woosh.OP, ',', 1245, 47, 1245, 48),
woosh.Token(woosh.NAME, 'got', 1245, 49, 1245, 52),
woosh.Token(woosh.OP, ')', 1245, 52, 1245, 53),
woosh.Token(woosh.OP, ':', 1245, 53, 1245, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1245, 54, 1246, 0),
woosh.Token(woosh.INDENT, '        ', 1246, 0, 1246, 8),
woosh.Token(woosh.STRING, '"""\r\n        Report that the given example failed.\r\n        """', 1246, 8, 1248, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1248, 11, 1249, 0),
woosh.Token(woosh.NAME, 'out', 1249, 8, 1249, 11),
woosh.Token(woosh.OP, '(', 1249, 11, 1249, 12),
woosh.Token(woosh.NAME, 'self', 1249, 12, 1249, 16),
woosh.Token(woosh.OP, '.', 1249, 16, 1249, 17),
woosh.Token(woosh.NAME, '_failure_header', 1249, 17, 1249, 32),
woosh.Token(woosh.OP, '(', 1249, 32, 1249, 33),
woosh.Token(woosh.NAME, 'test', 1249, 33, 1249, 37),
woosh.Token(woosh.OP, ',', 1249, 37, 1249, 38),
woosh.Token(woosh.NAME, 'example', 1249, 39, 1249, 46),
woosh.Token(woosh.OP, ')', 1249, 46, 1249, 47),
woosh.Token(woosh.OP, '+', 1249, 48, 1249, 49),
woosh.Token(woosh.NAME, 'self', 1250, 12, 1250, 16),
woosh.Token(woosh.OP, '.', 1250, 16, 1250, 17),
woosh.Token(woosh.NAME, '_checker', 1250, 17, 1250, 25),
woosh.Token(woosh.OP, '.', 1250, 25, 1250, 26),
woosh.Token(woosh.NAME, 'output_difference', 1250, 26, 1250, 43),
woosh.Token(woosh.OP, '(', 1250, 43, 1250, 44),
woosh.Token(woosh.NAME, 'example', 1250, 44, 1250, 51),
woosh.Token(woosh.OP, ',', 1250, 51, 1250, 52),
woosh.Token(woosh.NAME, 'got', 1250, 53, 1250, 56),
woosh.Token(woosh.OP, ',', 1250, 56, 1250, 57),
woosh.Token(woosh.NAME, 'self', 1250, 58, 1250, 62),
woosh.Token(woosh.OP, '.', 1250, 62, 1250, 63),
woosh.Token(woosh.NAME, 'optionflags', 1250, 63, 1250, 74),
woosh.Token(woosh.OP, ')', 1250, 74, 1250, 75),
woosh.Token(woosh.OP, ')', 1250, 75, 1250, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1250, 76, 1251, 0),
woosh.Token(woosh.DEDENT, '    ', 1252, 0, 1252, 4),
woosh.Token(woosh.NAME, 'def', 1252, 4, 1252, 7),
woosh.Token(woosh.NAME, 'report_unexpected_exception', 1252, 8, 1252, 35),
woosh.Token(woosh.OP, '(', 1252, 35, 1252, 36),
woosh.Token(woosh.NAME, 'self', 1252, 36, 1252, 40),
woosh.Token(woosh.OP, ',', 1252, 40, 1252, 41),
woosh.Token(woosh.NAME, 'out', 1252, 42, 1252, 45),
woosh.Token(woosh.OP, ',', 1252, 45, 1252, 46),
woosh.Token(woosh.NAME, 'test', 1252, 47, 1252, 51),
woosh.Token(woosh.OP, ',', 1252, 51, 1252, 52),
woosh.Token(woosh.NAME, 'example', 1252, 53, 1252, 60),
woosh.Token(woosh.OP, ',', 1252, 60, 1252, 61),
woosh.Token(woosh.NAME, 'exc_info', 1252, 62, 1252, 70),
woosh.Token(woosh.OP, ')', 1252, 70, 1252, 71),
woosh.Token(woosh.OP, ':', 1252, 71, 1252, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1252, 72, 1253, 0),
woosh.Token(woosh.INDENT, '        ', 1253, 0, 1253, 8),
woosh.Token(woosh.STRING, '"""\r\n        Report that the given example raised an unexpected exception.\r\n        """', 1253, 8, 1255, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1255, 11, 1256, 0),
woosh.Token(woosh.NAME, 'out', 1256, 8, 1256, 11),
woosh.Token(woosh.OP, '(', 1256, 11, 1256, 12),
woosh.Token(woosh.NAME, 'self', 1256, 12, 1256, 16),
woosh.Token(woosh.OP, '.', 1256, 16, 1256, 17),
woosh.Token(woosh.NAME, '_failure_header', 1256, 17, 1256, 32),
woosh.Token(woosh.OP, '(', 1256, 32, 1256, 33),
woosh.Token(woosh.NAME, 'test', 1256, 33, 1256, 37),
woosh.Token(woosh.OP, ',', 1256, 37, 1256, 38),
woosh.Token(woosh.NAME, 'example', 1256, 39, 1256, 46),
woosh.Token(woosh.OP, ')', 1256, 46, 1256, 47),
woosh.Token(woosh.OP, '+', 1256, 48, 1256, 49),
woosh.Token(woosh.STRING, "'Exception raised:\\n'", 1257, 12, 1257, 33),
woosh.Token(woosh.OP, '+', 1257, 34, 1257, 35),
woosh.Token(woosh.NAME, '_indent', 1257, 36, 1257, 43),
woosh.Token(woosh.OP, '(', 1257, 43, 1257, 44),
woosh.Token(woosh.NAME, '_exception_traceback', 1257, 44, 1257, 64),
woosh.Token(woosh.OP, '(', 1257, 64, 1257, 65),
woosh.Token(woosh.NAME, 'exc_info', 1257, 65, 1257, 73),
woosh.Token(woosh.OP, ')', 1257, 73, 1257, 74),
woosh.Token(woosh.OP, ')', 1257, 74, 1257, 75),
woosh.Token(woosh.OP, ')', 1257, 75, 1257, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1257, 76, 1258, 0),
woosh.Token(woosh.DEDENT, '    ', 1259, 0, 1259, 4),
woosh.Token(woosh.NAME, 'def', 1259, 4, 1259, 7),
woosh.Token(woosh.NAME, '_failure_header', 1259, 8, 1259, 23),
woosh.Token(woosh.OP, '(', 1259, 23, 1259, 24),
woosh.Token(woosh.NAME, 'self', 1259, 24, 1259, 28),
woosh.Token(woosh.OP, ',', 1259, 28, 1259, 29),
woosh.Token(woosh.NAME, 'test', 1259, 30, 1259, 34),
woosh.Token(woosh.OP, ',', 1259, 34, 1259, 35),
woosh.Token(woosh.NAME, 'example', 1259, 36, 1259, 43),
woosh.Token(woosh.OP, ')', 1259, 43, 1259, 44),
woosh.Token(woosh.OP, ':', 1259, 44, 1259, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1259, 45, 1260, 0),
woosh.Token(woosh.INDENT, '        ', 1260, 0, 1260, 8),
woosh.Token(woosh.NAME, 'out', 1260, 8, 1260, 11),
woosh.Token(woosh.OP, '=', 1260, 12, 1260, 13),
woosh.Token(woosh.OP, '[', 1260, 14, 1260, 15),
woosh.Token(woosh.NAME, 'self', 1260, 15, 1260, 19),
woosh.Token(woosh.OP, '.', 1260, 19, 1260, 20),
woosh.Token(woosh.NAME, 'DIVIDER', 1260, 20, 1260, 27),
woosh.Token(woosh.OP, ']', 1260, 27, 1260, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1260, 28, 1261, 0),
woosh.Token(woosh.NAME, 'if', 1261, 8, 1261, 10),
woosh.Token(woosh.NAME, 'test', 1261, 11, 1261, 15),
woosh.Token(woosh.OP, '.', 1261, 15, 1261, 16),
woosh.Token(woosh.NAME, 'filename', 1261, 16, 1261, 24),
woosh.Token(woosh.OP, ':', 1261, 24, 1261, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1261, 25, 1262, 0),
woosh.Token(woosh.INDENT, '            ', 1262, 0, 1262, 12),
woosh.Token(woosh.NAME, 'if', 1262, 12, 1262, 14),
woosh.Token(woosh.NAME, 'test', 1262, 15, 1262, 19),
woosh.Token(woosh.OP, '.', 1262, 19, 1262, 20),
woosh.Token(woosh.NAME, 'lineno', 1262, 20, 1262, 26),
woosh.Token(woosh.NAME, 'is', 1262, 27, 1262, 29),
woosh.Token(woosh.NAME, 'not', 1262, 30, 1262, 33),
woosh.Token(woosh.NAME, 'None', 1262, 34, 1262, 38),
woosh.Token(woosh.NAME, 'and', 1262, 39, 1262, 42),
woosh.Token(woosh.NAME, 'example', 1262, 43, 1262, 50),
woosh.Token(woosh.OP, '.', 1262, 50, 1262, 51),
woosh.Token(woosh.NAME, 'lineno', 1262, 51, 1262, 57),
woosh.Token(woosh.NAME, 'is', 1262, 58, 1262, 60),
woosh.Token(woosh.NAME, 'not', 1262, 61, 1262, 64),
woosh.Token(woosh.NAME, 'None', 1262, 65, 1262, 69),
woosh.Token(woosh.OP, ':', 1262, 69, 1262, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1262, 70, 1263, 0),
woosh.Token(woosh.INDENT, '                ', 1263, 0, 1263, 16),
woosh.Token(woosh.NAME, 'lineno', 1263, 16, 1263, 22),
woosh.Token(woosh.OP, '=', 1263, 23, 1263, 24),
woosh.Token(woosh.NAME, 'test', 1263, 25, 1263, 29),
woosh.Token(woosh.OP, '.', 1263, 29, 1263, 30),
woosh.Token(woosh.NAME, 'lineno', 1263, 30, 1263, 36),
woosh.Token(woosh.OP, '+', 1263, 37, 1263, 38),
woosh.Token(woosh.NAME, 'example', 1263, 39, 1263, 46),
woosh.Token(woosh.OP, '.', 1263, 46, 1263, 47),
woosh.Token(woosh.NAME, 'lineno', 1263, 47, 1263, 53),
woosh.Token(woosh.OP, '+', 1263, 54, 1263, 55),
woosh.Token(woosh.NUMBER, '1', 1263, 56, 1263, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1263, 57, 1264, 0),
woosh.Token(woosh.DEDENT, '            ', 1264, 0, 1264, 12),
woosh.Token(woosh.NAME, 'else', 1264, 12, 1264, 16),
woosh.Token(woosh.OP, ':', 1264, 16, 1264, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1264, 17, 1265, 0),
woosh.Token(woosh.INDENT, '                ', 1265, 0, 1265, 16),
woosh.Token(woosh.NAME, 'lineno', 1265, 16, 1265, 22),
woosh.Token(woosh.OP, '=', 1265, 23, 1265, 24),
woosh.Token(woosh.STRING, "'?'", 1265, 25, 1265, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1265, 28, 1266, 0),
woosh.Token(woosh.DEDENT, '            ', 1266, 0, 1266, 12),
woosh.Token(woosh.NAME, 'out', 1266, 12, 1266, 15),
woosh.Token(woosh.OP, '.', 1266, 15, 1266, 16),
woosh.Token(woosh.NAME, 'append', 1266, 16, 1266, 22),
woosh.Token(woosh.OP, '(', 1266, 22, 1266, 23),
woosh.Token(woosh.STRING, '\'File "%s", line %s, in %s\'', 1266, 23, 1266, 50),
woosh.Token(woosh.OP, '%', 1266, 51, 1266, 52),
woosh.Token(woosh.OP, '(', 1267, 23, 1267, 24),
woosh.Token(woosh.NAME, 'test', 1267, 24, 1267, 28),
woosh.Token(woosh.OP, '.', 1267, 28, 1267, 29),
woosh.Token(woosh.NAME, 'filename', 1267, 29, 1267, 37),
woosh.Token(woosh.OP, ',', 1267, 37, 1267, 38),
woosh.Token(woosh.NAME, 'lineno', 1267, 39, 1267, 45),
woosh.Token(woosh.OP, ',', 1267, 45, 1267, 46),
woosh.Token(woosh.NAME, 'test', 1267, 47, 1267, 51),
woosh.Token(woosh.OP, '.', 1267, 51, 1267, 52),
woosh.Token(woosh.NAME, 'name', 1267, 52, 1267, 56),
woosh.Token(woosh.OP, ')', 1267, 56, 1267, 57),
woosh.Token(woosh.OP, ')', 1267, 57, 1267, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1267, 58, 1268, 0),
woosh.Token(woosh.DEDENT, '        ', 1268, 0, 1268, 8),
woosh.Token(woosh.NAME, 'else', 1268, 8, 1268, 12),
woosh.Token(woosh.OP, ':', 1268, 12, 1268, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1268, 13, 1269, 0),
woosh.Token(woosh.INDENT, '            ', 1269, 0, 1269, 12),
woosh.Token(woosh.NAME, 'out', 1269, 12, 1269, 15),
woosh.Token(woosh.OP, '.', 1269, 15, 1269, 16),
woosh.Token(woosh.NAME, 'append', 1269, 16, 1269, 22),
woosh.Token(woosh.OP, '(', 1269, 22, 1269, 23),
woosh.Token(woosh.STRING, "'Line %s, in %s'", 1269, 23, 1269, 39),
woosh.Token(woosh.OP, '%', 1269, 40, 1269, 41),
woosh.Token(woosh.OP, '(', 1269, 42, 1269, 43),
woosh.Token(woosh.NAME, 'example', 1269, 43, 1269, 50),
woosh.Token(woosh.OP, '.', 1269, 50, 1269, 51),
woosh.Token(woosh.NAME, 'lineno', 1269, 51, 1269, 57),
woosh.Token(woosh.OP, '+', 1269, 57, 1269, 58),
woosh.Token(woosh.NUMBER, '1', 1269, 58, 1269, 59),
woosh.Token(woosh.OP, ',', 1269, 59, 1269, 60),
woosh.Token(woosh.NAME, 'test', 1269, 61, 1269, 65),
woosh.Token(woosh.OP, '.', 1269, 65, 1269, 66),
woosh.Token(woosh.NAME, 'name', 1269, 66, 1269, 70),
woosh.Token(woosh.OP, ')', 1269, 70, 1269, 71),
woosh.Token(woosh.OP, ')', 1269, 71, 1269, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1269, 72, 1270, 0),
woosh.Token(woosh.DEDENT, '        ', 1270, 0, 1270, 8),
woosh.Token(woosh.NAME, 'out', 1270, 8, 1270, 11),
woosh.Token(woosh.OP, '.', 1270, 11, 1270, 12),
woosh.Token(woosh.NAME, 'append', 1270, 12, 1270, 18),
woosh.Token(woosh.OP, '(', 1270, 18, 1270, 19),
woosh.Token(woosh.STRING, "'Failed example:'", 1270, 19, 1270, 36),
woosh.Token(woosh.OP, ')', 1270, 36, 1270, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1270, 37, 1271, 0),
woosh.Token(woosh.NAME, 'source', 1271, 8, 1271, 14),
woosh.Token(woosh.OP, '=', 1271, 15, 1271, 16),
woosh.Token(woosh.NAME, 'example', 1271, 17, 1271, 24),
woosh.Token(woosh.OP, '.', 1271, 24, 1271, 25),
woosh.Token(woosh.NAME, 'source', 1271, 25, 1271, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1271, 31, 1272, 0),
woosh.Token(woosh.NAME, 'out', 1272, 8, 1272, 11),
woosh.Token(woosh.OP, '.', 1272, 11, 1272, 12),
woosh.Token(woosh.NAME, 'append', 1272, 12, 1272, 18),
woosh.Token(woosh.OP, '(', 1272, 18, 1272, 19),
woosh.Token(woosh.NAME, '_indent', 1272, 19, 1272, 26),
woosh.Token(woosh.OP, '(', 1272, 26, 1272, 27),
woosh.Token(woosh.NAME, 'source', 1272, 27, 1272, 33),
woosh.Token(woosh.OP, ')', 1272, 33, 1272, 34),
woosh.Token(woosh.OP, ')', 1272, 34, 1272, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1272, 35, 1273, 0),
woosh.Token(woosh.NAME, 'return', 1273, 8, 1273, 14),
woosh.Token(woosh.STRING, "'\\n'", 1273, 15, 1273, 19),
woosh.Token(woosh.OP, '.', 1273, 19, 1273, 20),
woosh.Token(woosh.NAME, 'join', 1273, 20, 1273, 24),
woosh.Token(woosh.OP, '(', 1273, 24, 1273, 25),
woosh.Token(woosh.NAME, 'out', 1273, 25, 1273, 28),
woosh.Token(woosh.OP, ')', 1273, 28, 1273, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1273, 29, 1274, 0),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1275, 4, 1275, 70),
woosh.Token(woosh.COMMENT, '# DocTest Running', 1276, 4, 1276, 21),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1277, 4, 1277, 70),
woosh.Token(woosh.DEDENT, '    ', 1279, 0, 1279, 4),
woosh.Token(woosh.NAME, 'def', 1279, 4, 1279, 7),
woosh.Token(woosh.NAME, '__run', 1279, 8, 1279, 13),
woosh.Token(woosh.OP, '(', 1279, 13, 1279, 14),
woosh.Token(woosh.NAME, 'self', 1279, 14, 1279, 18),
woosh.Token(woosh.OP, ',', 1279, 18, 1279, 19),
woosh.Token(woosh.NAME, 'test', 1279, 20, 1279, 24),
woosh.Token(woosh.OP, ',', 1279, 24, 1279, 25),
woosh.Token(woosh.NAME, 'compileflags', 1279, 26, 1279, 38),
woosh.Token(woosh.OP, ',', 1279, 38, 1279, 39),
woosh.Token(woosh.NAME, 'out', 1279, 40, 1279, 43),
woosh.Token(woosh.OP, ')', 1279, 43, 1279, 44),
woosh.Token(woosh.OP, ':', 1279, 44, 1279, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1279, 45, 1280, 0),
woosh.Token(woosh.INDENT, '        ', 1280, 0, 1280, 8),
woosh.Token(woosh.STRING, '"""\r\n        Run the examples in `test`.  Write the outcome of each example\r\n        with one of the `DocTestRunner.report_*` methods, using the\r\n        writer function `out`.  `compileflags` is the set of compiler\r\n        flags that should be used to execute examples.  Return a tuple\r\n        `(f, t)`, where `t` is the number of examples tried, and `f`\r\n        is the number of examples that failed.  The examples are run\r\n        in the namespace `test.globs`.\r\n        """', 1280, 8, 1288, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1288, 11, 1289, 0),
woosh.Token(woosh.COMMENT, '# Keep track of the number of failures and tries.', 1289, 8, 1289, 57),
woosh.Token(woosh.NAME, 'failures', 1290, 8, 1290, 16),
woosh.Token(woosh.OP, '=', 1290, 17, 1290, 18),
woosh.Token(woosh.NAME, 'tries', 1290, 19, 1290, 24),
woosh.Token(woosh.OP, '=', 1290, 25, 1290, 26),
woosh.Token(woosh.NUMBER, '0', 1290, 27, 1290, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1290, 28, 1291, 0),
woosh.Token(woosh.COMMENT, '# Save the option flags (since option directives can be used', 1292, 8, 1292, 68),
woosh.Token(woosh.COMMENT, '# to modify them).', 1293, 8, 1293, 26),
woosh.Token(woosh.NAME, 'original_optionflags', 1294, 8, 1294, 28),
woosh.Token(woosh.OP, '=', 1294, 29, 1294, 30),
woosh.Token(woosh.NAME, 'self', 1294, 31, 1294, 35),
woosh.Token(woosh.OP, '.', 1294, 35, 1294, 36),
woosh.Token(woosh.NAME, 'optionflags', 1294, 36, 1294, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1294, 47, 1295, 0),
woosh.Token(woosh.NAME, 'SUCCESS', 1296, 8, 1296, 15),
woosh.Token(woosh.OP, ',', 1296, 15, 1296, 16),
woosh.Token(woosh.NAME, 'FAILURE', 1296, 17, 1296, 24),
woosh.Token(woosh.OP, ',', 1296, 24, 1296, 25),
woosh.Token(woosh.NAME, 'BOOM', 1296, 26, 1296, 30),
woosh.Token(woosh.OP, '=', 1296, 31, 1296, 32),
woosh.Token(woosh.NAME, 'range', 1296, 33, 1296, 38),
woosh.Token(woosh.OP, '(', 1296, 38, 1296, 39),
woosh.Token(woosh.NUMBER, '3', 1296, 39, 1296, 40),
woosh.Token(woosh.OP, ')', 1296, 40, 1296, 41),
woosh.Token(woosh.COMMENT, '# `outcome` state', 1296, 42, 1296, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1296, 59, 1297, 0),
woosh.Token(woosh.NAME, 'check', 1298, 8, 1298, 13),
woosh.Token(woosh.OP, '=', 1298, 14, 1298, 15),
woosh.Token(woosh.NAME, 'self', 1298, 16, 1298, 20),
woosh.Token(woosh.OP, '.', 1298, 20, 1298, 21),
woosh.Token(woosh.NAME, '_checker', 1298, 21, 1298, 29),
woosh.Token(woosh.OP, '.', 1298, 29, 1298, 30),
woosh.Token(woosh.NAME, 'check_output', 1298, 30, 1298, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1298, 42, 1299, 0),
woosh.Token(woosh.COMMENT, '# Process each example.', 1300, 8, 1300, 31),
woosh.Token(woosh.NAME, 'for', 1301, 8, 1301, 11),
woosh.Token(woosh.NAME, 'examplenum', 1301, 12, 1301, 22),
woosh.Token(woosh.OP, ',', 1301, 22, 1301, 23),
woosh.Token(woosh.NAME, 'example', 1301, 24, 1301, 31),
woosh.Token(woosh.NAME, 'in', 1301, 32, 1301, 34),
woosh.Token(woosh.NAME, 'enumerate', 1301, 35, 1301, 44),
woosh.Token(woosh.OP, '(', 1301, 44, 1301, 45),
woosh.Token(woosh.NAME, 'test', 1301, 45, 1301, 49),
woosh.Token(woosh.OP, '.', 1301, 49, 1301, 50),
woosh.Token(woosh.NAME, 'examples', 1301, 50, 1301, 58),
woosh.Token(woosh.OP, ')', 1301, 58, 1301, 59),
woosh.Token(woosh.OP, ':', 1301, 59, 1301, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1301, 60, 1302, 0),
woosh.Token(woosh.COMMENT, '# If REPORT_ONLY_FIRST_FAILURE is set, then suppress', 1303, 12, 1303, 64),
woosh.Token(woosh.COMMENT, '# reporting after the first failure.', 1304, 12, 1304, 48),
woosh.Token(woosh.INDENT, '            ', 1305, 0, 1305, 12),
woosh.Token(woosh.NAME, 'quiet', 1305, 12, 1305, 17),
woosh.Token(woosh.OP, '=', 1305, 18, 1305, 19),
woosh.Token(woosh.OP, '(', 1305, 20, 1305, 21),
woosh.Token(woosh.NAME, 'self', 1305, 21, 1305, 25),
woosh.Token(woosh.OP, '.', 1305, 25, 1305, 26),
woosh.Token(woosh.NAME, 'optionflags', 1305, 26, 1305, 37),
woosh.Token(woosh.OP, '&', 1305, 38, 1305, 39),
woosh.Token(woosh.NAME, 'REPORT_ONLY_FIRST_FAILURE', 1305, 40, 1305, 65),
woosh.Token(woosh.NAME, 'and', 1305, 66, 1305, 69),
woosh.Token(woosh.NAME, 'failures', 1306, 21, 1306, 29),
woosh.Token(woosh.OP, '>', 1306, 30, 1306, 31),
woosh.Token(woosh.NUMBER, '0', 1306, 32, 1306, 33),
woosh.Token(woosh.OP, ')', 1306, 33, 1306, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1306, 34, 1307, 0),
woosh.Token(woosh.COMMENT, "# Merge in the example's options.", 1308, 12, 1308, 45),
woosh.Token(woosh.NAME, 'self', 1309, 12, 1309, 16),
woosh.Token(woosh.OP, '.', 1309, 16, 1309, 17),
woosh.Token(woosh.NAME, 'optionflags', 1309, 17, 1309, 28),
woosh.Token(woosh.OP, '=', 1309, 29, 1309, 30),
woosh.Token(woosh.NAME, 'original_optionflags', 1309, 31, 1309, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1309, 51, 1310, 0),
woosh.Token(woosh.NAME, 'if', 1310, 12, 1310, 14),
woosh.Token(woosh.NAME, 'example', 1310, 15, 1310, 22),
woosh.Token(woosh.OP, '.', 1310, 22, 1310, 23),
woosh.Token(woosh.NAME, 'options', 1310, 23, 1310, 30),
woosh.Token(woosh.OP, ':', 1310, 30, 1310, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1310, 31, 1311, 0),
woosh.Token(woosh.INDENT, '                ', 1311, 0, 1311, 16),
woosh.Token(woosh.NAME, 'for', 1311, 16, 1311, 19),
woosh.Token(woosh.OP, '(', 1311, 20, 1311, 21),
woosh.Token(woosh.NAME, 'optionflag', 1311, 21, 1311, 31),
woosh.Token(woosh.OP, ',', 1311, 31, 1311, 32),
woosh.Token(woosh.NAME, 'val', 1311, 33, 1311, 36),
woosh.Token(woosh.OP, ')', 1311, 36, 1311, 37),
woosh.Token(woosh.NAME, 'in', 1311, 38, 1311, 40),
woosh.Token(woosh.NAME, 'example', 1311, 41, 1311, 48),
woosh.Token(woosh.OP, '.', 1311, 48, 1311, 49),
woosh.Token(woosh.NAME, 'options', 1311, 49, 1311, 56),
woosh.Token(woosh.OP, '.', 1311, 56, 1311, 57),
woosh.Token(woosh.NAME, 'items', 1311, 57, 1311, 62),
woosh.Token(woosh.OP, '(', 1311, 62, 1311, 63),
woosh.Token(woosh.OP, ')', 1311, 63, 1311, 64),
woosh.Token(woosh.OP, ':', 1311, 64, 1311, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1311, 65, 1312, 0),
woosh.Token(woosh.INDENT, '                    ', 1312, 0, 1312, 20),
woosh.Token(woosh.NAME, 'if', 1312, 20, 1312, 22),
woosh.Token(woosh.NAME, 'val', 1312, 23, 1312, 26),
woosh.Token(woosh.OP, ':', 1312, 26, 1312, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1312, 27, 1313, 0),
woosh.Token(woosh.INDENT, '                        ', 1313, 0, 1313, 24),
woosh.Token(woosh.NAME, 'self', 1313, 24, 1313, 28),
woosh.Token(woosh.OP, '.', 1313, 28, 1313, 29),
woosh.Token(woosh.NAME, 'optionflags', 1313, 29, 1313, 40),
woosh.Token(woosh.OP, '|=', 1313, 41, 1313, 43),
woosh.Token(woosh.NAME, 'optionflag', 1313, 44, 1313, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1313, 54, 1314, 0),
woosh.Token(woosh.DEDENT, '                    ', 1314, 0, 1314, 20),
woosh.Token(woosh.NAME, 'else', 1314, 20, 1314, 24),
woosh.Token(woosh.OP, ':', 1314, 24, 1314, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1314, 25, 1315, 0),
woosh.Token(woosh.INDENT, '                        ', 1315, 0, 1315, 24),
woosh.Token(woosh.NAME, 'self', 1315, 24, 1315, 28),
woosh.Token(woosh.OP, '.', 1315, 28, 1315, 29),
woosh.Token(woosh.NAME, 'optionflags', 1315, 29, 1315, 40),
woosh.Token(woosh.OP, '&=', 1315, 41, 1315, 43),
woosh.Token(woosh.OP, '~', 1315, 44, 1315, 45),
woosh.Token(woosh.NAME, 'optionflag', 1315, 45, 1315, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1315, 55, 1316, 0),
woosh.Token(woosh.COMMENT, "# If 'SKIP' is set, then skip this example.", 1317, 12, 1317, 55),
woosh.Token(woosh.DEDENT, '            ', 1318, 0, 1318, 12),
woosh.Token(woosh.DEDENT, '', 1318, 12, 1318, 12),
woosh.Token(woosh.DEDENT, '', 1318, 12, 1318, 12),
woosh.Token(woosh.NAME, 'if', 1318, 12, 1318, 14),
woosh.Token(woosh.NAME, 'self', 1318, 15, 1318, 19),
woosh.Token(woosh.OP, '.', 1318, 19, 1318, 20),
woosh.Token(woosh.NAME, 'optionflags', 1318, 20, 1318, 31),
woosh.Token(woosh.OP, '&', 1318, 32, 1318, 33),
woosh.Token(woosh.NAME, 'SKIP', 1318, 34, 1318, 38),
woosh.Token(woosh.OP, ':', 1318, 38, 1318, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1318, 39, 1319, 0),
woosh.Token(woosh.INDENT, '                ', 1319, 0, 1319, 16),
woosh.Token(woosh.NAME, 'continue', 1319, 16, 1319, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1319, 24, 1320, 0),
woosh.Token(woosh.COMMENT, '# Record that we started this example.', 1321, 12, 1321, 50),
woosh.Token(woosh.DEDENT, '            ', 1322, 0, 1322, 12),
woosh.Token(woosh.NAME, 'tries', 1322, 12, 1322, 17),
woosh.Token(woosh.OP, '+=', 1322, 18, 1322, 20),
woosh.Token(woosh.NUMBER, '1', 1322, 21, 1322, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1322, 22, 1323, 0),
woosh.Token(woosh.NAME, 'if', 1323, 12, 1323, 14),
woosh.Token(woosh.NAME, 'not', 1323, 15, 1323, 18),
woosh.Token(woosh.NAME, 'quiet', 1323, 19, 1323, 24),
woosh.Token(woosh.OP, ':', 1323, 24, 1323, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1323, 25, 1324, 0),
woosh.Token(woosh.INDENT, '                ', 1324, 0, 1324, 16),
woosh.Token(woosh.NAME, 'self', 1324, 16, 1324, 20),
woosh.Token(woosh.OP, '.', 1324, 20, 1324, 21),
woosh.Token(woosh.NAME, 'report_start', 1324, 21, 1324, 33),
woosh.Token(woosh.OP, '(', 1324, 33, 1324, 34),
woosh.Token(woosh.NAME, 'out', 1324, 34, 1324, 37),
woosh.Token(woosh.OP, ',', 1324, 37, 1324, 38),
woosh.Token(woosh.NAME, 'test', 1324, 39, 1324, 43),
woosh.Token(woosh.OP, ',', 1324, 43, 1324, 44),
woosh.Token(woosh.NAME, 'example', 1324, 45, 1324, 52),
woosh.Token(woosh.OP, ')', 1324, 52, 1324, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1324, 53, 1325, 0),
woosh.Token(woosh.COMMENT, '# Use a special filename for compile(), so we can retrieve', 1326, 12, 1326, 70),
woosh.Token(woosh.COMMENT, '# the source code during interactive debugging (see', 1327, 12, 1327, 63),
woosh.Token(woosh.COMMENT, '# __patched_linecache_getlines).', 1328, 12, 1328, 44),
woosh.Token(woosh.DEDENT, '            ', 1329, 0, 1329, 12),
woosh.Token(woosh.NAME, 'filename', 1329, 12, 1329, 20),
woosh.Token(woosh.OP, '=', 1329, 21, 1329, 22),
woosh.Token(woosh.STRING, "'<doctest %s[%d]>'", 1329, 23, 1329, 41),
woosh.Token(woosh.OP, '%', 1329, 42, 1329, 43),
woosh.Token(woosh.OP, '(', 1329, 44, 1329, 45),
woosh.Token(woosh.NAME, 'test', 1329, 45, 1329, 49),
woosh.Token(woosh.OP, '.', 1329, 49, 1329, 50),
woosh.Token(woosh.NAME, 'name', 1329, 50, 1329, 54),
woosh.Token(woosh.OP, ',', 1329, 54, 1329, 55),
woosh.Token(woosh.NAME, 'examplenum', 1329, 56, 1329, 66),
woosh.Token(woosh.OP, ')', 1329, 66, 1329, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1329, 67, 1330, 0),
woosh.Token(woosh.COMMENT, '# Run the example in the given context (globs), and record', 1331, 12, 1331, 70),
woosh.Token(woosh.COMMENT, "# any exception that gets raised.  (But don't intercept", 1332, 12, 1332, 67),
woosh.Token(woosh.COMMENT, '# keyboard interrupts.)', 1333, 12, 1333, 35),
woosh.Token(woosh.NAME, 'try', 1334, 12, 1334, 15),
woosh.Token(woosh.OP, ':', 1334, 15, 1334, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1334, 16, 1335, 0),
woosh.Token(woosh.COMMENT, "# Don't blink!  This is where the user's code gets run.", 1335, 16, 1335, 71),
woosh.Token(woosh.INDENT, '                ', 1336, 0, 1336, 16),
woosh.Token(woosh.NAME, 'exec', 1336, 16, 1336, 20),
woosh.Token(woosh.OP, '(', 1336, 20, 1336, 21),
woosh.Token(woosh.NAME, 'compile', 1336, 21, 1336, 28),
woosh.Token(woosh.OP, '(', 1336, 28, 1336, 29),
woosh.Token(woosh.NAME, 'example', 1336, 29, 1336, 36),
woosh.Token(woosh.OP, '.', 1336, 36, 1336, 37),
woosh.Token(woosh.NAME, 'source', 1336, 37, 1336, 43),
woosh.Token(woosh.OP, ',', 1336, 43, 1336, 44),
woosh.Token(woosh.NAME, 'filename', 1336, 45, 1336, 53),
woosh.Token(woosh.OP, ',', 1336, 53, 1336, 54),
woosh.Token(woosh.STRING, '"single"', 1336, 55, 1336, 63),
woosh.Token(woosh.OP, ',', 1336, 63, 1336, 64),
woosh.Token(woosh.NAME, 'compileflags', 1337, 29, 1337, 41),
woosh.Token(woosh.OP, ',', 1337, 41, 1337, 42),
woosh.Token(woosh.NAME, 'True', 1337, 43, 1337, 47),
woosh.Token(woosh.OP, ')', 1337, 47, 1337, 48),
woosh.Token(woosh.OP, ',', 1337, 48, 1337, 49),
woosh.Token(woosh.NAME, 'test', 1337, 50, 1337, 54),
woosh.Token(woosh.OP, '.', 1337, 54, 1337, 55),
woosh.Token(woosh.NAME, 'globs', 1337, 55, 1337, 60),
woosh.Token(woosh.OP, ')', 1337, 60, 1337, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1337, 61, 1338, 0),
woosh.Token(woosh.NAME, 'self', 1338, 16, 1338, 20),
woosh.Token(woosh.OP, '.', 1338, 20, 1338, 21),
woosh.Token(woosh.NAME, 'debugger', 1338, 21, 1338, 29),
woosh.Token(woosh.OP, '.', 1338, 29, 1338, 30),
woosh.Token(woosh.NAME, 'set_continue', 1338, 30, 1338, 42),
woosh.Token(woosh.OP, '(', 1338, 42, 1338, 43),
woosh.Token(woosh.OP, ')', 1338, 43, 1338, 44),
woosh.Token(woosh.COMMENT, '# ==== Example Finished ====', 1338, 45, 1338, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1338, 73, 1339, 0),
woosh.Token(woosh.NAME, 'exception', 1339, 16, 1339, 25),
woosh.Token(woosh.OP, '=', 1339, 26, 1339, 27),
woosh.Token(woosh.NAME, 'None', 1339, 28, 1339, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1339, 32, 1340, 0),
woosh.Token(woosh.DEDENT, '            ', 1340, 0, 1340, 12),
woosh.Token(woosh.NAME, 'except', 1340, 12, 1340, 18),
woosh.Token(woosh.NAME, 'KeyboardInterrupt', 1340, 19, 1340, 36),
woosh.Token(woosh.OP, ':', 1340, 36, 1340, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1340, 37, 1341, 0),
woosh.Token(woosh.INDENT, '                ', 1341, 0, 1341, 16),
woosh.Token(woosh.NAME, 'raise', 1341, 16, 1341, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1341, 21, 1342, 0),
woosh.Token(woosh.DEDENT, '            ', 1342, 0, 1342, 12),
woosh.Token(woosh.NAME, 'except', 1342, 12, 1342, 18),
woosh.Token(woosh.OP, ':', 1342, 18, 1342, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1342, 19, 1343, 0),
woosh.Token(woosh.INDENT, '                ', 1343, 0, 1343, 16),
woosh.Token(woosh.NAME, 'exception', 1343, 16, 1343, 25),
woosh.Token(woosh.OP, '=', 1343, 26, 1343, 27),
woosh.Token(woosh.NAME, 'sys', 1343, 28, 1343, 31),
woosh.Token(woosh.OP, '.', 1343, 31, 1343, 32),
woosh.Token(woosh.NAME, 'exc_info', 1343, 32, 1343, 40),
woosh.Token(woosh.OP, '(', 1343, 40, 1343, 41),
woosh.Token(woosh.OP, ')', 1343, 41, 1343, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1343, 42, 1344, 0),
woosh.Token(woosh.NAME, 'self', 1344, 16, 1344, 20),
woosh.Token(woosh.OP, '.', 1344, 20, 1344, 21),
woosh.Token(woosh.NAME, 'debugger', 1344, 21, 1344, 29),
woosh.Token(woosh.OP, '.', 1344, 29, 1344, 30),
woosh.Token(woosh.NAME, 'set_continue', 1344, 30, 1344, 42),
woosh.Token(woosh.OP, '(', 1344, 42, 1344, 43),
woosh.Token(woosh.OP, ')', 1344, 43, 1344, 44),
woosh.Token(woosh.COMMENT, '# ==== Example Finished ====', 1344, 45, 1344, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1344, 73, 1345, 0),
woosh.Token(woosh.DEDENT, '            ', 1346, 0, 1346, 12),
woosh.Token(woosh.NAME, 'got', 1346, 12, 1346, 15),
woosh.Token(woosh.OP, '=', 1346, 16, 1346, 17),
woosh.Token(woosh.NAME, 'self', 1346, 18, 1346, 22),
woosh.Token(woosh.OP, '.', 1346, 22, 1346, 23),
woosh.Token(woosh.NAME, '_fakeout', 1346, 23, 1346, 31),
woosh.Token(woosh.OP, '.', 1346, 31, 1346, 32),
woosh.Token(woosh.NAME, 'getvalue', 1346, 32, 1346, 40),
woosh.Token(woosh.OP, '(', 1346, 40, 1346, 41),
woosh.Token(woosh.OP, ')', 1346, 41, 1346, 42),
woosh.Token(woosh.COMMENT, '# the actual output', 1346, 44, 1346, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1346, 63, 1347, 0),
woosh.Token(woosh.NAME, 'self', 1347, 12, 1347, 16),
woosh.Token(woosh.OP, '.', 1347, 16, 1347, 17),
woosh.Token(woosh.NAME, '_fakeout', 1347, 17, 1347, 25),
woosh.Token(woosh.OP, '.', 1347, 25, 1347, 26),
woosh.Token(woosh.NAME, 'truncate', 1347, 26, 1347, 34),
woosh.Token(woosh.OP, '(', 1347, 34, 1347, 35),
woosh.Token(woosh.NUMBER, '0', 1347, 35, 1347, 36),
woosh.Token(woosh.OP, ')', 1347, 36, 1347, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1347, 37, 1348, 0),
woosh.Token(woosh.NAME, 'outcome', 1348, 12, 1348, 19),
woosh.Token(woosh.OP, '=', 1348, 20, 1348, 21),
woosh.Token(woosh.NAME, 'FAILURE', 1348, 22, 1348, 29),
woosh.Token(woosh.COMMENT, '# guilty until proved innocent or insane', 1348, 32, 1348, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1348, 72, 1349, 0),
woosh.Token(woosh.COMMENT, '# If the example executed without raising any exceptions,', 1350, 12, 1350, 69),
woosh.Token(woosh.COMMENT, '# verify its output.', 1351, 12, 1351, 32),
woosh.Token(woosh.NAME, 'if', 1352, 12, 1352, 14),
woosh.Token(woosh.NAME, 'exception', 1352, 15, 1352, 24),
woosh.Token(woosh.NAME, 'is', 1352, 25, 1352, 27),
woosh.Token(woosh.NAME, 'None', 1352, 28, 1352, 32),
woosh.Token(woosh.OP, ':', 1352, 32, 1352, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1352, 33, 1353, 0),
woosh.Token(woosh.INDENT, '                ', 1353, 0, 1353, 16),
woosh.Token(woosh.NAME, 'if', 1353, 16, 1353, 18),
woosh.Token(woosh.NAME, 'check', 1353, 19, 1353, 24),
woosh.Token(woosh.OP, '(', 1353, 24, 1353, 25),
woosh.Token(woosh.NAME, 'example', 1353, 25, 1353, 32),
woosh.Token(woosh.OP, '.', 1353, 32, 1353, 33),
woosh.Token(woosh.NAME, 'want', 1353, 33, 1353, 37),
woosh.Token(woosh.OP, ',', 1353, 37, 1353, 38),
woosh.Token(woosh.NAME, 'got', 1353, 39, 1353, 42),
woosh.Token(woosh.OP, ',', 1353, 42, 1353, 43),
woosh.Token(woosh.NAME, 'self', 1353, 44, 1353, 48),
woosh.Token(woosh.OP, '.', 1353, 48, 1353, 49),
woosh.Token(woosh.NAME, 'optionflags', 1353, 49, 1353, 60),
woosh.Token(woosh.OP, ')', 1353, 60, 1353, 61),
woosh.Token(woosh.OP, ':', 1353, 61, 1353, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1353, 62, 1354, 0),
woosh.Token(woosh.INDENT, '                    ', 1354, 0, 1354, 20),
woosh.Token(woosh.NAME, 'outcome', 1354, 20, 1354, 27),
woosh.Token(woosh.OP, '=', 1354, 28, 1354, 29),
woosh.Token(woosh.NAME, 'SUCCESS', 1354, 30, 1354, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1354, 37, 1355, 0),
woosh.Token(woosh.COMMENT, '# The example raised an exception:  check if it was expected.', 1356, 12, 1356, 73),
woosh.Token(woosh.DEDENT, '            ', 1357, 0, 1357, 12),
woosh.Token(woosh.DEDENT, '', 1357, 12, 1357, 12),
woosh.Token(woosh.NAME, 'else', 1357, 12, 1357, 16),
woosh.Token(woosh.OP, ':', 1357, 16, 1357, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1357, 17, 1358, 0),
woosh.Token(woosh.INDENT, '                ', 1358, 0, 1358, 16),
woosh.Token(woosh.NAME, 'exc_msg', 1358, 16, 1358, 23),
woosh.Token(woosh.OP, '=', 1358, 24, 1358, 25),
woosh.Token(woosh.NAME, 'traceback', 1358, 26, 1358, 35),
woosh.Token(woosh.OP, '.', 1358, 35, 1358, 36),
woosh.Token(woosh.NAME, 'format_exception_only', 1358, 36, 1358, 57),
woosh.Token(woosh.OP, '(', 1358, 57, 1358, 58),
woosh.Token(woosh.OP, '*', 1358, 58, 1358, 59),
woosh.Token(woosh.NAME, 'exception', 1358, 59, 1358, 68),
woosh.Token(woosh.OP, '[', 1358, 68, 1358, 69),
woosh.Token(woosh.OP, ':', 1358, 69, 1358, 70),
woosh.Token(woosh.NUMBER, '2', 1358, 70, 1358, 71),
woosh.Token(woosh.OP, ']', 1358, 71, 1358, 72),
woosh.Token(woosh.OP, ')', 1358, 72, 1358, 73),
woosh.Token(woosh.OP, '[', 1358, 73, 1358, 74),
woosh.Token(woosh.OP, '-', 1358, 74, 1358, 75),
woosh.Token(woosh.NUMBER, '1', 1358, 75, 1358, 76),
woosh.Token(woosh.OP, ']', 1358, 76, 1358, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 1358, 77, 1359, 0),
woosh.Token(woosh.NAME, 'if', 1359, 16, 1359, 18),
woosh.Token(woosh.NAME, 'not', 1359, 19, 1359, 22),
woosh.Token(woosh.NAME, 'quiet', 1359, 23, 1359, 28),
woosh.Token(woosh.OP, ':', 1359, 28, 1359, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1359, 29, 1360, 0),
woosh.Token(woosh.INDENT, '                    ', 1360, 0, 1360, 20),
woosh.Token(woosh.NAME, 'got', 1360, 20, 1360, 23),
woosh.Token(woosh.OP, '+=', 1360, 24, 1360, 26),
woosh.Token(woosh.NAME, '_exception_traceback', 1360, 27, 1360, 47),
woosh.Token(woosh.OP, '(', 1360, 47, 1360, 48),
woosh.Token(woosh.NAME, 'exception', 1360, 48, 1360, 57),
woosh.Token(woosh.OP, ')', 1360, 57, 1360, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1360, 58, 1361, 0),
woosh.Token(woosh.COMMENT, "# If `example.exc_msg` is None, then we weren't expecting", 1362, 16, 1362, 73),
woosh.Token(woosh.COMMENT, '# an exception.', 1363, 16, 1363, 31),
woosh.Token(woosh.DEDENT, '                ', 1364, 0, 1364, 16),
woosh.Token(woosh.NAME, 'if', 1364, 16, 1364, 18),
woosh.Token(woosh.NAME, 'example', 1364, 19, 1364, 26),
woosh.Token(woosh.OP, '.', 1364, 26, 1364, 27),
woosh.Token(woosh.NAME, 'exc_msg', 1364, 27, 1364, 34),
woosh.Token(woosh.NAME, 'is', 1364, 35, 1364, 37),
woosh.Token(woosh.NAME, 'None', 1364, 38, 1364, 42),
woosh.Token(woosh.OP, ':', 1364, 42, 1364, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1364, 43, 1365, 0),
woosh.Token(woosh.INDENT, '                    ', 1365, 0, 1365, 20),
woosh.Token(woosh.NAME, 'outcome', 1365, 20, 1365, 27),
woosh.Token(woosh.OP, '=', 1365, 28, 1365, 29),
woosh.Token(woosh.NAME, 'BOOM', 1365, 30, 1365, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1365, 34, 1366, 0),
woosh.Token(woosh.COMMENT, '# We expected an exception:  see whether it matches.', 1367, 16, 1367, 68),
woosh.Token(woosh.DEDENT, '                ', 1368, 0, 1368, 16),
woosh.Token(woosh.NAME, 'elif', 1368, 16, 1368, 20),
woosh.Token(woosh.NAME, 'check', 1368, 21, 1368, 26),
woosh.Token(woosh.OP, '(', 1368, 26, 1368, 27),
woosh.Token(woosh.NAME, 'example', 1368, 27, 1368, 34),
woosh.Token(woosh.OP, '.', 1368, 34, 1368, 35),
woosh.Token(woosh.NAME, 'exc_msg', 1368, 35, 1368, 42),
woosh.Token(woosh.OP, ',', 1368, 42, 1368, 43),
woosh.Token(woosh.NAME, 'exc_msg', 1368, 44, 1368, 51),
woosh.Token(woosh.OP, ',', 1368, 51, 1368, 52),
woosh.Token(woosh.NAME, 'self', 1368, 53, 1368, 57),
woosh.Token(woosh.OP, '.', 1368, 57, 1368, 58),
woosh.Token(woosh.NAME, 'optionflags', 1368, 58, 1368, 69),
woosh.Token(woosh.OP, ')', 1368, 69, 1368, 70),
woosh.Token(woosh.OP, ':', 1368, 70, 1368, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1368, 71, 1369, 0),
woosh.Token(woosh.INDENT, '                    ', 1369, 0, 1369, 20),
woosh.Token(woosh.NAME, 'outcome', 1369, 20, 1369, 27),
woosh.Token(woosh.OP, '=', 1369, 28, 1369, 29),
woosh.Token(woosh.NAME, 'SUCCESS', 1369, 30, 1369, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1369, 37, 1370, 0),
woosh.Token(woosh.COMMENT, "# Another chance if they didn't care about the detail.", 1371, 16, 1371, 70),
woosh.Token(woosh.DEDENT, '                ', 1372, 0, 1372, 16),
woosh.Token(woosh.NAME, 'elif', 1372, 16, 1372, 20),
woosh.Token(woosh.NAME, 'self', 1372, 21, 1372, 25),
woosh.Token(woosh.OP, '.', 1372, 25, 1372, 26),
woosh.Token(woosh.NAME, 'optionflags', 1372, 26, 1372, 37),
woosh.Token(woosh.OP, '&', 1372, 38, 1372, 39),
woosh.Token(woosh.NAME, 'IGNORE_EXCEPTION_DETAIL', 1372, 40, 1372, 63),
woosh.Token(woosh.OP, ':', 1372, 63, 1372, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1372, 64, 1373, 0),
woosh.Token(woosh.INDENT, '                    ', 1373, 0, 1373, 20),
woosh.Token(woosh.NAME, 'if', 1373, 20, 1373, 22),
woosh.Token(woosh.NAME, 'check', 1373, 23, 1373, 28),
woosh.Token(woosh.OP, '(', 1373, 28, 1373, 29),
woosh.Token(woosh.NAME, '_strip_exception_details', 1373, 29, 1373, 53),
woosh.Token(woosh.OP, '(', 1373, 53, 1373, 54),
woosh.Token(woosh.NAME, 'example', 1373, 54, 1373, 61),
woosh.Token(woosh.OP, '.', 1373, 61, 1373, 62),
woosh.Token(woosh.NAME, 'exc_msg', 1373, 62, 1373, 69),
woosh.Token(woosh.OP, ')', 1373, 69, 1373, 70),
woosh.Token(woosh.OP, ',', 1373, 70, 1373, 71),
woosh.Token(woosh.NAME, '_strip_exception_details', 1374, 29, 1374, 53),
woosh.Token(woosh.OP, '(', 1374, 53, 1374, 54),
woosh.Token(woosh.NAME, 'exc_msg', 1374, 54, 1374, 61),
woosh.Token(woosh.OP, ')', 1374, 61, 1374, 62),
woosh.Token(woosh.OP, ',', 1374, 62, 1374, 63),
woosh.Token(woosh.NAME, 'self', 1375, 29, 1375, 33),
woosh.Token(woosh.OP, '.', 1375, 33, 1375, 34),
woosh.Token(woosh.NAME, 'optionflags', 1375, 34, 1375, 45),
woosh.Token(woosh.OP, ')', 1375, 45, 1375, 46),
woosh.Token(woosh.OP, ':', 1375, 46, 1375, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1375, 47, 1376, 0),
woosh.Token(woosh.INDENT, '                        ', 1376, 0, 1376, 24),
woosh.Token(woosh.NAME, 'outcome', 1376, 24, 1376, 31),
woosh.Token(woosh.OP, '=', 1376, 32, 1376, 33),
woosh.Token(woosh.NAME, 'SUCCESS', 1376, 34, 1376, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1376, 41, 1377, 0),
woosh.Token(woosh.COMMENT, '# Report the outcome.', 1378, 12, 1378, 33),
woosh.Token(woosh.DEDENT, '            ', 1379, 0, 1379, 12),
woosh.Token(woosh.DEDENT, '', 1379, 12, 1379, 12),
woosh.Token(woosh.DEDENT, '', 1379, 12, 1379, 12),
woosh.Token(woosh.NAME, 'if', 1379, 12, 1379, 14),
woosh.Token(woosh.NAME, 'outcome', 1379, 15, 1379, 22),
woosh.Token(woosh.NAME, 'is', 1379, 23, 1379, 25),
woosh.Token(woosh.NAME, 'SUCCESS', 1379, 26, 1379, 33),
woosh.Token(woosh.OP, ':', 1379, 33, 1379, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1379, 34, 1380, 0),
woosh.Token(woosh.INDENT, '                ', 1380, 0, 1380, 16),
woosh.Token(woosh.NAME, 'if', 1380, 16, 1380, 18),
woosh.Token(woosh.NAME, 'not', 1380, 19, 1380, 22),
woosh.Token(woosh.NAME, 'quiet', 1380, 23, 1380, 28),
woosh.Token(woosh.OP, ':', 1380, 28, 1380, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1380, 29, 1381, 0),
woosh.Token(woosh.INDENT, '                    ', 1381, 0, 1381, 20),
woosh.Token(woosh.NAME, 'self', 1381, 20, 1381, 24),
woosh.Token(woosh.OP, '.', 1381, 24, 1381, 25),
woosh.Token(woosh.NAME, 'report_success', 1381, 25, 1381, 39),
woosh.Token(woosh.OP, '(', 1381, 39, 1381, 40),
woosh.Token(woosh.NAME, 'out', 1381, 40, 1381, 43),
woosh.Token(woosh.OP, ',', 1381, 43, 1381, 44),
woosh.Token(woosh.NAME, 'test', 1381, 45, 1381, 49),
woosh.Token(woosh.OP, ',', 1381, 49, 1381, 50),
woosh.Token(woosh.NAME, 'example', 1381, 51, 1381, 58),
woosh.Token(woosh.OP, ',', 1381, 58, 1381, 59),
woosh.Token(woosh.NAME, 'got', 1381, 60, 1381, 63),
woosh.Token(woosh.OP, ')', 1381, 63, 1381, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1381, 64, 1382, 0),
woosh.Token(woosh.DEDENT, '            ', 1382, 0, 1382, 12),
woosh.Token(woosh.DEDENT, '', 1382, 12, 1382, 12),
woosh.Token(woosh.NAME, 'elif', 1382, 12, 1382, 16),
woosh.Token(woosh.NAME, 'outcome', 1382, 17, 1382, 24),
woosh.Token(woosh.NAME, 'is', 1382, 25, 1382, 27),
woosh.Token(woosh.NAME, 'FAILURE', 1382, 28, 1382, 35),
woosh.Token(woosh.OP, ':', 1382, 35, 1382, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1382, 36, 1383, 0),
woosh.Token(woosh.INDENT, '                ', 1383, 0, 1383, 16),
woosh.Token(woosh.NAME, 'if', 1383, 16, 1383, 18),
woosh.Token(woosh.NAME, 'not', 1383, 19, 1383, 22),
woosh.Token(woosh.NAME, 'quiet', 1383, 23, 1383, 28),
woosh.Token(woosh.OP, ':', 1383, 28, 1383, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1383, 29, 1384, 0),
woosh.Token(woosh.INDENT, '                    ', 1384, 0, 1384, 20),
woosh.Token(woosh.NAME, 'self', 1384, 20, 1384, 24),
woosh.Token(woosh.OP, '.', 1384, 24, 1384, 25),
woosh.Token(woosh.NAME, 'report_failure', 1384, 25, 1384, 39),
woosh.Token(woosh.OP, '(', 1384, 39, 1384, 40),
woosh.Token(woosh.NAME, 'out', 1384, 40, 1384, 43),
woosh.Token(woosh.OP, ',', 1384, 43, 1384, 44),
woosh.Token(woosh.NAME, 'test', 1384, 45, 1384, 49),
woosh.Token(woosh.OP, ',', 1384, 49, 1384, 50),
woosh.Token(woosh.NAME, 'example', 1384, 51, 1384, 58),
woosh.Token(woosh.OP, ',', 1384, 58, 1384, 59),
woosh.Token(woosh.NAME, 'got', 1384, 60, 1384, 63),
woosh.Token(woosh.OP, ')', 1384, 63, 1384, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1384, 64, 1385, 0),
woosh.Token(woosh.DEDENT, '                ', 1385, 0, 1385, 16),
woosh.Token(woosh.NAME, 'failures', 1385, 16, 1385, 24),
woosh.Token(woosh.OP, '+=', 1385, 25, 1385, 27),
woosh.Token(woosh.NUMBER, '1', 1385, 28, 1385, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1385, 29, 1386, 0),
woosh.Token(woosh.DEDENT, '            ', 1386, 0, 1386, 12),
woosh.Token(woosh.NAME, 'elif', 1386, 12, 1386, 16),
woosh.Token(woosh.NAME, 'outcome', 1386, 17, 1386, 24),
woosh.Token(woosh.NAME, 'is', 1386, 25, 1386, 27),
woosh.Token(woosh.NAME, 'BOOM', 1386, 28, 1386, 32),
woosh.Token(woosh.OP, ':', 1386, 32, 1386, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1386, 33, 1387, 0),
woosh.Token(woosh.INDENT, '                ', 1387, 0, 1387, 16),
woosh.Token(woosh.NAME, 'if', 1387, 16, 1387, 18),
woosh.Token(woosh.NAME, 'not', 1387, 19, 1387, 22),
woosh.Token(woosh.NAME, 'quiet', 1387, 23, 1387, 28),
woosh.Token(woosh.OP, ':', 1387, 28, 1387, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1387, 29, 1388, 0),
woosh.Token(woosh.INDENT, '                    ', 1388, 0, 1388, 20),
woosh.Token(woosh.NAME, 'self', 1388, 20, 1388, 24),
woosh.Token(woosh.OP, '.', 1388, 24, 1388, 25),
woosh.Token(woosh.NAME, 'report_unexpected_exception', 1388, 25, 1388, 52),
woosh.Token(woosh.OP, '(', 1388, 52, 1388, 53),
woosh.Token(woosh.NAME, 'out', 1388, 53, 1388, 56),
woosh.Token(woosh.OP, ',', 1388, 56, 1388, 57),
woosh.Token(woosh.NAME, 'test', 1388, 58, 1388, 62),
woosh.Token(woosh.OP, ',', 1388, 62, 1388, 63),
woosh.Token(woosh.NAME, 'example', 1388, 64, 1388, 71),
woosh.Token(woosh.OP, ',', 1388, 71, 1388, 72),
woosh.Token(woosh.NAME, 'exception', 1389, 53, 1389, 62),
woosh.Token(woosh.OP, ')', 1389, 62, 1389, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1389, 63, 1390, 0),
woosh.Token(woosh.DEDENT, '                ', 1390, 0, 1390, 16),
woosh.Token(woosh.NAME, 'failures', 1390, 16, 1390, 24),
woosh.Token(woosh.OP, '+=', 1390, 25, 1390, 27),
woosh.Token(woosh.NUMBER, '1', 1390, 28, 1390, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1390, 29, 1391, 0),
woosh.Token(woosh.DEDENT, '            ', 1391, 0, 1391, 12),
woosh.Token(woosh.NAME, 'else', 1391, 12, 1391, 16),
woosh.Token(woosh.OP, ':', 1391, 16, 1391, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1391, 17, 1392, 0),
woosh.Token(woosh.INDENT, '                ', 1392, 0, 1392, 16),
woosh.Token(woosh.NAME, 'assert', 1392, 16, 1392, 22),
woosh.Token(woosh.NAME, 'False', 1392, 23, 1392, 28),
woosh.Token(woosh.OP, ',', 1392, 28, 1392, 29),
woosh.Token(woosh.OP, '(', 1392, 30, 1392, 31),
woosh.Token(woosh.STRING, '"unknown outcome"', 1392, 31, 1392, 48),
woosh.Token(woosh.OP, ',', 1392, 48, 1392, 49),
woosh.Token(woosh.NAME, 'outcome', 1392, 50, 1392, 57),
woosh.Token(woosh.OP, ')', 1392, 57, 1392, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1392, 58, 1393, 0),
woosh.Token(woosh.DEDENT, '            ', 1394, 0, 1394, 12),
woosh.Token(woosh.NAME, 'if', 1394, 12, 1394, 14),
woosh.Token(woosh.NAME, 'failures', 1394, 15, 1394, 23),
woosh.Token(woosh.NAME, 'and', 1394, 24, 1394, 27),
woosh.Token(woosh.NAME, 'self', 1394, 28, 1394, 32),
woosh.Token(woosh.OP, '.', 1394, 32, 1394, 33),
woosh.Token(woosh.NAME, 'optionflags', 1394, 33, 1394, 44),
woosh.Token(woosh.OP, '&', 1394, 45, 1394, 46),
woosh.Token(woosh.NAME, 'FAIL_FAST', 1394, 47, 1394, 56),
woosh.Token(woosh.OP, ':', 1394, 56, 1394, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1394, 57, 1395, 0),
woosh.Token(woosh.INDENT, '                ', 1395, 0, 1395, 16),
woosh.Token(woosh.NAME, 'break', 1395, 16, 1395, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1395, 21, 1396, 0),
woosh.Token(woosh.COMMENT, '# Restore the option flags (in case they were modified)', 1397, 8, 1397, 63),
woosh.Token(woosh.DEDENT, '        ', 1398, 0, 1398, 8),
woosh.Token(woosh.DEDENT, '', 1398, 8, 1398, 8),
woosh.Token(woosh.NAME, 'self', 1398, 8, 1398, 12),
woosh.Token(woosh.OP, '.', 1398, 12, 1398, 13),
woosh.Token(woosh.NAME, 'optionflags', 1398, 13, 1398, 24),
woosh.Token(woosh.OP, '=', 1398, 25, 1398, 26),
woosh.Token(woosh.NAME, 'original_optionflags', 1398, 27, 1398, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1398, 47, 1399, 0),
woosh.Token(woosh.COMMENT, '# Record and return the number of failures and tries.', 1400, 8, 1400, 61),
woosh.Token(woosh.NAME, 'self', 1401, 8, 1401, 12),
woosh.Token(woosh.OP, '.', 1401, 12, 1401, 13),
woosh.Token(woosh.NAME, '__record_outcome', 1401, 13, 1401, 29),
woosh.Token(woosh.OP, '(', 1401, 29, 1401, 30),
woosh.Token(woosh.NAME, 'test', 1401, 30, 1401, 34),
woosh.Token(woosh.OP, ',', 1401, 34, 1401, 35),
woosh.Token(woosh.NAME, 'failures', 1401, 36, 1401, 44),
woosh.Token(woosh.OP, ',', 1401, 44, 1401, 45),
woosh.Token(woosh.NAME, 'tries', 1401, 46, 1401, 51),
woosh.Token(woosh.OP, ')', 1401, 51, 1401, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1401, 52, 1402, 0),
woosh.Token(woosh.NAME, 'return', 1402, 8, 1402, 14),
woosh.Token(woosh.NAME, 'TestResults', 1402, 15, 1402, 26),
woosh.Token(woosh.OP, '(', 1402, 26, 1402, 27),
woosh.Token(woosh.NAME, 'failures', 1402, 27, 1402, 35),
woosh.Token(woosh.OP, ',', 1402, 35, 1402, 36),
woosh.Token(woosh.NAME, 'tries', 1402, 37, 1402, 42),
woosh.Token(woosh.OP, ')', 1402, 42, 1402, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1402, 43, 1403, 0),
woosh.Token(woosh.DEDENT, '    ', 1404, 0, 1404, 4),
woosh.Token(woosh.NAME, 'def', 1404, 4, 1404, 7),
woosh.Token(woosh.NAME, '__record_outcome', 1404, 8, 1404, 24),
woosh.Token(woosh.OP, '(', 1404, 24, 1404, 25),
woosh.Token(woosh.NAME, 'self', 1404, 25, 1404, 29),
woosh.Token(woosh.OP, ',', 1404, 29, 1404, 30),
woosh.Token(woosh.NAME, 'test', 1404, 31, 1404, 35),
woosh.Token(woosh.OP, ',', 1404, 35, 1404, 36),
woosh.Token(woosh.NAME, 'f', 1404, 37, 1404, 38),
woosh.Token(woosh.OP, ',', 1404, 38, 1404, 39),
woosh.Token(woosh.NAME, 't', 1404, 40, 1404, 41),
woosh.Token(woosh.OP, ')', 1404, 41, 1404, 42),
woosh.Token(woosh.OP, ':', 1404, 42, 1404, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1404, 43, 1405, 0),
woosh.Token(woosh.INDENT, '        ', 1405, 0, 1405, 8),
woosh.Token(woosh.STRING, '"""\r\n        Record the fact that the given DocTest (`test`) generated `f`\r\n        failures out of `t` tried examples.\r\n        """', 1405, 8, 1408, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1408, 11, 1409, 0),
woosh.Token(woosh.NAME, 'f2', 1409, 8, 1409, 10),
woosh.Token(woosh.OP, ',', 1409, 10, 1409, 11),
woosh.Token(woosh.NAME, 't2', 1409, 12, 1409, 14),
woosh.Token(woosh.OP, '=', 1409, 15, 1409, 16),
woosh.Token(woosh.NAME, 'self', 1409, 17, 1409, 21),
woosh.Token(woosh.OP, '.', 1409, 21, 1409, 22),
woosh.Token(woosh.NAME, '_name2ft', 1409, 22, 1409, 30),
woosh.Token(woosh.OP, '.', 1409, 30, 1409, 31),
woosh.Token(woosh.NAME, 'get', 1409, 31, 1409, 34),
woosh.Token(woosh.OP, '(', 1409, 34, 1409, 35),
woosh.Token(woosh.NAME, 'test', 1409, 35, 1409, 39),
woosh.Token(woosh.OP, '.', 1409, 39, 1409, 40),
woosh.Token(woosh.NAME, 'name', 1409, 40, 1409, 44),
woosh.Token(woosh.OP, ',', 1409, 44, 1409, 45),
woosh.Token(woosh.OP, '(', 1409, 46, 1409, 47),
woosh.Token(woosh.NUMBER, '0', 1409, 47, 1409, 48),
woosh.Token(woosh.OP, ',', 1409, 48, 1409, 49),
woosh.Token(woosh.NUMBER, '0', 1409, 49, 1409, 50),
woosh.Token(woosh.OP, ')', 1409, 50, 1409, 51),
woosh.Token(woosh.OP, ')', 1409, 51, 1409, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1409, 52, 1410, 0),
woosh.Token(woosh.NAME, 'self', 1410, 8, 1410, 12),
woosh.Token(woosh.OP, '.', 1410, 12, 1410, 13),
woosh.Token(woosh.NAME, '_name2ft', 1410, 13, 1410, 21),
woosh.Token(woosh.OP, '[', 1410, 21, 1410, 22),
woosh.Token(woosh.NAME, 'test', 1410, 22, 1410, 26),
woosh.Token(woosh.OP, '.', 1410, 26, 1410, 27),
woosh.Token(woosh.NAME, 'name', 1410, 27, 1410, 31),
woosh.Token(woosh.OP, ']', 1410, 31, 1410, 32),
woosh.Token(woosh.OP, '=', 1410, 33, 1410, 34),
woosh.Token(woosh.OP, '(', 1410, 35, 1410, 36),
woosh.Token(woosh.NAME, 'f', 1410, 36, 1410, 37),
woosh.Token(woosh.OP, '+', 1410, 37, 1410, 38),
woosh.Token(woosh.NAME, 'f2', 1410, 38, 1410, 40),
woosh.Token(woosh.OP, ',', 1410, 40, 1410, 41),
woosh.Token(woosh.NAME, 't', 1410, 42, 1410, 43),
woosh.Token(woosh.OP, '+', 1410, 43, 1410, 44),
woosh.Token(woosh.NAME, 't2', 1410, 44, 1410, 46),
woosh.Token(woosh.OP, ')', 1410, 46, 1410, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1410, 47, 1411, 0),
woosh.Token(woosh.NAME, 'self', 1411, 8, 1411, 12),
woosh.Token(woosh.OP, '.', 1411, 12, 1411, 13),
woosh.Token(woosh.NAME, 'failures', 1411, 13, 1411, 21),
woosh.Token(woosh.OP, '+=', 1411, 22, 1411, 24),
woosh.Token(woosh.NAME, 'f', 1411, 25, 1411, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1411, 26, 1412, 0),
woosh.Token(woosh.NAME, 'self', 1412, 8, 1412, 12),
woosh.Token(woosh.OP, '.', 1412, 12, 1412, 13),
woosh.Token(woosh.NAME, 'tries', 1412, 13, 1412, 18),
woosh.Token(woosh.OP, '+=', 1412, 19, 1412, 21),
woosh.Token(woosh.NAME, 't', 1412, 22, 1412, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1412, 23, 1413, 0),
woosh.Token(woosh.DEDENT, '    ', 1414, 0, 1414, 4),
woosh.Token(woosh.NAME, '__LINECACHE_FILENAME_RE', 1414, 4, 1414, 27),
woosh.Token(woosh.OP, '=', 1414, 28, 1414, 29),
woosh.Token(woosh.NAME, 're', 1414, 30, 1414, 32),
woosh.Token(woosh.OP, '.', 1414, 32, 1414, 33),
woosh.Token(woosh.NAME, 'compile', 1414, 33, 1414, 40),
woosh.Token(woosh.OP, '(', 1414, 40, 1414, 41),
woosh.Token(woosh.STRING, "r'<doctest '", 1414, 41, 1414, 53),
woosh.Token(woosh.STRING, "r'(?P<name>.+)'", 1415, 41, 1415, 56),
woosh.Token(woosh.STRING, "r'\\[(?P<examplenum>\\d+)\\]>$'", 1416, 41, 1416, 69),
woosh.Token(woosh.OP, ')', 1416, 69, 1416, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1416, 70, 1417, 0),
woosh.Token(woosh.NAME, 'def', 1417, 4, 1417, 7),
woosh.Token(woosh.NAME, '__patched_linecache_getlines', 1417, 8, 1417, 36),
woosh.Token(woosh.OP, '(', 1417, 36, 1417, 37),
woosh.Token(woosh.NAME, 'self', 1417, 37, 1417, 41),
woosh.Token(woosh.OP, ',', 1417, 41, 1417, 42),
woosh.Token(woosh.NAME, 'filename', 1417, 43, 1417, 51),
woosh.Token(woosh.OP, ',', 1417, 51, 1417, 52),
woosh.Token(woosh.NAME, 'module_globals', 1417, 53, 1417, 67),
woosh.Token(woosh.OP, '=', 1417, 67, 1417, 68),
woosh.Token(woosh.NAME, 'None', 1417, 68, 1417, 72),
woosh.Token(woosh.OP, ')', 1417, 72, 1417, 73),
woosh.Token(woosh.OP, ':', 1417, 73, 1417, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1417, 74, 1418, 0),
woosh.Token(woosh.INDENT, '        ', 1418, 0, 1418, 8),
woosh.Token(woosh.NAME, 'm', 1418, 8, 1418, 9),
woosh.Token(woosh.OP, '=', 1418, 10, 1418, 11),
woosh.Token(woosh.NAME, 'self', 1418, 12, 1418, 16),
woosh.Token(woosh.OP, '.', 1418, 16, 1418, 17),
woosh.Token(woosh.NAME, '__LINECACHE_FILENAME_RE', 1418, 17, 1418, 40),
woosh.Token(woosh.OP, '.', 1418, 40, 1418, 41),
woosh.Token(woosh.NAME, 'match', 1418, 41, 1418, 46),
woosh.Token(woosh.OP, '(', 1418, 46, 1418, 47),
woosh.Token(woosh.NAME, 'filename', 1418, 47, 1418, 55),
woosh.Token(woosh.OP, ')', 1418, 55, 1418, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1418, 56, 1419, 0),
woosh.Token(woosh.NAME, 'if', 1419, 8, 1419, 10),
woosh.Token(woosh.NAME, 'm', 1419, 11, 1419, 12),
woosh.Token(woosh.NAME, 'and', 1419, 13, 1419, 16),
woosh.Token(woosh.NAME, 'm', 1419, 17, 1419, 18),
woosh.Token(woosh.OP, '.', 1419, 18, 1419, 19),
woosh.Token(woosh.NAME, 'group', 1419, 19, 1419, 24),
woosh.Token(woosh.OP, '(', 1419, 24, 1419, 25),
woosh.Token(woosh.STRING, "'name'", 1419, 25, 1419, 31),
woosh.Token(woosh.OP, ')', 1419, 31, 1419, 32),
woosh.Token(woosh.OP, '==', 1419, 33, 1419, 35),
woosh.Token(woosh.NAME, 'self', 1419, 36, 1419, 40),
woosh.Token(woosh.OP, '.', 1419, 40, 1419, 41),
woosh.Token(woosh.NAME, 'test', 1419, 41, 1419, 45),
woosh.Token(woosh.OP, '.', 1419, 45, 1419, 46),
woosh.Token(woosh.NAME, 'name', 1419, 46, 1419, 50),
woosh.Token(woosh.OP, ':', 1419, 50, 1419, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1419, 51, 1420, 0),
woosh.Token(woosh.INDENT, '            ', 1420, 0, 1420, 12),
woosh.Token(woosh.NAME, 'example', 1420, 12, 1420, 19),
woosh.Token(woosh.OP, '=', 1420, 20, 1420, 21),
woosh.Token(woosh.NAME, 'self', 1420, 22, 1420, 26),
woosh.Token(woosh.OP, '.', 1420, 26, 1420, 27),
woosh.Token(woosh.NAME, 'test', 1420, 27, 1420, 31),
woosh.Token(woosh.OP, '.', 1420, 31, 1420, 32),
woosh.Token(woosh.NAME, 'examples', 1420, 32, 1420, 40),
woosh.Token(woosh.OP, '[', 1420, 40, 1420, 41),
woosh.Token(woosh.NAME, 'int', 1420, 41, 1420, 44),
woosh.Token(woosh.OP, '(', 1420, 44, 1420, 45),
woosh.Token(woosh.NAME, 'm', 1420, 45, 1420, 46),
woosh.Token(woosh.OP, '.', 1420, 46, 1420, 47),
woosh.Token(woosh.NAME, 'group', 1420, 47, 1420, 52),
woosh.Token(woosh.OP, '(', 1420, 52, 1420, 53),
woosh.Token(woosh.STRING, "'examplenum'", 1420, 53, 1420, 65),
woosh.Token(woosh.OP, ')', 1420, 65, 1420, 66),
woosh.Token(woosh.OP, ')', 1420, 66, 1420, 67),
woosh.Token(woosh.OP, ']', 1420, 67, 1420, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1420, 68, 1421, 0),
woosh.Token(woosh.NAME, 'return', 1421, 12, 1421, 18),
woosh.Token(woosh.NAME, 'example', 1421, 19, 1421, 26),
woosh.Token(woosh.OP, '.', 1421, 26, 1421, 27),
woosh.Token(woosh.NAME, 'source', 1421, 27, 1421, 33),
woosh.Token(woosh.OP, '.', 1421, 33, 1421, 34),
woosh.Token(woosh.NAME, 'splitlines', 1421, 34, 1421, 44),
woosh.Token(woosh.OP, '(', 1421, 44, 1421, 45),
woosh.Token(woosh.NAME, 'keepends', 1421, 45, 1421, 53),
woosh.Token(woosh.OP, '=', 1421, 53, 1421, 54),
woosh.Token(woosh.NAME, 'True', 1421, 54, 1421, 58),
woosh.Token(woosh.OP, ')', 1421, 58, 1421, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1421, 59, 1422, 0),
woosh.Token(woosh.DEDENT, '        ', 1422, 0, 1422, 8),
woosh.Token(woosh.NAME, 'else', 1422, 8, 1422, 12),
woosh.Token(woosh.OP, ':', 1422, 12, 1422, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1422, 13, 1423, 0),
woosh.Token(woosh.INDENT, '            ', 1423, 0, 1423, 12),
woosh.Token(woosh.NAME, 'return', 1423, 12, 1423, 18),
woosh.Token(woosh.NAME, 'self', 1423, 19, 1423, 23),
woosh.Token(woosh.OP, '.', 1423, 23, 1423, 24),
woosh.Token(woosh.NAME, 'save_linecache_getlines', 1423, 24, 1423, 47),
woosh.Token(woosh.OP, '(', 1423, 47, 1423, 48),
woosh.Token(woosh.NAME, 'filename', 1423, 48, 1423, 56),
woosh.Token(woosh.OP, ',', 1423, 56, 1423, 57),
woosh.Token(woosh.NAME, 'module_globals', 1423, 58, 1423, 72),
woosh.Token(woosh.OP, ')', 1423, 72, 1423, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1423, 73, 1424, 0),
woosh.Token(woosh.DEDENT, '    ', 1425, 0, 1425, 4),
woosh.Token(woosh.DEDENT, '', 1425, 4, 1425, 4),
woosh.Token(woosh.NAME, 'def', 1425, 4, 1425, 7),
woosh.Token(woosh.NAME, 'run', 1425, 8, 1425, 11),
woosh.Token(woosh.OP, '(', 1425, 11, 1425, 12),
woosh.Token(woosh.NAME, 'self', 1425, 12, 1425, 16),
woosh.Token(woosh.OP, ',', 1425, 16, 1425, 17),
woosh.Token(woosh.NAME, 'test', 1425, 18, 1425, 22),
woosh.Token(woosh.OP, ',', 1425, 22, 1425, 23),
woosh.Token(woosh.NAME, 'compileflags', 1425, 24, 1425, 36),
woosh.Token(woosh.OP, '=', 1425, 36, 1425, 37),
woosh.Token(woosh.NAME, 'None', 1425, 37, 1425, 41),
woosh.Token(woosh.OP, ',', 1425, 41, 1425, 42),
woosh.Token(woosh.NAME, 'out', 1425, 43, 1425, 46),
woosh.Token(woosh.OP, '=', 1425, 46, 1425, 47),
woosh.Token(woosh.NAME, 'None', 1425, 47, 1425, 51),
woosh.Token(woosh.OP, ',', 1425, 51, 1425, 52),
woosh.Token(woosh.NAME, 'clear_globs', 1425, 53, 1425, 64),
woosh.Token(woosh.OP, '=', 1425, 64, 1425, 65),
woosh.Token(woosh.NAME, 'True', 1425, 65, 1425, 69),
woosh.Token(woosh.OP, ')', 1425, 69, 1425, 70),
woosh.Token(woosh.OP, ':', 1425, 70, 1425, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1425, 71, 1426, 0),
woosh.Token(woosh.INDENT, '        ', 1426, 0, 1426, 8),
woosh.Token(woosh.STRING, '"""\r\n        Run the examples in `test`, and display the results using the\r\n        writer function `out`.\r\n\r\n        The examples are run in the namespace `test.globs`.  If\r\n        `clear_globs` is true (the default), then this namespace will\r\n        be cleared after the test runs, to help with garbage\r\n        collection.  If you would like to examine the namespace after\r\n        the test completes, then use `clear_globs=False`.\r\n\r\n        `compileflags` gives the set of flags that should be used by\r\n        the Python compiler when running the examples.  If not\r\n        specified, then it will default to the set of future-import\r\n        flags that apply to `globs`.\r\n\r\n        The output of each example is checked using\r\n        `DocTestRunner.check_output`, and the results are formatted by\r\n        the `DocTestRunner.report_*` methods.\r\n        """', 1426, 8, 1444, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1444, 11, 1445, 0),
woosh.Token(woosh.NAME, 'self', 1445, 8, 1445, 12),
woosh.Token(woosh.OP, '.', 1445, 12, 1445, 13),
woosh.Token(woosh.NAME, 'test', 1445, 13, 1445, 17),
woosh.Token(woosh.OP, '=', 1445, 18, 1445, 19),
woosh.Token(woosh.NAME, 'test', 1445, 20, 1445, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1445, 24, 1446, 0),
woosh.Token(woosh.NAME, 'if', 1447, 8, 1447, 10),
woosh.Token(woosh.NAME, 'compileflags', 1447, 11, 1447, 23),
woosh.Token(woosh.NAME, 'is', 1447, 24, 1447, 26),
woosh.Token(woosh.NAME, 'None', 1447, 27, 1447, 31),
woosh.Token(woosh.OP, ':', 1447, 31, 1447, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1447, 32, 1448, 0),
woosh.Token(woosh.INDENT, '            ', 1448, 0, 1448, 12),
woosh.Token(woosh.NAME, 'compileflags', 1448, 12, 1448, 24),
woosh.Token(woosh.OP, '=', 1448, 25, 1448, 26),
woosh.Token(woosh.NAME, '_extract_future_flags', 1448, 27, 1448, 48),
woosh.Token(woosh.OP, '(', 1448, 48, 1448, 49),
woosh.Token(woosh.NAME, 'test', 1448, 49, 1448, 53),
woosh.Token(woosh.OP, '.', 1448, 53, 1448, 54),
woosh.Token(woosh.NAME, 'globs', 1448, 54, 1448, 59),
woosh.Token(woosh.OP, ')', 1448, 59, 1448, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1448, 60, 1449, 0),
woosh.Token(woosh.DEDENT, '        ', 1450, 0, 1450, 8),
woosh.Token(woosh.NAME, 'save_stdout', 1450, 8, 1450, 19),
woosh.Token(woosh.OP, '=', 1450, 20, 1450, 21),
woosh.Token(woosh.NAME, 'sys', 1450, 22, 1450, 25),
woosh.Token(woosh.OP, '.', 1450, 25, 1450, 26),
woosh.Token(woosh.NAME, 'stdout', 1450, 26, 1450, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1450, 32, 1451, 0),
woosh.Token(woosh.NAME, 'if', 1451, 8, 1451, 10),
woosh.Token(woosh.NAME, 'out', 1451, 11, 1451, 14),
woosh.Token(woosh.NAME, 'is', 1451, 15, 1451, 17),
woosh.Token(woosh.NAME, 'None', 1451, 18, 1451, 22),
woosh.Token(woosh.OP, ':', 1451, 22, 1451, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1451, 23, 1452, 0),
woosh.Token(woosh.INDENT, '            ', 1452, 0, 1452, 12),
woosh.Token(woosh.NAME, 'encoding', 1452, 12, 1452, 20),
woosh.Token(woosh.OP, '=', 1452, 21, 1452, 22),
woosh.Token(woosh.NAME, 'save_stdout', 1452, 23, 1452, 34),
woosh.Token(woosh.OP, '.', 1452, 34, 1452, 35),
woosh.Token(woosh.NAME, 'encoding', 1452, 35, 1452, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1452, 43, 1453, 0),
woosh.Token(woosh.NAME, 'if', 1453, 12, 1453, 14),
woosh.Token(woosh.NAME, 'encoding', 1453, 15, 1453, 23),
woosh.Token(woosh.NAME, 'is', 1453, 24, 1453, 26),
woosh.Token(woosh.NAME, 'None', 1453, 27, 1453, 31),
woosh.Token(woosh.NAME, 'or', 1453, 32, 1453, 34),
woosh.Token(woosh.NAME, 'encoding', 1453, 35, 1453, 43),
woosh.Token(woosh.OP, '.', 1453, 43, 1453, 44),
woosh.Token(woosh.NAME, 'lower', 1453, 44, 1453, 49),
woosh.Token(woosh.OP, '(', 1453, 49, 1453, 50),
woosh.Token(woosh.OP, ')', 1453, 50, 1453, 51),
woosh.Token(woosh.OP, '==', 1453, 52, 1453, 54),
woosh.Token(woosh.STRING, "'utf-8'", 1453, 55, 1453, 62),
woosh.Token(woosh.OP, ':', 1453, 62, 1453, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1453, 63, 1454, 0),
woosh.Token(woosh.INDENT, '                ', 1454, 0, 1454, 16),
woosh.Token(woosh.NAME, 'out', 1454, 16, 1454, 19),
woosh.Token(woosh.OP, '=', 1454, 20, 1454, 21),
woosh.Token(woosh.NAME, 'save_stdout', 1454, 22, 1454, 33),
woosh.Token(woosh.OP, '.', 1454, 33, 1454, 34),
woosh.Token(woosh.NAME, 'write', 1454, 34, 1454, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1454, 39, 1455, 0),
woosh.Token(woosh.DEDENT, '            ', 1455, 0, 1455, 12),
woosh.Token(woosh.NAME, 'else', 1455, 12, 1455, 16),
woosh.Token(woosh.OP, ':', 1455, 16, 1455, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1455, 17, 1456, 0),
woosh.Token(woosh.COMMENT, '# Use backslashreplace error handling on write', 1456, 16, 1456, 62),
woosh.Token(woosh.INDENT, '                ', 1457, 0, 1457, 16),
woosh.Token(woosh.NAME, 'def', 1457, 16, 1457, 19),
woosh.Token(woosh.NAME, 'out', 1457, 20, 1457, 23),
woosh.Token(woosh.OP, '(', 1457, 23, 1457, 24),
woosh.Token(woosh.NAME, 's', 1457, 24, 1457, 25),
woosh.Token(woosh.OP, ')', 1457, 25, 1457, 26),
woosh.Token(woosh.OP, ':', 1457, 26, 1457, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1457, 27, 1458, 0),
woosh.Token(woosh.INDENT, '                    ', 1458, 0, 1458, 20),
woosh.Token(woosh.NAME, 's', 1458, 20, 1458, 21),
woosh.Token(woosh.OP, '=', 1458, 22, 1458, 23),
woosh.Token(woosh.NAME, 'str', 1458, 24, 1458, 27),
woosh.Token(woosh.OP, '(', 1458, 27, 1458, 28),
woosh.Token(woosh.NAME, 's', 1458, 28, 1458, 29),
woosh.Token(woosh.OP, '.', 1458, 29, 1458, 30),
woosh.Token(woosh.NAME, 'encode', 1458, 30, 1458, 36),
woosh.Token(woosh.OP, '(', 1458, 36, 1458, 37),
woosh.Token(woosh.NAME, 'encoding', 1458, 37, 1458, 45),
woosh.Token(woosh.OP, ',', 1458, 45, 1458, 46),
woosh.Token(woosh.STRING, "'backslashreplace'", 1458, 47, 1458, 65),
woosh.Token(woosh.OP, ')', 1458, 65, 1458, 66),
woosh.Token(woosh.OP, ',', 1458, 66, 1458, 67),
woosh.Token(woosh.NAME, 'encoding', 1458, 68, 1458, 76),
woosh.Token(woosh.OP, ')', 1458, 76, 1458, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 1458, 77, 1459, 0),
woosh.Token(woosh.NAME, 'save_stdout', 1459, 20, 1459, 31),
woosh.Token(woosh.OP, '.', 1459, 31, 1459, 32),
woosh.Token(woosh.NAME, 'write', 1459, 32, 1459, 37),
woosh.Token(woosh.OP, '(', 1459, 37, 1459, 38),
woosh.Token(woosh.NAME, 's', 1459, 38, 1459, 39),
woosh.Token(woosh.OP, ')', 1459, 39, 1459, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1459, 40, 1460, 0),
woosh.Token(woosh.DEDENT, '        ', 1460, 0, 1460, 8),
woosh.Token(woosh.DEDENT, '', 1460, 8, 1460, 8),
woosh.Token(woosh.DEDENT, '', 1460, 8, 1460, 8),
woosh.Token(woosh.NAME, 'sys', 1460, 8, 1460, 11),
woosh.Token(woosh.OP, '.', 1460, 11, 1460, 12),
woosh.Token(woosh.NAME, 'stdout', 1460, 12, 1460, 18),
woosh.Token(woosh.OP, '=', 1460, 19, 1460, 20),
woosh.Token(woosh.NAME, 'self', 1460, 21, 1460, 25),
woosh.Token(woosh.OP, '.', 1460, 25, 1460, 26),
woosh.Token(woosh.NAME, '_fakeout', 1460, 26, 1460, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1460, 34, 1461, 0),
woosh.Token(woosh.COMMENT, '# Patch pdb.set_trace to restore sys.stdout during interactive', 1462, 8, 1462, 70),
woosh.Token(woosh.COMMENT, "# debugging (so it's not still redirected to self._fakeout).", 1463, 8, 1463, 68),
woosh.Token(woosh.COMMENT, '# Note that the interactive output will go to *our*', 1464, 8, 1464, 59),
woosh.Token(woosh.COMMENT, "# save_stdout, even if that's not the real sys.stdout; this", 1465, 8, 1465, 67),
woosh.Token(woosh.COMMENT, '# allows us to write test cases for the set_trace behavior.', 1466, 8, 1466, 67),
woosh.Token(woosh.NAME, 'save_trace', 1467, 8, 1467, 18),
woosh.Token(woosh.OP, '=', 1467, 19, 1467, 20),
woosh.Token(woosh.NAME, 'sys', 1467, 21, 1467, 24),
woosh.Token(woosh.OP, '.', 1467, 24, 1467, 25),
woosh.Token(woosh.NAME, 'gettrace', 1467, 25, 1467, 33),
woosh.Token(woosh.OP, '(', 1467, 33, 1467, 34),
woosh.Token(woosh.OP, ')', 1467, 34, 1467, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1467, 35, 1468, 0),
woosh.Token(woosh.NAME, 'save_set_trace', 1468, 8, 1468, 22),
woosh.Token(woosh.OP, '=', 1468, 23, 1468, 24),
woosh.Token(woosh.NAME, 'pdb', 1468, 25, 1468, 28),
woosh.Token(woosh.OP, '.', 1468, 28, 1468, 29),
woosh.Token(woosh.NAME, 'set_trace', 1468, 29, 1468, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1468, 38, 1469, 0),
woosh.Token(woosh.NAME, 'self', 1469, 8, 1469, 12),
woosh.Token(woosh.OP, '.', 1469, 12, 1469, 13),
woosh.Token(woosh.NAME, 'debugger', 1469, 13, 1469, 21),
woosh.Token(woosh.OP, '=', 1469, 22, 1469, 23),
woosh.Token(woosh.NAME, '_OutputRedirectingPdb', 1469, 24, 1469, 45),
woosh.Token(woosh.OP, '(', 1469, 45, 1469, 46),
woosh.Token(woosh.NAME, 'save_stdout', 1469, 46, 1469, 57),
woosh.Token(woosh.OP, ')', 1469, 57, 1469, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1469, 58, 1470, 0),
woosh.Token(woosh.NAME, 'self', 1470, 8, 1470, 12),
woosh.Token(woosh.OP, '.', 1470, 12, 1470, 13),
woosh.Token(woosh.NAME, 'debugger', 1470, 13, 1470, 21),
woosh.Token(woosh.OP, '.', 1470, 21, 1470, 22),
woosh.Token(woosh.NAME, 'reset', 1470, 22, 1470, 27),
woosh.Token(woosh.OP, '(', 1470, 27, 1470, 28),
woosh.Token(woosh.OP, ')', 1470, 28, 1470, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1470, 29, 1471, 0),
woosh.Token(woosh.NAME, 'pdb', 1471, 8, 1471, 11),
woosh.Token(woosh.OP, '.', 1471, 11, 1471, 12),
woosh.Token(woosh.NAME, 'set_trace', 1471, 12, 1471, 21),
woosh.Token(woosh.OP, '=', 1471, 22, 1471, 23),
woosh.Token(woosh.NAME, 'self', 1471, 24, 1471, 28),
woosh.Token(woosh.OP, '.', 1471, 28, 1471, 29),
woosh.Token(woosh.NAME, 'debugger', 1471, 29, 1471, 37),
woosh.Token(woosh.OP, '.', 1471, 37, 1471, 38),
woosh.Token(woosh.NAME, 'set_trace', 1471, 38, 1471, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1471, 47, 1472, 0),
woosh.Token(woosh.COMMENT, "# Patch linecache.getlines, so we can see the example's source", 1473, 8, 1473, 70),
woosh.Token(woosh.COMMENT, "# when we're inside the debugger.", 1474, 8, 1474, 41),
woosh.Token(woosh.NAME, 'self', 1475, 8, 1475, 12),
woosh.Token(woosh.OP, '.', 1475, 12, 1475, 13),
woosh.Token(woosh.NAME, 'save_linecache_getlines', 1475, 13, 1475, 36),
woosh.Token(woosh.OP, '=', 1475, 37, 1475, 38),
woosh.Token(woosh.NAME, 'linecache', 1475, 39, 1475, 48),
woosh.Token(woosh.OP, '.', 1475, 48, 1475, 49),
woosh.Token(woosh.NAME, 'getlines', 1475, 49, 1475, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1475, 57, 1476, 0),
woosh.Token(woosh.NAME, 'linecache', 1476, 8, 1476, 17),
woosh.Token(woosh.OP, '.', 1476, 17, 1476, 18),
woosh.Token(woosh.NAME, 'getlines', 1476, 18, 1476, 26),
woosh.Token(woosh.OP, '=', 1476, 27, 1476, 28),
woosh.Token(woosh.NAME, 'self', 1476, 29, 1476, 33),
woosh.Token(woosh.OP, '.', 1476, 33, 1476, 34),
woosh.Token(woosh.NAME, '__patched_linecache_getlines', 1476, 34, 1476, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1476, 62, 1477, 0),
woosh.Token(woosh.COMMENT, '# Make sure sys.displayhook just prints the value to stdout', 1478, 8, 1478, 67),
woosh.Token(woosh.NAME, 'save_displayhook', 1479, 8, 1479, 24),
woosh.Token(woosh.OP, '=', 1479, 25, 1479, 26),
woosh.Token(woosh.NAME, 'sys', 1479, 27, 1479, 30),
woosh.Token(woosh.OP, '.', 1479, 30, 1479, 31),
woosh.Token(woosh.NAME, 'displayhook', 1479, 31, 1479, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1479, 42, 1480, 0),
woosh.Token(woosh.NAME, 'sys', 1480, 8, 1480, 11),
woosh.Token(woosh.OP, '.', 1480, 11, 1480, 12),
woosh.Token(woosh.NAME, 'displayhook', 1480, 12, 1480, 23),
woosh.Token(woosh.OP, '=', 1480, 24, 1480, 25),
woosh.Token(woosh.NAME, 'sys', 1480, 26, 1480, 29),
woosh.Token(woosh.OP, '.', 1480, 29, 1480, 30),
woosh.Token(woosh.NAME, '__displayhook__', 1480, 30, 1480, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1480, 45, 1481, 0),
woosh.Token(woosh.NAME, 'try', 1482, 8, 1482, 11),
woosh.Token(woosh.OP, ':', 1482, 11, 1482, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1482, 12, 1483, 0),
woosh.Token(woosh.INDENT, '            ', 1483, 0, 1483, 12),
woosh.Token(woosh.NAME, 'return', 1483, 12, 1483, 18),
woosh.Token(woosh.NAME, 'self', 1483, 19, 1483, 23),
woosh.Token(woosh.OP, '.', 1483, 23, 1483, 24),
woosh.Token(woosh.NAME, '__run', 1483, 24, 1483, 29),
woosh.Token(woosh.OP, '(', 1483, 29, 1483, 30),
woosh.Token(woosh.NAME, 'test', 1483, 30, 1483, 34),
woosh.Token(woosh.OP, ',', 1483, 34, 1483, 35),
woosh.Token(woosh.NAME, 'compileflags', 1483, 36, 1483, 48),
woosh.Token(woosh.OP, ',', 1483, 48, 1483, 49),
woosh.Token(woosh.NAME, 'out', 1483, 50, 1483, 53),
woosh.Token(woosh.OP, ')', 1483, 53, 1483, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1483, 54, 1484, 0),
woosh.Token(woosh.DEDENT, '        ', 1484, 0, 1484, 8),
woosh.Token(woosh.NAME, 'finally', 1484, 8, 1484, 15),
woosh.Token(woosh.OP, ':', 1484, 15, 1484, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1484, 16, 1485, 0),
woosh.Token(woosh.INDENT, '            ', 1485, 0, 1485, 12),
woosh.Token(woosh.NAME, 'sys', 1485, 12, 1485, 15),
woosh.Token(woosh.OP, '.', 1485, 15, 1485, 16),
woosh.Token(woosh.NAME, 'stdout', 1485, 16, 1485, 22),
woosh.Token(woosh.OP, '=', 1485, 23, 1485, 24),
woosh.Token(woosh.NAME, 'save_stdout', 1485, 25, 1485, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1485, 36, 1486, 0),
woosh.Token(woosh.NAME, 'pdb', 1486, 12, 1486, 15),
woosh.Token(woosh.OP, '.', 1486, 15, 1486, 16),
woosh.Token(woosh.NAME, 'set_trace', 1486, 16, 1486, 25),
woosh.Token(woosh.OP, '=', 1486, 26, 1486, 27),
woosh.Token(woosh.NAME, 'save_set_trace', 1486, 28, 1486, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1486, 42, 1487, 0),
woosh.Token(woosh.NAME, 'sys', 1487, 12, 1487, 15),
woosh.Token(woosh.OP, '.', 1487, 15, 1487, 16),
woosh.Token(woosh.NAME, 'settrace', 1487, 16, 1487, 24),
woosh.Token(woosh.OP, '(', 1487, 24, 1487, 25),
woosh.Token(woosh.NAME, 'save_trace', 1487, 25, 1487, 35),
woosh.Token(woosh.OP, ')', 1487, 35, 1487, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1487, 36, 1488, 0),
woosh.Token(woosh.NAME, 'linecache', 1488, 12, 1488, 21),
woosh.Token(woosh.OP, '.', 1488, 21, 1488, 22),
woosh.Token(woosh.NAME, 'getlines', 1488, 22, 1488, 30),
woosh.Token(woosh.OP, '=', 1488, 31, 1488, 32),
woosh.Token(woosh.NAME, 'self', 1488, 33, 1488, 37),
woosh.Token(woosh.OP, '.', 1488, 37, 1488, 38),
woosh.Token(woosh.NAME, 'save_linecache_getlines', 1488, 38, 1488, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1488, 61, 1489, 0),
woosh.Token(woosh.NAME, 'sys', 1489, 12, 1489, 15),
woosh.Token(woosh.OP, '.', 1489, 15, 1489, 16),
woosh.Token(woosh.NAME, 'displayhook', 1489, 16, 1489, 27),
woosh.Token(woosh.OP, '=', 1489, 28, 1489, 29),
woosh.Token(woosh.NAME, 'save_displayhook', 1489, 30, 1489, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1489, 46, 1490, 0),
woosh.Token(woosh.NAME, 'if', 1490, 12, 1490, 14),
woosh.Token(woosh.NAME, 'clear_globs', 1490, 15, 1490, 26),
woosh.Token(woosh.OP, ':', 1490, 26, 1490, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1490, 27, 1491, 0),
woosh.Token(woosh.INDENT, '                ', 1491, 0, 1491, 16),
woosh.Token(woosh.NAME, 'test', 1491, 16, 1491, 20),
woosh.Token(woosh.OP, '.', 1491, 20, 1491, 21),
woosh.Token(woosh.NAME, 'globs', 1491, 21, 1491, 26),
woosh.Token(woosh.OP, '.', 1491, 26, 1491, 27),
woosh.Token(woosh.NAME, 'clear', 1491, 27, 1491, 32),
woosh.Token(woosh.OP, '(', 1491, 32, 1491, 33),
woosh.Token(woosh.OP, ')', 1491, 33, 1491, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1491, 34, 1492, 0),
woosh.Token(woosh.NAME, 'import', 1492, 16, 1492, 22),
woosh.Token(woosh.NAME, 'builtins', 1492, 23, 1492, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1492, 31, 1493, 0),
woosh.Token(woosh.NAME, 'builtins', 1493, 16, 1493, 24),
woosh.Token(woosh.OP, '.', 1493, 24, 1493, 25),
woosh.Token(woosh.NAME, '_', 1493, 25, 1493, 26),
woosh.Token(woosh.OP, '=', 1493, 27, 1493, 28),
woosh.Token(woosh.NAME, 'None', 1493, 29, 1493, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1493, 33, 1494, 0),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1495, 4, 1495, 70),
woosh.Token(woosh.COMMENT, '# Summarization', 1496, 4, 1496, 19),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1497, 4, 1497, 70),
woosh.Token(woosh.DEDENT, '    ', 1498, 0, 1498, 4),
woosh.Token(woosh.DEDENT, '', 1498, 4, 1498, 4),
woosh.Token(woosh.DEDENT, '', 1498, 4, 1498, 4),
woosh.Token(woosh.NAME, 'def', 1498, 4, 1498, 7),
woosh.Token(woosh.NAME, 'summarize', 1498, 8, 1498, 17),
woosh.Token(woosh.OP, '(', 1498, 17, 1498, 18),
woosh.Token(woosh.NAME, 'self', 1498, 18, 1498, 22),
woosh.Token(woosh.OP, ',', 1498, 22, 1498, 23),
woosh.Token(woosh.NAME, 'verbose', 1498, 24, 1498, 31),
woosh.Token(woosh.OP, '=', 1498, 31, 1498, 32),
woosh.Token(woosh.NAME, 'None', 1498, 32, 1498, 36),
woosh.Token(woosh.OP, ')', 1498, 36, 1498, 37),
woosh.Token(woosh.OP, ':', 1498, 37, 1498, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1498, 38, 1499, 0),
woosh.Token(woosh.INDENT, '        ', 1499, 0, 1499, 8),
woosh.Token(woosh.STRING, '"""\r\n        Print a summary of all the test cases that have been run by\r\n        this DocTestRunner, and return a tuple `(f, t)`, where `f` is\r\n        the total number of failed examples, and `t` is the total\r\n        number of tried examples.\r\n\r\n        The optional `verbose` argument controls how detailed the\r\n        summary is.  If the verbosity is not specified, then the\r\n        DocTestRunner\'s verbosity is used.\r\n        """', 1499, 8, 1508, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1508, 11, 1509, 0),
woosh.Token(woosh.NAME, 'if', 1509, 8, 1509, 10),
woosh.Token(woosh.NAME, 'verbose', 1509, 11, 1509, 18),
woosh.Token(woosh.NAME, 'is', 1509, 19, 1509, 21),
woosh.Token(woosh.NAME, 'None', 1509, 22, 1509, 26),
woosh.Token(woosh.OP, ':', 1509, 26, 1509, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1509, 27, 1510, 0),
woosh.Token(woosh.INDENT, '            ', 1510, 0, 1510, 12),
woosh.Token(woosh.NAME, 'verbose', 1510, 12, 1510, 19),
woosh.Token(woosh.OP, '=', 1510, 20, 1510, 21),
woosh.Token(woosh.NAME, 'self', 1510, 22, 1510, 26),
woosh.Token(woosh.OP, '.', 1510, 26, 1510, 27),
woosh.Token(woosh.NAME, '_verbose', 1510, 27, 1510, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1510, 35, 1511, 0),
woosh.Token(woosh.DEDENT, '        ', 1511, 0, 1511, 8),
woosh.Token(woosh.NAME, 'notests', 1511, 8, 1511, 15),
woosh.Token(woosh.OP, '=', 1511, 16, 1511, 17),
woosh.Token(woosh.OP, '[', 1511, 18, 1511, 19),
woosh.Token(woosh.OP, ']', 1511, 19, 1511, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1511, 20, 1512, 0),
woosh.Token(woosh.NAME, 'passed', 1512, 8, 1512, 14),
woosh.Token(woosh.OP, '=', 1512, 15, 1512, 16),
woosh.Token(woosh.OP, '[', 1512, 17, 1512, 18),
woosh.Token(woosh.OP, ']', 1512, 18, 1512, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1512, 19, 1513, 0),
woosh.Token(woosh.NAME, 'failed', 1513, 8, 1513, 14),
woosh.Token(woosh.OP, '=', 1513, 15, 1513, 16),
woosh.Token(woosh.OP, '[', 1513, 17, 1513, 18),
woosh.Token(woosh.OP, ']', 1513, 18, 1513, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1513, 19, 1514, 0),
woosh.Token(woosh.NAME, 'totalt', 1514, 8, 1514, 14),
woosh.Token(woosh.OP, '=', 1514, 15, 1514, 16),
woosh.Token(woosh.NAME, 'totalf', 1514, 17, 1514, 23),
woosh.Token(woosh.OP, '=', 1514, 24, 1514, 25),
woosh.Token(woosh.NUMBER, '0', 1514, 26, 1514, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1514, 27, 1515, 0),
woosh.Token(woosh.NAME, 'for', 1515, 8, 1515, 11),
woosh.Token(woosh.NAME, 'x', 1515, 12, 1515, 13),
woosh.Token(woosh.NAME, 'in', 1515, 14, 1515, 16),
woosh.Token(woosh.NAME, 'self', 1515, 17, 1515, 21),
woosh.Token(woosh.OP, '.', 1515, 21, 1515, 22),
woosh.Token(woosh.NAME, '_name2ft', 1515, 22, 1515, 30),
woosh.Token(woosh.OP, '.', 1515, 30, 1515, 31),
woosh.Token(woosh.NAME, 'items', 1515, 31, 1515, 36),
woosh.Token(woosh.OP, '(', 1515, 36, 1515, 37),
woosh.Token(woosh.OP, ')', 1515, 37, 1515, 38),
woosh.Token(woosh.OP, ':', 1515, 38, 1515, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1515, 39, 1516, 0),
woosh.Token(woosh.INDENT, '            ', 1516, 0, 1516, 12),
woosh.Token(woosh.NAME, 'name', 1516, 12, 1516, 16),
woosh.Token(woosh.OP, ',', 1516, 16, 1516, 17),
woosh.Token(woosh.OP, '(', 1516, 18, 1516, 19),
woosh.Token(woosh.NAME, 'f', 1516, 19, 1516, 20),
woosh.Token(woosh.OP, ',', 1516, 20, 1516, 21),
woosh.Token(woosh.NAME, 't', 1516, 22, 1516, 23),
woosh.Token(woosh.OP, ')', 1516, 23, 1516, 24),
woosh.Token(woosh.OP, '=', 1516, 25, 1516, 26),
woosh.Token(woosh.NAME, 'x', 1516, 27, 1516, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1516, 28, 1517, 0),
woosh.Token(woosh.NAME, 'assert', 1517, 12, 1517, 18),
woosh.Token(woosh.NAME, 'f', 1517, 19, 1517, 20),
woosh.Token(woosh.OP, '<=', 1517, 21, 1517, 23),
woosh.Token(woosh.NAME, 't', 1517, 24, 1517, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1517, 25, 1518, 0),
woosh.Token(woosh.NAME, 'totalt', 1518, 12, 1518, 18),
woosh.Token(woosh.OP, '+=', 1518, 19, 1518, 21),
woosh.Token(woosh.NAME, 't', 1518, 22, 1518, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1518, 23, 1519, 0),
woosh.Token(woosh.NAME, 'totalf', 1519, 12, 1519, 18),
woosh.Token(woosh.OP, '+=', 1519, 19, 1519, 21),
woosh.Token(woosh.NAME, 'f', 1519, 22, 1519, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1519, 23, 1520, 0),
woosh.Token(woosh.NAME, 'if', 1520, 12, 1520, 14),
woosh.Token(woosh.NAME, 't', 1520, 15, 1520, 16),
woosh.Token(woosh.OP, '==', 1520, 17, 1520, 19),
woosh.Token(woosh.NUMBER, '0', 1520, 20, 1520, 21),
woosh.Token(woosh.OP, ':', 1520, 21, 1520, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1520, 22, 1521, 0),
woosh.Token(woosh.INDENT, '                ', 1521, 0, 1521, 16),
woosh.Token(woosh.NAME, 'notests', 1521, 16, 1521, 23),
woosh.Token(woosh.OP, '.', 1521, 23, 1521, 24),
woosh.Token(woosh.NAME, 'append', 1521, 24, 1521, 30),
woosh.Token(woosh.OP, '(', 1521, 30, 1521, 31),
woosh.Token(woosh.NAME, 'name', 1521, 31, 1521, 35),
woosh.Token(woosh.OP, ')', 1521, 35, 1521, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1521, 36, 1522, 0),
woosh.Token(woosh.DEDENT, '            ', 1522, 0, 1522, 12),
woosh.Token(woosh.NAME, 'elif', 1522, 12, 1522, 16),
woosh.Token(woosh.NAME, 'f', 1522, 17, 1522, 18),
woosh.Token(woosh.OP, '==', 1522, 19, 1522, 21),
woosh.Token(woosh.NUMBER, '0', 1522, 22, 1522, 23),
woosh.Token(woosh.OP, ':', 1522, 23, 1522, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1522, 24, 1523, 0),
woosh.Token(woosh.INDENT, '                ', 1523, 0, 1523, 16),
woosh.Token(woosh.NAME, 'passed', 1523, 16, 1523, 22),
woosh.Token(woosh.OP, '.', 1523, 22, 1523, 23),
woosh.Token(woosh.NAME, 'append', 1523, 23, 1523, 29),
woosh.Token(woosh.OP, '(', 1523, 29, 1523, 30),
woosh.Token(woosh.OP, '(', 1523, 31, 1523, 32),
woosh.Token(woosh.NAME, 'name', 1523, 32, 1523, 36),
woosh.Token(woosh.OP, ',', 1523, 36, 1523, 37),
woosh.Token(woosh.NAME, 't', 1523, 38, 1523, 39),
woosh.Token(woosh.OP, ')', 1523, 39, 1523, 40),
woosh.Token(woosh.OP, ')', 1523, 41, 1523, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1523, 42, 1524, 0),
woosh.Token(woosh.DEDENT, '            ', 1524, 0, 1524, 12),
woosh.Token(woosh.NAME, 'else', 1524, 12, 1524, 16),
woosh.Token(woosh.OP, ':', 1524, 16, 1524, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1524, 17, 1525, 0),
woosh.Token(woosh.INDENT, '                ', 1525, 0, 1525, 16),
woosh.Token(woosh.NAME, 'failed', 1525, 16, 1525, 22),
woosh.Token(woosh.OP, '.', 1525, 22, 1525, 23),
woosh.Token(woosh.NAME, 'append', 1525, 23, 1525, 29),
woosh.Token(woosh.OP, '(', 1525, 29, 1525, 30),
woosh.Token(woosh.NAME, 'x', 1525, 30, 1525, 31),
woosh.Token(woosh.OP, ')', 1525, 31, 1525, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1525, 32, 1526, 0),
woosh.Token(woosh.DEDENT, '        ', 1526, 0, 1526, 8),
woosh.Token(woosh.DEDENT, '', 1526, 8, 1526, 8),
woosh.Token(woosh.NAME, 'if', 1526, 8, 1526, 10),
woosh.Token(woosh.NAME, 'verbose', 1526, 11, 1526, 18),
woosh.Token(woosh.OP, ':', 1526, 18, 1526, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1526, 19, 1527, 0),
woosh.Token(woosh.INDENT, '            ', 1527, 0, 1527, 12),
woosh.Token(woosh.NAME, 'if', 1527, 12, 1527, 14),
woosh.Token(woosh.NAME, 'notests', 1527, 15, 1527, 22),
woosh.Token(woosh.OP, ':', 1527, 22, 1527, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1527, 23, 1528, 0),
woosh.Token(woosh.INDENT, '                ', 1528, 0, 1528, 16),
woosh.Token(woosh.NAME, 'print', 1528, 16, 1528, 21),
woosh.Token(woosh.OP, '(', 1528, 21, 1528, 22),
woosh.Token(woosh.NAME, 'len', 1528, 22, 1528, 25),
woosh.Token(woosh.OP, '(', 1528, 25, 1528, 26),
woosh.Token(woosh.NAME, 'notests', 1528, 26, 1528, 33),
woosh.Token(woosh.OP, ')', 1528, 33, 1528, 34),
woosh.Token(woosh.OP, ',', 1528, 34, 1528, 35),
woosh.Token(woosh.STRING, '"items had no tests:"', 1528, 36, 1528, 57),
woosh.Token(woosh.OP, ')', 1528, 57, 1528, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1528, 58, 1529, 0),
woosh.Token(woosh.NAME, 'notests', 1529, 16, 1529, 23),
woosh.Token(woosh.OP, '.', 1529, 23, 1529, 24),
woosh.Token(woosh.NAME, 'sort', 1529, 24, 1529, 28),
woosh.Token(woosh.OP, '(', 1529, 28, 1529, 29),
woosh.Token(woosh.OP, ')', 1529, 29, 1529, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1529, 30, 1530, 0),
woosh.Token(woosh.NAME, 'for', 1530, 16, 1530, 19),
woosh.Token(woosh.NAME, 'thing', 1530, 20, 1530, 25),
woosh.Token(woosh.NAME, 'in', 1530, 26, 1530, 28),
woosh.Token(woosh.NAME, 'notests', 1530, 29, 1530, 36),
woosh.Token(woosh.OP, ':', 1530, 36, 1530, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1530, 37, 1531, 0),
woosh.Token(woosh.INDENT, '                    ', 1531, 0, 1531, 20),
woosh.Token(woosh.NAME, 'print', 1531, 20, 1531, 25),
woosh.Token(woosh.OP, '(', 1531, 25, 1531, 26),
woosh.Token(woosh.STRING, '"   "', 1531, 26, 1531, 31),
woosh.Token(woosh.OP, ',', 1531, 31, 1531, 32),
woosh.Token(woosh.NAME, 'thing', 1531, 33, 1531, 38),
woosh.Token(woosh.OP, ')', 1531, 38, 1531, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1531, 39, 1532, 0),
woosh.Token(woosh.DEDENT, '            ', 1532, 0, 1532, 12),
woosh.Token(woosh.DEDENT, '', 1532, 12, 1532, 12),
woosh.Token(woosh.NAME, 'if', 1532, 12, 1532, 14),
woosh.Token(woosh.NAME, 'passed', 1532, 15, 1532, 21),
woosh.Token(woosh.OP, ':', 1532, 21, 1532, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1532, 22, 1533, 0),
woosh.Token(woosh.INDENT, '                ', 1533, 0, 1533, 16),
woosh.Token(woosh.NAME, 'print', 1533, 16, 1533, 21),
woosh.Token(woosh.OP, '(', 1533, 21, 1533, 22),
woosh.Token(woosh.NAME, 'len', 1533, 22, 1533, 25),
woosh.Token(woosh.OP, '(', 1533, 25, 1533, 26),
woosh.Token(woosh.NAME, 'passed', 1533, 26, 1533, 32),
woosh.Token(woosh.OP, ')', 1533, 32, 1533, 33),
woosh.Token(woosh.OP, ',', 1533, 33, 1533, 34),
woosh.Token(woosh.STRING, '"items passed all tests:"', 1533, 35, 1533, 60),
woosh.Token(woosh.OP, ')', 1533, 60, 1533, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1533, 61, 1534, 0),
woosh.Token(woosh.NAME, 'passed', 1534, 16, 1534, 22),
woosh.Token(woosh.OP, '.', 1534, 22, 1534, 23),
woosh.Token(woosh.NAME, 'sort', 1534, 23, 1534, 27),
woosh.Token(woosh.OP, '(', 1534, 27, 1534, 28),
woosh.Token(woosh.OP, ')', 1534, 28, 1534, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1534, 29, 1535, 0),
woosh.Token(woosh.NAME, 'for', 1535, 16, 1535, 19),
woosh.Token(woosh.NAME, 'thing', 1535, 20, 1535, 25),
woosh.Token(woosh.OP, ',', 1535, 25, 1535, 26),
woosh.Token(woosh.NAME, 'count', 1535, 27, 1535, 32),
woosh.Token(woosh.NAME, 'in', 1535, 33, 1535, 35),
woosh.Token(woosh.NAME, 'passed', 1535, 36, 1535, 42),
woosh.Token(woosh.OP, ':', 1535, 42, 1535, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1535, 43, 1536, 0),
woosh.Token(woosh.INDENT, '                    ', 1536, 0, 1536, 20),
woosh.Token(woosh.NAME, 'print', 1536, 20, 1536, 25),
woosh.Token(woosh.OP, '(', 1536, 25, 1536, 26),
woosh.Token(woosh.STRING, '" %3d tests in %s"', 1536, 26, 1536, 44),
woosh.Token(woosh.OP, '%', 1536, 45, 1536, 46),
woosh.Token(woosh.OP, '(', 1536, 47, 1536, 48),
woosh.Token(woosh.NAME, 'count', 1536, 48, 1536, 53),
woosh.Token(woosh.OP, ',', 1536, 53, 1536, 54),
woosh.Token(woosh.NAME, 'thing', 1536, 55, 1536, 60),
woosh.Token(woosh.OP, ')', 1536, 60, 1536, 61),
woosh.Token(woosh.OP, ')', 1536, 61, 1536, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1536, 62, 1537, 0),
woosh.Token(woosh.DEDENT, '        ', 1537, 0, 1537, 8),
woosh.Token(woosh.DEDENT, '', 1537, 8, 1537, 8),
woosh.Token(woosh.DEDENT, '', 1537, 8, 1537, 8),
woosh.Token(woosh.NAME, 'if', 1537, 8, 1537, 10),
woosh.Token(woosh.NAME, 'failed', 1537, 11, 1537, 17),
woosh.Token(woosh.OP, ':', 1537, 17, 1537, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1537, 18, 1538, 0),
woosh.Token(woosh.INDENT, '            ', 1538, 0, 1538, 12),
woosh.Token(woosh.NAME, 'print', 1538, 12, 1538, 17),
woosh.Token(woosh.OP, '(', 1538, 17, 1538, 18),
woosh.Token(woosh.NAME, 'self', 1538, 18, 1538, 22),
woosh.Token(woosh.OP, '.', 1538, 22, 1538, 23),
woosh.Token(woosh.NAME, 'DIVIDER', 1538, 23, 1538, 30),
woosh.Token(woosh.OP, ')', 1538, 30, 1538, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1538, 31, 1539, 0),
woosh.Token(woosh.NAME, 'print', 1539, 12, 1539, 17),
woosh.Token(woosh.OP, '(', 1539, 17, 1539, 18),
woosh.Token(woosh.NAME, 'len', 1539, 18, 1539, 21),
woosh.Token(woosh.OP, '(', 1539, 21, 1539, 22),
woosh.Token(woosh.NAME, 'failed', 1539, 22, 1539, 28),
woosh.Token(woosh.OP, ')', 1539, 28, 1539, 29),
woosh.Token(woosh.OP, ',', 1539, 29, 1539, 30),
woosh.Token(woosh.STRING, '"items had failures:"', 1539, 31, 1539, 52),
woosh.Token(woosh.OP, ')', 1539, 52, 1539, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1539, 53, 1540, 0),
woosh.Token(woosh.NAME, 'failed', 1540, 12, 1540, 18),
woosh.Token(woosh.OP, '.', 1540, 18, 1540, 19),
woosh.Token(woosh.NAME, 'sort', 1540, 19, 1540, 23),
woosh.Token(woosh.OP, '(', 1540, 23, 1540, 24),
woosh.Token(woosh.OP, ')', 1540, 24, 1540, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1540, 25, 1541, 0),
woosh.Token(woosh.NAME, 'for', 1541, 12, 1541, 15),
woosh.Token(woosh.NAME, 'thing', 1541, 16, 1541, 21),
woosh.Token(woosh.OP, ',', 1541, 21, 1541, 22),
woosh.Token(woosh.OP, '(', 1541, 23, 1541, 24),
woosh.Token(woosh.NAME, 'f', 1541, 24, 1541, 25),
woosh.Token(woosh.OP, ',', 1541, 25, 1541, 26),
woosh.Token(woosh.NAME, 't', 1541, 27, 1541, 28),
woosh.Token(woosh.OP, ')', 1541, 28, 1541, 29),
woosh.Token(woosh.NAME, 'in', 1541, 30, 1541, 32),
woosh.Token(woosh.NAME, 'failed', 1541, 33, 1541, 39),
woosh.Token(woosh.OP, ':', 1541, 39, 1541, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1541, 40, 1542, 0),
woosh.Token(woosh.INDENT, '                ', 1542, 0, 1542, 16),
woosh.Token(woosh.NAME, 'print', 1542, 16, 1542, 21),
woosh.Token(woosh.OP, '(', 1542, 21, 1542, 22),
woosh.Token(woosh.STRING, '" %3d of %3d in %s"', 1542, 22, 1542, 41),
woosh.Token(woosh.OP, '%', 1542, 42, 1542, 43),
woosh.Token(woosh.OP, '(', 1542, 44, 1542, 45),
woosh.Token(woosh.NAME, 'f', 1542, 45, 1542, 46),
woosh.Token(woosh.OP, ',', 1542, 46, 1542, 47),
woosh.Token(woosh.NAME, 't', 1542, 48, 1542, 49),
woosh.Token(woosh.OP, ',', 1542, 49, 1542, 50),
woosh.Token(woosh.NAME, 'thing', 1542, 51, 1542, 56),
woosh.Token(woosh.OP, ')', 1542, 56, 1542, 57),
woosh.Token(woosh.OP, ')', 1542, 57, 1542, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1542, 58, 1543, 0),
woosh.Token(woosh.DEDENT, '        ', 1543, 0, 1543, 8),
woosh.Token(woosh.DEDENT, '', 1543, 8, 1543, 8),
woosh.Token(woosh.NAME, 'if', 1543, 8, 1543, 10),
woosh.Token(woosh.NAME, 'verbose', 1543, 11, 1543, 18),
woosh.Token(woosh.OP, ':', 1543, 18, 1543, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1543, 19, 1544, 0),
woosh.Token(woosh.INDENT, '            ', 1544, 0, 1544, 12),
woosh.Token(woosh.NAME, 'print', 1544, 12, 1544, 17),
woosh.Token(woosh.OP, '(', 1544, 17, 1544, 18),
woosh.Token(woosh.NAME, 'totalt', 1544, 18, 1544, 24),
woosh.Token(woosh.OP, ',', 1544, 24, 1544, 25),
woosh.Token(woosh.STRING, '"tests in"', 1544, 26, 1544, 36),
woosh.Token(woosh.OP, ',', 1544, 36, 1544, 37),
woosh.Token(woosh.NAME, 'len', 1544, 38, 1544, 41),
woosh.Token(woosh.OP, '(', 1544, 41, 1544, 42),
woosh.Token(woosh.NAME, 'self', 1544, 42, 1544, 46),
woosh.Token(woosh.OP, '.', 1544, 46, 1544, 47),
woosh.Token(woosh.NAME, '_name2ft', 1544, 47, 1544, 55),
woosh.Token(woosh.OP, ')', 1544, 55, 1544, 56),
woosh.Token(woosh.OP, ',', 1544, 56, 1544, 57),
woosh.Token(woosh.STRING, '"items."', 1544, 58, 1544, 66),
woosh.Token(woosh.OP, ')', 1544, 66, 1544, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1544, 67, 1545, 0),
woosh.Token(woosh.NAME, 'print', 1545, 12, 1545, 17),
woosh.Token(woosh.OP, '(', 1545, 17, 1545, 18),
woosh.Token(woosh.NAME, 'totalt', 1545, 18, 1545, 24),
woosh.Token(woosh.OP, '-', 1545, 25, 1545, 26),
woosh.Token(woosh.NAME, 'totalf', 1545, 27, 1545, 33),
woosh.Token(woosh.OP, ',', 1545, 33, 1545, 34),
woosh.Token(woosh.STRING, '"passed and"', 1545, 35, 1545, 47),
woosh.Token(woosh.OP, ',', 1545, 47, 1545, 48),
woosh.Token(woosh.NAME, 'totalf', 1545, 49, 1545, 55),
woosh.Token(woosh.OP, ',', 1545, 55, 1545, 56),
woosh.Token(woosh.STRING, '"failed."', 1545, 57, 1545, 66),
woosh.Token(woosh.OP, ')', 1545, 66, 1545, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1545, 67, 1546, 0),
woosh.Token(woosh.DEDENT, '        ', 1546, 0, 1546, 8),
woosh.Token(woosh.NAME, 'if', 1546, 8, 1546, 10),
woosh.Token(woosh.NAME, 'totalf', 1546, 11, 1546, 17),
woosh.Token(woosh.OP, ':', 1546, 17, 1546, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1546, 18, 1547, 0),
woosh.Token(woosh.INDENT, '            ', 1547, 0, 1547, 12),
woosh.Token(woosh.NAME, 'print', 1547, 12, 1547, 17),
woosh.Token(woosh.OP, '(', 1547, 17, 1547, 18),
woosh.Token(woosh.STRING, '"***Test Failed***"', 1547, 18, 1547, 37),
woosh.Token(woosh.OP, ',', 1547, 37, 1547, 38),
woosh.Token(woosh.NAME, 'totalf', 1547, 39, 1547, 45),
woosh.Token(woosh.OP, ',', 1547, 45, 1547, 46),
woosh.Token(woosh.STRING, '"failures."', 1547, 47, 1547, 58),
woosh.Token(woosh.OP, ')', 1547, 58, 1547, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1547, 59, 1548, 0),
woosh.Token(woosh.DEDENT, '        ', 1548, 0, 1548, 8),
woosh.Token(woosh.NAME, 'elif', 1548, 8, 1548, 12),
woosh.Token(woosh.NAME, 'verbose', 1548, 13, 1548, 20),
woosh.Token(woosh.OP, ':', 1548, 20, 1548, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1548, 21, 1549, 0),
woosh.Token(woosh.INDENT, '            ', 1549, 0, 1549, 12),
woosh.Token(woosh.NAME, 'print', 1549, 12, 1549, 17),
woosh.Token(woosh.OP, '(', 1549, 17, 1549, 18),
woosh.Token(woosh.STRING, '"Test passed."', 1549, 18, 1549, 32),
woosh.Token(woosh.OP, ')', 1549, 32, 1549, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1549, 33, 1550, 0),
woosh.Token(woosh.DEDENT, '        ', 1550, 0, 1550, 8),
woosh.Token(woosh.NAME, 'return', 1550, 8, 1550, 14),
woosh.Token(woosh.NAME, 'TestResults', 1550, 15, 1550, 26),
woosh.Token(woosh.OP, '(', 1550, 26, 1550, 27),
woosh.Token(woosh.NAME, 'totalf', 1550, 27, 1550, 33),
woosh.Token(woosh.OP, ',', 1550, 33, 1550, 34),
woosh.Token(woosh.NAME, 'totalt', 1550, 35, 1550, 41),
woosh.Token(woosh.OP, ')', 1550, 41, 1550, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1550, 42, 1551, 0),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1552, 4, 1552, 70),
woosh.Token(woosh.COMMENT, '# Backward compatibility cruft to maintain doctest.master.', 1553, 4, 1553, 62),
woosh.Token(woosh.COMMENT, '#/////////////////////////////////////////////////////////////////', 1554, 4, 1554, 70),
woosh.Token(woosh.DEDENT, '    ', 1555, 0, 1555, 4),
woosh.Token(woosh.NAME, 'def', 1555, 4, 1555, 7),
woosh.Token(woosh.NAME, 'merge', 1555, 8, 1555, 13),
woosh.Token(woosh.OP, '(', 1555, 13, 1555, 14),
woosh.Token(woosh.NAME, 'self', 1555, 14, 1555, 18),
woosh.Token(woosh.OP, ',', 1555, 18, 1555, 19),
woosh.Token(woosh.NAME, 'other', 1555, 20, 1555, 25),
woosh.Token(woosh.OP, ')', 1555, 25, 1555, 26),
woosh.Token(woosh.OP, ':', 1555, 26, 1555, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1555, 27, 1556, 0),
woosh.Token(woosh.INDENT, '        ', 1556, 0, 1556, 8),
woosh.Token(woosh.NAME, 'd', 1556, 8, 1556, 9),
woosh.Token(woosh.OP, '=', 1556, 10, 1556, 11),
woosh.Token(woosh.NAME, 'self', 1556, 12, 1556, 16),
woosh.Token(woosh.OP, '.', 1556, 16, 1556, 17),
woosh.Token(woosh.NAME, '_name2ft', 1556, 17, 1556, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1556, 25, 1557, 0),
woosh.Token(woosh.NAME, 'for', 1557, 8, 1557, 11),
woosh.Token(woosh.NAME, 'name', 1557, 12, 1557, 16),
woosh.Token(woosh.OP, ',', 1557, 16, 1557, 17),
woosh.Token(woosh.OP, '(', 1557, 18, 1557, 19),
woosh.Token(woosh.NAME, 'f', 1557, 19, 1557, 20),
woosh.Token(woosh.OP, ',', 1557, 20, 1557, 21),
woosh.Token(woosh.NAME, 't', 1557, 22, 1557, 23),
woosh.Token(woosh.OP, ')', 1557, 23, 1557, 24),
woosh.Token(woosh.NAME, 'in', 1557, 25, 1557, 27),
woosh.Token(woosh.NAME, 'other', 1557, 28, 1557, 33),
woosh.Token(woosh.OP, '.', 1557, 33, 1557, 34),
woosh.Token(woosh.NAME, '_name2ft', 1557, 34, 1557, 42),
woosh.Token(woosh.OP, '.', 1557, 42, 1557, 43),
woosh.Token(woosh.NAME, 'items', 1557, 43, 1557, 48),
woosh.Token(woosh.OP, '(', 1557, 48, 1557, 49),
woosh.Token(woosh.OP, ')', 1557, 49, 1557, 50),
woosh.Token(woosh.OP, ':', 1557, 50, 1557, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1557, 51, 1558, 0),
woosh.Token(woosh.INDENT, '            ', 1558, 0, 1558, 12),
woosh.Token(woosh.NAME, 'if', 1558, 12, 1558, 14),
woosh.Token(woosh.NAME, 'name', 1558, 15, 1558, 19),
woosh.Token(woosh.NAME, 'in', 1558, 20, 1558, 22),
woosh.Token(woosh.NAME, 'd', 1558, 23, 1558, 24),
woosh.Token(woosh.OP, ':', 1558, 24, 1558, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1558, 25, 1559, 0),
woosh.Token(woosh.COMMENT, "# Don't print here by default, since doing", 1559, 16, 1559, 58),
woosh.Token(woosh.COMMENT, '#     so breaks some of the buildbots', 1560, 16, 1560, 53),
woosh.Token(woosh.COMMENT, '#print("*** DocTestRunner.merge: \'" + name + "\' in both" \\', 1561, 16, 1561, 74),
woosh.Token(woosh.COMMENT, '#    " testers; summing outcomes.")', 1562, 16, 1562, 51),
woosh.Token(woosh.INDENT, '                ', 1563, 0, 1563, 16),
woosh.Token(woosh.NAME, 'f2', 1563, 16, 1563, 18),
woosh.Token(woosh.OP, ',', 1563, 18, 1563, 19),
woosh.Token(woosh.NAME, 't2', 1563, 20, 1563, 22),
woosh.Token(woosh.OP, '=', 1563, 23, 1563, 24),
woosh.Token(woosh.NAME, 'd', 1563, 25, 1563, 26),
woosh.Token(woosh.OP, '[', 1563, 26, 1563, 27),
woosh.Token(woosh.NAME, 'name', 1563, 27, 1563, 31),
woosh.Token(woosh.OP, ']', 1563, 31, 1563, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1563, 32, 1564, 0),
woosh.Token(woosh.NAME, 'f', 1564, 16, 1564, 17),
woosh.Token(woosh.OP, '=', 1564, 18, 1564, 19),
woosh.Token(woosh.NAME, 'f', 1564, 20, 1564, 21),
woosh.Token(woosh.OP, '+', 1564, 22, 1564, 23),
woosh.Token(woosh.NAME, 'f2', 1564, 24, 1564, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1564, 26, 1565, 0),
woosh.Token(woosh.NAME, 't', 1565, 16, 1565, 17),
woosh.Token(woosh.OP, '=', 1565, 18, 1565, 19),
woosh.Token(woosh.NAME, 't', 1565, 20, 1565, 21),
woosh.Token(woosh.OP, '+', 1565, 22, 1565, 23),
woosh.Token(woosh.NAME, 't2', 1565, 24, 1565, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1565, 26, 1566, 0),
woosh.Token(woosh.DEDENT, '            ', 1566, 0, 1566, 12),
woosh.Token(woosh.NAME, 'd', 1566, 12, 1566, 13),
woosh.Token(woosh.OP, '[', 1566, 13, 1566, 14),
woosh.Token(woosh.NAME, 'name', 1566, 14, 1566, 18),
woosh.Token(woosh.OP, ']', 1566, 18, 1566, 19),
woosh.Token(woosh.OP, '=', 1566, 20, 1566, 21),
woosh.Token(woosh.NAME, 'f', 1566, 22, 1566, 23),
woosh.Token(woosh.OP, ',', 1566, 23, 1566, 24),
woosh.Token(woosh.NAME, 't', 1566, 25, 1566, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1566, 26, 1567, 0),
woosh.Token(woosh.DEDENT, '', 1568, 0, 1568, 0),
woosh.Token(woosh.DEDENT, '', 1568, 0, 1568, 0),
woosh.Token(woosh.DEDENT, '', 1568, 0, 1568, 0),
woosh.Token(woosh.NAME, 'class', 1568, 0, 1568, 5),
woosh.Token(woosh.NAME, 'OutputChecker', 1568, 6, 1568, 19),
woosh.Token(woosh.OP, ':', 1568, 19, 1568, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1568, 20, 1569, 0),
woosh.Token(woosh.INDENT, '    ', 1569, 0, 1569, 4),
woosh.Token(woosh.STRING, '"""\r\n    A class used to check the whether the actual output from a doctest\r\n    example matches the expected output.  `OutputChecker` defines two\r\n    methods: `check_output`, which compares a given pair of outputs,\r\n    and returns true if they match; and `output_difference`, which\r\n    returns a string describing the differences between two outputs.\r\n    """', 1569, 4, 1575, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1575, 7, 1576, 0),
woosh.Token(woosh.NAME, 'def', 1576, 4, 1576, 7),
woosh.Token(woosh.NAME, '_toAscii', 1576, 8, 1576, 16),
woosh.Token(woosh.OP, '(', 1576, 16, 1576, 17),
woosh.Token(woosh.NAME, 'self', 1576, 17, 1576, 21),
woosh.Token(woosh.OP, ',', 1576, 21, 1576, 22),
woosh.Token(woosh.NAME, 's', 1576, 23, 1576, 24),
woosh.Token(woosh.OP, ')', 1576, 24, 1576, 25),
woosh.Token(woosh.OP, ':', 1576, 25, 1576, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1576, 26, 1577, 0),
woosh.Token(woosh.INDENT, '        ', 1577, 0, 1577, 8),
woosh.Token(woosh.STRING, '"""\r\n        Convert string to hex-escaped ASCII string.\r\n        """', 1577, 8, 1579, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1579, 11, 1580, 0),
woosh.Token(woosh.NAME, 'return', 1580, 8, 1580, 14),
woosh.Token(woosh.NAME, 'str', 1580, 15, 1580, 18),
woosh.Token(woosh.OP, '(', 1580, 18, 1580, 19),
woosh.Token(woosh.NAME, 's', 1580, 19, 1580, 20),
woosh.Token(woosh.OP, '.', 1580, 20, 1580, 21),
woosh.Token(woosh.NAME, 'encode', 1580, 21, 1580, 27),
woosh.Token(woosh.OP, '(', 1580, 27, 1580, 28),
woosh.Token(woosh.STRING, "'ASCII'", 1580, 28, 1580, 35),
woosh.Token(woosh.OP, ',', 1580, 35, 1580, 36),
woosh.Token(woosh.STRING, "'backslashreplace'", 1580, 37, 1580, 55),
woosh.Token(woosh.OP, ')', 1580, 55, 1580, 56),
woosh.Token(woosh.OP, ',', 1580, 56, 1580, 57),
woosh.Token(woosh.STRING, '"ASCII"', 1580, 58, 1580, 65),
woosh.Token(woosh.OP, ')', 1580, 65, 1580, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1580, 66, 1581, 0),
woosh.Token(woosh.DEDENT, '    ', 1582, 0, 1582, 4),
woosh.Token(woosh.NAME, 'def', 1582, 4, 1582, 7),
woosh.Token(woosh.NAME, 'check_output', 1582, 8, 1582, 20),
woosh.Token(woosh.OP, '(', 1582, 20, 1582, 21),
woosh.Token(woosh.NAME, 'self', 1582, 21, 1582, 25),
woosh.Token(woosh.OP, ',', 1582, 25, 1582, 26),
woosh.Token(woosh.NAME, 'want', 1582, 27, 1582, 31),
woosh.Token(woosh.OP, ',', 1582, 31, 1582, 32),
woosh.Token(woosh.NAME, 'got', 1582, 33, 1582, 36),
woosh.Token(woosh.OP, ',', 1582, 36, 1582, 37),
woosh.Token(woosh.NAME, 'optionflags', 1582, 38, 1582, 49),
woosh.Token(woosh.OP, ')', 1582, 49, 1582, 50),
woosh.Token(woosh.OP, ':', 1582, 50, 1582, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1582, 51, 1583, 0),
woosh.Token(woosh.INDENT, '        ', 1583, 0, 1583, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return True iff the actual output from an example (`got`)\r\n        matches the expected output (`want`).  These strings are\r\n        always considered to match if they are identical; but\r\n        depending on what option flags the test runner is using,\r\n        several non-exact match types are also possible.  See the\r\n        documentation for `TestRunner` for more information about\r\n        option flags.\r\n        """', 1583, 8, 1591, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1591, 11, 1592, 0),
woosh.Token(woosh.COMMENT, '# If `want` contains hex-escaped character such as "\\u1234",', 1593, 8, 1593, 68),
woosh.Token(woosh.COMMENT, '# then `want` is a string of six characters(e.g. [\\,u,1,2,3,4]).', 1594, 8, 1594, 72),
woosh.Token(woosh.COMMENT, '# On the other hand, `got` could be another sequence of', 1595, 8, 1595, 63),
woosh.Token(woosh.COMMENT, '# characters such as [\\u1234], so `want` and `got` should', 1596, 8, 1596, 65),
woosh.Token(woosh.COMMENT, '# be folded to hex-escaped ASCII string to compare.', 1597, 8, 1597, 59),
woosh.Token(woosh.NAME, 'got', 1598, 8, 1598, 11),
woosh.Token(woosh.OP, '=', 1598, 12, 1598, 13),
woosh.Token(woosh.NAME, 'self', 1598, 14, 1598, 18),
woosh.Token(woosh.OP, '.', 1598, 18, 1598, 19),
woosh.Token(woosh.NAME, '_toAscii', 1598, 19, 1598, 27),
woosh.Token(woosh.OP, '(', 1598, 27, 1598, 28),
woosh.Token(woosh.NAME, 'got', 1598, 28, 1598, 31),
woosh.Token(woosh.OP, ')', 1598, 31, 1598, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1598, 32, 1599, 0),
woosh.Token(woosh.NAME, 'want', 1599, 8, 1599, 12),
woosh.Token(woosh.OP, '=', 1599, 13, 1599, 14),
woosh.Token(woosh.NAME, 'self', 1599, 15, 1599, 19),
woosh.Token(woosh.OP, '.', 1599, 19, 1599, 20),
woosh.Token(woosh.NAME, '_toAscii', 1599, 20, 1599, 28),
woosh.Token(woosh.OP, '(', 1599, 28, 1599, 29),
woosh.Token(woosh.NAME, 'want', 1599, 29, 1599, 33),
woosh.Token(woosh.OP, ')', 1599, 33, 1599, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1599, 34, 1600, 0),
woosh.Token(woosh.COMMENT, '# Handle the common case first, for efficiency:', 1601, 8, 1601, 55),
woosh.Token(woosh.COMMENT, "# if they're string-identical, always return true.", 1602, 8, 1602, 58),
woosh.Token(woosh.NAME, 'if', 1603, 8, 1603, 10),
woosh.Token(woosh.NAME, 'got', 1603, 11, 1603, 14),
woosh.Token(woosh.OP, '==', 1603, 15, 1603, 17),
woosh.Token(woosh.NAME, 'want', 1603, 18, 1603, 22),
woosh.Token(woosh.OP, ':', 1603, 22, 1603, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1603, 23, 1604, 0),
woosh.Token(woosh.INDENT, '            ', 1604, 0, 1604, 12),
woosh.Token(woosh.NAME, 'return', 1604, 12, 1604, 18),
woosh.Token(woosh.NAME, 'True', 1604, 19, 1604, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1604, 23, 1605, 0),
woosh.Token(woosh.COMMENT, '# The values True and False replaced 1 and 0 as the return', 1606, 8, 1606, 66),
woosh.Token(woosh.COMMENT, '# value for boolean comparisons in Python 2.3.', 1607, 8, 1607, 54),
woosh.Token(woosh.DEDENT, '        ', 1608, 0, 1608, 8),
woosh.Token(woosh.NAME, 'if', 1608, 8, 1608, 10),
woosh.Token(woosh.NAME, 'not', 1608, 11, 1608, 14),
woosh.Token(woosh.OP, '(', 1608, 15, 1608, 16),
woosh.Token(woosh.NAME, 'optionflags', 1608, 16, 1608, 27),
woosh.Token(woosh.OP, '&', 1608, 28, 1608, 29),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_TRUE_FOR_1', 1608, 30, 1608, 52),
woosh.Token(woosh.OP, ')', 1608, 52, 1608, 53),
woosh.Token(woosh.OP, ':', 1608, 53, 1608, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1608, 54, 1609, 0),
woosh.Token(woosh.INDENT, '            ', 1609, 0, 1609, 12),
woosh.Token(woosh.NAME, 'if', 1609, 12, 1609, 14),
woosh.Token(woosh.OP, '(', 1609, 15, 1609, 16),
woosh.Token(woosh.NAME, 'got', 1609, 16, 1609, 19),
woosh.Token(woosh.OP, ',', 1609, 19, 1609, 20),
woosh.Token(woosh.NAME, 'want', 1609, 20, 1609, 24),
woosh.Token(woosh.OP, ')', 1609, 24, 1609, 25),
woosh.Token(woosh.OP, '==', 1609, 26, 1609, 28),
woosh.Token(woosh.OP, '(', 1609, 29, 1609, 30),
woosh.Token(woosh.STRING, '"True\\n"', 1609, 30, 1609, 38),
woosh.Token(woosh.OP, ',', 1609, 38, 1609, 39),
woosh.Token(woosh.STRING, '"1\\n"', 1609, 40, 1609, 45),
woosh.Token(woosh.OP, ')', 1609, 45, 1609, 46),
woosh.Token(woosh.OP, ':', 1609, 46, 1609, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1609, 47, 1610, 0),
woosh.Token(woosh.INDENT, '                ', 1610, 0, 1610, 16),
woosh.Token(woosh.NAME, 'return', 1610, 16, 1610, 22),
woosh.Token(woosh.NAME, 'True', 1610, 23, 1610, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1610, 27, 1611, 0),
woosh.Token(woosh.DEDENT, '            ', 1611, 0, 1611, 12),
woosh.Token(woosh.NAME, 'if', 1611, 12, 1611, 14),
woosh.Token(woosh.OP, '(', 1611, 15, 1611, 16),
woosh.Token(woosh.NAME, 'got', 1611, 16, 1611, 19),
woosh.Token(woosh.OP, ',', 1611, 19, 1611, 20),
woosh.Token(woosh.NAME, 'want', 1611, 20, 1611, 24),
woosh.Token(woosh.OP, ')', 1611, 24, 1611, 25),
woosh.Token(woosh.OP, '==', 1611, 26, 1611, 28),
woosh.Token(woosh.OP, '(', 1611, 29, 1611, 30),
woosh.Token(woosh.STRING, '"False\\n"', 1611, 30, 1611, 39),
woosh.Token(woosh.OP, ',', 1611, 39, 1611, 40),
woosh.Token(woosh.STRING, '"0\\n"', 1611, 41, 1611, 46),
woosh.Token(woosh.OP, ')', 1611, 46, 1611, 47),
woosh.Token(woosh.OP, ':', 1611, 47, 1611, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1611, 48, 1612, 0),
woosh.Token(woosh.INDENT, '                ', 1612, 0, 1612, 16),
woosh.Token(woosh.NAME, 'return', 1612, 16, 1612, 22),
woosh.Token(woosh.NAME, 'True', 1612, 23, 1612, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1612, 27, 1613, 0),
woosh.Token(woosh.COMMENT, '# <BLANKLINE> can be used as a special sequence to signify a', 1614, 8, 1614, 68),
woosh.Token(woosh.COMMENT, '# blank line, unless the DONT_ACCEPT_BLANKLINE flag is used.', 1615, 8, 1615, 68),
woosh.Token(woosh.DEDENT, '        ', 1616, 0, 1616, 8),
woosh.Token(woosh.DEDENT, '', 1616, 8, 1616, 8),
woosh.Token(woosh.NAME, 'if', 1616, 8, 1616, 10),
woosh.Token(woosh.NAME, 'not', 1616, 11, 1616, 14),
woosh.Token(woosh.OP, '(', 1616, 15, 1616, 16),
woosh.Token(woosh.NAME, 'optionflags', 1616, 16, 1616, 27),
woosh.Token(woosh.OP, '&', 1616, 28, 1616, 29),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_BLANKLINE', 1616, 30, 1616, 51),
woosh.Token(woosh.OP, ')', 1616, 51, 1616, 52),
woosh.Token(woosh.OP, ':', 1616, 52, 1616, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1616, 53, 1617, 0),
woosh.Token(woosh.COMMENT, '# Replace <BLANKLINE> in want with a blank line.', 1617, 12, 1617, 60),
woosh.Token(woosh.INDENT, '            ', 1618, 0, 1618, 12),
woosh.Token(woosh.NAME, 'want', 1618, 12, 1618, 16),
woosh.Token(woosh.OP, '=', 1618, 17, 1618, 18),
woosh.Token(woosh.NAME, 're', 1618, 19, 1618, 21),
woosh.Token(woosh.OP, '.', 1618, 21, 1618, 22),
woosh.Token(woosh.NAME, 'sub', 1618, 22, 1618, 25),
woosh.Token(woosh.OP, '(', 1618, 25, 1618, 26),
woosh.Token(woosh.STRING, "r'(?m)^%s\\s*?$'", 1618, 26, 1618, 41),
woosh.Token(woosh.OP, '%', 1618, 42, 1618, 43),
woosh.Token(woosh.NAME, 're', 1618, 44, 1618, 46),
woosh.Token(woosh.OP, '.', 1618, 46, 1618, 47),
woosh.Token(woosh.NAME, 'escape', 1618, 47, 1618, 53),
woosh.Token(woosh.OP, '(', 1618, 53, 1618, 54),
woosh.Token(woosh.NAME, 'BLANKLINE_MARKER', 1618, 54, 1618, 70),
woosh.Token(woosh.OP, ')', 1618, 70, 1618, 71),
woosh.Token(woosh.OP, ',', 1618, 71, 1618, 72),
woosh.Token(woosh.STRING, "''", 1619, 26, 1619, 28),
woosh.Token(woosh.OP, ',', 1619, 28, 1619, 29),
woosh.Token(woosh.NAME, 'want', 1619, 30, 1619, 34),
woosh.Token(woosh.OP, ')', 1619, 34, 1619, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1619, 35, 1620, 0),
woosh.Token(woosh.COMMENT, '# If a line in got contains only spaces, then remove the', 1620, 12, 1620, 68),
woosh.Token(woosh.COMMENT, '# spaces.', 1621, 12, 1621, 21),
woosh.Token(woosh.NAME, 'got', 1622, 12, 1622, 15),
woosh.Token(woosh.OP, '=', 1622, 16, 1622, 17),
woosh.Token(woosh.NAME, 're', 1622, 18, 1622, 20),
woosh.Token(woosh.OP, '.', 1622, 20, 1622, 21),
woosh.Token(woosh.NAME, 'sub', 1622, 21, 1622, 24),
woosh.Token(woosh.OP, '(', 1622, 24, 1622, 25),
woosh.Token(woosh.STRING, "r'(?m)^[^\\S\\n]+$'", 1622, 25, 1622, 42),
woosh.Token(woosh.OP, ',', 1622, 42, 1622, 43),
woosh.Token(woosh.STRING, "''", 1622, 44, 1622, 46),
woosh.Token(woosh.OP, ',', 1622, 46, 1622, 47),
woosh.Token(woosh.NAME, 'got', 1622, 48, 1622, 51),
woosh.Token(woosh.OP, ')', 1622, 51, 1622, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1622, 52, 1623, 0),
woosh.Token(woosh.NAME, 'if', 1623, 12, 1623, 14),
woosh.Token(woosh.NAME, 'got', 1623, 15, 1623, 18),
woosh.Token(woosh.OP, '==', 1623, 19, 1623, 21),
woosh.Token(woosh.NAME, 'want', 1623, 22, 1623, 26),
woosh.Token(woosh.OP, ':', 1623, 26, 1623, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1623, 27, 1624, 0),
woosh.Token(woosh.INDENT, '                ', 1624, 0, 1624, 16),
woosh.Token(woosh.NAME, 'return', 1624, 16, 1624, 22),
woosh.Token(woosh.NAME, 'True', 1624, 23, 1624, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1624, 27, 1625, 0),
woosh.Token(woosh.COMMENT, '# This flag causes doctest to ignore any differences in the', 1626, 8, 1626, 67),
woosh.Token(woosh.COMMENT, '# contents of whitespace strings.  Note that this can be used', 1627, 8, 1627, 69),
woosh.Token(woosh.COMMENT, '# in conjunction with the ELLIPSIS flag.', 1628, 8, 1628, 48),
woosh.Token(woosh.DEDENT, '        ', 1629, 0, 1629, 8),
woosh.Token(woosh.DEDENT, '', 1629, 8, 1629, 8),
woosh.Token(woosh.NAME, 'if', 1629, 8, 1629, 10),
woosh.Token(woosh.NAME, 'optionflags', 1629, 11, 1629, 22),
woosh.Token(woosh.OP, '&', 1629, 23, 1629, 24),
woosh.Token(woosh.NAME, 'NORMALIZE_WHITESPACE', 1629, 25, 1629, 45),
woosh.Token(woosh.OP, ':', 1629, 45, 1629, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1629, 46, 1630, 0),
woosh.Token(woosh.INDENT, '            ', 1630, 0, 1630, 12),
woosh.Token(woosh.NAME, 'got', 1630, 12, 1630, 15),
woosh.Token(woosh.OP, '=', 1630, 16, 1630, 17),
woosh.Token(woosh.STRING, "' '", 1630, 18, 1630, 21),
woosh.Token(woosh.OP, '.', 1630, 21, 1630, 22),
woosh.Token(woosh.NAME, 'join', 1630, 22, 1630, 26),
woosh.Token(woosh.OP, '(', 1630, 26, 1630, 27),
woosh.Token(woosh.NAME, 'got', 1630, 27, 1630, 30),
woosh.Token(woosh.OP, '.', 1630, 30, 1630, 31),
woosh.Token(woosh.NAME, 'split', 1630, 31, 1630, 36),
woosh.Token(woosh.OP, '(', 1630, 36, 1630, 37),
woosh.Token(woosh.OP, ')', 1630, 37, 1630, 38),
woosh.Token(woosh.OP, ')', 1630, 38, 1630, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1630, 39, 1631, 0),
woosh.Token(woosh.NAME, 'want', 1631, 12, 1631, 16),
woosh.Token(woosh.OP, '=', 1631, 17, 1631, 18),
woosh.Token(woosh.STRING, "' '", 1631, 19, 1631, 22),
woosh.Token(woosh.OP, '.', 1631, 22, 1631, 23),
woosh.Token(woosh.NAME, 'join', 1631, 23, 1631, 27),
woosh.Token(woosh.OP, '(', 1631, 27, 1631, 28),
woosh.Token(woosh.NAME, 'want', 1631, 28, 1631, 32),
woosh.Token(woosh.OP, '.', 1631, 32, 1631, 33),
woosh.Token(woosh.NAME, 'split', 1631, 33, 1631, 38),
woosh.Token(woosh.OP, '(', 1631, 38, 1631, 39),
woosh.Token(woosh.OP, ')', 1631, 39, 1631, 40),
woosh.Token(woosh.OP, ')', 1631, 40, 1631, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1631, 41, 1632, 0),
woosh.Token(woosh.NAME, 'if', 1632, 12, 1632, 14),
woosh.Token(woosh.NAME, 'got', 1632, 15, 1632, 18),
woosh.Token(woosh.OP, '==', 1632, 19, 1632, 21),
woosh.Token(woosh.NAME, 'want', 1632, 22, 1632, 26),
woosh.Token(woosh.OP, ':', 1632, 26, 1632, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1632, 27, 1633, 0),
woosh.Token(woosh.INDENT, '                ', 1633, 0, 1633, 16),
woosh.Token(woosh.NAME, 'return', 1633, 16, 1633, 22),
woosh.Token(woosh.NAME, 'True', 1633, 23, 1633, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1633, 27, 1634, 0),
woosh.Token(woosh.COMMENT, '# The ELLIPSIS flag says to let the sequence "..." in `want`', 1635, 8, 1635, 68),
woosh.Token(woosh.COMMENT, '# match any substring in `got`.', 1636, 8, 1636, 39),
woosh.Token(woosh.DEDENT, '        ', 1637, 0, 1637, 8),
woosh.Token(woosh.DEDENT, '', 1637, 8, 1637, 8),
woosh.Token(woosh.NAME, 'if', 1637, 8, 1637, 10),
woosh.Token(woosh.NAME, 'optionflags', 1637, 11, 1637, 22),
woosh.Token(woosh.OP, '&', 1637, 23, 1637, 24),
woosh.Token(woosh.NAME, 'ELLIPSIS', 1637, 25, 1637, 33),
woosh.Token(woosh.OP, ':', 1637, 33, 1637, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1637, 34, 1638, 0),
woosh.Token(woosh.INDENT, '            ', 1638, 0, 1638, 12),
woosh.Token(woosh.NAME, 'if', 1638, 12, 1638, 14),
woosh.Token(woosh.NAME, '_ellipsis_match', 1638, 15, 1638, 30),
woosh.Token(woosh.OP, '(', 1638, 30, 1638, 31),
woosh.Token(woosh.NAME, 'want', 1638, 31, 1638, 35),
woosh.Token(woosh.OP, ',', 1638, 35, 1638, 36),
woosh.Token(woosh.NAME, 'got', 1638, 37, 1638, 40),
woosh.Token(woosh.OP, ')', 1638, 40, 1638, 41),
woosh.Token(woosh.OP, ':', 1638, 41, 1638, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1638, 42, 1639, 0),
woosh.Token(woosh.INDENT, '                ', 1639, 0, 1639, 16),
woosh.Token(woosh.NAME, 'return', 1639, 16, 1639, 22),
woosh.Token(woosh.NAME, 'True', 1639, 23, 1639, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1639, 27, 1640, 0),
woosh.Token(woosh.COMMENT, "# We didn't find any match; return false.", 1641, 8, 1641, 49),
woosh.Token(woosh.DEDENT, '        ', 1642, 0, 1642, 8),
woosh.Token(woosh.DEDENT, '', 1642, 8, 1642, 8),
woosh.Token(woosh.NAME, 'return', 1642, 8, 1642, 14),
woosh.Token(woosh.NAME, 'False', 1642, 15, 1642, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1642, 20, 1643, 0),
woosh.Token(woosh.COMMENT, '# Should we do a fancy diff?', 1644, 4, 1644, 32),
woosh.Token(woosh.DEDENT, '    ', 1645, 0, 1645, 4),
woosh.Token(woosh.NAME, 'def', 1645, 4, 1645, 7),
woosh.Token(woosh.NAME, '_do_a_fancy_diff', 1645, 8, 1645, 24),
woosh.Token(woosh.OP, '(', 1645, 24, 1645, 25),
woosh.Token(woosh.NAME, 'self', 1645, 25, 1645, 29),
woosh.Token(woosh.OP, ',', 1645, 29, 1645, 30),
woosh.Token(woosh.NAME, 'want', 1645, 31, 1645, 35),
woosh.Token(woosh.OP, ',', 1645, 35, 1645, 36),
woosh.Token(woosh.NAME, 'got', 1645, 37, 1645, 40),
woosh.Token(woosh.OP, ',', 1645, 40, 1645, 41),
woosh.Token(woosh.NAME, 'optionflags', 1645, 42, 1645, 53),
woosh.Token(woosh.OP, ')', 1645, 53, 1645, 54),
woosh.Token(woosh.OP, ':', 1645, 54, 1645, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1645, 55, 1646, 0),
woosh.Token(woosh.COMMENT, '# Not unless they asked for a fancy diff.', 1646, 8, 1646, 49),
woosh.Token(woosh.INDENT, '        ', 1647, 0, 1647, 8),
woosh.Token(woosh.NAME, 'if', 1647, 8, 1647, 10),
woosh.Token(woosh.NAME, 'not', 1647, 11, 1647, 14),
woosh.Token(woosh.NAME, 'optionflags', 1647, 15, 1647, 26),
woosh.Token(woosh.OP, '&', 1647, 27, 1647, 28),
woosh.Token(woosh.OP, '(', 1647, 29, 1647, 30),
woosh.Token(woosh.NAME, 'REPORT_UDIFF', 1647, 30, 1647, 42),
woosh.Token(woosh.OP, '|', 1647, 43, 1647, 44),
woosh.Token(woosh.NAME, 'REPORT_CDIFF', 1648, 30, 1648, 42),
woosh.Token(woosh.OP, '|', 1648, 43, 1648, 44),
woosh.Token(woosh.NAME, 'REPORT_NDIFF', 1649, 30, 1649, 42),
woosh.Token(woosh.OP, ')', 1649, 42, 1649, 43),
woosh.Token(woosh.OP, ':', 1649, 43, 1649, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1649, 44, 1650, 0),
woosh.Token(woosh.INDENT, '            ', 1650, 0, 1650, 12),
woosh.Token(woosh.NAME, 'return', 1650, 12, 1650, 18),
woosh.Token(woosh.NAME, 'False', 1650, 19, 1650, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1650, 24, 1651, 0),
woosh.Token(woosh.COMMENT, '# If expected output uses ellipsis, a meaningful fancy diff is', 1652, 8, 1652, 70),
woosh.Token(woosh.COMMENT, '# too hard ... or maybe not.  In two real-life failures Tim saw,', 1653, 8, 1653, 72),
woosh.Token(woosh.COMMENT, '# a diff was a major help anyway, so this is commented out.', 1654, 8, 1654, 67),
woosh.Token(woosh.COMMENT, "# [todo] _ellipsis_match() knows which pieces do and don't match,", 1655, 8, 1655, 73),
woosh.Token(woosh.COMMENT, '# and could be the basis for a kick-ass diff in this case.', 1656, 8, 1656, 66),
woosh.Token(woosh.COMMENT, '##if optionflags & ELLIPSIS and ELLIPSIS_MARKER in want:', 1657, 8, 1657, 64),
woosh.Token(woosh.COMMENT, '##    return False', 1658, 8, 1658, 26),
woosh.Token(woosh.COMMENT, '# ndiff does intraline difference marking, so can be useful even', 1660, 8, 1660, 72),
woosh.Token(woosh.COMMENT, '# for 1-line differences.', 1661, 8, 1661, 33),
woosh.Token(woosh.DEDENT, '        ', 1662, 0, 1662, 8),
woosh.Token(woosh.NAME, 'if', 1662, 8, 1662, 10),
woosh.Token(woosh.NAME, 'optionflags', 1662, 11, 1662, 22),
woosh.Token(woosh.OP, '&', 1662, 23, 1662, 24),
woosh.Token(woosh.NAME, 'REPORT_NDIFF', 1662, 25, 1662, 37),
woosh.Token(woosh.OP, ':', 1662, 37, 1662, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1662, 38, 1663, 0),
woosh.Token(woosh.INDENT, '            ', 1663, 0, 1663, 12),
woosh.Token(woosh.NAME, 'return', 1663, 12, 1663, 18),
woosh.Token(woosh.NAME, 'True', 1663, 19, 1663, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1663, 23, 1664, 0),
woosh.Token(woosh.COMMENT, '# The other diff types need at least a few lines to be helpful.', 1665, 8, 1665, 71),
woosh.Token(woosh.DEDENT, '        ', 1666, 0, 1666, 8),
woosh.Token(woosh.NAME, 'return', 1666, 8, 1666, 14),
woosh.Token(woosh.NAME, 'want', 1666, 15, 1666, 19),
woosh.Token(woosh.OP, '.', 1666, 19, 1666, 20),
woosh.Token(woosh.NAME, 'count', 1666, 20, 1666, 25),
woosh.Token(woosh.OP, '(', 1666, 25, 1666, 26),
woosh.Token(woosh.STRING, "'\\n'", 1666, 26, 1666, 30),
woosh.Token(woosh.OP, ')', 1666, 30, 1666, 31),
woosh.Token(woosh.OP, '>', 1666, 32, 1666, 33),
woosh.Token(woosh.NUMBER, '2', 1666, 34, 1666, 35),
woosh.Token(woosh.NAME, 'and', 1666, 36, 1666, 39),
woosh.Token(woosh.NAME, 'got', 1666, 40, 1666, 43),
woosh.Token(woosh.OP, '.', 1666, 43, 1666, 44),
woosh.Token(woosh.NAME, 'count', 1666, 44, 1666, 49),
woosh.Token(woosh.OP, '(', 1666, 49, 1666, 50),
woosh.Token(woosh.STRING, "'\\n'", 1666, 50, 1666, 54),
woosh.Token(woosh.OP, ')', 1666, 54, 1666, 55),
woosh.Token(woosh.OP, '>', 1666, 56, 1666, 57),
woosh.Token(woosh.NUMBER, '2', 1666, 58, 1666, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1666, 59, 1667, 0),
woosh.Token(woosh.DEDENT, '    ', 1668, 0, 1668, 4),
woosh.Token(woosh.NAME, 'def', 1668, 4, 1668, 7),
woosh.Token(woosh.NAME, 'output_difference', 1668, 8, 1668, 25),
woosh.Token(woosh.OP, '(', 1668, 25, 1668, 26),
woosh.Token(woosh.NAME, 'self', 1668, 26, 1668, 30),
woosh.Token(woosh.OP, ',', 1668, 30, 1668, 31),
woosh.Token(woosh.NAME, 'example', 1668, 32, 1668, 39),
woosh.Token(woosh.OP, ',', 1668, 39, 1668, 40),
woosh.Token(woosh.NAME, 'got', 1668, 41, 1668, 44),
woosh.Token(woosh.OP, ',', 1668, 44, 1668, 45),
woosh.Token(woosh.NAME, 'optionflags', 1668, 46, 1668, 57),
woosh.Token(woosh.OP, ')', 1668, 57, 1668, 58),
woosh.Token(woosh.OP, ':', 1668, 58, 1668, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1668, 59, 1669, 0),
woosh.Token(woosh.INDENT, '        ', 1669, 0, 1669, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return a string describing the differences between the\r\n        expected output for a given example (`example`) and the actual\r\n        output (`got`).  `optionflags` is the set of option flags used\r\n        to compare `want` and `got`.\r\n        """', 1669, 8, 1674, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1674, 11, 1675, 0),
woosh.Token(woosh.NAME, 'want', 1675, 8, 1675, 12),
woosh.Token(woosh.OP, '=', 1675, 13, 1675, 14),
woosh.Token(woosh.NAME, 'example', 1675, 15, 1675, 22),
woosh.Token(woosh.OP, '.', 1675, 22, 1675, 23),
woosh.Token(woosh.NAME, 'want', 1675, 23, 1675, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1675, 27, 1676, 0),
woosh.Token(woosh.COMMENT, '# If <BLANKLINE>s are being used, then replace blank lines', 1676, 8, 1676, 66),
woosh.Token(woosh.COMMENT, '# with <BLANKLINE> in the actual output string.', 1677, 8, 1677, 55),
woosh.Token(woosh.NAME, 'if', 1678, 8, 1678, 10),
woosh.Token(woosh.NAME, 'not', 1678, 11, 1678, 14),
woosh.Token(woosh.OP, '(', 1678, 15, 1678, 16),
woosh.Token(woosh.NAME, 'optionflags', 1678, 16, 1678, 27),
woosh.Token(woosh.OP, '&', 1678, 28, 1678, 29),
woosh.Token(woosh.NAME, 'DONT_ACCEPT_BLANKLINE', 1678, 30, 1678, 51),
woosh.Token(woosh.OP, ')', 1678, 51, 1678, 52),
woosh.Token(woosh.OP, ':', 1678, 52, 1678, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1678, 53, 1679, 0),
woosh.Token(woosh.INDENT, '            ', 1679, 0, 1679, 12),
woosh.Token(woosh.NAME, 'got', 1679, 12, 1679, 15),
woosh.Token(woosh.OP, '=', 1679, 16, 1679, 17),
woosh.Token(woosh.NAME, 're', 1679, 18, 1679, 20),
woosh.Token(woosh.OP, '.', 1679, 20, 1679, 21),
woosh.Token(woosh.NAME, 'sub', 1679, 21, 1679, 24),
woosh.Token(woosh.OP, '(', 1679, 24, 1679, 25),
woosh.Token(woosh.STRING, "'(?m)^[ ]*(?=\\n)'", 1679, 25, 1679, 42),
woosh.Token(woosh.OP, ',', 1679, 42, 1679, 43),
woosh.Token(woosh.NAME, 'BLANKLINE_MARKER', 1679, 44, 1679, 60),
woosh.Token(woosh.OP, ',', 1679, 60, 1679, 61),
woosh.Token(woosh.NAME, 'got', 1679, 62, 1679, 65),
woosh.Token(woosh.OP, ')', 1679, 65, 1679, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1679, 66, 1680, 0),
woosh.Token(woosh.COMMENT, '# Check if we should use diff.', 1681, 8, 1681, 38),
woosh.Token(woosh.DEDENT, '        ', 1682, 0, 1682, 8),
woosh.Token(woosh.NAME, 'if', 1682, 8, 1682, 10),
woosh.Token(woosh.NAME, 'self', 1682, 11, 1682, 15),
woosh.Token(woosh.OP, '.', 1682, 15, 1682, 16),
woosh.Token(woosh.NAME, '_do_a_fancy_diff', 1682, 16, 1682, 32),
woosh.Token(woosh.OP, '(', 1682, 32, 1682, 33),
woosh.Token(woosh.NAME, 'want', 1682, 33, 1682, 37),
woosh.Token(woosh.OP, ',', 1682, 37, 1682, 38),
woosh.Token(woosh.NAME, 'got', 1682, 39, 1682, 42),
woosh.Token(woosh.OP, ',', 1682, 42, 1682, 43),
woosh.Token(woosh.NAME, 'optionflags', 1682, 44, 1682, 55),
woosh.Token(woosh.OP, ')', 1682, 55, 1682, 56),
woosh.Token(woosh.OP, ':', 1682, 56, 1682, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1682, 57, 1683, 0),
woosh.Token(woosh.COMMENT, '# Split want & got into lines.', 1683, 12, 1683, 42),
woosh.Token(woosh.INDENT, '            ', 1684, 0, 1684, 12),
woosh.Token(woosh.NAME, 'want_lines', 1684, 12, 1684, 22),
woosh.Token(woosh.OP, '=', 1684, 23, 1684, 24),
woosh.Token(woosh.NAME, 'want', 1684, 25, 1684, 29),
woosh.Token(woosh.OP, '.', 1684, 29, 1684, 30),
woosh.Token(woosh.NAME, 'splitlines', 1684, 30, 1684, 40),
woosh.Token(woosh.OP, '(', 1684, 40, 1684, 41),
woosh.Token(woosh.NAME, 'keepends', 1684, 41, 1684, 49),
woosh.Token(woosh.OP, '=', 1684, 49, 1684, 50),
woosh.Token(woosh.NAME, 'True', 1684, 50, 1684, 54),
woosh.Token(woosh.OP, ')', 1684, 54, 1684, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1684, 55, 1685, 0),
woosh.Token(woosh.NAME, 'got_lines', 1685, 12, 1685, 21),
woosh.Token(woosh.OP, '=', 1685, 22, 1685, 23),
woosh.Token(woosh.NAME, 'got', 1685, 24, 1685, 27),
woosh.Token(woosh.OP, '.', 1685, 27, 1685, 28),
woosh.Token(woosh.NAME, 'splitlines', 1685, 28, 1685, 38),
woosh.Token(woosh.OP, '(', 1685, 38, 1685, 39),
woosh.Token(woosh.NAME, 'keepends', 1685, 39, 1685, 47),
woosh.Token(woosh.OP, '=', 1685, 47, 1685, 48),
woosh.Token(woosh.NAME, 'True', 1685, 48, 1685, 52),
woosh.Token(woosh.OP, ')', 1685, 52, 1685, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1685, 53, 1686, 0),
woosh.Token(woosh.COMMENT, '# Use difflib to find their differences.', 1686, 12, 1686, 52),
woosh.Token(woosh.NAME, 'if', 1687, 12, 1687, 14),
woosh.Token(woosh.NAME, 'optionflags', 1687, 15, 1687, 26),
woosh.Token(woosh.OP, '&', 1687, 27, 1687, 28),
woosh.Token(woosh.NAME, 'REPORT_UDIFF', 1687, 29, 1687, 41),
woosh.Token(woosh.OP, ':', 1687, 41, 1687, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1687, 42, 1688, 0),
woosh.Token(woosh.INDENT, '                ', 1688, 0, 1688, 16),
woosh.Token(woosh.NAME, 'diff', 1688, 16, 1688, 20),
woosh.Token(woosh.OP, '=', 1688, 21, 1688, 22),
woosh.Token(woosh.NAME, 'difflib', 1688, 23, 1688, 30),
woosh.Token(woosh.OP, '.', 1688, 30, 1688, 31),
woosh.Token(woosh.NAME, 'unified_diff', 1688, 31, 1688, 43),
woosh.Token(woosh.OP, '(', 1688, 43, 1688, 44),
woosh.Token(woosh.NAME, 'want_lines', 1688, 44, 1688, 54),
woosh.Token(woosh.OP, ',', 1688, 54, 1688, 55),
woosh.Token(woosh.NAME, 'got_lines', 1688, 56, 1688, 65),
woosh.Token(woosh.OP, ',', 1688, 65, 1688, 66),
woosh.Token(woosh.NAME, 'n', 1688, 67, 1688, 68),
woosh.Token(woosh.OP, '=', 1688, 68, 1688, 69),
woosh.Token(woosh.NUMBER, '2', 1688, 69, 1688, 70),
woosh.Token(woosh.OP, ')', 1688, 70, 1688, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1688, 71, 1689, 0),
woosh.Token(woosh.NAME, 'diff', 1689, 16, 1689, 20),
woosh.Token(woosh.OP, '=', 1689, 21, 1689, 22),
woosh.Token(woosh.NAME, 'list', 1689, 23, 1689, 27),
woosh.Token(woosh.OP, '(', 1689, 27, 1689, 28),
woosh.Token(woosh.NAME, 'diff', 1689, 28, 1689, 32),
woosh.Token(woosh.OP, ')', 1689, 32, 1689, 33),
woosh.Token(woosh.OP, '[', 1689, 33, 1689, 34),
woosh.Token(woosh.NUMBER, '2', 1689, 34, 1689, 35),
woosh.Token(woosh.OP, ':', 1689, 35, 1689, 36),
woosh.Token(woosh.OP, ']', 1689, 36, 1689, 37),
woosh.Token(woosh.COMMENT, '# strip the diff header', 1689, 38, 1689, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1689, 61, 1690, 0),
woosh.Token(woosh.NAME, 'kind', 1690, 16, 1690, 20),
woosh.Token(woosh.OP, '=', 1690, 21, 1690, 22),
woosh.Token(woosh.STRING, "'unified diff with -expected +actual'", 1690, 23, 1690, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1690, 60, 1691, 0),
woosh.Token(woosh.DEDENT, '            ', 1691, 0, 1691, 12),
woosh.Token(woosh.NAME, 'elif', 1691, 12, 1691, 16),
woosh.Token(woosh.NAME, 'optionflags', 1691, 17, 1691, 28),
woosh.Token(woosh.OP, '&', 1691, 29, 1691, 30),
woosh.Token(woosh.NAME, 'REPORT_CDIFF', 1691, 31, 1691, 43),
woosh.Token(woosh.OP, ':', 1691, 43, 1691, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1691, 44, 1692, 0),
woosh.Token(woosh.INDENT, '                ', 1692, 0, 1692, 16),
woosh.Token(woosh.NAME, 'diff', 1692, 16, 1692, 20),
woosh.Token(woosh.OP, '=', 1692, 21, 1692, 22),
woosh.Token(woosh.NAME, 'difflib', 1692, 23, 1692, 30),
woosh.Token(woosh.OP, '.', 1692, 30, 1692, 31),
woosh.Token(woosh.NAME, 'context_diff', 1692, 31, 1692, 43),
woosh.Token(woosh.OP, '(', 1692, 43, 1692, 44),
woosh.Token(woosh.NAME, 'want_lines', 1692, 44, 1692, 54),
woosh.Token(woosh.OP, ',', 1692, 54, 1692, 55),
woosh.Token(woosh.NAME, 'got_lines', 1692, 56, 1692, 65),
woosh.Token(woosh.OP, ',', 1692, 65, 1692, 66),
woosh.Token(woosh.NAME, 'n', 1692, 67, 1692, 68),
woosh.Token(woosh.OP, '=', 1692, 68, 1692, 69),
woosh.Token(woosh.NUMBER, '2', 1692, 69, 1692, 70),
woosh.Token(woosh.OP, ')', 1692, 70, 1692, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1692, 71, 1693, 0),
woosh.Token(woosh.NAME, 'diff', 1693, 16, 1693, 20),
woosh.Token(woosh.OP, '=', 1693, 21, 1693, 22),
woosh.Token(woosh.NAME, 'list', 1693, 23, 1693, 27),
woosh.Token(woosh.OP, '(', 1693, 27, 1693, 28),
woosh.Token(woosh.NAME, 'diff', 1693, 28, 1693, 32),
woosh.Token(woosh.OP, ')', 1693, 32, 1693, 33),
woosh.Token(woosh.OP, '[', 1693, 33, 1693, 34),
woosh.Token(woosh.NUMBER, '2', 1693, 34, 1693, 35),
woosh.Token(woosh.OP, ':', 1693, 35, 1693, 36),
woosh.Token(woosh.OP, ']', 1693, 36, 1693, 37),
woosh.Token(woosh.COMMENT, '# strip the diff header', 1693, 38, 1693, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1693, 61, 1694, 0),
woosh.Token(woosh.NAME, 'kind', 1694, 16, 1694, 20),
woosh.Token(woosh.OP, '=', 1694, 21, 1694, 22),
woosh.Token(woosh.STRING, "'context diff with expected followed by actual'", 1694, 23, 1694, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1694, 70, 1695, 0),
woosh.Token(woosh.DEDENT, '            ', 1695, 0, 1695, 12),
woosh.Token(woosh.NAME, 'elif', 1695, 12, 1695, 16),
woosh.Token(woosh.NAME, 'optionflags', 1695, 17, 1695, 28),
woosh.Token(woosh.OP, '&', 1695, 29, 1695, 30),
woosh.Token(woosh.NAME, 'REPORT_NDIFF', 1695, 31, 1695, 43),
woosh.Token(woosh.OP, ':', 1695, 43, 1695, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1695, 44, 1696, 0),
woosh.Token(woosh.INDENT, '                ', 1696, 0, 1696, 16),
woosh.Token(woosh.NAME, 'engine', 1696, 16, 1696, 22),
woosh.Token(woosh.OP, '=', 1696, 23, 1696, 24),
woosh.Token(woosh.NAME, 'difflib', 1696, 25, 1696, 32),
woosh.Token(woosh.OP, '.', 1696, 32, 1696, 33),
woosh.Token(woosh.NAME, 'Differ', 1696, 33, 1696, 39),
woosh.Token(woosh.OP, '(', 1696, 39, 1696, 40),
woosh.Token(woosh.NAME, 'charjunk', 1696, 40, 1696, 48),
woosh.Token(woosh.OP, '=', 1696, 48, 1696, 49),
woosh.Token(woosh.NAME, 'difflib', 1696, 49, 1696, 56),
woosh.Token(woosh.OP, '.', 1696, 56, 1696, 57),
woosh.Token(woosh.NAME, 'IS_CHARACTER_JUNK', 1696, 57, 1696, 74),
woosh.Token(woosh.OP, ')', 1696, 74, 1696, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1696, 75, 1697, 0),
woosh.Token(woosh.NAME, 'diff', 1697, 16, 1697, 20),
woosh.Token(woosh.OP, '=', 1697, 21, 1697, 22),
woosh.Token(woosh.NAME, 'list', 1697, 23, 1697, 27),
woosh.Token(woosh.OP, '(', 1697, 27, 1697, 28),
woosh.Token(woosh.NAME, 'engine', 1697, 28, 1697, 34),
woosh.Token(woosh.OP, '.', 1697, 34, 1697, 35),
woosh.Token(woosh.NAME, 'compare', 1697, 35, 1697, 42),
woosh.Token(woosh.OP, '(', 1697, 42, 1697, 43),
woosh.Token(woosh.NAME, 'want_lines', 1697, 43, 1697, 53),
woosh.Token(woosh.OP, ',', 1697, 53, 1697, 54),
woosh.Token(woosh.NAME, 'got_lines', 1697, 55, 1697, 64),
woosh.Token(woosh.OP, ')', 1697, 64, 1697, 65),
woosh.Token(woosh.OP, ')', 1697, 65, 1697, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1697, 66, 1698, 0),
woosh.Token(woosh.NAME, 'kind', 1698, 16, 1698, 20),
woosh.Token(woosh.OP, '=', 1698, 21, 1698, 22),
woosh.Token(woosh.STRING, "'ndiff with -expected +actual'", 1698, 23, 1698, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1698, 53, 1699, 0),
woosh.Token(woosh.DEDENT, '            ', 1699, 0, 1699, 12),
woosh.Token(woosh.NAME, 'else', 1699, 12, 1699, 16),
woosh.Token(woosh.OP, ':', 1699, 16, 1699, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1699, 17, 1700, 0),
woosh.Token(woosh.INDENT, '                ', 1700, 0, 1700, 16),
woosh.Token(woosh.NAME, 'assert', 1700, 16, 1700, 22),
woosh.Token(woosh.NUMBER, '0', 1700, 23, 1700, 24),
woosh.Token(woosh.OP, ',', 1700, 24, 1700, 25),
woosh.Token(woosh.STRING, "'Bad diff option'", 1700, 26, 1700, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1700, 43, 1701, 0),
woosh.Token(woosh.DEDENT, '            ', 1701, 0, 1701, 12),
woosh.Token(woosh.NAME, 'return', 1701, 12, 1701, 18),
woosh.Token(woosh.STRING, "'Differences (%s):\\n'", 1701, 19, 1701, 40),
woosh.Token(woosh.OP, '%', 1701, 41, 1701, 42),
woosh.Token(woosh.NAME, 'kind', 1701, 43, 1701, 47),
woosh.Token(woosh.OP, '+', 1701, 48, 1701, 49),
woosh.Token(woosh.NAME, '_indent', 1701, 50, 1701, 57),
woosh.Token(woosh.OP, '(', 1701, 57, 1701, 58),
woosh.Token(woosh.STRING, "''", 1701, 58, 1701, 60),
woosh.Token(woosh.OP, '.', 1701, 60, 1701, 61),
woosh.Token(woosh.NAME, 'join', 1701, 61, 1701, 65),
woosh.Token(woosh.OP, '(', 1701, 65, 1701, 66),
woosh.Token(woosh.NAME, 'diff', 1701, 66, 1701, 70),
woosh.Token(woosh.OP, ')', 1701, 70, 1701, 71),
woosh.Token(woosh.OP, ')', 1701, 71, 1701, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1701, 72, 1702, 0),
woosh.Token(woosh.COMMENT, "# If we're not using diff, then simply list the expected", 1703, 8, 1703, 64),
woosh.Token(woosh.COMMENT, '# output followed by the actual output.', 1704, 8, 1704, 47),
woosh.Token(woosh.DEDENT, '        ', 1705, 0, 1705, 8),
woosh.Token(woosh.NAME, 'if', 1705, 8, 1705, 10),
woosh.Token(woosh.NAME, 'want', 1705, 11, 1705, 15),
woosh.Token(woosh.NAME, 'and', 1705, 16, 1705, 19),
woosh.Token(woosh.NAME, 'got', 1705, 20, 1705, 23),
woosh.Token(woosh.OP, ':', 1705, 23, 1705, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1705, 24, 1706, 0),
woosh.Token(woosh.INDENT, '            ', 1706, 0, 1706, 12),
woosh.Token(woosh.NAME, 'return', 1706, 12, 1706, 18),
woosh.Token(woosh.STRING, "'Expected:\\n%sGot:\\n%s'", 1706, 19, 1706, 42),
woosh.Token(woosh.OP, '%', 1706, 43, 1706, 44),
woosh.Token(woosh.OP, '(', 1706, 45, 1706, 46),
woosh.Token(woosh.NAME, '_indent', 1706, 46, 1706, 53),
woosh.Token(woosh.OP, '(', 1706, 53, 1706, 54),
woosh.Token(woosh.NAME, 'want', 1706, 54, 1706, 58),
woosh.Token(woosh.OP, ')', 1706, 58, 1706, 59),
woosh.Token(woosh.OP, ',', 1706, 59, 1706, 60),
woosh.Token(woosh.NAME, '_indent', 1706, 61, 1706, 68),
woosh.Token(woosh.OP, '(', 1706, 68, 1706, 69),
woosh.Token(woosh.NAME, 'got', 1706, 69, 1706, 72),
woosh.Token(woosh.OP, ')', 1706, 72, 1706, 73),
woosh.Token(woosh.OP, ')', 1706, 73, 1706, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1706, 74, 1707, 0),
woosh.Token(woosh.DEDENT, '        ', 1707, 0, 1707, 8),
woosh.Token(woosh.NAME, 'elif', 1707, 8, 1707, 12),
woosh.Token(woosh.NAME, 'want', 1707, 13, 1707, 17),
woosh.Token(woosh.OP, ':', 1707, 17, 1707, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1707, 18, 1708, 0),
woosh.Token(woosh.INDENT, '            ', 1708, 0, 1708, 12),
woosh.Token(woosh.NAME, 'return', 1708, 12, 1708, 18),
woosh.Token(woosh.STRING, "'Expected:\\n%sGot nothing\\n'", 1708, 19, 1708, 47),
woosh.Token(woosh.OP, '%', 1708, 48, 1708, 49),
woosh.Token(woosh.NAME, '_indent', 1708, 50, 1708, 57),
woosh.Token(woosh.OP, '(', 1708, 57, 1708, 58),
woosh.Token(woosh.NAME, 'want', 1708, 58, 1708, 62),
woosh.Token(woosh.OP, ')', 1708, 62, 1708, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1708, 63, 1709, 0),
woosh.Token(woosh.DEDENT, '        ', 1709, 0, 1709, 8),
woosh.Token(woosh.NAME, 'elif', 1709, 8, 1709, 12),
woosh.Token(woosh.NAME, 'got', 1709, 13, 1709, 16),
woosh.Token(woosh.OP, ':', 1709, 16, 1709, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1709, 17, 1710, 0),
woosh.Token(woosh.INDENT, '            ', 1710, 0, 1710, 12),
woosh.Token(woosh.NAME, 'return', 1710, 12, 1710, 18),
woosh.Token(woosh.STRING, "'Expected nothing\\nGot:\\n%s'", 1710, 19, 1710, 47),
woosh.Token(woosh.OP, '%', 1710, 48, 1710, 49),
woosh.Token(woosh.NAME, '_indent', 1710, 50, 1710, 57),
woosh.Token(woosh.OP, '(', 1710, 57, 1710, 58),
woosh.Token(woosh.NAME, 'got', 1710, 58, 1710, 61),
woosh.Token(woosh.OP, ')', 1710, 61, 1710, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1710, 62, 1711, 0),
woosh.Token(woosh.DEDENT, '        ', 1711, 0, 1711, 8),
woosh.Token(woosh.NAME, 'else', 1711, 8, 1711, 12),
woosh.Token(woosh.OP, ':', 1711, 12, 1711, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1711, 13, 1712, 0),
woosh.Token(woosh.INDENT, '            ', 1712, 0, 1712, 12),
woosh.Token(woosh.NAME, 'return', 1712, 12, 1712, 18),
woosh.Token(woosh.STRING, "'Expected nothing\\nGot nothing\\n'", 1712, 19, 1712, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1712, 52, 1713, 0),
woosh.Token(woosh.DEDENT, '', 1714, 0, 1714, 0),
woosh.Token(woosh.DEDENT, '', 1714, 0, 1714, 0),
woosh.Token(woosh.DEDENT, '', 1714, 0, 1714, 0),
woosh.Token(woosh.NAME, 'class', 1714, 0, 1714, 5),
woosh.Token(woosh.NAME, 'DocTestFailure', 1714, 6, 1714, 20),
woosh.Token(woosh.OP, '(', 1714, 20, 1714, 21),
woosh.Token(woosh.NAME, 'Exception', 1714, 21, 1714, 30),
woosh.Token(woosh.OP, ')', 1714, 30, 1714, 31),
woosh.Token(woosh.OP, ':', 1714, 31, 1714, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1714, 32, 1715, 0),
woosh.Token(woosh.INDENT, '    ', 1715, 0, 1715, 4),
woosh.Token(woosh.STRING, '"""A DocTest example has failed in debugging mode.\r\n\r\n    The exception instance has variables:\r\n\r\n    - test: the DocTest object being run\r\n\r\n    - example: the Example object that failed\r\n\r\n    - got: the actual output\r\n    """', 1715, 4, 1724, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1724, 7, 1725, 0),
woosh.Token(woosh.NAME, 'def', 1725, 4, 1725, 7),
woosh.Token(woosh.NAME, '__init__', 1725, 8, 1725, 16),
woosh.Token(woosh.OP, '(', 1725, 16, 1725, 17),
woosh.Token(woosh.NAME, 'self', 1725, 17, 1725, 21),
woosh.Token(woosh.OP, ',', 1725, 21, 1725, 22),
woosh.Token(woosh.NAME, 'test', 1725, 23, 1725, 27),
woosh.Token(woosh.OP, ',', 1725, 27, 1725, 28),
woosh.Token(woosh.NAME, 'example', 1725, 29, 1725, 36),
woosh.Token(woosh.OP, ',', 1725, 36, 1725, 37),
woosh.Token(woosh.NAME, 'got', 1725, 38, 1725, 41),
woosh.Token(woosh.OP, ')', 1725, 41, 1725, 42),
woosh.Token(woosh.OP, ':', 1725, 42, 1725, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1725, 43, 1726, 0),
woosh.Token(woosh.INDENT, '        ', 1726, 0, 1726, 8),
woosh.Token(woosh.NAME, 'self', 1726, 8, 1726, 12),
woosh.Token(woosh.OP, '.', 1726, 12, 1726, 13),
woosh.Token(woosh.NAME, 'test', 1726, 13, 1726, 17),
woosh.Token(woosh.OP, '=', 1726, 18, 1726, 19),
woosh.Token(woosh.NAME, 'test', 1726, 20, 1726, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1726, 24, 1727, 0),
woosh.Token(woosh.NAME, 'self', 1727, 8, 1727, 12),
woosh.Token(woosh.OP, '.', 1727, 12, 1727, 13),
woosh.Token(woosh.NAME, 'example', 1727, 13, 1727, 20),
woosh.Token(woosh.OP, '=', 1727, 21, 1727, 22),
woosh.Token(woosh.NAME, 'example', 1727, 23, 1727, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1727, 30, 1728, 0),
woosh.Token(woosh.NAME, 'self', 1728, 8, 1728, 12),
woosh.Token(woosh.OP, '.', 1728, 12, 1728, 13),
woosh.Token(woosh.NAME, 'got', 1728, 13, 1728, 16),
woosh.Token(woosh.OP, '=', 1728, 17, 1728, 18),
woosh.Token(woosh.NAME, 'got', 1728, 19, 1728, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1728, 22, 1729, 0),
woosh.Token(woosh.DEDENT, '    ', 1730, 0, 1730, 4),
woosh.Token(woosh.NAME, 'def', 1730, 4, 1730, 7),
woosh.Token(woosh.NAME, '__str__', 1730, 8, 1730, 15),
woosh.Token(woosh.OP, '(', 1730, 15, 1730, 16),
woosh.Token(woosh.NAME, 'self', 1730, 16, 1730, 20),
woosh.Token(woosh.OP, ')', 1730, 20, 1730, 21),
woosh.Token(woosh.OP, ':', 1730, 21, 1730, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1730, 22, 1731, 0),
woosh.Token(woosh.INDENT, '        ', 1731, 0, 1731, 8),
woosh.Token(woosh.NAME, 'return', 1731, 8, 1731, 14),
woosh.Token(woosh.NAME, 'str', 1731, 15, 1731, 18),
woosh.Token(woosh.OP, '(', 1731, 18, 1731, 19),
woosh.Token(woosh.NAME, 'self', 1731, 19, 1731, 23),
woosh.Token(woosh.OP, '.', 1731, 23, 1731, 24),
woosh.Token(woosh.NAME, 'test', 1731, 24, 1731, 28),
woosh.Token(woosh.OP, ')', 1731, 28, 1731, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1731, 29, 1732, 0),
woosh.Token(woosh.DEDENT, '', 1733, 0, 1733, 0),
woosh.Token(woosh.DEDENT, '', 1733, 0, 1733, 0),
woosh.Token(woosh.NAME, 'class', 1733, 0, 1733, 5),
woosh.Token(woosh.NAME, 'UnexpectedException', 1733, 6, 1733, 25),
woosh.Token(woosh.OP, '(', 1733, 25, 1733, 26),
woosh.Token(woosh.NAME, 'Exception', 1733, 26, 1733, 35),
woosh.Token(woosh.OP, ')', 1733, 35, 1733, 36),
woosh.Token(woosh.OP, ':', 1733, 36, 1733, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1733, 37, 1734, 0),
woosh.Token(woosh.INDENT, '    ', 1734, 0, 1734, 4),
woosh.Token(woosh.STRING, '"""A DocTest example has encountered an unexpected exception\r\n\r\n    The exception instance has variables:\r\n\r\n    - test: the DocTest object being run\r\n\r\n    - example: the Example object that failed\r\n\r\n    - exc_info: the exception info\r\n    """', 1734, 4, 1743, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1743, 7, 1744, 0),
woosh.Token(woosh.NAME, 'def', 1744, 4, 1744, 7),
woosh.Token(woosh.NAME, '__init__', 1744, 8, 1744, 16),
woosh.Token(woosh.OP, '(', 1744, 16, 1744, 17),
woosh.Token(woosh.NAME, 'self', 1744, 17, 1744, 21),
woosh.Token(woosh.OP, ',', 1744, 21, 1744, 22),
woosh.Token(woosh.NAME, 'test', 1744, 23, 1744, 27),
woosh.Token(woosh.OP, ',', 1744, 27, 1744, 28),
woosh.Token(woosh.NAME, 'example', 1744, 29, 1744, 36),
woosh.Token(woosh.OP, ',', 1744, 36, 1744, 37),
woosh.Token(woosh.NAME, 'exc_info', 1744, 38, 1744, 46),
woosh.Token(woosh.OP, ')', 1744, 46, 1744, 47),
woosh.Token(woosh.OP, ':', 1744, 47, 1744, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1744, 48, 1745, 0),
woosh.Token(woosh.INDENT, '        ', 1745, 0, 1745, 8),
woosh.Token(woosh.NAME, 'self', 1745, 8, 1745, 12),
woosh.Token(woosh.OP, '.', 1745, 12, 1745, 13),
woosh.Token(woosh.NAME, 'test', 1745, 13, 1745, 17),
woosh.Token(woosh.OP, '=', 1745, 18, 1745, 19),
woosh.Token(woosh.NAME, 'test', 1745, 20, 1745, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1745, 24, 1746, 0),
woosh.Token(woosh.NAME, 'self', 1746, 8, 1746, 12),
woosh.Token(woosh.OP, '.', 1746, 12, 1746, 13),
woosh.Token(woosh.NAME, 'example', 1746, 13, 1746, 20),
woosh.Token(woosh.OP, '=', 1746, 21, 1746, 22),
woosh.Token(woosh.NAME, 'example', 1746, 23, 1746, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1746, 30, 1747, 0),
woosh.Token(woosh.NAME, 'self', 1747, 8, 1747, 12),
woosh.Token(woosh.OP, '.', 1747, 12, 1747, 13),
woosh.Token(woosh.NAME, 'exc_info', 1747, 13, 1747, 21),
woosh.Token(woosh.OP, '=', 1747, 22, 1747, 23),
woosh.Token(woosh.NAME, 'exc_info', 1747, 24, 1747, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1747, 32, 1748, 0),
woosh.Token(woosh.DEDENT, '    ', 1749, 0, 1749, 4),
woosh.Token(woosh.NAME, 'def', 1749, 4, 1749, 7),
woosh.Token(woosh.NAME, '__str__', 1749, 8, 1749, 15),
woosh.Token(woosh.OP, '(', 1749, 15, 1749, 16),
woosh.Token(woosh.NAME, 'self', 1749, 16, 1749, 20),
woosh.Token(woosh.OP, ')', 1749, 20, 1749, 21),
woosh.Token(woosh.OP, ':', 1749, 21, 1749, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1749, 22, 1750, 0),
woosh.Token(woosh.INDENT, '        ', 1750, 0, 1750, 8),
woosh.Token(woosh.NAME, 'return', 1750, 8, 1750, 14),
woosh.Token(woosh.NAME, 'str', 1750, 15, 1750, 18),
woosh.Token(woosh.OP, '(', 1750, 18, 1750, 19),
woosh.Token(woosh.NAME, 'self', 1750, 19, 1750, 23),
woosh.Token(woosh.OP, '.', 1750, 23, 1750, 24),
woosh.Token(woosh.NAME, 'test', 1750, 24, 1750, 28),
woosh.Token(woosh.OP, ')', 1750, 28, 1750, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1750, 29, 1751, 0),
woosh.Token(woosh.DEDENT, '', 1752, 0, 1752, 0),
woosh.Token(woosh.DEDENT, '', 1752, 0, 1752, 0),
woosh.Token(woosh.NAME, 'class', 1752, 0, 1752, 5),
woosh.Token(woosh.NAME, 'DebugRunner', 1752, 6, 1752, 17),
woosh.Token(woosh.OP, '(', 1752, 17, 1752, 18),
woosh.Token(woosh.NAME, 'DocTestRunner', 1752, 18, 1752, 31),
woosh.Token(woosh.OP, ')', 1752, 31, 1752, 32),
woosh.Token(woosh.OP, ':', 1752, 32, 1752, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1752, 33, 1753, 0),
woosh.Token(woosh.INDENT, '    ', 1753, 0, 1753, 4),
woosh.Token(woosh.STRING, 'r"""Run doc tests but raise an exception as soon as there is a failure.\r\n\r\n       If an unexpected exception occurs, an UnexpectedException is raised.\r\n       It contains the test, the example, and the original exception:\r\n\r\n         >>> runner = DebugRunner(verbose=False)\r\n         >>> test = DocTestParser().get_doctest(\'>>> raise KeyError\\n42\',\r\n         ...                                    {}, \'foo\', \'foo.py\', 0)\r\n         >>> try:\r\n         ...     runner.run(test)\r\n         ... except UnexpectedException as f:\r\n         ...     failure = f\r\n\r\n         >>> failure.test is test\r\n         True\r\n\r\n         >>> failure.example.want\r\n         \'42\\n\'\r\n\r\n         >>> exc_info = failure.exc_info\r\n         >>> raise exc_info[1] # Already has the traceback\r\n         Traceback (most recent call last):\r\n         ...\r\n         KeyError\r\n\r\n       We wrap the original exception to give the calling application\r\n       access to the test and example information.\r\n\r\n       If the output doesn\'t match, then a DocTestFailure is raised:\r\n\r\n         >>> test = DocTestParser().get_doctest(\'\'\'\r\n         ...      >>> x = 1\r\n         ...      >>> x\r\n         ...      2\r\n         ...      \'\'\', {}, \'foo\', \'foo.py\', 0)\r\n\r\n         >>> try:\r\n         ...    runner.run(test)\r\n         ... except DocTestFailure as f:\r\n         ...    failure = f\r\n\r\n       DocTestFailure objects provide access to the test:\r\n\r\n         >>> failure.test is test\r\n         True\r\n\r\n       As well as to the example:\r\n\r\n         >>> failure.example.want\r\n         \'2\\n\'\r\n\r\n       and the actual output:\r\n\r\n         >>> failure.got\r\n         \'1\\n\'\r\n\r\n       If a failure or error occurs, the globals are left intact:\r\n\r\n         >>> del test.globs[\'__builtins__\']\r\n         >>> test.globs\r\n         {\'x\': 1}\r\n\r\n         >>> test = DocTestParser().get_doctest(\'\'\'\r\n         ...      >>> x = 2\r\n         ...      >>> raise KeyError\r\n         ...      \'\'\', {}, \'foo\', \'foo.py\', 0)\r\n\r\n         >>> runner.run(test)\r\n         Traceback (most recent call last):\r\n         ...\r\n         doctest.UnexpectedException: <DocTest foo from foo.py:0 (2 examples)>\r\n\r\n         >>> del test.globs[\'__builtins__\']\r\n         >>> test.globs\r\n         {\'x\': 2}\r\n\r\n       But the globals are cleared if there is no error:\r\n\r\n         >>> test = DocTestParser().get_doctest(\'\'\'\r\n         ...      >>> x = 2\r\n         ...      \'\'\', {}, \'foo\', \'foo.py\', 0)\r\n\r\n         >>> runner.run(test)\r\n         TestResults(failed=0, attempted=1)\r\n\r\n         >>> test.globs\r\n         {}\r\n\r\n       """', 1753, 4, 1841, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 1841, 10, 1842, 0),
woosh.Token(woosh.NAME, 'def', 1843, 4, 1843, 7),
woosh.Token(woosh.NAME, 'run', 1843, 8, 1843, 11),
woosh.Token(woosh.OP, '(', 1843, 11, 1843, 12),
woosh.Token(woosh.NAME, 'self', 1843, 12, 1843, 16),
woosh.Token(woosh.OP, ',', 1843, 16, 1843, 17),
woosh.Token(woosh.NAME, 'test', 1843, 18, 1843, 22),
woosh.Token(woosh.OP, ',', 1843, 22, 1843, 23),
woosh.Token(woosh.NAME, 'compileflags', 1843, 24, 1843, 36),
woosh.Token(woosh.OP, '=', 1843, 36, 1843, 37),
woosh.Token(woosh.NAME, 'None', 1843, 37, 1843, 41),
woosh.Token(woosh.OP, ',', 1843, 41, 1843, 42),
woosh.Token(woosh.NAME, 'out', 1843, 43, 1843, 46),
woosh.Token(woosh.OP, '=', 1843, 46, 1843, 47),
woosh.Token(woosh.NAME, 'None', 1843, 47, 1843, 51),
woosh.Token(woosh.OP, ',', 1843, 51, 1843, 52),
woosh.Token(woosh.NAME, 'clear_globs', 1843, 53, 1843, 64),
woosh.Token(woosh.OP, '=', 1843, 64, 1843, 65),
woosh.Token(woosh.NAME, 'True', 1843, 65, 1843, 69),
woosh.Token(woosh.OP, ')', 1843, 69, 1843, 70),
woosh.Token(woosh.OP, ':', 1843, 70, 1843, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1843, 71, 1844, 0),
woosh.Token(woosh.INDENT, '        ', 1844, 0, 1844, 8),
woosh.Token(woosh.NAME, 'r', 1844, 8, 1844, 9),
woosh.Token(woosh.OP, '=', 1844, 10, 1844, 11),
woosh.Token(woosh.NAME, 'DocTestRunner', 1844, 12, 1844, 25),
woosh.Token(woosh.OP, '.', 1844, 25, 1844, 26),
woosh.Token(woosh.NAME, 'run', 1844, 26, 1844, 29),
woosh.Token(woosh.OP, '(', 1844, 29, 1844, 30),
woosh.Token(woosh.NAME, 'self', 1844, 30, 1844, 34),
woosh.Token(woosh.OP, ',', 1844, 34, 1844, 35),
woosh.Token(woosh.NAME, 'test', 1844, 36, 1844, 40),
woosh.Token(woosh.OP, ',', 1844, 40, 1844, 41),
woosh.Token(woosh.NAME, 'compileflags', 1844, 42, 1844, 54),
woosh.Token(woosh.OP, ',', 1844, 54, 1844, 55),
woosh.Token(woosh.NAME, 'out', 1844, 56, 1844, 59),
woosh.Token(woosh.OP, ',', 1844, 59, 1844, 60),
woosh.Token(woosh.NAME, 'False', 1844, 61, 1844, 66),
woosh.Token(woosh.OP, ')', 1844, 66, 1844, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1844, 67, 1845, 0),
woosh.Token(woosh.NAME, 'if', 1845, 8, 1845, 10),
woosh.Token(woosh.NAME, 'clear_globs', 1845, 11, 1845, 22),
woosh.Token(woosh.OP, ':', 1845, 22, 1845, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1845, 23, 1846, 0),
woosh.Token(woosh.INDENT, '            ', 1846, 0, 1846, 12),
woosh.Token(woosh.NAME, 'test', 1846, 12, 1846, 16),
woosh.Token(woosh.OP, '.', 1846, 16, 1846, 17),
woosh.Token(woosh.NAME, 'globs', 1846, 17, 1846, 22),
woosh.Token(woosh.OP, '.', 1846, 22, 1846, 23),
woosh.Token(woosh.NAME, 'clear', 1846, 23, 1846, 28),
woosh.Token(woosh.OP, '(', 1846, 28, 1846, 29),
woosh.Token(woosh.OP, ')', 1846, 29, 1846, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1846, 30, 1847, 0),
woosh.Token(woosh.DEDENT, '        ', 1847, 0, 1847, 8),
woosh.Token(woosh.NAME, 'return', 1847, 8, 1847, 14),
woosh.Token(woosh.NAME, 'r', 1847, 15, 1847, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1847, 16, 1848, 0),
woosh.Token(woosh.DEDENT, '    ', 1849, 0, 1849, 4),
woosh.Token(woosh.NAME, 'def', 1849, 4, 1849, 7),
woosh.Token(woosh.NAME, 'report_unexpected_exception', 1849, 8, 1849, 35),
woosh.Token(woosh.OP, '(', 1849, 35, 1849, 36),
woosh.Token(woosh.NAME, 'self', 1849, 36, 1849, 40),
woosh.Token(woosh.OP, ',', 1849, 40, 1849, 41),
woosh.Token(woosh.NAME, 'out', 1849, 42, 1849, 45),
woosh.Token(woosh.OP, ',', 1849, 45, 1849, 46),
woosh.Token(woosh.NAME, 'test', 1849, 47, 1849, 51),
woosh.Token(woosh.OP, ',', 1849, 51, 1849, 52),
woosh.Token(woosh.NAME, 'example', 1849, 53, 1849, 60),
woosh.Token(woosh.OP, ',', 1849, 60, 1849, 61),
woosh.Token(woosh.NAME, 'exc_info', 1849, 62, 1849, 70),
woosh.Token(woosh.OP, ')', 1849, 70, 1849, 71),
woosh.Token(woosh.OP, ':', 1849, 71, 1849, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1849, 72, 1850, 0),
woosh.Token(woosh.INDENT, '        ', 1850, 0, 1850, 8),
woosh.Token(woosh.NAME, 'raise', 1850, 8, 1850, 13),
woosh.Token(woosh.NAME, 'UnexpectedException', 1850, 14, 1850, 33),
woosh.Token(woosh.OP, '(', 1850, 33, 1850, 34),
woosh.Token(woosh.NAME, 'test', 1850, 34, 1850, 38),
woosh.Token(woosh.OP, ',', 1850, 38, 1850, 39),
woosh.Token(woosh.NAME, 'example', 1850, 40, 1850, 47),
woosh.Token(woosh.OP, ',', 1850, 47, 1850, 48),
woosh.Token(woosh.NAME, 'exc_info', 1850, 49, 1850, 57),
woosh.Token(woosh.OP, ')', 1850, 57, 1850, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1850, 58, 1851, 0),
woosh.Token(woosh.DEDENT, '    ', 1852, 0, 1852, 4),
woosh.Token(woosh.NAME, 'def', 1852, 4, 1852, 7),
woosh.Token(woosh.NAME, 'report_failure', 1852, 8, 1852, 22),
woosh.Token(woosh.OP, '(', 1852, 22, 1852, 23),
woosh.Token(woosh.NAME, 'self', 1852, 23, 1852, 27),
woosh.Token(woosh.OP, ',', 1852, 27, 1852, 28),
woosh.Token(woosh.NAME, 'out', 1852, 29, 1852, 32),
woosh.Token(woosh.OP, ',', 1852, 32, 1852, 33),
woosh.Token(woosh.NAME, 'test', 1852, 34, 1852, 38),
woosh.Token(woosh.OP, ',', 1852, 38, 1852, 39),
woosh.Token(woosh.NAME, 'example', 1852, 40, 1852, 47),
woosh.Token(woosh.OP, ',', 1852, 47, 1852, 48),
woosh.Token(woosh.NAME, 'got', 1852, 49, 1852, 52),
woosh.Token(woosh.OP, ')', 1852, 52, 1852, 53),
woosh.Token(woosh.OP, ':', 1852, 53, 1852, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1852, 54, 1853, 0),
woosh.Token(woosh.INDENT, '        ', 1853, 0, 1853, 8),
woosh.Token(woosh.NAME, 'raise', 1853, 8, 1853, 13),
woosh.Token(woosh.NAME, 'DocTestFailure', 1853, 14, 1853, 28),
woosh.Token(woosh.OP, '(', 1853, 28, 1853, 29),
woosh.Token(woosh.NAME, 'test', 1853, 29, 1853, 33),
woosh.Token(woosh.OP, ',', 1853, 33, 1853, 34),
woosh.Token(woosh.NAME, 'example', 1853, 35, 1853, 42),
woosh.Token(woosh.OP, ',', 1853, 42, 1853, 43),
woosh.Token(woosh.NAME, 'got', 1853, 44, 1853, 47),
woosh.Token(woosh.OP, ')', 1853, 47, 1853, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1853, 48, 1854, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 1855, 0, 1855, 70),
woosh.Token(woosh.COMMENT, '## 6. Test Functions', 1856, 0, 1856, 20),
woosh.Token(woosh.COMMENT, '######################################################################', 1857, 0, 1857, 70),
woosh.Token(woosh.COMMENT, '# These should be backwards compatible.', 1858, 0, 1858, 39),
woosh.Token(woosh.COMMENT, '# For backward compatibility, a global instance of a DocTestRunner', 1860, 0, 1860, 66),
woosh.Token(woosh.COMMENT, '# class, updated by testmod.', 1861, 0, 1861, 28),
woosh.Token(woosh.DEDENT, '', 1862, 0, 1862, 0),
woosh.Token(woosh.DEDENT, '', 1862, 0, 1862, 0),
woosh.Token(woosh.NAME, 'master', 1862, 0, 1862, 6),
woosh.Token(woosh.OP, '=', 1862, 7, 1862, 8),
woosh.Token(woosh.NAME, 'None', 1862, 9, 1862, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1862, 13, 1863, 0),
woosh.Token(woosh.NAME, 'def', 1864, 0, 1864, 3),
woosh.Token(woosh.NAME, 'testmod', 1864, 4, 1864, 11),
woosh.Token(woosh.OP, '(', 1864, 11, 1864, 12),
woosh.Token(woosh.NAME, 'm', 1864, 12, 1864, 13),
woosh.Token(woosh.OP, '=', 1864, 13, 1864, 14),
woosh.Token(woosh.NAME, 'None', 1864, 14, 1864, 18),
woosh.Token(woosh.OP, ',', 1864, 18, 1864, 19),
woosh.Token(woosh.NAME, 'name', 1864, 20, 1864, 24),
woosh.Token(woosh.OP, '=', 1864, 24, 1864, 25),
woosh.Token(woosh.NAME, 'None', 1864, 25, 1864, 29),
woosh.Token(woosh.OP, ',', 1864, 29, 1864, 30),
woosh.Token(woosh.NAME, 'globs', 1864, 31, 1864, 36),
woosh.Token(woosh.OP, '=', 1864, 36, 1864, 37),
woosh.Token(woosh.NAME, 'None', 1864, 37, 1864, 41),
woosh.Token(woosh.OP, ',', 1864, 41, 1864, 42),
woosh.Token(woosh.NAME, 'verbose', 1864, 43, 1864, 50),
woosh.Token(woosh.OP, '=', 1864, 50, 1864, 51),
woosh.Token(woosh.NAME, 'None', 1864, 51, 1864, 55),
woosh.Token(woosh.OP, ',', 1864, 55, 1864, 56),
woosh.Token(woosh.NAME, 'report', 1865, 12, 1865, 18),
woosh.Token(woosh.OP, '=', 1865, 18, 1865, 19),
woosh.Token(woosh.NAME, 'True', 1865, 19, 1865, 23),
woosh.Token(woosh.OP, ',', 1865, 23, 1865, 24),
woosh.Token(woosh.NAME, 'optionflags', 1865, 25, 1865, 36),
woosh.Token(woosh.OP, '=', 1865, 36, 1865, 37),
woosh.Token(woosh.NUMBER, '0', 1865, 37, 1865, 38),
woosh.Token(woosh.OP, ',', 1865, 38, 1865, 39),
woosh.Token(woosh.NAME, 'extraglobs', 1865, 40, 1865, 50),
woosh.Token(woosh.OP, '=', 1865, 50, 1865, 51),
woosh.Token(woosh.NAME, 'None', 1865, 51, 1865, 55),
woosh.Token(woosh.OP, ',', 1865, 55, 1865, 56),
woosh.Token(woosh.NAME, 'raise_on_error', 1866, 12, 1866, 26),
woosh.Token(woosh.OP, '=', 1866, 26, 1866, 27),
woosh.Token(woosh.NAME, 'False', 1866, 27, 1866, 32),
woosh.Token(woosh.OP, ',', 1866, 32, 1866, 33),
woosh.Token(woosh.NAME, 'exclude_empty', 1866, 34, 1866, 47),
woosh.Token(woosh.OP, '=', 1866, 47, 1866, 48),
woosh.Token(woosh.NAME, 'False', 1866, 48, 1866, 53),
woosh.Token(woosh.OP, ')', 1866, 53, 1866, 54),
woosh.Token(woosh.OP, ':', 1866, 54, 1866, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1866, 55, 1867, 0),
woosh.Token(woosh.INDENT, '    ', 1867, 0, 1867, 4),
woosh.Token(woosh.STRING, '"""m=None, name=None, globs=None, verbose=None, report=True,\r\n       optionflags=0, extraglobs=None, raise_on_error=False,\r\n       exclude_empty=False\r\n\r\n    Test examples in docstrings in functions and classes reachable\r\n    from module m (or the current module if m is not supplied), starting\r\n    with m.__doc__.\r\n\r\n    Also test examples reachable from dict m.__test__ if it exists and is\r\n    not None.  m.__test__ maps names to functions, classes and strings;\r\n    function and class docstrings are tested even if the name is private;\r\n    strings are tested directly, as if they were docstrings.\r\n\r\n    Return (#failures, #tests).\r\n\r\n    See help(doctest) for an overview.\r\n\r\n    Optional keyword arg "name" gives the name of the module; by default\r\n    use m.__name__.\r\n\r\n    Optional keyword arg "globs" gives a dict to be used as the globals\r\n    when executing examples; by default, use m.__dict__.  A copy of this\r\n    dict is actually used for each docstring, so that each docstring\'s\r\n    examples start with a clean slate.\r\n\r\n    Optional keyword arg "extraglobs" gives a dictionary that should be\r\n    merged into the globals that are used to execute examples.  By\r\n    default, no extra globals are used.  This is new in 2.4.\r\n\r\n    Optional keyword arg "verbose" prints lots of stuff if true, prints\r\n    only failures if false; by default, it\'s true iff "-v" is in sys.argv.\r\n\r\n    Optional keyword arg "report" prints a summary at the end when true,\r\n    else prints nothing at the end.  In verbose mode, the summary is\r\n    detailed, else very brief (in fact, empty if all tests passed).\r\n\r\n    Optional keyword arg "optionflags" or\'s together module constants,\r\n    and defaults to 0.  This is new in 2.3.  Possible values (see the\r\n    docs for details):\r\n\r\n        DONT_ACCEPT_TRUE_FOR_1\r\n        DONT_ACCEPT_BLANKLINE\r\n        NORMALIZE_WHITESPACE\r\n        ELLIPSIS\r\n        SKIP\r\n        IGNORE_EXCEPTION_DETAIL\r\n        REPORT_UDIFF\r\n        REPORT_CDIFF\r\n        REPORT_NDIFF\r\n        REPORT_ONLY_FIRST_FAILURE\r\n\r\n    Optional keyword arg "raise_on_error" raises an exception on the\r\n    first unexpected exception or failure. This allows failures to be\r\n    post-mortem debugged.\r\n\r\n    Advanced tomfoolery:  testmod runs methods of a local instance of\r\n    class doctest.Tester, then merges the results into (or creates)\r\n    global Tester instance doctest.master.  Methods of doctest.master\r\n    can be called directly too, if you want to do something unusual.\r\n    Passing report=0 to testmod is especially useful then, to delay\r\n    displaying a summary.  Invoke doctest.master.summarize(verbose)\r\n    when you\'re done fiddling.\r\n    """', 1867, 4, 1929, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1929, 7, 1930, 0),
woosh.Token(woosh.NAME, 'global', 1930, 4, 1930, 10),
woosh.Token(woosh.NAME, 'master', 1930, 11, 1930, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1930, 17, 1931, 0),
woosh.Token(woosh.COMMENT, '# If no module was given, then use __main__.', 1932, 4, 1932, 48),
woosh.Token(woosh.NAME, 'if', 1933, 4, 1933, 6),
woosh.Token(woosh.NAME, 'm', 1933, 7, 1933, 8),
woosh.Token(woosh.NAME, 'is', 1933, 9, 1933, 11),
woosh.Token(woosh.NAME, 'None', 1933, 12, 1933, 16),
woosh.Token(woosh.OP, ':', 1933, 16, 1933, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1933, 17, 1934, 0),
woosh.Token(woosh.COMMENT, "# DWA - m will still be None if this wasn't invoked from the command", 1934, 8, 1934, 76),
woosh.Token(woosh.COMMENT, '# line, in which case the following TypeError is about as good an error', 1935, 8, 1935, 79),
woosh.Token(woosh.COMMENT, '# as we should expect', 1936, 8, 1936, 29),
woosh.Token(woosh.INDENT, '        ', 1937, 0, 1937, 8),
woosh.Token(woosh.NAME, 'm', 1937, 8, 1937, 9),
woosh.Token(woosh.OP, '=', 1937, 10, 1937, 11),
woosh.Token(woosh.NAME, 'sys', 1937, 12, 1937, 15),
woosh.Token(woosh.OP, '.', 1937, 15, 1937, 16),
woosh.Token(woosh.NAME, 'modules', 1937, 16, 1937, 23),
woosh.Token(woosh.OP, '.', 1937, 23, 1937, 24),
woosh.Token(woosh.NAME, 'get', 1937, 24, 1937, 27),
woosh.Token(woosh.OP, '(', 1937, 27, 1937, 28),
woosh.Token(woosh.STRING, "'__main__'", 1937, 28, 1937, 38),
woosh.Token(woosh.OP, ')', 1937, 38, 1937, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1937, 39, 1938, 0),
woosh.Token(woosh.COMMENT, '# Check that we were actually given a module.', 1939, 4, 1939, 49),
woosh.Token(woosh.DEDENT, '    ', 1940, 0, 1940, 4),
woosh.Token(woosh.NAME, 'if', 1940, 4, 1940, 6),
woosh.Token(woosh.NAME, 'not', 1940, 7, 1940, 10),
woosh.Token(woosh.NAME, 'inspect', 1940, 11, 1940, 18),
woosh.Token(woosh.OP, '.', 1940, 18, 1940, 19),
woosh.Token(woosh.NAME, 'ismodule', 1940, 19, 1940, 27),
woosh.Token(woosh.OP, '(', 1940, 27, 1940, 28),
woosh.Token(woosh.NAME, 'm', 1940, 28, 1940, 29),
woosh.Token(woosh.OP, ')', 1940, 29, 1940, 30),
woosh.Token(woosh.OP, ':', 1940, 30, 1940, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1940, 31, 1941, 0),
woosh.Token(woosh.INDENT, '        ', 1941, 0, 1941, 8),
woosh.Token(woosh.NAME, 'raise', 1941, 8, 1941, 13),
woosh.Token(woosh.NAME, 'TypeError', 1941, 14, 1941, 23),
woosh.Token(woosh.OP, '(', 1941, 23, 1941, 24),
woosh.Token(woosh.STRING, '"testmod: module required; %r"', 1941, 24, 1941, 54),
woosh.Token(woosh.OP, '%', 1941, 55, 1941, 56),
woosh.Token(woosh.OP, '(', 1941, 57, 1941, 58),
woosh.Token(woosh.NAME, 'm', 1941, 58, 1941, 59),
woosh.Token(woosh.OP, ',', 1941, 59, 1941, 60),
woosh.Token(woosh.OP, ')', 1941, 60, 1941, 61),
woosh.Token(woosh.OP, ')', 1941, 61, 1941, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1941, 62, 1942, 0),
woosh.Token(woosh.COMMENT, "# If no name was given, then use the module's name.", 1943, 4, 1943, 55),
woosh.Token(woosh.DEDENT, '    ', 1944, 0, 1944, 4),
woosh.Token(woosh.NAME, 'if', 1944, 4, 1944, 6),
woosh.Token(woosh.NAME, 'name', 1944, 7, 1944, 11),
woosh.Token(woosh.NAME, 'is', 1944, 12, 1944, 14),
woosh.Token(woosh.NAME, 'None', 1944, 15, 1944, 19),
woosh.Token(woosh.OP, ':', 1944, 19, 1944, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1944, 20, 1945, 0),
woosh.Token(woosh.INDENT, '        ', 1945, 0, 1945, 8),
woosh.Token(woosh.NAME, 'name', 1945, 8, 1945, 12),
woosh.Token(woosh.OP, '=', 1945, 13, 1945, 14),
woosh.Token(woosh.NAME, 'm', 1945, 15, 1945, 16),
woosh.Token(woosh.OP, '.', 1945, 16, 1945, 17),
woosh.Token(woosh.NAME, '__name__', 1945, 17, 1945, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1945, 25, 1946, 0),
woosh.Token(woosh.COMMENT, '# Find, parse, and run all tests in the given module.', 1947, 4, 1947, 57),
woosh.Token(woosh.DEDENT, '    ', 1948, 0, 1948, 4),
woosh.Token(woosh.NAME, 'finder', 1948, 4, 1948, 10),
woosh.Token(woosh.OP, '=', 1948, 11, 1948, 12),
woosh.Token(woosh.NAME, 'DocTestFinder', 1948, 13, 1948, 26),
woosh.Token(woosh.OP, '(', 1948, 26, 1948, 27),
woosh.Token(woosh.NAME, 'exclude_empty', 1948, 27, 1948, 40),
woosh.Token(woosh.OP, '=', 1948, 40, 1948, 41),
woosh.Token(woosh.NAME, 'exclude_empty', 1948, 41, 1948, 54),
woosh.Token(woosh.OP, ')', 1948, 54, 1948, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1948, 55, 1949, 0),
woosh.Token(woosh.NAME, 'if', 1950, 4, 1950, 6),
woosh.Token(woosh.NAME, 'raise_on_error', 1950, 7, 1950, 21),
woosh.Token(woosh.OP, ':', 1950, 21, 1950, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1950, 22, 1951, 0),
woosh.Token(woosh.INDENT, '        ', 1951, 0, 1951, 8),
woosh.Token(woosh.NAME, 'runner', 1951, 8, 1951, 14),
woosh.Token(woosh.OP, '=', 1951, 15, 1951, 16),
woosh.Token(woosh.NAME, 'DebugRunner', 1951, 17, 1951, 28),
woosh.Token(woosh.OP, '(', 1951, 28, 1951, 29),
woosh.Token(woosh.NAME, 'verbose', 1951, 29, 1951, 36),
woosh.Token(woosh.OP, '=', 1951, 36, 1951, 37),
woosh.Token(woosh.NAME, 'verbose', 1951, 37, 1951, 44),
woosh.Token(woosh.OP, ',', 1951, 44, 1951, 45),
woosh.Token(woosh.NAME, 'optionflags', 1951, 46, 1951, 57),
woosh.Token(woosh.OP, '=', 1951, 57, 1951, 58),
woosh.Token(woosh.NAME, 'optionflags', 1951, 58, 1951, 69),
woosh.Token(woosh.OP, ')', 1951, 69, 1951, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1951, 70, 1952, 0),
woosh.Token(woosh.DEDENT, '    ', 1952, 0, 1952, 4),
woosh.Token(woosh.NAME, 'else', 1952, 4, 1952, 8),
woosh.Token(woosh.OP, ':', 1952, 8, 1952, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1952, 9, 1953, 0),
woosh.Token(woosh.INDENT, '        ', 1953, 0, 1953, 8),
woosh.Token(woosh.NAME, 'runner', 1953, 8, 1953, 14),
woosh.Token(woosh.OP, '=', 1953, 15, 1953, 16),
woosh.Token(woosh.NAME, 'DocTestRunner', 1953, 17, 1953, 30),
woosh.Token(woosh.OP, '(', 1953, 30, 1953, 31),
woosh.Token(woosh.NAME, 'verbose', 1953, 31, 1953, 38),
woosh.Token(woosh.OP, '=', 1953, 38, 1953, 39),
woosh.Token(woosh.NAME, 'verbose', 1953, 39, 1953, 46),
woosh.Token(woosh.OP, ',', 1953, 46, 1953, 47),
woosh.Token(woosh.NAME, 'optionflags', 1953, 48, 1953, 59),
woosh.Token(woosh.OP, '=', 1953, 59, 1953, 60),
woosh.Token(woosh.NAME, 'optionflags', 1953, 60, 1953, 71),
woosh.Token(woosh.OP, ')', 1953, 71, 1953, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1953, 72, 1954, 0),
woosh.Token(woosh.DEDENT, '    ', 1955, 0, 1955, 4),
woosh.Token(woosh.NAME, 'for', 1955, 4, 1955, 7),
woosh.Token(woosh.NAME, 'test', 1955, 8, 1955, 12),
woosh.Token(woosh.NAME, 'in', 1955, 13, 1955, 15),
woosh.Token(woosh.NAME, 'finder', 1955, 16, 1955, 22),
woosh.Token(woosh.OP, '.', 1955, 22, 1955, 23),
woosh.Token(woosh.NAME, 'find', 1955, 23, 1955, 27),
woosh.Token(woosh.OP, '(', 1955, 27, 1955, 28),
woosh.Token(woosh.NAME, 'm', 1955, 28, 1955, 29),
woosh.Token(woosh.OP, ',', 1955, 29, 1955, 30),
woosh.Token(woosh.NAME, 'name', 1955, 31, 1955, 35),
woosh.Token(woosh.OP, ',', 1955, 35, 1955, 36),
woosh.Token(woosh.NAME, 'globs', 1955, 37, 1955, 42),
woosh.Token(woosh.OP, '=', 1955, 42, 1955, 43),
woosh.Token(woosh.NAME, 'globs', 1955, 43, 1955, 48),
woosh.Token(woosh.OP, ',', 1955, 48, 1955, 49),
woosh.Token(woosh.NAME, 'extraglobs', 1955, 50, 1955, 60),
woosh.Token(woosh.OP, '=', 1955, 60, 1955, 61),
woosh.Token(woosh.NAME, 'extraglobs', 1955, 61, 1955, 71),
woosh.Token(woosh.OP, ')', 1955, 71, 1955, 72),
woosh.Token(woosh.OP, ':', 1955, 72, 1955, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1955, 73, 1956, 0),
woosh.Token(woosh.INDENT, '        ', 1956, 0, 1956, 8),
woosh.Token(woosh.NAME, 'runner', 1956, 8, 1956, 14),
woosh.Token(woosh.OP, '.', 1956, 14, 1956, 15),
woosh.Token(woosh.NAME, 'run', 1956, 15, 1956, 18),
woosh.Token(woosh.OP, '(', 1956, 18, 1956, 19),
woosh.Token(woosh.NAME, 'test', 1956, 19, 1956, 23),
woosh.Token(woosh.OP, ')', 1956, 23, 1956, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1956, 24, 1957, 0),
woosh.Token(woosh.DEDENT, '    ', 1958, 0, 1958, 4),
woosh.Token(woosh.NAME, 'if', 1958, 4, 1958, 6),
woosh.Token(woosh.NAME, 'report', 1958, 7, 1958, 13),
woosh.Token(woosh.OP, ':', 1958, 13, 1958, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1958, 14, 1959, 0),
woosh.Token(woosh.INDENT, '        ', 1959, 0, 1959, 8),
woosh.Token(woosh.NAME, 'runner', 1959, 8, 1959, 14),
woosh.Token(woosh.OP, '.', 1959, 14, 1959, 15),
woosh.Token(woosh.NAME, 'summarize', 1959, 15, 1959, 24),
woosh.Token(woosh.OP, '(', 1959, 24, 1959, 25),
woosh.Token(woosh.OP, ')', 1959, 25, 1959, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1959, 26, 1960, 0),
woosh.Token(woosh.DEDENT, '    ', 1961, 0, 1961, 4),
woosh.Token(woosh.NAME, 'if', 1961, 4, 1961, 6),
woosh.Token(woosh.NAME, 'master', 1961, 7, 1961, 13),
woosh.Token(woosh.NAME, 'is', 1961, 14, 1961, 16),
woosh.Token(woosh.NAME, 'None', 1961, 17, 1961, 21),
woosh.Token(woosh.OP, ':', 1961, 21, 1961, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1961, 22, 1962, 0),
woosh.Token(woosh.INDENT, '        ', 1962, 0, 1962, 8),
woosh.Token(woosh.NAME, 'master', 1962, 8, 1962, 14),
woosh.Token(woosh.OP, '=', 1962, 15, 1962, 16),
woosh.Token(woosh.NAME, 'runner', 1962, 17, 1962, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1962, 23, 1963, 0),
woosh.Token(woosh.DEDENT, '    ', 1963, 0, 1963, 4),
woosh.Token(woosh.NAME, 'else', 1963, 4, 1963, 8),
woosh.Token(woosh.OP, ':', 1963, 8, 1963, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1963, 9, 1964, 0),
woosh.Token(woosh.INDENT, '        ', 1964, 0, 1964, 8),
woosh.Token(woosh.NAME, 'master', 1964, 8, 1964, 14),
woosh.Token(woosh.OP, '.', 1964, 14, 1964, 15),
woosh.Token(woosh.NAME, 'merge', 1964, 15, 1964, 20),
woosh.Token(woosh.OP, '(', 1964, 20, 1964, 21),
woosh.Token(woosh.NAME, 'runner', 1964, 21, 1964, 27),
woosh.Token(woosh.OP, ')', 1964, 27, 1964, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1964, 28, 1965, 0),
woosh.Token(woosh.DEDENT, '    ', 1966, 0, 1966, 4),
woosh.Token(woosh.NAME, 'return', 1966, 4, 1966, 10),
woosh.Token(woosh.NAME, 'TestResults', 1966, 11, 1966, 22),
woosh.Token(woosh.OP, '(', 1966, 22, 1966, 23),
woosh.Token(woosh.NAME, 'runner', 1966, 23, 1966, 29),
woosh.Token(woosh.OP, '.', 1966, 29, 1966, 30),
woosh.Token(woosh.NAME, 'failures', 1966, 30, 1966, 38),
woosh.Token(woosh.OP, ',', 1966, 38, 1966, 39),
woosh.Token(woosh.NAME, 'runner', 1966, 40, 1966, 46),
woosh.Token(woosh.OP, '.', 1966, 46, 1966, 47),
woosh.Token(woosh.NAME, 'tries', 1966, 47, 1966, 52),
woosh.Token(woosh.OP, ')', 1966, 52, 1966, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1966, 53, 1967, 0),
woosh.Token(woosh.DEDENT, '', 1968, 0, 1968, 0),
woosh.Token(woosh.NAME, 'def', 1968, 0, 1968, 3),
woosh.Token(woosh.NAME, 'testfile', 1968, 4, 1968, 12),
woosh.Token(woosh.OP, '(', 1968, 12, 1968, 13),
woosh.Token(woosh.NAME, 'filename', 1968, 13, 1968, 21),
woosh.Token(woosh.OP, ',', 1968, 21, 1968, 22),
woosh.Token(woosh.NAME, 'module_relative', 1968, 23, 1968, 38),
woosh.Token(woosh.OP, '=', 1968, 38, 1968, 39),
woosh.Token(woosh.NAME, 'True', 1968, 39, 1968, 43),
woosh.Token(woosh.OP, ',', 1968, 43, 1968, 44),
woosh.Token(woosh.NAME, 'name', 1968, 45, 1968, 49),
woosh.Token(woosh.OP, '=', 1968, 49, 1968, 50),
woosh.Token(woosh.NAME, 'None', 1968, 50, 1968, 54),
woosh.Token(woosh.OP, ',', 1968, 54, 1968, 55),
woosh.Token(woosh.NAME, 'package', 1968, 56, 1968, 63),
woosh.Token(woosh.OP, '=', 1968, 63, 1968, 64),
woosh.Token(woosh.NAME, 'None', 1968, 64, 1968, 68),
woosh.Token(woosh.OP, ',', 1968, 68, 1968, 69),
woosh.Token(woosh.NAME, 'globs', 1969, 13, 1969, 18),
woosh.Token(woosh.OP, '=', 1969, 18, 1969, 19),
woosh.Token(woosh.NAME, 'None', 1969, 19, 1969, 23),
woosh.Token(woosh.OP, ',', 1969, 23, 1969, 24),
woosh.Token(woosh.NAME, 'verbose', 1969, 25, 1969, 32),
woosh.Token(woosh.OP, '=', 1969, 32, 1969, 33),
woosh.Token(woosh.NAME, 'None', 1969, 33, 1969, 37),
woosh.Token(woosh.OP, ',', 1969, 37, 1969, 38),
woosh.Token(woosh.NAME, 'report', 1969, 39, 1969, 45),
woosh.Token(woosh.OP, '=', 1969, 45, 1969, 46),
woosh.Token(woosh.NAME, 'True', 1969, 46, 1969, 50),
woosh.Token(woosh.OP, ',', 1969, 50, 1969, 51),
woosh.Token(woosh.NAME, 'optionflags', 1969, 52, 1969, 63),
woosh.Token(woosh.OP, '=', 1969, 63, 1969, 64),
woosh.Token(woosh.NUMBER, '0', 1969, 64, 1969, 65),
woosh.Token(woosh.OP, ',', 1969, 65, 1969, 66),
woosh.Token(woosh.NAME, 'extraglobs', 1970, 13, 1970, 23),
woosh.Token(woosh.OP, '=', 1970, 23, 1970, 24),
woosh.Token(woosh.NAME, 'None', 1970, 24, 1970, 28),
woosh.Token(woosh.OP, ',', 1970, 28, 1970, 29),
woosh.Token(woosh.NAME, 'raise_on_error', 1970, 30, 1970, 44),
woosh.Token(woosh.OP, '=', 1970, 44, 1970, 45),
woosh.Token(woosh.NAME, 'False', 1970, 45, 1970, 50),
woosh.Token(woosh.OP, ',', 1970, 50, 1970, 51),
woosh.Token(woosh.NAME, 'parser', 1970, 52, 1970, 58),
woosh.Token(woosh.OP, '=', 1970, 58, 1970, 59),
woosh.Token(woosh.NAME, 'DocTestParser', 1970, 59, 1970, 72),
woosh.Token(woosh.OP, '(', 1970, 72, 1970, 73),
woosh.Token(woosh.OP, ')', 1970, 73, 1970, 74),
woosh.Token(woosh.OP, ',', 1970, 74, 1970, 75),
woosh.Token(woosh.NAME, 'encoding', 1971, 13, 1971, 21),
woosh.Token(woosh.OP, '=', 1971, 21, 1971, 22),
woosh.Token(woosh.NAME, 'None', 1971, 22, 1971, 26),
woosh.Token(woosh.OP, ')', 1971, 26, 1971, 27),
woosh.Token(woosh.OP, ':', 1971, 27, 1971, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1971, 28, 1972, 0),
woosh.Token(woosh.INDENT, '    ', 1972, 0, 1972, 4),
woosh.Token(woosh.STRING, '"""\r\n    Test examples in the given file.  Return (#failures, #tests).\r\n\r\n    Optional keyword arg "module_relative" specifies how filenames\r\n    should be interpreted:\r\n\r\n      - If "module_relative" is True (the default), then "filename"\r\n         specifies a module-relative path.  By default, this path is\r\n         relative to the calling module\'s directory; but if the\r\n         "package" argument is specified, then it is relative to that\r\n         package.  To ensure os-independence, "filename" should use\r\n         "/" characters to separate path segments, and should not\r\n         be an absolute path (i.e., it may not begin with "/").\r\n\r\n      - If "module_relative" is False, then "filename" specifies an\r\n        os-specific path.  The path may be absolute or relative (to\r\n        the current working directory).\r\n\r\n    Optional keyword arg "name" gives the name of the test; by default\r\n    use the file\'s basename.\r\n\r\n    Optional keyword argument "package" is a Python package or the\r\n    name of a Python package whose directory should be used as the\r\n    base directory for a module relative filename.  If no package is\r\n    specified, then the calling module\'s directory is used as the base\r\n    directory for module relative filenames.  It is an error to\r\n    specify "package" if "module_relative" is False.\r\n\r\n    Optional keyword arg "globs" gives a dict to be used as the globals\r\n    when executing examples; by default, use {}.  A copy of this dict\r\n    is actually used for each docstring, so that each docstring\'s\r\n    examples start with a clean slate.\r\n\r\n    Optional keyword arg "extraglobs" gives a dictionary that should be\r\n    merged into the globals that are used to execute examples.  By\r\n    default, no extra globals are used.\r\n\r\n    Optional keyword arg "verbose" prints lots of stuff if true, prints\r\n    only failures if false; by default, it\'s true iff "-v" is in sys.argv.\r\n\r\n    Optional keyword arg "report" prints a summary at the end when true,\r\n    else prints nothing at the end.  In verbose mode, the summary is\r\n    detailed, else very brief (in fact, empty if all tests passed).\r\n\r\n    Optional keyword arg "optionflags" or\'s together module constants,\r\n    and defaults to 0.  Possible values (see the docs for details):\r\n\r\n        DONT_ACCEPT_TRUE_FOR_1\r\n        DONT_ACCEPT_BLANKLINE\r\n        NORMALIZE_WHITESPACE\r\n        ELLIPSIS\r\n        SKIP\r\n        IGNORE_EXCEPTION_DETAIL\r\n        REPORT_UDIFF\r\n        REPORT_CDIFF\r\n        REPORT_NDIFF\r\n        REPORT_ONLY_FIRST_FAILURE\r\n\r\n    Optional keyword arg "raise_on_error" raises an exception on the\r\n    first unexpected exception or failure. This allows failures to be\r\n    post-mortem debugged.\r\n\r\n    Optional keyword arg "parser" specifies a DocTestParser (or\r\n    subclass) that should be used to extract tests from the files.\r\n\r\n    Optional keyword arg "encoding" specifies an encoding that should\r\n    be used to convert the file to unicode.\r\n\r\n    Advanced tomfoolery:  testmod runs methods of a local instance of\r\n    class doctest.Tester, then merges the results into (or creates)\r\n    global Tester instance doctest.master.  Methods of doctest.master\r\n    can be called directly too, if you want to do something unusual.\r\n    Passing report=0 to testmod is especially useful then, to delay\r\n    displaying a summary.  Invoke doctest.master.summarize(verbose)\r\n    when you\'re done fiddling.\r\n    """', 1972, 4, 2047, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2047, 7, 2048, 0),
woosh.Token(woosh.NAME, 'global', 2048, 4, 2048, 10),
woosh.Token(woosh.NAME, 'master', 2048, 11, 2048, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2048, 17, 2049, 0),
woosh.Token(woosh.NAME, 'if', 2050, 4, 2050, 6),
woosh.Token(woosh.NAME, 'package', 2050, 7, 2050, 14),
woosh.Token(woosh.NAME, 'and', 2050, 15, 2050, 18),
woosh.Token(woosh.NAME, 'not', 2050, 19, 2050, 22),
woosh.Token(woosh.NAME, 'module_relative', 2050, 23, 2050, 38),
woosh.Token(woosh.OP, ':', 2050, 38, 2050, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2050, 39, 2051, 0),
woosh.Token(woosh.INDENT, '        ', 2051, 0, 2051, 8),
woosh.Token(woosh.NAME, 'raise', 2051, 8, 2051, 13),
woosh.Token(woosh.NAME, 'ValueError', 2051, 14, 2051, 24),
woosh.Token(woosh.OP, '(', 2051, 24, 2051, 25),
woosh.Token(woosh.STRING, '"Package may only be specified for module-"', 2051, 25, 2051, 68),
woosh.Token(woosh.STRING, '"relative paths."', 2052, 25, 2052, 42),
woosh.Token(woosh.OP, ')', 2052, 42, 2052, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 2052, 43, 2053, 0),
woosh.Token(woosh.COMMENT, '# Relativize the path', 2054, 4, 2054, 25),
woosh.Token(woosh.DEDENT, '    ', 2055, 0, 2055, 4),
woosh.Token(woosh.NAME, 'text', 2055, 4, 2055, 8),
woosh.Token(woosh.OP, ',', 2055, 8, 2055, 9),
woosh.Token(woosh.NAME, 'filename', 2055, 10, 2055, 18),
woosh.Token(woosh.OP, '=', 2055, 19, 2055, 20),
woosh.Token(woosh.NAME, '_load_testfile', 2055, 21, 2055, 35),
woosh.Token(woosh.OP, '(', 2055, 35, 2055, 36),
woosh.Token(woosh.NAME, 'filename', 2055, 36, 2055, 44),
woosh.Token(woosh.OP, ',', 2055, 44, 2055, 45),
woosh.Token(woosh.NAME, 'package', 2055, 46, 2055, 53),
woosh.Token(woosh.OP, ',', 2055, 53, 2055, 54),
woosh.Token(woosh.NAME, 'module_relative', 2055, 55, 2055, 70),
woosh.Token(woosh.OP, ',', 2055, 70, 2055, 71),
woosh.Token(woosh.NAME, 'encoding', 2056, 36, 2056, 44),
woosh.Token(woosh.NAME, 'or', 2056, 45, 2056, 47),
woosh.Token(woosh.STRING, '"utf-8"', 2056, 48, 2056, 55),
woosh.Token(woosh.OP, ')', 2056, 55, 2056, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 2056, 56, 2057, 0),
woosh.Token(woosh.COMMENT, "# If no name was given, then use the file's name.", 2058, 4, 2058, 53),
woosh.Token(woosh.NAME, 'if', 2059, 4, 2059, 6),
woosh.Token(woosh.NAME, 'name', 2059, 7, 2059, 11),
woosh.Token(woosh.NAME, 'is', 2059, 12, 2059, 14),
woosh.Token(woosh.NAME, 'None', 2059, 15, 2059, 19),
woosh.Token(woosh.OP, ':', 2059, 19, 2059, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2059, 20, 2060, 0),
woosh.Token(woosh.INDENT, '        ', 2060, 0, 2060, 8),
woosh.Token(woosh.NAME, 'name', 2060, 8, 2060, 12),
woosh.Token(woosh.OP, '=', 2060, 13, 2060, 14),
woosh.Token(woosh.NAME, 'os', 2060, 15, 2060, 17),
woosh.Token(woosh.OP, '.', 2060, 17, 2060, 18),
woosh.Token(woosh.NAME, 'path', 2060, 18, 2060, 22),
woosh.Token(woosh.OP, '.', 2060, 22, 2060, 23),
woosh.Token(woosh.NAME, 'basename', 2060, 23, 2060, 31),
woosh.Token(woosh.OP, '(', 2060, 31, 2060, 32),
woosh.Token(woosh.NAME, 'filename', 2060, 32, 2060, 40),
woosh.Token(woosh.OP, ')', 2060, 40, 2060, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 2060, 41, 2061, 0),
woosh.Token(woosh.COMMENT, '# Assemble the globals.', 2062, 4, 2062, 27),
woosh.Token(woosh.DEDENT, '    ', 2063, 0, 2063, 4),
woosh.Token(woosh.NAME, 'if', 2063, 4, 2063, 6),
woosh.Token(woosh.NAME, 'globs', 2063, 7, 2063, 12),
woosh.Token(woosh.NAME, 'is', 2063, 13, 2063, 15),
woosh.Token(woosh.NAME, 'None', 2063, 16, 2063, 20),
woosh.Token(woosh.OP, ':', 2063, 20, 2063, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2063, 21, 2064, 0),
woosh.Token(woosh.INDENT, '        ', 2064, 0, 2064, 8),
woosh.Token(woosh.NAME, 'globs', 2064, 8, 2064, 13),
woosh.Token(woosh.OP, '=', 2064, 14, 2064, 15),
woosh.Token(woosh.OP, '{', 2064, 16, 2064, 17),
woosh.Token(woosh.OP, '}', 2064, 17, 2064, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2064, 18, 2065, 0),
woosh.Token(woosh.DEDENT, '    ', 2065, 0, 2065, 4),
woosh.Token(woosh.NAME, 'else', 2065, 4, 2065, 8),
woosh.Token(woosh.OP, ':', 2065, 8, 2065, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2065, 9, 2066, 0),
woosh.Token(woosh.INDENT, '        ', 2066, 0, 2066, 8),
woosh.Token(woosh.NAME, 'globs', 2066, 8, 2066, 13),
woosh.Token(woosh.OP, '=', 2066, 14, 2066, 15),
woosh.Token(woosh.NAME, 'globs', 2066, 16, 2066, 21),
woosh.Token(woosh.OP, '.', 2066, 21, 2066, 22),
woosh.Token(woosh.NAME, 'copy', 2066, 22, 2066, 26),
woosh.Token(woosh.OP, '(', 2066, 26, 2066, 27),
woosh.Token(woosh.OP, ')', 2066, 27, 2066, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2066, 28, 2067, 0),
woosh.Token(woosh.DEDENT, '    ', 2067, 0, 2067, 4),
woosh.Token(woosh.NAME, 'if', 2067, 4, 2067, 6),
woosh.Token(woosh.NAME, 'extraglobs', 2067, 7, 2067, 17),
woosh.Token(woosh.NAME, 'is', 2067, 18, 2067, 20),
woosh.Token(woosh.NAME, 'not', 2067, 21, 2067, 24),
woosh.Token(woosh.NAME, 'None', 2067, 25, 2067, 29),
woosh.Token(woosh.OP, ':', 2067, 29, 2067, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2067, 30, 2068, 0),
woosh.Token(woosh.INDENT, '        ', 2068, 0, 2068, 8),
woosh.Token(woosh.NAME, 'globs', 2068, 8, 2068, 13),
woosh.Token(woosh.OP, '.', 2068, 13, 2068, 14),
woosh.Token(woosh.NAME, 'update', 2068, 14, 2068, 20),
woosh.Token(woosh.OP, '(', 2068, 20, 2068, 21),
woosh.Token(woosh.NAME, 'extraglobs', 2068, 21, 2068, 31),
woosh.Token(woosh.OP, ')', 2068, 31, 2068, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 2068, 32, 2069, 0),
woosh.Token(woosh.DEDENT, '    ', 2069, 0, 2069, 4),
woosh.Token(woosh.NAME, 'if', 2069, 4, 2069, 6),
woosh.Token(woosh.STRING, "'__name__'", 2069, 7, 2069, 17),
woosh.Token(woosh.NAME, 'not', 2069, 18, 2069, 21),
woosh.Token(woosh.NAME, 'in', 2069, 22, 2069, 24),
woosh.Token(woosh.NAME, 'globs', 2069, 25, 2069, 30),
woosh.Token(woosh.OP, ':', 2069, 30, 2069, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2069, 31, 2070, 0),
woosh.Token(woosh.INDENT, '        ', 2070, 0, 2070, 8),
woosh.Token(woosh.NAME, 'globs', 2070, 8, 2070, 13),
woosh.Token(woosh.OP, '[', 2070, 13, 2070, 14),
woosh.Token(woosh.STRING, "'__name__'", 2070, 14, 2070, 24),
woosh.Token(woosh.OP, ']', 2070, 24, 2070, 25),
woosh.Token(woosh.OP, '=', 2070, 26, 2070, 27),
woosh.Token(woosh.STRING, "'__main__'", 2070, 28, 2070, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2070, 38, 2071, 0),
woosh.Token(woosh.DEDENT, '    ', 2072, 0, 2072, 4),
woosh.Token(woosh.NAME, 'if', 2072, 4, 2072, 6),
woosh.Token(woosh.NAME, 'raise_on_error', 2072, 7, 2072, 21),
woosh.Token(woosh.OP, ':', 2072, 21, 2072, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2072, 22, 2073, 0),
woosh.Token(woosh.INDENT, '        ', 2073, 0, 2073, 8),
woosh.Token(woosh.NAME, 'runner', 2073, 8, 2073, 14),
woosh.Token(woosh.OP, '=', 2073, 15, 2073, 16),
woosh.Token(woosh.NAME, 'DebugRunner', 2073, 17, 2073, 28),
woosh.Token(woosh.OP, '(', 2073, 28, 2073, 29),
woosh.Token(woosh.NAME, 'verbose', 2073, 29, 2073, 36),
woosh.Token(woosh.OP, '=', 2073, 36, 2073, 37),
woosh.Token(woosh.NAME, 'verbose', 2073, 37, 2073, 44),
woosh.Token(woosh.OP, ',', 2073, 44, 2073, 45),
woosh.Token(woosh.NAME, 'optionflags', 2073, 46, 2073, 57),
woosh.Token(woosh.OP, '=', 2073, 57, 2073, 58),
woosh.Token(woosh.NAME, 'optionflags', 2073, 58, 2073, 69),
woosh.Token(woosh.OP, ')', 2073, 69, 2073, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 2073, 70, 2074, 0),
woosh.Token(woosh.DEDENT, '    ', 2074, 0, 2074, 4),
woosh.Token(woosh.NAME, 'else', 2074, 4, 2074, 8),
woosh.Token(woosh.OP, ':', 2074, 8, 2074, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2074, 9, 2075, 0),
woosh.Token(woosh.INDENT, '        ', 2075, 0, 2075, 8),
woosh.Token(woosh.NAME, 'runner', 2075, 8, 2075, 14),
woosh.Token(woosh.OP, '=', 2075, 15, 2075, 16),
woosh.Token(woosh.NAME, 'DocTestRunner', 2075, 17, 2075, 30),
woosh.Token(woosh.OP, '(', 2075, 30, 2075, 31),
woosh.Token(woosh.NAME, 'verbose', 2075, 31, 2075, 38),
woosh.Token(woosh.OP, '=', 2075, 38, 2075, 39),
woosh.Token(woosh.NAME, 'verbose', 2075, 39, 2075, 46),
woosh.Token(woosh.OP, ',', 2075, 46, 2075, 47),
woosh.Token(woosh.NAME, 'optionflags', 2075, 48, 2075, 59),
woosh.Token(woosh.OP, '=', 2075, 59, 2075, 60),
woosh.Token(woosh.NAME, 'optionflags', 2075, 60, 2075, 71),
woosh.Token(woosh.OP, ')', 2075, 71, 2075, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 2075, 72, 2076, 0),
woosh.Token(woosh.COMMENT, '# Read the file, convert it to a test, and run it.', 2077, 4, 2077, 54),
woosh.Token(woosh.DEDENT, '    ', 2078, 0, 2078, 4),
woosh.Token(woosh.NAME, 'test', 2078, 4, 2078, 8),
woosh.Token(woosh.OP, '=', 2078, 9, 2078, 10),
woosh.Token(woosh.NAME, 'parser', 2078, 11, 2078, 17),
woosh.Token(woosh.OP, '.', 2078, 17, 2078, 18),
woosh.Token(woosh.NAME, 'get_doctest', 2078, 18, 2078, 29),
woosh.Token(woosh.OP, '(', 2078, 29, 2078, 30),
woosh.Token(woosh.NAME, 'text', 2078, 30, 2078, 34),
woosh.Token(woosh.OP, ',', 2078, 34, 2078, 35),
woosh.Token(woosh.NAME, 'globs', 2078, 36, 2078, 41),
woosh.Token(woosh.OP, ',', 2078, 41, 2078, 42),
woosh.Token(woosh.NAME, 'name', 2078, 43, 2078, 47),
woosh.Token(woosh.OP, ',', 2078, 47, 2078, 48),
woosh.Token(woosh.NAME, 'filename', 2078, 49, 2078, 57),
woosh.Token(woosh.OP, ',', 2078, 57, 2078, 58),
woosh.Token(woosh.NUMBER, '0', 2078, 59, 2078, 60),
woosh.Token(woosh.OP, ')', 2078, 60, 2078, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 2078, 61, 2079, 0),
woosh.Token(woosh.NAME, 'runner', 2079, 4, 2079, 10),
woosh.Token(woosh.OP, '.', 2079, 10, 2079, 11),
woosh.Token(woosh.NAME, 'run', 2079, 11, 2079, 14),
woosh.Token(woosh.OP, '(', 2079, 14, 2079, 15),
woosh.Token(woosh.NAME, 'test', 2079, 15, 2079, 19),
woosh.Token(woosh.OP, ')', 2079, 19, 2079, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2079, 20, 2080, 0),
woosh.Token(woosh.NAME, 'if', 2081, 4, 2081, 6),
woosh.Token(woosh.NAME, 'report', 2081, 7, 2081, 13),
woosh.Token(woosh.OP, ':', 2081, 13, 2081, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 2081, 14, 2082, 0),
woosh.Token(woosh.INDENT, '        ', 2082, 0, 2082, 8),
woosh.Token(woosh.NAME, 'runner', 2082, 8, 2082, 14),
woosh.Token(woosh.OP, '.', 2082, 14, 2082, 15),
woosh.Token(woosh.NAME, 'summarize', 2082, 15, 2082, 24),
woosh.Token(woosh.OP, '(', 2082, 24, 2082, 25),
woosh.Token(woosh.OP, ')', 2082, 25, 2082, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2082, 26, 2083, 0),
woosh.Token(woosh.DEDENT, '    ', 2084, 0, 2084, 4),
woosh.Token(woosh.NAME, 'if', 2084, 4, 2084, 6),
woosh.Token(woosh.NAME, 'master', 2084, 7, 2084, 13),
woosh.Token(woosh.NAME, 'is', 2084, 14, 2084, 16),
woosh.Token(woosh.NAME, 'None', 2084, 17, 2084, 21),
woosh.Token(woosh.OP, ':', 2084, 21, 2084, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2084, 22, 2085, 0),
woosh.Token(woosh.INDENT, '        ', 2085, 0, 2085, 8),
woosh.Token(woosh.NAME, 'master', 2085, 8, 2085, 14),
woosh.Token(woosh.OP, '=', 2085, 15, 2085, 16),
woosh.Token(woosh.NAME, 'runner', 2085, 17, 2085, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2085, 23, 2086, 0),
woosh.Token(woosh.DEDENT, '    ', 2086, 0, 2086, 4),
woosh.Token(woosh.NAME, 'else', 2086, 4, 2086, 8),
woosh.Token(woosh.OP, ':', 2086, 8, 2086, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2086, 9, 2087, 0),
woosh.Token(woosh.INDENT, '        ', 2087, 0, 2087, 8),
woosh.Token(woosh.NAME, 'master', 2087, 8, 2087, 14),
woosh.Token(woosh.OP, '.', 2087, 14, 2087, 15),
woosh.Token(woosh.NAME, 'merge', 2087, 15, 2087, 20),
woosh.Token(woosh.OP, '(', 2087, 20, 2087, 21),
woosh.Token(woosh.NAME, 'runner', 2087, 21, 2087, 27),
woosh.Token(woosh.OP, ')', 2087, 27, 2087, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2087, 28, 2088, 0),
woosh.Token(woosh.DEDENT, '    ', 2089, 0, 2089, 4),
woosh.Token(woosh.NAME, 'return', 2089, 4, 2089, 10),
woosh.Token(woosh.NAME, 'TestResults', 2089, 11, 2089, 22),
woosh.Token(woosh.OP, '(', 2089, 22, 2089, 23),
woosh.Token(woosh.NAME, 'runner', 2089, 23, 2089, 29),
woosh.Token(woosh.OP, '.', 2089, 29, 2089, 30),
woosh.Token(woosh.NAME, 'failures', 2089, 30, 2089, 38),
woosh.Token(woosh.OP, ',', 2089, 38, 2089, 39),
woosh.Token(woosh.NAME, 'runner', 2089, 40, 2089, 46),
woosh.Token(woosh.OP, '.', 2089, 46, 2089, 47),
woosh.Token(woosh.NAME, 'tries', 2089, 47, 2089, 52),
woosh.Token(woosh.OP, ')', 2089, 52, 2089, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 2089, 53, 2090, 0),
woosh.Token(woosh.DEDENT, '', 2091, 0, 2091, 0),
woosh.Token(woosh.NAME, 'def', 2091, 0, 2091, 3),
woosh.Token(woosh.NAME, 'run_docstring_examples', 2091, 4, 2091, 26),
woosh.Token(woosh.OP, '(', 2091, 26, 2091, 27),
woosh.Token(woosh.NAME, 'f', 2091, 27, 2091, 28),
woosh.Token(woosh.OP, ',', 2091, 28, 2091, 29),
woosh.Token(woosh.NAME, 'globs', 2091, 30, 2091, 35),
woosh.Token(woosh.OP, ',', 2091, 35, 2091, 36),
woosh.Token(woosh.NAME, 'verbose', 2091, 37, 2091, 44),
woosh.Token(woosh.OP, '=', 2091, 44, 2091, 45),
woosh.Token(woosh.NAME, 'False', 2091, 45, 2091, 50),
woosh.Token(woosh.OP, ',', 2091, 50, 2091, 51),
woosh.Token(woosh.NAME, 'name', 2091, 52, 2091, 56),
woosh.Token(woosh.OP, '=', 2091, 56, 2091, 57),
woosh.Token(woosh.STRING, '"NoName"', 2091, 57, 2091, 65),
woosh.Token(woosh.OP, ',', 2091, 65, 2091, 66),
woosh.Token(woosh.NAME, 'compileflags', 2092, 27, 2092, 39),
woosh.Token(woosh.OP, '=', 2092, 39, 2092, 40),
woosh.Token(woosh.NAME, 'None', 2092, 40, 2092, 44),
woosh.Token(woosh.OP, ',', 2092, 44, 2092, 45),
woosh.Token(woosh.NAME, 'optionflags', 2092, 46, 2092, 57),
woosh.Token(woosh.OP, '=', 2092, 57, 2092, 58),
woosh.Token(woosh.NUMBER, '0', 2092, 58, 2092, 59),
woosh.Token(woosh.OP, ')', 2092, 59, 2092, 60),
woosh.Token(woosh.OP, ':', 2092, 60, 2092, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 2092, 61, 2093, 0),
woosh.Token(woosh.INDENT, '    ', 2093, 0, 2093, 4),
woosh.Token(woosh.STRING, '"""\r\n    Test examples in the given object\'s docstring (`f`), using `globs`\r\n    as globals.  Optional argument `name` is used in failure messages.\r\n    If the optional argument `verbose` is true, then generate output\r\n    even if there are no failures.\r\n\r\n    `compileflags` gives the set of flags that should be used by the\r\n    Python compiler when running the examples.  If not specified, then\r\n    it will default to the set of future-import flags that apply to\r\n    `globs`.\r\n\r\n    Optional keyword arg `optionflags` specifies options for the\r\n    testing and output.  See the documentation for `testmod` for more\r\n    information.\r\n    """', 2093, 4, 2107, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2107, 7, 2108, 0),
woosh.Token(woosh.COMMENT, '# Find, parse, and run all tests in the given module.', 2108, 4, 2108, 57),
woosh.Token(woosh.NAME, 'finder', 2109, 4, 2109, 10),
woosh.Token(woosh.OP, '=', 2109, 11, 2109, 12),
woosh.Token(woosh.NAME, 'DocTestFinder', 2109, 13, 2109, 26),
woosh.Token(woosh.OP, '(', 2109, 26, 2109, 27),
woosh.Token(woosh.NAME, 'verbose', 2109, 27, 2109, 34),
woosh.Token(woosh.OP, '=', 2109, 34, 2109, 35),
woosh.Token(woosh.NAME, 'verbose', 2109, 35, 2109, 42),
woosh.Token(woosh.OP, ',', 2109, 42, 2109, 43),
woosh.Token(woosh.NAME, 'recurse', 2109, 44, 2109, 51),
woosh.Token(woosh.OP, '=', 2109, 51, 2109, 52),
woosh.Token(woosh.NAME, 'False', 2109, 52, 2109, 57),
woosh.Token(woosh.OP, ')', 2109, 57, 2109, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 2109, 58, 2110, 0),
woosh.Token(woosh.NAME, 'runner', 2110, 4, 2110, 10),
woosh.Token(woosh.OP, '=', 2110, 11, 2110, 12),
woosh.Token(woosh.NAME, 'DocTestRunner', 2110, 13, 2110, 26),
woosh.Token(woosh.OP, '(', 2110, 26, 2110, 27),
woosh.Token(woosh.NAME, 'verbose', 2110, 27, 2110, 34),
woosh.Token(woosh.OP, '=', 2110, 34, 2110, 35),
woosh.Token(woosh.NAME, 'verbose', 2110, 35, 2110, 42),
woosh.Token(woosh.OP, ',', 2110, 42, 2110, 43),
woosh.Token(woosh.NAME, 'optionflags', 2110, 44, 2110, 55),
woosh.Token(woosh.OP, '=', 2110, 55, 2110, 56),
woosh.Token(woosh.NAME, 'optionflags', 2110, 56, 2110, 67),
woosh.Token(woosh.OP, ')', 2110, 67, 2110, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 2110, 68, 2111, 0),
woosh.Token(woosh.NAME, 'for', 2111, 4, 2111, 7),
woosh.Token(woosh.NAME, 'test', 2111, 8, 2111, 12),
woosh.Token(woosh.NAME, 'in', 2111, 13, 2111, 15),
woosh.Token(woosh.NAME, 'finder', 2111, 16, 2111, 22),
woosh.Token(woosh.OP, '.', 2111, 22, 2111, 23),
woosh.Token(woosh.NAME, 'find', 2111, 23, 2111, 27),
woosh.Token(woosh.OP, '(', 2111, 27, 2111, 28),
woosh.Token(woosh.NAME, 'f', 2111, 28, 2111, 29),
woosh.Token(woosh.OP, ',', 2111, 29, 2111, 30),
woosh.Token(woosh.NAME, 'name', 2111, 31, 2111, 35),
woosh.Token(woosh.OP, ',', 2111, 35, 2111, 36),
woosh.Token(woosh.NAME, 'globs', 2111, 37, 2111, 42),
woosh.Token(woosh.OP, '=', 2111, 42, 2111, 43),
woosh.Token(woosh.NAME, 'globs', 2111, 43, 2111, 48),
woosh.Token(woosh.OP, ')', 2111, 48, 2111, 49),
woosh.Token(woosh.OP, ':', 2111, 49, 2111, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 2111, 50, 2112, 0),
woosh.Token(woosh.INDENT, '        ', 2112, 0, 2112, 8),
woosh.Token(woosh.NAME, 'runner', 2112, 8, 2112, 14),
woosh.Token(woosh.OP, '.', 2112, 14, 2112, 15),
woosh.Token(woosh.NAME, 'run', 2112, 15, 2112, 18),
woosh.Token(woosh.OP, '(', 2112, 18, 2112, 19),
woosh.Token(woosh.NAME, 'test', 2112, 19, 2112, 23),
woosh.Token(woosh.OP, ',', 2112, 23, 2112, 24),
woosh.Token(woosh.NAME, 'compileflags', 2112, 25, 2112, 37),
woosh.Token(woosh.OP, '=', 2112, 37, 2112, 38),
woosh.Token(woosh.NAME, 'compileflags', 2112, 38, 2112, 50),
woosh.Token(woosh.OP, ')', 2112, 50, 2112, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 2112, 51, 2113, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 2114, 0, 2114, 70),
woosh.Token(woosh.COMMENT, '## 7. Unittest Support', 2115, 0, 2115, 22),
woosh.Token(woosh.COMMENT, '######################################################################', 2116, 0, 2116, 70),
woosh.Token(woosh.DEDENT, '', 2118, 0, 2118, 0),
woosh.Token(woosh.DEDENT, '', 2118, 0, 2118, 0),
woosh.Token(woosh.NAME, '_unittest_reportflags', 2118, 0, 2118, 21),
woosh.Token(woosh.OP, '=', 2118, 22, 2118, 23),
woosh.Token(woosh.NUMBER, '0', 2118, 24, 2118, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 2118, 25, 2119, 0),
woosh.Token(woosh.NAME, 'def', 2120, 0, 2120, 3),
woosh.Token(woosh.NAME, 'set_unittest_reportflags', 2120, 4, 2120, 28),
woosh.Token(woosh.OP, '(', 2120, 28, 2120, 29),
woosh.Token(woosh.NAME, 'flags', 2120, 29, 2120, 34),
woosh.Token(woosh.OP, ')', 2120, 34, 2120, 35),
woosh.Token(woosh.OP, ':', 2120, 35, 2120, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2120, 36, 2121, 0),
woosh.Token(woosh.INDENT, '    ', 2121, 0, 2121, 4),
woosh.Token(woosh.STRING, '"""Sets the unittest option flags.\r\n\r\n    The old flag is returned so that a runner could restore the old\r\n    value if it wished to:\r\n\r\n      >>> import doctest\r\n      >>> old = doctest._unittest_reportflags\r\n      >>> doctest.set_unittest_reportflags(REPORT_NDIFF |\r\n      ...                          REPORT_ONLY_FIRST_FAILURE) == old\r\n      True\r\n\r\n      >>> doctest._unittest_reportflags == (REPORT_NDIFF |\r\n      ...                                   REPORT_ONLY_FIRST_FAILURE)\r\n      True\r\n\r\n    Only reporting flags can be set:\r\n\r\n      >>> doctest.set_unittest_reportflags(ELLIPSIS)\r\n      Traceback (most recent call last):\r\n      ...\r\n      ValueError: (\'Only reporting flags allowed\', 8)\r\n\r\n      >>> doctest.set_unittest_reportflags(old) == (REPORT_NDIFF |\r\n      ...                                   REPORT_ONLY_FIRST_FAILURE)\r\n      True\r\n    """', 2121, 4, 2146, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2146, 7, 2147, 0),
woosh.Token(woosh.NAME, 'global', 2147, 4, 2147, 10),
woosh.Token(woosh.NAME, '_unittest_reportflags', 2147, 11, 2147, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 2147, 32, 2148, 0),
woosh.Token(woosh.NAME, 'if', 2149, 4, 2149, 6),
woosh.Token(woosh.OP, '(', 2149, 7, 2149, 8),
woosh.Token(woosh.NAME, 'flags', 2149, 8, 2149, 13),
woosh.Token(woosh.OP, '&', 2149, 14, 2149, 15),
woosh.Token(woosh.NAME, 'REPORTING_FLAGS', 2149, 16, 2149, 31),
woosh.Token(woosh.OP, ')', 2149, 31, 2149, 32),
woosh.Token(woosh.OP, '!=', 2149, 33, 2149, 35),
woosh.Token(woosh.NAME, 'flags', 2149, 36, 2149, 41),
woosh.Token(woosh.OP, ':', 2149, 41, 2149, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2149, 42, 2150, 0),
woosh.Token(woosh.INDENT, '        ', 2150, 0, 2150, 8),
woosh.Token(woosh.NAME, 'raise', 2150, 8, 2150, 13),
woosh.Token(woosh.NAME, 'ValueError', 2150, 14, 2150, 24),
woosh.Token(woosh.OP, '(', 2150, 24, 2150, 25),
woosh.Token(woosh.STRING, '"Only reporting flags allowed"', 2150, 25, 2150, 55),
woosh.Token(woosh.OP, ',', 2150, 55, 2150, 56),
woosh.Token(woosh.NAME, 'flags', 2150, 57, 2150, 62),
woosh.Token(woosh.OP, ')', 2150, 62, 2150, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 2150, 63, 2151, 0),
woosh.Token(woosh.DEDENT, '    ', 2151, 0, 2151, 4),
woosh.Token(woosh.NAME, 'old', 2151, 4, 2151, 7),
woosh.Token(woosh.OP, '=', 2151, 8, 2151, 9),
woosh.Token(woosh.NAME, '_unittest_reportflags', 2151, 10, 2151, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2151, 31, 2152, 0),
woosh.Token(woosh.NAME, '_unittest_reportflags', 2152, 4, 2152, 25),
woosh.Token(woosh.OP, '=', 2152, 26, 2152, 27),
woosh.Token(woosh.NAME, 'flags', 2152, 28, 2152, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 2152, 33, 2153, 0),
woosh.Token(woosh.NAME, 'return', 2153, 4, 2153, 10),
woosh.Token(woosh.NAME, 'old', 2153, 11, 2153, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 2153, 14, 2154, 0),
woosh.Token(woosh.DEDENT, '', 2156, 0, 2156, 0),
woosh.Token(woosh.NAME, 'class', 2156, 0, 2156, 5),
woosh.Token(woosh.NAME, 'DocTestCase', 2156, 6, 2156, 17),
woosh.Token(woosh.OP, '(', 2156, 17, 2156, 18),
woosh.Token(woosh.NAME, 'unittest', 2156, 18, 2156, 26),
woosh.Token(woosh.OP, '.', 2156, 26, 2156, 27),
woosh.Token(woosh.NAME, 'TestCase', 2156, 27, 2156, 35),
woosh.Token(woosh.OP, ')', 2156, 35, 2156, 36),
woosh.Token(woosh.OP, ':', 2156, 36, 2156, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 2156, 37, 2157, 0),
woosh.Token(woosh.INDENT, '    ', 2158, 0, 2158, 4),
woosh.Token(woosh.NAME, 'def', 2158, 4, 2158, 7),
woosh.Token(woosh.NAME, '__init__', 2158, 8, 2158, 16),
woosh.Token(woosh.OP, '(', 2158, 16, 2158, 17),
woosh.Token(woosh.NAME, 'self', 2158, 17, 2158, 21),
woosh.Token(woosh.OP, ',', 2158, 21, 2158, 22),
woosh.Token(woosh.NAME, 'test', 2158, 23, 2158, 27),
woosh.Token(woosh.OP, ',', 2158, 27, 2158, 28),
woosh.Token(woosh.NAME, 'optionflags', 2158, 29, 2158, 40),
woosh.Token(woosh.OP, '=', 2158, 40, 2158, 41),
woosh.Token(woosh.NUMBER, '0', 2158, 41, 2158, 42),
woosh.Token(woosh.OP, ',', 2158, 42, 2158, 43),
woosh.Token(woosh.NAME, 'setUp', 2158, 44, 2158, 49),
woosh.Token(woosh.OP, '=', 2158, 49, 2158, 50),
woosh.Token(woosh.NAME, 'None', 2158, 50, 2158, 54),
woosh.Token(woosh.OP, ',', 2158, 54, 2158, 55),
woosh.Token(woosh.NAME, 'tearDown', 2158, 56, 2158, 64),
woosh.Token(woosh.OP, '=', 2158, 64, 2158, 65),
woosh.Token(woosh.NAME, 'None', 2158, 65, 2158, 69),
woosh.Token(woosh.OP, ',', 2158, 69, 2158, 70),
woosh.Token(woosh.NAME, 'checker', 2159, 17, 2159, 24),
woosh.Token(woosh.OP, '=', 2159, 24, 2159, 25),
woosh.Token(woosh.NAME, 'None', 2159, 25, 2159, 29),
woosh.Token(woosh.OP, ')', 2159, 29, 2159, 30),
woosh.Token(woosh.OP, ':', 2159, 30, 2159, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2159, 31, 2160, 0),
woosh.Token(woosh.INDENT, '        ', 2161, 0, 2161, 8),
woosh.Token(woosh.NAME, 'unittest', 2161, 8, 2161, 16),
woosh.Token(woosh.OP, '.', 2161, 16, 2161, 17),
woosh.Token(woosh.NAME, 'TestCase', 2161, 17, 2161, 25),
woosh.Token(woosh.OP, '.', 2161, 25, 2161, 26),
woosh.Token(woosh.NAME, '__init__', 2161, 26, 2161, 34),
woosh.Token(woosh.OP, '(', 2161, 34, 2161, 35),
woosh.Token(woosh.NAME, 'self', 2161, 35, 2161, 39),
woosh.Token(woosh.OP, ')', 2161, 39, 2161, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2161, 40, 2162, 0),
woosh.Token(woosh.NAME, 'self', 2162, 8, 2162, 12),
woosh.Token(woosh.OP, '.', 2162, 12, 2162, 13),
woosh.Token(woosh.NAME, '_dt_optionflags', 2162, 13, 2162, 28),
woosh.Token(woosh.OP, '=', 2162, 29, 2162, 30),
woosh.Token(woosh.NAME, 'optionflags', 2162, 31, 2162, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2162, 42, 2163, 0),
woosh.Token(woosh.NAME, 'self', 2163, 8, 2163, 12),
woosh.Token(woosh.OP, '.', 2163, 12, 2163, 13),
woosh.Token(woosh.NAME, '_dt_checker', 2163, 13, 2163, 24),
woosh.Token(woosh.OP, '=', 2163, 25, 2163, 26),
woosh.Token(woosh.NAME, 'checker', 2163, 27, 2163, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2163, 34, 2164, 0),
woosh.Token(woosh.NAME, 'self', 2164, 8, 2164, 12),
woosh.Token(woosh.OP, '.', 2164, 12, 2164, 13),
woosh.Token(woosh.NAME, '_dt_test', 2164, 13, 2164, 21),
woosh.Token(woosh.OP, '=', 2164, 22, 2164, 23),
woosh.Token(woosh.NAME, 'test', 2164, 24, 2164, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2164, 28, 2165, 0),
woosh.Token(woosh.NAME, 'self', 2165, 8, 2165, 12),
woosh.Token(woosh.OP, '.', 2165, 12, 2165, 13),
woosh.Token(woosh.NAME, '_dt_setUp', 2165, 13, 2165, 22),
woosh.Token(woosh.OP, '=', 2165, 23, 2165, 24),
woosh.Token(woosh.NAME, 'setUp', 2165, 25, 2165, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2165, 30, 2166, 0),
woosh.Token(woosh.NAME, 'self', 2166, 8, 2166, 12),
woosh.Token(woosh.OP, '.', 2166, 12, 2166, 13),
woosh.Token(woosh.NAME, '_dt_tearDown', 2166, 13, 2166, 25),
woosh.Token(woosh.OP, '=', 2166, 26, 2166, 27),
woosh.Token(woosh.NAME, 'tearDown', 2166, 28, 2166, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2166, 36, 2167, 0),
woosh.Token(woosh.DEDENT, '    ', 2168, 0, 2168, 4),
woosh.Token(woosh.NAME, 'def', 2168, 4, 2168, 7),
woosh.Token(woosh.NAME, 'setUp', 2168, 8, 2168, 13),
woosh.Token(woosh.OP, '(', 2168, 13, 2168, 14),
woosh.Token(woosh.NAME, 'self', 2168, 14, 2168, 18),
woosh.Token(woosh.OP, ')', 2168, 18, 2168, 19),
woosh.Token(woosh.OP, ':', 2168, 19, 2168, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2168, 20, 2169, 0),
woosh.Token(woosh.INDENT, '        ', 2169, 0, 2169, 8),
woosh.Token(woosh.NAME, 'test', 2169, 8, 2169, 12),
woosh.Token(woosh.OP, '=', 2169, 13, 2169, 14),
woosh.Token(woosh.NAME, 'self', 2169, 15, 2169, 19),
woosh.Token(woosh.OP, '.', 2169, 19, 2169, 20),
woosh.Token(woosh.NAME, '_dt_test', 2169, 20, 2169, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2169, 28, 2170, 0),
woosh.Token(woosh.NAME, 'if', 2171, 8, 2171, 10),
woosh.Token(woosh.NAME, 'self', 2171, 11, 2171, 15),
woosh.Token(woosh.OP, '.', 2171, 15, 2171, 16),
woosh.Token(woosh.NAME, '_dt_setUp', 2171, 16, 2171, 25),
woosh.Token(woosh.NAME, 'is', 2171, 26, 2171, 28),
woosh.Token(woosh.NAME, 'not', 2171, 29, 2171, 32),
woosh.Token(woosh.NAME, 'None', 2171, 33, 2171, 37),
woosh.Token(woosh.OP, ':', 2171, 37, 2171, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2171, 38, 2172, 0),
woosh.Token(woosh.INDENT, '            ', 2172, 0, 2172, 12),
woosh.Token(woosh.NAME, 'self', 2172, 12, 2172, 16),
woosh.Token(woosh.OP, '.', 2172, 16, 2172, 17),
woosh.Token(woosh.NAME, '_dt_setUp', 2172, 17, 2172, 26),
woosh.Token(woosh.OP, '(', 2172, 26, 2172, 27),
woosh.Token(woosh.NAME, 'test', 2172, 27, 2172, 31),
woosh.Token(woosh.OP, ')', 2172, 31, 2172, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 2172, 32, 2173, 0),
woosh.Token(woosh.DEDENT, '    ', 2174, 0, 2174, 4),
woosh.Token(woosh.DEDENT, '', 2174, 4, 2174, 4),
woosh.Token(woosh.NAME, 'def', 2174, 4, 2174, 7),
woosh.Token(woosh.NAME, 'tearDown', 2174, 8, 2174, 16),
woosh.Token(woosh.OP, '(', 2174, 16, 2174, 17),
woosh.Token(woosh.NAME, 'self', 2174, 17, 2174, 21),
woosh.Token(woosh.OP, ')', 2174, 21, 2174, 22),
woosh.Token(woosh.OP, ':', 2174, 22, 2174, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2174, 23, 2175, 0),
woosh.Token(woosh.INDENT, '        ', 2175, 0, 2175, 8),
woosh.Token(woosh.NAME, 'test', 2175, 8, 2175, 12),
woosh.Token(woosh.OP, '=', 2175, 13, 2175, 14),
woosh.Token(woosh.NAME, 'self', 2175, 15, 2175, 19),
woosh.Token(woosh.OP, '.', 2175, 19, 2175, 20),
woosh.Token(woosh.NAME, '_dt_test', 2175, 20, 2175, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2175, 28, 2176, 0),
woosh.Token(woosh.NAME, 'if', 2177, 8, 2177, 10),
woosh.Token(woosh.NAME, 'self', 2177, 11, 2177, 15),
woosh.Token(woosh.OP, '.', 2177, 15, 2177, 16),
woosh.Token(woosh.NAME, '_dt_tearDown', 2177, 16, 2177, 28),
woosh.Token(woosh.NAME, 'is', 2177, 29, 2177, 31),
woosh.Token(woosh.NAME, 'not', 2177, 32, 2177, 35),
woosh.Token(woosh.NAME, 'None', 2177, 36, 2177, 40),
woosh.Token(woosh.OP, ':', 2177, 40, 2177, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 2177, 41, 2178, 0),
woosh.Token(woosh.INDENT, '            ', 2178, 0, 2178, 12),
woosh.Token(woosh.NAME, 'self', 2178, 12, 2178, 16),
woosh.Token(woosh.OP, '.', 2178, 16, 2178, 17),
woosh.Token(woosh.NAME, '_dt_tearDown', 2178, 17, 2178, 29),
woosh.Token(woosh.OP, '(', 2178, 29, 2178, 30),
woosh.Token(woosh.NAME, 'test', 2178, 30, 2178, 34),
woosh.Token(woosh.OP, ')', 2178, 34, 2178, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2178, 35, 2179, 0),
woosh.Token(woosh.DEDENT, '        ', 2180, 0, 2180, 8),
woosh.Token(woosh.NAME, 'test', 2180, 8, 2180, 12),
woosh.Token(woosh.OP, '.', 2180, 12, 2180, 13),
woosh.Token(woosh.NAME, 'globs', 2180, 13, 2180, 18),
woosh.Token(woosh.OP, '.', 2180, 18, 2180, 19),
woosh.Token(woosh.NAME, 'clear', 2180, 19, 2180, 24),
woosh.Token(woosh.OP, '(', 2180, 24, 2180, 25),
woosh.Token(woosh.OP, ')', 2180, 25, 2180, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2180, 26, 2181, 0),
woosh.Token(woosh.DEDENT, '    ', 2182, 0, 2182, 4),
woosh.Token(woosh.NAME, 'def', 2182, 4, 2182, 7),
woosh.Token(woosh.NAME, 'runTest', 2182, 8, 2182, 15),
woosh.Token(woosh.OP, '(', 2182, 15, 2182, 16),
woosh.Token(woosh.NAME, 'self', 2182, 16, 2182, 20),
woosh.Token(woosh.OP, ')', 2182, 20, 2182, 21),
woosh.Token(woosh.OP, ':', 2182, 21, 2182, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2182, 22, 2183, 0),
woosh.Token(woosh.INDENT, '        ', 2183, 0, 2183, 8),
woosh.Token(woosh.NAME, 'test', 2183, 8, 2183, 12),
woosh.Token(woosh.OP, '=', 2183, 13, 2183, 14),
woosh.Token(woosh.NAME, 'self', 2183, 15, 2183, 19),
woosh.Token(woosh.OP, '.', 2183, 19, 2183, 20),
woosh.Token(woosh.NAME, '_dt_test', 2183, 20, 2183, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2183, 28, 2184, 0),
woosh.Token(woosh.NAME, 'old', 2184, 8, 2184, 11),
woosh.Token(woosh.OP, '=', 2184, 12, 2184, 13),
woosh.Token(woosh.NAME, 'sys', 2184, 14, 2184, 17),
woosh.Token(woosh.OP, '.', 2184, 17, 2184, 18),
woosh.Token(woosh.NAME, 'stdout', 2184, 18, 2184, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 2184, 24, 2185, 0),
woosh.Token(woosh.NAME, 'new', 2185, 8, 2185, 11),
woosh.Token(woosh.OP, '=', 2185, 12, 2185, 13),
woosh.Token(woosh.NAME, 'StringIO', 2185, 14, 2185, 22),
woosh.Token(woosh.OP, '(', 2185, 22, 2185, 23),
woosh.Token(woosh.OP, ')', 2185, 23, 2185, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 2185, 24, 2186, 0),
woosh.Token(woosh.NAME, 'optionflags', 2186, 8, 2186, 19),
woosh.Token(woosh.OP, '=', 2186, 20, 2186, 21),
woosh.Token(woosh.NAME, 'self', 2186, 22, 2186, 26),
woosh.Token(woosh.OP, '.', 2186, 26, 2186, 27),
woosh.Token(woosh.NAME, '_dt_optionflags', 2186, 27, 2186, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2186, 42, 2187, 0),
woosh.Token(woosh.NAME, 'if', 2188, 8, 2188, 10),
woosh.Token(woosh.NAME, 'not', 2188, 11, 2188, 14),
woosh.Token(woosh.OP, '(', 2188, 15, 2188, 16),
woosh.Token(woosh.NAME, 'optionflags', 2188, 16, 2188, 27),
woosh.Token(woosh.OP, '&', 2188, 28, 2188, 29),
woosh.Token(woosh.NAME, 'REPORTING_FLAGS', 2188, 30, 2188, 45),
woosh.Token(woosh.OP, ')', 2188, 45, 2188, 46),
woosh.Token(woosh.OP, ':', 2188, 46, 2188, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 2188, 47, 2189, 0),
woosh.Token(woosh.COMMENT, "# The option flags don't include any reporting flags,", 2189, 12, 2189, 65),
woosh.Token(woosh.COMMENT, '# so add the default reporting flags', 2190, 12, 2190, 48),
woosh.Token(woosh.INDENT, '            ', 2191, 0, 2191, 12),
woosh.Token(woosh.NAME, 'optionflags', 2191, 12, 2191, 23),
woosh.Token(woosh.OP, '|=', 2191, 24, 2191, 26),
woosh.Token(woosh.NAME, '_unittest_reportflags', 2191, 27, 2191, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 2191, 48, 2192, 0),
woosh.Token(woosh.DEDENT, '        ', 2193, 0, 2193, 8),
woosh.Token(woosh.NAME, 'runner', 2193, 8, 2193, 14),
woosh.Token(woosh.OP, '=', 2193, 15, 2193, 16),
woosh.Token(woosh.NAME, 'DocTestRunner', 2193, 17, 2193, 30),
woosh.Token(woosh.OP, '(', 2193, 30, 2193, 31),
woosh.Token(woosh.NAME, 'optionflags', 2193, 31, 2193, 42),
woosh.Token(woosh.OP, '=', 2193, 42, 2193, 43),
woosh.Token(woosh.NAME, 'optionflags', 2193, 43, 2193, 54),
woosh.Token(woosh.OP, ',', 2193, 54, 2193, 55),
woosh.Token(woosh.NAME, 'checker', 2194, 31, 2194, 38),
woosh.Token(woosh.OP, '=', 2194, 38, 2194, 39),
woosh.Token(woosh.NAME, 'self', 2194, 39, 2194, 43),
woosh.Token(woosh.OP, '.', 2194, 43, 2194, 44),
woosh.Token(woosh.NAME, '_dt_checker', 2194, 44, 2194, 55),
woosh.Token(woosh.OP, ',', 2194, 55, 2194, 56),
woosh.Token(woosh.NAME, 'verbose', 2194, 57, 2194, 64),
woosh.Token(woosh.OP, '=', 2194, 64, 2194, 65),
woosh.Token(woosh.NAME, 'False', 2194, 65, 2194, 70),
woosh.Token(woosh.OP, ')', 2194, 70, 2194, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 2194, 71, 2195, 0),
woosh.Token(woosh.NAME, 'try', 2196, 8, 2196, 11),
woosh.Token(woosh.OP, ':', 2196, 11, 2196, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2196, 12, 2197, 0),
woosh.Token(woosh.INDENT, '            ', 2197, 0, 2197, 12),
woosh.Token(woosh.NAME, 'runner', 2197, 12, 2197, 18),
woosh.Token(woosh.OP, '.', 2197, 18, 2197, 19),
woosh.Token(woosh.NAME, 'DIVIDER', 2197, 19, 2197, 26),
woosh.Token(woosh.OP, '=', 2197, 27, 2197, 28),
woosh.Token(woosh.STRING, '"-"', 2197, 29, 2197, 32),
woosh.Token(woosh.OP, '*', 2197, 32, 2197, 33),
woosh.Token(woosh.NUMBER, '70', 2197, 33, 2197, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2197, 35, 2198, 0),
woosh.Token(woosh.NAME, 'failures', 2198, 12, 2198, 20),
woosh.Token(woosh.OP, ',', 2198, 20, 2198, 21),
woosh.Token(woosh.NAME, 'tries', 2198, 22, 2198, 27),
woosh.Token(woosh.OP, '=', 2198, 28, 2198, 29),
woosh.Token(woosh.NAME, 'runner', 2198, 30, 2198, 36),
woosh.Token(woosh.OP, '.', 2198, 36, 2198, 37),
woosh.Token(woosh.NAME, 'run', 2198, 37, 2198, 40),
woosh.Token(woosh.OP, '(', 2198, 40, 2198, 41),
woosh.Token(woosh.NAME, 'test', 2199, 16, 2199, 20),
woosh.Token(woosh.OP, ',', 2199, 20, 2199, 21),
woosh.Token(woosh.NAME, 'out', 2199, 22, 2199, 25),
woosh.Token(woosh.OP, '=', 2199, 25, 2199, 26),
woosh.Token(woosh.NAME, 'new', 2199, 26, 2199, 29),
woosh.Token(woosh.OP, '.', 2199, 29, 2199, 30),
woosh.Token(woosh.NAME, 'write', 2199, 30, 2199, 35),
woosh.Token(woosh.OP, ',', 2199, 35, 2199, 36),
woosh.Token(woosh.NAME, 'clear_globs', 2199, 37, 2199, 48),
woosh.Token(woosh.OP, '=', 2199, 48, 2199, 49),
woosh.Token(woosh.NAME, 'False', 2199, 49, 2199, 54),
woosh.Token(woosh.OP, ')', 2199, 54, 2199, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 2199, 55, 2200, 0),
woosh.Token(woosh.DEDENT, '        ', 2200, 0, 2200, 8),
woosh.Token(woosh.NAME, 'finally', 2200, 8, 2200, 15),
woosh.Token(woosh.OP, ':', 2200, 15, 2200, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2200, 16, 2201, 0),
woosh.Token(woosh.INDENT, '            ', 2201, 0, 2201, 12),
woosh.Token(woosh.NAME, 'sys', 2201, 12, 2201, 15),
woosh.Token(woosh.OP, '.', 2201, 15, 2201, 16),
woosh.Token(woosh.NAME, 'stdout', 2201, 16, 2201, 22),
woosh.Token(woosh.OP, '=', 2201, 23, 2201, 24),
woosh.Token(woosh.NAME, 'old', 2201, 25, 2201, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2201, 28, 2202, 0),
woosh.Token(woosh.DEDENT, '        ', 2203, 0, 2203, 8),
woosh.Token(woosh.NAME, 'if', 2203, 8, 2203, 10),
woosh.Token(woosh.NAME, 'failures', 2203, 11, 2203, 19),
woosh.Token(woosh.OP, ':', 2203, 19, 2203, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2203, 20, 2204, 0),
woosh.Token(woosh.INDENT, '            ', 2204, 0, 2204, 12),
woosh.Token(woosh.NAME, 'raise', 2204, 12, 2204, 17),
woosh.Token(woosh.NAME, 'self', 2204, 18, 2204, 22),
woosh.Token(woosh.OP, '.', 2204, 22, 2204, 23),
woosh.Token(woosh.NAME, 'failureException', 2204, 23, 2204, 39),
woosh.Token(woosh.OP, '(', 2204, 39, 2204, 40),
woosh.Token(woosh.NAME, 'self', 2204, 40, 2204, 44),
woosh.Token(woosh.OP, '.', 2204, 44, 2204, 45),
woosh.Token(woosh.NAME, 'format_failure', 2204, 45, 2204, 59),
woosh.Token(woosh.OP, '(', 2204, 59, 2204, 60),
woosh.Token(woosh.NAME, 'new', 2204, 60, 2204, 63),
woosh.Token(woosh.OP, '.', 2204, 63, 2204, 64),
woosh.Token(woosh.NAME, 'getvalue', 2204, 64, 2204, 72),
woosh.Token(woosh.OP, '(', 2204, 72, 2204, 73),
woosh.Token(woosh.OP, ')', 2204, 73, 2204, 74),
woosh.Token(woosh.OP, ')', 2204, 74, 2204, 75),
woosh.Token(woosh.OP, ')', 2204, 75, 2204, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 2204, 76, 2205, 0),
woosh.Token(woosh.DEDENT, '    ', 2206, 0, 2206, 4),
woosh.Token(woosh.DEDENT, '', 2206, 4, 2206, 4),
woosh.Token(woosh.NAME, 'def', 2206, 4, 2206, 7),
woosh.Token(woosh.NAME, 'format_failure', 2206, 8, 2206, 22),
woosh.Token(woosh.OP, '(', 2206, 22, 2206, 23),
woosh.Token(woosh.NAME, 'self', 2206, 23, 2206, 27),
woosh.Token(woosh.OP, ',', 2206, 27, 2206, 28),
woosh.Token(woosh.NAME, 'err', 2206, 29, 2206, 32),
woosh.Token(woosh.OP, ')', 2206, 32, 2206, 33),
woosh.Token(woosh.OP, ':', 2206, 33, 2206, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2206, 34, 2207, 0),
woosh.Token(woosh.INDENT, '        ', 2207, 0, 2207, 8),
woosh.Token(woosh.NAME, 'test', 2207, 8, 2207, 12),
woosh.Token(woosh.OP, '=', 2207, 13, 2207, 14),
woosh.Token(woosh.NAME, 'self', 2207, 15, 2207, 19),
woosh.Token(woosh.OP, '.', 2207, 19, 2207, 20),
woosh.Token(woosh.NAME, '_dt_test', 2207, 20, 2207, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2207, 28, 2208, 0),
woosh.Token(woosh.NAME, 'if', 2208, 8, 2208, 10),
woosh.Token(woosh.NAME, 'test', 2208, 11, 2208, 15),
woosh.Token(woosh.OP, '.', 2208, 15, 2208, 16),
woosh.Token(woosh.NAME, 'lineno', 2208, 16, 2208, 22),
woosh.Token(woosh.NAME, 'is', 2208, 23, 2208, 25),
woosh.Token(woosh.NAME, 'None', 2208, 26, 2208, 30),
woosh.Token(woosh.OP, ':', 2208, 30, 2208, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2208, 31, 2209, 0),
woosh.Token(woosh.INDENT, '            ', 2209, 0, 2209, 12),
woosh.Token(woosh.NAME, 'lineno', 2209, 12, 2209, 18),
woosh.Token(woosh.OP, '=', 2209, 19, 2209, 20),
woosh.Token(woosh.STRING, "'unknown line number'", 2209, 21, 2209, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2209, 42, 2210, 0),
woosh.Token(woosh.DEDENT, '        ', 2210, 0, 2210, 8),
woosh.Token(woosh.NAME, 'else', 2210, 8, 2210, 12),
woosh.Token(woosh.OP, ':', 2210, 12, 2210, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2210, 13, 2211, 0),
woosh.Token(woosh.INDENT, '            ', 2211, 0, 2211, 12),
woosh.Token(woosh.NAME, 'lineno', 2211, 12, 2211, 18),
woosh.Token(woosh.OP, '=', 2211, 19, 2211, 20),
woosh.Token(woosh.STRING, "'%s'", 2211, 21, 2211, 25),
woosh.Token(woosh.OP, '%', 2211, 26, 2211, 27),
woosh.Token(woosh.NAME, 'test', 2211, 28, 2211, 32),
woosh.Token(woosh.OP, '.', 2211, 32, 2211, 33),
woosh.Token(woosh.NAME, 'lineno', 2211, 33, 2211, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2211, 39, 2212, 0),
woosh.Token(woosh.DEDENT, '        ', 2212, 0, 2212, 8),
woosh.Token(woosh.NAME, 'lname', 2212, 8, 2212, 13),
woosh.Token(woosh.OP, '=', 2212, 14, 2212, 15),
woosh.Token(woosh.STRING, "'.'", 2212, 16, 2212, 19),
woosh.Token(woosh.OP, '.', 2212, 19, 2212, 20),
woosh.Token(woosh.NAME, 'join', 2212, 20, 2212, 24),
woosh.Token(woosh.OP, '(', 2212, 24, 2212, 25),
woosh.Token(woosh.NAME, 'test', 2212, 25, 2212, 29),
woosh.Token(woosh.OP, '.', 2212, 29, 2212, 30),
woosh.Token(woosh.NAME, 'name', 2212, 30, 2212, 34),
woosh.Token(woosh.OP, '.', 2212, 34, 2212, 35),
woosh.Token(woosh.NAME, 'split', 2212, 35, 2212, 40),
woosh.Token(woosh.OP, '(', 2212, 40, 2212, 41),
woosh.Token(woosh.STRING, "'.'", 2212, 41, 2212, 44),
woosh.Token(woosh.OP, ')', 2212, 44, 2212, 45),
woosh.Token(woosh.OP, '[', 2212, 45, 2212, 46),
woosh.Token(woosh.OP, '-', 2212, 46, 2212, 47),
woosh.Token(woosh.NUMBER, '1', 2212, 47, 2212, 48),
woosh.Token(woosh.OP, ':', 2212, 48, 2212, 49),
woosh.Token(woosh.OP, ']', 2212, 49, 2212, 50),
woosh.Token(woosh.OP, ')', 2212, 50, 2212, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 2212, 51, 2213, 0),
woosh.Token(woosh.NAME, 'return', 2213, 8, 2213, 14),
woosh.Token(woosh.OP, '(', 2213, 15, 2213, 16),
woosh.Token(woosh.STRING, "'Failed doctest test for %s\\n'", 2213, 16, 2213, 46),
woosh.Token(woosh.STRING, '\'  File "%s", line %s, in %s\\n\\n%s\'', 2214, 16, 2214, 51),
woosh.Token(woosh.OP, '%', 2215, 16, 2215, 17),
woosh.Token(woosh.OP, '(', 2215, 18, 2215, 19),
woosh.Token(woosh.NAME, 'test', 2215, 19, 2215, 23),
woosh.Token(woosh.OP, '.', 2215, 23, 2215, 24),
woosh.Token(woosh.NAME, 'name', 2215, 24, 2215, 28),
woosh.Token(woosh.OP, ',', 2215, 28, 2215, 29),
woosh.Token(woosh.NAME, 'test', 2215, 30, 2215, 34),
woosh.Token(woosh.OP, '.', 2215, 34, 2215, 35),
woosh.Token(woosh.NAME, 'filename', 2215, 35, 2215, 43),
woosh.Token(woosh.OP, ',', 2215, 43, 2215, 44),
woosh.Token(woosh.NAME, 'lineno', 2215, 45, 2215, 51),
woosh.Token(woosh.OP, ',', 2215, 51, 2215, 52),
woosh.Token(woosh.NAME, 'lname', 2215, 53, 2215, 58),
woosh.Token(woosh.OP, ',', 2215, 58, 2215, 59),
woosh.Token(woosh.NAME, 'err', 2215, 60, 2215, 63),
woosh.Token(woosh.OP, ')', 2215, 63, 2215, 64),
woosh.Token(woosh.OP, ')', 2216, 16, 2216, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2216, 17, 2217, 0),
woosh.Token(woosh.DEDENT, '    ', 2218, 0, 2218, 4),
woosh.Token(woosh.NAME, 'def', 2218, 4, 2218, 7),
woosh.Token(woosh.NAME, 'debug', 2218, 8, 2218, 13),
woosh.Token(woosh.OP, '(', 2218, 13, 2218, 14),
woosh.Token(woosh.NAME, 'self', 2218, 14, 2218, 18),
woosh.Token(woosh.OP, ')', 2218, 18, 2218, 19),
woosh.Token(woosh.OP, ':', 2218, 19, 2218, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2218, 20, 2219, 0),
woosh.Token(woosh.INDENT, '        ', 2219, 0, 2219, 8),
woosh.Token(woosh.STRING, 'r"""Run the test case without results and without catching exceptions\r\n\r\n           The unit test framework includes a debug method on test cases\r\n           and test suites to support post-mortem debugging.  The test code\r\n           is run in such a way that errors are not caught.  This way a\r\n           caller can catch the errors and initiate post-mortem debugging.\r\n\r\n           The DocTestCase provides a debug method that raises\r\n           UnexpectedException errors if there is an unexpected\r\n           exception:\r\n\r\n             >>> test = DocTestParser().get_doctest(\'>>> raise KeyError\\n42\',\r\n             ...                {}, \'foo\', \'foo.py\', 0)\r\n             >>> case = DocTestCase(test)\r\n             >>> try:\r\n             ...     case.debug()\r\n             ... except UnexpectedException as f:\r\n             ...     failure = f\r\n\r\n           The UnexpectedException contains the test, the example, and\r\n           the original exception:\r\n\r\n             >>> failure.test is test\r\n             True\r\n\r\n             >>> failure.example.want\r\n             \'42\\n\'\r\n\r\n             >>> exc_info = failure.exc_info\r\n             >>> raise exc_info[1] # Already has the traceback\r\n             Traceback (most recent call last):\r\n             ...\r\n             KeyError\r\n\r\n           If the output doesn\'t match, then a DocTestFailure is raised:\r\n\r\n             >>> test = DocTestParser().get_doctest(\'\'\'\r\n             ...      >>> x = 1\r\n             ...      >>> x\r\n             ...      2\r\n             ...      \'\'\', {}, \'foo\', \'foo.py\', 0)\r\n             >>> case = DocTestCase(test)\r\n\r\n             >>> try:\r\n             ...    case.debug()\r\n             ... except DocTestFailure as f:\r\n             ...    failure = f\r\n\r\n           DocTestFailure objects provide access to the test:\r\n\r\n             >>> failure.test is test\r\n             True\r\n\r\n           As well as to the example:\r\n\r\n             >>> failure.example.want\r\n             \'2\\n\'\r\n\r\n           and the actual output:\r\n\r\n             >>> failure.got\r\n             \'1\\n\'\r\n\r\n           """', 2219, 8, 2282, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 2282, 14, 2283, 0),
woosh.Token(woosh.NAME, 'self', 2284, 8, 2284, 12),
woosh.Token(woosh.OP, '.', 2284, 12, 2284, 13),
woosh.Token(woosh.NAME, 'setUp', 2284, 13, 2284, 18),
woosh.Token(woosh.OP, '(', 2284, 18, 2284, 19),
woosh.Token(woosh.OP, ')', 2284, 19, 2284, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2284, 20, 2285, 0),
woosh.Token(woosh.NAME, 'runner', 2285, 8, 2285, 14),
woosh.Token(woosh.OP, '=', 2285, 15, 2285, 16),
woosh.Token(woosh.NAME, 'DebugRunner', 2285, 17, 2285, 28),
woosh.Token(woosh.OP, '(', 2285, 28, 2285, 29),
woosh.Token(woosh.NAME, 'optionflags', 2285, 29, 2285, 40),
woosh.Token(woosh.OP, '=', 2285, 40, 2285, 41),
woosh.Token(woosh.NAME, 'self', 2285, 41, 2285, 45),
woosh.Token(woosh.OP, '.', 2285, 45, 2285, 46),
woosh.Token(woosh.NAME, '_dt_optionflags', 2285, 46, 2285, 61),
woosh.Token(woosh.OP, ',', 2285, 61, 2285, 62),
woosh.Token(woosh.NAME, 'checker', 2286, 29, 2286, 36),
woosh.Token(woosh.OP, '=', 2286, 36, 2286, 37),
woosh.Token(woosh.NAME, 'self', 2286, 37, 2286, 41),
woosh.Token(woosh.OP, '.', 2286, 41, 2286, 42),
woosh.Token(woosh.NAME, '_dt_checker', 2286, 42, 2286, 53),
woosh.Token(woosh.OP, ',', 2286, 53, 2286, 54),
woosh.Token(woosh.NAME, 'verbose', 2286, 55, 2286, 62),
woosh.Token(woosh.OP, '=', 2286, 62, 2286, 63),
woosh.Token(woosh.NAME, 'False', 2286, 63, 2286, 68),
woosh.Token(woosh.OP, ')', 2286, 68, 2286, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 2286, 69, 2287, 0),
woosh.Token(woosh.NAME, 'runner', 2287, 8, 2287, 14),
woosh.Token(woosh.OP, '.', 2287, 14, 2287, 15),
woosh.Token(woosh.NAME, 'run', 2287, 15, 2287, 18),
woosh.Token(woosh.OP, '(', 2287, 18, 2287, 19),
woosh.Token(woosh.NAME, 'self', 2287, 19, 2287, 23),
woosh.Token(woosh.OP, '.', 2287, 23, 2287, 24),
woosh.Token(woosh.NAME, '_dt_test', 2287, 24, 2287, 32),
woosh.Token(woosh.OP, ',', 2287, 32, 2287, 33),
woosh.Token(woosh.NAME, 'clear_globs', 2287, 34, 2287, 45),
woosh.Token(woosh.OP, '=', 2287, 45, 2287, 46),
woosh.Token(woosh.NAME, 'False', 2287, 46, 2287, 51),
woosh.Token(woosh.OP, ')', 2287, 51, 2287, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 2287, 52, 2288, 0),
woosh.Token(woosh.NAME, 'self', 2288, 8, 2288, 12),
woosh.Token(woosh.OP, '.', 2288, 12, 2288, 13),
woosh.Token(woosh.NAME, 'tearDown', 2288, 13, 2288, 21),
woosh.Token(woosh.OP, '(', 2288, 21, 2288, 22),
woosh.Token(woosh.OP, ')', 2288, 22, 2288, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2288, 23, 2289, 0),
woosh.Token(woosh.DEDENT, '    ', 2290, 0, 2290, 4),
woosh.Token(woosh.NAME, 'def', 2290, 4, 2290, 7),
woosh.Token(woosh.NAME, 'id', 2290, 8, 2290, 10),
woosh.Token(woosh.OP, '(', 2290, 10, 2290, 11),
woosh.Token(woosh.NAME, 'self', 2290, 11, 2290, 15),
woosh.Token(woosh.OP, ')', 2290, 15, 2290, 16),
woosh.Token(woosh.OP, ':', 2290, 16, 2290, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2290, 17, 2291, 0),
woosh.Token(woosh.INDENT, '        ', 2291, 0, 2291, 8),
woosh.Token(woosh.NAME, 'return', 2291, 8, 2291, 14),
woosh.Token(woosh.NAME, 'self', 2291, 15, 2291, 19),
woosh.Token(woosh.OP, '.', 2291, 19, 2291, 20),
woosh.Token(woosh.NAME, '_dt_test', 2291, 20, 2291, 28),
woosh.Token(woosh.OP, '.', 2291, 28, 2291, 29),
woosh.Token(woosh.NAME, 'name', 2291, 29, 2291, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 2291, 33, 2292, 0),
woosh.Token(woosh.DEDENT, '    ', 2293, 0, 2293, 4),
woosh.Token(woosh.NAME, 'def', 2293, 4, 2293, 7),
woosh.Token(woosh.NAME, '__eq__', 2293, 8, 2293, 14),
woosh.Token(woosh.OP, '(', 2293, 14, 2293, 15),
woosh.Token(woosh.NAME, 'self', 2293, 15, 2293, 19),
woosh.Token(woosh.OP, ',', 2293, 19, 2293, 20),
woosh.Token(woosh.NAME, 'other', 2293, 21, 2293, 26),
woosh.Token(woosh.OP, ')', 2293, 26, 2293, 27),
woosh.Token(woosh.OP, ':', 2293, 27, 2293, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2293, 28, 2294, 0),
woosh.Token(woosh.INDENT, '        ', 2294, 0, 2294, 8),
woosh.Token(woosh.NAME, 'if', 2294, 8, 2294, 10),
woosh.Token(woosh.NAME, 'type', 2294, 11, 2294, 15),
woosh.Token(woosh.OP, '(', 2294, 15, 2294, 16),
woosh.Token(woosh.NAME, 'self', 2294, 16, 2294, 20),
woosh.Token(woosh.OP, ')', 2294, 20, 2294, 21),
woosh.Token(woosh.NAME, 'is', 2294, 22, 2294, 24),
woosh.Token(woosh.NAME, 'not', 2294, 25, 2294, 28),
woosh.Token(woosh.NAME, 'type', 2294, 29, 2294, 33),
woosh.Token(woosh.OP, '(', 2294, 33, 2294, 34),
woosh.Token(woosh.NAME, 'other', 2294, 34, 2294, 39),
woosh.Token(woosh.OP, ')', 2294, 39, 2294, 40),
woosh.Token(woosh.OP, ':', 2294, 40, 2294, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 2294, 41, 2295, 0),
woosh.Token(woosh.INDENT, '            ', 2295, 0, 2295, 12),
woosh.Token(woosh.NAME, 'return', 2295, 12, 2295, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 2295, 19, 2295, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 2295, 33, 2296, 0),
woosh.Token(woosh.DEDENT, '        ', 2297, 0, 2297, 8),
woosh.Token(woosh.NAME, 'return', 2297, 8, 2297, 14),
woosh.Token(woosh.NAME, 'self', 2297, 15, 2297, 19),
woosh.Token(woosh.OP, '.', 2297, 19, 2297, 20),
woosh.Token(woosh.NAME, '_dt_test', 2297, 20, 2297, 28),
woosh.Token(woosh.OP, '==', 2297, 29, 2297, 31),
woosh.Token(woosh.NAME, 'other', 2297, 32, 2297, 37),
woosh.Token(woosh.OP, '.', 2297, 37, 2297, 38),
woosh.Token(woosh.NAME, '_dt_test', 2297, 38, 2297, 46),
woosh.Token(woosh.NAME, 'and', 2297, 47, 2297, 50),
woosh.Token(woosh.NAME, 'self', 2298, 15, 2298, 19),
woosh.Token(woosh.OP, '.', 2298, 19, 2298, 20),
woosh.Token(woosh.NAME, '_dt_optionflags', 2298, 20, 2298, 35),
woosh.Token(woosh.OP, '==', 2298, 36, 2298, 38),
woosh.Token(woosh.NAME, 'other', 2298, 39, 2298, 44),
woosh.Token(woosh.OP, '.', 2298, 44, 2298, 45),
woosh.Token(woosh.NAME, '_dt_optionflags', 2298, 45, 2298, 60),
woosh.Token(woosh.NAME, 'and', 2298, 61, 2298, 64),
woosh.Token(woosh.NAME, 'self', 2299, 15, 2299, 19),
woosh.Token(woosh.OP, '.', 2299, 19, 2299, 20),
woosh.Token(woosh.NAME, '_dt_setUp', 2299, 20, 2299, 29),
woosh.Token(woosh.OP, '==', 2299, 30, 2299, 32),
woosh.Token(woosh.NAME, 'other', 2299, 33, 2299, 38),
woosh.Token(woosh.OP, '.', 2299, 38, 2299, 39),
woosh.Token(woosh.NAME, '_dt_setUp', 2299, 39, 2299, 48),
woosh.Token(woosh.NAME, 'and', 2299, 49, 2299, 52),
woosh.Token(woosh.NAME, 'self', 2300, 15, 2300, 19),
woosh.Token(woosh.OP, '.', 2300, 19, 2300, 20),
woosh.Token(woosh.NAME, '_dt_tearDown', 2300, 20, 2300, 32),
woosh.Token(woosh.OP, '==', 2300, 33, 2300, 35),
woosh.Token(woosh.NAME, 'other', 2300, 36, 2300, 41),
woosh.Token(woosh.OP, '.', 2300, 41, 2300, 42),
woosh.Token(woosh.NAME, '_dt_tearDown', 2300, 42, 2300, 54),
woosh.Token(woosh.NAME, 'and', 2300, 55, 2300, 58),
woosh.Token(woosh.NAME, 'self', 2301, 15, 2301, 19),
woosh.Token(woosh.OP, '.', 2301, 19, 2301, 20),
woosh.Token(woosh.NAME, '_dt_checker', 2301, 20, 2301, 31),
woosh.Token(woosh.OP, '==', 2301, 32, 2301, 34),
woosh.Token(woosh.NAME, 'other', 2301, 35, 2301, 40),
woosh.Token(woosh.OP, '.', 2301, 40, 2301, 41),
woosh.Token(woosh.NAME, '_dt_checker', 2301, 41, 2301, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 2301, 52, 2302, 0),
woosh.Token(woosh.DEDENT, '    ', 2303, 0, 2303, 4),
woosh.Token(woosh.NAME, 'def', 2303, 4, 2303, 7),
woosh.Token(woosh.NAME, '__hash__', 2303, 8, 2303, 16),
woosh.Token(woosh.OP, '(', 2303, 16, 2303, 17),
woosh.Token(woosh.NAME, 'self', 2303, 17, 2303, 21),
woosh.Token(woosh.OP, ')', 2303, 21, 2303, 22),
woosh.Token(woosh.OP, ':', 2303, 22, 2303, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2303, 23, 2304, 0),
woosh.Token(woosh.INDENT, '        ', 2304, 0, 2304, 8),
woosh.Token(woosh.NAME, 'return', 2304, 8, 2304, 14),
woosh.Token(woosh.NAME, 'hash', 2304, 15, 2304, 19),
woosh.Token(woosh.OP, '(', 2304, 19, 2304, 20),
woosh.Token(woosh.OP, '(', 2304, 20, 2304, 21),
woosh.Token(woosh.NAME, 'self', 2304, 21, 2304, 25),
woosh.Token(woosh.OP, '.', 2304, 25, 2304, 26),
woosh.Token(woosh.NAME, '_dt_optionflags', 2304, 26, 2304, 41),
woosh.Token(woosh.OP, ',', 2304, 41, 2304, 42),
woosh.Token(woosh.NAME, 'self', 2304, 43, 2304, 47),
woosh.Token(woosh.OP, '.', 2304, 47, 2304, 48),
woosh.Token(woosh.NAME, '_dt_setUp', 2304, 48, 2304, 57),
woosh.Token(woosh.OP, ',', 2304, 57, 2304, 58),
woosh.Token(woosh.NAME, 'self', 2304, 59, 2304, 63),
woosh.Token(woosh.OP, '.', 2304, 63, 2304, 64),
woosh.Token(woosh.NAME, '_dt_tearDown', 2304, 64, 2304, 76),
woosh.Token(woosh.OP, ',', 2304, 76, 2304, 77),
woosh.Token(woosh.NAME, 'self', 2305, 21, 2305, 25),
woosh.Token(woosh.OP, '.', 2305, 25, 2305, 26),
woosh.Token(woosh.NAME, '_dt_checker', 2305, 26, 2305, 37),
woosh.Token(woosh.OP, ')', 2305, 37, 2305, 38),
woosh.Token(woosh.OP, ')', 2305, 38, 2305, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2305, 39, 2306, 0),
woosh.Token(woosh.DEDENT, '    ', 2307, 0, 2307, 4),
woosh.Token(woosh.NAME, 'def', 2307, 4, 2307, 7),
woosh.Token(woosh.NAME, '__repr__', 2307, 8, 2307, 16),
woosh.Token(woosh.OP, '(', 2307, 16, 2307, 17),
woosh.Token(woosh.NAME, 'self', 2307, 17, 2307, 21),
woosh.Token(woosh.OP, ')', 2307, 21, 2307, 22),
woosh.Token(woosh.OP, ':', 2307, 22, 2307, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2307, 23, 2308, 0),
woosh.Token(woosh.INDENT, '        ', 2308, 0, 2308, 8),
woosh.Token(woosh.NAME, 'name', 2308, 8, 2308, 12),
woosh.Token(woosh.OP, '=', 2308, 13, 2308, 14),
woosh.Token(woosh.NAME, 'self', 2308, 15, 2308, 19),
woosh.Token(woosh.OP, '.', 2308, 19, 2308, 20),
woosh.Token(woosh.NAME, '_dt_test', 2308, 20, 2308, 28),
woosh.Token(woosh.OP, '.', 2308, 28, 2308, 29),
woosh.Token(woosh.NAME, 'name', 2308, 29, 2308, 33),
woosh.Token(woosh.OP, '.', 2308, 33, 2308, 34),
woosh.Token(woosh.NAME, 'split', 2308, 34, 2308, 39),
woosh.Token(woosh.OP, '(', 2308, 39, 2308, 40),
woosh.Token(woosh.STRING, "'.'", 2308, 40, 2308, 43),
woosh.Token(woosh.OP, ')', 2308, 43, 2308, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 2308, 44, 2309, 0),
woosh.Token(woosh.NAME, 'return', 2309, 8, 2309, 14),
woosh.Token(woosh.STRING, '"%s (%s)"', 2309, 15, 2309, 24),
woosh.Token(woosh.OP, '%', 2309, 25, 2309, 26),
woosh.Token(woosh.OP, '(', 2309, 27, 2309, 28),
woosh.Token(woosh.NAME, 'name', 2309, 28, 2309, 32),
woosh.Token(woosh.OP, '[', 2309, 32, 2309, 33),
woosh.Token(woosh.OP, '-', 2309, 33, 2309, 34),
woosh.Token(woosh.NUMBER, '1', 2309, 34, 2309, 35),
woosh.Token(woosh.OP, ']', 2309, 35, 2309, 36),
woosh.Token(woosh.OP, ',', 2309, 36, 2309, 37),
woosh.Token(woosh.STRING, "'.'", 2309, 38, 2309, 41),
woosh.Token(woosh.OP, '.', 2309, 41, 2309, 42),
woosh.Token(woosh.NAME, 'join', 2309, 42, 2309, 46),
woosh.Token(woosh.OP, '(', 2309, 46, 2309, 47),
woosh.Token(woosh.NAME, 'name', 2309, 47, 2309, 51),
woosh.Token(woosh.OP, '[', 2309, 51, 2309, 52),
woosh.Token(woosh.OP, ':', 2309, 52, 2309, 53),
woosh.Token(woosh.OP, '-', 2309, 53, 2309, 54),
woosh.Token(woosh.NUMBER, '1', 2309, 54, 2309, 55),
woosh.Token(woosh.OP, ']', 2309, 55, 2309, 56),
woosh.Token(woosh.OP, ')', 2309, 56, 2309, 57),
woosh.Token(woosh.OP, ')', 2309, 57, 2309, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 2309, 58, 2310, 0),
woosh.Token(woosh.DEDENT, '    ', 2311, 0, 2311, 4),
woosh.Token(woosh.NAME, '__str__', 2311, 4, 2311, 11),
woosh.Token(woosh.OP, '=', 2311, 12, 2311, 13),
woosh.Token(woosh.NAME, 'object', 2311, 14, 2311, 20),
woosh.Token(woosh.OP, '.', 2311, 20, 2311, 21),
woosh.Token(woosh.NAME, '__str__', 2311, 21, 2311, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2311, 28, 2312, 0),
woosh.Token(woosh.NAME, 'def', 2313, 4, 2313, 7),
woosh.Token(woosh.NAME, 'shortDescription', 2313, 8, 2313, 24),
woosh.Token(woosh.OP, '(', 2313, 24, 2313, 25),
woosh.Token(woosh.NAME, 'self', 2313, 25, 2313, 29),
woosh.Token(woosh.OP, ')', 2313, 29, 2313, 30),
woosh.Token(woosh.OP, ':', 2313, 30, 2313, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2313, 31, 2314, 0),
woosh.Token(woosh.INDENT, '        ', 2314, 0, 2314, 8),
woosh.Token(woosh.NAME, 'return', 2314, 8, 2314, 14),
woosh.Token(woosh.STRING, '"Doctest: "', 2314, 15, 2314, 26),
woosh.Token(woosh.OP, '+', 2314, 27, 2314, 28),
woosh.Token(woosh.NAME, 'self', 2314, 29, 2314, 33),
woosh.Token(woosh.OP, '.', 2314, 33, 2314, 34),
woosh.Token(woosh.NAME, '_dt_test', 2314, 34, 2314, 42),
woosh.Token(woosh.OP, '.', 2314, 42, 2314, 43),
woosh.Token(woosh.NAME, 'name', 2314, 43, 2314, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 2314, 47, 2315, 0),
woosh.Token(woosh.DEDENT, '', 2316, 0, 2316, 0),
woosh.Token(woosh.DEDENT, '', 2316, 0, 2316, 0),
woosh.Token(woosh.NAME, 'class', 2316, 0, 2316, 5),
woosh.Token(woosh.NAME, 'SkipDocTestCase', 2316, 6, 2316, 21),
woosh.Token(woosh.OP, '(', 2316, 21, 2316, 22),
woosh.Token(woosh.NAME, 'DocTestCase', 2316, 22, 2316, 33),
woosh.Token(woosh.OP, ')', 2316, 33, 2316, 34),
woosh.Token(woosh.OP, ':', 2316, 34, 2316, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2316, 35, 2317, 0),
woosh.Token(woosh.INDENT, '    ', 2317, 0, 2317, 4),
woosh.Token(woosh.NAME, 'def', 2317, 4, 2317, 7),
woosh.Token(woosh.NAME, '__init__', 2317, 8, 2317, 16),
woosh.Token(woosh.OP, '(', 2317, 16, 2317, 17),
woosh.Token(woosh.NAME, 'self', 2317, 17, 2317, 21),
woosh.Token(woosh.OP, ',', 2317, 21, 2317, 22),
woosh.Token(woosh.NAME, 'module', 2317, 23, 2317, 29),
woosh.Token(woosh.OP, ')', 2317, 29, 2317, 30),
woosh.Token(woosh.OP, ':', 2317, 30, 2317, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2317, 31, 2318, 0),
woosh.Token(woosh.INDENT, '        ', 2318, 0, 2318, 8),
woosh.Token(woosh.NAME, 'self', 2318, 8, 2318, 12),
woosh.Token(woosh.OP, '.', 2318, 12, 2318, 13),
woosh.Token(woosh.NAME, 'module', 2318, 13, 2318, 19),
woosh.Token(woosh.OP, '=', 2318, 20, 2318, 21),
woosh.Token(woosh.NAME, 'module', 2318, 22, 2318, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2318, 28, 2319, 0),
woosh.Token(woosh.NAME, 'DocTestCase', 2319, 8, 2319, 19),
woosh.Token(woosh.OP, '.', 2319, 19, 2319, 20),
woosh.Token(woosh.NAME, '__init__', 2319, 20, 2319, 28),
woosh.Token(woosh.OP, '(', 2319, 28, 2319, 29),
woosh.Token(woosh.NAME, 'self', 2319, 29, 2319, 33),
woosh.Token(woosh.OP, ',', 2319, 33, 2319, 34),
woosh.Token(woosh.NAME, 'None', 2319, 35, 2319, 39),
woosh.Token(woosh.OP, ')', 2319, 39, 2319, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2319, 40, 2320, 0),
woosh.Token(woosh.DEDENT, '    ', 2321, 0, 2321, 4),
woosh.Token(woosh.NAME, 'def', 2321, 4, 2321, 7),
woosh.Token(woosh.NAME, 'setUp', 2321, 8, 2321, 13),
woosh.Token(woosh.OP, '(', 2321, 13, 2321, 14),
woosh.Token(woosh.NAME, 'self', 2321, 14, 2321, 18),
woosh.Token(woosh.OP, ')', 2321, 18, 2321, 19),
woosh.Token(woosh.OP, ':', 2321, 19, 2321, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2321, 20, 2322, 0),
woosh.Token(woosh.INDENT, '        ', 2322, 0, 2322, 8),
woosh.Token(woosh.NAME, 'self', 2322, 8, 2322, 12),
woosh.Token(woosh.OP, '.', 2322, 12, 2322, 13),
woosh.Token(woosh.NAME, 'skipTest', 2322, 13, 2322, 21),
woosh.Token(woosh.OP, '(', 2322, 21, 2322, 22),
woosh.Token(woosh.STRING, '"DocTestSuite will not work with -O2 and above"', 2322, 22, 2322, 69),
woosh.Token(woosh.OP, ')', 2322, 69, 2322, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 2322, 70, 2323, 0),
woosh.Token(woosh.DEDENT, '    ', 2324, 0, 2324, 4),
woosh.Token(woosh.NAME, 'def', 2324, 4, 2324, 7),
woosh.Token(woosh.NAME, 'test_skip', 2324, 8, 2324, 17),
woosh.Token(woosh.OP, '(', 2324, 17, 2324, 18),
woosh.Token(woosh.NAME, 'self', 2324, 18, 2324, 22),
woosh.Token(woosh.OP, ')', 2324, 22, 2324, 23),
woosh.Token(woosh.OP, ':', 2324, 23, 2324, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 2324, 24, 2325, 0),
woosh.Token(woosh.INDENT, '        ', 2325, 0, 2325, 8),
woosh.Token(woosh.NAME, 'pass', 2325, 8, 2325, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2325, 12, 2326, 0),
woosh.Token(woosh.DEDENT, '    ', 2327, 0, 2327, 4),
woosh.Token(woosh.NAME, 'def', 2327, 4, 2327, 7),
woosh.Token(woosh.NAME, 'shortDescription', 2327, 8, 2327, 24),
woosh.Token(woosh.OP, '(', 2327, 24, 2327, 25),
woosh.Token(woosh.NAME, 'self', 2327, 25, 2327, 29),
woosh.Token(woosh.OP, ')', 2327, 29, 2327, 30),
woosh.Token(woosh.OP, ':', 2327, 30, 2327, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2327, 31, 2328, 0),
woosh.Token(woosh.INDENT, '        ', 2328, 0, 2328, 8),
woosh.Token(woosh.NAME, 'return', 2328, 8, 2328, 14),
woosh.Token(woosh.STRING, '"Skipping tests from %s"', 2328, 15, 2328, 39),
woosh.Token(woosh.OP, '%', 2328, 40, 2328, 41),
woosh.Token(woosh.NAME, 'self', 2328, 42, 2328, 46),
woosh.Token(woosh.OP, '.', 2328, 46, 2328, 47),
woosh.Token(woosh.NAME, 'module', 2328, 47, 2328, 53),
woosh.Token(woosh.OP, '.', 2328, 53, 2328, 54),
woosh.Token(woosh.NAME, '__name__', 2328, 54, 2328, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 2328, 62, 2329, 0),
woosh.Token(woosh.DEDENT, '    ', 2330, 0, 2330, 4),
woosh.Token(woosh.NAME, '__str__', 2330, 4, 2330, 11),
woosh.Token(woosh.OP, '=', 2330, 12, 2330, 13),
woosh.Token(woosh.NAME, 'shortDescription', 2330, 14, 2330, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2330, 30, 2331, 0),
woosh.Token(woosh.DEDENT, '', 2333, 0, 2333, 0),
woosh.Token(woosh.NAME, 'class', 2333, 0, 2333, 5),
woosh.Token(woosh.NAME, '_DocTestSuite', 2333, 6, 2333, 19),
woosh.Token(woosh.OP, '(', 2333, 19, 2333, 20),
woosh.Token(woosh.NAME, 'unittest', 2333, 20, 2333, 28),
woosh.Token(woosh.OP, '.', 2333, 28, 2333, 29),
woosh.Token(woosh.NAME, 'TestSuite', 2333, 29, 2333, 38),
woosh.Token(woosh.OP, ')', 2333, 38, 2333, 39),
woosh.Token(woosh.OP, ':', 2333, 39, 2333, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2333, 40, 2334, 0),
woosh.Token(woosh.INDENT, '    ', 2335, 0, 2335, 4),
woosh.Token(woosh.NAME, 'def', 2335, 4, 2335, 7),
woosh.Token(woosh.NAME, '_removeTestAtIndex', 2335, 8, 2335, 26),
woosh.Token(woosh.OP, '(', 2335, 26, 2335, 27),
woosh.Token(woosh.NAME, 'self', 2335, 27, 2335, 31),
woosh.Token(woosh.OP, ',', 2335, 31, 2335, 32),
woosh.Token(woosh.NAME, 'index', 2335, 33, 2335, 38),
woosh.Token(woosh.OP, ')', 2335, 38, 2335, 39),
woosh.Token(woosh.OP, ':', 2335, 39, 2335, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2335, 40, 2336, 0),
woosh.Token(woosh.INDENT, '        ', 2336, 0, 2336, 8),
woosh.Token(woosh.NAME, 'pass', 2336, 8, 2336, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2336, 12, 2337, 0),
woosh.Token(woosh.DEDENT, '', 2339, 0, 2339, 0),
woosh.Token(woosh.DEDENT, '', 2339, 0, 2339, 0),
woosh.Token(woosh.NAME, 'def', 2339, 0, 2339, 3),
woosh.Token(woosh.NAME, 'DocTestSuite', 2339, 4, 2339, 16),
woosh.Token(woosh.OP, '(', 2339, 16, 2339, 17),
woosh.Token(woosh.NAME, 'module', 2339, 17, 2339, 23),
woosh.Token(woosh.OP, '=', 2339, 23, 2339, 24),
woosh.Token(woosh.NAME, 'None', 2339, 24, 2339, 28),
woosh.Token(woosh.OP, ',', 2339, 28, 2339, 29),
woosh.Token(woosh.NAME, 'globs', 2339, 30, 2339, 35),
woosh.Token(woosh.OP, '=', 2339, 35, 2339, 36),
woosh.Token(woosh.NAME, 'None', 2339, 36, 2339, 40),
woosh.Token(woosh.OP, ',', 2339, 40, 2339, 41),
woosh.Token(woosh.NAME, 'extraglobs', 2339, 42, 2339, 52),
woosh.Token(woosh.OP, '=', 2339, 52, 2339, 53),
woosh.Token(woosh.NAME, 'None', 2339, 53, 2339, 57),
woosh.Token(woosh.OP, ',', 2339, 57, 2339, 58),
woosh.Token(woosh.NAME, 'test_finder', 2339, 59, 2339, 70),
woosh.Token(woosh.OP, '=', 2339, 70, 2339, 71),
woosh.Token(woosh.NAME, 'None', 2339, 71, 2339, 75),
woosh.Token(woosh.OP, ',', 2339, 75, 2339, 76),
woosh.Token(woosh.OP, '**', 2340, 17, 2340, 19),
woosh.Token(woosh.NAME, 'options', 2340, 19, 2340, 26),
woosh.Token(woosh.OP, ')', 2340, 26, 2340, 27),
woosh.Token(woosh.OP, ':', 2340, 27, 2340, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2340, 28, 2341, 0),
woosh.Token(woosh.INDENT, '    ', 2341, 0, 2341, 4),
woosh.Token(woosh.STRING, '"""\r\n    Convert doctest tests for a module to a unittest test suite.\r\n\r\n    This converts each documentation string in a module that\r\n    contains doctest tests to a unittest test case.  If any of the\r\n    tests in a doc string fail, then the test case fails.  An exception\r\n    is raised showing the name of the file containing the test and a\r\n    (sometimes approximate) line number.\r\n\r\n    The `module` argument provides the module to be tested.  The argument\r\n    can be either a module or a module name.\r\n\r\n    If no argument is given, the calling module is used.\r\n\r\n    A number of options may be provided as keyword arguments:\r\n\r\n    setUp\r\n      A set-up function.  This is called before running the\r\n      tests in each file. The setUp function will be passed a DocTest\r\n      object.  The setUp function can access the test globals as the\r\n      globs attribute of the test passed.\r\n\r\n    tearDown\r\n      A tear-down function.  This is called after running the\r\n      tests in each file.  The tearDown function will be passed a DocTest\r\n      object.  The tearDown function can access the test globals as the\r\n      globs attribute of the test passed.\r\n\r\n    globs\r\n      A dictionary containing initial global variables for the tests.\r\n\r\n    optionflags\r\n       A set of doctest option flags expressed as an integer.\r\n    """', 2341, 4, 2374, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2374, 7, 2375, 0),
woosh.Token(woosh.NAME, 'if', 2376, 4, 2376, 6),
woosh.Token(woosh.NAME, 'test_finder', 2376, 7, 2376, 18),
woosh.Token(woosh.NAME, 'is', 2376, 19, 2376, 21),
woosh.Token(woosh.NAME, 'None', 2376, 22, 2376, 26),
woosh.Token(woosh.OP, ':', 2376, 26, 2376, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 2376, 27, 2377, 0),
woosh.Token(woosh.INDENT, '        ', 2377, 0, 2377, 8),
woosh.Token(woosh.NAME, 'test_finder', 2377, 8, 2377, 19),
woosh.Token(woosh.OP, '=', 2377, 20, 2377, 21),
woosh.Token(woosh.NAME, 'DocTestFinder', 2377, 22, 2377, 35),
woosh.Token(woosh.OP, '(', 2377, 35, 2377, 36),
woosh.Token(woosh.OP, ')', 2377, 36, 2377, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 2377, 37, 2378, 0),
woosh.Token(woosh.DEDENT, '    ', 2379, 0, 2379, 4),
woosh.Token(woosh.NAME, 'module', 2379, 4, 2379, 10),
woosh.Token(woosh.OP, '=', 2379, 11, 2379, 12),
woosh.Token(woosh.NAME, '_normalize_module', 2379, 13, 2379, 30),
woosh.Token(woosh.OP, '(', 2379, 30, 2379, 31),
woosh.Token(woosh.NAME, 'module', 2379, 31, 2379, 37),
woosh.Token(woosh.OP, ')', 2379, 37, 2379, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2379, 38, 2380, 0),
woosh.Token(woosh.NAME, 'tests', 2380, 4, 2380, 9),
woosh.Token(woosh.OP, '=', 2380, 10, 2380, 11),
woosh.Token(woosh.NAME, 'test_finder', 2380, 12, 2380, 23),
woosh.Token(woosh.OP, '.', 2380, 23, 2380, 24),
woosh.Token(woosh.NAME, 'find', 2380, 24, 2380, 28),
woosh.Token(woosh.OP, '(', 2380, 28, 2380, 29),
woosh.Token(woosh.NAME, 'module', 2380, 29, 2380, 35),
woosh.Token(woosh.OP, ',', 2380, 35, 2380, 36),
woosh.Token(woosh.NAME, 'globs', 2380, 37, 2380, 42),
woosh.Token(woosh.OP, '=', 2380, 42, 2380, 43),
woosh.Token(woosh.NAME, 'globs', 2380, 43, 2380, 48),
woosh.Token(woosh.OP, ',', 2380, 48, 2380, 49),
woosh.Token(woosh.NAME, 'extraglobs', 2380, 50, 2380, 60),
woosh.Token(woosh.OP, '=', 2380, 60, 2380, 61),
woosh.Token(woosh.NAME, 'extraglobs', 2380, 61, 2380, 71),
woosh.Token(woosh.OP, ')', 2380, 71, 2380, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 2380, 72, 2381, 0),
woosh.Token(woosh.NAME, 'if', 2382, 4, 2382, 6),
woosh.Token(woosh.NAME, 'not', 2382, 7, 2382, 10),
woosh.Token(woosh.NAME, 'tests', 2382, 11, 2382, 16),
woosh.Token(woosh.NAME, 'and', 2382, 17, 2382, 20),
woosh.Token(woosh.NAME, 'sys', 2382, 21, 2382, 24),
woosh.Token(woosh.OP, '.', 2382, 24, 2382, 25),
woosh.Token(woosh.NAME, 'flags', 2382, 25, 2382, 30),
woosh.Token(woosh.OP, '.', 2382, 30, 2382, 31),
woosh.Token(woosh.NAME, 'optimize', 2382, 31, 2382, 39),
woosh.Token(woosh.OP, '>=', 2382, 40, 2382, 42),
woosh.Token(woosh.NUMBER, '2', 2382, 42, 2382, 43),
woosh.Token(woosh.OP, ':', 2382, 43, 2382, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 2382, 44, 2383, 0),
woosh.Token(woosh.COMMENT, '# Skip doctests when running with -O2', 2383, 8, 2383, 45),
woosh.Token(woosh.INDENT, '        ', 2384, 0, 2384, 8),
woosh.Token(woosh.NAME, 'suite', 2384, 8, 2384, 13),
woosh.Token(woosh.OP, '=', 2384, 14, 2384, 15),
woosh.Token(woosh.NAME, '_DocTestSuite', 2384, 16, 2384, 29),
woosh.Token(woosh.OP, '(', 2384, 29, 2384, 30),
woosh.Token(woosh.OP, ')', 2384, 30, 2384, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2384, 31, 2385, 0),
woosh.Token(woosh.NAME, 'suite', 2385, 8, 2385, 13),
woosh.Token(woosh.OP, '.', 2385, 13, 2385, 14),
woosh.Token(woosh.NAME, 'addTest', 2385, 14, 2385, 21),
woosh.Token(woosh.OP, '(', 2385, 21, 2385, 22),
woosh.Token(woosh.NAME, 'SkipDocTestCase', 2385, 22, 2385, 37),
woosh.Token(woosh.OP, '(', 2385, 37, 2385, 38),
woosh.Token(woosh.NAME, 'module', 2385, 38, 2385, 44),
woosh.Token(woosh.OP, ')', 2385, 44, 2385, 45),
woosh.Token(woosh.OP, ')', 2385, 45, 2385, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 2385, 46, 2386, 0),
woosh.Token(woosh.NAME, 'return', 2386, 8, 2386, 14),
woosh.Token(woosh.NAME, 'suite', 2386, 15, 2386, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2386, 20, 2387, 0),
woosh.Token(woosh.DEDENT, '    ', 2388, 0, 2388, 4),
woosh.Token(woosh.NAME, 'tests', 2388, 4, 2388, 9),
woosh.Token(woosh.OP, '.', 2388, 9, 2388, 10),
woosh.Token(woosh.NAME, 'sort', 2388, 10, 2388, 14),
woosh.Token(woosh.OP, '(', 2388, 14, 2388, 15),
woosh.Token(woosh.OP, ')', 2388, 15, 2388, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2388, 16, 2389, 0),
woosh.Token(woosh.NAME, 'suite', 2389, 4, 2389, 9),
woosh.Token(woosh.OP, '=', 2389, 10, 2389, 11),
woosh.Token(woosh.NAME, '_DocTestSuite', 2389, 12, 2389, 25),
woosh.Token(woosh.OP, '(', 2389, 25, 2389, 26),
woosh.Token(woosh.OP, ')', 2389, 26, 2389, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 2389, 27, 2390, 0),
woosh.Token(woosh.NAME, 'for', 2391, 4, 2391, 7),
woosh.Token(woosh.NAME, 'test', 2391, 8, 2391, 12),
woosh.Token(woosh.NAME, 'in', 2391, 13, 2391, 15),
woosh.Token(woosh.NAME, 'tests', 2391, 16, 2391, 21),
woosh.Token(woosh.OP, ':', 2391, 21, 2391, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2391, 22, 2392, 0),
woosh.Token(woosh.INDENT, '        ', 2392, 0, 2392, 8),
woosh.Token(woosh.NAME, 'if', 2392, 8, 2392, 10),
woosh.Token(woosh.NAME, 'len', 2392, 11, 2392, 14),
woosh.Token(woosh.OP, '(', 2392, 14, 2392, 15),
woosh.Token(woosh.NAME, 'test', 2392, 15, 2392, 19),
woosh.Token(woosh.OP, '.', 2392, 19, 2392, 20),
woosh.Token(woosh.NAME, 'examples', 2392, 20, 2392, 28),
woosh.Token(woosh.OP, ')', 2392, 28, 2392, 29),
woosh.Token(woosh.OP, '==', 2392, 30, 2392, 32),
woosh.Token(woosh.NUMBER, '0', 2392, 33, 2392, 34),
woosh.Token(woosh.OP, ':', 2392, 34, 2392, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2392, 35, 2393, 0),
woosh.Token(woosh.INDENT, '            ', 2393, 0, 2393, 12),
woosh.Token(woosh.NAME, 'continue', 2393, 12, 2393, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2393, 20, 2394, 0),
woosh.Token(woosh.DEDENT, '        ', 2394, 0, 2394, 8),
woosh.Token(woosh.NAME, 'if', 2394, 8, 2394, 10),
woosh.Token(woosh.NAME, 'not', 2394, 11, 2394, 14),
woosh.Token(woosh.NAME, 'test', 2394, 15, 2394, 19),
woosh.Token(woosh.OP, '.', 2394, 19, 2394, 20),
woosh.Token(woosh.NAME, 'filename', 2394, 20, 2394, 28),
woosh.Token(woosh.OP, ':', 2394, 28, 2394, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2394, 29, 2395, 0),
woosh.Token(woosh.INDENT, '            ', 2395, 0, 2395, 12),
woosh.Token(woosh.NAME, 'filename', 2395, 12, 2395, 20),
woosh.Token(woosh.OP, '=', 2395, 21, 2395, 22),
woosh.Token(woosh.NAME, 'module', 2395, 23, 2395, 29),
woosh.Token(woosh.OP, '.', 2395, 29, 2395, 30),
woosh.Token(woosh.NAME, '__file__', 2395, 30, 2395, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2395, 38, 2396, 0),
woosh.Token(woosh.NAME, 'if', 2396, 12, 2396, 14),
woosh.Token(woosh.NAME, 'filename', 2396, 15, 2396, 23),
woosh.Token(woosh.OP, '[', 2396, 23, 2396, 24),
woosh.Token(woosh.OP, '-', 2396, 24, 2396, 25),
woosh.Token(woosh.NUMBER, '4', 2396, 25, 2396, 26),
woosh.Token(woosh.OP, ':', 2396, 26, 2396, 27),
woosh.Token(woosh.OP, ']', 2396, 27, 2396, 28),
woosh.Token(woosh.OP, '==', 2396, 29, 2396, 31),
woosh.Token(woosh.STRING, '".pyc"', 2396, 32, 2396, 38),
woosh.Token(woosh.OP, ':', 2396, 38, 2396, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2396, 39, 2397, 0),
woosh.Token(woosh.INDENT, '                ', 2397, 0, 2397, 16),
woosh.Token(woosh.NAME, 'filename', 2397, 16, 2397, 24),
woosh.Token(woosh.OP, '=', 2397, 25, 2397, 26),
woosh.Token(woosh.NAME, 'filename', 2397, 27, 2397, 35),
woosh.Token(woosh.OP, '[', 2397, 35, 2397, 36),
woosh.Token(woosh.OP, ':', 2397, 36, 2397, 37),
woosh.Token(woosh.OP, '-', 2397, 37, 2397, 38),
woosh.Token(woosh.NUMBER, '1', 2397, 38, 2397, 39),
woosh.Token(woosh.OP, ']', 2397, 39, 2397, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2397, 40, 2398, 0),
woosh.Token(woosh.DEDENT, '            ', 2398, 0, 2398, 12),
woosh.Token(woosh.NAME, 'test', 2398, 12, 2398, 16),
woosh.Token(woosh.OP, '.', 2398, 16, 2398, 17),
woosh.Token(woosh.NAME, 'filename', 2398, 17, 2398, 25),
woosh.Token(woosh.OP, '=', 2398, 26, 2398, 27),
woosh.Token(woosh.NAME, 'filename', 2398, 28, 2398, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2398, 36, 2399, 0),
woosh.Token(woosh.DEDENT, '        ', 2399, 0, 2399, 8),
woosh.Token(woosh.NAME, 'suite', 2399, 8, 2399, 13),
woosh.Token(woosh.OP, '.', 2399, 13, 2399, 14),
woosh.Token(woosh.NAME, 'addTest', 2399, 14, 2399, 21),
woosh.Token(woosh.OP, '(', 2399, 21, 2399, 22),
woosh.Token(woosh.NAME, 'DocTestCase', 2399, 22, 2399, 33),
woosh.Token(woosh.OP, '(', 2399, 33, 2399, 34),
woosh.Token(woosh.NAME, 'test', 2399, 34, 2399, 38),
woosh.Token(woosh.OP, ',', 2399, 38, 2399, 39),
woosh.Token(woosh.OP, '**', 2399, 40, 2399, 42),
woosh.Token(woosh.NAME, 'options', 2399, 42, 2399, 49),
woosh.Token(woosh.OP, ')', 2399, 49, 2399, 50),
woosh.Token(woosh.OP, ')', 2399, 50, 2399, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 2399, 51, 2400, 0),
woosh.Token(woosh.DEDENT, '    ', 2401, 0, 2401, 4),
woosh.Token(woosh.NAME, 'return', 2401, 4, 2401, 10),
woosh.Token(woosh.NAME, 'suite', 2401, 11, 2401, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2401, 16, 2402, 0),
woosh.Token(woosh.DEDENT, '', 2403, 0, 2403, 0),
woosh.Token(woosh.NAME, 'class', 2403, 0, 2403, 5),
woosh.Token(woosh.NAME, 'DocFileCase', 2403, 6, 2403, 17),
woosh.Token(woosh.OP, '(', 2403, 17, 2403, 18),
woosh.Token(woosh.NAME, 'DocTestCase', 2403, 18, 2403, 29),
woosh.Token(woosh.OP, ')', 2403, 29, 2403, 30),
woosh.Token(woosh.OP, ':', 2403, 30, 2403, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2403, 31, 2404, 0),
woosh.Token(woosh.INDENT, '    ', 2405, 0, 2405, 4),
woosh.Token(woosh.NAME, 'def', 2405, 4, 2405, 7),
woosh.Token(woosh.NAME, 'id', 2405, 8, 2405, 10),
woosh.Token(woosh.OP, '(', 2405, 10, 2405, 11),
woosh.Token(woosh.NAME, 'self', 2405, 11, 2405, 15),
woosh.Token(woosh.OP, ')', 2405, 15, 2405, 16),
woosh.Token(woosh.OP, ':', 2405, 16, 2405, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2405, 17, 2406, 0),
woosh.Token(woosh.INDENT, '        ', 2406, 0, 2406, 8),
woosh.Token(woosh.NAME, 'return', 2406, 8, 2406, 14),
woosh.Token(woosh.STRING, "'_'", 2406, 15, 2406, 18),
woosh.Token(woosh.OP, '.', 2406, 18, 2406, 19),
woosh.Token(woosh.NAME, 'join', 2406, 19, 2406, 23),
woosh.Token(woosh.OP, '(', 2406, 23, 2406, 24),
woosh.Token(woosh.NAME, 'self', 2406, 24, 2406, 28),
woosh.Token(woosh.OP, '.', 2406, 28, 2406, 29),
woosh.Token(woosh.NAME, '_dt_test', 2406, 29, 2406, 37),
woosh.Token(woosh.OP, '.', 2406, 37, 2406, 38),
woosh.Token(woosh.NAME, 'name', 2406, 38, 2406, 42),
woosh.Token(woosh.OP, '.', 2406, 42, 2406, 43),
woosh.Token(woosh.NAME, 'split', 2406, 43, 2406, 48),
woosh.Token(woosh.OP, '(', 2406, 48, 2406, 49),
woosh.Token(woosh.STRING, "'.'", 2406, 49, 2406, 52),
woosh.Token(woosh.OP, ')', 2406, 52, 2406, 53),
woosh.Token(woosh.OP, ')', 2406, 53, 2406, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 2406, 54, 2407, 0),
woosh.Token(woosh.DEDENT, '    ', 2408, 0, 2408, 4),
woosh.Token(woosh.NAME, 'def', 2408, 4, 2408, 7),
woosh.Token(woosh.NAME, '__repr__', 2408, 8, 2408, 16),
woosh.Token(woosh.OP, '(', 2408, 16, 2408, 17),
woosh.Token(woosh.NAME, 'self', 2408, 17, 2408, 21),
woosh.Token(woosh.OP, ')', 2408, 21, 2408, 22),
woosh.Token(woosh.OP, ':', 2408, 22, 2408, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2408, 23, 2409, 0),
woosh.Token(woosh.INDENT, '        ', 2409, 0, 2409, 8),
woosh.Token(woosh.NAME, 'return', 2409, 8, 2409, 14),
woosh.Token(woosh.NAME, 'self', 2409, 15, 2409, 19),
woosh.Token(woosh.OP, '.', 2409, 19, 2409, 20),
woosh.Token(woosh.NAME, '_dt_test', 2409, 20, 2409, 28),
woosh.Token(woosh.OP, '.', 2409, 28, 2409, 29),
woosh.Token(woosh.NAME, 'filename', 2409, 29, 2409, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 2409, 37, 2410, 0),
woosh.Token(woosh.DEDENT, '    ', 2411, 0, 2411, 4),
woosh.Token(woosh.NAME, 'def', 2411, 4, 2411, 7),
woosh.Token(woosh.NAME, 'format_failure', 2411, 8, 2411, 22),
woosh.Token(woosh.OP, '(', 2411, 22, 2411, 23),
woosh.Token(woosh.NAME, 'self', 2411, 23, 2411, 27),
woosh.Token(woosh.OP, ',', 2411, 27, 2411, 28),
woosh.Token(woosh.NAME, 'err', 2411, 29, 2411, 32),
woosh.Token(woosh.OP, ')', 2411, 32, 2411, 33),
woosh.Token(woosh.OP, ':', 2411, 33, 2411, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2411, 34, 2412, 0),
woosh.Token(woosh.INDENT, '        ', 2412, 0, 2412, 8),
woosh.Token(woosh.NAME, 'return', 2412, 8, 2412, 14),
woosh.Token(woosh.OP, '(', 2412, 15, 2412, 16),
woosh.Token(woosh.STRING, '\'Failed doctest test for %s\\n  File "%s", line 0\\n\\n%s\'', 2412, 16, 2412, 71),
woosh.Token(woosh.OP, '%', 2413, 16, 2413, 17),
woosh.Token(woosh.OP, '(', 2413, 18, 2413, 19),
woosh.Token(woosh.NAME, 'self', 2413, 19, 2413, 23),
woosh.Token(woosh.OP, '.', 2413, 23, 2413, 24),
woosh.Token(woosh.NAME, '_dt_test', 2413, 24, 2413, 32),
woosh.Token(woosh.OP, '.', 2413, 32, 2413, 33),
woosh.Token(woosh.NAME, 'name', 2413, 33, 2413, 37),
woosh.Token(woosh.OP, ',', 2413, 37, 2413, 38),
woosh.Token(woosh.NAME, 'self', 2413, 39, 2413, 43),
woosh.Token(woosh.OP, '.', 2413, 43, 2413, 44),
woosh.Token(woosh.NAME, '_dt_test', 2413, 44, 2413, 52),
woosh.Token(woosh.OP, '.', 2413, 52, 2413, 53),
woosh.Token(woosh.NAME, 'filename', 2413, 53, 2413, 61),
woosh.Token(woosh.OP, ',', 2413, 61, 2413, 62),
woosh.Token(woosh.NAME, 'err', 2413, 63, 2413, 66),
woosh.Token(woosh.OP, ')', 2413, 66, 2413, 67),
woosh.Token(woosh.OP, ')', 2414, 16, 2414, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2414, 17, 2415, 0),
woosh.Token(woosh.DEDENT, '', 2416, 0, 2416, 0),
woosh.Token(woosh.DEDENT, '', 2416, 0, 2416, 0),
woosh.Token(woosh.NAME, 'def', 2416, 0, 2416, 3),
woosh.Token(woosh.NAME, 'DocFileTest', 2416, 4, 2416, 15),
woosh.Token(woosh.OP, '(', 2416, 15, 2416, 16),
woosh.Token(woosh.NAME, 'path', 2416, 16, 2416, 20),
woosh.Token(woosh.OP, ',', 2416, 20, 2416, 21),
woosh.Token(woosh.NAME, 'module_relative', 2416, 22, 2416, 37),
woosh.Token(woosh.OP, '=', 2416, 37, 2416, 38),
woosh.Token(woosh.NAME, 'True', 2416, 38, 2416, 42),
woosh.Token(woosh.OP, ',', 2416, 42, 2416, 43),
woosh.Token(woosh.NAME, 'package', 2416, 44, 2416, 51),
woosh.Token(woosh.OP, '=', 2416, 51, 2416, 52),
woosh.Token(woosh.NAME, 'None', 2416, 52, 2416, 56),
woosh.Token(woosh.OP, ',', 2416, 56, 2416, 57),
woosh.Token(woosh.NAME, 'globs', 2417, 16, 2417, 21),
woosh.Token(woosh.OP, '=', 2417, 21, 2417, 22),
woosh.Token(woosh.NAME, 'None', 2417, 22, 2417, 26),
woosh.Token(woosh.OP, ',', 2417, 26, 2417, 27),
woosh.Token(woosh.NAME, 'parser', 2417, 28, 2417, 34),
woosh.Token(woosh.OP, '=', 2417, 34, 2417, 35),
woosh.Token(woosh.NAME, 'DocTestParser', 2417, 35, 2417, 48),
woosh.Token(woosh.OP, '(', 2417, 48, 2417, 49),
woosh.Token(woosh.OP, ')', 2417, 49, 2417, 50),
woosh.Token(woosh.OP, ',', 2417, 50, 2417, 51),
woosh.Token(woosh.NAME, 'encoding', 2418, 16, 2418, 24),
woosh.Token(woosh.OP, '=', 2418, 24, 2418, 25),
woosh.Token(woosh.NAME, 'None', 2418, 25, 2418, 29),
woosh.Token(woosh.OP, ',', 2418, 29, 2418, 30),
woosh.Token(woosh.OP, '**', 2418, 31, 2418, 33),
woosh.Token(woosh.NAME, 'options', 2418, 33, 2418, 40),
woosh.Token(woosh.OP, ')', 2418, 40, 2418, 41),
woosh.Token(woosh.OP, ':', 2418, 41, 2418, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2418, 42, 2419, 0),
woosh.Token(woosh.INDENT, '    ', 2419, 0, 2419, 4),
woosh.Token(woosh.NAME, 'if', 2419, 4, 2419, 6),
woosh.Token(woosh.NAME, 'globs', 2419, 7, 2419, 12),
woosh.Token(woosh.NAME, 'is', 2419, 13, 2419, 15),
woosh.Token(woosh.NAME, 'None', 2419, 16, 2419, 20),
woosh.Token(woosh.OP, ':', 2419, 20, 2419, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2419, 21, 2420, 0),
woosh.Token(woosh.INDENT, '        ', 2420, 0, 2420, 8),
woosh.Token(woosh.NAME, 'globs', 2420, 8, 2420, 13),
woosh.Token(woosh.OP, '=', 2420, 14, 2420, 15),
woosh.Token(woosh.OP, '{', 2420, 16, 2420, 17),
woosh.Token(woosh.OP, '}', 2420, 17, 2420, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2420, 18, 2421, 0),
woosh.Token(woosh.DEDENT, '    ', 2421, 0, 2421, 4),
woosh.Token(woosh.NAME, 'else', 2421, 4, 2421, 8),
woosh.Token(woosh.OP, ':', 2421, 8, 2421, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2421, 9, 2422, 0),
woosh.Token(woosh.INDENT, '        ', 2422, 0, 2422, 8),
woosh.Token(woosh.NAME, 'globs', 2422, 8, 2422, 13),
woosh.Token(woosh.OP, '=', 2422, 14, 2422, 15),
woosh.Token(woosh.NAME, 'globs', 2422, 16, 2422, 21),
woosh.Token(woosh.OP, '.', 2422, 21, 2422, 22),
woosh.Token(woosh.NAME, 'copy', 2422, 22, 2422, 26),
woosh.Token(woosh.OP, '(', 2422, 26, 2422, 27),
woosh.Token(woosh.OP, ')', 2422, 27, 2422, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2422, 28, 2423, 0),
woosh.Token(woosh.DEDENT, '    ', 2424, 0, 2424, 4),
woosh.Token(woosh.NAME, 'if', 2424, 4, 2424, 6),
woosh.Token(woosh.NAME, 'package', 2424, 7, 2424, 14),
woosh.Token(woosh.NAME, 'and', 2424, 15, 2424, 18),
woosh.Token(woosh.NAME, 'not', 2424, 19, 2424, 22),
woosh.Token(woosh.NAME, 'module_relative', 2424, 23, 2424, 38),
woosh.Token(woosh.OP, ':', 2424, 38, 2424, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2424, 39, 2425, 0),
woosh.Token(woosh.INDENT, '        ', 2425, 0, 2425, 8),
woosh.Token(woosh.NAME, 'raise', 2425, 8, 2425, 13),
woosh.Token(woosh.NAME, 'ValueError', 2425, 14, 2425, 24),
woosh.Token(woosh.OP, '(', 2425, 24, 2425, 25),
woosh.Token(woosh.STRING, '"Package may only be specified for module-"', 2425, 25, 2425, 68),
woosh.Token(woosh.STRING, '"relative paths."', 2426, 25, 2426, 42),
woosh.Token(woosh.OP, ')', 2426, 42, 2426, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 2426, 43, 2427, 0),
woosh.Token(woosh.COMMENT, '# Relativize the path.', 2428, 4, 2428, 26),
woosh.Token(woosh.DEDENT, '    ', 2429, 0, 2429, 4),
woosh.Token(woosh.NAME, 'doc', 2429, 4, 2429, 7),
woosh.Token(woosh.OP, ',', 2429, 7, 2429, 8),
woosh.Token(woosh.NAME, 'path', 2429, 9, 2429, 13),
woosh.Token(woosh.OP, '=', 2429, 14, 2429, 15),
woosh.Token(woosh.NAME, '_load_testfile', 2429, 16, 2429, 30),
woosh.Token(woosh.OP, '(', 2429, 30, 2429, 31),
woosh.Token(woosh.NAME, 'path', 2429, 31, 2429, 35),
woosh.Token(woosh.OP, ',', 2429, 35, 2429, 36),
woosh.Token(woosh.NAME, 'package', 2429, 37, 2429, 44),
woosh.Token(woosh.OP, ',', 2429, 44, 2429, 45),
woosh.Token(woosh.NAME, 'module_relative', 2429, 46, 2429, 61),
woosh.Token(woosh.OP, ',', 2429, 61, 2429, 62),
woosh.Token(woosh.NAME, 'encoding', 2430, 31, 2430, 39),
woosh.Token(woosh.NAME, 'or', 2430, 40, 2430, 42),
woosh.Token(woosh.STRING, '"utf-8"', 2430, 43, 2430, 50),
woosh.Token(woosh.OP, ')', 2430, 50, 2430, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 2430, 51, 2431, 0),
woosh.Token(woosh.NAME, 'if', 2432, 4, 2432, 6),
woosh.Token(woosh.STRING, '"__file__"', 2432, 7, 2432, 17),
woosh.Token(woosh.NAME, 'not', 2432, 18, 2432, 21),
woosh.Token(woosh.NAME, 'in', 2432, 22, 2432, 24),
woosh.Token(woosh.NAME, 'globs', 2432, 25, 2432, 30),
woosh.Token(woosh.OP, ':', 2432, 30, 2432, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2432, 31, 2433, 0),
woosh.Token(woosh.INDENT, '        ', 2433, 0, 2433, 8),
woosh.Token(woosh.NAME, 'globs', 2433, 8, 2433, 13),
woosh.Token(woosh.OP, '[', 2433, 13, 2433, 14),
woosh.Token(woosh.STRING, '"__file__"', 2433, 14, 2433, 24),
woosh.Token(woosh.OP, ']', 2433, 24, 2433, 25),
woosh.Token(woosh.OP, '=', 2433, 26, 2433, 27),
woosh.Token(woosh.NAME, 'path', 2433, 28, 2433, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 2433, 32, 2434, 0),
woosh.Token(woosh.COMMENT, '# Find the file and read it.', 2435, 4, 2435, 32),
woosh.Token(woosh.DEDENT, '    ', 2436, 0, 2436, 4),
woosh.Token(woosh.NAME, 'name', 2436, 4, 2436, 8),
woosh.Token(woosh.OP, '=', 2436, 9, 2436, 10),
woosh.Token(woosh.NAME, 'os', 2436, 11, 2436, 13),
woosh.Token(woosh.OP, '.', 2436, 13, 2436, 14),
woosh.Token(woosh.NAME, 'path', 2436, 14, 2436, 18),
woosh.Token(woosh.OP, '.', 2436, 18, 2436, 19),
woosh.Token(woosh.NAME, 'basename', 2436, 19, 2436, 27),
woosh.Token(woosh.OP, '(', 2436, 27, 2436, 28),
woosh.Token(woosh.NAME, 'path', 2436, 28, 2436, 32),
woosh.Token(woosh.OP, ')', 2436, 32, 2436, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 2436, 33, 2437, 0),
woosh.Token(woosh.COMMENT, '# Convert it to a test, and wrap it in a DocFileCase.', 2438, 4, 2438, 57),
woosh.Token(woosh.NAME, 'test', 2439, 4, 2439, 8),
woosh.Token(woosh.OP, '=', 2439, 9, 2439, 10),
woosh.Token(woosh.NAME, 'parser', 2439, 11, 2439, 17),
woosh.Token(woosh.OP, '.', 2439, 17, 2439, 18),
woosh.Token(woosh.NAME, 'get_doctest', 2439, 18, 2439, 29),
woosh.Token(woosh.OP, '(', 2439, 29, 2439, 30),
woosh.Token(woosh.NAME, 'doc', 2439, 30, 2439, 33),
woosh.Token(woosh.OP, ',', 2439, 33, 2439, 34),
woosh.Token(woosh.NAME, 'globs', 2439, 35, 2439, 40),
woosh.Token(woosh.OP, ',', 2439, 40, 2439, 41),
woosh.Token(woosh.NAME, 'name', 2439, 42, 2439, 46),
woosh.Token(woosh.OP, ',', 2439, 46, 2439, 47),
woosh.Token(woosh.NAME, 'path', 2439, 48, 2439, 52),
woosh.Token(woosh.OP, ',', 2439, 52, 2439, 53),
woosh.Token(woosh.NUMBER, '0', 2439, 54, 2439, 55),
woosh.Token(woosh.OP, ')', 2439, 55, 2439, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 2439, 56, 2440, 0),
woosh.Token(woosh.NAME, 'return', 2440, 4, 2440, 10),
woosh.Token(woosh.NAME, 'DocFileCase', 2440, 11, 2440, 22),
woosh.Token(woosh.OP, '(', 2440, 22, 2440, 23),
woosh.Token(woosh.NAME, 'test', 2440, 23, 2440, 27),
woosh.Token(woosh.OP, ',', 2440, 27, 2440, 28),
woosh.Token(woosh.OP, '**', 2440, 29, 2440, 31),
woosh.Token(woosh.NAME, 'options', 2440, 31, 2440, 38),
woosh.Token(woosh.OP, ')', 2440, 38, 2440, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2440, 39, 2441, 0),
woosh.Token(woosh.DEDENT, '', 2442, 0, 2442, 0),
woosh.Token(woosh.NAME, 'def', 2442, 0, 2442, 3),
woosh.Token(woosh.NAME, 'DocFileSuite', 2442, 4, 2442, 16),
woosh.Token(woosh.OP, '(', 2442, 16, 2442, 17),
woosh.Token(woosh.OP, '*', 2442, 17, 2442, 18),
woosh.Token(woosh.NAME, 'paths', 2442, 18, 2442, 23),
woosh.Token(woosh.OP, ',', 2442, 23, 2442, 24),
woosh.Token(woosh.OP, '**', 2442, 25, 2442, 27),
woosh.Token(woosh.NAME, 'kw', 2442, 27, 2442, 29),
woosh.Token(woosh.OP, ')', 2442, 29, 2442, 30),
woosh.Token(woosh.OP, ':', 2442, 30, 2442, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 2442, 31, 2443, 0),
woosh.Token(woosh.INDENT, '    ', 2443, 0, 2443, 4),
woosh.Token(woosh.STRING, '"""A unittest suite for one or more doctest files.\r\n\r\n    The path to each doctest file is given as a string; the\r\n    interpretation of that string depends on the keyword argument\r\n    "module_relative".\r\n\r\n    A number of options may be provided as keyword arguments:\r\n\r\n    module_relative\r\n      If "module_relative" is True, then the given file paths are\r\n      interpreted as os-independent module-relative paths.  By\r\n      default, these paths are relative to the calling module\'s\r\n      directory; but if the "package" argument is specified, then\r\n      they are relative to that package.  To ensure os-independence,\r\n      "filename" should use "/" characters to separate path\r\n      segments, and may not be an absolute path (i.e., it may not\r\n      begin with "/").\r\n\r\n      If "module_relative" is False, then the given file paths are\r\n      interpreted as os-specific paths.  These paths may be absolute\r\n      or relative (to the current working directory).\r\n\r\n    package\r\n      A Python package or the name of a Python package whose directory\r\n      should be used as the base directory for module relative paths.\r\n      If "package" is not specified, then the calling module\'s\r\n      directory is used as the base directory for module relative\r\n      filenames.  It is an error to specify "package" if\r\n      "module_relative" is False.\r\n\r\n    setUp\r\n      A set-up function.  This is called before running the\r\n      tests in each file. The setUp function will be passed a DocTest\r\n      object.  The setUp function can access the test globals as the\r\n      globs attribute of the test passed.\r\n\r\n    tearDown\r\n      A tear-down function.  This is called after running the\r\n      tests in each file.  The tearDown function will be passed a DocTest\r\n      object.  The tearDown function can access the test globals as the\r\n      globs attribute of the test passed.\r\n\r\n    globs\r\n      A dictionary containing initial global variables for the tests.\r\n\r\n    optionflags\r\n      A set of doctest option flags expressed as an integer.\r\n\r\n    parser\r\n      A DocTestParser (or subclass) that should be used to extract\r\n      tests from the files.\r\n\r\n    encoding\r\n      An encoding that will be used to convert the files to unicode.\r\n    """', 2443, 4, 2497, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2497, 7, 2498, 0),
woosh.Token(woosh.NAME, 'suite', 2498, 4, 2498, 9),
woosh.Token(woosh.OP, '=', 2498, 10, 2498, 11),
woosh.Token(woosh.NAME, '_DocTestSuite', 2498, 12, 2498, 25),
woosh.Token(woosh.OP, '(', 2498, 25, 2498, 26),
woosh.Token(woosh.OP, ')', 2498, 26, 2498, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 2498, 27, 2499, 0),
woosh.Token(woosh.COMMENT, '# We do this here so that _normalize_module is called at the right', 2500, 4, 2500, 70),
woosh.Token(woosh.COMMENT, '# level.  If it were called in DocFileTest, then this function', 2501, 4, 2501, 66),
woosh.Token(woosh.COMMENT, '# would be the caller and we might guess the package incorrectly.', 2502, 4, 2502, 69),
woosh.Token(woosh.NAME, 'if', 2503, 4, 2503, 6),
woosh.Token(woosh.NAME, 'kw', 2503, 7, 2503, 9),
woosh.Token(woosh.OP, '.', 2503, 9, 2503, 10),
woosh.Token(woosh.NAME, 'get', 2503, 10, 2503, 13),
woosh.Token(woosh.OP, '(', 2503, 13, 2503, 14),
woosh.Token(woosh.STRING, "'module_relative'", 2503, 14, 2503, 31),
woosh.Token(woosh.OP, ',', 2503, 31, 2503, 32),
woosh.Token(woosh.NAME, 'True', 2503, 33, 2503, 37),
woosh.Token(woosh.OP, ')', 2503, 37, 2503, 38),
woosh.Token(woosh.OP, ':', 2503, 38, 2503, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2503, 39, 2504, 0),
woosh.Token(woosh.INDENT, '        ', 2504, 0, 2504, 8),
woosh.Token(woosh.NAME, 'kw', 2504, 8, 2504, 10),
woosh.Token(woosh.OP, '[', 2504, 10, 2504, 11),
woosh.Token(woosh.STRING, "'package'", 2504, 11, 2504, 20),
woosh.Token(woosh.OP, ']', 2504, 20, 2504, 21),
woosh.Token(woosh.OP, '=', 2504, 22, 2504, 23),
woosh.Token(woosh.NAME, '_normalize_module', 2504, 24, 2504, 41),
woosh.Token(woosh.OP, '(', 2504, 41, 2504, 42),
woosh.Token(woosh.NAME, 'kw', 2504, 42, 2504, 44),
woosh.Token(woosh.OP, '.', 2504, 44, 2504, 45),
woosh.Token(woosh.NAME, 'get', 2504, 45, 2504, 48),
woosh.Token(woosh.OP, '(', 2504, 48, 2504, 49),
woosh.Token(woosh.STRING, "'package'", 2504, 49, 2504, 58),
woosh.Token(woosh.OP, ')', 2504, 58, 2504, 59),
woosh.Token(woosh.OP, ')', 2504, 59, 2504, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 2504, 60, 2505, 0),
woosh.Token(woosh.DEDENT, '    ', 2506, 0, 2506, 4),
woosh.Token(woosh.NAME, 'for', 2506, 4, 2506, 7),
woosh.Token(woosh.NAME, 'path', 2506, 8, 2506, 12),
woosh.Token(woosh.NAME, 'in', 2506, 13, 2506, 15),
woosh.Token(woosh.NAME, 'paths', 2506, 16, 2506, 21),
woosh.Token(woosh.OP, ':', 2506, 21, 2506, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2506, 22, 2507, 0),
woosh.Token(woosh.INDENT, '        ', 2507, 0, 2507, 8),
woosh.Token(woosh.NAME, 'suite', 2507, 8, 2507, 13),
woosh.Token(woosh.OP, '.', 2507, 13, 2507, 14),
woosh.Token(woosh.NAME, 'addTest', 2507, 14, 2507, 21),
woosh.Token(woosh.OP, '(', 2507, 21, 2507, 22),
woosh.Token(woosh.NAME, 'DocFileTest', 2507, 22, 2507, 33),
woosh.Token(woosh.OP, '(', 2507, 33, 2507, 34),
woosh.Token(woosh.NAME, 'path', 2507, 34, 2507, 38),
woosh.Token(woosh.OP, ',', 2507, 38, 2507, 39),
woosh.Token(woosh.OP, '**', 2507, 40, 2507, 42),
woosh.Token(woosh.NAME, 'kw', 2507, 42, 2507, 44),
woosh.Token(woosh.OP, ')', 2507, 44, 2507, 45),
woosh.Token(woosh.OP, ')', 2507, 45, 2507, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 2507, 46, 2508, 0),
woosh.Token(woosh.DEDENT, '    ', 2509, 0, 2509, 4),
woosh.Token(woosh.NAME, 'return', 2509, 4, 2509, 10),
woosh.Token(woosh.NAME, 'suite', 2509, 11, 2509, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2509, 16, 2510, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 2511, 0, 2511, 70),
woosh.Token(woosh.COMMENT, '## 8. Debugging Support', 2512, 0, 2512, 23),
woosh.Token(woosh.COMMENT, '######################################################################', 2513, 0, 2513, 70),
woosh.Token(woosh.DEDENT, '', 2515, 0, 2515, 0),
woosh.Token(woosh.NAME, 'def', 2515, 0, 2515, 3),
woosh.Token(woosh.NAME, 'script_from_examples', 2515, 4, 2515, 24),
woosh.Token(woosh.OP, '(', 2515, 24, 2515, 25),
woosh.Token(woosh.NAME, 's', 2515, 25, 2515, 26),
woosh.Token(woosh.OP, ')', 2515, 26, 2515, 27),
woosh.Token(woosh.OP, ':', 2515, 27, 2515, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2515, 28, 2516, 0),
woosh.Token(woosh.INDENT, '    ', 2516, 0, 2516, 4),
woosh.Token(woosh.STRING, 'r"""Extract script from text with examples.\r\n\r\n       Converts text with examples to a Python script.  Example input is\r\n       converted to regular code.  Example output and all other words\r\n       are converted to comments:\r\n\r\n       >>> text = \'\'\'\r\n       ...       Here are examples of simple math.\r\n       ...\r\n       ...           Python has super accurate integer addition\r\n       ...\r\n       ...           >>> 2 + 2\r\n       ...           5\r\n       ...\r\n       ...           And very friendly error messages:\r\n       ...\r\n       ...           >>> 1/0\r\n       ...           To Infinity\r\n       ...           And\r\n       ...           Beyond\r\n       ...\r\n       ...           You can use logic if you want:\r\n       ...\r\n       ...           >>> if 0:\r\n       ...           ...    blah\r\n       ...           ...    blah\r\n       ...           ...\r\n       ...\r\n       ...           Ho hum\r\n       ...           \'\'\'\r\n\r\n       >>> print(script_from_examples(text))\r\n       # Here are examples of simple math.\r\n       #\r\n       #     Python has super accurate integer addition\r\n       #\r\n       2 + 2\r\n       # Expected:\r\n       ## 5\r\n       #\r\n       #     And very friendly error messages:\r\n       #\r\n       1/0\r\n       # Expected:\r\n       ## To Infinity\r\n       ## And\r\n       ## Beyond\r\n       #\r\n       #     You can use logic if you want:\r\n       #\r\n       if 0:\r\n          blah\r\n          blah\r\n       #\r\n       #     Ho hum\r\n       <BLANKLINE>\r\n       """', 2516, 4, 2572, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 2572, 10, 2573, 0),
woosh.Token(woosh.NAME, 'output', 2573, 4, 2573, 10),
woosh.Token(woosh.OP, '=', 2573, 11, 2573, 12),
woosh.Token(woosh.OP, '[', 2573, 13, 2573, 14),
woosh.Token(woosh.OP, ']', 2573, 14, 2573, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 2573, 15, 2574, 0),
woosh.Token(woosh.NAME, 'for', 2574, 4, 2574, 7),
woosh.Token(woosh.NAME, 'piece', 2574, 8, 2574, 13),
woosh.Token(woosh.NAME, 'in', 2574, 14, 2574, 16),
woosh.Token(woosh.NAME, 'DocTestParser', 2574, 17, 2574, 30),
woosh.Token(woosh.OP, '(', 2574, 30, 2574, 31),
woosh.Token(woosh.OP, ')', 2574, 31, 2574, 32),
woosh.Token(woosh.OP, '.', 2574, 32, 2574, 33),
woosh.Token(woosh.NAME, 'parse', 2574, 33, 2574, 38),
woosh.Token(woosh.OP, '(', 2574, 38, 2574, 39),
woosh.Token(woosh.NAME, 's', 2574, 39, 2574, 40),
woosh.Token(woosh.OP, ')', 2574, 40, 2574, 41),
woosh.Token(woosh.OP, ':', 2574, 41, 2574, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 2574, 42, 2575, 0),
woosh.Token(woosh.INDENT, '        ', 2575, 0, 2575, 8),
woosh.Token(woosh.NAME, 'if', 2575, 8, 2575, 10),
woosh.Token(woosh.NAME, 'isinstance', 2575, 11, 2575, 21),
woosh.Token(woosh.OP, '(', 2575, 21, 2575, 22),
woosh.Token(woosh.NAME, 'piece', 2575, 22, 2575, 27),
woosh.Token(woosh.OP, ',', 2575, 27, 2575, 28),
woosh.Token(woosh.NAME, 'Example', 2575, 29, 2575, 36),
woosh.Token(woosh.OP, ')', 2575, 36, 2575, 37),
woosh.Token(woosh.OP, ':', 2575, 37, 2575, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2575, 38, 2576, 0),
woosh.Token(woosh.COMMENT, "# Add the example's source code (strip trailing NL)", 2576, 12, 2576, 63),
woosh.Token(woosh.INDENT, '            ', 2577, 0, 2577, 12),
woosh.Token(woosh.NAME, 'output', 2577, 12, 2577, 18),
woosh.Token(woosh.OP, '.', 2577, 18, 2577, 19),
woosh.Token(woosh.NAME, 'append', 2577, 19, 2577, 25),
woosh.Token(woosh.OP, '(', 2577, 25, 2577, 26),
woosh.Token(woosh.NAME, 'piece', 2577, 26, 2577, 31),
woosh.Token(woosh.OP, '.', 2577, 31, 2577, 32),
woosh.Token(woosh.NAME, 'source', 2577, 32, 2577, 38),
woosh.Token(woosh.OP, '[', 2577, 38, 2577, 39),
woosh.Token(woosh.OP, ':', 2577, 39, 2577, 40),
woosh.Token(woosh.OP, '-', 2577, 40, 2577, 41),
woosh.Token(woosh.NUMBER, '1', 2577, 41, 2577, 42),
woosh.Token(woosh.OP, ']', 2577, 42, 2577, 43),
woosh.Token(woosh.OP, ')', 2577, 43, 2577, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 2577, 44, 2578, 0),
woosh.Token(woosh.COMMENT, '# Add the expected output:', 2578, 12, 2578, 38),
woosh.Token(woosh.NAME, 'want', 2579, 12, 2579, 16),
woosh.Token(woosh.OP, '=', 2579, 17, 2579, 18),
woosh.Token(woosh.NAME, 'piece', 2579, 19, 2579, 24),
woosh.Token(woosh.OP, '.', 2579, 24, 2579, 25),
woosh.Token(woosh.NAME, 'want', 2579, 25, 2579, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2579, 29, 2580, 0),
woosh.Token(woosh.NAME, 'if', 2580, 12, 2580, 14),
woosh.Token(woosh.NAME, 'want', 2580, 15, 2580, 19),
woosh.Token(woosh.OP, ':', 2580, 19, 2580, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2580, 20, 2581, 0),
woosh.Token(woosh.INDENT, '                ', 2581, 0, 2581, 16),
woosh.Token(woosh.NAME, 'output', 2581, 16, 2581, 22),
woosh.Token(woosh.OP, '.', 2581, 22, 2581, 23),
woosh.Token(woosh.NAME, 'append', 2581, 23, 2581, 29),
woosh.Token(woosh.OP, '(', 2581, 29, 2581, 30),
woosh.Token(woosh.STRING, "'# Expected:'", 2581, 30, 2581, 43),
woosh.Token(woosh.OP, ')', 2581, 43, 2581, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 2581, 44, 2582, 0),
woosh.Token(woosh.NAME, 'output', 2582, 16, 2582, 22),
woosh.Token(woosh.OP, '+=', 2582, 23, 2582, 25),
woosh.Token(woosh.OP, '[', 2582, 26, 2582, 27),
woosh.Token(woosh.STRING, "'## '", 2582, 27, 2582, 32),
woosh.Token(woosh.OP, '+', 2582, 32, 2582, 33),
woosh.Token(woosh.NAME, 'l', 2582, 33, 2582, 34),
woosh.Token(woosh.NAME, 'for', 2582, 35, 2582, 38),
woosh.Token(woosh.NAME, 'l', 2582, 39, 2582, 40),
woosh.Token(woosh.NAME, 'in', 2582, 41, 2582, 43),
woosh.Token(woosh.NAME, 'want', 2582, 44, 2582, 48),
woosh.Token(woosh.OP, '.', 2582, 48, 2582, 49),
woosh.Token(woosh.NAME, 'split', 2582, 49, 2582, 54),
woosh.Token(woosh.OP, '(', 2582, 54, 2582, 55),
woosh.Token(woosh.STRING, "'\\n'", 2582, 55, 2582, 59),
woosh.Token(woosh.OP, ')', 2582, 59, 2582, 60),
woosh.Token(woosh.OP, '[', 2582, 60, 2582, 61),
woosh.Token(woosh.OP, ':', 2582, 61, 2582, 62),
woosh.Token(woosh.OP, '-', 2582, 62, 2582, 63),
woosh.Token(woosh.NUMBER, '1', 2582, 63, 2582, 64),
woosh.Token(woosh.OP, ']', 2582, 64, 2582, 65),
woosh.Token(woosh.OP, ']', 2582, 65, 2582, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 2582, 66, 2583, 0),
woosh.Token(woosh.DEDENT, '        ', 2583, 0, 2583, 8),
woosh.Token(woosh.DEDENT, '', 2583, 8, 2583, 8),
woosh.Token(woosh.NAME, 'else', 2583, 8, 2583, 12),
woosh.Token(woosh.OP, ':', 2583, 12, 2583, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2583, 13, 2584, 0),
woosh.Token(woosh.COMMENT, '# Add non-example text.', 2584, 12, 2584, 35),
woosh.Token(woosh.INDENT, '            ', 2585, 0, 2585, 12),
woosh.Token(woosh.NAME, 'output', 2585, 12, 2585, 18),
woosh.Token(woosh.OP, '+=', 2585, 19, 2585, 21),
woosh.Token(woosh.OP, '[', 2585, 22, 2585, 23),
woosh.Token(woosh.NAME, '_comment_line', 2585, 23, 2585, 36),
woosh.Token(woosh.OP, '(', 2585, 36, 2585, 37),
woosh.Token(woosh.NAME, 'l', 2585, 37, 2585, 38),
woosh.Token(woosh.OP, ')', 2585, 38, 2585, 39),
woosh.Token(woosh.NAME, 'for', 2586, 23, 2586, 26),
woosh.Token(woosh.NAME, 'l', 2586, 27, 2586, 28),
woosh.Token(woosh.NAME, 'in', 2586, 29, 2586, 31),
woosh.Token(woosh.NAME, 'piece', 2586, 32, 2586, 37),
woosh.Token(woosh.OP, '.', 2586, 37, 2586, 38),
woosh.Token(woosh.NAME, 'split', 2586, 38, 2586, 43),
woosh.Token(woosh.OP, '(', 2586, 43, 2586, 44),
woosh.Token(woosh.STRING, "'\\n'", 2586, 44, 2586, 48),
woosh.Token(woosh.OP, ')', 2586, 48, 2586, 49),
woosh.Token(woosh.OP, '[', 2586, 49, 2586, 50),
woosh.Token(woosh.OP, ':', 2586, 50, 2586, 51),
woosh.Token(woosh.OP, '-', 2586, 51, 2586, 52),
woosh.Token(woosh.NUMBER, '1', 2586, 52, 2586, 53),
woosh.Token(woosh.OP, ']', 2586, 53, 2586, 54),
woosh.Token(woosh.OP, ']', 2586, 54, 2586, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 2586, 55, 2587, 0),
woosh.Token(woosh.COMMENT, '# Trim junk on both ends.', 2588, 4, 2588, 29),
woosh.Token(woosh.DEDENT, '    ', 2589, 0, 2589, 4),
woosh.Token(woosh.DEDENT, '', 2589, 4, 2589, 4),
woosh.Token(woosh.NAME, 'while', 2589, 4, 2589, 9),
woosh.Token(woosh.NAME, 'output', 2589, 10, 2589, 16),
woosh.Token(woosh.NAME, 'and', 2589, 17, 2589, 20),
woosh.Token(woosh.NAME, 'output', 2589, 21, 2589, 27),
woosh.Token(woosh.OP, '[', 2589, 27, 2589, 28),
woosh.Token(woosh.OP, '-', 2589, 28, 2589, 29),
woosh.Token(woosh.NUMBER, '1', 2589, 29, 2589, 30),
woosh.Token(woosh.OP, ']', 2589, 30, 2589, 31),
woosh.Token(woosh.OP, '==', 2589, 32, 2589, 34),
woosh.Token(woosh.STRING, "'#'", 2589, 35, 2589, 38),
woosh.Token(woosh.OP, ':', 2589, 38, 2589, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2589, 39, 2590, 0),
woosh.Token(woosh.INDENT, '        ', 2590, 0, 2590, 8),
woosh.Token(woosh.NAME, 'output', 2590, 8, 2590, 14),
woosh.Token(woosh.OP, '.', 2590, 14, 2590, 15),
woosh.Token(woosh.NAME, 'pop', 2590, 15, 2590, 18),
woosh.Token(woosh.OP, '(', 2590, 18, 2590, 19),
woosh.Token(woosh.OP, ')', 2590, 19, 2590, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2590, 20, 2591, 0),
woosh.Token(woosh.DEDENT, '    ', 2591, 0, 2591, 4),
woosh.Token(woosh.NAME, 'while', 2591, 4, 2591, 9),
woosh.Token(woosh.NAME, 'output', 2591, 10, 2591, 16),
woosh.Token(woosh.NAME, 'and', 2591, 17, 2591, 20),
woosh.Token(woosh.NAME, 'output', 2591, 21, 2591, 27),
woosh.Token(woosh.OP, '[', 2591, 27, 2591, 28),
woosh.Token(woosh.NUMBER, '0', 2591, 28, 2591, 29),
woosh.Token(woosh.OP, ']', 2591, 29, 2591, 30),
woosh.Token(woosh.OP, '==', 2591, 31, 2591, 33),
woosh.Token(woosh.STRING, "'#'", 2591, 34, 2591, 37),
woosh.Token(woosh.OP, ':', 2591, 37, 2591, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2591, 38, 2592, 0),
woosh.Token(woosh.INDENT, '        ', 2592, 0, 2592, 8),
woosh.Token(woosh.NAME, 'output', 2592, 8, 2592, 14),
woosh.Token(woosh.OP, '.', 2592, 14, 2592, 15),
woosh.Token(woosh.NAME, 'pop', 2592, 15, 2592, 18),
woosh.Token(woosh.OP, '(', 2592, 18, 2592, 19),
woosh.Token(woosh.NUMBER, '0', 2592, 19, 2592, 20),
woosh.Token(woosh.OP, ')', 2592, 20, 2592, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2592, 21, 2593, 0),
woosh.Token(woosh.COMMENT, '# Combine the output, and return it.', 2593, 4, 2593, 40),
woosh.Token(woosh.COMMENT, '# Add a courtesy newline to prevent exec from choking (see bug #1172785)', 2594, 4, 2594, 76),
woosh.Token(woosh.DEDENT, '    ', 2595, 0, 2595, 4),
woosh.Token(woosh.NAME, 'return', 2595, 4, 2595, 10),
woosh.Token(woosh.STRING, "'\\n'", 2595, 11, 2595, 15),
woosh.Token(woosh.OP, '.', 2595, 15, 2595, 16),
woosh.Token(woosh.NAME, 'join', 2595, 16, 2595, 20),
woosh.Token(woosh.OP, '(', 2595, 20, 2595, 21),
woosh.Token(woosh.NAME, 'output', 2595, 21, 2595, 27),
woosh.Token(woosh.OP, ')', 2595, 27, 2595, 28),
woosh.Token(woosh.OP, '+', 2595, 29, 2595, 30),
woosh.Token(woosh.STRING, "'\\n'", 2595, 31, 2595, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2595, 35, 2596, 0),
woosh.Token(woosh.DEDENT, '', 2597, 0, 2597, 0),
woosh.Token(woosh.NAME, 'def', 2597, 0, 2597, 3),
woosh.Token(woosh.NAME, 'testsource', 2597, 4, 2597, 14),
woosh.Token(woosh.OP, '(', 2597, 14, 2597, 15),
woosh.Token(woosh.NAME, 'module', 2597, 15, 2597, 21),
woosh.Token(woosh.OP, ',', 2597, 21, 2597, 22),
woosh.Token(woosh.NAME, 'name', 2597, 23, 2597, 27),
woosh.Token(woosh.OP, ')', 2597, 27, 2597, 28),
woosh.Token(woosh.OP, ':', 2597, 28, 2597, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 2597, 29, 2598, 0),
woosh.Token(woosh.INDENT, '    ', 2598, 0, 2598, 4),
woosh.Token(woosh.STRING, '"""Extract the test sources from a doctest docstring as a script.\r\n\r\n    Provide the module (or dotted name of the module) containing the\r\n    test to be debugged and the name (within the module) of the object\r\n    with the doc string with tests to be debugged.\r\n    """', 2598, 4, 2603, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2603, 7, 2604, 0),
woosh.Token(woosh.NAME, 'module', 2604, 4, 2604, 10),
woosh.Token(woosh.OP, '=', 2604, 11, 2604, 12),
woosh.Token(woosh.NAME, '_normalize_module', 2604, 13, 2604, 30),
woosh.Token(woosh.OP, '(', 2604, 30, 2604, 31),
woosh.Token(woosh.NAME, 'module', 2604, 31, 2604, 37),
woosh.Token(woosh.OP, ')', 2604, 37, 2604, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2604, 38, 2605, 0),
woosh.Token(woosh.NAME, 'tests', 2605, 4, 2605, 9),
woosh.Token(woosh.OP, '=', 2605, 10, 2605, 11),
woosh.Token(woosh.NAME, 'DocTestFinder', 2605, 12, 2605, 25),
woosh.Token(woosh.OP, '(', 2605, 25, 2605, 26),
woosh.Token(woosh.OP, ')', 2605, 26, 2605, 27),
woosh.Token(woosh.OP, '.', 2605, 27, 2605, 28),
woosh.Token(woosh.NAME, 'find', 2605, 28, 2605, 32),
woosh.Token(woosh.OP, '(', 2605, 32, 2605, 33),
woosh.Token(woosh.NAME, 'module', 2605, 33, 2605, 39),
woosh.Token(woosh.OP, ')', 2605, 39, 2605, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 2605, 40, 2606, 0),
woosh.Token(woosh.NAME, 'test', 2606, 4, 2606, 8),
woosh.Token(woosh.OP, '=', 2606, 9, 2606, 10),
woosh.Token(woosh.OP, '[', 2606, 11, 2606, 12),
woosh.Token(woosh.NAME, 't', 2606, 12, 2606, 13),
woosh.Token(woosh.NAME, 'for', 2606, 14, 2606, 17),
woosh.Token(woosh.NAME, 't', 2606, 18, 2606, 19),
woosh.Token(woosh.NAME, 'in', 2606, 20, 2606, 22),
woosh.Token(woosh.NAME, 'tests', 2606, 23, 2606, 28),
woosh.Token(woosh.NAME, 'if', 2606, 29, 2606, 31),
woosh.Token(woosh.NAME, 't', 2606, 32, 2606, 33),
woosh.Token(woosh.OP, '.', 2606, 33, 2606, 34),
woosh.Token(woosh.NAME, 'name', 2606, 34, 2606, 38),
woosh.Token(woosh.OP, '==', 2606, 39, 2606, 41),
woosh.Token(woosh.NAME, 'name', 2606, 42, 2606, 46),
woosh.Token(woosh.OP, ']', 2606, 46, 2606, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 2606, 47, 2607, 0),
woosh.Token(woosh.NAME, 'if', 2607, 4, 2607, 6),
woosh.Token(woosh.NAME, 'not', 2607, 7, 2607, 10),
woosh.Token(woosh.NAME, 'test', 2607, 11, 2607, 15),
woosh.Token(woosh.OP, ':', 2607, 15, 2607, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2607, 16, 2608, 0),
woosh.Token(woosh.INDENT, '        ', 2608, 0, 2608, 8),
woosh.Token(woosh.NAME, 'raise', 2608, 8, 2608, 13),
woosh.Token(woosh.NAME, 'ValueError', 2608, 14, 2608, 24),
woosh.Token(woosh.OP, '(', 2608, 24, 2608, 25),
woosh.Token(woosh.NAME, 'name', 2608, 25, 2608, 29),
woosh.Token(woosh.OP, ',', 2608, 29, 2608, 30),
woosh.Token(woosh.STRING, '"not found in tests"', 2608, 31, 2608, 51),
woosh.Token(woosh.OP, ')', 2608, 51, 2608, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 2608, 52, 2609, 0),
woosh.Token(woosh.DEDENT, '    ', 2609, 0, 2609, 4),
woosh.Token(woosh.NAME, 'test', 2609, 4, 2609, 8),
woosh.Token(woosh.OP, '=', 2609, 9, 2609, 10),
woosh.Token(woosh.NAME, 'test', 2609, 11, 2609, 15),
woosh.Token(woosh.OP, '[', 2609, 15, 2609, 16),
woosh.Token(woosh.NUMBER, '0', 2609, 16, 2609, 17),
woosh.Token(woosh.OP, ']', 2609, 17, 2609, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2609, 18, 2610, 0),
woosh.Token(woosh.NAME, 'testsrc', 2610, 4, 2610, 11),
woosh.Token(woosh.OP, '=', 2610, 12, 2610, 13),
woosh.Token(woosh.NAME, 'script_from_examples', 2610, 14, 2610, 34),
woosh.Token(woosh.OP, '(', 2610, 34, 2610, 35),
woosh.Token(woosh.NAME, 'test', 2610, 35, 2610, 39),
woosh.Token(woosh.OP, '.', 2610, 39, 2610, 40),
woosh.Token(woosh.NAME, 'docstring', 2610, 40, 2610, 49),
woosh.Token(woosh.OP, ')', 2610, 49, 2610, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 2610, 50, 2611, 0),
woosh.Token(woosh.NAME, 'return', 2611, 4, 2611, 10),
woosh.Token(woosh.NAME, 'testsrc', 2611, 11, 2611, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2611, 18, 2612, 0),
woosh.Token(woosh.DEDENT, '', 2613, 0, 2613, 0),
woosh.Token(woosh.NAME, 'def', 2613, 0, 2613, 3),
woosh.Token(woosh.NAME, 'debug_src', 2613, 4, 2613, 13),
woosh.Token(woosh.OP, '(', 2613, 13, 2613, 14),
woosh.Token(woosh.NAME, 'src', 2613, 14, 2613, 17),
woosh.Token(woosh.OP, ',', 2613, 17, 2613, 18),
woosh.Token(woosh.NAME, 'pm', 2613, 19, 2613, 21),
woosh.Token(woosh.OP, '=', 2613, 21, 2613, 22),
woosh.Token(woosh.NAME, 'False', 2613, 22, 2613, 27),
woosh.Token(woosh.OP, ',', 2613, 27, 2613, 28),
woosh.Token(woosh.NAME, 'globs', 2613, 29, 2613, 34),
woosh.Token(woosh.OP, '=', 2613, 34, 2613, 35),
woosh.Token(woosh.NAME, 'None', 2613, 35, 2613, 39),
woosh.Token(woosh.OP, ')', 2613, 39, 2613, 40),
woosh.Token(woosh.OP, ':', 2613, 40, 2613, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 2613, 41, 2614, 0),
woosh.Token(woosh.INDENT, '    ', 2614, 0, 2614, 4),
woosh.Token(woosh.STRING, '"""Debug a single doctest docstring, in argument `src`\'"""', 2614, 4, 2614, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 2614, 62, 2615, 0),
woosh.Token(woosh.NAME, 'testsrc', 2615, 4, 2615, 11),
woosh.Token(woosh.OP, '=', 2615, 12, 2615, 13),
woosh.Token(woosh.NAME, 'script_from_examples', 2615, 14, 2615, 34),
woosh.Token(woosh.OP, '(', 2615, 34, 2615, 35),
woosh.Token(woosh.NAME, 'src', 2615, 35, 2615, 38),
woosh.Token(woosh.OP, ')', 2615, 38, 2615, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2615, 39, 2616, 0),
woosh.Token(woosh.NAME, 'debug_script', 2616, 4, 2616, 16),
woosh.Token(woosh.OP, '(', 2616, 16, 2616, 17),
woosh.Token(woosh.NAME, 'testsrc', 2616, 17, 2616, 24),
woosh.Token(woosh.OP, ',', 2616, 24, 2616, 25),
woosh.Token(woosh.NAME, 'pm', 2616, 26, 2616, 28),
woosh.Token(woosh.OP, ',', 2616, 28, 2616, 29),
woosh.Token(woosh.NAME, 'globs', 2616, 30, 2616, 35),
woosh.Token(woosh.OP, ')', 2616, 35, 2616, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2616, 36, 2617, 0),
woosh.Token(woosh.DEDENT, '', 2618, 0, 2618, 0),
woosh.Token(woosh.NAME, 'def', 2618, 0, 2618, 3),
woosh.Token(woosh.NAME, 'debug_script', 2618, 4, 2618, 16),
woosh.Token(woosh.OP, '(', 2618, 16, 2618, 17),
woosh.Token(woosh.NAME, 'src', 2618, 17, 2618, 20),
woosh.Token(woosh.OP, ',', 2618, 20, 2618, 21),
woosh.Token(woosh.NAME, 'pm', 2618, 22, 2618, 24),
woosh.Token(woosh.OP, '=', 2618, 24, 2618, 25),
woosh.Token(woosh.NAME, 'False', 2618, 25, 2618, 30),
woosh.Token(woosh.OP, ',', 2618, 30, 2618, 31),
woosh.Token(woosh.NAME, 'globs', 2618, 32, 2618, 37),
woosh.Token(woosh.OP, '=', 2618, 37, 2618, 38),
woosh.Token(woosh.NAME, 'None', 2618, 38, 2618, 42),
woosh.Token(woosh.OP, ')', 2618, 42, 2618, 43),
woosh.Token(woosh.OP, ':', 2618, 43, 2618, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 2618, 44, 2619, 0),
woosh.Token(woosh.INDENT, '    ', 2619, 0, 2619, 4),
woosh.Token(woosh.STRING, '"Debug a test script.  `src` is the script, as a string."', 2619, 4, 2619, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 2619, 61, 2620, 0),
woosh.Token(woosh.NAME, 'import', 2620, 4, 2620, 10),
woosh.Token(woosh.NAME, 'pdb', 2620, 11, 2620, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 2620, 14, 2621, 0),
woosh.Token(woosh.NAME, 'if', 2622, 4, 2622, 6),
woosh.Token(woosh.NAME, 'globs', 2622, 7, 2622, 12),
woosh.Token(woosh.OP, ':', 2622, 12, 2622, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2622, 13, 2623, 0),
woosh.Token(woosh.INDENT, '        ', 2623, 0, 2623, 8),
woosh.Token(woosh.NAME, 'globs', 2623, 8, 2623, 13),
woosh.Token(woosh.OP, '=', 2623, 14, 2623, 15),
woosh.Token(woosh.NAME, 'globs', 2623, 16, 2623, 21),
woosh.Token(woosh.OP, '.', 2623, 21, 2623, 22),
woosh.Token(woosh.NAME, 'copy', 2623, 22, 2623, 26),
woosh.Token(woosh.OP, '(', 2623, 26, 2623, 27),
woosh.Token(woosh.OP, ')', 2623, 27, 2623, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2623, 28, 2624, 0),
woosh.Token(woosh.DEDENT, '    ', 2624, 0, 2624, 4),
woosh.Token(woosh.NAME, 'else', 2624, 4, 2624, 8),
woosh.Token(woosh.OP, ':', 2624, 8, 2624, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2624, 9, 2625, 0),
woosh.Token(woosh.INDENT, '        ', 2625, 0, 2625, 8),
woosh.Token(woosh.NAME, 'globs', 2625, 8, 2625, 13),
woosh.Token(woosh.OP, '=', 2625, 14, 2625, 15),
woosh.Token(woosh.OP, '{', 2625, 16, 2625, 17),
woosh.Token(woosh.OP, '}', 2625, 17, 2625, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2625, 18, 2626, 0),
woosh.Token(woosh.DEDENT, '    ', 2627, 0, 2627, 4),
woosh.Token(woosh.NAME, 'if', 2627, 4, 2627, 6),
woosh.Token(woosh.NAME, 'pm', 2627, 7, 2627, 9),
woosh.Token(woosh.OP, ':', 2627, 9, 2627, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 2627, 10, 2628, 0),
woosh.Token(woosh.INDENT, '        ', 2628, 0, 2628, 8),
woosh.Token(woosh.NAME, 'try', 2628, 8, 2628, 11),
woosh.Token(woosh.OP, ':', 2628, 11, 2628, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2628, 12, 2629, 0),
woosh.Token(woosh.INDENT, '            ', 2629, 0, 2629, 12),
woosh.Token(woosh.NAME, 'exec', 2629, 12, 2629, 16),
woosh.Token(woosh.OP, '(', 2629, 16, 2629, 17),
woosh.Token(woosh.NAME, 'src', 2629, 17, 2629, 20),
woosh.Token(woosh.OP, ',', 2629, 20, 2629, 21),
woosh.Token(woosh.NAME, 'globs', 2629, 22, 2629, 27),
woosh.Token(woosh.OP, ',', 2629, 27, 2629, 28),
woosh.Token(woosh.NAME, 'globs', 2629, 29, 2629, 34),
woosh.Token(woosh.OP, ')', 2629, 34, 2629, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 2629, 35, 2630, 0),
woosh.Token(woosh.DEDENT, '        ', 2630, 0, 2630, 8),
woosh.Token(woosh.NAME, 'except', 2630, 8, 2630, 14),
woosh.Token(woosh.OP, ':', 2630, 14, 2630, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 2630, 15, 2631, 0),
woosh.Token(woosh.INDENT, '            ', 2631, 0, 2631, 12),
woosh.Token(woosh.NAME, 'print', 2631, 12, 2631, 17),
woosh.Token(woosh.OP, '(', 2631, 17, 2631, 18),
woosh.Token(woosh.NAME, 'sys', 2631, 18, 2631, 21),
woosh.Token(woosh.OP, '.', 2631, 21, 2631, 22),
woosh.Token(woosh.NAME, 'exc_info', 2631, 22, 2631, 30),
woosh.Token(woosh.OP, '(', 2631, 30, 2631, 31),
woosh.Token(woosh.OP, ')', 2631, 31, 2631, 32),
woosh.Token(woosh.OP, '[', 2631, 32, 2631, 33),
woosh.Token(woosh.NUMBER, '1', 2631, 33, 2631, 34),
woosh.Token(woosh.OP, ']', 2631, 34, 2631, 35),
woosh.Token(woosh.OP, ')', 2631, 35, 2631, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2631, 36, 2632, 0),
woosh.Token(woosh.NAME, 'p', 2632, 12, 2632, 13),
woosh.Token(woosh.OP, '=', 2632, 14, 2632, 15),
woosh.Token(woosh.NAME, 'pdb', 2632, 16, 2632, 19),
woosh.Token(woosh.OP, '.', 2632, 19, 2632, 20),
woosh.Token(woosh.NAME, 'Pdb', 2632, 20, 2632, 23),
woosh.Token(woosh.OP, '(', 2632, 23, 2632, 24),
woosh.Token(woosh.NAME, 'nosigint', 2632, 24, 2632, 32),
woosh.Token(woosh.OP, '=', 2632, 32, 2632, 33),
woosh.Token(woosh.NAME, 'True', 2632, 33, 2632, 37),
woosh.Token(woosh.OP, ')', 2632, 37, 2632, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2632, 38, 2633, 0),
woosh.Token(woosh.NAME, 'p', 2633, 12, 2633, 13),
woosh.Token(woosh.OP, '.', 2633, 13, 2633, 14),
woosh.Token(woosh.NAME, 'reset', 2633, 14, 2633, 19),
woosh.Token(woosh.OP, '(', 2633, 19, 2633, 20),
woosh.Token(woosh.OP, ')', 2633, 20, 2633, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2633, 21, 2634, 0),
woosh.Token(woosh.NAME, 'p', 2634, 12, 2634, 13),
woosh.Token(woosh.OP, '.', 2634, 13, 2634, 14),
woosh.Token(woosh.NAME, 'interaction', 2634, 14, 2634, 25),
woosh.Token(woosh.OP, '(', 2634, 25, 2634, 26),
woosh.Token(woosh.NAME, 'None', 2634, 26, 2634, 30),
woosh.Token(woosh.OP, ',', 2634, 30, 2634, 31),
woosh.Token(woosh.NAME, 'sys', 2634, 32, 2634, 35),
woosh.Token(woosh.OP, '.', 2634, 35, 2634, 36),
woosh.Token(woosh.NAME, 'exc_info', 2634, 36, 2634, 44),
woosh.Token(woosh.OP, '(', 2634, 44, 2634, 45),
woosh.Token(woosh.OP, ')', 2634, 45, 2634, 46),
woosh.Token(woosh.OP, '[', 2634, 46, 2634, 47),
woosh.Token(woosh.NUMBER, '2', 2634, 47, 2634, 48),
woosh.Token(woosh.OP, ']', 2634, 48, 2634, 49),
woosh.Token(woosh.OP, ')', 2634, 49, 2634, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 2634, 50, 2635, 0),
woosh.Token(woosh.DEDENT, '    ', 2635, 0, 2635, 4),
woosh.Token(woosh.DEDENT, '', 2635, 4, 2635, 4),
woosh.Token(woosh.NAME, 'else', 2635, 4, 2635, 8),
woosh.Token(woosh.OP, ':', 2635, 8, 2635, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 2635, 9, 2636, 0),
woosh.Token(woosh.INDENT, '        ', 2636, 0, 2636, 8),
woosh.Token(woosh.NAME, 'pdb', 2636, 8, 2636, 11),
woosh.Token(woosh.OP, '.', 2636, 11, 2636, 12),
woosh.Token(woosh.NAME, 'Pdb', 2636, 12, 2636, 15),
woosh.Token(woosh.OP, '(', 2636, 15, 2636, 16),
woosh.Token(woosh.NAME, 'nosigint', 2636, 16, 2636, 24),
woosh.Token(woosh.OP, '=', 2636, 24, 2636, 25),
woosh.Token(woosh.NAME, 'True', 2636, 25, 2636, 29),
woosh.Token(woosh.OP, ')', 2636, 29, 2636, 30),
woosh.Token(woosh.OP, '.', 2636, 30, 2636, 31),
woosh.Token(woosh.NAME, 'run', 2636, 31, 2636, 34),
woosh.Token(woosh.OP, '(', 2636, 34, 2636, 35),
woosh.Token(woosh.STRING, '"exec(%r)"', 2636, 35, 2636, 45),
woosh.Token(woosh.OP, '%', 2636, 46, 2636, 47),
woosh.Token(woosh.NAME, 'src', 2636, 48, 2636, 51),
woosh.Token(woosh.OP, ',', 2636, 51, 2636, 52),
woosh.Token(woosh.NAME, 'globs', 2636, 53, 2636, 58),
woosh.Token(woosh.OP, ',', 2636, 58, 2636, 59),
woosh.Token(woosh.NAME, 'globs', 2636, 60, 2636, 65),
woosh.Token(woosh.OP, ')', 2636, 65, 2636, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 2636, 66, 2637, 0),
woosh.Token(woosh.DEDENT, '', 2638, 0, 2638, 0),
woosh.Token(woosh.DEDENT, '', 2638, 0, 2638, 0),
woosh.Token(woosh.NAME, 'def', 2638, 0, 2638, 3),
woosh.Token(woosh.NAME, 'debug', 2638, 4, 2638, 9),
woosh.Token(woosh.OP, '(', 2638, 9, 2638, 10),
woosh.Token(woosh.NAME, 'module', 2638, 10, 2638, 16),
woosh.Token(woosh.OP, ',', 2638, 16, 2638, 17),
woosh.Token(woosh.NAME, 'name', 2638, 18, 2638, 22),
woosh.Token(woosh.OP, ',', 2638, 22, 2638, 23),
woosh.Token(woosh.NAME, 'pm', 2638, 24, 2638, 26),
woosh.Token(woosh.OP, '=', 2638, 26, 2638, 27),
woosh.Token(woosh.NAME, 'False', 2638, 27, 2638, 32),
woosh.Token(woosh.OP, ')', 2638, 32, 2638, 33),
woosh.Token(woosh.OP, ':', 2638, 33, 2638, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 2638, 34, 2639, 0),
woosh.Token(woosh.INDENT, '    ', 2639, 0, 2639, 4),
woosh.Token(woosh.STRING, '"""Debug a single doctest docstring.\r\n\r\n    Provide the module (or dotted name of the module) containing the\r\n    test to be debugged and the name (within the module) of the object\r\n    with the docstring with tests to be debugged.\r\n    """', 2639, 4, 2644, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2644, 7, 2645, 0),
woosh.Token(woosh.NAME, 'module', 2645, 4, 2645, 10),
woosh.Token(woosh.OP, '=', 2645, 11, 2645, 12),
woosh.Token(woosh.NAME, '_normalize_module', 2645, 13, 2645, 30),
woosh.Token(woosh.OP, '(', 2645, 30, 2645, 31),
woosh.Token(woosh.NAME, 'module', 2645, 31, 2645, 37),
woosh.Token(woosh.OP, ')', 2645, 37, 2645, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2645, 38, 2646, 0),
woosh.Token(woosh.NAME, 'testsrc', 2646, 4, 2646, 11),
woosh.Token(woosh.OP, '=', 2646, 12, 2646, 13),
woosh.Token(woosh.NAME, 'testsource', 2646, 14, 2646, 24),
woosh.Token(woosh.OP, '(', 2646, 24, 2646, 25),
woosh.Token(woosh.NAME, 'module', 2646, 25, 2646, 31),
woosh.Token(woosh.OP, ',', 2646, 31, 2646, 32),
woosh.Token(woosh.NAME, 'name', 2646, 33, 2646, 37),
woosh.Token(woosh.OP, ')', 2646, 37, 2646, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 2646, 38, 2647, 0),
woosh.Token(woosh.NAME, 'debug_script', 2647, 4, 2647, 16),
woosh.Token(woosh.OP, '(', 2647, 16, 2647, 17),
woosh.Token(woosh.NAME, 'testsrc', 2647, 17, 2647, 24),
woosh.Token(woosh.OP, ',', 2647, 24, 2647, 25),
woosh.Token(woosh.NAME, 'pm', 2647, 26, 2647, 28),
woosh.Token(woosh.OP, ',', 2647, 28, 2647, 29),
woosh.Token(woosh.NAME, 'module', 2647, 30, 2647, 36),
woosh.Token(woosh.OP, '.', 2647, 36, 2647, 37),
woosh.Token(woosh.NAME, '__dict__', 2647, 37, 2647, 45),
woosh.Token(woosh.OP, ')', 2647, 45, 2647, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 2647, 46, 2648, 0),
woosh.Token(woosh.COMMENT, '######################################################################', 2649, 0, 2649, 70),
woosh.Token(woosh.COMMENT, '## 9. Example Usage', 2650, 0, 2650, 19),
woosh.Token(woosh.COMMENT, '######################################################################', 2651, 0, 2651, 70),
woosh.Token(woosh.DEDENT, '', 2652, 0, 2652, 0),
woosh.Token(woosh.NAME, 'class', 2652, 0, 2652, 5),
woosh.Token(woosh.NAME, '_TestClass', 2652, 6, 2652, 16),
woosh.Token(woosh.OP, ':', 2652, 16, 2652, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 2652, 17, 2653, 0),
woosh.Token(woosh.INDENT, '    ', 2653, 0, 2653, 4),
woosh.Token(woosh.STRING, '"""\r\n    A pointless class, for sanity-checking of docstring testing.\r\n\r\n    Methods:\r\n        square()\r\n        get()\r\n\r\n    >>> _TestClass(13).get() + _TestClass(-12).get()\r\n    1\r\n    >>> hex(_TestClass(13).square().get())\r\n    \'0xa9\'\r\n    """', 2653, 4, 2664, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 2664, 7, 2665, 0),
woosh.Token(woosh.NAME, 'def', 2666, 4, 2666, 7),
woosh.Token(woosh.NAME, '__init__', 2666, 8, 2666, 16),
woosh.Token(woosh.OP, '(', 2666, 16, 2666, 17),
woosh.Token(woosh.NAME, 'self', 2666, 17, 2666, 21),
woosh.Token(woosh.OP, ',', 2666, 21, 2666, 22),
woosh.Token(woosh.NAME, 'val', 2666, 23, 2666, 26),
woosh.Token(woosh.OP, ')', 2666, 26, 2666, 27),
woosh.Token(woosh.OP, ':', 2666, 27, 2666, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2666, 28, 2667, 0),
woosh.Token(woosh.INDENT, '        ', 2667, 0, 2667, 8),
woosh.Token(woosh.STRING, '"""val -> _TestClass object with associated value val.\r\n\r\n        >>> t = _TestClass(123)\r\n        >>> print(t.get())\r\n        123\r\n        """', 2667, 8, 2672, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 2672, 11, 2673, 0),
woosh.Token(woosh.NAME, 'self', 2674, 8, 2674, 12),
woosh.Token(woosh.OP, '.', 2674, 12, 2674, 13),
woosh.Token(woosh.NAME, 'val', 2674, 13, 2674, 16),
woosh.Token(woosh.OP, '=', 2674, 17, 2674, 18),
woosh.Token(woosh.NAME, 'val', 2674, 19, 2674, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2674, 22, 2675, 0),
woosh.Token(woosh.DEDENT, '    ', 2676, 0, 2676, 4),
woosh.Token(woosh.NAME, 'def', 2676, 4, 2676, 7),
woosh.Token(woosh.NAME, 'square', 2676, 8, 2676, 14),
woosh.Token(woosh.OP, '(', 2676, 14, 2676, 15),
woosh.Token(woosh.NAME, 'self', 2676, 15, 2676, 19),
woosh.Token(woosh.OP, ')', 2676, 19, 2676, 20),
woosh.Token(woosh.OP, ':', 2676, 20, 2676, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2676, 21, 2677, 0),
woosh.Token(woosh.INDENT, '        ', 2677, 0, 2677, 8),
woosh.Token(woosh.STRING, '"""square() -> square TestClass\'s associated value\r\n\r\n        >>> _TestClass(13).square().get()\r\n        169\r\n        """', 2677, 8, 2681, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 2681, 11, 2682, 0),
woosh.Token(woosh.NAME, 'self', 2683, 8, 2683, 12),
woosh.Token(woosh.OP, '.', 2683, 12, 2683, 13),
woosh.Token(woosh.NAME, 'val', 2683, 13, 2683, 16),
woosh.Token(woosh.OP, '=', 2683, 17, 2683, 18),
woosh.Token(woosh.NAME, 'self', 2683, 19, 2683, 23),
woosh.Token(woosh.OP, '.', 2683, 23, 2683, 24),
woosh.Token(woosh.NAME, 'val', 2683, 24, 2683, 27),
woosh.Token(woosh.OP, '**', 2683, 28, 2683, 30),
woosh.Token(woosh.NUMBER, '2', 2683, 31, 2683, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 2683, 32, 2684, 0),
woosh.Token(woosh.NAME, 'return', 2684, 8, 2684, 14),
woosh.Token(woosh.NAME, 'self', 2684, 15, 2684, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2684, 19, 2685, 0),
woosh.Token(woosh.DEDENT, '    ', 2686, 0, 2686, 4),
woosh.Token(woosh.NAME, 'def', 2686, 4, 2686, 7),
woosh.Token(woosh.NAME, 'get', 2686, 8, 2686, 11),
woosh.Token(woosh.OP, '(', 2686, 11, 2686, 12),
woosh.Token(woosh.NAME, 'self', 2686, 12, 2686, 16),
woosh.Token(woosh.OP, ')', 2686, 16, 2686, 17),
woosh.Token(woosh.OP, ':', 2686, 17, 2686, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 2686, 18, 2687, 0),
woosh.Token(woosh.INDENT, '        ', 2687, 0, 2687, 8),
woosh.Token(woosh.STRING, '"""get() -> return TestClass\'s associated value.\r\n\r\n        >>> x = _TestClass(-42)\r\n        >>> print(x.get())\r\n        -42\r\n        """', 2687, 8, 2692, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 2692, 11, 2693, 0),
woosh.Token(woosh.NAME, 'return', 2694, 8, 2694, 14),
woosh.Token(woosh.NAME, 'self', 2694, 15, 2694, 19),
woosh.Token(woosh.OP, '.', 2694, 19, 2694, 20),
woosh.Token(woosh.NAME, 'val', 2694, 20, 2694, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 2694, 23, 2695, 0),
woosh.Token(woosh.DEDENT, '', 2696, 0, 2696, 0),
woosh.Token(woosh.DEDENT, '', 2696, 0, 2696, 0),
woosh.Token(woosh.NAME, '__test__', 2696, 0, 2696, 8),
woosh.Token(woosh.OP, '=', 2696, 9, 2696, 10),
woosh.Token(woosh.OP, '{', 2696, 11, 2696, 12),
woosh.Token(woosh.STRING, '"_TestClass"', 2696, 12, 2696, 24),
woosh.Token(woosh.OP, ':', 2696, 24, 2696, 25),
woosh.Token(woosh.NAME, '_TestClass', 2696, 26, 2696, 36),
woosh.Token(woosh.OP, ',', 2696, 36, 2696, 37),
woosh.Token(woosh.STRING, '"string"', 2697, 12, 2697, 20),
woosh.Token(woosh.OP, ':', 2697, 20, 2697, 21),
woosh.Token(woosh.STRING, 'r"""\r\n                      Example of a string object, searched as-is.\r\n                      >>> x = 1; y = 2\r\n                      >>> x + y, x * y\r\n                      (3, 2)\r\n                      """', 2697, 22, 2702, 25),
woosh.Token(woosh.OP, ',', 2702, 25, 2702, 26),
woosh.Token(woosh.STRING, '"bool-int equivalence"', 2704, 12, 2704, 34),
woosh.Token(woosh.OP, ':', 2704, 34, 2704, 35),
woosh.Token(woosh.STRING, 'r"""\r\n                                    In 2.2, boolean expressions displayed\r\n                                    0 or 1.  By default, we still accept\r\n                                    them.  This can be disabled by passing\r\n                                    DONT_ACCEPT_TRUE_FOR_1 to the new\r\n                                    optionflags argument.\r\n                                    >>> 4 == 4\r\n                                    1\r\n                                    >>> 4 == 4\r\n                                    True\r\n                                    >>> 4 > 4\r\n                                    0\r\n                                    >>> 4 > 4\r\n                                    False\r\n                                    """', 2704, 36, 2718, 39),
woosh.Token(woosh.OP, ',', 2718, 39, 2718, 40),
woosh.Token(woosh.STRING, '"blank lines"', 2720, 12, 2720, 25),
woosh.Token(woosh.OP, ':', 2720, 25, 2720, 26),
woosh.Token(woosh.STRING, 'r"""\r\n                Blank lines can be marked with <BLANKLINE>:\r\n                    >>> print(\'foo\\n\\nbar\\n\')\r\n                    foo\r\n                    <BLANKLINE>\r\n                    bar\r\n                    <BLANKLINE>\r\n            """', 2720, 27, 2727, 15),
woosh.Token(woosh.OP, ',', 2727, 15, 2727, 16),
woosh.Token(woosh.STRING, '"ellipsis"', 2729, 12, 2729, 22),
woosh.Token(woosh.OP, ':', 2729, 22, 2729, 23),
woosh.Token(woosh.STRING, 'r"""\r\n                If the ellipsis flag is used, then \'...\' can be used to\r\n                elide substrings in the desired output:\r\n                    >>> print(list(range(1000))) #doctest: +ELLIPSIS\r\n                    [0, 1, 2, ..., 999]\r\n            """', 2729, 24, 2734, 15),
woosh.Token(woosh.OP, ',', 2734, 15, 2734, 16),
woosh.Token(woosh.STRING, '"whitespace normalization"', 2736, 12, 2736, 38),
woosh.Token(woosh.OP, ':', 2736, 38, 2736, 39),
woosh.Token(woosh.STRING, 'r"""\r\n                If the whitespace normalization flag is used, then\r\n                differences in whitespace are ignored.\r\n                    >>> print(list(range(30))) #doctest: +NORMALIZE_WHITESPACE\r\n                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\r\n                     15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\r\n                     27, 28, 29]\r\n            """', 2736, 40, 2743, 15),
woosh.Token(woosh.OP, ',', 2743, 15, 2743, 16),
woosh.Token(woosh.OP, '}', 2744, 11, 2744, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2744, 12, 2745, 0),
woosh.Token(woosh.NAME, 'def', 2747, 0, 2747, 3),
woosh.Token(woosh.NAME, '_test', 2747, 4, 2747, 9),
woosh.Token(woosh.OP, '(', 2747, 9, 2747, 10),
woosh.Token(woosh.OP, ')', 2747, 10, 2747, 11),
woosh.Token(woosh.OP, ':', 2747, 11, 2747, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2747, 12, 2748, 0),
woosh.Token(woosh.INDENT, '    ', 2748, 0, 2748, 4),
woosh.Token(woosh.NAME, 'import', 2748, 4, 2748, 10),
woosh.Token(woosh.NAME, 'argparse', 2748, 11, 2748, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 2748, 19, 2749, 0),
woosh.Token(woosh.NAME, 'parser', 2750, 4, 2750, 10),
woosh.Token(woosh.OP, '=', 2750, 11, 2750, 12),
woosh.Token(woosh.NAME, 'argparse', 2750, 13, 2750, 21),
woosh.Token(woosh.OP, '.', 2750, 21, 2750, 22),
woosh.Token(woosh.NAME, 'ArgumentParser', 2750, 22, 2750, 36),
woosh.Token(woosh.OP, '(', 2750, 36, 2750, 37),
woosh.Token(woosh.NAME, 'description', 2750, 37, 2750, 48),
woosh.Token(woosh.OP, '=', 2750, 48, 2750, 49),
woosh.Token(woosh.STRING, '"doctest runner"', 2750, 49, 2750, 65),
woosh.Token(woosh.OP, ')', 2750, 65, 2750, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 2750, 66, 2751, 0),
woosh.Token(woosh.NAME, 'parser', 2751, 4, 2751, 10),
woosh.Token(woosh.OP, '.', 2751, 10, 2751, 11),
woosh.Token(woosh.NAME, 'add_argument', 2751, 11, 2751, 23),
woosh.Token(woosh.OP, '(', 2751, 23, 2751, 24),
woosh.Token(woosh.STRING, "'-v'", 2751, 24, 2751, 28),
woosh.Token(woosh.OP, ',', 2751, 28, 2751, 29),
woosh.Token(woosh.STRING, "'--verbose'", 2751, 30, 2751, 41),
woosh.Token(woosh.OP, ',', 2751, 41, 2751, 42),
woosh.Token(woosh.NAME, 'action', 2751, 43, 2751, 49),
woosh.Token(woosh.OP, '=', 2751, 49, 2751, 50),
woosh.Token(woosh.STRING, "'store_true'", 2751, 50, 2751, 62),
woosh.Token(woosh.OP, ',', 2751, 62, 2751, 63),
woosh.Token(woosh.NAME, 'default', 2751, 64, 2751, 71),
woosh.Token(woosh.OP, '=', 2751, 71, 2751, 72),
woosh.Token(woosh.NAME, 'False', 2751, 72, 2751, 77),
woosh.Token(woosh.OP, ',', 2751, 77, 2751, 78),
woosh.Token(woosh.NAME, 'help', 2752, 24, 2752, 28),
woosh.Token(woosh.OP, '=', 2752, 28, 2752, 29),
woosh.Token(woosh.STRING, "'print very verbose output for all tests'", 2752, 29, 2752, 70),
woosh.Token(woosh.OP, ')', 2752, 70, 2752, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 2752, 71, 2753, 0),
woosh.Token(woosh.NAME, 'parser', 2753, 4, 2753, 10),
woosh.Token(woosh.OP, '.', 2753, 10, 2753, 11),
woosh.Token(woosh.NAME, 'add_argument', 2753, 11, 2753, 23),
woosh.Token(woosh.OP, '(', 2753, 23, 2753, 24),
woosh.Token(woosh.STRING, "'-o'", 2753, 24, 2753, 28),
woosh.Token(woosh.OP, ',', 2753, 28, 2753, 29),
woosh.Token(woosh.STRING, "'--option'", 2753, 30, 2753, 40),
woosh.Token(woosh.OP, ',', 2753, 40, 2753, 41),
woosh.Token(woosh.NAME, 'action', 2753, 42, 2753, 48),
woosh.Token(woosh.OP, '=', 2753, 48, 2753, 49),
woosh.Token(woosh.STRING, "'append'", 2753, 49, 2753, 57),
woosh.Token(woosh.OP, ',', 2753, 57, 2753, 58),
woosh.Token(woosh.NAME, 'choices', 2754, 24, 2754, 31),
woosh.Token(woosh.OP, '=', 2754, 31, 2754, 32),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 2754, 32, 2754, 51),
woosh.Token(woosh.OP, '.', 2754, 51, 2754, 52),
woosh.Token(woosh.NAME, 'keys', 2754, 52, 2754, 56),
woosh.Token(woosh.OP, '(', 2754, 56, 2754, 57),
woosh.Token(woosh.OP, ')', 2754, 57, 2754, 58),
woosh.Token(woosh.OP, ',', 2754, 58, 2754, 59),
woosh.Token(woosh.NAME, 'default', 2754, 60, 2754, 67),
woosh.Token(woosh.OP, '=', 2754, 67, 2754, 68),
woosh.Token(woosh.OP, '[', 2754, 68, 2754, 69),
woosh.Token(woosh.OP, ']', 2754, 69, 2754, 70),
woosh.Token(woosh.OP, ',', 2754, 70, 2754, 71),
woosh.Token(woosh.NAME, 'help', 2755, 24, 2755, 28),
woosh.Token(woosh.OP, '=', 2755, 28, 2755, 29),
woosh.Token(woosh.OP, '(', 2755, 29, 2755, 30),
woosh.Token(woosh.STRING, "'specify a doctest option flag to apply'", 2755, 30, 2755, 70),
woosh.Token(woosh.STRING, "' to the test run; may be specified more'", 2756, 30, 2756, 71),
woosh.Token(woosh.STRING, "' than once to apply multiple options'", 2757, 30, 2757, 68),
woosh.Token(woosh.OP, ')', 2757, 68, 2757, 69),
woosh.Token(woosh.OP, ')', 2757, 69, 2757, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 2757, 70, 2758, 0),
woosh.Token(woosh.NAME, 'parser', 2758, 4, 2758, 10),
woosh.Token(woosh.OP, '.', 2758, 10, 2758, 11),
woosh.Token(woosh.NAME, 'add_argument', 2758, 11, 2758, 23),
woosh.Token(woosh.OP, '(', 2758, 23, 2758, 24),
woosh.Token(woosh.STRING, "'-f'", 2758, 24, 2758, 28),
woosh.Token(woosh.OP, ',', 2758, 28, 2758, 29),
woosh.Token(woosh.STRING, "'--fail-fast'", 2758, 30, 2758, 43),
woosh.Token(woosh.OP, ',', 2758, 43, 2758, 44),
woosh.Token(woosh.NAME, 'action', 2758, 45, 2758, 51),
woosh.Token(woosh.OP, '=', 2758, 51, 2758, 52),
woosh.Token(woosh.STRING, "'store_true'", 2758, 52, 2758, 64),
woosh.Token(woosh.OP, ',', 2758, 64, 2758, 65),
woosh.Token(woosh.NAME, 'help', 2759, 24, 2759, 28),
woosh.Token(woosh.OP, '=', 2759, 28, 2759, 29),
woosh.Token(woosh.OP, '(', 2759, 29, 2759, 30),
woosh.Token(woosh.STRING, "'stop running tests after first failure (this'", 2759, 30, 2759, 76),
woosh.Token(woosh.STRING, "' is a shorthand for -o FAIL_FAST, and is'", 2760, 30, 2760, 72),
woosh.Token(woosh.STRING, "' in addition to any other -o options)'", 2761, 30, 2761, 69),
woosh.Token(woosh.OP, ')', 2761, 69, 2761, 70),
woosh.Token(woosh.OP, ')', 2761, 70, 2761, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 2761, 71, 2762, 0),
woosh.Token(woosh.NAME, 'parser', 2762, 4, 2762, 10),
woosh.Token(woosh.OP, '.', 2762, 10, 2762, 11),
woosh.Token(woosh.NAME, 'add_argument', 2762, 11, 2762, 23),
woosh.Token(woosh.OP, '(', 2762, 23, 2762, 24),
woosh.Token(woosh.STRING, "'file'", 2762, 24, 2762, 30),
woosh.Token(woosh.OP, ',', 2762, 30, 2762, 31),
woosh.Token(woosh.NAME, 'nargs', 2762, 32, 2762, 37),
woosh.Token(woosh.OP, '=', 2762, 37, 2762, 38),
woosh.Token(woosh.STRING, "'+'", 2762, 38, 2762, 41),
woosh.Token(woosh.OP, ',', 2762, 41, 2762, 42),
woosh.Token(woosh.NAME, 'help', 2763, 24, 2763, 28),
woosh.Token(woosh.OP, '=', 2763, 28, 2763, 29),
woosh.Token(woosh.STRING, "'file containing the tests to run'", 2763, 29, 2763, 63),
woosh.Token(woosh.OP, ')', 2763, 63, 2763, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 2763, 64, 2764, 0),
woosh.Token(woosh.NAME, 'args', 2764, 4, 2764, 8),
woosh.Token(woosh.OP, '=', 2764, 9, 2764, 10),
woosh.Token(woosh.NAME, 'parser', 2764, 11, 2764, 17),
woosh.Token(woosh.OP, '.', 2764, 17, 2764, 18),
woosh.Token(woosh.NAME, 'parse_args', 2764, 18, 2764, 28),
woosh.Token(woosh.OP, '(', 2764, 28, 2764, 29),
woosh.Token(woosh.OP, ')', 2764, 29, 2764, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2764, 30, 2765, 0),
woosh.Token(woosh.NAME, 'testfiles', 2765, 4, 2765, 13),
woosh.Token(woosh.OP, '=', 2765, 14, 2765, 15),
woosh.Token(woosh.NAME, 'args', 2765, 16, 2765, 20),
woosh.Token(woosh.OP, '.', 2765, 20, 2765, 21),
woosh.Token(woosh.NAME, 'file', 2765, 21, 2765, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 2765, 25, 2766, 0),
woosh.Token(woosh.COMMENT, '# Verbose used to be handled by the "inspect argv" magic in DocTestRunner,', 2766, 4, 2766, 78),
woosh.Token(woosh.COMMENT, '# but since we are using argparse we are passing it manually now.', 2767, 4, 2767, 69),
woosh.Token(woosh.NAME, 'verbose', 2768, 4, 2768, 11),
woosh.Token(woosh.OP, '=', 2768, 12, 2768, 13),
woosh.Token(woosh.NAME, 'args', 2768, 14, 2768, 18),
woosh.Token(woosh.OP, '.', 2768, 18, 2768, 19),
woosh.Token(woosh.NAME, 'verbose', 2768, 19, 2768, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2768, 26, 2769, 0),
woosh.Token(woosh.NAME, 'options', 2769, 4, 2769, 11),
woosh.Token(woosh.OP, '=', 2769, 12, 2769, 13),
woosh.Token(woosh.NUMBER, '0', 2769, 14, 2769, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 2769, 15, 2770, 0),
woosh.Token(woosh.NAME, 'for', 2770, 4, 2770, 7),
woosh.Token(woosh.NAME, 'option', 2770, 8, 2770, 14),
woosh.Token(woosh.NAME, 'in', 2770, 15, 2770, 17),
woosh.Token(woosh.NAME, 'args', 2770, 18, 2770, 22),
woosh.Token(woosh.OP, '.', 2770, 22, 2770, 23),
woosh.Token(woosh.NAME, 'option', 2770, 23, 2770, 29),
woosh.Token(woosh.OP, ':', 2770, 29, 2770, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2770, 30, 2771, 0),
woosh.Token(woosh.INDENT, '        ', 2771, 0, 2771, 8),
woosh.Token(woosh.NAME, 'options', 2771, 8, 2771, 15),
woosh.Token(woosh.OP, '|=', 2771, 16, 2771, 18),
woosh.Token(woosh.NAME, 'OPTIONFLAGS_BY_NAME', 2771, 19, 2771, 38),
woosh.Token(woosh.OP, '[', 2771, 38, 2771, 39),
woosh.Token(woosh.NAME, 'option', 2771, 39, 2771, 45),
woosh.Token(woosh.OP, ']', 2771, 45, 2771, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 2771, 46, 2772, 0),
woosh.Token(woosh.DEDENT, '    ', 2772, 0, 2772, 4),
woosh.Token(woosh.NAME, 'if', 2772, 4, 2772, 6),
woosh.Token(woosh.NAME, 'args', 2772, 7, 2772, 11),
woosh.Token(woosh.OP, '.', 2772, 11, 2772, 12),
woosh.Token(woosh.NAME, 'fail_fast', 2772, 12, 2772, 21),
woosh.Token(woosh.OP, ':', 2772, 21, 2772, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 2772, 22, 2773, 0),
woosh.Token(woosh.INDENT, '        ', 2773, 0, 2773, 8),
woosh.Token(woosh.NAME, 'options', 2773, 8, 2773, 15),
woosh.Token(woosh.OP, '|=', 2773, 16, 2773, 18),
woosh.Token(woosh.NAME, 'FAIL_FAST', 2773, 19, 2773, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 2773, 28, 2774, 0),
woosh.Token(woosh.DEDENT, '    ', 2774, 0, 2774, 4),
woosh.Token(woosh.NAME, 'for', 2774, 4, 2774, 7),
woosh.Token(woosh.NAME, 'filename', 2774, 8, 2774, 16),
woosh.Token(woosh.NAME, 'in', 2774, 17, 2774, 19),
woosh.Token(woosh.NAME, 'testfiles', 2774, 20, 2774, 29),
woosh.Token(woosh.OP, ':', 2774, 29, 2774, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 2774, 30, 2775, 0),
woosh.Token(woosh.INDENT, '        ', 2775, 0, 2775, 8),
woosh.Token(woosh.NAME, 'if', 2775, 8, 2775, 10),
woosh.Token(woosh.NAME, 'filename', 2775, 11, 2775, 19),
woosh.Token(woosh.OP, '.', 2775, 19, 2775, 20),
woosh.Token(woosh.NAME, 'endswith', 2775, 20, 2775, 28),
woosh.Token(woosh.OP, '(', 2775, 28, 2775, 29),
woosh.Token(woosh.STRING, '".py"', 2775, 29, 2775, 34),
woosh.Token(woosh.OP, ')', 2775, 34, 2775, 35),
woosh.Token(woosh.OP, ':', 2775, 35, 2775, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 2775, 36, 2776, 0),
woosh.Token(woosh.COMMENT, '# It is a module -- insert its dir into sys.path and try to', 2776, 12, 2776, 71),
woosh.Token(woosh.COMMENT, '# import it. If it is part of a package, that possibly', 2777, 12, 2777, 66),
woosh.Token(woosh.COMMENT, "# won't work because of package imports.", 2778, 12, 2778, 52),
woosh.Token(woosh.INDENT, '            ', 2779, 0, 2779, 12),
woosh.Token(woosh.NAME, 'dirname', 2779, 12, 2779, 19),
woosh.Token(woosh.OP, ',', 2779, 19, 2779, 20),
woosh.Token(woosh.NAME, 'filename', 2779, 21, 2779, 29),
woosh.Token(woosh.OP, '=', 2779, 30, 2779, 31),
woosh.Token(woosh.NAME, 'os', 2779, 32, 2779, 34),
woosh.Token(woosh.OP, '.', 2779, 34, 2779, 35),
woosh.Token(woosh.NAME, 'path', 2779, 35, 2779, 39),
woosh.Token(woosh.OP, '.', 2779, 39, 2779, 40),
woosh.Token(woosh.NAME, 'split', 2779, 40, 2779, 45),
woosh.Token(woosh.OP, '(', 2779, 45, 2779, 46),
woosh.Token(woosh.NAME, 'filename', 2779, 46, 2779, 54),
woosh.Token(woosh.OP, ')', 2779, 54, 2779, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 2779, 55, 2780, 0),
woosh.Token(woosh.NAME, 'sys', 2780, 12, 2780, 15),
woosh.Token(woosh.OP, '.', 2780, 15, 2780, 16),
woosh.Token(woosh.NAME, 'path', 2780, 16, 2780, 20),
woosh.Token(woosh.OP, '.', 2780, 20, 2780, 21),
woosh.Token(woosh.NAME, 'insert', 2780, 21, 2780, 27),
woosh.Token(woosh.OP, '(', 2780, 27, 2780, 28),
woosh.Token(woosh.NUMBER, '0', 2780, 28, 2780, 29),
woosh.Token(woosh.OP, ',', 2780, 29, 2780, 30),
woosh.Token(woosh.NAME, 'dirname', 2780, 31, 2780, 38),
woosh.Token(woosh.OP, ')', 2780, 38, 2780, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 2780, 39, 2781, 0),
woosh.Token(woosh.NAME, 'm', 2781, 12, 2781, 13),
woosh.Token(woosh.OP, '=', 2781, 14, 2781, 15),
woosh.Token(woosh.NAME, '__import__', 2781, 16, 2781, 26),
woosh.Token(woosh.OP, '(', 2781, 26, 2781, 27),
woosh.Token(woosh.NAME, 'filename', 2781, 27, 2781, 35),
woosh.Token(woosh.OP, '[', 2781, 35, 2781, 36),
woosh.Token(woosh.OP, ':', 2781, 36, 2781, 37),
woosh.Token(woosh.OP, '-', 2781, 37, 2781, 38),
woosh.Token(woosh.NUMBER, '3', 2781, 38, 2781, 39),
woosh.Token(woosh.OP, ']', 2781, 39, 2781, 40),
woosh.Token(woosh.OP, ')', 2781, 40, 2781, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 2781, 41, 2782, 0),
woosh.Token(woosh.NAME, 'del', 2782, 12, 2782, 15),
woosh.Token(woosh.NAME, 'sys', 2782, 16, 2782, 19),
woosh.Token(woosh.OP, '.', 2782, 19, 2782, 20),
woosh.Token(woosh.NAME, 'path', 2782, 20, 2782, 24),
woosh.Token(woosh.OP, '[', 2782, 24, 2782, 25),
woosh.Token(woosh.NUMBER, '0', 2782, 25, 2782, 26),
woosh.Token(woosh.OP, ']', 2782, 26, 2782, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 2782, 27, 2783, 0),
woosh.Token(woosh.NAME, 'failures', 2783, 12, 2783, 20),
woosh.Token(woosh.OP, ',', 2783, 20, 2783, 21),
woosh.Token(woosh.NAME, '_', 2783, 22, 2783, 23),
woosh.Token(woosh.OP, '=', 2783, 24, 2783, 25),
woosh.Token(woosh.NAME, 'testmod', 2783, 26, 2783, 33),
woosh.Token(woosh.OP, '(', 2783, 33, 2783, 34),
woosh.Token(woosh.NAME, 'm', 2783, 34, 2783, 35),
woosh.Token(woosh.OP, ',', 2783, 35, 2783, 36),
woosh.Token(woosh.NAME, 'verbose', 2783, 37, 2783, 44),
woosh.Token(woosh.OP, '=', 2783, 44, 2783, 45),
woosh.Token(woosh.NAME, 'verbose', 2783, 45, 2783, 52),
woosh.Token(woosh.OP, ',', 2783, 52, 2783, 53),
woosh.Token(woosh.NAME, 'optionflags', 2783, 54, 2783, 65),
woosh.Token(woosh.OP, '=', 2783, 65, 2783, 66),
woosh.Token(woosh.NAME, 'options', 2783, 66, 2783, 73),
woosh.Token(woosh.OP, ')', 2783, 73, 2783, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 2783, 74, 2784, 0),
woosh.Token(woosh.DEDENT, '        ', 2784, 0, 2784, 8),
woosh.Token(woosh.NAME, 'else', 2784, 8, 2784, 12),
woosh.Token(woosh.OP, ':', 2784, 12, 2784, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 2784, 13, 2785, 0),
woosh.Token(woosh.INDENT, '            ', 2785, 0, 2785, 12),
woosh.Token(woosh.NAME, 'failures', 2785, 12, 2785, 20),
woosh.Token(woosh.OP, ',', 2785, 20, 2785, 21),
woosh.Token(woosh.NAME, '_', 2785, 22, 2785, 23),
woosh.Token(woosh.OP, '=', 2785, 24, 2785, 25),
woosh.Token(woosh.NAME, 'testfile', 2785, 26, 2785, 34),
woosh.Token(woosh.OP, '(', 2785, 34, 2785, 35),
woosh.Token(woosh.NAME, 'filename', 2785, 35, 2785, 43),
woosh.Token(woosh.OP, ',', 2785, 43, 2785, 44),
woosh.Token(woosh.NAME, 'module_relative', 2785, 45, 2785, 60),
woosh.Token(woosh.OP, '=', 2785, 60, 2785, 61),
woosh.Token(woosh.NAME, 'False', 2785, 61, 2785, 66),
woosh.Token(woosh.OP, ',', 2785, 66, 2785, 67),
woosh.Token(woosh.NAME, 'verbose', 2786, 37, 2786, 44),
woosh.Token(woosh.OP, '=', 2786, 44, 2786, 45),
woosh.Token(woosh.NAME, 'verbose', 2786, 45, 2786, 52),
woosh.Token(woosh.OP, ',', 2786, 52, 2786, 53),
woosh.Token(woosh.NAME, 'optionflags', 2786, 54, 2786, 65),
woosh.Token(woosh.OP, '=', 2786, 65, 2786, 66),
woosh.Token(woosh.NAME, 'options', 2786, 66, 2786, 73),
woosh.Token(woosh.OP, ')', 2786, 73, 2786, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 2786, 74, 2787, 0),
woosh.Token(woosh.DEDENT, '        ', 2787, 0, 2787, 8),
woosh.Token(woosh.NAME, 'if', 2787, 8, 2787, 10),
woosh.Token(woosh.NAME, 'failures', 2787, 11, 2787, 19),
woosh.Token(woosh.OP, ':', 2787, 19, 2787, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2787, 20, 2788, 0),
woosh.Token(woosh.INDENT, '            ', 2788, 0, 2788, 12),
woosh.Token(woosh.NAME, 'return', 2788, 12, 2788, 18),
woosh.Token(woosh.NUMBER, '1', 2788, 19, 2788, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 2788, 20, 2789, 0),
woosh.Token(woosh.DEDENT, '    ', 2789, 0, 2789, 4),
woosh.Token(woosh.DEDENT, '', 2789, 4, 2789, 4),
woosh.Token(woosh.NAME, 'return', 2789, 4, 2789, 10),
woosh.Token(woosh.NUMBER, '0', 2789, 11, 2789, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 2789, 12, 2790, 0),
woosh.Token(woosh.DEDENT, '', 2792, 0, 2792, 0),
woosh.Token(woosh.NAME, 'if', 2792, 0, 2792, 2),
woosh.Token(woosh.NAME, '__name__', 2792, 3, 2792, 11),
woosh.Token(woosh.OP, '==', 2792, 12, 2792, 14),
woosh.Token(woosh.STRING, '"__main__"', 2792, 15, 2792, 25),
woosh.Token(woosh.OP, ':', 2792, 25, 2792, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 2792, 26, 2793, 0),
woosh.Token(woosh.INDENT, '    ', 2793, 0, 2793, 4),
woosh.Token(woosh.NAME, 'sys', 2793, 4, 2793, 7),
woosh.Token(woosh.OP, '.', 2793, 7, 2793, 8),
woosh.Token(woosh.NAME, 'exit', 2793, 8, 2793, 12),
woosh.Token(woosh.OP, '(', 2793, 12, 2793, 13),
woosh.Token(woosh.NAME, '_test', 2793, 13, 2793, 18),
woosh.Token(woosh.OP, '(', 2793, 18, 2793, 19),
woosh.Token(woosh.OP, ')', 2793, 19, 2793, 20),
woosh.Token(woosh.OP, ')', 2793, 20, 2793, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 2793, 21, 2794, 0),
woosh.Token(woosh.DEDENT, '', 2794, 0, 2794, 0),
woosh.Token(woosh.EOF, '', 2794, 0, 2794, 0),
]
