
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../../sample/'
def test():
    with open('F:\\code\\woosh\\sample\\stdlib\\dataclasses.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.NAME, 'import', 1, 0, 1, 6),
woosh.Token(woosh.NAME, 're', 1, 7, 1, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1, 9, 2, 0),
woosh.Token(woosh.NAME, 'import', 2, 0, 2, 6),
woosh.Token(woosh.NAME, 'sys', 2, 7, 2, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 2, 10, 3, 0),
woosh.Token(woosh.NAME, 'import', 3, 0, 3, 6),
woosh.Token(woosh.NAME, 'copy', 3, 7, 3, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 3, 11, 4, 0),
woosh.Token(woosh.NAME, 'import', 4, 0, 4, 6),
woosh.Token(woosh.NAME, 'types', 4, 7, 4, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 4, 12, 5, 0),
woosh.Token(woosh.NAME, 'import', 5, 0, 5, 6),
woosh.Token(woosh.NAME, 'inspect', 5, 7, 5, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 5, 14, 6, 0),
woosh.Token(woosh.NAME, 'import', 6, 0, 6, 6),
woosh.Token(woosh.NAME, 'keyword', 6, 7, 6, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 6, 14, 7, 0),
woosh.Token(woosh.NAME, 'import', 7, 0, 7, 6),
woosh.Token(woosh.NAME, 'builtins', 7, 7, 7, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 7, 15, 8, 0),
woosh.Token(woosh.NAME, 'import', 8, 0, 8, 6),
woosh.Token(woosh.NAME, 'functools', 8, 7, 8, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 8, 16, 9, 0),
woosh.Token(woosh.NAME, 'import', 9, 0, 9, 6),
woosh.Token(woosh.NAME, '_thread', 9, 7, 9, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 9, 14, 10, 0),
woosh.Token(woosh.NAME, 'from', 10, 0, 10, 4),
woosh.Token(woosh.NAME, 'types', 10, 5, 10, 10),
woosh.Token(woosh.NAME, 'import', 10, 11, 10, 17),
woosh.Token(woosh.NAME, 'GenericAlias', 10, 18, 10, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 10, 30, 11, 0),
woosh.Token(woosh.NAME, '__all__', 13, 0, 13, 7),
woosh.Token(woosh.OP, '=', 13, 8, 13, 9),
woosh.Token(woosh.OP, '[', 13, 10, 13, 11),
woosh.Token(woosh.STRING, "'dataclass'", 13, 11, 13, 22),
woosh.Token(woosh.OP, ',', 13, 22, 13, 23),
woosh.Token(woosh.STRING, "'field'", 14, 11, 14, 18),
woosh.Token(woosh.OP, ',', 14, 18, 14, 19),
woosh.Token(woosh.STRING, "'Field'", 15, 11, 15, 18),
woosh.Token(woosh.OP, ',', 15, 18, 15, 19),
woosh.Token(woosh.STRING, "'FrozenInstanceError'", 16, 11, 16, 32),
woosh.Token(woosh.OP, ',', 16, 32, 16, 33),
woosh.Token(woosh.STRING, "'InitVar'", 17, 11, 17, 20),
woosh.Token(woosh.OP, ',', 17, 20, 17, 21),
woosh.Token(woosh.STRING, "'MISSING'", 18, 11, 18, 20),
woosh.Token(woosh.OP, ',', 18, 20, 18, 21),
woosh.Token(woosh.COMMENT, '# Helper functions.', 20, 11, 20, 30),
woosh.Token(woosh.STRING, "'fields'", 21, 11, 21, 19),
woosh.Token(woosh.OP, ',', 21, 19, 21, 20),
woosh.Token(woosh.STRING, "'asdict'", 22, 11, 22, 19),
woosh.Token(woosh.OP, ',', 22, 19, 22, 20),
woosh.Token(woosh.STRING, "'astuple'", 23, 11, 23, 20),
woosh.Token(woosh.OP, ',', 23, 20, 23, 21),
woosh.Token(woosh.STRING, "'make_dataclass'", 24, 11, 24, 27),
woosh.Token(woosh.OP, ',', 24, 27, 24, 28),
woosh.Token(woosh.STRING, "'replace'", 25, 11, 25, 20),
woosh.Token(woosh.OP, ',', 25, 20, 25, 21),
woosh.Token(woosh.STRING, "'is_dataclass'", 26, 11, 26, 25),
woosh.Token(woosh.OP, ',', 26, 25, 26, 26),
woosh.Token(woosh.OP, ']', 27, 11, 27, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 27, 12, 28, 0),
woosh.Token(woosh.COMMENT, '# Conditions for adding methods.  The boxes indicate what action the', 29, 0, 29, 68),
woosh.Token(woosh.COMMENT, '# dataclass decorator takes.  For all of these tables, when I talk', 30, 0, 30, 66),
woosh.Token(woosh.COMMENT, "# about init=, repr=, eq=, order=, unsafe_hash=, or frozen=, I'm", 31, 0, 31, 64),
woosh.Token(woosh.COMMENT, '# referring to the arguments to the @dataclass decorator.  When', 32, 0, 32, 63),
woosh.Token(woosh.COMMENT, '# checking if a dunder method already exists, I mean check for an', 33, 0, 33, 65),
woosh.Token(woosh.COMMENT, "# entry in the class's __dict__.  I never check to see if an attribute", 34, 0, 34, 70),
woosh.Token(woosh.COMMENT, '# is defined in a base class.', 35, 0, 35, 29),
woosh.Token(woosh.COMMENT, '# Key:', 37, 0, 37, 6),
woosh.Token(woosh.COMMENT, '# +=========+=========================================+', 38, 0, 38, 55),
woosh.Token(woosh.COMMENT, '# + Value   | Meaning                                 |', 39, 0, 39, 55),
woosh.Token(woosh.COMMENT, '# +=========+=========================================+', 40, 0, 40, 55),
woosh.Token(woosh.COMMENT, '# | <blank> | No action: no method is added.          |', 41, 0, 41, 55),
woosh.Token(woosh.COMMENT, '# +---------+-----------------------------------------+', 42, 0, 42, 55),
woosh.Token(woosh.COMMENT, '# | add     | Generated method is added.              |', 43, 0, 43, 55),
woosh.Token(woosh.COMMENT, '# +---------+-----------------------------------------+', 44, 0, 44, 55),
woosh.Token(woosh.COMMENT, '# | raise   | TypeError is raised.                    |', 45, 0, 45, 55),
woosh.Token(woosh.COMMENT, '# +---------+-----------------------------------------+', 46, 0, 46, 55),
woosh.Token(woosh.COMMENT, '# | None    | Attribute is set to None.               |', 47, 0, 47, 55),
woosh.Token(woosh.COMMENT, '# +=========+=========================================+', 48, 0, 48, 55),
woosh.Token(woosh.COMMENT, '# __init__', 50, 0, 50, 10),
woosh.Token(woosh.COMMENT, '#', 51, 0, 51, 1),
woosh.Token(woosh.COMMENT, '#   +--- init= parameter', 52, 0, 52, 24),
woosh.Token(woosh.COMMENT, '#   |', 53, 0, 53, 5),
woosh.Token(woosh.COMMENT, '#   v     |       |       |', 54, 0, 54, 27),
woosh.Token(woosh.COMMENT, '#         |  no   |  yes  |  <--- class has __init__ in __dict__?', 55, 0, 55, 65),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 56, 0, 56, 27),
woosh.Token(woosh.COMMENT, '# | False |       |       |', 57, 0, 57, 27),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+', 58, 0, 58, 27),
woosh.Token(woosh.COMMENT, '# | True  | add   |       |  <- the default', 59, 0, 59, 43),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 60, 0, 60, 27),
woosh.Token(woosh.COMMENT, '# __repr__', 62, 0, 62, 10),
woosh.Token(woosh.COMMENT, '#', 63, 0, 63, 1),
woosh.Token(woosh.COMMENT, '#    +--- repr= parameter', 64, 0, 64, 25),
woosh.Token(woosh.COMMENT, '#    |', 65, 0, 65, 6),
woosh.Token(woosh.COMMENT, '#    v    |       |       |', 66, 0, 66, 27),
woosh.Token(woosh.COMMENT, '#         |  no   |  yes  |  <--- class has __repr__ in __dict__?', 67, 0, 67, 65),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 68, 0, 68, 27),
woosh.Token(woosh.COMMENT, '# | False |       |       |', 69, 0, 69, 27),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+', 70, 0, 70, 27),
woosh.Token(woosh.COMMENT, '# | True  | add   |       |  <- the default', 71, 0, 71, 43),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 72, 0, 72, 27),
woosh.Token(woosh.COMMENT, '# __setattr__', 75, 0, 75, 13),
woosh.Token(woosh.COMMENT, '# __delattr__', 76, 0, 76, 13),
woosh.Token(woosh.COMMENT, '#', 77, 0, 77, 1),
woosh.Token(woosh.COMMENT, '#    +--- frozen= parameter', 78, 0, 78, 27),
woosh.Token(woosh.COMMENT, '#    |', 79, 0, 79, 6),
woosh.Token(woosh.COMMENT, '#    v    |       |       |', 80, 0, 80, 27),
woosh.Token(woosh.COMMENT, '#         |  no   |  yes  |  <--- class has __setattr__ or __delattr__ in __dict__?', 81, 0, 81, 83),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 82, 0, 82, 27),
woosh.Token(woosh.COMMENT, '# | False |       |       |  <- the default', 83, 0, 83, 43),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+', 84, 0, 84, 27),
woosh.Token(woosh.COMMENT, '# | True  | add   | raise |', 85, 0, 85, 27),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 86, 0, 86, 27),
woosh.Token(woosh.COMMENT, '# Raise because not adding these methods would break the "frozen-ness"', 87, 0, 87, 70),
woosh.Token(woosh.COMMENT, '# of the class.', 88, 0, 88, 15),
woosh.Token(woosh.COMMENT, '# __eq__', 90, 0, 90, 8),
woosh.Token(woosh.COMMENT, '#', 91, 0, 91, 1),
woosh.Token(woosh.COMMENT, '#    +--- eq= parameter', 92, 0, 92, 23),
woosh.Token(woosh.COMMENT, '#    |', 93, 0, 93, 6),
woosh.Token(woosh.COMMENT, '#    v    |       |       |', 94, 0, 94, 27),
woosh.Token(woosh.COMMENT, '#         |  no   |  yes  |  <--- class has __eq__ in __dict__?', 95, 0, 95, 63),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 96, 0, 96, 27),
woosh.Token(woosh.COMMENT, '# | False |       |       |', 97, 0, 97, 27),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+', 98, 0, 98, 27),
woosh.Token(woosh.COMMENT, '# | True  | add   |       |  <- the default', 99, 0, 99, 43),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 100, 0, 100, 27),
woosh.Token(woosh.COMMENT, '# __lt__', 102, 0, 102, 8),
woosh.Token(woosh.COMMENT, '# __le__', 103, 0, 103, 8),
woosh.Token(woosh.COMMENT, '# __gt__', 104, 0, 104, 8),
woosh.Token(woosh.COMMENT, '# __ge__', 105, 0, 105, 8),
woosh.Token(woosh.COMMENT, '#', 106, 0, 106, 1),
woosh.Token(woosh.COMMENT, '#    +--- order= parameter', 107, 0, 107, 26),
woosh.Token(woosh.COMMENT, '#    |', 108, 0, 108, 6),
woosh.Token(woosh.COMMENT, '#    v    |       |       |', 109, 0, 109, 27),
woosh.Token(woosh.COMMENT, '#         |  no   |  yes  |  <--- class has any comparison method in __dict__?', 110, 0, 110, 78),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 111, 0, 111, 27),
woosh.Token(woosh.COMMENT, '# | False |       |       |  <- the default', 112, 0, 112, 43),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+', 113, 0, 113, 27),
woosh.Token(woosh.COMMENT, '# | True  | add   | raise |', 114, 0, 114, 27),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+', 115, 0, 115, 27),
woosh.Token(woosh.COMMENT, '# Raise because to allow this case would interfere with using', 116, 0, 116, 61),
woosh.Token(woosh.COMMENT, '# functools.total_ordering.', 117, 0, 117, 27),
woosh.Token(woosh.COMMENT, '# __hash__', 119, 0, 119, 10),
woosh.Token(woosh.COMMENT, '#    +------------------- unsafe_hash= parameter', 121, 0, 121, 48),
woosh.Token(woosh.COMMENT, '#    |       +----------- eq= parameter', 122, 0, 122, 39),
woosh.Token(woosh.COMMENT, '#    |       |       +--- frozen= parameter', 123, 0, 123, 43),
woosh.Token(woosh.COMMENT, '#    |       |       |', 124, 0, 124, 22),
woosh.Token(woosh.COMMENT, '#    v       v       v    |        |        |', 125, 0, 125, 45),
woosh.Token(woosh.COMMENT, '#                         |   no   |  yes   |  <--- class has explicitly defined __hash__', 126, 0, 126, 89),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+========+========+', 127, 0, 127, 45),
woosh.Token(woosh.COMMENT, '# | False | False | False |        |        | No __eq__, use the base class __hash__', 128, 0, 128, 84),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 129, 0, 129, 45),
woosh.Token(woosh.COMMENT, '# | False | False | True  |        |        | No __eq__, use the base class __hash__', 130, 0, 130, 84),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 131, 0, 131, 45),
woosh.Token(woosh.COMMENT, '# | False | True  | False | None   |        | <-- the default, not hashable', 132, 0, 132, 75),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 133, 0, 133, 45),
woosh.Token(woosh.COMMENT, '# | False | True  | True  | add    |        | Frozen, so hashable, allows override', 134, 0, 134, 82),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 135, 0, 135, 45),
woosh.Token(woosh.COMMENT, '# | True  | False | False | add    | raise  | Has no __eq__, but hashable', 136, 0, 136, 73),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 137, 0, 137, 45),
woosh.Token(woosh.COMMENT, '# | True  | False | True  | add    | raise  | Has no __eq__, but hashable', 138, 0, 138, 73),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 139, 0, 139, 45),
woosh.Token(woosh.COMMENT, '# | True  | True  | False | add    | raise  | Not frozen, but hashable', 140, 0, 140, 70),
woosh.Token(woosh.COMMENT, '# +-------+-------+-------+--------+--------+', 141, 0, 141, 45),
woosh.Token(woosh.COMMENT, '# | True  | True  | True  | add    | raise  | Frozen, so hashable', 142, 0, 142, 65),
woosh.Token(woosh.COMMENT, '# +=======+=======+=======+========+========+', 143, 0, 143, 45),
woosh.Token(woosh.COMMENT, '# For boxes that are blank, __hash__ is untouched and therefore', 144, 0, 144, 63),
woosh.Token(woosh.COMMENT, '# inherited from the base class.  If the base is object, then', 145, 0, 145, 61),
woosh.Token(woosh.COMMENT, '# id-based hashing is used.', 146, 0, 146, 27),
woosh.Token(woosh.COMMENT, '#', 147, 0, 147, 1),
woosh.Token(woosh.COMMENT, '# Note that a class may already have __hash__=None if it specified an', 148, 0, 148, 69),
woosh.Token(woosh.COMMENT, '# __eq__ method in the class body (not one that was created by', 149, 0, 149, 62),
woosh.Token(woosh.COMMENT, '# @dataclass).', 150, 0, 150, 14),
woosh.Token(woosh.COMMENT, '#', 151, 0, 151, 1),
woosh.Token(woosh.COMMENT, '# See _hash_action (below) for a coded version of this table.', 152, 0, 152, 61),
woosh.Token(woosh.COMMENT, '# Raised when an attempt is made to modify a frozen class.', 155, 0, 155, 58),
woosh.Token(woosh.NAME, 'class', 156, 0, 156, 5),
woosh.Token(woosh.NAME, 'FrozenInstanceError', 156, 6, 156, 25),
woosh.Token(woosh.OP, '(', 156, 25, 156, 26),
woosh.Token(woosh.NAME, 'AttributeError', 156, 26, 156, 40),
woosh.Token(woosh.OP, ')', 156, 40, 156, 41),
woosh.Token(woosh.OP, ':', 156, 41, 156, 42),
woosh.Token(woosh.NAME, 'pass', 156, 43, 156, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 47, 157, 0),
woosh.Token(woosh.COMMENT, '# A sentinel object for default values to signal that a default', 158, 0, 158, 63),
woosh.Token(woosh.COMMENT, '# factory will be used.  This is given a nice repr() which will appear', 159, 0, 159, 70),
woosh.Token(woosh.COMMENT, "# in the function signature of dataclasses' constructors.", 160, 0, 160, 57),
woosh.Token(woosh.NAME, 'class', 161, 0, 161, 5),
woosh.Token(woosh.NAME, '_HAS_DEFAULT_FACTORY_CLASS', 161, 6, 161, 32),
woosh.Token(woosh.OP, ':', 161, 32, 161, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 161, 33, 162, 0),
woosh.Token(woosh.INDENT, '    ', 162, 0, 162, 4),
woosh.Token(woosh.NAME, 'def', 162, 4, 162, 7),
woosh.Token(woosh.NAME, '__repr__', 162, 8, 162, 16),
woosh.Token(woosh.OP, '(', 162, 16, 162, 17),
woosh.Token(woosh.NAME, 'self', 162, 17, 162, 21),
woosh.Token(woosh.OP, ')', 162, 21, 162, 22),
woosh.Token(woosh.OP, ':', 162, 22, 162, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 23, 163, 0),
woosh.Token(woosh.INDENT, '        ', 163, 0, 163, 8),
woosh.Token(woosh.NAME, 'return', 163, 8, 163, 14),
woosh.Token(woosh.STRING, "'<factory>'", 163, 15, 163, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 26, 164, 0),
woosh.Token(woosh.DEDENT, '', 164, 0, 164, 0),
woosh.Token(woosh.DEDENT, '', 164, 0, 164, 0),
woosh.Token(woosh.NAME, '_HAS_DEFAULT_FACTORY', 164, 0, 164, 20),
woosh.Token(woosh.OP, '=', 164, 21, 164, 22),
woosh.Token(woosh.NAME, '_HAS_DEFAULT_FACTORY_CLASS', 164, 23, 164, 49),
woosh.Token(woosh.OP, '(', 164, 49, 164, 50),
woosh.Token(woosh.OP, ')', 164, 50, 164, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 51, 165, 0),
woosh.Token(woosh.COMMENT, '# A sentinel object to detect if a parameter is supplied or not.  Use', 166, 0, 166, 69),
woosh.Token(woosh.COMMENT, '# a class to give it a better repr.', 167, 0, 167, 35),
woosh.Token(woosh.NAME, 'class', 168, 0, 168, 5),
woosh.Token(woosh.NAME, '_MISSING_TYPE', 168, 6, 168, 19),
woosh.Token(woosh.OP, ':', 168, 19, 168, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 20, 169, 0),
woosh.Token(woosh.INDENT, '    ', 169, 0, 169, 4),
woosh.Token(woosh.NAME, 'pass', 169, 4, 169, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 8, 170, 0),
woosh.Token(woosh.DEDENT, '', 170, 0, 170, 0),
woosh.Token(woosh.NAME, 'MISSING', 170, 0, 170, 7),
woosh.Token(woosh.OP, '=', 170, 8, 170, 9),
woosh.Token(woosh.NAME, '_MISSING_TYPE', 170, 10, 170, 23),
woosh.Token(woosh.OP, '(', 170, 23, 170, 24),
woosh.Token(woosh.OP, ')', 170, 24, 170, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 25, 171, 0),
woosh.Token(woosh.COMMENT, '# Since most per-field metadata will be unused, create an empty', 172, 0, 172, 63),
woosh.Token(woosh.COMMENT, '# read-only proxy that can be shared among all fields.', 173, 0, 173, 54),
woosh.Token(woosh.NAME, '_EMPTY_METADATA', 174, 0, 174, 15),
woosh.Token(woosh.OP, '=', 174, 16, 174, 17),
woosh.Token(woosh.NAME, 'types', 174, 18, 174, 23),
woosh.Token(woosh.OP, '.', 174, 23, 174, 24),
woosh.Token(woosh.NAME, 'MappingProxyType', 174, 24, 174, 40),
woosh.Token(woosh.OP, '(', 174, 40, 174, 41),
woosh.Token(woosh.OP, '{', 174, 41, 174, 42),
woosh.Token(woosh.OP, '}', 174, 42, 174, 43),
woosh.Token(woosh.OP, ')', 174, 43, 174, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 44, 175, 0),
woosh.Token(woosh.COMMENT, '# Markers for the various kinds of fields and pseudo-fields.', 176, 0, 176, 60),
woosh.Token(woosh.NAME, 'class', 177, 0, 177, 5),
woosh.Token(woosh.NAME, '_FIELD_BASE', 177, 6, 177, 17),
woosh.Token(woosh.OP, ':', 177, 17, 177, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 18, 178, 0),
woosh.Token(woosh.INDENT, '    ', 178, 0, 178, 4),
woosh.Token(woosh.NAME, 'def', 178, 4, 178, 7),
woosh.Token(woosh.NAME, '__init__', 178, 8, 178, 16),
woosh.Token(woosh.OP, '(', 178, 16, 178, 17),
woosh.Token(woosh.NAME, 'self', 178, 17, 178, 21),
woosh.Token(woosh.OP, ',', 178, 21, 178, 22),
woosh.Token(woosh.NAME, 'name', 178, 23, 178, 27),
woosh.Token(woosh.OP, ')', 178, 27, 178, 28),
woosh.Token(woosh.OP, ':', 178, 28, 178, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 29, 179, 0),
woosh.Token(woosh.INDENT, '        ', 179, 0, 179, 8),
woosh.Token(woosh.NAME, 'self', 179, 8, 179, 12),
woosh.Token(woosh.OP, '.', 179, 12, 179, 13),
woosh.Token(woosh.NAME, 'name', 179, 13, 179, 17),
woosh.Token(woosh.OP, '=', 179, 18, 179, 19),
woosh.Token(woosh.NAME, 'name', 179, 20, 179, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 24, 180, 0),
woosh.Token(woosh.DEDENT, '    ', 180, 0, 180, 4),
woosh.Token(woosh.NAME, 'def', 180, 4, 180, 7),
woosh.Token(woosh.NAME, '__repr__', 180, 8, 180, 16),
woosh.Token(woosh.OP, '(', 180, 16, 180, 17),
woosh.Token(woosh.NAME, 'self', 180, 17, 180, 21),
woosh.Token(woosh.OP, ')', 180, 21, 180, 22),
woosh.Token(woosh.OP, ':', 180, 22, 180, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 23, 181, 0),
woosh.Token(woosh.INDENT, '        ', 181, 0, 181, 8),
woosh.Token(woosh.NAME, 'return', 181, 8, 181, 14),
woosh.Token(woosh.NAME, 'self', 181, 15, 181, 19),
woosh.Token(woosh.OP, '.', 181, 19, 181, 20),
woosh.Token(woosh.NAME, 'name', 181, 20, 181, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 24, 182, 0),
woosh.Token(woosh.DEDENT, '', 182, 0, 182, 0),
woosh.Token(woosh.DEDENT, '', 182, 0, 182, 0),
woosh.Token(woosh.NAME, '_FIELD', 182, 0, 182, 6),
woosh.Token(woosh.OP, '=', 182, 7, 182, 8),
woosh.Token(woosh.NAME, '_FIELD_BASE', 182, 9, 182, 20),
woosh.Token(woosh.OP, '(', 182, 20, 182, 21),
woosh.Token(woosh.STRING, "'_FIELD'", 182, 21, 182, 29),
woosh.Token(woosh.OP, ')', 182, 29, 182, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 30, 183, 0),
woosh.Token(woosh.NAME, '_FIELD_CLASSVAR', 183, 0, 183, 15),
woosh.Token(woosh.OP, '=', 183, 16, 183, 17),
woosh.Token(woosh.NAME, '_FIELD_BASE', 183, 18, 183, 29),
woosh.Token(woosh.OP, '(', 183, 29, 183, 30),
woosh.Token(woosh.STRING, "'_FIELD_CLASSVAR'", 183, 30, 183, 47),
woosh.Token(woosh.OP, ')', 183, 47, 183, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 48, 184, 0),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 184, 0, 184, 14),
woosh.Token(woosh.OP, '=', 184, 15, 184, 16),
woosh.Token(woosh.NAME, '_FIELD_BASE', 184, 17, 184, 28),
woosh.Token(woosh.OP, '(', 184, 28, 184, 29),
woosh.Token(woosh.STRING, "'_FIELD_INITVAR'", 184, 29, 184, 45),
woosh.Token(woosh.OP, ')', 184, 45, 184, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 46, 185, 0),
woosh.Token(woosh.COMMENT, '# The name of an attribute on the class where we store the Field', 186, 0, 186, 64),
woosh.Token(woosh.COMMENT, '# objects.  Also used to check if a class is a Data Class.', 187, 0, 187, 58),
woosh.Token(woosh.NAME, '_FIELDS', 188, 0, 188, 7),
woosh.Token(woosh.OP, '=', 188, 8, 188, 9),
woosh.Token(woosh.STRING, "'__dataclass_fields__'", 188, 10, 188, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 32, 189, 0),
woosh.Token(woosh.COMMENT, '# The name of an attribute on the class that stores the parameters to', 190, 0, 190, 69),
woosh.Token(woosh.COMMENT, '# @dataclass.', 191, 0, 191, 13),
woosh.Token(woosh.NAME, '_PARAMS', 192, 0, 192, 7),
woosh.Token(woosh.OP, '=', 192, 8, 192, 9),
woosh.Token(woosh.STRING, "'__dataclass_params__'", 192, 10, 192, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 32, 193, 0),
woosh.Token(woosh.COMMENT, '# The name of the function, that if it exists, is called at the end of', 194, 0, 194, 70),
woosh.Token(woosh.COMMENT, '# __init__.', 195, 0, 195, 11),
woosh.Token(woosh.NAME, '_POST_INIT_NAME', 196, 0, 196, 15),
woosh.Token(woosh.OP, '=', 196, 16, 196, 17),
woosh.Token(woosh.STRING, "'__post_init__'", 196, 18, 196, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 33, 197, 0),
woosh.Token(woosh.COMMENT, '# String regex that string annotations for ClassVar or InitVar must match.', 198, 0, 198, 74),
woosh.Token(woosh.COMMENT, '# Allows "identifier.identifier[" or "identifier[".', 199, 0, 199, 51),
woosh.Token(woosh.COMMENT, '# https://bugs.python.org/issue33453 for details.', 200, 0, 200, 49),
woosh.Token(woosh.NAME, '_MODULE_IDENTIFIER_RE', 201, 0, 201, 21),
woosh.Token(woosh.OP, '=', 201, 22, 201, 23),
woosh.Token(woosh.NAME, 're', 201, 24, 201, 26),
woosh.Token(woosh.OP, '.', 201, 26, 201, 27),
woosh.Token(woosh.NAME, 'compile', 201, 27, 201, 34),
woosh.Token(woosh.OP, '(', 201, 34, 201, 35),
woosh.Token(woosh.STRING, "r'^(?:\\s*(\\w+)\\s*\\.)?\\s*(\\w+)'", 201, 35, 201, 65),
woosh.Token(woosh.OP, ')', 201, 65, 201, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 66, 202, 0),
woosh.Token(woosh.NAME, 'class', 203, 0, 203, 5),
woosh.Token(woosh.NAME, 'InitVar', 203, 6, 203, 13),
woosh.Token(woosh.OP, ':', 203, 13, 203, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 14, 204, 0),
woosh.Token(woosh.INDENT, '    ', 204, 0, 204, 4),
woosh.Token(woosh.NAME, '__slots__', 204, 4, 204, 13),
woosh.Token(woosh.OP, '=', 204, 14, 204, 15),
woosh.Token(woosh.OP, '(', 204, 16, 204, 17),
woosh.Token(woosh.STRING, "'type'", 204, 17, 204, 23),
woosh.Token(woosh.OP, ',', 204, 23, 204, 24),
woosh.Token(woosh.OP, ')', 204, 25, 204, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 26, 205, 0),
woosh.Token(woosh.NAME, 'def', 206, 4, 206, 7),
woosh.Token(woosh.NAME, '__init__', 206, 8, 206, 16),
woosh.Token(woosh.OP, '(', 206, 16, 206, 17),
woosh.Token(woosh.NAME, 'self', 206, 17, 206, 21),
woosh.Token(woosh.OP, ',', 206, 21, 206, 22),
woosh.Token(woosh.NAME, 'type', 206, 23, 206, 27),
woosh.Token(woosh.OP, ')', 206, 27, 206, 28),
woosh.Token(woosh.OP, ':', 206, 28, 206, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 29, 207, 0),
woosh.Token(woosh.INDENT, '        ', 207, 0, 207, 8),
woosh.Token(woosh.NAME, 'self', 207, 8, 207, 12),
woosh.Token(woosh.OP, '.', 207, 12, 207, 13),
woosh.Token(woosh.NAME, 'type', 207, 13, 207, 17),
woosh.Token(woosh.OP, '=', 207, 18, 207, 19),
woosh.Token(woosh.NAME, 'type', 207, 20, 207, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 24, 208, 0),
woosh.Token(woosh.DEDENT, '    ', 209, 0, 209, 4),
woosh.Token(woosh.NAME, 'def', 209, 4, 209, 7),
woosh.Token(woosh.NAME, '__repr__', 209, 8, 209, 16),
woosh.Token(woosh.OP, '(', 209, 16, 209, 17),
woosh.Token(woosh.NAME, 'self', 209, 17, 209, 21),
woosh.Token(woosh.OP, ')', 209, 21, 209, 22),
woosh.Token(woosh.OP, ':', 209, 22, 209, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 23, 210, 0),
woosh.Token(woosh.INDENT, '        ', 210, 0, 210, 8),
woosh.Token(woosh.NAME, 'if', 210, 8, 210, 10),
woosh.Token(woosh.NAME, 'isinstance', 210, 11, 210, 21),
woosh.Token(woosh.OP, '(', 210, 21, 210, 22),
woosh.Token(woosh.NAME, 'self', 210, 22, 210, 26),
woosh.Token(woosh.OP, '.', 210, 26, 210, 27),
woosh.Token(woosh.NAME, 'type', 210, 27, 210, 31),
woosh.Token(woosh.OP, ',', 210, 31, 210, 32),
woosh.Token(woosh.NAME, 'type', 210, 33, 210, 37),
woosh.Token(woosh.OP, ')', 210, 37, 210, 38),
woosh.Token(woosh.OP, ':', 210, 38, 210, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 39, 211, 0),
woosh.Token(woosh.INDENT, '            ', 211, 0, 211, 12),
woosh.Token(woosh.NAME, 'type_name', 211, 12, 211, 21),
woosh.Token(woosh.OP, '=', 211, 22, 211, 23),
woosh.Token(woosh.NAME, 'self', 211, 24, 211, 28),
woosh.Token(woosh.OP, '.', 211, 28, 211, 29),
woosh.Token(woosh.NAME, 'type', 211, 29, 211, 33),
woosh.Token(woosh.OP, '.', 211, 33, 211, 34),
woosh.Token(woosh.NAME, '__name__', 211, 34, 211, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 42, 212, 0),
woosh.Token(woosh.DEDENT, '        ', 212, 0, 212, 8),
woosh.Token(woosh.NAME, 'else', 212, 8, 212, 12),
woosh.Token(woosh.OP, ':', 212, 12, 212, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 13, 213, 0),
woosh.Token(woosh.COMMENT, '# typing objects, e.g. List[int]', 213, 12, 213, 44),
woosh.Token(woosh.INDENT, '            ', 214, 0, 214, 12),
woosh.Token(woosh.NAME, 'type_name', 214, 12, 214, 21),
woosh.Token(woosh.OP, '=', 214, 22, 214, 23),
woosh.Token(woosh.NAME, 'repr', 214, 24, 214, 28),
woosh.Token(woosh.OP, '(', 214, 28, 214, 29),
woosh.Token(woosh.NAME, 'self', 214, 29, 214, 33),
woosh.Token(woosh.OP, '.', 214, 33, 214, 34),
woosh.Token(woosh.NAME, 'type', 214, 34, 214, 38),
woosh.Token(woosh.OP, ')', 214, 38, 214, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 39, 215, 0),
woosh.Token(woosh.DEDENT, '        ', 215, 0, 215, 8),
woosh.Token(woosh.NAME, 'return', 215, 8, 215, 14),
woosh.Token(woosh.STRING, "f'dataclasses.InitVar[{type_name}]'", 215, 15, 215, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 50, 216, 0),
woosh.Token(woosh.DEDENT, '    ', 217, 0, 217, 4),
woosh.Token(woosh.NAME, 'def', 217, 4, 217, 7),
woosh.Token(woosh.NAME, '__class_getitem__', 217, 8, 217, 25),
woosh.Token(woosh.OP, '(', 217, 25, 217, 26),
woosh.Token(woosh.NAME, 'cls', 217, 26, 217, 29),
woosh.Token(woosh.OP, ',', 217, 29, 217, 30),
woosh.Token(woosh.NAME, 'type', 217, 31, 217, 35),
woosh.Token(woosh.OP, ')', 217, 35, 217, 36),
woosh.Token(woosh.OP, ':', 217, 36, 217, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 37, 218, 0),
woosh.Token(woosh.INDENT, '        ', 218, 0, 218, 8),
woosh.Token(woosh.NAME, 'return', 218, 8, 218, 14),
woosh.Token(woosh.NAME, 'InitVar', 218, 15, 218, 22),
woosh.Token(woosh.OP, '(', 218, 22, 218, 23),
woosh.Token(woosh.NAME, 'type', 218, 23, 218, 27),
woosh.Token(woosh.OP, ')', 218, 27, 218, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 28, 219, 0),
woosh.Token(woosh.COMMENT, '# Instances of Field are only ever created from within this module,', 221, 0, 221, 67),
woosh.Token(woosh.COMMENT, '# and only from the field() function, although Field instances are', 222, 0, 222, 66),
woosh.Token(woosh.COMMENT, '# exposed externally as (conceptually) read-only objects.', 223, 0, 223, 57),
woosh.Token(woosh.COMMENT, '#', 224, 0, 224, 1),
woosh.Token(woosh.COMMENT, '# name and type are filled in after the fact, not in __init__.', 225, 0, 225, 62),
woosh.Token(woosh.COMMENT, "# They're not known at the time this class is instantiated, but it's", 226, 0, 226, 68),
woosh.Token(woosh.COMMENT, "# convenient if they're available later.", 227, 0, 227, 40),
woosh.Token(woosh.COMMENT, '#', 228, 0, 228, 1),
woosh.Token(woosh.COMMENT, '# When cls._FIELDS is filled in with a list of Field objects, the name', 229, 0, 229, 70),
woosh.Token(woosh.COMMENT, '# and type fields will have been populated.', 230, 0, 230, 43),
woosh.Token(woosh.DEDENT, '', 231, 0, 231, 0),
woosh.Token(woosh.DEDENT, '', 231, 0, 231, 0),
woosh.Token(woosh.NAME, 'class', 231, 0, 231, 5),
woosh.Token(woosh.NAME, 'Field', 231, 6, 231, 11),
woosh.Token(woosh.OP, ':', 231, 11, 231, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 12, 232, 0),
woosh.Token(woosh.INDENT, '    ', 232, 0, 232, 4),
woosh.Token(woosh.NAME, '__slots__', 232, 4, 232, 13),
woosh.Token(woosh.OP, '=', 232, 14, 232, 15),
woosh.Token(woosh.OP, '(', 232, 16, 232, 17),
woosh.Token(woosh.STRING, "'name'", 232, 17, 232, 23),
woosh.Token(woosh.OP, ',', 232, 23, 232, 24),
woosh.Token(woosh.STRING, "'type'", 233, 17, 233, 23),
woosh.Token(woosh.OP, ',', 233, 23, 233, 24),
woosh.Token(woosh.STRING, "'default'", 234, 17, 234, 26),
woosh.Token(woosh.OP, ',', 234, 26, 234, 27),
woosh.Token(woosh.STRING, "'default_factory'", 235, 17, 235, 34),
woosh.Token(woosh.OP, ',', 235, 34, 235, 35),
woosh.Token(woosh.STRING, "'repr'", 236, 17, 236, 23),
woosh.Token(woosh.OP, ',', 236, 23, 236, 24),
woosh.Token(woosh.STRING, "'hash'", 237, 17, 237, 23),
woosh.Token(woosh.OP, ',', 237, 23, 237, 24),
woosh.Token(woosh.STRING, "'init'", 238, 17, 238, 23),
woosh.Token(woosh.OP, ',', 238, 23, 238, 24),
woosh.Token(woosh.STRING, "'compare'", 239, 17, 239, 26),
woosh.Token(woosh.OP, ',', 239, 26, 239, 27),
woosh.Token(woosh.STRING, "'metadata'", 240, 17, 240, 27),
woosh.Token(woosh.OP, ',', 240, 27, 240, 28),
woosh.Token(woosh.STRING, "'_field_type'", 241, 17, 241, 30),
woosh.Token(woosh.OP, ',', 241, 30, 241, 31),
woosh.Token(woosh.COMMENT, '# Private: not to be used by user code.', 241, 33, 241, 72),
woosh.Token(woosh.OP, ')', 242, 17, 242, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 18, 243, 0),
woosh.Token(woosh.NAME, 'def', 244, 4, 244, 7),
woosh.Token(woosh.NAME, '__init__', 244, 8, 244, 16),
woosh.Token(woosh.OP, '(', 244, 16, 244, 17),
woosh.Token(woosh.NAME, 'self', 244, 17, 244, 21),
woosh.Token(woosh.OP, ',', 244, 21, 244, 22),
woosh.Token(woosh.NAME, 'default', 244, 23, 244, 30),
woosh.Token(woosh.OP, ',', 244, 30, 244, 31),
woosh.Token(woosh.NAME, 'default_factory', 244, 32, 244, 47),
woosh.Token(woosh.OP, ',', 244, 47, 244, 48),
woosh.Token(woosh.NAME, 'init', 244, 49, 244, 53),
woosh.Token(woosh.OP, ',', 244, 53, 244, 54),
woosh.Token(woosh.NAME, 'repr', 244, 55, 244, 59),
woosh.Token(woosh.OP, ',', 244, 59, 244, 60),
woosh.Token(woosh.NAME, 'hash', 244, 61, 244, 65),
woosh.Token(woosh.OP, ',', 244, 65, 244, 66),
woosh.Token(woosh.NAME, 'compare', 244, 67, 244, 74),
woosh.Token(woosh.OP, ',', 244, 74, 244, 75),
woosh.Token(woosh.NAME, 'metadata', 245, 17, 245, 25),
woosh.Token(woosh.OP, ')', 245, 25, 245, 26),
woosh.Token(woosh.OP, ':', 245, 26, 245, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 27, 246, 0),
woosh.Token(woosh.INDENT, '        ', 246, 0, 246, 8),
woosh.Token(woosh.NAME, 'self', 246, 8, 246, 12),
woosh.Token(woosh.OP, '.', 246, 12, 246, 13),
woosh.Token(woosh.NAME, 'name', 246, 13, 246, 17),
woosh.Token(woosh.OP, '=', 246, 18, 246, 19),
woosh.Token(woosh.NAME, 'None', 246, 20, 246, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 24, 247, 0),
woosh.Token(woosh.NAME, 'self', 247, 8, 247, 12),
woosh.Token(woosh.OP, '.', 247, 12, 247, 13),
woosh.Token(woosh.NAME, 'type', 247, 13, 247, 17),
woosh.Token(woosh.OP, '=', 247, 18, 247, 19),
woosh.Token(woosh.NAME, 'None', 247, 20, 247, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 24, 248, 0),
woosh.Token(woosh.NAME, 'self', 248, 8, 248, 12),
woosh.Token(woosh.OP, '.', 248, 12, 248, 13),
woosh.Token(woosh.NAME, 'default', 248, 13, 248, 20),
woosh.Token(woosh.OP, '=', 248, 21, 248, 22),
woosh.Token(woosh.NAME, 'default', 248, 23, 248, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 30, 249, 0),
woosh.Token(woosh.NAME, 'self', 249, 8, 249, 12),
woosh.Token(woosh.OP, '.', 249, 12, 249, 13),
woosh.Token(woosh.NAME, 'default_factory', 249, 13, 249, 28),
woosh.Token(woosh.OP, '=', 249, 29, 249, 30),
woosh.Token(woosh.NAME, 'default_factory', 249, 31, 249, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 46, 250, 0),
woosh.Token(woosh.NAME, 'self', 250, 8, 250, 12),
woosh.Token(woosh.OP, '.', 250, 12, 250, 13),
woosh.Token(woosh.NAME, 'init', 250, 13, 250, 17),
woosh.Token(woosh.OP, '=', 250, 18, 250, 19),
woosh.Token(woosh.NAME, 'init', 250, 20, 250, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 24, 251, 0),
woosh.Token(woosh.NAME, 'self', 251, 8, 251, 12),
woosh.Token(woosh.OP, '.', 251, 12, 251, 13),
woosh.Token(woosh.NAME, 'repr', 251, 13, 251, 17),
woosh.Token(woosh.OP, '=', 251, 18, 251, 19),
woosh.Token(woosh.NAME, 'repr', 251, 20, 251, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 24, 252, 0),
woosh.Token(woosh.NAME, 'self', 252, 8, 252, 12),
woosh.Token(woosh.OP, '.', 252, 12, 252, 13),
woosh.Token(woosh.NAME, 'hash', 252, 13, 252, 17),
woosh.Token(woosh.OP, '=', 252, 18, 252, 19),
woosh.Token(woosh.NAME, 'hash', 252, 20, 252, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 24, 253, 0),
woosh.Token(woosh.NAME, 'self', 253, 8, 253, 12),
woosh.Token(woosh.OP, '.', 253, 12, 253, 13),
woosh.Token(woosh.NAME, 'compare', 253, 13, 253, 20),
woosh.Token(woosh.OP, '=', 253, 21, 253, 22),
woosh.Token(woosh.NAME, 'compare', 253, 23, 253, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 253, 30, 254, 0),
woosh.Token(woosh.NAME, 'self', 254, 8, 254, 12),
woosh.Token(woosh.OP, '.', 254, 12, 254, 13),
woosh.Token(woosh.NAME, 'metadata', 254, 13, 254, 21),
woosh.Token(woosh.OP, '=', 254, 22, 254, 23),
woosh.Token(woosh.OP, '(', 254, 24, 254, 25),
woosh.Token(woosh.NAME, '_EMPTY_METADATA', 254, 25, 254, 40),
woosh.Token(woosh.NAME, 'if', 255, 25, 255, 27),
woosh.Token(woosh.NAME, 'metadata', 255, 28, 255, 36),
woosh.Token(woosh.NAME, 'is', 255, 37, 255, 39),
woosh.Token(woosh.NAME, 'None', 255, 40, 255, 44),
woosh.Token(woosh.NAME, 'else', 255, 45, 255, 49),
woosh.Token(woosh.NAME, 'types', 256, 25, 256, 30),
woosh.Token(woosh.OP, '.', 256, 30, 256, 31),
woosh.Token(woosh.NAME, 'MappingProxyType', 256, 31, 256, 47),
woosh.Token(woosh.OP, '(', 256, 47, 256, 48),
woosh.Token(woosh.NAME, 'metadata', 256, 48, 256, 56),
woosh.Token(woosh.OP, ')', 256, 56, 256, 57),
woosh.Token(woosh.OP, ')', 256, 57, 256, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 58, 257, 0),
woosh.Token(woosh.NAME, 'self', 257, 8, 257, 12),
woosh.Token(woosh.OP, '.', 257, 12, 257, 13),
woosh.Token(woosh.NAME, '_field_type', 257, 13, 257, 24),
woosh.Token(woosh.OP, '=', 257, 25, 257, 26),
woosh.Token(woosh.NAME, 'None', 257, 27, 257, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 31, 258, 0),
woosh.Token(woosh.DEDENT, '    ', 259, 0, 259, 4),
woosh.Token(woosh.NAME, 'def', 259, 4, 259, 7),
woosh.Token(woosh.NAME, '__repr__', 259, 8, 259, 16),
woosh.Token(woosh.OP, '(', 259, 16, 259, 17),
woosh.Token(woosh.NAME, 'self', 259, 17, 259, 21),
woosh.Token(woosh.OP, ')', 259, 21, 259, 22),
woosh.Token(woosh.OP, ':', 259, 22, 259, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 23, 260, 0),
woosh.Token(woosh.INDENT, '        ', 260, 0, 260, 8),
woosh.Token(woosh.NAME, 'return', 260, 8, 260, 14),
woosh.Token(woosh.OP, '(', 260, 15, 260, 16),
woosh.Token(woosh.STRING, "'Field('", 260, 16, 260, 24),
woosh.Token(woosh.STRING, "f'name={self.name!r},'", 261, 16, 261, 38),
woosh.Token(woosh.STRING, "f'type={self.type!r},'", 262, 16, 262, 38),
woosh.Token(woosh.STRING, "f'default={self.default!r},'", 263, 16, 263, 44),
woosh.Token(woosh.STRING, "f'default_factory={self.default_factory!r},'", 264, 16, 264, 60),
woosh.Token(woosh.STRING, "f'init={self.init!r},'", 265, 16, 265, 38),
woosh.Token(woosh.STRING, "f'repr={self.repr!r},'", 266, 16, 266, 38),
woosh.Token(woosh.STRING, "f'hash={self.hash!r},'", 267, 16, 267, 38),
woosh.Token(woosh.STRING, "f'compare={self.compare!r},'", 268, 16, 268, 44),
woosh.Token(woosh.STRING, "f'metadata={self.metadata!r},'", 269, 16, 269, 46),
woosh.Token(woosh.STRING, "f'_field_type={self._field_type}'", 270, 16, 270, 49),
woosh.Token(woosh.STRING, "')'", 271, 16, 271, 19),
woosh.Token(woosh.OP, ')', 271, 19, 271, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 20, 272, 0),
woosh.Token(woosh.COMMENT, '# This is used to support the PEP 487 __set_name__ protocol in the', 273, 4, 273, 70),
woosh.Token(woosh.COMMENT, "# case where we're using a field that contains a descriptor as a", 274, 4, 274, 68),
woosh.Token(woosh.COMMENT, '# default value.  For details on __set_name__, see', 275, 4, 275, 54),
woosh.Token(woosh.COMMENT, '# https://www.python.org/dev/peps/pep-0487/#implementation-details.', 276, 4, 276, 71),
woosh.Token(woosh.COMMENT, '#', 277, 4, 277, 5),
woosh.Token(woosh.COMMENT, '# Note that in _process_class, this Field object is overwritten', 278, 4, 278, 67),
woosh.Token(woosh.COMMENT, '# with the default value, so the end result is a descriptor that', 279, 4, 279, 68),
woosh.Token(woosh.COMMENT, '# had __set_name__ called on it at the right time.', 280, 4, 280, 54),
woosh.Token(woosh.DEDENT, '    ', 281, 0, 281, 4),
woosh.Token(woosh.NAME, 'def', 281, 4, 281, 7),
woosh.Token(woosh.NAME, '__set_name__', 281, 8, 281, 20),
woosh.Token(woosh.OP, '(', 281, 20, 281, 21),
woosh.Token(woosh.NAME, 'self', 281, 21, 281, 25),
woosh.Token(woosh.OP, ',', 281, 25, 281, 26),
woosh.Token(woosh.NAME, 'owner', 281, 27, 281, 32),
woosh.Token(woosh.OP, ',', 281, 32, 281, 33),
woosh.Token(woosh.NAME, 'name', 281, 34, 281, 38),
woosh.Token(woosh.OP, ')', 281, 38, 281, 39),
woosh.Token(woosh.OP, ':', 281, 39, 281, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 40, 282, 0),
woosh.Token(woosh.INDENT, '        ', 282, 0, 282, 8),
woosh.Token(woosh.NAME, 'func', 282, 8, 282, 12),
woosh.Token(woosh.OP, '=', 282, 13, 282, 14),
woosh.Token(woosh.NAME, 'getattr', 282, 15, 282, 22),
woosh.Token(woosh.OP, '(', 282, 22, 282, 23),
woosh.Token(woosh.NAME, 'type', 282, 23, 282, 27),
woosh.Token(woosh.OP, '(', 282, 27, 282, 28),
woosh.Token(woosh.NAME, 'self', 282, 28, 282, 32),
woosh.Token(woosh.OP, '.', 282, 32, 282, 33),
woosh.Token(woosh.NAME, 'default', 282, 33, 282, 40),
woosh.Token(woosh.OP, ')', 282, 40, 282, 41),
woosh.Token(woosh.OP, ',', 282, 41, 282, 42),
woosh.Token(woosh.STRING, "'__set_name__'", 282, 43, 282, 57),
woosh.Token(woosh.OP, ',', 282, 57, 282, 58),
woosh.Token(woosh.NAME, 'None', 282, 59, 282, 63),
woosh.Token(woosh.OP, ')', 282, 63, 282, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 64, 283, 0),
woosh.Token(woosh.NAME, 'if', 283, 8, 283, 10),
woosh.Token(woosh.NAME, 'func', 283, 11, 283, 15),
woosh.Token(woosh.OP, ':', 283, 15, 283, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 283, 16, 284, 0),
woosh.Token(woosh.COMMENT, '# There is a __set_name__ method on the descriptor, call', 284, 12, 284, 68),
woosh.Token(woosh.COMMENT, '# it.', 285, 12, 285, 17),
woosh.Token(woosh.INDENT, '            ', 286, 0, 286, 12),
woosh.Token(woosh.NAME, 'func', 286, 12, 286, 16),
woosh.Token(woosh.OP, '(', 286, 16, 286, 17),
woosh.Token(woosh.NAME, 'self', 286, 17, 286, 21),
woosh.Token(woosh.OP, '.', 286, 21, 286, 22),
woosh.Token(woosh.NAME, 'default', 286, 22, 286, 29),
woosh.Token(woosh.OP, ',', 286, 29, 286, 30),
woosh.Token(woosh.NAME, 'owner', 286, 31, 286, 36),
woosh.Token(woosh.OP, ',', 286, 36, 286, 37),
woosh.Token(woosh.NAME, 'name', 286, 38, 286, 42),
woosh.Token(woosh.OP, ')', 286, 42, 286, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 43, 287, 0),
woosh.Token(woosh.DEDENT, '    ', 288, 0, 288, 4),
woosh.Token(woosh.DEDENT, '', 288, 4, 288, 4),
woosh.Token(woosh.NAME, '__class_getitem__', 288, 4, 288, 21),
woosh.Token(woosh.OP, '=', 288, 22, 288, 23),
woosh.Token(woosh.NAME, 'classmethod', 288, 24, 288, 35),
woosh.Token(woosh.OP, '(', 288, 35, 288, 36),
woosh.Token(woosh.NAME, 'GenericAlias', 288, 36, 288, 48),
woosh.Token(woosh.OP, ')', 288, 48, 288, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 288, 49, 289, 0),
woosh.Token(woosh.DEDENT, '', 291, 0, 291, 0),
woosh.Token(woosh.NAME, 'class', 291, 0, 291, 5),
woosh.Token(woosh.NAME, '_DataclassParams', 291, 6, 291, 22),
woosh.Token(woosh.OP, ':', 291, 22, 291, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 23, 292, 0),
woosh.Token(woosh.INDENT, '    ', 292, 0, 292, 4),
woosh.Token(woosh.NAME, '__slots__', 292, 4, 292, 13),
woosh.Token(woosh.OP, '=', 292, 14, 292, 15),
woosh.Token(woosh.OP, '(', 292, 16, 292, 17),
woosh.Token(woosh.STRING, "'init'", 292, 17, 292, 23),
woosh.Token(woosh.OP, ',', 292, 23, 292, 24),
woosh.Token(woosh.STRING, "'repr'", 293, 17, 293, 23),
woosh.Token(woosh.OP, ',', 293, 23, 293, 24),
woosh.Token(woosh.STRING, "'eq'", 294, 17, 294, 21),
woosh.Token(woosh.OP, ',', 294, 21, 294, 22),
woosh.Token(woosh.STRING, "'order'", 295, 17, 295, 24),
woosh.Token(woosh.OP, ',', 295, 24, 295, 25),
woosh.Token(woosh.STRING, "'unsafe_hash'", 296, 17, 296, 30),
woosh.Token(woosh.OP, ',', 296, 30, 296, 31),
woosh.Token(woosh.STRING, "'frozen'", 297, 17, 297, 25),
woosh.Token(woosh.OP, ',', 297, 25, 297, 26),
woosh.Token(woosh.OP, ')', 298, 17, 298, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 18, 299, 0),
woosh.Token(woosh.NAME, 'def', 300, 4, 300, 7),
woosh.Token(woosh.NAME, '__init__', 300, 8, 300, 16),
woosh.Token(woosh.OP, '(', 300, 16, 300, 17),
woosh.Token(woosh.NAME, 'self', 300, 17, 300, 21),
woosh.Token(woosh.OP, ',', 300, 21, 300, 22),
woosh.Token(woosh.NAME, 'init', 300, 23, 300, 27),
woosh.Token(woosh.OP, ',', 300, 27, 300, 28),
woosh.Token(woosh.NAME, 'repr', 300, 29, 300, 33),
woosh.Token(woosh.OP, ',', 300, 33, 300, 34),
woosh.Token(woosh.NAME, 'eq', 300, 35, 300, 37),
woosh.Token(woosh.OP, ',', 300, 37, 300, 38),
woosh.Token(woosh.NAME, 'order', 300, 39, 300, 44),
woosh.Token(woosh.OP, ',', 300, 44, 300, 45),
woosh.Token(woosh.NAME, 'unsafe_hash', 300, 46, 300, 57),
woosh.Token(woosh.OP, ',', 300, 57, 300, 58),
woosh.Token(woosh.NAME, 'frozen', 300, 59, 300, 65),
woosh.Token(woosh.OP, ')', 300, 65, 300, 66),
woosh.Token(woosh.OP, ':', 300, 66, 300, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 67, 301, 0),
woosh.Token(woosh.INDENT, '        ', 301, 0, 301, 8),
woosh.Token(woosh.NAME, 'self', 301, 8, 301, 12),
woosh.Token(woosh.OP, '.', 301, 12, 301, 13),
woosh.Token(woosh.NAME, 'init', 301, 13, 301, 17),
woosh.Token(woosh.OP, '=', 301, 18, 301, 19),
woosh.Token(woosh.NAME, 'init', 301, 20, 301, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 301, 24, 302, 0),
woosh.Token(woosh.NAME, 'self', 302, 8, 302, 12),
woosh.Token(woosh.OP, '.', 302, 12, 302, 13),
woosh.Token(woosh.NAME, 'repr', 302, 13, 302, 17),
woosh.Token(woosh.OP, '=', 302, 18, 302, 19),
woosh.Token(woosh.NAME, 'repr', 302, 20, 302, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 302, 24, 303, 0),
woosh.Token(woosh.NAME, 'self', 303, 8, 303, 12),
woosh.Token(woosh.OP, '.', 303, 12, 303, 13),
woosh.Token(woosh.NAME, 'eq', 303, 13, 303, 15),
woosh.Token(woosh.OP, '=', 303, 16, 303, 17),
woosh.Token(woosh.NAME, 'eq', 303, 18, 303, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 20, 304, 0),
woosh.Token(woosh.NAME, 'self', 304, 8, 304, 12),
woosh.Token(woosh.OP, '.', 304, 12, 304, 13),
woosh.Token(woosh.NAME, 'order', 304, 13, 304, 18),
woosh.Token(woosh.OP, '=', 304, 19, 304, 20),
woosh.Token(woosh.NAME, 'order', 304, 21, 304, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 26, 305, 0),
woosh.Token(woosh.NAME, 'self', 305, 8, 305, 12),
woosh.Token(woosh.OP, '.', 305, 12, 305, 13),
woosh.Token(woosh.NAME, 'unsafe_hash', 305, 13, 305, 24),
woosh.Token(woosh.OP, '=', 305, 25, 305, 26),
woosh.Token(woosh.NAME, 'unsafe_hash', 305, 27, 305, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 38, 306, 0),
woosh.Token(woosh.NAME, 'self', 306, 8, 306, 12),
woosh.Token(woosh.OP, '.', 306, 12, 306, 13),
woosh.Token(woosh.NAME, 'frozen', 306, 13, 306, 19),
woosh.Token(woosh.OP, '=', 306, 20, 306, 21),
woosh.Token(woosh.NAME, 'frozen', 306, 22, 306, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 28, 307, 0),
woosh.Token(woosh.DEDENT, '    ', 308, 0, 308, 4),
woosh.Token(woosh.NAME, 'def', 308, 4, 308, 7),
woosh.Token(woosh.NAME, '__repr__', 308, 8, 308, 16),
woosh.Token(woosh.OP, '(', 308, 16, 308, 17),
woosh.Token(woosh.NAME, 'self', 308, 17, 308, 21),
woosh.Token(woosh.OP, ')', 308, 21, 308, 22),
woosh.Token(woosh.OP, ':', 308, 22, 308, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 23, 309, 0),
woosh.Token(woosh.INDENT, '        ', 309, 0, 309, 8),
woosh.Token(woosh.NAME, 'return', 309, 8, 309, 14),
woosh.Token(woosh.OP, '(', 309, 15, 309, 16),
woosh.Token(woosh.STRING, "'_DataclassParams('", 309, 16, 309, 35),
woosh.Token(woosh.STRING, "f'init={self.init!r},'", 310, 16, 310, 38),
woosh.Token(woosh.STRING, "f'repr={self.repr!r},'", 311, 16, 311, 38),
woosh.Token(woosh.STRING, "f'eq={self.eq!r},'", 312, 16, 312, 34),
woosh.Token(woosh.STRING, "f'order={self.order!r},'", 313, 16, 313, 40),
woosh.Token(woosh.STRING, "f'unsafe_hash={self.unsafe_hash!r},'", 314, 16, 314, 52),
woosh.Token(woosh.STRING, "f'frozen={self.frozen!r}'", 315, 16, 315, 41),
woosh.Token(woosh.STRING, "')'", 316, 16, 316, 19),
woosh.Token(woosh.OP, ')', 316, 19, 316, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 20, 317, 0),
woosh.Token(woosh.COMMENT, '# This function is used instead of exposing Field creation directly,', 319, 0, 319, 68),
woosh.Token(woosh.COMMENT, '# so that a type checker can be told (via overloads) that this is a', 320, 0, 320, 67),
woosh.Token(woosh.COMMENT, '# function whose type depends on its parameters.', 321, 0, 321, 48),
woosh.Token(woosh.DEDENT, '', 322, 0, 322, 0),
woosh.Token(woosh.DEDENT, '', 322, 0, 322, 0),
woosh.Token(woosh.NAME, 'def', 322, 0, 322, 3),
woosh.Token(woosh.NAME, 'field', 322, 4, 322, 9),
woosh.Token(woosh.OP, '(', 322, 9, 322, 10),
woosh.Token(woosh.OP, '*', 322, 10, 322, 11),
woosh.Token(woosh.OP, ',', 322, 11, 322, 12),
woosh.Token(woosh.NAME, 'default', 322, 13, 322, 20),
woosh.Token(woosh.OP, '=', 322, 20, 322, 21),
woosh.Token(woosh.NAME, 'MISSING', 322, 21, 322, 28),
woosh.Token(woosh.OP, ',', 322, 28, 322, 29),
woosh.Token(woosh.NAME, 'default_factory', 322, 30, 322, 45),
woosh.Token(woosh.OP, '=', 322, 45, 322, 46),
woosh.Token(woosh.NAME, 'MISSING', 322, 46, 322, 53),
woosh.Token(woosh.OP, ',', 322, 53, 322, 54),
woosh.Token(woosh.NAME, 'init', 322, 55, 322, 59),
woosh.Token(woosh.OP, '=', 322, 59, 322, 60),
woosh.Token(woosh.NAME, 'True', 322, 60, 322, 64),
woosh.Token(woosh.OP, ',', 322, 64, 322, 65),
woosh.Token(woosh.NAME, 'repr', 322, 66, 322, 70),
woosh.Token(woosh.OP, '=', 322, 70, 322, 71),
woosh.Token(woosh.NAME, 'True', 322, 71, 322, 75),
woosh.Token(woosh.OP, ',', 322, 75, 322, 76),
woosh.Token(woosh.NAME, 'hash', 323, 10, 323, 14),
woosh.Token(woosh.OP, '=', 323, 14, 323, 15),
woosh.Token(woosh.NAME, 'None', 323, 15, 323, 19),
woosh.Token(woosh.OP, ',', 323, 19, 323, 20),
woosh.Token(woosh.NAME, 'compare', 323, 21, 323, 28),
woosh.Token(woosh.OP, '=', 323, 28, 323, 29),
woosh.Token(woosh.NAME, 'True', 323, 29, 323, 33),
woosh.Token(woosh.OP, ',', 323, 33, 323, 34),
woosh.Token(woosh.NAME, 'metadata', 323, 35, 323, 43),
woosh.Token(woosh.OP, '=', 323, 43, 323, 44),
woosh.Token(woosh.NAME, 'None', 323, 44, 323, 48),
woosh.Token(woosh.OP, ')', 323, 48, 323, 49),
woosh.Token(woosh.OP, ':', 323, 49, 323, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 50, 324, 0),
woosh.Token(woosh.INDENT, '    ', 324, 0, 324, 4),
woosh.Token(woosh.STRING, '"""Return an object to identify dataclass fields.\r\n\r\n    default is the default value of the field.  default_factory is a\r\n    0-argument function called to initialize a field\'s value.  If init\r\n    is True, the field will be a parameter to the class\'s __init__()\r\n    function.  If repr is True, the field will be included in the\r\n    object\'s repr().  If hash is True, the field will be included in\r\n    the object\'s hash().  If compare is True, the field will be used\r\n    in comparison functions.  metadata, if specified, must be a\r\n    mapping which is stored but not otherwise examined by dataclass.\r\n\r\n    It is an error to specify both default and default_factory.\r\n    """', 324, 4, 336, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 7, 337, 0),
woosh.Token(woosh.NAME, 'if', 338, 4, 338, 6),
woosh.Token(woosh.NAME, 'default', 338, 7, 338, 14),
woosh.Token(woosh.NAME, 'is', 338, 15, 338, 17),
woosh.Token(woosh.NAME, 'not', 338, 18, 338, 21),
woosh.Token(woosh.NAME, 'MISSING', 338, 22, 338, 29),
woosh.Token(woosh.NAME, 'and', 338, 30, 338, 33),
woosh.Token(woosh.NAME, 'default_factory', 338, 34, 338, 49),
woosh.Token(woosh.NAME, 'is', 338, 50, 338, 52),
woosh.Token(woosh.NAME, 'not', 338, 53, 338, 56),
woosh.Token(woosh.NAME, 'MISSING', 338, 57, 338, 64),
woosh.Token(woosh.OP, ':', 338, 64, 338, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 338, 65, 339, 0),
woosh.Token(woosh.INDENT, '        ', 339, 0, 339, 8),
woosh.Token(woosh.NAME, 'raise', 339, 8, 339, 13),
woosh.Token(woosh.NAME, 'ValueError', 339, 14, 339, 24),
woosh.Token(woosh.OP, '(', 339, 24, 339, 25),
woosh.Token(woosh.STRING, "'cannot specify both default and default_factory'", 339, 25, 339, 74),
woosh.Token(woosh.OP, ')', 339, 74, 339, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 339, 75, 340, 0),
woosh.Token(woosh.DEDENT, '    ', 340, 0, 340, 4),
woosh.Token(woosh.NAME, 'return', 340, 4, 340, 10),
woosh.Token(woosh.NAME, 'Field', 340, 11, 340, 16),
woosh.Token(woosh.OP, '(', 340, 16, 340, 17),
woosh.Token(woosh.NAME, 'default', 340, 17, 340, 24),
woosh.Token(woosh.OP, ',', 340, 24, 340, 25),
woosh.Token(woosh.NAME, 'default_factory', 340, 26, 340, 41),
woosh.Token(woosh.OP, ',', 340, 41, 340, 42),
woosh.Token(woosh.NAME, 'init', 340, 43, 340, 47),
woosh.Token(woosh.OP, ',', 340, 47, 340, 48),
woosh.Token(woosh.NAME, 'repr', 340, 49, 340, 53),
woosh.Token(woosh.OP, ',', 340, 53, 340, 54),
woosh.Token(woosh.NAME, 'hash', 340, 55, 340, 59),
woosh.Token(woosh.OP, ',', 340, 59, 340, 60),
woosh.Token(woosh.NAME, 'compare', 340, 61, 340, 68),
woosh.Token(woosh.OP, ',', 340, 68, 340, 69),
woosh.Token(woosh.NAME, 'metadata', 341, 17, 341, 25),
woosh.Token(woosh.OP, ')', 341, 25, 341, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 26, 342, 0),
woosh.Token(woosh.DEDENT, '', 344, 0, 344, 0),
woosh.Token(woosh.NAME, 'def', 344, 0, 344, 3),
woosh.Token(woosh.NAME, '_tuple_str', 344, 4, 344, 14),
woosh.Token(woosh.OP, '(', 344, 14, 344, 15),
woosh.Token(woosh.NAME, 'obj_name', 344, 15, 344, 23),
woosh.Token(woosh.OP, ',', 344, 23, 344, 24),
woosh.Token(woosh.NAME, 'fields', 344, 25, 344, 31),
woosh.Token(woosh.OP, ')', 344, 31, 344, 32),
woosh.Token(woosh.OP, ':', 344, 32, 344, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 33, 345, 0),
woosh.Token(woosh.COMMENT, '# Return a string representing each field of obj_name as a tuple', 345, 4, 345, 68),
woosh.Token(woosh.COMMENT, '# member.  So, if fields is [\'x\', \'y\'] and obj_name is "self",', 346, 4, 346, 66),
woosh.Token(woosh.COMMENT, '# return "(self.x,self.y)".', 347, 4, 347, 31),
woosh.Token(woosh.COMMENT, '# Special case for the 0-tuple.', 349, 4, 349, 35),
woosh.Token(woosh.INDENT, '    ', 350, 0, 350, 4),
woosh.Token(woosh.NAME, 'if', 350, 4, 350, 6),
woosh.Token(woosh.NAME, 'not', 350, 7, 350, 10),
woosh.Token(woosh.NAME, 'fields', 350, 11, 350, 17),
woosh.Token(woosh.OP, ':', 350, 17, 350, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 18, 351, 0),
woosh.Token(woosh.INDENT, '        ', 351, 0, 351, 8),
woosh.Token(woosh.NAME, 'return', 351, 8, 351, 14),
woosh.Token(woosh.STRING, "'()'", 351, 15, 351, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 19, 352, 0),
woosh.Token(woosh.COMMENT, '# Note the trailing comma, needed if this turns out to be a 1-tuple.', 352, 4, 352, 72),
woosh.Token(woosh.DEDENT, '    ', 353, 0, 353, 4),
woosh.Token(woosh.NAME, 'return', 353, 4, 353, 10),
woosh.Token(woosh.STRING, 'f\'({",".join([f"{obj_name}.{f.name}" for f in fields])},)\'', 353, 11, 353, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 353, 69, 354, 0),
woosh.Token(woosh.COMMENT, '# This function\'s logic is copied from "recursive_repr" function in', 356, 0, 356, 67),
woosh.Token(woosh.COMMENT, '# reprlib module to avoid dependency.', 357, 0, 357, 37),
woosh.Token(woosh.DEDENT, '', 358, 0, 358, 0),
woosh.Token(woosh.NAME, 'def', 358, 0, 358, 3),
woosh.Token(woosh.NAME, '_recursive_repr', 358, 4, 358, 19),
woosh.Token(woosh.OP, '(', 358, 19, 358, 20),
woosh.Token(woosh.NAME, 'user_function', 358, 20, 358, 33),
woosh.Token(woosh.OP, ')', 358, 33, 358, 34),
woosh.Token(woosh.OP, ':', 358, 34, 358, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 35, 359, 0),
woosh.Token(woosh.COMMENT, '# Decorator to make a repr function return "..." for a recursive', 359, 4, 359, 68),
woosh.Token(woosh.COMMENT, '# call.', 360, 4, 360, 11),
woosh.Token(woosh.INDENT, '    ', 361, 0, 361, 4),
woosh.Token(woosh.NAME, 'repr_running', 361, 4, 361, 16),
woosh.Token(woosh.OP, '=', 361, 17, 361, 18),
woosh.Token(woosh.NAME, 'set', 361, 19, 361, 22),
woosh.Token(woosh.OP, '(', 361, 22, 361, 23),
woosh.Token(woosh.OP, ')', 361, 23, 361, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 24, 362, 0),
woosh.Token(woosh.OP, '@', 363, 4, 363, 5),
woosh.Token(woosh.NAME, 'functools', 363, 5, 363, 14),
woosh.Token(woosh.OP, '.', 363, 14, 363, 15),
woosh.Token(woosh.NAME, 'wraps', 363, 15, 363, 20),
woosh.Token(woosh.OP, '(', 363, 20, 363, 21),
woosh.Token(woosh.NAME, 'user_function', 363, 21, 363, 34),
woosh.Token(woosh.OP, ')', 363, 34, 363, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 35, 364, 0),
woosh.Token(woosh.NAME, 'def', 364, 4, 364, 7),
woosh.Token(woosh.NAME, 'wrapper', 364, 8, 364, 15),
woosh.Token(woosh.OP, '(', 364, 15, 364, 16),
woosh.Token(woosh.NAME, 'self', 364, 16, 364, 20),
woosh.Token(woosh.OP, ')', 364, 20, 364, 21),
woosh.Token(woosh.OP, ':', 364, 21, 364, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 22, 365, 0),
woosh.Token(woosh.INDENT, '        ', 365, 0, 365, 8),
woosh.Token(woosh.NAME, 'key', 365, 8, 365, 11),
woosh.Token(woosh.OP, '=', 365, 12, 365, 13),
woosh.Token(woosh.NAME, 'id', 365, 14, 365, 16),
woosh.Token(woosh.OP, '(', 365, 16, 365, 17),
woosh.Token(woosh.NAME, 'self', 365, 17, 365, 21),
woosh.Token(woosh.OP, ')', 365, 21, 365, 22),
woosh.Token(woosh.OP, ',', 365, 22, 365, 23),
woosh.Token(woosh.NAME, '_thread', 365, 24, 365, 31),
woosh.Token(woosh.OP, '.', 365, 31, 365, 32),
woosh.Token(woosh.NAME, 'get_ident', 365, 32, 365, 41),
woosh.Token(woosh.OP, '(', 365, 41, 365, 42),
woosh.Token(woosh.OP, ')', 365, 42, 365, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 43, 366, 0),
woosh.Token(woosh.NAME, 'if', 366, 8, 366, 10),
woosh.Token(woosh.NAME, 'key', 366, 11, 366, 14),
woosh.Token(woosh.NAME, 'in', 366, 15, 366, 17),
woosh.Token(woosh.NAME, 'repr_running', 366, 18, 366, 30),
woosh.Token(woosh.OP, ':', 366, 30, 366, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 31, 367, 0),
woosh.Token(woosh.INDENT, '            ', 367, 0, 367, 12),
woosh.Token(woosh.NAME, 'return', 367, 12, 367, 18),
woosh.Token(woosh.STRING, "'...'", 367, 19, 367, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 24, 368, 0),
woosh.Token(woosh.DEDENT, '        ', 368, 0, 368, 8),
woosh.Token(woosh.NAME, 'repr_running', 368, 8, 368, 20),
woosh.Token(woosh.OP, '.', 368, 20, 368, 21),
woosh.Token(woosh.NAME, 'add', 368, 21, 368, 24),
woosh.Token(woosh.OP, '(', 368, 24, 368, 25),
woosh.Token(woosh.NAME, 'key', 368, 25, 368, 28),
woosh.Token(woosh.OP, ')', 368, 28, 368, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 29, 369, 0),
woosh.Token(woosh.NAME, 'try', 369, 8, 369, 11),
woosh.Token(woosh.OP, ':', 369, 11, 369, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 12, 370, 0),
woosh.Token(woosh.INDENT, '            ', 370, 0, 370, 12),
woosh.Token(woosh.NAME, 'result', 370, 12, 370, 18),
woosh.Token(woosh.OP, '=', 370, 19, 370, 20),
woosh.Token(woosh.NAME, 'user_function', 370, 21, 370, 34),
woosh.Token(woosh.OP, '(', 370, 34, 370, 35),
woosh.Token(woosh.NAME, 'self', 370, 35, 370, 39),
woosh.Token(woosh.OP, ')', 370, 39, 370, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 40, 371, 0),
woosh.Token(woosh.DEDENT, '        ', 371, 0, 371, 8),
woosh.Token(woosh.NAME, 'finally', 371, 8, 371, 15),
woosh.Token(woosh.OP, ':', 371, 15, 371, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 16, 372, 0),
woosh.Token(woosh.INDENT, '            ', 372, 0, 372, 12),
woosh.Token(woosh.NAME, 'repr_running', 372, 12, 372, 24),
woosh.Token(woosh.OP, '.', 372, 24, 372, 25),
woosh.Token(woosh.NAME, 'discard', 372, 25, 372, 32),
woosh.Token(woosh.OP, '(', 372, 32, 372, 33),
woosh.Token(woosh.NAME, 'key', 372, 33, 372, 36),
woosh.Token(woosh.OP, ')', 372, 36, 372, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 372, 37, 373, 0),
woosh.Token(woosh.DEDENT, '        ', 373, 0, 373, 8),
woosh.Token(woosh.NAME, 'return', 373, 8, 373, 14),
woosh.Token(woosh.NAME, 'result', 373, 15, 373, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 21, 374, 0),
woosh.Token(woosh.DEDENT, '    ', 374, 0, 374, 4),
woosh.Token(woosh.NAME, 'return', 374, 4, 374, 10),
woosh.Token(woosh.NAME, 'wrapper', 374, 11, 374, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 18, 375, 0),
woosh.Token(woosh.DEDENT, '', 377, 0, 377, 0),
woosh.Token(woosh.NAME, 'def', 377, 0, 377, 3),
woosh.Token(woosh.NAME, '_create_fn', 377, 4, 377, 14),
woosh.Token(woosh.OP, '(', 377, 14, 377, 15),
woosh.Token(woosh.NAME, 'name', 377, 15, 377, 19),
woosh.Token(woosh.OP, ',', 377, 19, 377, 20),
woosh.Token(woosh.NAME, 'args', 377, 21, 377, 25),
woosh.Token(woosh.OP, ',', 377, 25, 377, 26),
woosh.Token(woosh.NAME, 'body', 377, 27, 377, 31),
woosh.Token(woosh.OP, ',', 377, 31, 377, 32),
woosh.Token(woosh.OP, '*', 377, 33, 377, 34),
woosh.Token(woosh.OP, ',', 377, 34, 377, 35),
woosh.Token(woosh.NAME, 'globals', 377, 36, 377, 43),
woosh.Token(woosh.OP, '=', 377, 43, 377, 44),
woosh.Token(woosh.NAME, 'None', 377, 44, 377, 48),
woosh.Token(woosh.OP, ',', 377, 48, 377, 49),
woosh.Token(woosh.NAME, 'locals', 377, 50, 377, 56),
woosh.Token(woosh.OP, '=', 377, 56, 377, 57),
woosh.Token(woosh.NAME, 'None', 377, 57, 377, 61),
woosh.Token(woosh.OP, ',', 377, 61, 377, 62),
woosh.Token(woosh.NAME, 'return_type', 378, 15, 378, 26),
woosh.Token(woosh.OP, '=', 378, 26, 378, 27),
woosh.Token(woosh.NAME, 'MISSING', 378, 27, 378, 34),
woosh.Token(woosh.OP, ')', 378, 34, 378, 35),
woosh.Token(woosh.OP, ':', 378, 35, 378, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 36, 379, 0),
woosh.Token(woosh.COMMENT, '# Note that we mutate locals when exec() is called.  Caller', 379, 4, 379, 63),
woosh.Token(woosh.COMMENT, '# beware!  The only callers are internal to this module, so no', 380, 4, 380, 66),
woosh.Token(woosh.COMMENT, '# worries about external callers.', 381, 4, 381, 37),
woosh.Token(woosh.INDENT, '    ', 382, 0, 382, 4),
woosh.Token(woosh.NAME, 'if', 382, 4, 382, 6),
woosh.Token(woosh.NAME, 'locals', 382, 7, 382, 13),
woosh.Token(woosh.NAME, 'is', 382, 14, 382, 16),
woosh.Token(woosh.NAME, 'None', 382, 17, 382, 21),
woosh.Token(woosh.OP, ':', 382, 21, 382, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 22, 383, 0),
woosh.Token(woosh.INDENT, '        ', 383, 0, 383, 8),
woosh.Token(woosh.NAME, 'locals', 383, 8, 383, 14),
woosh.Token(woosh.OP, '=', 383, 15, 383, 16),
woosh.Token(woosh.OP, '{', 383, 17, 383, 18),
woosh.Token(woosh.OP, '}', 383, 18, 383, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 383, 19, 384, 0),
woosh.Token(woosh.DEDENT, '    ', 384, 0, 384, 4),
woosh.Token(woosh.NAME, 'if', 384, 4, 384, 6),
woosh.Token(woosh.STRING, "'BUILTINS'", 384, 7, 384, 17),
woosh.Token(woosh.NAME, 'not', 384, 18, 384, 21),
woosh.Token(woosh.NAME, 'in', 384, 22, 384, 24),
woosh.Token(woosh.NAME, 'locals', 384, 25, 384, 31),
woosh.Token(woosh.OP, ':', 384, 31, 384, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 32, 385, 0),
woosh.Token(woosh.INDENT, '        ', 385, 0, 385, 8),
woosh.Token(woosh.NAME, 'locals', 385, 8, 385, 14),
woosh.Token(woosh.OP, '[', 385, 14, 385, 15),
woosh.Token(woosh.STRING, "'BUILTINS'", 385, 15, 385, 25),
woosh.Token(woosh.OP, ']', 385, 25, 385, 26),
woosh.Token(woosh.OP, '=', 385, 27, 385, 28),
woosh.Token(woosh.NAME, 'builtins', 385, 29, 385, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 37, 386, 0),
woosh.Token(woosh.DEDENT, '    ', 386, 0, 386, 4),
woosh.Token(woosh.NAME, 'return_annotation', 386, 4, 386, 21),
woosh.Token(woosh.OP, '=', 386, 22, 386, 23),
woosh.Token(woosh.STRING, "''", 386, 24, 386, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 26, 387, 0),
woosh.Token(woosh.NAME, 'if', 387, 4, 387, 6),
woosh.Token(woosh.NAME, 'return_type', 387, 7, 387, 18),
woosh.Token(woosh.NAME, 'is', 387, 19, 387, 21),
woosh.Token(woosh.NAME, 'not', 387, 22, 387, 25),
woosh.Token(woosh.NAME, 'MISSING', 387, 26, 387, 33),
woosh.Token(woosh.OP, ':', 387, 33, 387, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 34, 388, 0),
woosh.Token(woosh.INDENT, '        ', 388, 0, 388, 8),
woosh.Token(woosh.NAME, 'locals', 388, 8, 388, 14),
woosh.Token(woosh.OP, '[', 388, 14, 388, 15),
woosh.Token(woosh.STRING, "'_return_type'", 388, 15, 388, 29),
woosh.Token(woosh.OP, ']', 388, 29, 388, 30),
woosh.Token(woosh.OP, '=', 388, 31, 388, 32),
woosh.Token(woosh.NAME, 'return_type', 388, 33, 388, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 388, 44, 389, 0),
woosh.Token(woosh.NAME, 'return_annotation', 389, 8, 389, 25),
woosh.Token(woosh.OP, '=', 389, 26, 389, 27),
woosh.Token(woosh.STRING, "'->_return_type'", 389, 28, 389, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 389, 44, 390, 0),
woosh.Token(woosh.DEDENT, '    ', 390, 0, 390, 4),
woosh.Token(woosh.NAME, 'args', 390, 4, 390, 8),
woosh.Token(woosh.OP, '=', 390, 9, 390, 10),
woosh.Token(woosh.STRING, "','", 390, 11, 390, 14),
woosh.Token(woosh.OP, '.', 390, 14, 390, 15),
woosh.Token(woosh.NAME, 'join', 390, 15, 390, 19),
woosh.Token(woosh.OP, '(', 390, 19, 390, 20),
woosh.Token(woosh.NAME, 'args', 390, 20, 390, 24),
woosh.Token(woosh.OP, ')', 390, 24, 390, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 25, 391, 0),
woosh.Token(woosh.NAME, 'body', 391, 4, 391, 8),
woosh.Token(woosh.OP, '=', 391, 9, 391, 10),
woosh.Token(woosh.STRING, "'\\n'", 391, 11, 391, 15),
woosh.Token(woosh.OP, '.', 391, 15, 391, 16),
woosh.Token(woosh.NAME, 'join', 391, 16, 391, 20),
woosh.Token(woosh.OP, '(', 391, 20, 391, 21),
woosh.Token(woosh.STRING, "f'  {b}'", 391, 21, 391, 29),
woosh.Token(woosh.NAME, 'for', 391, 30, 391, 33),
woosh.Token(woosh.NAME, 'b', 391, 34, 391, 35),
woosh.Token(woosh.NAME, 'in', 391, 36, 391, 38),
woosh.Token(woosh.NAME, 'body', 391, 39, 391, 43),
woosh.Token(woosh.OP, ')', 391, 43, 391, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 44, 392, 0),
woosh.Token(woosh.COMMENT, '# Compute the text of the entire function.', 393, 4, 393, 46),
woosh.Token(woosh.NAME, 'txt', 394, 4, 394, 7),
woosh.Token(woosh.OP, '=', 394, 8, 394, 9),
woosh.Token(woosh.STRING, "f' def {name}({args}){return_annotation}:\\n{body}'", 394, 10, 394, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 60, 395, 0),
woosh.Token(woosh.NAME, 'local_vars', 396, 4, 396, 14),
woosh.Token(woosh.OP, '=', 396, 15, 396, 16),
woosh.Token(woosh.STRING, "', '", 396, 17, 396, 21),
woosh.Token(woosh.OP, '.', 396, 21, 396, 22),
woosh.Token(woosh.NAME, 'join', 396, 22, 396, 26),
woosh.Token(woosh.OP, '(', 396, 26, 396, 27),
woosh.Token(woosh.NAME, 'locals', 396, 27, 396, 33),
woosh.Token(woosh.OP, '.', 396, 33, 396, 34),
woosh.Token(woosh.NAME, 'keys', 396, 34, 396, 38),
woosh.Token(woosh.OP, '(', 396, 38, 396, 39),
woosh.Token(woosh.OP, ')', 396, 39, 396, 40),
woosh.Token(woosh.OP, ')', 396, 40, 396, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 396, 41, 397, 0),
woosh.Token(woosh.NAME, 'txt', 397, 4, 397, 7),
woosh.Token(woosh.OP, '=', 397, 8, 397, 9),
woosh.Token(woosh.STRING, 'f"def __create_fn__({local_vars}):\\n{txt}\\n return {name}"', 397, 10, 397, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 397, 68, 398, 0),
woosh.Token(woosh.NAME, 'ns', 399, 4, 399, 6),
woosh.Token(woosh.OP, '=', 399, 7, 399, 8),
woosh.Token(woosh.OP, '{', 399, 9, 399, 10),
woosh.Token(woosh.OP, '}', 399, 10, 399, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 11, 400, 0),
woosh.Token(woosh.NAME, 'exec', 400, 4, 400, 8),
woosh.Token(woosh.OP, '(', 400, 8, 400, 9),
woosh.Token(woosh.NAME, 'txt', 400, 9, 400, 12),
woosh.Token(woosh.OP, ',', 400, 12, 400, 13),
woosh.Token(woosh.NAME, 'globals', 400, 14, 400, 21),
woosh.Token(woosh.OP, ',', 400, 21, 400, 22),
woosh.Token(woosh.NAME, 'ns', 400, 23, 400, 25),
woosh.Token(woosh.OP, ')', 400, 25, 400, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 26, 401, 0),
woosh.Token(woosh.NAME, 'return', 401, 4, 401, 10),
woosh.Token(woosh.NAME, 'ns', 401, 11, 401, 13),
woosh.Token(woosh.OP, '[', 401, 13, 401, 14),
woosh.Token(woosh.STRING, "'__create_fn__'", 401, 14, 401, 29),
woosh.Token(woosh.OP, ']', 401, 29, 401, 30),
woosh.Token(woosh.OP, '(', 401, 30, 401, 31),
woosh.Token(woosh.OP, '**', 401, 31, 401, 33),
woosh.Token(woosh.NAME, 'locals', 401, 33, 401, 39),
woosh.Token(woosh.OP, ')', 401, 39, 401, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 401, 40, 402, 0),
woosh.Token(woosh.DEDENT, '', 404, 0, 404, 0),
woosh.Token(woosh.NAME, 'def', 404, 0, 404, 3),
woosh.Token(woosh.NAME, '_field_assign', 404, 4, 404, 17),
woosh.Token(woosh.OP, '(', 404, 17, 404, 18),
woosh.Token(woosh.NAME, 'frozen', 404, 18, 404, 24),
woosh.Token(woosh.OP, ',', 404, 24, 404, 25),
woosh.Token(woosh.NAME, 'name', 404, 26, 404, 30),
woosh.Token(woosh.OP, ',', 404, 30, 404, 31),
woosh.Token(woosh.NAME, 'value', 404, 32, 404, 37),
woosh.Token(woosh.OP, ',', 404, 37, 404, 38),
woosh.Token(woosh.NAME, 'self_name', 404, 39, 404, 48),
woosh.Token(woosh.OP, ')', 404, 48, 404, 49),
woosh.Token(woosh.OP, ':', 404, 49, 404, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 50, 405, 0),
woosh.Token(woosh.COMMENT, "# If we're a frozen class, then assign to our fields in __init__", 405, 4, 405, 68),
woosh.Token(woosh.COMMENT, '# via object.__setattr__.  Otherwise, just use a simple', 406, 4, 406, 59),
woosh.Token(woosh.COMMENT, '# assignment.', 407, 4, 407, 17),
woosh.Token(woosh.COMMENT, '#', 408, 4, 408, 5),
woosh.Token(woosh.COMMENT, '# self_name is what "self" is called in this function: don\'t', 409, 4, 409, 64),
woosh.Token(woosh.COMMENT, '# hard-code "self", since that might be a field name.', 410, 4, 410, 57),
woosh.Token(woosh.INDENT, '    ', 411, 0, 411, 4),
woosh.Token(woosh.NAME, 'if', 411, 4, 411, 6),
woosh.Token(woosh.NAME, 'frozen', 411, 7, 411, 13),
woosh.Token(woosh.OP, ':', 411, 13, 411, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 14, 412, 0),
woosh.Token(woosh.INDENT, '        ', 412, 0, 412, 8),
woosh.Token(woosh.NAME, 'return', 412, 8, 412, 14),
woosh.Token(woosh.STRING, "f'BUILTINS.object.__setattr__({self_name},{name!r},{value})'", 412, 15, 412, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 75, 413, 0),
woosh.Token(woosh.DEDENT, '    ', 413, 0, 413, 4),
woosh.Token(woosh.NAME, 'return', 413, 4, 413, 10),
woosh.Token(woosh.STRING, "f'{self_name}.{name}={value}'", 413, 11, 413, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 40, 414, 0),
woosh.Token(woosh.DEDENT, '', 416, 0, 416, 0),
woosh.Token(woosh.NAME, 'def', 416, 0, 416, 3),
woosh.Token(woosh.NAME, '_field_init', 416, 4, 416, 15),
woosh.Token(woosh.OP, '(', 416, 15, 416, 16),
woosh.Token(woosh.NAME, 'f', 416, 16, 416, 17),
woosh.Token(woosh.OP, ',', 416, 17, 416, 18),
woosh.Token(woosh.NAME, 'frozen', 416, 19, 416, 25),
woosh.Token(woosh.OP, ',', 416, 25, 416, 26),
woosh.Token(woosh.NAME, 'globals', 416, 27, 416, 34),
woosh.Token(woosh.OP, ',', 416, 34, 416, 35),
woosh.Token(woosh.NAME, 'self_name', 416, 36, 416, 45),
woosh.Token(woosh.OP, ')', 416, 45, 416, 46),
woosh.Token(woosh.OP, ':', 416, 46, 416, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 47, 417, 0),
woosh.Token(woosh.COMMENT, '# Return the text of the line in the body of __init__ that will', 417, 4, 417, 67),
woosh.Token(woosh.COMMENT, '# initialize this field.', 418, 4, 418, 28),
woosh.Token(woosh.INDENT, '    ', 420, 0, 420, 4),
woosh.Token(woosh.NAME, 'default_name', 420, 4, 420, 16),
woosh.Token(woosh.OP, '=', 420, 17, 420, 18),
woosh.Token(woosh.STRING, "f'_dflt_{f.name}'", 420, 19, 420, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 36, 421, 0),
woosh.Token(woosh.NAME, 'if', 421, 4, 421, 6),
woosh.Token(woosh.NAME, 'f', 421, 7, 421, 8),
woosh.Token(woosh.OP, '.', 421, 8, 421, 9),
woosh.Token(woosh.NAME, 'default_factory', 421, 9, 421, 24),
woosh.Token(woosh.NAME, 'is', 421, 25, 421, 27),
woosh.Token(woosh.NAME, 'not', 421, 28, 421, 31),
woosh.Token(woosh.NAME, 'MISSING', 421, 32, 421, 39),
woosh.Token(woosh.OP, ':', 421, 39, 421, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 40, 422, 0),
woosh.Token(woosh.INDENT, '        ', 422, 0, 422, 8),
woosh.Token(woosh.NAME, 'if', 422, 8, 422, 10),
woosh.Token(woosh.NAME, 'f', 422, 11, 422, 12),
woosh.Token(woosh.OP, '.', 422, 12, 422, 13),
woosh.Token(woosh.NAME, 'init', 422, 13, 422, 17),
woosh.Token(woosh.OP, ':', 422, 17, 422, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 18, 423, 0),
woosh.Token(woosh.COMMENT, '# This field has a default factory.  If a parameter is', 423, 12, 423, 66),
woosh.Token(woosh.COMMENT, '# given, use it.  If not, call the factory.', 424, 12, 424, 55),
woosh.Token(woosh.INDENT, '            ', 425, 0, 425, 12),
woosh.Token(woosh.NAME, 'globals', 425, 12, 425, 19),
woosh.Token(woosh.OP, '[', 425, 19, 425, 20),
woosh.Token(woosh.NAME, 'default_name', 425, 20, 425, 32),
woosh.Token(woosh.OP, ']', 425, 32, 425, 33),
woosh.Token(woosh.OP, '=', 425, 34, 425, 35),
woosh.Token(woosh.NAME, 'f', 425, 36, 425, 37),
woosh.Token(woosh.OP, '.', 425, 37, 425, 38),
woosh.Token(woosh.NAME, 'default_factory', 425, 38, 425, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 425, 53, 426, 0),
woosh.Token(woosh.NAME, 'value', 426, 12, 426, 17),
woosh.Token(woosh.OP, '=', 426, 18, 426, 19),
woosh.Token(woosh.OP, '(', 426, 20, 426, 21),
woosh.Token(woosh.STRING, "f'{default_name}() '", 426, 21, 426, 41),
woosh.Token(woosh.STRING, "f'if {f.name} is _HAS_DEFAULT_FACTORY '", 427, 21, 427, 60),
woosh.Token(woosh.STRING, "f'else {f.name}'", 428, 21, 428, 37),
woosh.Token(woosh.OP, ')', 428, 37, 428, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 428, 38, 429, 0),
woosh.Token(woosh.DEDENT, '        ', 429, 0, 429, 8),
woosh.Token(woosh.NAME, 'else', 429, 8, 429, 12),
woosh.Token(woosh.OP, ':', 429, 12, 429, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 13, 430, 0),
woosh.Token(woosh.COMMENT, "# This is a field that's not in the __init__ params, but", 430, 12, 430, 68),
woosh.Token(woosh.COMMENT, '# has a default factory function.  It needs to be', 431, 12, 431, 61),
woosh.Token(woosh.COMMENT, '# initialized here by calling the factory function,', 432, 12, 432, 63),
woosh.Token(woosh.COMMENT, "# because there's no other way to initialize it.", 433, 12, 433, 60),
woosh.Token(woosh.COMMENT, '# For a field initialized with a default=defaultvalue, the', 435, 12, 435, 70),
woosh.Token(woosh.COMMENT, '# class dict just has the default value', 436, 12, 436, 51),
woosh.Token(woosh.COMMENT, "# (cls.fieldname=defaultvalue).  But that won't work for a", 437, 12, 437, 70),
woosh.Token(woosh.COMMENT, '# default factory, the factory must be called in __init__', 438, 12, 438, 69),
woosh.Token(woosh.COMMENT, "# and we must assign that to self.fieldname.  We can't", 439, 12, 439, 66),
woosh.Token(woosh.COMMENT, "# fall back to the class dict's value, both because it's", 440, 12, 440, 68),
woosh.Token(woosh.COMMENT, '# not set, and because it might be different per-class', 441, 12, 441, 66),
woosh.Token(woosh.COMMENT, '# (which, after all, is why we have a factory function!).', 442, 12, 442, 69),
woosh.Token(woosh.INDENT, '            ', 444, 0, 444, 12),
woosh.Token(woosh.NAME, 'globals', 444, 12, 444, 19),
woosh.Token(woosh.OP, '[', 444, 19, 444, 20),
woosh.Token(woosh.NAME, 'default_name', 444, 20, 444, 32),
woosh.Token(woosh.OP, ']', 444, 32, 444, 33),
woosh.Token(woosh.OP, '=', 444, 34, 444, 35),
woosh.Token(woosh.NAME, 'f', 444, 36, 444, 37),
woosh.Token(woosh.OP, '.', 444, 37, 444, 38),
woosh.Token(woosh.NAME, 'default_factory', 444, 38, 444, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 444, 53, 445, 0),
woosh.Token(woosh.NAME, 'value', 445, 12, 445, 17),
woosh.Token(woosh.OP, '=', 445, 18, 445, 19),
woosh.Token(woosh.STRING, "f'{default_name}()'", 445, 20, 445, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 445, 39, 446, 0),
woosh.Token(woosh.DEDENT, '    ', 446, 0, 446, 4),
woosh.Token(woosh.DEDENT, '', 446, 4, 446, 4),
woosh.Token(woosh.NAME, 'else', 446, 4, 446, 8),
woosh.Token(woosh.OP, ':', 446, 8, 446, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 446, 9, 447, 0),
woosh.Token(woosh.COMMENT, '# No default factory.', 447, 8, 447, 29),
woosh.Token(woosh.INDENT, '        ', 448, 0, 448, 8),
woosh.Token(woosh.NAME, 'if', 448, 8, 448, 10),
woosh.Token(woosh.NAME, 'f', 448, 11, 448, 12),
woosh.Token(woosh.OP, '.', 448, 12, 448, 13),
woosh.Token(woosh.NAME, 'init', 448, 13, 448, 17),
woosh.Token(woosh.OP, ':', 448, 17, 448, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 448, 18, 449, 0),
woosh.Token(woosh.INDENT, '            ', 449, 0, 449, 12),
woosh.Token(woosh.NAME, 'if', 449, 12, 449, 14),
woosh.Token(woosh.NAME, 'f', 449, 15, 449, 16),
woosh.Token(woosh.OP, '.', 449, 16, 449, 17),
woosh.Token(woosh.NAME, 'default', 449, 17, 449, 24),
woosh.Token(woosh.NAME, 'is', 449, 25, 449, 27),
woosh.Token(woosh.NAME, 'MISSING', 449, 28, 449, 35),
woosh.Token(woosh.OP, ':', 449, 35, 449, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 449, 36, 450, 0),
woosh.Token(woosh.COMMENT, "# There's no default, just do an assignment.", 450, 16, 450, 60),
woosh.Token(woosh.INDENT, '                ', 451, 0, 451, 16),
woosh.Token(woosh.NAME, 'value', 451, 16, 451, 21),
woosh.Token(woosh.OP, '=', 451, 22, 451, 23),
woosh.Token(woosh.NAME, 'f', 451, 24, 451, 25),
woosh.Token(woosh.OP, '.', 451, 25, 451, 26),
woosh.Token(woosh.NAME, 'name', 451, 26, 451, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 451, 30, 452, 0),
woosh.Token(woosh.DEDENT, '            ', 452, 0, 452, 12),
woosh.Token(woosh.NAME, 'elif', 452, 12, 452, 16),
woosh.Token(woosh.NAME, 'f', 452, 17, 452, 18),
woosh.Token(woosh.OP, '.', 452, 18, 452, 19),
woosh.Token(woosh.NAME, 'default', 452, 19, 452, 26),
woosh.Token(woosh.NAME, 'is', 452, 27, 452, 29),
woosh.Token(woosh.NAME, 'not', 452, 30, 452, 33),
woosh.Token(woosh.NAME, 'MISSING', 452, 34, 452, 41),
woosh.Token(woosh.OP, ':', 452, 41, 452, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 452, 42, 453, 0),
woosh.Token(woosh.INDENT, '                ', 453, 0, 453, 16),
woosh.Token(woosh.NAME, 'globals', 453, 16, 453, 23),
woosh.Token(woosh.OP, '[', 453, 23, 453, 24),
woosh.Token(woosh.NAME, 'default_name', 453, 24, 453, 36),
woosh.Token(woosh.OP, ']', 453, 36, 453, 37),
woosh.Token(woosh.OP, '=', 453, 38, 453, 39),
woosh.Token(woosh.NAME, 'f', 453, 40, 453, 41),
woosh.Token(woosh.OP, '.', 453, 41, 453, 42),
woosh.Token(woosh.NAME, 'default', 453, 42, 453, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 453, 49, 454, 0),
woosh.Token(woosh.NAME, 'value', 454, 16, 454, 21),
woosh.Token(woosh.OP, '=', 454, 22, 454, 23),
woosh.Token(woosh.NAME, 'f', 454, 24, 454, 25),
woosh.Token(woosh.OP, '.', 454, 25, 454, 26),
woosh.Token(woosh.NAME, 'name', 454, 26, 454, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 30, 455, 0),
woosh.Token(woosh.DEDENT, '        ', 455, 0, 455, 8),
woosh.Token(woosh.DEDENT, '', 455, 8, 455, 8),
woosh.Token(woosh.NAME, 'else', 455, 8, 455, 12),
woosh.Token(woosh.OP, ':', 455, 12, 455, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 455, 13, 456, 0),
woosh.Token(woosh.COMMENT, '# This field does not need initialization.  Signify that', 456, 12, 456, 68),
woosh.Token(woosh.COMMENT, '# to the caller by returning None.', 457, 12, 457, 46),
woosh.Token(woosh.INDENT, '            ', 458, 0, 458, 12),
woosh.Token(woosh.NAME, 'return', 458, 12, 458, 18),
woosh.Token(woosh.NAME, 'None', 458, 19, 458, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 458, 23, 459, 0),
woosh.Token(woosh.COMMENT, '# Only test this now, so that we can create variables for the', 460, 4, 460, 65),
woosh.Token(woosh.COMMENT, "# default.  However, return None to signify that we're not going", 461, 4, 461, 68),
woosh.Token(woosh.COMMENT, '# to actually do the assignment statement for InitVars.', 462, 4, 462, 59),
woosh.Token(woosh.DEDENT, '    ', 463, 0, 463, 4),
woosh.Token(woosh.DEDENT, '', 463, 4, 463, 4),
woosh.Token(woosh.NAME, 'if', 463, 4, 463, 6),
woosh.Token(woosh.NAME, 'f', 463, 7, 463, 8),
woosh.Token(woosh.OP, '.', 463, 8, 463, 9),
woosh.Token(woosh.NAME, '_field_type', 463, 9, 463, 20),
woosh.Token(woosh.NAME, 'is', 463, 21, 463, 23),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 463, 24, 463, 38),
woosh.Token(woosh.OP, ':', 463, 38, 463, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 39, 464, 0),
woosh.Token(woosh.INDENT, '        ', 464, 0, 464, 8),
woosh.Token(woosh.NAME, 'return', 464, 8, 464, 14),
woosh.Token(woosh.NAME, 'None', 464, 15, 464, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 19, 465, 0),
woosh.Token(woosh.COMMENT, '# Now, actually generate the field assignment.', 466, 4, 466, 50),
woosh.Token(woosh.DEDENT, '    ', 467, 0, 467, 4),
woosh.Token(woosh.NAME, 'return', 467, 4, 467, 10),
woosh.Token(woosh.NAME, '_field_assign', 467, 11, 467, 24),
woosh.Token(woosh.OP, '(', 467, 24, 467, 25),
woosh.Token(woosh.NAME, 'frozen', 467, 25, 467, 31),
woosh.Token(woosh.OP, ',', 467, 31, 467, 32),
woosh.Token(woosh.NAME, 'f', 467, 33, 467, 34),
woosh.Token(woosh.OP, '.', 467, 34, 467, 35),
woosh.Token(woosh.NAME, 'name', 467, 35, 467, 39),
woosh.Token(woosh.OP, ',', 467, 39, 467, 40),
woosh.Token(woosh.NAME, 'value', 467, 41, 467, 46),
woosh.Token(woosh.OP, ',', 467, 46, 467, 47),
woosh.Token(woosh.NAME, 'self_name', 467, 48, 467, 57),
woosh.Token(woosh.OP, ')', 467, 57, 467, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 467, 58, 468, 0),
woosh.Token(woosh.DEDENT, '', 470, 0, 470, 0),
woosh.Token(woosh.NAME, 'def', 470, 0, 470, 3),
woosh.Token(woosh.NAME, '_init_param', 470, 4, 470, 15),
woosh.Token(woosh.OP, '(', 470, 15, 470, 16),
woosh.Token(woosh.NAME, 'f', 470, 16, 470, 17),
woosh.Token(woosh.OP, ')', 470, 17, 470, 18),
woosh.Token(woosh.OP, ':', 470, 18, 470, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 19, 471, 0),
woosh.Token(woosh.COMMENT, '# Return the __init__ parameter string for this field.  For', 471, 4, 471, 63),
woosh.Token(woosh.COMMENT, "# example, the equivalent of 'x:int=3' (except instead of 'int',", 472, 4, 472, 68),
woosh.Token(woosh.COMMENT, "# reference a variable set to int, and instead of '3', reference a", 473, 4, 473, 70),
woosh.Token(woosh.COMMENT, '# variable set to 3).', 474, 4, 474, 25),
woosh.Token(woosh.INDENT, '    ', 475, 0, 475, 4),
woosh.Token(woosh.NAME, 'if', 475, 4, 475, 6),
woosh.Token(woosh.NAME, 'f', 475, 7, 475, 8),
woosh.Token(woosh.OP, '.', 475, 8, 475, 9),
woosh.Token(woosh.NAME, 'default', 475, 9, 475, 16),
woosh.Token(woosh.NAME, 'is', 475, 17, 475, 19),
woosh.Token(woosh.NAME, 'MISSING', 475, 20, 475, 27),
woosh.Token(woosh.NAME, 'and', 475, 28, 475, 31),
woosh.Token(woosh.NAME, 'f', 475, 32, 475, 33),
woosh.Token(woosh.OP, '.', 475, 33, 475, 34),
woosh.Token(woosh.NAME, 'default_factory', 475, 34, 475, 49),
woosh.Token(woosh.NAME, 'is', 475, 50, 475, 52),
woosh.Token(woosh.NAME, 'MISSING', 475, 53, 475, 60),
woosh.Token(woosh.OP, ':', 475, 60, 475, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 61, 476, 0),
woosh.Token(woosh.COMMENT, "# There's no default, and no default_factory, just output the", 476, 8, 476, 69),
woosh.Token(woosh.COMMENT, '# variable name and type.', 477, 8, 477, 33),
woosh.Token(woosh.INDENT, '        ', 478, 0, 478, 8),
woosh.Token(woosh.NAME, 'default', 478, 8, 478, 15),
woosh.Token(woosh.OP, '=', 478, 16, 478, 17),
woosh.Token(woosh.STRING, "''", 478, 18, 478, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 20, 479, 0),
woosh.Token(woosh.DEDENT, '    ', 479, 0, 479, 4),
woosh.Token(woosh.NAME, 'elif', 479, 4, 479, 8),
woosh.Token(woosh.NAME, 'f', 479, 9, 479, 10),
woosh.Token(woosh.OP, '.', 479, 10, 479, 11),
woosh.Token(woosh.NAME, 'default', 479, 11, 479, 18),
woosh.Token(woosh.NAME, 'is', 479, 19, 479, 21),
woosh.Token(woosh.NAME, 'not', 479, 22, 479, 25),
woosh.Token(woosh.NAME, 'MISSING', 479, 26, 479, 33),
woosh.Token(woosh.OP, ':', 479, 33, 479, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 34, 480, 0),
woosh.Token(woosh.COMMENT, "# There's a default, this will be the name that's used to look", 480, 8, 480, 70),
woosh.Token(woosh.COMMENT, '# it up.', 481, 8, 481, 16),
woosh.Token(woosh.INDENT, '        ', 482, 0, 482, 8),
woosh.Token(woosh.NAME, 'default', 482, 8, 482, 15),
woosh.Token(woosh.OP, '=', 482, 16, 482, 17),
woosh.Token(woosh.STRING, "f'=_dflt_{f.name}'", 482, 18, 482, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 36, 483, 0),
woosh.Token(woosh.DEDENT, '    ', 483, 0, 483, 4),
woosh.Token(woosh.NAME, 'elif', 483, 4, 483, 8),
woosh.Token(woosh.NAME, 'f', 483, 9, 483, 10),
woosh.Token(woosh.OP, '.', 483, 10, 483, 11),
woosh.Token(woosh.NAME, 'default_factory', 483, 11, 483, 26),
woosh.Token(woosh.NAME, 'is', 483, 27, 483, 29),
woosh.Token(woosh.NAME, 'not', 483, 30, 483, 33),
woosh.Token(woosh.NAME, 'MISSING', 483, 34, 483, 41),
woosh.Token(woosh.OP, ':', 483, 41, 483, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 42, 484, 0),
woosh.Token(woosh.COMMENT, "# There's a factory function.  Set a marker.", 484, 8, 484, 52),
woosh.Token(woosh.INDENT, '        ', 485, 0, 485, 8),
woosh.Token(woosh.NAME, 'default', 485, 8, 485, 15),
woosh.Token(woosh.OP, '=', 485, 16, 485, 17),
woosh.Token(woosh.STRING, "'=_HAS_DEFAULT_FACTORY'", 485, 18, 485, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 41, 486, 0),
woosh.Token(woosh.DEDENT, '    ', 486, 0, 486, 4),
woosh.Token(woosh.NAME, 'return', 486, 4, 486, 10),
woosh.Token(woosh.STRING, "f'{f.name}:_type_{f.name}{default}'", 486, 11, 486, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 46, 487, 0),
woosh.Token(woosh.DEDENT, '', 489, 0, 489, 0),
woosh.Token(woosh.NAME, 'def', 489, 0, 489, 3),
woosh.Token(woosh.NAME, '_init_fn', 489, 4, 489, 12),
woosh.Token(woosh.OP, '(', 489, 12, 489, 13),
woosh.Token(woosh.NAME, 'fields', 489, 13, 489, 19),
woosh.Token(woosh.OP, ',', 489, 19, 489, 20),
woosh.Token(woosh.NAME, 'frozen', 489, 21, 489, 27),
woosh.Token(woosh.OP, ',', 489, 27, 489, 28),
woosh.Token(woosh.NAME, 'has_post_init', 489, 29, 489, 42),
woosh.Token(woosh.OP, ',', 489, 42, 489, 43),
woosh.Token(woosh.NAME, 'self_name', 489, 44, 489, 53),
woosh.Token(woosh.OP, ',', 489, 53, 489, 54),
woosh.Token(woosh.NAME, 'globals', 489, 55, 489, 62),
woosh.Token(woosh.OP, ')', 489, 62, 489, 63),
woosh.Token(woosh.OP, ':', 489, 63, 489, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 64, 490, 0),
woosh.Token(woosh.COMMENT, '# fields contains both real fields and InitVar pseudo-fields.', 490, 4, 490, 65),
woosh.Token(woosh.COMMENT, "# Make sure we don't have fields without defaults following fields", 492, 4, 492, 70),
woosh.Token(woosh.COMMENT, '# with defaults.  This actually would be caught when exec-ing the', 493, 4, 493, 69),
woosh.Token(woosh.COMMENT, '# function source code, but catching it here gives a better error', 494, 4, 494, 69),
woosh.Token(woosh.COMMENT, '# message, and future-proofs us in case we build up the function', 495, 4, 495, 68),
woosh.Token(woosh.COMMENT, '# using ast.', 496, 4, 496, 16),
woosh.Token(woosh.INDENT, '    ', 497, 0, 497, 4),
woosh.Token(woosh.NAME, 'seen_default', 497, 4, 497, 16),
woosh.Token(woosh.OP, '=', 497, 17, 497, 18),
woosh.Token(woosh.NAME, 'False', 497, 19, 497, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 24, 498, 0),
woosh.Token(woosh.NAME, 'for', 498, 4, 498, 7),
woosh.Token(woosh.NAME, 'f', 498, 8, 498, 9),
woosh.Token(woosh.NAME, 'in', 498, 10, 498, 12),
woosh.Token(woosh.NAME, 'fields', 498, 13, 498, 19),
woosh.Token(woosh.OP, ':', 498, 19, 498, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 20, 499, 0),
woosh.Token(woosh.COMMENT, '# Only consider fields in the __init__ call.', 499, 8, 499, 52),
woosh.Token(woosh.INDENT, '        ', 500, 0, 500, 8),
woosh.Token(woosh.NAME, 'if', 500, 8, 500, 10),
woosh.Token(woosh.NAME, 'f', 500, 11, 500, 12),
woosh.Token(woosh.OP, '.', 500, 12, 500, 13),
woosh.Token(woosh.NAME, 'init', 500, 13, 500, 17),
woosh.Token(woosh.OP, ':', 500, 17, 500, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 18, 501, 0),
woosh.Token(woosh.INDENT, '            ', 501, 0, 501, 12),
woosh.Token(woosh.NAME, 'if', 501, 12, 501, 14),
woosh.Token(woosh.NAME, 'not', 501, 15, 501, 18),
woosh.Token(woosh.OP, '(', 501, 19, 501, 20),
woosh.Token(woosh.NAME, 'f', 501, 20, 501, 21),
woosh.Token(woosh.OP, '.', 501, 21, 501, 22),
woosh.Token(woosh.NAME, 'default', 501, 22, 501, 29),
woosh.Token(woosh.NAME, 'is', 501, 30, 501, 32),
woosh.Token(woosh.NAME, 'MISSING', 501, 33, 501, 40),
woosh.Token(woosh.NAME, 'and', 501, 41, 501, 44),
woosh.Token(woosh.NAME, 'f', 501, 45, 501, 46),
woosh.Token(woosh.OP, '.', 501, 46, 501, 47),
woosh.Token(woosh.NAME, 'default_factory', 501, 47, 501, 62),
woosh.Token(woosh.NAME, 'is', 501, 63, 501, 65),
woosh.Token(woosh.NAME, 'MISSING', 501, 66, 501, 73),
woosh.Token(woosh.OP, ')', 501, 73, 501, 74),
woosh.Token(woosh.OP, ':', 501, 74, 501, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 75, 502, 0),
woosh.Token(woosh.INDENT, '                ', 502, 0, 502, 16),
woosh.Token(woosh.NAME, 'seen_default', 502, 16, 502, 28),
woosh.Token(woosh.OP, '=', 502, 29, 502, 30),
woosh.Token(woosh.NAME, 'True', 502, 31, 502, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 35, 503, 0),
woosh.Token(woosh.DEDENT, '            ', 503, 0, 503, 12),
woosh.Token(woosh.NAME, 'elif', 503, 12, 503, 16),
woosh.Token(woosh.NAME, 'seen_default', 503, 17, 503, 29),
woosh.Token(woosh.OP, ':', 503, 29, 503, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 503, 30, 504, 0),
woosh.Token(woosh.INDENT, '                ', 504, 0, 504, 16),
woosh.Token(woosh.NAME, 'raise', 504, 16, 504, 21),
woosh.Token(woosh.NAME, 'TypeError', 504, 22, 504, 31),
woosh.Token(woosh.OP, '(', 504, 31, 504, 32),
woosh.Token(woosh.STRING, "f'non-default argument {f.name!r} '", 504, 32, 504, 67),
woosh.Token(woosh.STRING, "'follows default argument'", 505, 32, 505, 58),
woosh.Token(woosh.OP, ')', 505, 58, 505, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 59, 506, 0),
woosh.Token(woosh.DEDENT, '    ', 507, 0, 507, 4),
woosh.Token(woosh.DEDENT, '', 507, 4, 507, 4),
woosh.Token(woosh.DEDENT, '', 507, 4, 507, 4),
woosh.Token(woosh.NAME, 'locals', 507, 4, 507, 10),
woosh.Token(woosh.OP, '=', 507, 11, 507, 12),
woosh.Token(woosh.OP, '{', 507, 13, 507, 14),
woosh.Token(woosh.STRING, "f'_type_{f.name}'", 507, 14, 507, 31),
woosh.Token(woosh.OP, ':', 507, 31, 507, 32),
woosh.Token(woosh.NAME, 'f', 507, 33, 507, 34),
woosh.Token(woosh.OP, '.', 507, 34, 507, 35),
woosh.Token(woosh.NAME, 'type', 507, 35, 507, 39),
woosh.Token(woosh.NAME, 'for', 507, 40, 507, 43),
woosh.Token(woosh.NAME, 'f', 507, 44, 507, 45),
woosh.Token(woosh.NAME, 'in', 507, 46, 507, 48),
woosh.Token(woosh.NAME, 'fields', 507, 49, 507, 55),
woosh.Token(woosh.OP, '}', 507, 55, 507, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 507, 56, 508, 0),
woosh.Token(woosh.NAME, 'locals', 508, 4, 508, 10),
woosh.Token(woosh.OP, '.', 508, 10, 508, 11),
woosh.Token(woosh.NAME, 'update', 508, 11, 508, 17),
woosh.Token(woosh.OP, '(', 508, 17, 508, 18),
woosh.Token(woosh.OP, '{', 508, 18, 508, 19),
woosh.Token(woosh.STRING, "'MISSING'", 509, 8, 509, 17),
woosh.Token(woosh.OP, ':', 509, 17, 509, 18),
woosh.Token(woosh.NAME, 'MISSING', 509, 19, 509, 26),
woosh.Token(woosh.OP, ',', 509, 26, 509, 27),
woosh.Token(woosh.STRING, "'_HAS_DEFAULT_FACTORY'", 510, 8, 510, 30),
woosh.Token(woosh.OP, ':', 510, 30, 510, 31),
woosh.Token(woosh.NAME, '_HAS_DEFAULT_FACTORY', 510, 32, 510, 52),
woosh.Token(woosh.OP, ',', 510, 52, 510, 53),
woosh.Token(woosh.OP, '}', 511, 4, 511, 5),
woosh.Token(woosh.OP, ')', 511, 5, 511, 6),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 6, 512, 0),
woosh.Token(woosh.NAME, 'body_lines', 513, 4, 513, 14),
woosh.Token(woosh.OP, '=', 513, 15, 513, 16),
woosh.Token(woosh.OP, '[', 513, 17, 513, 18),
woosh.Token(woosh.OP, ']', 513, 18, 513, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 513, 19, 514, 0),
woosh.Token(woosh.NAME, 'for', 514, 4, 514, 7),
woosh.Token(woosh.NAME, 'f', 514, 8, 514, 9),
woosh.Token(woosh.NAME, 'in', 514, 10, 514, 12),
woosh.Token(woosh.NAME, 'fields', 514, 13, 514, 19),
woosh.Token(woosh.OP, ':', 514, 19, 514, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 20, 515, 0),
woosh.Token(woosh.INDENT, '        ', 515, 0, 515, 8),
woosh.Token(woosh.NAME, 'line', 515, 8, 515, 12),
woosh.Token(woosh.OP, '=', 515, 13, 515, 14),
woosh.Token(woosh.NAME, '_field_init', 515, 15, 515, 26),
woosh.Token(woosh.OP, '(', 515, 26, 515, 27),
woosh.Token(woosh.NAME, 'f', 515, 27, 515, 28),
woosh.Token(woosh.OP, ',', 515, 28, 515, 29),
woosh.Token(woosh.NAME, 'frozen', 515, 30, 515, 36),
woosh.Token(woosh.OP, ',', 515, 36, 515, 37),
woosh.Token(woosh.NAME, 'locals', 515, 38, 515, 44),
woosh.Token(woosh.OP, ',', 515, 44, 515, 45),
woosh.Token(woosh.NAME, 'self_name', 515, 46, 515, 55),
woosh.Token(woosh.OP, ')', 515, 55, 515, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 515, 56, 516, 0),
woosh.Token(woosh.COMMENT, "# line is None means that this field doesn't require", 516, 8, 516, 60),
woosh.Token(woosh.COMMENT, "# initialization (it's a pseudo-field).  Just skip it.", 517, 8, 517, 62),
woosh.Token(woosh.NAME, 'if', 518, 8, 518, 10),
woosh.Token(woosh.NAME, 'line', 518, 11, 518, 15),
woosh.Token(woosh.OP, ':', 518, 15, 518, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 518, 16, 519, 0),
woosh.Token(woosh.INDENT, '            ', 519, 0, 519, 12),
woosh.Token(woosh.NAME, 'body_lines', 519, 12, 519, 22),
woosh.Token(woosh.OP, '.', 519, 22, 519, 23),
woosh.Token(woosh.NAME, 'append', 519, 23, 519, 29),
woosh.Token(woosh.OP, '(', 519, 29, 519, 30),
woosh.Token(woosh.NAME, 'line', 519, 30, 519, 34),
woosh.Token(woosh.OP, ')', 519, 34, 519, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 35, 520, 0),
woosh.Token(woosh.COMMENT, '# Does this class have a post-init function?', 521, 4, 521, 48),
woosh.Token(woosh.DEDENT, '    ', 522, 0, 522, 4),
woosh.Token(woosh.DEDENT, '', 522, 4, 522, 4),
woosh.Token(woosh.NAME, 'if', 522, 4, 522, 6),
woosh.Token(woosh.NAME, 'has_post_init', 522, 7, 522, 20),
woosh.Token(woosh.OP, ':', 522, 20, 522, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 21, 523, 0),
woosh.Token(woosh.INDENT, '        ', 523, 0, 523, 8),
woosh.Token(woosh.NAME, 'params_str', 523, 8, 523, 18),
woosh.Token(woosh.OP, '=', 523, 19, 523, 20),
woosh.Token(woosh.STRING, "','", 523, 21, 523, 24),
woosh.Token(woosh.OP, '.', 523, 24, 523, 25),
woosh.Token(woosh.NAME, 'join', 523, 25, 523, 29),
woosh.Token(woosh.OP, '(', 523, 29, 523, 30),
woosh.Token(woosh.NAME, 'f', 523, 30, 523, 31),
woosh.Token(woosh.OP, '.', 523, 31, 523, 32),
woosh.Token(woosh.NAME, 'name', 523, 32, 523, 36),
woosh.Token(woosh.NAME, 'for', 523, 37, 523, 40),
woosh.Token(woosh.NAME, 'f', 523, 41, 523, 42),
woosh.Token(woosh.NAME, 'in', 523, 43, 523, 45),
woosh.Token(woosh.NAME, 'fields', 523, 46, 523, 52),
woosh.Token(woosh.NAME, 'if', 524, 30, 524, 32),
woosh.Token(woosh.NAME, 'f', 524, 33, 524, 34),
woosh.Token(woosh.OP, '.', 524, 34, 524, 35),
woosh.Token(woosh.NAME, '_field_type', 524, 35, 524, 46),
woosh.Token(woosh.NAME, 'is', 524, 47, 524, 49),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 524, 50, 524, 64),
woosh.Token(woosh.OP, ')', 524, 64, 524, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 524, 65, 525, 0),
woosh.Token(woosh.NAME, 'body_lines', 525, 8, 525, 18),
woosh.Token(woosh.OP, '.', 525, 18, 525, 19),
woosh.Token(woosh.NAME, 'append', 525, 19, 525, 25),
woosh.Token(woosh.OP, '(', 525, 25, 525, 26),
woosh.Token(woosh.STRING, "f'{self_name}.{_POST_INIT_NAME}({params_str})'", 525, 26, 525, 72),
woosh.Token(woosh.OP, ')', 525, 72, 525, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 73, 526, 0),
woosh.Token(woosh.COMMENT, "# If no body lines, use 'pass'.", 527, 4, 527, 35),
woosh.Token(woosh.DEDENT, '    ', 528, 0, 528, 4),
woosh.Token(woosh.NAME, 'if', 528, 4, 528, 6),
woosh.Token(woosh.NAME, 'not', 528, 7, 528, 10),
woosh.Token(woosh.NAME, 'body_lines', 528, 11, 528, 21),
woosh.Token(woosh.OP, ':', 528, 21, 528, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 22, 529, 0),
woosh.Token(woosh.INDENT, '        ', 529, 0, 529, 8),
woosh.Token(woosh.NAME, 'body_lines', 529, 8, 529, 18),
woosh.Token(woosh.OP, '=', 529, 19, 529, 20),
woosh.Token(woosh.OP, '[', 529, 21, 529, 22),
woosh.Token(woosh.STRING, "'pass'", 529, 22, 529, 28),
woosh.Token(woosh.OP, ']', 529, 28, 529, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 29, 530, 0),
woosh.Token(woosh.DEDENT, '    ', 531, 0, 531, 4),
woosh.Token(woosh.NAME, 'return', 531, 4, 531, 10),
woosh.Token(woosh.NAME, '_create_fn', 531, 11, 531, 21),
woosh.Token(woosh.OP, '(', 531, 21, 531, 22),
woosh.Token(woosh.STRING, "'__init__'", 531, 22, 531, 32),
woosh.Token(woosh.OP, ',', 531, 32, 531, 33),
woosh.Token(woosh.OP, '[', 532, 22, 532, 23),
woosh.Token(woosh.NAME, 'self_name', 532, 23, 532, 32),
woosh.Token(woosh.OP, ']', 532, 32, 532, 33),
woosh.Token(woosh.OP, '+', 532, 34, 532, 35),
woosh.Token(woosh.OP, '[', 532, 36, 532, 37),
woosh.Token(woosh.NAME, '_init_param', 532, 37, 532, 48),
woosh.Token(woosh.OP, '(', 532, 48, 532, 49),
woosh.Token(woosh.NAME, 'f', 532, 49, 532, 50),
woosh.Token(woosh.OP, ')', 532, 50, 532, 51),
woosh.Token(woosh.NAME, 'for', 532, 52, 532, 55),
woosh.Token(woosh.NAME, 'f', 532, 56, 532, 57),
woosh.Token(woosh.NAME, 'in', 532, 58, 532, 60),
woosh.Token(woosh.NAME, 'fields', 532, 61, 532, 67),
woosh.Token(woosh.NAME, 'if', 532, 68, 532, 70),
woosh.Token(woosh.NAME, 'f', 532, 71, 532, 72),
woosh.Token(woosh.OP, '.', 532, 72, 532, 73),
woosh.Token(woosh.NAME, 'init', 532, 73, 532, 77),
woosh.Token(woosh.OP, ']', 532, 77, 532, 78),
woosh.Token(woosh.OP, ',', 532, 78, 532, 79),
woosh.Token(woosh.NAME, 'body_lines', 533, 22, 533, 32),
woosh.Token(woosh.OP, ',', 533, 32, 533, 33),
woosh.Token(woosh.NAME, 'locals', 534, 22, 534, 28),
woosh.Token(woosh.OP, '=', 534, 28, 534, 29),
woosh.Token(woosh.NAME, 'locals', 534, 29, 534, 35),
woosh.Token(woosh.OP, ',', 534, 35, 534, 36),
woosh.Token(woosh.NAME, 'globals', 535, 22, 535, 29),
woosh.Token(woosh.OP, '=', 535, 29, 535, 30),
woosh.Token(woosh.NAME, 'globals', 535, 30, 535, 37),
woosh.Token(woosh.OP, ',', 535, 37, 535, 38),
woosh.Token(woosh.NAME, 'return_type', 536, 22, 536, 33),
woosh.Token(woosh.OP, '=', 536, 33, 536, 34),
woosh.Token(woosh.NAME, 'None', 536, 34, 536, 38),
woosh.Token(woosh.OP, ')', 536, 38, 536, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 39, 537, 0),
woosh.Token(woosh.DEDENT, '', 539, 0, 539, 0),
woosh.Token(woosh.NAME, 'def', 539, 0, 539, 3),
woosh.Token(woosh.NAME, '_repr_fn', 539, 4, 539, 12),
woosh.Token(woosh.OP, '(', 539, 12, 539, 13),
woosh.Token(woosh.NAME, 'fields', 539, 13, 539, 19),
woosh.Token(woosh.OP, ',', 539, 19, 539, 20),
woosh.Token(woosh.NAME, 'globals', 539, 21, 539, 28),
woosh.Token(woosh.OP, ')', 539, 28, 539, 29),
woosh.Token(woosh.OP, ':', 539, 29, 539, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 539, 30, 540, 0),
woosh.Token(woosh.INDENT, '    ', 540, 0, 540, 4),
woosh.Token(woosh.NAME, 'fn', 540, 4, 540, 6),
woosh.Token(woosh.OP, '=', 540, 7, 540, 8),
woosh.Token(woosh.NAME, '_create_fn', 540, 9, 540, 19),
woosh.Token(woosh.OP, '(', 540, 19, 540, 20),
woosh.Token(woosh.STRING, "'__repr__'", 540, 20, 540, 30),
woosh.Token(woosh.OP, ',', 540, 30, 540, 31),
woosh.Token(woosh.OP, '(', 541, 20, 541, 21),
woosh.Token(woosh.STRING, "'self'", 541, 21, 541, 27),
woosh.Token(woosh.OP, ',', 541, 27, 541, 28),
woosh.Token(woosh.OP, ')', 541, 28, 541, 29),
woosh.Token(woosh.OP, ',', 541, 29, 541, 30),
woosh.Token(woosh.OP, '[', 542, 20, 542, 21),
woosh.Token(woosh.STRING, '\'return self.__class__.__qualname__ + f"(\'', 542, 21, 542, 63),
woosh.Token(woosh.OP, '+', 542, 64, 542, 65),
woosh.Token(woosh.STRING, "', '", 543, 21, 543, 25),
woosh.Token(woosh.OP, '.', 543, 25, 543, 26),
woosh.Token(woosh.NAME, 'join', 543, 26, 543, 30),
woosh.Token(woosh.OP, '(', 543, 30, 543, 31),
woosh.Token(woosh.OP, '[', 543, 31, 543, 32),
woosh.Token(woosh.STRING, 'f"{f.name}={{self.{f.name}!r}}"', 543, 32, 543, 63),
woosh.Token(woosh.NAME, 'for', 544, 32, 544, 35),
woosh.Token(woosh.NAME, 'f', 544, 36, 544, 37),
woosh.Token(woosh.NAME, 'in', 544, 38, 544, 40),
woosh.Token(woosh.NAME, 'fields', 544, 41, 544, 47),
woosh.Token(woosh.OP, ']', 544, 47, 544, 48),
woosh.Token(woosh.OP, ')', 544, 48, 544, 49),
woosh.Token(woosh.OP, '+', 544, 50, 544, 51),
woosh.Token(woosh.STRING, '\')"\'', 545, 21, 545, 25),
woosh.Token(woosh.OP, ']', 545, 25, 545, 26),
woosh.Token(woosh.OP, ',', 545, 26, 545, 27),
woosh.Token(woosh.NAME, 'globals', 546, 21, 546, 28),
woosh.Token(woosh.OP, '=', 546, 28, 546, 29),
woosh.Token(woosh.NAME, 'globals', 546, 29, 546, 36),
woosh.Token(woosh.OP, ')', 546, 36, 546, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 37, 547, 0),
woosh.Token(woosh.NAME, 'return', 547, 4, 547, 10),
woosh.Token(woosh.NAME, '_recursive_repr', 547, 11, 547, 26),
woosh.Token(woosh.OP, '(', 547, 26, 547, 27),
woosh.Token(woosh.NAME, 'fn', 547, 27, 547, 29),
woosh.Token(woosh.OP, ')', 547, 29, 547, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 30, 548, 0),
woosh.Token(woosh.DEDENT, '', 550, 0, 550, 0),
woosh.Token(woosh.NAME, 'def', 550, 0, 550, 3),
woosh.Token(woosh.NAME, '_frozen_get_del_attr', 550, 4, 550, 24),
woosh.Token(woosh.OP, '(', 550, 24, 550, 25),
woosh.Token(woosh.NAME, 'cls', 550, 25, 550, 28),
woosh.Token(woosh.OP, ',', 550, 28, 550, 29),
woosh.Token(woosh.NAME, 'fields', 550, 30, 550, 36),
woosh.Token(woosh.OP, ',', 550, 36, 550, 37),
woosh.Token(woosh.NAME, 'globals', 550, 38, 550, 45),
woosh.Token(woosh.OP, ')', 550, 45, 550, 46),
woosh.Token(woosh.OP, ':', 550, 46, 550, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 550, 47, 551, 0),
woosh.Token(woosh.INDENT, '    ', 551, 0, 551, 4),
woosh.Token(woosh.NAME, 'locals', 551, 4, 551, 10),
woosh.Token(woosh.OP, '=', 551, 11, 551, 12),
woosh.Token(woosh.OP, '{', 551, 13, 551, 14),
woosh.Token(woosh.STRING, "'cls'", 551, 14, 551, 19),
woosh.Token(woosh.OP, ':', 551, 19, 551, 20),
woosh.Token(woosh.NAME, 'cls', 551, 21, 551, 24),
woosh.Token(woosh.OP, ',', 551, 24, 551, 25),
woosh.Token(woosh.STRING, "'FrozenInstanceError'", 552, 14, 552, 35),
woosh.Token(woosh.OP, ':', 552, 35, 552, 36),
woosh.Token(woosh.NAME, 'FrozenInstanceError', 552, 37, 552, 56),
woosh.Token(woosh.OP, '}', 552, 56, 552, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 552, 57, 553, 0),
woosh.Token(woosh.NAME, 'if', 553, 4, 553, 6),
woosh.Token(woosh.NAME, 'fields', 553, 7, 553, 13),
woosh.Token(woosh.OP, ':', 553, 13, 553, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 553, 14, 554, 0),
woosh.Token(woosh.INDENT, '        ', 554, 0, 554, 8),
woosh.Token(woosh.NAME, 'fields_str', 554, 8, 554, 18),
woosh.Token(woosh.OP, '=', 554, 19, 554, 20),
woosh.Token(woosh.STRING, "'('", 554, 21, 554, 24),
woosh.Token(woosh.OP, '+', 554, 25, 554, 26),
woosh.Token(woosh.STRING, "','", 554, 27, 554, 30),
woosh.Token(woosh.OP, '.', 554, 30, 554, 31),
woosh.Token(woosh.NAME, 'join', 554, 31, 554, 35),
woosh.Token(woosh.OP, '(', 554, 35, 554, 36),
woosh.Token(woosh.NAME, 'repr', 554, 36, 554, 40),
woosh.Token(woosh.OP, '(', 554, 40, 554, 41),
woosh.Token(woosh.NAME, 'f', 554, 41, 554, 42),
woosh.Token(woosh.OP, '.', 554, 42, 554, 43),
woosh.Token(woosh.NAME, 'name', 554, 43, 554, 47),
woosh.Token(woosh.OP, ')', 554, 47, 554, 48),
woosh.Token(woosh.NAME, 'for', 554, 49, 554, 52),
woosh.Token(woosh.NAME, 'f', 554, 53, 554, 54),
woosh.Token(woosh.NAME, 'in', 554, 55, 554, 57),
woosh.Token(woosh.NAME, 'fields', 554, 58, 554, 64),
woosh.Token(woosh.OP, ')', 554, 64, 554, 65),
woosh.Token(woosh.OP, '+', 554, 66, 554, 67),
woosh.Token(woosh.STRING, "',)'", 554, 68, 554, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 72, 555, 0),
woosh.Token(woosh.DEDENT, '    ', 555, 0, 555, 4),
woosh.Token(woosh.NAME, 'else', 555, 4, 555, 8),
woosh.Token(woosh.OP, ':', 555, 8, 555, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 9, 556, 0),
woosh.Token(woosh.COMMENT, '# Special case for the zero-length tuple.', 556, 8, 556, 49),
woosh.Token(woosh.INDENT, '        ', 557, 0, 557, 8),
woosh.Token(woosh.NAME, 'fields_str', 557, 8, 557, 18),
woosh.Token(woosh.OP, '=', 557, 19, 557, 20),
woosh.Token(woosh.STRING, "'()'", 557, 21, 557, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 25, 558, 0),
woosh.Token(woosh.DEDENT, '    ', 558, 0, 558, 4),
woosh.Token(woosh.NAME, 'return', 558, 4, 558, 10),
woosh.Token(woosh.OP, '(', 558, 11, 558, 12),
woosh.Token(woosh.NAME, '_create_fn', 558, 12, 558, 22),
woosh.Token(woosh.OP, '(', 558, 22, 558, 23),
woosh.Token(woosh.STRING, "'__setattr__'", 558, 23, 558, 36),
woosh.Token(woosh.OP, ',', 558, 36, 558, 37),
woosh.Token(woosh.OP, '(', 559, 22, 559, 23),
woosh.Token(woosh.STRING, "'self'", 559, 23, 559, 29),
woosh.Token(woosh.OP, ',', 559, 29, 559, 30),
woosh.Token(woosh.STRING, "'name'", 559, 31, 559, 37),
woosh.Token(woosh.OP, ',', 559, 37, 559, 38),
woosh.Token(woosh.STRING, "'value'", 559, 39, 559, 46),
woosh.Token(woosh.OP, ')', 559, 46, 559, 47),
woosh.Token(woosh.OP, ',', 559, 47, 559, 48),
woosh.Token(woosh.OP, '(', 560, 22, 560, 23),
woosh.Token(woosh.STRING, "f'if type(self) is cls or name in {fields_str}:'", 560, 23, 560, 71),
woosh.Token(woosh.OP, ',', 560, 71, 560, 72),
woosh.Token(woosh.STRING, '\' raise FrozenInstanceError(f"cannot assign to field {name!r}")\'', 561, 24, 561, 88),
woosh.Token(woosh.OP, ',', 561, 88, 561, 89),
woosh.Token(woosh.STRING, "f'super(cls, self).__setattr__(name, value)'", 562, 23, 562, 67),
woosh.Token(woosh.OP, ')', 562, 67, 562, 68),
woosh.Token(woosh.OP, ',', 562, 68, 562, 69),
woosh.Token(woosh.NAME, 'locals', 563, 23, 563, 29),
woosh.Token(woosh.OP, '=', 563, 29, 563, 30),
woosh.Token(woosh.NAME, 'locals', 563, 30, 563, 36),
woosh.Token(woosh.OP, ',', 563, 36, 563, 37),
woosh.Token(woosh.NAME, 'globals', 564, 23, 564, 30),
woosh.Token(woosh.OP, '=', 564, 30, 564, 31),
woosh.Token(woosh.NAME, 'globals', 564, 31, 564, 38),
woosh.Token(woosh.OP, ')', 564, 38, 564, 39),
woosh.Token(woosh.OP, ',', 564, 39, 564, 40),
woosh.Token(woosh.NAME, '_create_fn', 565, 12, 565, 22),
woosh.Token(woosh.OP, '(', 565, 22, 565, 23),
woosh.Token(woosh.STRING, "'__delattr__'", 565, 23, 565, 36),
woosh.Token(woosh.OP, ',', 565, 36, 565, 37),
woosh.Token(woosh.OP, '(', 566, 22, 566, 23),
woosh.Token(woosh.STRING, "'self'", 566, 23, 566, 29),
woosh.Token(woosh.OP, ',', 566, 29, 566, 30),
woosh.Token(woosh.STRING, "'name'", 566, 31, 566, 37),
woosh.Token(woosh.OP, ')', 566, 37, 566, 38),
woosh.Token(woosh.OP, ',', 566, 38, 566, 39),
woosh.Token(woosh.OP, '(', 567, 22, 567, 23),
woosh.Token(woosh.STRING, "f'if type(self) is cls or name in {fields_str}:'", 567, 23, 567, 71),
woosh.Token(woosh.OP, ',', 567, 71, 567, 72),
woosh.Token(woosh.STRING, '\' raise FrozenInstanceError(f"cannot delete field {name!r}")\'', 568, 24, 568, 85),
woosh.Token(woosh.OP, ',', 568, 85, 568, 86),
woosh.Token(woosh.STRING, "f'super(cls, self).__delattr__(name)'", 569, 23, 569, 60),
woosh.Token(woosh.OP, ')', 569, 60, 569, 61),
woosh.Token(woosh.OP, ',', 569, 61, 569, 62),
woosh.Token(woosh.NAME, 'locals', 570, 23, 570, 29),
woosh.Token(woosh.OP, '=', 570, 29, 570, 30),
woosh.Token(woosh.NAME, 'locals', 570, 30, 570, 36),
woosh.Token(woosh.OP, ',', 570, 36, 570, 37),
woosh.Token(woosh.NAME, 'globals', 571, 23, 571, 30),
woosh.Token(woosh.OP, '=', 571, 30, 571, 31),
woosh.Token(woosh.NAME, 'globals', 571, 31, 571, 38),
woosh.Token(woosh.OP, ')', 571, 38, 571, 39),
woosh.Token(woosh.OP, ',', 571, 39, 571, 40),
woosh.Token(woosh.OP, ')', 572, 12, 572, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 572, 13, 573, 0),
woosh.Token(woosh.DEDENT, '', 575, 0, 575, 0),
woosh.Token(woosh.NAME, 'def', 575, 0, 575, 3),
woosh.Token(woosh.NAME, '_cmp_fn', 575, 4, 575, 11),
woosh.Token(woosh.OP, '(', 575, 11, 575, 12),
woosh.Token(woosh.NAME, 'name', 575, 12, 575, 16),
woosh.Token(woosh.OP, ',', 575, 16, 575, 17),
woosh.Token(woosh.NAME, 'op', 575, 18, 575, 20),
woosh.Token(woosh.OP, ',', 575, 20, 575, 21),
woosh.Token(woosh.NAME, 'self_tuple', 575, 22, 575, 32),
woosh.Token(woosh.OP, ',', 575, 32, 575, 33),
woosh.Token(woosh.NAME, 'other_tuple', 575, 34, 575, 45),
woosh.Token(woosh.OP, ',', 575, 45, 575, 46),
woosh.Token(woosh.NAME, 'globals', 575, 47, 575, 54),
woosh.Token(woosh.OP, ')', 575, 54, 575, 55),
woosh.Token(woosh.OP, ':', 575, 55, 575, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 575, 56, 576, 0),
woosh.Token(woosh.COMMENT, '# Create a comparison function.  If the fields in the object are', 576, 4, 576, 68),
woosh.Token(woosh.COMMENT, "# named 'x' and 'y', then self_tuple is the string", 577, 4, 577, 54),
woosh.Token(woosh.COMMENT, "# '(self.x,self.y)' and other_tuple is the string", 578, 4, 578, 53),
woosh.Token(woosh.COMMENT, "# '(other.x,other.y)'.", 579, 4, 579, 26),
woosh.Token(woosh.INDENT, '    ', 581, 0, 581, 4),
woosh.Token(woosh.NAME, 'return', 581, 4, 581, 10),
woosh.Token(woosh.NAME, '_create_fn', 581, 11, 581, 21),
woosh.Token(woosh.OP, '(', 581, 21, 581, 22),
woosh.Token(woosh.NAME, 'name', 581, 22, 581, 26),
woosh.Token(woosh.OP, ',', 581, 26, 581, 27),
woosh.Token(woosh.OP, '(', 582, 22, 582, 23),
woosh.Token(woosh.STRING, "'self'", 582, 23, 582, 29),
woosh.Token(woosh.OP, ',', 582, 29, 582, 30),
woosh.Token(woosh.STRING, "'other'", 582, 31, 582, 38),
woosh.Token(woosh.OP, ')', 582, 38, 582, 39),
woosh.Token(woosh.OP, ',', 582, 39, 582, 40),
woosh.Token(woosh.OP, '[', 583, 22, 583, 23),
woosh.Token(woosh.STRING, "'if other.__class__ is self.__class__:'", 583, 24, 583, 63),
woosh.Token(woosh.OP, ',', 583, 63, 583, 64),
woosh.Token(woosh.STRING, "f' return {self_tuple}{op}{other_tuple}'", 584, 23, 584, 63),
woosh.Token(woosh.OP, ',', 584, 63, 584, 64),
woosh.Token(woosh.STRING, "'return NotImplemented'", 585, 24, 585, 47),
woosh.Token(woosh.OP, ']', 585, 47, 585, 48),
woosh.Token(woosh.OP, ',', 585, 48, 585, 49),
woosh.Token(woosh.NAME, 'globals', 586, 22, 586, 29),
woosh.Token(woosh.OP, '=', 586, 29, 586, 30),
woosh.Token(woosh.NAME, 'globals', 586, 30, 586, 37),
woosh.Token(woosh.OP, ')', 586, 37, 586, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 586, 38, 587, 0),
woosh.Token(woosh.DEDENT, '', 589, 0, 589, 0),
woosh.Token(woosh.NAME, 'def', 589, 0, 589, 3),
woosh.Token(woosh.NAME, '_hash_fn', 589, 4, 589, 12),
woosh.Token(woosh.OP, '(', 589, 12, 589, 13),
woosh.Token(woosh.NAME, 'fields', 589, 13, 589, 19),
woosh.Token(woosh.OP, ',', 589, 19, 589, 20),
woosh.Token(woosh.NAME, 'globals', 589, 21, 589, 28),
woosh.Token(woosh.OP, ')', 589, 28, 589, 29),
woosh.Token(woosh.OP, ':', 589, 29, 589, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 30, 590, 0),
woosh.Token(woosh.INDENT, '    ', 590, 0, 590, 4),
woosh.Token(woosh.NAME, 'self_tuple', 590, 4, 590, 14),
woosh.Token(woosh.OP, '=', 590, 15, 590, 16),
woosh.Token(woosh.NAME, '_tuple_str', 590, 17, 590, 27),
woosh.Token(woosh.OP, '(', 590, 27, 590, 28),
woosh.Token(woosh.STRING, "'self'", 590, 28, 590, 34),
woosh.Token(woosh.OP, ',', 590, 34, 590, 35),
woosh.Token(woosh.NAME, 'fields', 590, 36, 590, 42),
woosh.Token(woosh.OP, ')', 590, 42, 590, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 43, 591, 0),
woosh.Token(woosh.NAME, 'return', 591, 4, 591, 10),
woosh.Token(woosh.NAME, '_create_fn', 591, 11, 591, 21),
woosh.Token(woosh.OP, '(', 591, 21, 591, 22),
woosh.Token(woosh.STRING, "'__hash__'", 591, 22, 591, 32),
woosh.Token(woosh.OP, ',', 591, 32, 591, 33),
woosh.Token(woosh.OP, '(', 592, 22, 592, 23),
woosh.Token(woosh.STRING, "'self'", 592, 23, 592, 29),
woosh.Token(woosh.OP, ',', 592, 29, 592, 30),
woosh.Token(woosh.OP, ')', 592, 30, 592, 31),
woosh.Token(woosh.OP, ',', 592, 31, 592, 32),
woosh.Token(woosh.OP, '[', 593, 22, 593, 23),
woosh.Token(woosh.STRING, "f'return hash({self_tuple})'", 593, 23, 593, 51),
woosh.Token(woosh.OP, ']', 593, 51, 593, 52),
woosh.Token(woosh.OP, ',', 593, 52, 593, 53),
woosh.Token(woosh.NAME, 'globals', 594, 22, 594, 29),
woosh.Token(woosh.OP, '=', 594, 29, 594, 30),
woosh.Token(woosh.NAME, 'globals', 594, 30, 594, 37),
woosh.Token(woosh.OP, ')', 594, 37, 594, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 38, 595, 0),
woosh.Token(woosh.DEDENT, '', 597, 0, 597, 0),
woosh.Token(woosh.NAME, 'def', 597, 0, 597, 3),
woosh.Token(woosh.NAME, '_is_classvar', 597, 4, 597, 16),
woosh.Token(woosh.OP, '(', 597, 16, 597, 17),
woosh.Token(woosh.NAME, 'a_type', 597, 17, 597, 23),
woosh.Token(woosh.OP, ',', 597, 23, 597, 24),
woosh.Token(woosh.NAME, 'typing', 597, 25, 597, 31),
woosh.Token(woosh.OP, ')', 597, 31, 597, 32),
woosh.Token(woosh.OP, ':', 597, 32, 597, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 33, 598, 0),
woosh.Token(woosh.COMMENT, "# This test uses a typing internal class, but it's the best way to", 598, 4, 598, 70),
woosh.Token(woosh.COMMENT, '# test if this is a ClassVar.', 599, 4, 599, 33),
woosh.Token(woosh.INDENT, '    ', 600, 0, 600, 4),
woosh.Token(woosh.NAME, 'return', 600, 4, 600, 10),
woosh.Token(woosh.OP, '(', 600, 11, 600, 12),
woosh.Token(woosh.NAME, 'a_type', 600, 12, 600, 18),
woosh.Token(woosh.NAME, 'is', 600, 19, 600, 21),
woosh.Token(woosh.NAME, 'typing', 600, 22, 600, 28),
woosh.Token(woosh.OP, '.', 600, 28, 600, 29),
woosh.Token(woosh.NAME, 'ClassVar', 600, 29, 600, 37),
woosh.Token(woosh.NAME, 'or', 601, 12, 601, 14),
woosh.Token(woosh.OP, '(', 601, 15, 601, 16),
woosh.Token(woosh.NAME, 'type', 601, 16, 601, 20),
woosh.Token(woosh.OP, '(', 601, 20, 601, 21),
woosh.Token(woosh.NAME, 'a_type', 601, 21, 601, 27),
woosh.Token(woosh.OP, ')', 601, 27, 601, 28),
woosh.Token(woosh.NAME, 'is', 601, 29, 601, 31),
woosh.Token(woosh.NAME, 'typing', 601, 32, 601, 38),
woosh.Token(woosh.OP, '.', 601, 38, 601, 39),
woosh.Token(woosh.NAME, '_GenericAlias', 601, 39, 601, 52),
woosh.Token(woosh.NAME, 'and', 602, 16, 602, 19),
woosh.Token(woosh.NAME, 'a_type', 602, 20, 602, 26),
woosh.Token(woosh.OP, '.', 602, 26, 602, 27),
woosh.Token(woosh.NAME, '__origin__', 602, 27, 602, 37),
woosh.Token(woosh.NAME, 'is', 602, 38, 602, 40),
woosh.Token(woosh.NAME, 'typing', 602, 41, 602, 47),
woosh.Token(woosh.OP, '.', 602, 47, 602, 48),
woosh.Token(woosh.NAME, 'ClassVar', 602, 48, 602, 56),
woosh.Token(woosh.OP, ')', 602, 56, 602, 57),
woosh.Token(woosh.OP, ')', 602, 57, 602, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 58, 603, 0),
woosh.Token(woosh.DEDENT, '', 605, 0, 605, 0),
woosh.Token(woosh.NAME, 'def', 605, 0, 605, 3),
woosh.Token(woosh.NAME, '_is_initvar', 605, 4, 605, 15),
woosh.Token(woosh.OP, '(', 605, 15, 605, 16),
woosh.Token(woosh.NAME, 'a_type', 605, 16, 605, 22),
woosh.Token(woosh.OP, ',', 605, 22, 605, 23),
woosh.Token(woosh.NAME, 'dataclasses', 605, 24, 605, 35),
woosh.Token(woosh.OP, ')', 605, 35, 605, 36),
woosh.Token(woosh.OP, ':', 605, 36, 605, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 37, 606, 0),
woosh.Token(woosh.COMMENT, "# The module we're checking against is the module we're", 606, 4, 606, 59),
woosh.Token(woosh.COMMENT, '# currently in (dataclasses.py).', 607, 4, 607, 36),
woosh.Token(woosh.INDENT, '    ', 608, 0, 608, 4),
woosh.Token(woosh.NAME, 'return', 608, 4, 608, 10),
woosh.Token(woosh.OP, '(', 608, 11, 608, 12),
woosh.Token(woosh.NAME, 'a_type', 608, 12, 608, 18),
woosh.Token(woosh.NAME, 'is', 608, 19, 608, 21),
woosh.Token(woosh.NAME, 'dataclasses', 608, 22, 608, 33),
woosh.Token(woosh.OP, '.', 608, 33, 608, 34),
woosh.Token(woosh.NAME, 'InitVar', 608, 34, 608, 41),
woosh.Token(woosh.NAME, 'or', 609, 12, 609, 14),
woosh.Token(woosh.NAME, 'type', 609, 15, 609, 19),
woosh.Token(woosh.OP, '(', 609, 19, 609, 20),
woosh.Token(woosh.NAME, 'a_type', 609, 20, 609, 26),
woosh.Token(woosh.OP, ')', 609, 26, 609, 27),
woosh.Token(woosh.NAME, 'is', 609, 28, 609, 30),
woosh.Token(woosh.NAME, 'dataclasses', 609, 31, 609, 42),
woosh.Token(woosh.OP, '.', 609, 42, 609, 43),
woosh.Token(woosh.NAME, 'InitVar', 609, 43, 609, 50),
woosh.Token(woosh.OP, ')', 609, 50, 609, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 51, 610, 0),
woosh.Token(woosh.DEDENT, '', 612, 0, 612, 0),
woosh.Token(woosh.NAME, 'def', 612, 0, 612, 3),
woosh.Token(woosh.NAME, '_is_type', 612, 4, 612, 12),
woosh.Token(woosh.OP, '(', 612, 12, 612, 13),
woosh.Token(woosh.NAME, 'annotation', 612, 13, 612, 23),
woosh.Token(woosh.OP, ',', 612, 23, 612, 24),
woosh.Token(woosh.NAME, 'cls', 612, 25, 612, 28),
woosh.Token(woosh.OP, ',', 612, 28, 612, 29),
woosh.Token(woosh.NAME, 'a_module', 612, 30, 612, 38),
woosh.Token(woosh.OP, ',', 612, 38, 612, 39),
woosh.Token(woosh.NAME, 'a_type', 612, 40, 612, 46),
woosh.Token(woosh.OP, ',', 612, 46, 612, 47),
woosh.Token(woosh.NAME, 'is_type_predicate', 612, 48, 612, 65),
woosh.Token(woosh.OP, ')', 612, 65, 612, 66),
woosh.Token(woosh.OP, ':', 612, 66, 612, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 612, 67, 613, 0),
woosh.Token(woosh.COMMENT, '# Given a type annotation string, does it refer to a_type in', 613, 4, 613, 64),
woosh.Token(woosh.COMMENT, '# a_module?  For example, when checking that annotation denotes a', 614, 4, 614, 69),
woosh.Token(woosh.COMMENT, '# ClassVar, then a_module is typing, and a_type is', 615, 4, 615, 54),
woosh.Token(woosh.COMMENT, '# typing.ClassVar.', 616, 4, 616, 22),
woosh.Token(woosh.COMMENT, "# It's possible to look up a_module given a_type, but it involves", 618, 4, 618, 69),
woosh.Token(woosh.COMMENT, '# looking in sys.modules (again!), and seems like a waste since', 619, 4, 619, 67),
woosh.Token(woosh.COMMENT, '# the caller already knows a_module.', 620, 4, 620, 40),
woosh.Token(woosh.COMMENT, '# - annotation is a string type annotation', 622, 4, 622, 46),
woosh.Token(woosh.COMMENT, '# - cls is the class that this annotation was found in', 623, 4, 623, 58),
woosh.Token(woosh.COMMENT, '# - a_module is the module we want to match', 624, 4, 624, 47),
woosh.Token(woosh.COMMENT, '# - a_type is the type in that module we want to match', 625, 4, 625, 58),
woosh.Token(woosh.COMMENT, '# - is_type_predicate is a function called with (obj, a_module)', 626, 4, 626, 67),
woosh.Token(woosh.COMMENT, '#   that determines if obj is of the desired type.', 627, 4, 627, 54),
woosh.Token(woosh.COMMENT, '# Since this test does not do a local namespace lookup (and', 629, 4, 629, 63),
woosh.Token(woosh.COMMENT, '# instead only a module (global) lookup), there are some things it', 630, 4, 630, 70),
woosh.Token(woosh.COMMENT, '# gets wrong.', 631, 4, 631, 17),
woosh.Token(woosh.COMMENT, '# With string annotations, cv0 will be detected as a ClassVar:', 633, 4, 633, 66),
woosh.Token(woosh.COMMENT, '#   CV = ClassVar', 634, 4, 634, 21),
woosh.Token(woosh.COMMENT, '#   @dataclass', 635, 4, 635, 18),
woosh.Token(woosh.COMMENT, '#   class C0:', 636, 4, 636, 17),
woosh.Token(woosh.COMMENT, '#     cv0: CV', 637, 4, 637, 17),
woosh.Token(woosh.COMMENT, '# But in this example cv1 will not be detected as a ClassVar:', 639, 4, 639, 65),
woosh.Token(woosh.COMMENT, '#   @dataclass', 640, 4, 640, 18),
woosh.Token(woosh.COMMENT, '#   class C1:', 641, 4, 641, 17),
woosh.Token(woosh.COMMENT, '#     CV = ClassVar', 642, 4, 642, 23),
woosh.Token(woosh.COMMENT, '#     cv1: CV', 643, 4, 643, 17),
woosh.Token(woosh.COMMENT, '# In C1, the code in this function (_is_type) will look up "CV" in', 645, 4, 645, 70),
woosh.Token(woosh.COMMENT, '# the module and not find it, so it will not consider cv1 as a', 646, 4, 646, 66),
woosh.Token(woosh.COMMENT, '# ClassVar.  This is a fairly obscure corner case, and the best', 647, 4, 647, 67),
woosh.Token(woosh.COMMENT, '# way to fix it would be to eval() the string "CV" with the', 648, 4, 648, 63),
woosh.Token(woosh.COMMENT, '# correct global and local namespaces.  However that would involve', 649, 4, 649, 70),
woosh.Token(woosh.COMMENT, '# a eval() penalty for every single field of every dataclass', 650, 4, 650, 64),
woosh.Token(woosh.COMMENT, "# that's defined.  It was judged not worth it.", 651, 4, 651, 50),
woosh.Token(woosh.INDENT, '    ', 653, 0, 653, 4),
woosh.Token(woosh.NAME, 'match', 653, 4, 653, 9),
woosh.Token(woosh.OP, '=', 653, 10, 653, 11),
woosh.Token(woosh.NAME, '_MODULE_IDENTIFIER_RE', 653, 12, 653, 33),
woosh.Token(woosh.OP, '.', 653, 33, 653, 34),
woosh.Token(woosh.NAME, 'match', 653, 34, 653, 39),
woosh.Token(woosh.OP, '(', 653, 39, 653, 40),
woosh.Token(woosh.NAME, 'annotation', 653, 40, 653, 50),
woosh.Token(woosh.OP, ')', 653, 50, 653, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 653, 51, 654, 0),
woosh.Token(woosh.NAME, 'if', 654, 4, 654, 6),
woosh.Token(woosh.NAME, 'match', 654, 7, 654, 12),
woosh.Token(woosh.OP, ':', 654, 12, 654, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 654, 13, 655, 0),
woosh.Token(woosh.INDENT, '        ', 655, 0, 655, 8),
woosh.Token(woosh.NAME, 'ns', 655, 8, 655, 10),
woosh.Token(woosh.OP, '=', 655, 11, 655, 12),
woosh.Token(woosh.NAME, 'None', 655, 13, 655, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 655, 17, 656, 0),
woosh.Token(woosh.NAME, 'module_name', 656, 8, 656, 19),
woosh.Token(woosh.OP, '=', 656, 20, 656, 21),
woosh.Token(woosh.NAME, 'match', 656, 22, 656, 27),
woosh.Token(woosh.OP, '.', 656, 27, 656, 28),
woosh.Token(woosh.NAME, 'group', 656, 28, 656, 33),
woosh.Token(woosh.OP, '(', 656, 33, 656, 34),
woosh.Token(woosh.NUMBER, '1', 656, 34, 656, 35),
woosh.Token(woosh.OP, ')', 656, 35, 656, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 36, 657, 0),
woosh.Token(woosh.NAME, 'if', 657, 8, 657, 10),
woosh.Token(woosh.NAME, 'not', 657, 11, 657, 14),
woosh.Token(woosh.NAME, 'module_name', 657, 15, 657, 26),
woosh.Token(woosh.OP, ':', 657, 26, 657, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 657, 27, 658, 0),
woosh.Token(woosh.COMMENT, "# No module name, assume the class's module did", 658, 12, 658, 59),
woosh.Token(woosh.COMMENT, '# "from dataclasses import InitVar".', 659, 12, 659, 48),
woosh.Token(woosh.INDENT, '            ', 660, 0, 660, 12),
woosh.Token(woosh.NAME, 'ns', 660, 12, 660, 14),
woosh.Token(woosh.OP, '=', 660, 15, 660, 16),
woosh.Token(woosh.NAME, 'sys', 660, 17, 660, 20),
woosh.Token(woosh.OP, '.', 660, 20, 660, 21),
woosh.Token(woosh.NAME, 'modules', 660, 21, 660, 28),
woosh.Token(woosh.OP, '.', 660, 28, 660, 29),
woosh.Token(woosh.NAME, 'get', 660, 29, 660, 32),
woosh.Token(woosh.OP, '(', 660, 32, 660, 33),
woosh.Token(woosh.NAME, 'cls', 660, 33, 660, 36),
woosh.Token(woosh.OP, '.', 660, 36, 660, 37),
woosh.Token(woosh.NAME, '__module__', 660, 37, 660, 47),
woosh.Token(woosh.OP, ')', 660, 47, 660, 48),
woosh.Token(woosh.OP, '.', 660, 48, 660, 49),
woosh.Token(woosh.NAME, '__dict__', 660, 49, 660, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 57, 661, 0),
woosh.Token(woosh.DEDENT, '        ', 661, 0, 661, 8),
woosh.Token(woosh.NAME, 'else', 661, 8, 661, 12),
woosh.Token(woosh.OP, ':', 661, 12, 661, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 13, 662, 0),
woosh.Token(woosh.COMMENT, "# Look up module_name in the class's module.", 662, 12, 662, 56),
woosh.Token(woosh.INDENT, '            ', 663, 0, 663, 12),
woosh.Token(woosh.NAME, 'module', 663, 12, 663, 18),
woosh.Token(woosh.OP, '=', 663, 19, 663, 20),
woosh.Token(woosh.NAME, 'sys', 663, 21, 663, 24),
woosh.Token(woosh.OP, '.', 663, 24, 663, 25),
woosh.Token(woosh.NAME, 'modules', 663, 25, 663, 32),
woosh.Token(woosh.OP, '.', 663, 32, 663, 33),
woosh.Token(woosh.NAME, 'get', 663, 33, 663, 36),
woosh.Token(woosh.OP, '(', 663, 36, 663, 37),
woosh.Token(woosh.NAME, 'cls', 663, 37, 663, 40),
woosh.Token(woosh.OP, '.', 663, 40, 663, 41),
woosh.Token(woosh.NAME, '__module__', 663, 41, 663, 51),
woosh.Token(woosh.OP, ')', 663, 51, 663, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 52, 664, 0),
woosh.Token(woosh.NAME, 'if', 664, 12, 664, 14),
woosh.Token(woosh.NAME, 'module', 664, 15, 664, 21),
woosh.Token(woosh.NAME, 'and', 664, 22, 664, 25),
woosh.Token(woosh.NAME, 'module', 664, 26, 664, 32),
woosh.Token(woosh.OP, '.', 664, 32, 664, 33),
woosh.Token(woosh.NAME, '__dict__', 664, 33, 664, 41),
woosh.Token(woosh.OP, '.', 664, 41, 664, 42),
woosh.Token(woosh.NAME, 'get', 664, 42, 664, 45),
woosh.Token(woosh.OP, '(', 664, 45, 664, 46),
woosh.Token(woosh.NAME, 'module_name', 664, 46, 664, 57),
woosh.Token(woosh.OP, ')', 664, 57, 664, 58),
woosh.Token(woosh.NAME, 'is', 664, 59, 664, 61),
woosh.Token(woosh.NAME, 'a_module', 664, 62, 664, 70),
woosh.Token(woosh.OP, ':', 664, 70, 664, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 71, 665, 0),
woosh.Token(woosh.INDENT, '                ', 665, 0, 665, 16),
woosh.Token(woosh.NAME, 'ns', 665, 16, 665, 18),
woosh.Token(woosh.OP, '=', 665, 19, 665, 20),
woosh.Token(woosh.NAME, 'sys', 665, 21, 665, 24),
woosh.Token(woosh.OP, '.', 665, 24, 665, 25),
woosh.Token(woosh.NAME, 'modules', 665, 25, 665, 32),
woosh.Token(woosh.OP, '.', 665, 32, 665, 33),
woosh.Token(woosh.NAME, 'get', 665, 33, 665, 36),
woosh.Token(woosh.OP, '(', 665, 36, 665, 37),
woosh.Token(woosh.NAME, 'a_type', 665, 37, 665, 43),
woosh.Token(woosh.OP, '.', 665, 43, 665, 44),
woosh.Token(woosh.NAME, '__module__', 665, 44, 665, 54),
woosh.Token(woosh.OP, ')', 665, 54, 665, 55),
woosh.Token(woosh.OP, '.', 665, 55, 665, 56),
woosh.Token(woosh.NAME, '__dict__', 665, 56, 665, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 665, 64, 666, 0),
woosh.Token(woosh.DEDENT, '        ', 666, 0, 666, 8),
woosh.Token(woosh.DEDENT, '', 666, 8, 666, 8),
woosh.Token(woosh.NAME, 'if', 666, 8, 666, 10),
woosh.Token(woosh.NAME, 'ns', 666, 11, 666, 13),
woosh.Token(woosh.NAME, 'and', 666, 14, 666, 17),
woosh.Token(woosh.NAME, 'is_type_predicate', 666, 18, 666, 35),
woosh.Token(woosh.OP, '(', 666, 35, 666, 36),
woosh.Token(woosh.NAME, 'ns', 666, 36, 666, 38),
woosh.Token(woosh.OP, '.', 666, 38, 666, 39),
woosh.Token(woosh.NAME, 'get', 666, 39, 666, 42),
woosh.Token(woosh.OP, '(', 666, 42, 666, 43),
woosh.Token(woosh.NAME, 'match', 666, 43, 666, 48),
woosh.Token(woosh.OP, '.', 666, 48, 666, 49),
woosh.Token(woosh.NAME, 'group', 666, 49, 666, 54),
woosh.Token(woosh.OP, '(', 666, 54, 666, 55),
woosh.Token(woosh.NUMBER, '2', 666, 55, 666, 56),
woosh.Token(woosh.OP, ')', 666, 56, 666, 57),
woosh.Token(woosh.OP, ')', 666, 57, 666, 58),
woosh.Token(woosh.OP, ',', 666, 58, 666, 59),
woosh.Token(woosh.NAME, 'a_module', 666, 60, 666, 68),
woosh.Token(woosh.OP, ')', 666, 68, 666, 69),
woosh.Token(woosh.OP, ':', 666, 69, 666, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 666, 70, 667, 0),
woosh.Token(woosh.INDENT, '            ', 667, 0, 667, 12),
woosh.Token(woosh.NAME, 'return', 667, 12, 667, 18),
woosh.Token(woosh.NAME, 'True', 667, 19, 667, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 23, 668, 0),
woosh.Token(woosh.DEDENT, '    ', 668, 0, 668, 4),
woosh.Token(woosh.DEDENT, '', 668, 4, 668, 4),
woosh.Token(woosh.NAME, 'return', 668, 4, 668, 10),
woosh.Token(woosh.NAME, 'False', 668, 11, 668, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 668, 16, 669, 0),
woosh.Token(woosh.DEDENT, '', 671, 0, 671, 0),
woosh.Token(woosh.NAME, 'def', 671, 0, 671, 3),
woosh.Token(woosh.NAME, '_get_field', 671, 4, 671, 14),
woosh.Token(woosh.OP, '(', 671, 14, 671, 15),
woosh.Token(woosh.NAME, 'cls', 671, 15, 671, 18),
woosh.Token(woosh.OP, ',', 671, 18, 671, 19),
woosh.Token(woosh.NAME, 'a_name', 671, 20, 671, 26),
woosh.Token(woosh.OP, ',', 671, 26, 671, 27),
woosh.Token(woosh.NAME, 'a_type', 671, 28, 671, 34),
woosh.Token(woosh.OP, ')', 671, 34, 671, 35),
woosh.Token(woosh.OP, ':', 671, 35, 671, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 36, 672, 0),
woosh.Token(woosh.COMMENT, '# Return a Field object for this field name and type.  ClassVars', 672, 4, 672, 68),
woosh.Token(woosh.COMMENT, '# and InitVars are also returned, but marked as such (see', 673, 4, 673, 61),
woosh.Token(woosh.COMMENT, '# f._field_type).', 674, 4, 674, 21),
woosh.Token(woosh.COMMENT, "# If the default value isn't derived from Field, then it's only a", 676, 4, 676, 69),
woosh.Token(woosh.COMMENT, '# normal default value.  Convert it to a Field().', 677, 4, 677, 53),
woosh.Token(woosh.INDENT, '    ', 678, 0, 678, 4),
woosh.Token(woosh.NAME, 'default', 678, 4, 678, 11),
woosh.Token(woosh.OP, '=', 678, 12, 678, 13),
woosh.Token(woosh.NAME, 'getattr', 678, 14, 678, 21),
woosh.Token(woosh.OP, '(', 678, 21, 678, 22),
woosh.Token(woosh.NAME, 'cls', 678, 22, 678, 25),
woosh.Token(woosh.OP, ',', 678, 25, 678, 26),
woosh.Token(woosh.NAME, 'a_name', 678, 27, 678, 33),
woosh.Token(woosh.OP, ',', 678, 33, 678, 34),
woosh.Token(woosh.NAME, 'MISSING', 678, 35, 678, 42),
woosh.Token(woosh.OP, ')', 678, 42, 678, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 678, 43, 679, 0),
woosh.Token(woosh.NAME, 'if', 679, 4, 679, 6),
woosh.Token(woosh.NAME, 'isinstance', 679, 7, 679, 17),
woosh.Token(woosh.OP, '(', 679, 17, 679, 18),
woosh.Token(woosh.NAME, 'default', 679, 18, 679, 25),
woosh.Token(woosh.OP, ',', 679, 25, 679, 26),
woosh.Token(woosh.NAME, 'Field', 679, 27, 679, 32),
woosh.Token(woosh.OP, ')', 679, 32, 679, 33),
woosh.Token(woosh.OP, ':', 679, 33, 679, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 34, 680, 0),
woosh.Token(woosh.INDENT, '        ', 680, 0, 680, 8),
woosh.Token(woosh.NAME, 'f', 680, 8, 680, 9),
woosh.Token(woosh.OP, '=', 680, 10, 680, 11),
woosh.Token(woosh.NAME, 'default', 680, 12, 680, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 680, 19, 681, 0),
woosh.Token(woosh.DEDENT, '    ', 681, 0, 681, 4),
woosh.Token(woosh.NAME, 'else', 681, 4, 681, 8),
woosh.Token(woosh.OP, ':', 681, 8, 681, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 681, 9, 682, 0),
woosh.Token(woosh.INDENT, '        ', 682, 0, 682, 8),
woosh.Token(woosh.NAME, 'if', 682, 8, 682, 10),
woosh.Token(woosh.NAME, 'isinstance', 682, 11, 682, 21),
woosh.Token(woosh.OP, '(', 682, 21, 682, 22),
woosh.Token(woosh.NAME, 'default', 682, 22, 682, 29),
woosh.Token(woosh.OP, ',', 682, 29, 682, 30),
woosh.Token(woosh.NAME, 'types', 682, 31, 682, 36),
woosh.Token(woosh.OP, '.', 682, 36, 682, 37),
woosh.Token(woosh.NAME, 'MemberDescriptorType', 682, 37, 682, 57),
woosh.Token(woosh.OP, ')', 682, 57, 682, 58),
woosh.Token(woosh.OP, ':', 682, 58, 682, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 682, 59, 683, 0),
woosh.Token(woosh.COMMENT, '# This is a field in __slots__, so it has no default value.', 683, 12, 683, 71),
woosh.Token(woosh.INDENT, '            ', 684, 0, 684, 12),
woosh.Token(woosh.NAME, 'default', 684, 12, 684, 19),
woosh.Token(woosh.OP, '=', 684, 20, 684, 21),
woosh.Token(woosh.NAME, 'MISSING', 684, 22, 684, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 29, 685, 0),
woosh.Token(woosh.DEDENT, '        ', 685, 0, 685, 8),
woosh.Token(woosh.NAME, 'f', 685, 8, 685, 9),
woosh.Token(woosh.OP, '=', 685, 10, 685, 11),
woosh.Token(woosh.NAME, 'field', 685, 12, 685, 17),
woosh.Token(woosh.OP, '(', 685, 17, 685, 18),
woosh.Token(woosh.NAME, 'default', 685, 18, 685, 25),
woosh.Token(woosh.OP, '=', 685, 25, 685, 26),
woosh.Token(woosh.NAME, 'default', 685, 26, 685, 33),
woosh.Token(woosh.OP, ')', 685, 33, 685, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 685, 34, 686, 0),
woosh.Token(woosh.COMMENT, '# Only at this point do we know the name and the type.  Set them.', 687, 4, 687, 69),
woosh.Token(woosh.DEDENT, '    ', 688, 0, 688, 4),
woosh.Token(woosh.NAME, 'f', 688, 4, 688, 5),
woosh.Token(woosh.OP, '.', 688, 5, 688, 6),
woosh.Token(woosh.NAME, 'name', 688, 6, 688, 10),
woosh.Token(woosh.OP, '=', 688, 11, 688, 12),
woosh.Token(woosh.NAME, 'a_name', 688, 13, 688, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 19, 689, 0),
woosh.Token(woosh.NAME, 'f', 689, 4, 689, 5),
woosh.Token(woosh.OP, '.', 689, 5, 689, 6),
woosh.Token(woosh.NAME, 'type', 689, 6, 689, 10),
woosh.Token(woosh.OP, '=', 689, 11, 689, 12),
woosh.Token(woosh.NAME, 'a_type', 689, 13, 689, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 689, 19, 690, 0),
woosh.Token(woosh.COMMENT, "# Assume it's a normal field until proven otherwise.  We're next", 691, 4, 691, 68),
woosh.Token(woosh.COMMENT, "# going to decide if it's a ClassVar or InitVar, everything else", 692, 4, 692, 68),
woosh.Token(woosh.COMMENT, '# is just a normal field.', 693, 4, 693, 29),
woosh.Token(woosh.NAME, 'f', 694, 4, 694, 5),
woosh.Token(woosh.OP, '.', 694, 5, 694, 6),
woosh.Token(woosh.NAME, '_field_type', 694, 6, 694, 17),
woosh.Token(woosh.OP, '=', 694, 18, 694, 19),
woosh.Token(woosh.NAME, '_FIELD', 694, 20, 694, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 694, 26, 695, 0),
woosh.Token(woosh.COMMENT, '# In addition to checking for actual types here, also check for', 696, 4, 696, 67),
woosh.Token(woosh.COMMENT, "# string annotations.  get_type_hints() won't always work for us", 697, 4, 697, 68),
woosh.Token(woosh.COMMENT, '# (see https://github.com/python/typing/issues/508 for example),', 698, 4, 698, 68),
woosh.Token(woosh.COMMENT, "# plus it's expensive and would require an eval for every stirng", 699, 4, 699, 68),
woosh.Token(woosh.COMMENT, '# annotation.  So, make a best effort to see if this is a ClassVar', 700, 4, 700, 70),
woosh.Token(woosh.COMMENT, "# or InitVar using regex's and checking that the thing referenced", 701, 4, 701, 69),
woosh.Token(woosh.COMMENT, '# is actually of the correct type.', 702, 4, 702, 38),
woosh.Token(woosh.COMMENT, '# For the complete discussion, see https://bugs.python.org/issue33453', 704, 4, 704, 73),
woosh.Token(woosh.COMMENT, "# If typing has not been imported, then it's impossible for any", 706, 4, 706, 67),
woosh.Token(woosh.COMMENT, '# annotation to be a ClassVar.  So, only look for ClassVar if', 707, 4, 707, 65),
woosh.Token(woosh.COMMENT, "# typing has been imported by any module (not necessarily cls's", 708, 4, 708, 67),
woosh.Token(woosh.COMMENT, '# module).', 709, 4, 709, 14),
woosh.Token(woosh.NAME, 'typing', 710, 4, 710, 10),
woosh.Token(woosh.OP, '=', 710, 11, 710, 12),
woosh.Token(woosh.NAME, 'sys', 710, 13, 710, 16),
woosh.Token(woosh.OP, '.', 710, 16, 710, 17),
woosh.Token(woosh.NAME, 'modules', 710, 17, 710, 24),
woosh.Token(woosh.OP, '.', 710, 24, 710, 25),
woosh.Token(woosh.NAME, 'get', 710, 25, 710, 28),
woosh.Token(woosh.OP, '(', 710, 28, 710, 29),
woosh.Token(woosh.STRING, "'typing'", 710, 29, 710, 37),
woosh.Token(woosh.OP, ')', 710, 37, 710, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 710, 38, 711, 0),
woosh.Token(woosh.NAME, 'if', 711, 4, 711, 6),
woosh.Token(woosh.NAME, 'typing', 711, 7, 711, 13),
woosh.Token(woosh.OP, ':', 711, 13, 711, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 14, 712, 0),
woosh.Token(woosh.INDENT, '        ', 712, 0, 712, 8),
woosh.Token(woosh.NAME, 'if', 712, 8, 712, 10),
woosh.Token(woosh.OP, '(', 712, 11, 712, 12),
woosh.Token(woosh.NAME, '_is_classvar', 712, 12, 712, 24),
woosh.Token(woosh.OP, '(', 712, 24, 712, 25),
woosh.Token(woosh.NAME, 'a_type', 712, 25, 712, 31),
woosh.Token(woosh.OP, ',', 712, 31, 712, 32),
woosh.Token(woosh.NAME, 'typing', 712, 33, 712, 39),
woosh.Token(woosh.OP, ')', 712, 39, 712, 40),
woosh.Token(woosh.NAME, 'or', 713, 12, 713, 14),
woosh.Token(woosh.OP, '(', 713, 15, 713, 16),
woosh.Token(woosh.NAME, 'isinstance', 713, 16, 713, 26),
woosh.Token(woosh.OP, '(', 713, 26, 713, 27),
woosh.Token(woosh.NAME, 'f', 713, 27, 713, 28),
woosh.Token(woosh.OP, '.', 713, 28, 713, 29),
woosh.Token(woosh.NAME, 'type', 713, 29, 713, 33),
woosh.Token(woosh.OP, ',', 713, 33, 713, 34),
woosh.Token(woosh.NAME, 'str', 713, 35, 713, 38),
woosh.Token(woosh.OP, ')', 713, 38, 713, 39),
woosh.Token(woosh.NAME, 'and', 714, 16, 714, 19),
woosh.Token(woosh.NAME, '_is_type', 714, 20, 714, 28),
woosh.Token(woosh.OP, '(', 714, 28, 714, 29),
woosh.Token(woosh.NAME, 'f', 714, 29, 714, 30),
woosh.Token(woosh.OP, '.', 714, 30, 714, 31),
woosh.Token(woosh.NAME, 'type', 714, 31, 714, 35),
woosh.Token(woosh.OP, ',', 714, 35, 714, 36),
woosh.Token(woosh.NAME, 'cls', 714, 37, 714, 40),
woosh.Token(woosh.OP, ',', 714, 40, 714, 41),
woosh.Token(woosh.NAME, 'typing', 714, 42, 714, 48),
woosh.Token(woosh.OP, ',', 714, 48, 714, 49),
woosh.Token(woosh.NAME, 'typing', 714, 50, 714, 56),
woosh.Token(woosh.OP, '.', 714, 56, 714, 57),
woosh.Token(woosh.NAME, 'ClassVar', 714, 57, 714, 65),
woosh.Token(woosh.OP, ',', 714, 65, 714, 66),
woosh.Token(woosh.NAME, '_is_classvar', 715, 29, 715, 41),
woosh.Token(woosh.OP, ')', 715, 41, 715, 42),
woosh.Token(woosh.OP, ')', 715, 42, 715, 43),
woosh.Token(woosh.OP, ')', 715, 43, 715, 44),
woosh.Token(woosh.OP, ':', 715, 44, 715, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 45, 716, 0),
woosh.Token(woosh.INDENT, '            ', 716, 0, 716, 12),
woosh.Token(woosh.NAME, 'f', 716, 12, 716, 13),
woosh.Token(woosh.OP, '.', 716, 13, 716, 14),
woosh.Token(woosh.NAME, '_field_type', 716, 14, 716, 25),
woosh.Token(woosh.OP, '=', 716, 26, 716, 27),
woosh.Token(woosh.NAME, '_FIELD_CLASSVAR', 716, 28, 716, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 43, 717, 0),
woosh.Token(woosh.COMMENT, "# If the type is InitVar, or if it's a matching string annotation,", 718, 4, 718, 70),
woosh.Token(woosh.COMMENT, "# then it's an InitVar.", 719, 4, 719, 27),
woosh.Token(woosh.DEDENT, '    ', 720, 0, 720, 4),
woosh.Token(woosh.DEDENT, '', 720, 4, 720, 4),
woosh.Token(woosh.NAME, 'if', 720, 4, 720, 6),
woosh.Token(woosh.NAME, 'f', 720, 7, 720, 8),
woosh.Token(woosh.OP, '.', 720, 8, 720, 9),
woosh.Token(woosh.NAME, '_field_type', 720, 9, 720, 20),
woosh.Token(woosh.NAME, 'is', 720, 21, 720, 23),
woosh.Token(woosh.NAME, '_FIELD', 720, 24, 720, 30),
woosh.Token(woosh.OP, ':', 720, 30, 720, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 31, 721, 0),
woosh.Token(woosh.COMMENT, "# The module we're checking against is the module we're", 721, 8, 721, 63),
woosh.Token(woosh.COMMENT, '# currently in (dataclasses.py).', 722, 8, 722, 40),
woosh.Token(woosh.INDENT, '        ', 723, 0, 723, 8),
woosh.Token(woosh.NAME, 'dataclasses', 723, 8, 723, 19),
woosh.Token(woosh.OP, '=', 723, 20, 723, 21),
woosh.Token(woosh.NAME, 'sys', 723, 22, 723, 25),
woosh.Token(woosh.OP, '.', 723, 25, 723, 26),
woosh.Token(woosh.NAME, 'modules', 723, 26, 723, 33),
woosh.Token(woosh.OP, '[', 723, 33, 723, 34),
woosh.Token(woosh.NAME, '__name__', 723, 34, 723, 42),
woosh.Token(woosh.OP, ']', 723, 42, 723, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 43, 724, 0),
woosh.Token(woosh.NAME, 'if', 724, 8, 724, 10),
woosh.Token(woosh.OP, '(', 724, 11, 724, 12),
woosh.Token(woosh.NAME, '_is_initvar', 724, 12, 724, 23),
woosh.Token(woosh.OP, '(', 724, 23, 724, 24),
woosh.Token(woosh.NAME, 'a_type', 724, 24, 724, 30),
woosh.Token(woosh.OP, ',', 724, 30, 724, 31),
woosh.Token(woosh.NAME, 'dataclasses', 724, 32, 724, 43),
woosh.Token(woosh.OP, ')', 724, 43, 724, 44),
woosh.Token(woosh.NAME, 'or', 725, 12, 725, 14),
woosh.Token(woosh.OP, '(', 725, 15, 725, 16),
woosh.Token(woosh.NAME, 'isinstance', 725, 16, 725, 26),
woosh.Token(woosh.OP, '(', 725, 26, 725, 27),
woosh.Token(woosh.NAME, 'f', 725, 27, 725, 28),
woosh.Token(woosh.OP, '.', 725, 28, 725, 29),
woosh.Token(woosh.NAME, 'type', 725, 29, 725, 33),
woosh.Token(woosh.OP, ',', 725, 33, 725, 34),
woosh.Token(woosh.NAME, 'str', 725, 35, 725, 38),
woosh.Token(woosh.OP, ')', 725, 38, 725, 39),
woosh.Token(woosh.NAME, 'and', 726, 16, 726, 19),
woosh.Token(woosh.NAME, '_is_type', 726, 20, 726, 28),
woosh.Token(woosh.OP, '(', 726, 28, 726, 29),
woosh.Token(woosh.NAME, 'f', 726, 29, 726, 30),
woosh.Token(woosh.OP, '.', 726, 30, 726, 31),
woosh.Token(woosh.NAME, 'type', 726, 31, 726, 35),
woosh.Token(woosh.OP, ',', 726, 35, 726, 36),
woosh.Token(woosh.NAME, 'cls', 726, 37, 726, 40),
woosh.Token(woosh.OP, ',', 726, 40, 726, 41),
woosh.Token(woosh.NAME, 'dataclasses', 726, 42, 726, 53),
woosh.Token(woosh.OP, ',', 726, 53, 726, 54),
woosh.Token(woosh.NAME, 'dataclasses', 726, 55, 726, 66),
woosh.Token(woosh.OP, '.', 726, 66, 726, 67),
woosh.Token(woosh.NAME, 'InitVar', 726, 67, 726, 74),
woosh.Token(woosh.OP, ',', 726, 74, 726, 75),
woosh.Token(woosh.NAME, '_is_initvar', 727, 29, 727, 40),
woosh.Token(woosh.OP, ')', 727, 40, 727, 41),
woosh.Token(woosh.OP, ')', 727, 41, 727, 42),
woosh.Token(woosh.OP, ')', 727, 42, 727, 43),
woosh.Token(woosh.OP, ':', 727, 43, 727, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 44, 728, 0),
woosh.Token(woosh.INDENT, '            ', 728, 0, 728, 12),
woosh.Token(woosh.NAME, 'f', 728, 12, 728, 13),
woosh.Token(woosh.OP, '.', 728, 13, 728, 14),
woosh.Token(woosh.NAME, '_field_type', 728, 14, 728, 25),
woosh.Token(woosh.OP, '=', 728, 26, 728, 27),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 728, 28, 728, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 42, 729, 0),
woosh.Token(woosh.COMMENT, '# Validations for individual fields.  This is delayed until now,', 730, 4, 730, 68),
woosh.Token(woosh.COMMENT, '# instead of in the Field() constructor, since only here do we', 731, 4, 731, 66),
woosh.Token(woosh.COMMENT, '# know the field name, which allows for better error reporting.', 732, 4, 732, 67),
woosh.Token(woosh.COMMENT, '# Special restrictions for ClassVar and InitVar.', 734, 4, 734, 52),
woosh.Token(woosh.DEDENT, '    ', 735, 0, 735, 4),
woosh.Token(woosh.DEDENT, '', 735, 4, 735, 4),
woosh.Token(woosh.NAME, 'if', 735, 4, 735, 6),
woosh.Token(woosh.NAME, 'f', 735, 7, 735, 8),
woosh.Token(woosh.OP, '.', 735, 8, 735, 9),
woosh.Token(woosh.NAME, '_field_type', 735, 9, 735, 20),
woosh.Token(woosh.NAME, 'in', 735, 21, 735, 23),
woosh.Token(woosh.OP, '(', 735, 24, 735, 25),
woosh.Token(woosh.NAME, '_FIELD_CLASSVAR', 735, 25, 735, 40),
woosh.Token(woosh.OP, ',', 735, 40, 735, 41),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 735, 42, 735, 56),
woosh.Token(woosh.OP, ')', 735, 56, 735, 57),
woosh.Token(woosh.OP, ':', 735, 57, 735, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 735, 58, 736, 0),
woosh.Token(woosh.INDENT, '        ', 736, 0, 736, 8),
woosh.Token(woosh.NAME, 'if', 736, 8, 736, 10),
woosh.Token(woosh.NAME, 'f', 736, 11, 736, 12),
woosh.Token(woosh.OP, '.', 736, 12, 736, 13),
woosh.Token(woosh.NAME, 'default_factory', 736, 13, 736, 28),
woosh.Token(woosh.NAME, 'is', 736, 29, 736, 31),
woosh.Token(woosh.NAME, 'not', 736, 32, 736, 35),
woosh.Token(woosh.NAME, 'MISSING', 736, 36, 736, 43),
woosh.Token(woosh.OP, ':', 736, 43, 736, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 44, 737, 0),
woosh.Token(woosh.INDENT, '            ', 737, 0, 737, 12),
woosh.Token(woosh.NAME, 'raise', 737, 12, 737, 17),
woosh.Token(woosh.NAME, 'TypeError', 737, 18, 737, 27),
woosh.Token(woosh.OP, '(', 737, 27, 737, 28),
woosh.Token(woosh.STRING, "f'field {f.name} cannot have a '", 737, 28, 737, 60),
woosh.Token(woosh.STRING, "'default factory'", 738, 28, 738, 45),
woosh.Token(woosh.OP, ')', 738, 45, 738, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 46, 739, 0),
woosh.Token(woosh.COMMENT, '# Should I check for other field settings? default_factory', 739, 8, 739, 66),
woosh.Token(woosh.COMMENT, '# seems the most serious to check for.  Maybe add others.  For', 740, 8, 740, 70),
woosh.Token(woosh.COMMENT, '# example, how about init=False (or really,', 741, 8, 741, 51),
woosh.Token(woosh.COMMENT, '# init=<not-the-default-init-value>)?  It makes no sense for', 742, 8, 742, 68),
woosh.Token(woosh.COMMENT, '# ClassVar and InitVar to specify init=<anything>.', 743, 8, 743, 58),
woosh.Token(woosh.COMMENT, '# For real fields, disallow mutable defaults for known types.', 745, 4, 745, 65),
woosh.Token(woosh.DEDENT, '    ', 746, 0, 746, 4),
woosh.Token(woosh.DEDENT, '', 746, 4, 746, 4),
woosh.Token(woosh.NAME, 'if', 746, 4, 746, 6),
woosh.Token(woosh.NAME, 'f', 746, 7, 746, 8),
woosh.Token(woosh.OP, '.', 746, 8, 746, 9),
woosh.Token(woosh.NAME, '_field_type', 746, 9, 746, 20),
woosh.Token(woosh.NAME, 'is', 746, 21, 746, 23),
woosh.Token(woosh.NAME, '_FIELD', 746, 24, 746, 30),
woosh.Token(woosh.NAME, 'and', 746, 31, 746, 34),
woosh.Token(woosh.NAME, 'isinstance', 746, 35, 746, 45),
woosh.Token(woosh.OP, '(', 746, 45, 746, 46),
woosh.Token(woosh.NAME, 'f', 746, 46, 746, 47),
woosh.Token(woosh.OP, '.', 746, 47, 746, 48),
woosh.Token(woosh.NAME, 'default', 746, 48, 746, 55),
woosh.Token(woosh.OP, ',', 746, 55, 746, 56),
woosh.Token(woosh.OP, '(', 746, 57, 746, 58),
woosh.Token(woosh.NAME, 'list', 746, 58, 746, 62),
woosh.Token(woosh.OP, ',', 746, 62, 746, 63),
woosh.Token(woosh.NAME, 'dict', 746, 64, 746, 68),
woosh.Token(woosh.OP, ',', 746, 68, 746, 69),
woosh.Token(woosh.NAME, 'set', 746, 70, 746, 73),
woosh.Token(woosh.OP, ')', 746, 73, 746, 74),
woosh.Token(woosh.OP, ')', 746, 74, 746, 75),
woosh.Token(woosh.OP, ':', 746, 75, 746, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 76, 747, 0),
woosh.Token(woosh.INDENT, '        ', 747, 0, 747, 8),
woosh.Token(woosh.NAME, 'raise', 747, 8, 747, 13),
woosh.Token(woosh.NAME, 'ValueError', 747, 14, 747, 24),
woosh.Token(woosh.OP, '(', 747, 24, 747, 25),
woosh.Token(woosh.STRING, "f'mutable default {type(f.default)} for field '", 747, 25, 747, 72),
woosh.Token(woosh.STRING, "f'{f.name} is not allowed: use default_factory'", 748, 25, 748, 72),
woosh.Token(woosh.OP, ')', 748, 72, 748, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 73, 749, 0),
woosh.Token(woosh.DEDENT, '    ', 750, 0, 750, 4),
woosh.Token(woosh.NAME, 'return', 750, 4, 750, 10),
woosh.Token(woosh.NAME, 'f', 750, 11, 750, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 12, 751, 0),
woosh.Token(woosh.DEDENT, '', 753, 0, 753, 0),
woosh.Token(woosh.NAME, 'def', 753, 0, 753, 3),
woosh.Token(woosh.NAME, '_set_new_attribute', 753, 4, 753, 22),
woosh.Token(woosh.OP, '(', 753, 22, 753, 23),
woosh.Token(woosh.NAME, 'cls', 753, 23, 753, 26),
woosh.Token(woosh.OP, ',', 753, 26, 753, 27),
woosh.Token(woosh.NAME, 'name', 753, 28, 753, 32),
woosh.Token(woosh.OP, ',', 753, 32, 753, 33),
woosh.Token(woosh.NAME, 'value', 753, 34, 753, 39),
woosh.Token(woosh.OP, ')', 753, 39, 753, 40),
woosh.Token(woosh.OP, ':', 753, 40, 753, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 41, 754, 0),
woosh.Token(woosh.COMMENT, '# Never overwrites an existing attribute.  Returns True if the', 754, 4, 754, 66),
woosh.Token(woosh.COMMENT, '# attribute already exists.', 755, 4, 755, 31),
woosh.Token(woosh.INDENT, '    ', 756, 0, 756, 4),
woosh.Token(woosh.NAME, 'if', 756, 4, 756, 6),
woosh.Token(woosh.NAME, 'name', 756, 7, 756, 11),
woosh.Token(woosh.NAME, 'in', 756, 12, 756, 14),
woosh.Token(woosh.NAME, 'cls', 756, 15, 756, 18),
woosh.Token(woosh.OP, '.', 756, 18, 756, 19),
woosh.Token(woosh.NAME, '__dict__', 756, 19, 756, 27),
woosh.Token(woosh.OP, ':', 756, 27, 756, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 28, 757, 0),
woosh.Token(woosh.INDENT, '        ', 757, 0, 757, 8),
woosh.Token(woosh.NAME, 'return', 757, 8, 757, 14),
woosh.Token(woosh.NAME, 'True', 757, 15, 757, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 19, 758, 0),
woosh.Token(woosh.DEDENT, '    ', 758, 0, 758, 4),
woosh.Token(woosh.NAME, 'setattr', 758, 4, 758, 11),
woosh.Token(woosh.OP, '(', 758, 11, 758, 12),
woosh.Token(woosh.NAME, 'cls', 758, 12, 758, 15),
woosh.Token(woosh.OP, ',', 758, 15, 758, 16),
woosh.Token(woosh.NAME, 'name', 758, 17, 758, 21),
woosh.Token(woosh.OP, ',', 758, 21, 758, 22),
woosh.Token(woosh.NAME, 'value', 758, 23, 758, 28),
woosh.Token(woosh.OP, ')', 758, 28, 758, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 29, 759, 0),
woosh.Token(woosh.NAME, 'return', 759, 4, 759, 10),
woosh.Token(woosh.NAME, 'False', 759, 11, 759, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 16, 760, 0),
woosh.Token(woosh.COMMENT, "# Decide if/how we're going to create a hash function.  Key is", 762, 0, 762, 62),
woosh.Token(woosh.COMMENT, '# (unsafe_hash, eq, frozen, does-hash-exist).  Value is the action to', 763, 0, 763, 69),
woosh.Token(woosh.COMMENT, '# take.  The common case is to do nothing, so instead of providing a', 764, 0, 764, 68),
woosh.Token(woosh.COMMENT, '# function that is a no-op, use None to signify that.', 765, 0, 765, 53),
woosh.Token(woosh.DEDENT, '', 767, 0, 767, 0),
woosh.Token(woosh.NAME, 'def', 767, 0, 767, 3),
woosh.Token(woosh.NAME, '_hash_set_none', 767, 4, 767, 18),
woosh.Token(woosh.OP, '(', 767, 18, 767, 19),
woosh.Token(woosh.NAME, 'cls', 767, 19, 767, 22),
woosh.Token(woosh.OP, ',', 767, 22, 767, 23),
woosh.Token(woosh.NAME, 'fields', 767, 24, 767, 30),
woosh.Token(woosh.OP, ',', 767, 30, 767, 31),
woosh.Token(woosh.NAME, 'globals', 767, 32, 767, 39),
woosh.Token(woosh.OP, ')', 767, 39, 767, 40),
woosh.Token(woosh.OP, ':', 767, 40, 767, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 767, 41, 768, 0),
woosh.Token(woosh.INDENT, '    ', 768, 0, 768, 4),
woosh.Token(woosh.NAME, 'return', 768, 4, 768, 10),
woosh.Token(woosh.NAME, 'None', 768, 11, 768, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 768, 15, 769, 0),
woosh.Token(woosh.DEDENT, '', 770, 0, 770, 0),
woosh.Token(woosh.NAME, 'def', 770, 0, 770, 3),
woosh.Token(woosh.NAME, '_hash_add', 770, 4, 770, 13),
woosh.Token(woosh.OP, '(', 770, 13, 770, 14),
woosh.Token(woosh.NAME, 'cls', 770, 14, 770, 17),
woosh.Token(woosh.OP, ',', 770, 17, 770, 18),
woosh.Token(woosh.NAME, 'fields', 770, 19, 770, 25),
woosh.Token(woosh.OP, ',', 770, 25, 770, 26),
woosh.Token(woosh.NAME, 'globals', 770, 27, 770, 34),
woosh.Token(woosh.OP, ')', 770, 34, 770, 35),
woosh.Token(woosh.OP, ':', 770, 35, 770, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 36, 771, 0),
woosh.Token(woosh.INDENT, '    ', 771, 0, 771, 4),
woosh.Token(woosh.NAME, 'flds', 771, 4, 771, 8),
woosh.Token(woosh.OP, '=', 771, 9, 771, 10),
woosh.Token(woosh.OP, '[', 771, 11, 771, 12),
woosh.Token(woosh.NAME, 'f', 771, 12, 771, 13),
woosh.Token(woosh.NAME, 'for', 771, 14, 771, 17),
woosh.Token(woosh.NAME, 'f', 771, 18, 771, 19),
woosh.Token(woosh.NAME, 'in', 771, 20, 771, 22),
woosh.Token(woosh.NAME, 'fields', 771, 23, 771, 29),
woosh.Token(woosh.NAME, 'if', 771, 30, 771, 32),
woosh.Token(woosh.OP, '(', 771, 33, 771, 34),
woosh.Token(woosh.NAME, 'f', 771, 34, 771, 35),
woosh.Token(woosh.OP, '.', 771, 35, 771, 36),
woosh.Token(woosh.NAME, 'compare', 771, 36, 771, 43),
woosh.Token(woosh.NAME, 'if', 771, 44, 771, 46),
woosh.Token(woosh.NAME, 'f', 771, 47, 771, 48),
woosh.Token(woosh.OP, '.', 771, 48, 771, 49),
woosh.Token(woosh.NAME, 'hash', 771, 49, 771, 53),
woosh.Token(woosh.NAME, 'is', 771, 54, 771, 56),
woosh.Token(woosh.NAME, 'None', 771, 57, 771, 61),
woosh.Token(woosh.NAME, 'else', 771, 62, 771, 66),
woosh.Token(woosh.NAME, 'f', 771, 67, 771, 68),
woosh.Token(woosh.OP, '.', 771, 68, 771, 69),
woosh.Token(woosh.NAME, 'hash', 771, 69, 771, 73),
woosh.Token(woosh.OP, ')', 771, 73, 771, 74),
woosh.Token(woosh.OP, ']', 771, 74, 771, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 771, 75, 772, 0),
woosh.Token(woosh.NAME, 'return', 772, 4, 772, 10),
woosh.Token(woosh.NAME, '_hash_fn', 772, 11, 772, 19),
woosh.Token(woosh.OP, '(', 772, 19, 772, 20),
woosh.Token(woosh.NAME, 'flds', 772, 20, 772, 24),
woosh.Token(woosh.OP, ',', 772, 24, 772, 25),
woosh.Token(woosh.NAME, 'globals', 772, 26, 772, 33),
woosh.Token(woosh.OP, ')', 772, 33, 772, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 772, 34, 773, 0),
woosh.Token(woosh.DEDENT, '', 774, 0, 774, 0),
woosh.Token(woosh.NAME, 'def', 774, 0, 774, 3),
woosh.Token(woosh.NAME, '_hash_exception', 774, 4, 774, 19),
woosh.Token(woosh.OP, '(', 774, 19, 774, 20),
woosh.Token(woosh.NAME, 'cls', 774, 20, 774, 23),
woosh.Token(woosh.OP, ',', 774, 23, 774, 24),
woosh.Token(woosh.NAME, 'fields', 774, 25, 774, 31),
woosh.Token(woosh.OP, ',', 774, 31, 774, 32),
woosh.Token(woosh.NAME, 'globals', 774, 33, 774, 40),
woosh.Token(woosh.OP, ')', 774, 40, 774, 41),
woosh.Token(woosh.OP, ':', 774, 41, 774, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 42, 775, 0),
woosh.Token(woosh.COMMENT, '# Raise an exception.', 775, 4, 775, 25),
woosh.Token(woosh.INDENT, '    ', 776, 0, 776, 4),
woosh.Token(woosh.NAME, 'raise', 776, 4, 776, 9),
woosh.Token(woosh.NAME, 'TypeError', 776, 10, 776, 19),
woosh.Token(woosh.OP, '(', 776, 19, 776, 20),
woosh.Token(woosh.STRING, "f'Cannot overwrite attribute __hash__ '", 776, 20, 776, 59),
woosh.Token(woosh.STRING, "f'in class {cls.__name__}'", 777, 20, 777, 46),
woosh.Token(woosh.OP, ')', 777, 46, 777, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 777, 47, 778, 0),
woosh.Token(woosh.COMMENT, '#', 779, 0, 779, 1),
woosh.Token(woosh.COMMENT, '#                +-------------------------------------- unsafe_hash?', 780, 0, 780, 69),
woosh.Token(woosh.COMMENT, '#                |      +------------------------------- eq?', 781, 0, 781, 60),
woosh.Token(woosh.COMMENT, '#                |      |      +------------------------ frozen?', 782, 0, 782, 64),
woosh.Token(woosh.COMMENT, '#                |      |      |      +----------------  has-explicit-hash?', 783, 0, 783, 75),
woosh.Token(woosh.COMMENT, '#                |      |      |      |', 784, 0, 784, 39),
woosh.Token(woosh.COMMENT, '#                |      |      |      |        +-------  action', 785, 0, 785, 63),
woosh.Token(woosh.COMMENT, '#                |      |      |      |        |', 786, 0, 786, 48),
woosh.Token(woosh.COMMENT, '#                v      v      v      v        v', 787, 0, 787, 48),
woosh.Token(woosh.DEDENT, '', 788, 0, 788, 0),
woosh.Token(woosh.NAME, '_hash_action', 788, 0, 788, 12),
woosh.Token(woosh.OP, '=', 788, 13, 788, 14),
woosh.Token(woosh.OP, '{', 788, 15, 788, 16),
woosh.Token(woosh.OP, '(', 788, 16, 788, 17),
woosh.Token(woosh.NAME, 'False', 788, 17, 788, 22),
woosh.Token(woosh.OP, ',', 788, 22, 788, 23),
woosh.Token(woosh.NAME, 'False', 788, 24, 788, 29),
woosh.Token(woosh.OP, ',', 788, 29, 788, 30),
woosh.Token(woosh.NAME, 'False', 788, 31, 788, 36),
woosh.Token(woosh.OP, ',', 788, 36, 788, 37),
woosh.Token(woosh.NAME, 'False', 788, 38, 788, 43),
woosh.Token(woosh.OP, ')', 788, 43, 788, 44),
woosh.Token(woosh.OP, ':', 788, 44, 788, 45),
woosh.Token(woosh.NAME, 'None', 788, 46, 788, 50),
woosh.Token(woosh.OP, ',', 788, 50, 788, 51),
woosh.Token(woosh.OP, '(', 789, 16, 789, 17),
woosh.Token(woosh.NAME, 'False', 789, 17, 789, 22),
woosh.Token(woosh.OP, ',', 789, 22, 789, 23),
woosh.Token(woosh.NAME, 'False', 789, 24, 789, 29),
woosh.Token(woosh.OP, ',', 789, 29, 789, 30),
woosh.Token(woosh.NAME, 'False', 789, 31, 789, 36),
woosh.Token(woosh.OP, ',', 789, 36, 789, 37),
woosh.Token(woosh.NAME, 'True', 789, 38, 789, 42),
woosh.Token(woosh.OP, ')', 789, 43, 789, 44),
woosh.Token(woosh.OP, ':', 789, 44, 789, 45),
woosh.Token(woosh.NAME, 'None', 789, 46, 789, 50),
woosh.Token(woosh.OP, ',', 789, 50, 789, 51),
woosh.Token(woosh.OP, '(', 790, 16, 790, 17),
woosh.Token(woosh.NAME, 'False', 790, 17, 790, 22),
woosh.Token(woosh.OP, ',', 790, 22, 790, 23),
woosh.Token(woosh.NAME, 'False', 790, 24, 790, 29),
woosh.Token(woosh.OP, ',', 790, 29, 790, 30),
woosh.Token(woosh.NAME, 'True', 790, 31, 790, 35),
woosh.Token(woosh.OP, ',', 790, 35, 790, 36),
woosh.Token(woosh.NAME, 'False', 790, 38, 790, 43),
woosh.Token(woosh.OP, ')', 790, 43, 790, 44),
woosh.Token(woosh.OP, ':', 790, 44, 790, 45),
woosh.Token(woosh.NAME, 'None', 790, 46, 790, 50),
woosh.Token(woosh.OP, ',', 790, 50, 790, 51),
woosh.Token(woosh.OP, '(', 791, 16, 791, 17),
woosh.Token(woosh.NAME, 'False', 791, 17, 791, 22),
woosh.Token(woosh.OP, ',', 791, 22, 791, 23),
woosh.Token(woosh.NAME, 'False', 791, 24, 791, 29),
woosh.Token(woosh.OP, ',', 791, 29, 791, 30),
woosh.Token(woosh.NAME, 'True', 791, 31, 791, 35),
woosh.Token(woosh.OP, ',', 791, 35, 791, 36),
woosh.Token(woosh.NAME, 'True', 791, 38, 791, 42),
woosh.Token(woosh.OP, ')', 791, 43, 791, 44),
woosh.Token(woosh.OP, ':', 791, 44, 791, 45),
woosh.Token(woosh.NAME, 'None', 791, 46, 791, 50),
woosh.Token(woosh.OP, ',', 791, 50, 791, 51),
woosh.Token(woosh.OP, '(', 792, 16, 792, 17),
woosh.Token(woosh.NAME, 'False', 792, 17, 792, 22),
woosh.Token(woosh.OP, ',', 792, 22, 792, 23),
woosh.Token(woosh.NAME, 'True', 792, 24, 792, 28),
woosh.Token(woosh.OP, ',', 792, 28, 792, 29),
woosh.Token(woosh.NAME, 'False', 792, 31, 792, 36),
woosh.Token(woosh.OP, ',', 792, 36, 792, 37),
woosh.Token(woosh.NAME, 'False', 792, 38, 792, 43),
woosh.Token(woosh.OP, ')', 792, 43, 792, 44),
woosh.Token(woosh.OP, ':', 792, 44, 792, 45),
woosh.Token(woosh.NAME, '_hash_set_none', 792, 46, 792, 60),
woosh.Token(woosh.OP, ',', 792, 60, 792, 61),
woosh.Token(woosh.OP, '(', 793, 16, 793, 17),
woosh.Token(woosh.NAME, 'False', 793, 17, 793, 22),
woosh.Token(woosh.OP, ',', 793, 22, 793, 23),
woosh.Token(woosh.NAME, 'True', 793, 24, 793, 28),
woosh.Token(woosh.OP, ',', 793, 28, 793, 29),
woosh.Token(woosh.NAME, 'False', 793, 31, 793, 36),
woosh.Token(woosh.OP, ',', 793, 36, 793, 37),
woosh.Token(woosh.NAME, 'True', 793, 38, 793, 42),
woosh.Token(woosh.OP, ')', 793, 43, 793, 44),
woosh.Token(woosh.OP, ':', 793, 44, 793, 45),
woosh.Token(woosh.NAME, 'None', 793, 46, 793, 50),
woosh.Token(woosh.OP, ',', 793, 50, 793, 51),
woosh.Token(woosh.OP, '(', 794, 16, 794, 17),
woosh.Token(woosh.NAME, 'False', 794, 17, 794, 22),
woosh.Token(woosh.OP, ',', 794, 22, 794, 23),
woosh.Token(woosh.NAME, 'True', 794, 24, 794, 28),
woosh.Token(woosh.OP, ',', 794, 28, 794, 29),
woosh.Token(woosh.NAME, 'True', 794, 31, 794, 35),
woosh.Token(woosh.OP, ',', 794, 35, 794, 36),
woosh.Token(woosh.NAME, 'False', 794, 38, 794, 43),
woosh.Token(woosh.OP, ')', 794, 43, 794, 44),
woosh.Token(woosh.OP, ':', 794, 44, 794, 45),
woosh.Token(woosh.NAME, '_hash_add', 794, 46, 794, 55),
woosh.Token(woosh.OP, ',', 794, 55, 794, 56),
woosh.Token(woosh.OP, '(', 795, 16, 795, 17),
woosh.Token(woosh.NAME, 'False', 795, 17, 795, 22),
woosh.Token(woosh.OP, ',', 795, 22, 795, 23),
woosh.Token(woosh.NAME, 'True', 795, 24, 795, 28),
woosh.Token(woosh.OP, ',', 795, 28, 795, 29),
woosh.Token(woosh.NAME, 'True', 795, 31, 795, 35),
woosh.Token(woosh.OP, ',', 795, 35, 795, 36),
woosh.Token(woosh.NAME, 'True', 795, 38, 795, 42),
woosh.Token(woosh.OP, ')', 795, 43, 795, 44),
woosh.Token(woosh.OP, ':', 795, 44, 795, 45),
woosh.Token(woosh.NAME, 'None', 795, 46, 795, 50),
woosh.Token(woosh.OP, ',', 795, 50, 795, 51),
woosh.Token(woosh.OP, '(', 796, 16, 796, 17),
woosh.Token(woosh.NAME, 'True', 796, 17, 796, 21),
woosh.Token(woosh.OP, ',', 796, 21, 796, 22),
woosh.Token(woosh.NAME, 'False', 796, 24, 796, 29),
woosh.Token(woosh.OP, ',', 796, 29, 796, 30),
woosh.Token(woosh.NAME, 'False', 796, 31, 796, 36),
woosh.Token(woosh.OP, ',', 796, 36, 796, 37),
woosh.Token(woosh.NAME, 'False', 796, 38, 796, 43),
woosh.Token(woosh.OP, ')', 796, 43, 796, 44),
woosh.Token(woosh.OP, ':', 796, 44, 796, 45),
woosh.Token(woosh.NAME, '_hash_add', 796, 46, 796, 55),
woosh.Token(woosh.OP, ',', 796, 55, 796, 56),
woosh.Token(woosh.OP, '(', 797, 16, 797, 17),
woosh.Token(woosh.NAME, 'True', 797, 17, 797, 21),
woosh.Token(woosh.OP, ',', 797, 21, 797, 22),
woosh.Token(woosh.NAME, 'False', 797, 24, 797, 29),
woosh.Token(woosh.OP, ',', 797, 29, 797, 30),
woosh.Token(woosh.NAME, 'False', 797, 31, 797, 36),
woosh.Token(woosh.OP, ',', 797, 36, 797, 37),
woosh.Token(woosh.NAME, 'True', 797, 38, 797, 42),
woosh.Token(woosh.OP, ')', 797, 43, 797, 44),
woosh.Token(woosh.OP, ':', 797, 44, 797, 45),
woosh.Token(woosh.NAME, '_hash_exception', 797, 46, 797, 61),
woosh.Token(woosh.OP, ',', 797, 61, 797, 62),
woosh.Token(woosh.OP, '(', 798, 16, 798, 17),
woosh.Token(woosh.NAME, 'True', 798, 17, 798, 21),
woosh.Token(woosh.OP, ',', 798, 21, 798, 22),
woosh.Token(woosh.NAME, 'False', 798, 24, 798, 29),
woosh.Token(woosh.OP, ',', 798, 29, 798, 30),
woosh.Token(woosh.NAME, 'True', 798, 31, 798, 35),
woosh.Token(woosh.OP, ',', 798, 35, 798, 36),
woosh.Token(woosh.NAME, 'False', 798, 38, 798, 43),
woosh.Token(woosh.OP, ')', 798, 43, 798, 44),
woosh.Token(woosh.OP, ':', 798, 44, 798, 45),
woosh.Token(woosh.NAME, '_hash_add', 798, 46, 798, 55),
woosh.Token(woosh.OP, ',', 798, 55, 798, 56),
woosh.Token(woosh.OP, '(', 799, 16, 799, 17),
woosh.Token(woosh.NAME, 'True', 799, 17, 799, 21),
woosh.Token(woosh.OP, ',', 799, 21, 799, 22),
woosh.Token(woosh.NAME, 'False', 799, 24, 799, 29),
woosh.Token(woosh.OP, ',', 799, 29, 799, 30),
woosh.Token(woosh.NAME, 'True', 799, 31, 799, 35),
woosh.Token(woosh.OP, ',', 799, 35, 799, 36),
woosh.Token(woosh.NAME, 'True', 799, 38, 799, 42),
woosh.Token(woosh.OP, ')', 799, 43, 799, 44),
woosh.Token(woosh.OP, ':', 799, 44, 799, 45),
woosh.Token(woosh.NAME, '_hash_exception', 799, 46, 799, 61),
woosh.Token(woosh.OP, ',', 799, 61, 799, 62),
woosh.Token(woosh.OP, '(', 800, 16, 800, 17),
woosh.Token(woosh.NAME, 'True', 800, 17, 800, 21),
woosh.Token(woosh.OP, ',', 800, 21, 800, 22),
woosh.Token(woosh.NAME, 'True', 800, 24, 800, 28),
woosh.Token(woosh.OP, ',', 800, 28, 800, 29),
woosh.Token(woosh.NAME, 'False', 800, 31, 800, 36),
woosh.Token(woosh.OP, ',', 800, 36, 800, 37),
woosh.Token(woosh.NAME, 'False', 800, 38, 800, 43),
woosh.Token(woosh.OP, ')', 800, 43, 800, 44),
woosh.Token(woosh.OP, ':', 800, 44, 800, 45),
woosh.Token(woosh.NAME, '_hash_add', 800, 46, 800, 55),
woosh.Token(woosh.OP, ',', 800, 55, 800, 56),
woosh.Token(woosh.OP, '(', 801, 16, 801, 17),
woosh.Token(woosh.NAME, 'True', 801, 17, 801, 21),
woosh.Token(woosh.OP, ',', 801, 21, 801, 22),
woosh.Token(woosh.NAME, 'True', 801, 24, 801, 28),
woosh.Token(woosh.OP, ',', 801, 28, 801, 29),
woosh.Token(woosh.NAME, 'False', 801, 31, 801, 36),
woosh.Token(woosh.OP, ',', 801, 36, 801, 37),
woosh.Token(woosh.NAME, 'True', 801, 38, 801, 42),
woosh.Token(woosh.OP, ')', 801, 43, 801, 44),
woosh.Token(woosh.OP, ':', 801, 44, 801, 45),
woosh.Token(woosh.NAME, '_hash_exception', 801, 46, 801, 61),
woosh.Token(woosh.OP, ',', 801, 61, 801, 62),
woosh.Token(woosh.OP, '(', 802, 16, 802, 17),
woosh.Token(woosh.NAME, 'True', 802, 17, 802, 21),
woosh.Token(woosh.OP, ',', 802, 21, 802, 22),
woosh.Token(woosh.NAME, 'True', 802, 24, 802, 28),
woosh.Token(woosh.OP, ',', 802, 28, 802, 29),
woosh.Token(woosh.NAME, 'True', 802, 31, 802, 35),
woosh.Token(woosh.OP, ',', 802, 35, 802, 36),
woosh.Token(woosh.NAME, 'False', 802, 38, 802, 43),
woosh.Token(woosh.OP, ')', 802, 43, 802, 44),
woosh.Token(woosh.OP, ':', 802, 44, 802, 45),
woosh.Token(woosh.NAME, '_hash_add', 802, 46, 802, 55),
woosh.Token(woosh.OP, ',', 802, 55, 802, 56),
woosh.Token(woosh.OP, '(', 803, 16, 803, 17),
woosh.Token(woosh.NAME, 'True', 803, 17, 803, 21),
woosh.Token(woosh.OP, ',', 803, 21, 803, 22),
woosh.Token(woosh.NAME, 'True', 803, 24, 803, 28),
woosh.Token(woosh.OP, ',', 803, 28, 803, 29),
woosh.Token(woosh.NAME, 'True', 803, 31, 803, 35),
woosh.Token(woosh.OP, ',', 803, 35, 803, 36),
woosh.Token(woosh.NAME, 'True', 803, 38, 803, 42),
woosh.Token(woosh.OP, ')', 803, 43, 803, 44),
woosh.Token(woosh.OP, ':', 803, 44, 803, 45),
woosh.Token(woosh.NAME, '_hash_exception', 803, 46, 803, 61),
woosh.Token(woosh.OP, ',', 803, 61, 803, 62),
woosh.Token(woosh.OP, '}', 804, 16, 804, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 804, 17, 805, 0),
woosh.Token(woosh.COMMENT, '# See https://bugs.python.org/issue32929#msg312829 for an if-statement', 805, 0, 805, 70),
woosh.Token(woosh.COMMENT, '# version of this table.', 806, 0, 806, 24),
woosh.Token(woosh.NAME, 'def', 809, 0, 809, 3),
woosh.Token(woosh.NAME, '_process_class', 809, 4, 809, 18),
woosh.Token(woosh.OP, '(', 809, 18, 809, 19),
woosh.Token(woosh.NAME, 'cls', 809, 19, 809, 22),
woosh.Token(woosh.OP, ',', 809, 22, 809, 23),
woosh.Token(woosh.NAME, 'init', 809, 24, 809, 28),
woosh.Token(woosh.OP, ',', 809, 28, 809, 29),
woosh.Token(woosh.NAME, 'repr', 809, 30, 809, 34),
woosh.Token(woosh.OP, ',', 809, 34, 809, 35),
woosh.Token(woosh.NAME, 'eq', 809, 36, 809, 38),
woosh.Token(woosh.OP, ',', 809, 38, 809, 39),
woosh.Token(woosh.NAME, 'order', 809, 40, 809, 45),
woosh.Token(woosh.OP, ',', 809, 45, 809, 46),
woosh.Token(woosh.NAME, 'unsafe_hash', 809, 47, 809, 58),
woosh.Token(woosh.OP, ',', 809, 58, 809, 59),
woosh.Token(woosh.NAME, 'frozen', 809, 60, 809, 66),
woosh.Token(woosh.OP, ')', 809, 66, 809, 67),
woosh.Token(woosh.OP, ':', 809, 67, 809, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 809, 68, 810, 0),
woosh.Token(woosh.COMMENT, "# Now that dicts retain insertion order, there's no reason to use", 810, 4, 810, 69),
woosh.Token(woosh.COMMENT, '# an ordered dict.  I am leveraging that ordering here, because', 811, 4, 811, 67),
woosh.Token(woosh.COMMENT, '# derived class fields overwrite base class fields, but the order', 812, 4, 812, 69),
woosh.Token(woosh.COMMENT, '# is defined by the base class, which is found first.', 813, 4, 813, 57),
woosh.Token(woosh.INDENT, '    ', 814, 0, 814, 4),
woosh.Token(woosh.NAME, 'fields', 814, 4, 814, 10),
woosh.Token(woosh.OP, '=', 814, 11, 814, 12),
woosh.Token(woosh.OP, '{', 814, 13, 814, 14),
woosh.Token(woosh.OP, '}', 814, 14, 814, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 15, 815, 0),
woosh.Token(woosh.NAME, 'if', 816, 4, 816, 6),
woosh.Token(woosh.NAME, 'cls', 816, 7, 816, 10),
woosh.Token(woosh.OP, '.', 816, 10, 816, 11),
woosh.Token(woosh.NAME, '__module__', 816, 11, 816, 21),
woosh.Token(woosh.NAME, 'in', 816, 22, 816, 24),
woosh.Token(woosh.NAME, 'sys', 816, 25, 816, 28),
woosh.Token(woosh.OP, '.', 816, 28, 816, 29),
woosh.Token(woosh.NAME, 'modules', 816, 29, 816, 36),
woosh.Token(woosh.OP, ':', 816, 36, 816, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 37, 817, 0),
woosh.Token(woosh.INDENT, '        ', 817, 0, 817, 8),
woosh.Token(woosh.NAME, 'globals', 817, 8, 817, 15),
woosh.Token(woosh.OP, '=', 817, 16, 817, 17),
woosh.Token(woosh.NAME, 'sys', 817, 18, 817, 21),
woosh.Token(woosh.OP, '.', 817, 21, 817, 22),
woosh.Token(woosh.NAME, 'modules', 817, 22, 817, 29),
woosh.Token(woosh.OP, '[', 817, 29, 817, 30),
woosh.Token(woosh.NAME, 'cls', 817, 30, 817, 33),
woosh.Token(woosh.OP, '.', 817, 33, 817, 34),
woosh.Token(woosh.NAME, '__module__', 817, 34, 817, 44),
woosh.Token(woosh.OP, ']', 817, 44, 817, 45),
woosh.Token(woosh.OP, '.', 817, 45, 817, 46),
woosh.Token(woosh.NAME, '__dict__', 817, 46, 817, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 817, 54, 818, 0),
woosh.Token(woosh.DEDENT, '    ', 818, 0, 818, 4),
woosh.Token(woosh.NAME, 'else', 818, 4, 818, 8),
woosh.Token(woosh.OP, ':', 818, 8, 818, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 818, 9, 819, 0),
woosh.Token(woosh.COMMENT, '# Theoretically this can happen if someone writes', 819, 8, 819, 57),
woosh.Token(woosh.COMMENT, '# a custom string to cls.__module__.  In which case', 820, 8, 820, 59),
woosh.Token(woosh.COMMENT, "# such dataclass won't be fully introspectable", 821, 8, 821, 54),
woosh.Token(woosh.COMMENT, '# (w.r.t. typing.get_type_hints) but will still function', 822, 8, 822, 64),
woosh.Token(woosh.COMMENT, '# correctly.', 823, 8, 823, 20),
woosh.Token(woosh.INDENT, '        ', 824, 0, 824, 8),
woosh.Token(woosh.NAME, 'globals', 824, 8, 824, 15),
woosh.Token(woosh.OP, '=', 824, 16, 824, 17),
woosh.Token(woosh.OP, '{', 824, 18, 824, 19),
woosh.Token(woosh.OP, '}', 824, 19, 824, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 20, 825, 0),
woosh.Token(woosh.DEDENT, '    ', 826, 0, 826, 4),
woosh.Token(woosh.NAME, 'setattr', 826, 4, 826, 11),
woosh.Token(woosh.OP, '(', 826, 11, 826, 12),
woosh.Token(woosh.NAME, 'cls', 826, 12, 826, 15),
woosh.Token(woosh.OP, ',', 826, 15, 826, 16),
woosh.Token(woosh.NAME, '_PARAMS', 826, 17, 826, 24),
woosh.Token(woosh.OP, ',', 826, 24, 826, 25),
woosh.Token(woosh.NAME, '_DataclassParams', 826, 26, 826, 42),
woosh.Token(woosh.OP, '(', 826, 42, 826, 43),
woosh.Token(woosh.NAME, 'init', 826, 43, 826, 47),
woosh.Token(woosh.OP, ',', 826, 47, 826, 48),
woosh.Token(woosh.NAME, 'repr', 826, 49, 826, 53),
woosh.Token(woosh.OP, ',', 826, 53, 826, 54),
woosh.Token(woosh.NAME, 'eq', 826, 55, 826, 57),
woosh.Token(woosh.OP, ',', 826, 57, 826, 58),
woosh.Token(woosh.NAME, 'order', 826, 59, 826, 64),
woosh.Token(woosh.OP, ',', 826, 64, 826, 65),
woosh.Token(woosh.NAME, 'unsafe_hash', 827, 43, 827, 54),
woosh.Token(woosh.OP, ',', 827, 54, 827, 55),
woosh.Token(woosh.NAME, 'frozen', 827, 56, 827, 62),
woosh.Token(woosh.OP, ')', 827, 62, 827, 63),
woosh.Token(woosh.OP, ')', 827, 63, 827, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 827, 64, 828, 0),
woosh.Token(woosh.COMMENT, '# Find our base classes in reverse MRO order, and exclude', 829, 4, 829, 61),
woosh.Token(woosh.COMMENT, '# ourselves.  In reversed order so that more derived classes', 830, 4, 830, 64),
woosh.Token(woosh.COMMENT, '# override earlier field definitions in base classes.  As long as', 831, 4, 831, 69),
woosh.Token(woosh.COMMENT, "# we're iterating over them, see if any are frozen.", 832, 4, 832, 55),
woosh.Token(woosh.NAME, 'any_frozen_base', 833, 4, 833, 19),
woosh.Token(woosh.OP, '=', 833, 20, 833, 21),
woosh.Token(woosh.NAME, 'False', 833, 22, 833, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 833, 27, 834, 0),
woosh.Token(woosh.NAME, 'has_dataclass_bases', 834, 4, 834, 23),
woosh.Token(woosh.OP, '=', 834, 24, 834, 25),
woosh.Token(woosh.NAME, 'False', 834, 26, 834, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 31, 835, 0),
woosh.Token(woosh.NAME, 'for', 835, 4, 835, 7),
woosh.Token(woosh.NAME, 'b', 835, 8, 835, 9),
woosh.Token(woosh.NAME, 'in', 835, 10, 835, 12),
woosh.Token(woosh.NAME, 'cls', 835, 13, 835, 16),
woosh.Token(woosh.OP, '.', 835, 16, 835, 17),
woosh.Token(woosh.NAME, '__mro__', 835, 17, 835, 24),
woosh.Token(woosh.OP, '[', 835, 24, 835, 25),
woosh.Token(woosh.OP, '-', 835, 25, 835, 26),
woosh.Token(woosh.NUMBER, '1', 835, 26, 835, 27),
woosh.Token(woosh.OP, ':', 835, 27, 835, 28),
woosh.Token(woosh.NUMBER, '0', 835, 28, 835, 29),
woosh.Token(woosh.OP, ':', 835, 29, 835, 30),
woosh.Token(woosh.OP, '-', 835, 30, 835, 31),
woosh.Token(woosh.NUMBER, '1', 835, 31, 835, 32),
woosh.Token(woosh.OP, ']', 835, 32, 835, 33),
woosh.Token(woosh.OP, ':', 835, 33, 835, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 835, 34, 836, 0),
woosh.Token(woosh.COMMENT, '# Only process classes that have been processed by our', 836, 8, 836, 62),
woosh.Token(woosh.COMMENT, '# decorator.  That is, they have a _FIELDS attribute.', 837, 8, 837, 61),
woosh.Token(woosh.INDENT, '        ', 838, 0, 838, 8),
woosh.Token(woosh.NAME, 'base_fields', 838, 8, 838, 19),
woosh.Token(woosh.OP, '=', 838, 20, 838, 21),
woosh.Token(woosh.NAME, 'getattr', 838, 22, 838, 29),
woosh.Token(woosh.OP, '(', 838, 29, 838, 30),
woosh.Token(woosh.NAME, 'b', 838, 30, 838, 31),
woosh.Token(woosh.OP, ',', 838, 31, 838, 32),
woosh.Token(woosh.NAME, '_FIELDS', 838, 33, 838, 40),
woosh.Token(woosh.OP, ',', 838, 40, 838, 41),
woosh.Token(woosh.NAME, 'None', 838, 42, 838, 46),
woosh.Token(woosh.OP, ')', 838, 46, 838, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 47, 839, 0),
woosh.Token(woosh.NAME, 'if', 839, 8, 839, 10),
woosh.Token(woosh.NAME, 'base_fields', 839, 11, 839, 22),
woosh.Token(woosh.OP, ':', 839, 22, 839, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 23, 840, 0),
woosh.Token(woosh.INDENT, '            ', 840, 0, 840, 12),
woosh.Token(woosh.NAME, 'has_dataclass_bases', 840, 12, 840, 31),
woosh.Token(woosh.OP, '=', 840, 32, 840, 33),
woosh.Token(woosh.NAME, 'True', 840, 34, 840, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 38, 841, 0),
woosh.Token(woosh.NAME, 'for', 841, 12, 841, 15),
woosh.Token(woosh.NAME, 'f', 841, 16, 841, 17),
woosh.Token(woosh.NAME, 'in', 841, 18, 841, 20),
woosh.Token(woosh.NAME, 'base_fields', 841, 21, 841, 32),
woosh.Token(woosh.OP, '.', 841, 32, 841, 33),
woosh.Token(woosh.NAME, 'values', 841, 33, 841, 39),
woosh.Token(woosh.OP, '(', 841, 39, 841, 40),
woosh.Token(woosh.OP, ')', 841, 40, 841, 41),
woosh.Token(woosh.OP, ':', 841, 41, 841, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 42, 842, 0),
woosh.Token(woosh.INDENT, '                ', 842, 0, 842, 16),
woosh.Token(woosh.NAME, 'fields', 842, 16, 842, 22),
woosh.Token(woosh.OP, '[', 842, 22, 842, 23),
woosh.Token(woosh.NAME, 'f', 842, 23, 842, 24),
woosh.Token(woosh.OP, '.', 842, 24, 842, 25),
woosh.Token(woosh.NAME, 'name', 842, 25, 842, 29),
woosh.Token(woosh.OP, ']', 842, 29, 842, 30),
woosh.Token(woosh.OP, '=', 842, 31, 842, 32),
woosh.Token(woosh.NAME, 'f', 842, 33, 842, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 34, 843, 0),
woosh.Token(woosh.DEDENT, '            ', 843, 0, 843, 12),
woosh.Token(woosh.NAME, 'if', 843, 12, 843, 14),
woosh.Token(woosh.NAME, 'getattr', 843, 15, 843, 22),
woosh.Token(woosh.OP, '(', 843, 22, 843, 23),
woosh.Token(woosh.NAME, 'b', 843, 23, 843, 24),
woosh.Token(woosh.OP, ',', 843, 24, 843, 25),
woosh.Token(woosh.NAME, '_PARAMS', 843, 26, 843, 33),
woosh.Token(woosh.OP, ')', 843, 33, 843, 34),
woosh.Token(woosh.OP, '.', 843, 34, 843, 35),
woosh.Token(woosh.NAME, 'frozen', 843, 35, 843, 41),
woosh.Token(woosh.OP, ':', 843, 41, 843, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 42, 844, 0),
woosh.Token(woosh.INDENT, '                ', 844, 0, 844, 16),
woosh.Token(woosh.NAME, 'any_frozen_base', 844, 16, 844, 31),
woosh.Token(woosh.OP, '=', 844, 32, 844, 33),
woosh.Token(woosh.NAME, 'True', 844, 34, 844, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 844, 38, 845, 0),
woosh.Token(woosh.COMMENT, '# Annotations that are defined in this class (not in base', 846, 4, 846, 61),
woosh.Token(woosh.COMMENT, "# classes).  If __annotations__ isn't present, then this class", 847, 4, 847, 66),
woosh.Token(woosh.COMMENT, '# adds no new annotations.  We use this to compute fields that are', 848, 4, 848, 70),
woosh.Token(woosh.COMMENT, '# added by this class.', 849, 4, 849, 26),
woosh.Token(woosh.COMMENT, '#', 850, 4, 850, 5),
woosh.Token(woosh.COMMENT, '# Fields are found from cls_annotations, which is guaranteed to be', 851, 4, 851, 70),
woosh.Token(woosh.COMMENT, '# ordered.  Default values are from class attributes, if a field', 852, 4, 852, 68),
woosh.Token(woosh.COMMENT, '# has a default.  If the default value is a Field(), then it', 853, 4, 853, 64),
woosh.Token(woosh.COMMENT, '# contains additional info beyond (and possibly including) the', 854, 4, 854, 66),
woosh.Token(woosh.COMMENT, '# actual default value.  Pseudo-fields ClassVars and InitVars are', 855, 4, 855, 69),
woosh.Token(woosh.COMMENT, "# included, despite the fact that they're not real fields.  That's", 856, 4, 856, 70),
woosh.Token(woosh.COMMENT, '# dealt with later.', 857, 4, 857, 23),
woosh.Token(woosh.DEDENT, '    ', 858, 0, 858, 4),
woosh.Token(woosh.DEDENT, '', 858, 4, 858, 4),
woosh.Token(woosh.DEDENT, '', 858, 4, 858, 4),
woosh.Token(woosh.NAME, 'cls_annotations', 858, 4, 858, 19),
woosh.Token(woosh.OP, '=', 858, 20, 858, 21),
woosh.Token(woosh.NAME, 'cls', 858, 22, 858, 25),
woosh.Token(woosh.OP, '.', 858, 25, 858, 26),
woosh.Token(woosh.NAME, '__dict__', 858, 26, 858, 34),
woosh.Token(woosh.OP, '.', 858, 34, 858, 35),
woosh.Token(woosh.NAME, 'get', 858, 35, 858, 38),
woosh.Token(woosh.OP, '(', 858, 38, 858, 39),
woosh.Token(woosh.STRING, "'__annotations__'", 858, 39, 858, 56),
woosh.Token(woosh.OP, ',', 858, 56, 858, 57),
woosh.Token(woosh.OP, '{', 858, 58, 858, 59),
woosh.Token(woosh.OP, '}', 858, 59, 858, 60),
woosh.Token(woosh.OP, ')', 858, 60, 858, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 61, 859, 0),
woosh.Token(woosh.COMMENT, '# Now find fields in our class.  While doing so, validate some', 860, 4, 860, 66),
woosh.Token(woosh.COMMENT, '# things, and set the default values (as class attributes) where', 861, 4, 861, 68),
woosh.Token(woosh.COMMENT, '# we can.', 862, 4, 862, 13),
woosh.Token(woosh.NAME, 'cls_fields', 863, 4, 863, 14),
woosh.Token(woosh.OP, '=', 863, 15, 863, 16),
woosh.Token(woosh.OP, '[', 863, 17, 863, 18),
woosh.Token(woosh.NAME, '_get_field', 863, 18, 863, 28),
woosh.Token(woosh.OP, '(', 863, 28, 863, 29),
woosh.Token(woosh.NAME, 'cls', 863, 29, 863, 32),
woosh.Token(woosh.OP, ',', 863, 32, 863, 33),
woosh.Token(woosh.NAME, 'name', 863, 34, 863, 38),
woosh.Token(woosh.OP, ',', 863, 38, 863, 39),
woosh.Token(woosh.NAME, 'type', 863, 40, 863, 44),
woosh.Token(woosh.OP, ')', 863, 44, 863, 45),
woosh.Token(woosh.NAME, 'for', 864, 18, 864, 21),
woosh.Token(woosh.NAME, 'name', 864, 22, 864, 26),
woosh.Token(woosh.OP, ',', 864, 26, 864, 27),
woosh.Token(woosh.NAME, 'type', 864, 28, 864, 32),
woosh.Token(woosh.NAME, 'in', 864, 33, 864, 35),
woosh.Token(woosh.NAME, 'cls_annotations', 864, 36, 864, 51),
woosh.Token(woosh.OP, '.', 864, 51, 864, 52),
woosh.Token(woosh.NAME, 'items', 864, 52, 864, 57),
woosh.Token(woosh.OP, '(', 864, 57, 864, 58),
woosh.Token(woosh.OP, ')', 864, 58, 864, 59),
woosh.Token(woosh.OP, ']', 864, 59, 864, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 60, 865, 0),
woosh.Token(woosh.NAME, 'for', 865, 4, 865, 7),
woosh.Token(woosh.NAME, 'f', 865, 8, 865, 9),
woosh.Token(woosh.NAME, 'in', 865, 10, 865, 12),
woosh.Token(woosh.NAME, 'cls_fields', 865, 13, 865, 23),
woosh.Token(woosh.OP, ':', 865, 23, 865, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 865, 24, 866, 0),
woosh.Token(woosh.INDENT, '        ', 866, 0, 866, 8),
woosh.Token(woosh.NAME, 'fields', 866, 8, 866, 14),
woosh.Token(woosh.OP, '[', 866, 14, 866, 15),
woosh.Token(woosh.NAME, 'f', 866, 15, 866, 16),
woosh.Token(woosh.OP, '.', 866, 16, 866, 17),
woosh.Token(woosh.NAME, 'name', 866, 17, 866, 21),
woosh.Token(woosh.OP, ']', 866, 21, 866, 22),
woosh.Token(woosh.OP, '=', 866, 23, 866, 24),
woosh.Token(woosh.NAME, 'f', 866, 25, 866, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 866, 26, 867, 0),
woosh.Token(woosh.COMMENT, '# If the class attribute (which is the default value for this', 868, 8, 868, 69),
woosh.Token(woosh.COMMENT, "# field) exists and is of type 'Field', replace it with the", 869, 8, 869, 67),
woosh.Token(woosh.COMMENT, '# real default.  This is so that normal class introspection', 870, 8, 870, 67),
woosh.Token(woosh.COMMENT, '# sees a real default value, not a Field.', 871, 8, 871, 49),
woosh.Token(woosh.NAME, 'if', 872, 8, 872, 10),
woosh.Token(woosh.NAME, 'isinstance', 872, 11, 872, 21),
woosh.Token(woosh.OP, '(', 872, 21, 872, 22),
woosh.Token(woosh.NAME, 'getattr', 872, 22, 872, 29),
woosh.Token(woosh.OP, '(', 872, 29, 872, 30),
woosh.Token(woosh.NAME, 'cls', 872, 30, 872, 33),
woosh.Token(woosh.OP, ',', 872, 33, 872, 34),
woosh.Token(woosh.NAME, 'f', 872, 35, 872, 36),
woosh.Token(woosh.OP, '.', 872, 36, 872, 37),
woosh.Token(woosh.NAME, 'name', 872, 37, 872, 41),
woosh.Token(woosh.OP, ',', 872, 41, 872, 42),
woosh.Token(woosh.NAME, 'None', 872, 43, 872, 47),
woosh.Token(woosh.OP, ')', 872, 47, 872, 48),
woosh.Token(woosh.OP, ',', 872, 48, 872, 49),
woosh.Token(woosh.NAME, 'Field', 872, 50, 872, 55),
woosh.Token(woosh.OP, ')', 872, 55, 872, 56),
woosh.Token(woosh.OP, ':', 872, 56, 872, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 57, 873, 0),
woosh.Token(woosh.INDENT, '            ', 873, 0, 873, 12),
woosh.Token(woosh.NAME, 'if', 873, 12, 873, 14),
woosh.Token(woosh.NAME, 'f', 873, 15, 873, 16),
woosh.Token(woosh.OP, '.', 873, 16, 873, 17),
woosh.Token(woosh.NAME, 'default', 873, 17, 873, 24),
woosh.Token(woosh.NAME, 'is', 873, 25, 873, 27),
woosh.Token(woosh.NAME, 'MISSING', 873, 28, 873, 35),
woosh.Token(woosh.OP, ':', 873, 35, 873, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 873, 36, 874, 0),
woosh.Token(woosh.COMMENT, "# If there's no default, delete the class attribute.", 874, 16, 874, 68),
woosh.Token(woosh.COMMENT, '# This happens if we specify field(repr=False), for', 875, 16, 875, 67),
woosh.Token(woosh.COMMENT, '# example (that is, we specified a field object, but', 876, 16, 876, 68),
woosh.Token(woosh.COMMENT, "# no default value).  Also if we're using a default", 877, 16, 877, 67),
woosh.Token(woosh.COMMENT, '# factory.  The class attribute should not be set at', 878, 16, 878, 68),
woosh.Token(woosh.COMMENT, '# all in the post-processed class.', 879, 16, 879, 50),
woosh.Token(woosh.INDENT, '                ', 880, 0, 880, 16),
woosh.Token(woosh.NAME, 'delattr', 880, 16, 880, 23),
woosh.Token(woosh.OP, '(', 880, 23, 880, 24),
woosh.Token(woosh.NAME, 'cls', 880, 24, 880, 27),
woosh.Token(woosh.OP, ',', 880, 27, 880, 28),
woosh.Token(woosh.NAME, 'f', 880, 29, 880, 30),
woosh.Token(woosh.OP, '.', 880, 30, 880, 31),
woosh.Token(woosh.NAME, 'name', 880, 31, 880, 35),
woosh.Token(woosh.OP, ')', 880, 35, 880, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 880, 36, 881, 0),
woosh.Token(woosh.DEDENT, '            ', 881, 0, 881, 12),
woosh.Token(woosh.NAME, 'else', 881, 12, 881, 16),
woosh.Token(woosh.OP, ':', 881, 16, 881, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 17, 882, 0),
woosh.Token(woosh.INDENT, '                ', 882, 0, 882, 16),
woosh.Token(woosh.NAME, 'setattr', 882, 16, 882, 23),
woosh.Token(woosh.OP, '(', 882, 23, 882, 24),
woosh.Token(woosh.NAME, 'cls', 882, 24, 882, 27),
woosh.Token(woosh.OP, ',', 882, 27, 882, 28),
woosh.Token(woosh.NAME, 'f', 882, 29, 882, 30),
woosh.Token(woosh.OP, '.', 882, 30, 882, 31),
woosh.Token(woosh.NAME, 'name', 882, 31, 882, 35),
woosh.Token(woosh.OP, ',', 882, 35, 882, 36),
woosh.Token(woosh.NAME, 'f', 882, 37, 882, 38),
woosh.Token(woosh.OP, '.', 882, 38, 882, 39),
woosh.Token(woosh.NAME, 'default', 882, 39, 882, 46),
woosh.Token(woosh.OP, ')', 882, 46, 882, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 882, 47, 883, 0),
woosh.Token(woosh.COMMENT, "# Do we have any Field members that don't also have annotations?", 884, 4, 884, 68),
woosh.Token(woosh.DEDENT, '    ', 885, 0, 885, 4),
woosh.Token(woosh.DEDENT, '', 885, 4, 885, 4),
woosh.Token(woosh.DEDENT, '', 885, 4, 885, 4),
woosh.Token(woosh.NAME, 'for', 885, 4, 885, 7),
woosh.Token(woosh.NAME, 'name', 885, 8, 885, 12),
woosh.Token(woosh.OP, ',', 885, 12, 885, 13),
woosh.Token(woosh.NAME, 'value', 885, 14, 885, 19),
woosh.Token(woosh.NAME, 'in', 885, 20, 885, 22),
woosh.Token(woosh.NAME, 'cls', 885, 23, 885, 26),
woosh.Token(woosh.OP, '.', 885, 26, 885, 27),
woosh.Token(woosh.NAME, '__dict__', 885, 27, 885, 35),
woosh.Token(woosh.OP, '.', 885, 35, 885, 36),
woosh.Token(woosh.NAME, 'items', 885, 36, 885, 41),
woosh.Token(woosh.OP, '(', 885, 41, 885, 42),
woosh.Token(woosh.OP, ')', 885, 42, 885, 43),
woosh.Token(woosh.OP, ':', 885, 43, 885, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 885, 44, 886, 0),
woosh.Token(woosh.INDENT, '        ', 886, 0, 886, 8),
woosh.Token(woosh.NAME, 'if', 886, 8, 886, 10),
woosh.Token(woosh.NAME, 'isinstance', 886, 11, 886, 21),
woosh.Token(woosh.OP, '(', 886, 21, 886, 22),
woosh.Token(woosh.NAME, 'value', 886, 22, 886, 27),
woosh.Token(woosh.OP, ',', 886, 27, 886, 28),
woosh.Token(woosh.NAME, 'Field', 886, 29, 886, 34),
woosh.Token(woosh.OP, ')', 886, 34, 886, 35),
woosh.Token(woosh.NAME, 'and', 886, 36, 886, 39),
woosh.Token(woosh.NAME, 'not', 886, 40, 886, 43),
woosh.Token(woosh.NAME, 'name', 886, 44, 886, 48),
woosh.Token(woosh.NAME, 'in', 886, 49, 886, 51),
woosh.Token(woosh.NAME, 'cls_annotations', 886, 52, 886, 67),
woosh.Token(woosh.OP, ':', 886, 67, 886, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 68, 887, 0),
woosh.Token(woosh.INDENT, '            ', 887, 0, 887, 12),
woosh.Token(woosh.NAME, 'raise', 887, 12, 887, 17),
woosh.Token(woosh.NAME, 'TypeError', 887, 18, 887, 27),
woosh.Token(woosh.OP, '(', 887, 27, 887, 28),
woosh.Token(woosh.STRING, "f'{name!r} is a field but has no type annotation'", 887, 28, 887, 77),
woosh.Token(woosh.OP, ')', 887, 77, 887, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 887, 78, 888, 0),
woosh.Token(woosh.COMMENT, '# Check rules that apply if we are derived from any dataclasses.', 889, 4, 889, 68),
woosh.Token(woosh.DEDENT, '    ', 890, 0, 890, 4),
woosh.Token(woosh.DEDENT, '', 890, 4, 890, 4),
woosh.Token(woosh.NAME, 'if', 890, 4, 890, 6),
woosh.Token(woosh.NAME, 'has_dataclass_bases', 890, 7, 890, 26),
woosh.Token(woosh.OP, ':', 890, 26, 890, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 890, 27, 891, 0),
woosh.Token(woosh.COMMENT, "# Raise an exception if any of our bases are frozen, but we're not.", 891, 8, 891, 75),
woosh.Token(woosh.INDENT, '        ', 892, 0, 892, 8),
woosh.Token(woosh.NAME, 'if', 892, 8, 892, 10),
woosh.Token(woosh.NAME, 'any_frozen_base', 892, 11, 892, 26),
woosh.Token(woosh.NAME, 'and', 892, 27, 892, 30),
woosh.Token(woosh.NAME, 'not', 892, 31, 892, 34),
woosh.Token(woosh.NAME, 'frozen', 892, 35, 892, 41),
woosh.Token(woosh.OP, ':', 892, 41, 892, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 42, 893, 0),
woosh.Token(woosh.INDENT, '            ', 893, 0, 893, 12),
woosh.Token(woosh.NAME, 'raise', 893, 12, 893, 17),
woosh.Token(woosh.NAME, 'TypeError', 893, 18, 893, 27),
woosh.Token(woosh.OP, '(', 893, 27, 893, 28),
woosh.Token(woosh.STRING, "'cannot inherit non-frozen dataclass from a '", 893, 28, 893, 73),
woosh.Token(woosh.STRING, "'frozen one'", 894, 28, 894, 40),
woosh.Token(woosh.OP, ')', 894, 40, 894, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 41, 895, 0),
woosh.Token(woosh.COMMENT, "# Raise an exception if we're frozen, but none of our bases are.", 896, 8, 896, 72),
woosh.Token(woosh.DEDENT, '        ', 897, 0, 897, 8),
woosh.Token(woosh.NAME, 'if', 897, 8, 897, 10),
woosh.Token(woosh.NAME, 'not', 897, 11, 897, 14),
woosh.Token(woosh.NAME, 'any_frozen_base', 897, 15, 897, 30),
woosh.Token(woosh.NAME, 'and', 897, 31, 897, 34),
woosh.Token(woosh.NAME, 'frozen', 897, 35, 897, 41),
woosh.Token(woosh.OP, ':', 897, 41, 897, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 897, 42, 898, 0),
woosh.Token(woosh.INDENT, '            ', 898, 0, 898, 12),
woosh.Token(woosh.NAME, 'raise', 898, 12, 898, 17),
woosh.Token(woosh.NAME, 'TypeError', 898, 18, 898, 27),
woosh.Token(woosh.OP, '(', 898, 27, 898, 28),
woosh.Token(woosh.STRING, "'cannot inherit frozen dataclass from a '", 898, 28, 898, 69),
woosh.Token(woosh.STRING, "'non-frozen one'", 899, 28, 899, 44),
woosh.Token(woosh.OP, ')', 899, 44, 899, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 45, 900, 0),
woosh.Token(woosh.COMMENT, '# Remember all of the fields on our class (including bases).  This', 901, 4, 901, 70),
woosh.Token(woosh.COMMENT, '# also marks this class as being a dataclass.', 902, 4, 902, 49),
woosh.Token(woosh.DEDENT, '    ', 903, 0, 903, 4),
woosh.Token(woosh.DEDENT, '', 903, 4, 903, 4),
woosh.Token(woosh.NAME, 'setattr', 903, 4, 903, 11),
woosh.Token(woosh.OP, '(', 903, 11, 903, 12),
woosh.Token(woosh.NAME, 'cls', 903, 12, 903, 15),
woosh.Token(woosh.OP, ',', 903, 15, 903, 16),
woosh.Token(woosh.NAME, '_FIELDS', 903, 17, 903, 24),
woosh.Token(woosh.OP, ',', 903, 24, 903, 25),
woosh.Token(woosh.NAME, 'fields', 903, 26, 903, 32),
woosh.Token(woosh.OP, ')', 903, 32, 903, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 903, 33, 904, 0),
woosh.Token(woosh.COMMENT, '# Was this class defined with an explicit __hash__?  Note that if', 905, 4, 905, 69),
woosh.Token(woosh.COMMENT, '# __eq__ is defined in this class, then python will automatically', 906, 4, 906, 69),
woosh.Token(woosh.COMMENT, "# set __hash__ to None.  This is a heuristic, as it's possible", 907, 4, 907, 66),
woosh.Token(woosh.COMMENT, '# that such a __hash__ == None was not auto-generated, but it', 908, 4, 908, 65),
woosh.Token(woosh.COMMENT, '# close enough.', 909, 4, 909, 19),
woosh.Token(woosh.NAME, 'class_hash', 910, 4, 910, 14),
woosh.Token(woosh.OP, '=', 910, 15, 910, 16),
woosh.Token(woosh.NAME, 'cls', 910, 17, 910, 20),
woosh.Token(woosh.OP, '.', 910, 20, 910, 21),
woosh.Token(woosh.NAME, '__dict__', 910, 21, 910, 29),
woosh.Token(woosh.OP, '.', 910, 29, 910, 30),
woosh.Token(woosh.NAME, 'get', 910, 30, 910, 33),
woosh.Token(woosh.OP, '(', 910, 33, 910, 34),
woosh.Token(woosh.STRING, "'__hash__'", 910, 34, 910, 44),
woosh.Token(woosh.OP, ',', 910, 44, 910, 45),
woosh.Token(woosh.NAME, 'MISSING', 910, 46, 910, 53),
woosh.Token(woosh.OP, ')', 910, 53, 910, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 54, 911, 0),
woosh.Token(woosh.NAME, 'has_explicit_hash', 911, 4, 911, 21),
woosh.Token(woosh.OP, '=', 911, 22, 911, 23),
woosh.Token(woosh.NAME, 'not', 911, 24, 911, 27),
woosh.Token(woosh.OP, '(', 911, 28, 911, 29),
woosh.Token(woosh.NAME, 'class_hash', 911, 29, 911, 39),
woosh.Token(woosh.NAME, 'is', 911, 40, 911, 42),
woosh.Token(woosh.NAME, 'MISSING', 911, 43, 911, 50),
woosh.Token(woosh.NAME, 'or', 911, 51, 911, 53),
woosh.Token(woosh.OP, '(', 912, 29, 912, 30),
woosh.Token(woosh.NAME, 'class_hash', 912, 30, 912, 40),
woosh.Token(woosh.NAME, 'is', 912, 41, 912, 43),
woosh.Token(woosh.NAME, 'None', 912, 44, 912, 48),
woosh.Token(woosh.NAME, 'and', 912, 49, 912, 52),
woosh.Token(woosh.STRING, "'__eq__'", 912, 53, 912, 61),
woosh.Token(woosh.NAME, 'in', 912, 62, 912, 64),
woosh.Token(woosh.NAME, 'cls', 912, 65, 912, 68),
woosh.Token(woosh.OP, '.', 912, 68, 912, 69),
woosh.Token(woosh.NAME, '__dict__', 912, 69, 912, 77),
woosh.Token(woosh.OP, ')', 912, 77, 912, 78),
woosh.Token(woosh.OP, ')', 912, 78, 912, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 79, 913, 0),
woosh.Token(woosh.COMMENT, "# If we're generating ordering methods, we must be generating the", 914, 4, 914, 69),
woosh.Token(woosh.COMMENT, '# eq methods.', 915, 4, 915, 17),
woosh.Token(woosh.NAME, 'if', 916, 4, 916, 6),
woosh.Token(woosh.NAME, 'order', 916, 7, 916, 12),
woosh.Token(woosh.NAME, 'and', 916, 13, 916, 16),
woosh.Token(woosh.NAME, 'not', 916, 17, 916, 20),
woosh.Token(woosh.NAME, 'eq', 916, 21, 916, 23),
woosh.Token(woosh.OP, ':', 916, 23, 916, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 916, 24, 917, 0),
woosh.Token(woosh.INDENT, '        ', 917, 0, 917, 8),
woosh.Token(woosh.NAME, 'raise', 917, 8, 917, 13),
woosh.Token(woosh.NAME, 'ValueError', 917, 14, 917, 24),
woosh.Token(woosh.OP, '(', 917, 24, 917, 25),
woosh.Token(woosh.STRING, "'eq must be true if order is true'", 917, 25, 917, 59),
woosh.Token(woosh.OP, ')', 917, 59, 917, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 917, 60, 918, 0),
woosh.Token(woosh.DEDENT, '    ', 919, 0, 919, 4),
woosh.Token(woosh.NAME, 'if', 919, 4, 919, 6),
woosh.Token(woosh.NAME, 'init', 919, 7, 919, 11),
woosh.Token(woosh.OP, ':', 919, 11, 919, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 919, 12, 920, 0),
woosh.Token(woosh.COMMENT, '# Does this class have a post-init function?', 920, 8, 920, 52),
woosh.Token(woosh.INDENT, '        ', 921, 0, 921, 8),
woosh.Token(woosh.NAME, 'has_post_init', 921, 8, 921, 21),
woosh.Token(woosh.OP, '=', 921, 22, 921, 23),
woosh.Token(woosh.NAME, 'hasattr', 921, 24, 921, 31),
woosh.Token(woosh.OP, '(', 921, 31, 921, 32),
woosh.Token(woosh.NAME, 'cls', 921, 32, 921, 35),
woosh.Token(woosh.OP, ',', 921, 35, 921, 36),
woosh.Token(woosh.NAME, '_POST_INIT_NAME', 921, 37, 921, 52),
woosh.Token(woosh.OP, ')', 921, 52, 921, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 921, 53, 922, 0),
woosh.Token(woosh.COMMENT, '# Include InitVars and regular fields (so, not ClassVars).', 923, 8, 923, 66),
woosh.Token(woosh.NAME, 'flds', 924, 8, 924, 12),
woosh.Token(woosh.OP, '=', 924, 13, 924, 14),
woosh.Token(woosh.OP, '[', 924, 15, 924, 16),
woosh.Token(woosh.NAME, 'f', 924, 16, 924, 17),
woosh.Token(woosh.NAME, 'for', 924, 18, 924, 21),
woosh.Token(woosh.NAME, 'f', 924, 22, 924, 23),
woosh.Token(woosh.NAME, 'in', 924, 24, 924, 26),
woosh.Token(woosh.NAME, 'fields', 924, 27, 924, 33),
woosh.Token(woosh.OP, '.', 924, 33, 924, 34),
woosh.Token(woosh.NAME, 'values', 924, 34, 924, 40),
woosh.Token(woosh.OP, '(', 924, 40, 924, 41),
woosh.Token(woosh.OP, ')', 924, 41, 924, 42),
woosh.Token(woosh.NAME, 'if', 925, 16, 925, 18),
woosh.Token(woosh.NAME, 'f', 925, 19, 925, 20),
woosh.Token(woosh.OP, '.', 925, 20, 925, 21),
woosh.Token(woosh.NAME, '_field_type', 925, 21, 925, 32),
woosh.Token(woosh.NAME, 'in', 925, 33, 925, 35),
woosh.Token(woosh.OP, '(', 925, 36, 925, 37),
woosh.Token(woosh.NAME, '_FIELD', 925, 37, 925, 43),
woosh.Token(woosh.OP, ',', 925, 43, 925, 44),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 925, 45, 925, 59),
woosh.Token(woosh.OP, ')', 925, 59, 925, 60),
woosh.Token(woosh.OP, ']', 925, 60, 925, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 61, 926, 0),
woosh.Token(woosh.NAME, '_set_new_attribute', 926, 8, 926, 26),
woosh.Token(woosh.OP, '(', 926, 26, 926, 27),
woosh.Token(woosh.NAME, 'cls', 926, 27, 926, 30),
woosh.Token(woosh.OP, ',', 926, 30, 926, 31),
woosh.Token(woosh.STRING, "'__init__'", 926, 32, 926, 42),
woosh.Token(woosh.OP, ',', 926, 42, 926, 43),
woosh.Token(woosh.NAME, '_init_fn', 927, 27, 927, 35),
woosh.Token(woosh.OP, '(', 927, 35, 927, 36),
woosh.Token(woosh.NAME, 'flds', 927, 36, 927, 40),
woosh.Token(woosh.OP, ',', 927, 40, 927, 41),
woosh.Token(woosh.NAME, 'frozen', 928, 36, 928, 42),
woosh.Token(woosh.OP, ',', 928, 42, 928, 43),
woosh.Token(woosh.NAME, 'has_post_init', 929, 36, 929, 49),
woosh.Token(woosh.OP, ',', 929, 49, 929, 50),
woosh.Token(woosh.COMMENT, '# The name to use for the "self"', 930, 36, 930, 68),
woosh.Token(woosh.COMMENT, '# param in __init__.  Use "self"', 931, 36, 931, 68),
woosh.Token(woosh.COMMENT, '# if possible.', 932, 36, 932, 50),
woosh.Token(woosh.STRING, "'__dataclass_self__'", 933, 36, 933, 56),
woosh.Token(woosh.NAME, 'if', 933, 57, 933, 59),
woosh.Token(woosh.STRING, "'self'", 933, 60, 933, 66),
woosh.Token(woosh.NAME, 'in', 933, 67, 933, 69),
woosh.Token(woosh.NAME, 'fields', 933, 70, 933, 76),
woosh.Token(woosh.NAME, 'else', 934, 44, 934, 48),
woosh.Token(woosh.STRING, "'self'", 934, 49, 934, 55),
woosh.Token(woosh.OP, ',', 934, 55, 934, 56),
woosh.Token(woosh.NAME, 'globals', 935, 36, 935, 43),
woosh.Token(woosh.OP, ',', 935, 43, 935, 44),
woosh.Token(woosh.OP, ')', 936, 26, 936, 27),
woosh.Token(woosh.OP, ')', 936, 27, 936, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 936, 28, 937, 0),
woosh.Token(woosh.COMMENT, '# Get the fields as a list, and include only real fields.  This is', 938, 4, 938, 70),
woosh.Token(woosh.COMMENT, '# used in all of the following methods.', 939, 4, 939, 43),
woosh.Token(woosh.DEDENT, '    ', 940, 0, 940, 4),
woosh.Token(woosh.NAME, 'field_list', 940, 4, 940, 14),
woosh.Token(woosh.OP, '=', 940, 15, 940, 16),
woosh.Token(woosh.OP, '[', 940, 17, 940, 18),
woosh.Token(woosh.NAME, 'f', 940, 18, 940, 19),
woosh.Token(woosh.NAME, 'for', 940, 20, 940, 23),
woosh.Token(woosh.NAME, 'f', 940, 24, 940, 25),
woosh.Token(woosh.NAME, 'in', 940, 26, 940, 28),
woosh.Token(woosh.NAME, 'fields', 940, 29, 940, 35),
woosh.Token(woosh.OP, '.', 940, 35, 940, 36),
woosh.Token(woosh.NAME, 'values', 940, 36, 940, 42),
woosh.Token(woosh.OP, '(', 940, 42, 940, 43),
woosh.Token(woosh.OP, ')', 940, 43, 940, 44),
woosh.Token(woosh.NAME, 'if', 940, 45, 940, 47),
woosh.Token(woosh.NAME, 'f', 940, 48, 940, 49),
woosh.Token(woosh.OP, '.', 940, 49, 940, 50),
woosh.Token(woosh.NAME, '_field_type', 940, 50, 940, 61),
woosh.Token(woosh.NAME, 'is', 940, 62, 940, 64),
woosh.Token(woosh.NAME, '_FIELD', 940, 65, 940, 71),
woosh.Token(woosh.OP, ']', 940, 71, 940, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 940, 72, 941, 0),
woosh.Token(woosh.NAME, 'if', 942, 4, 942, 6),
woosh.Token(woosh.NAME, 'repr', 942, 7, 942, 11),
woosh.Token(woosh.OP, ':', 942, 11, 942, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 942, 12, 943, 0),
woosh.Token(woosh.INDENT, '        ', 943, 0, 943, 8),
woosh.Token(woosh.NAME, 'flds', 943, 8, 943, 12),
woosh.Token(woosh.OP, '=', 943, 13, 943, 14),
woosh.Token(woosh.OP, '[', 943, 15, 943, 16),
woosh.Token(woosh.NAME, 'f', 943, 16, 943, 17),
woosh.Token(woosh.NAME, 'for', 943, 18, 943, 21),
woosh.Token(woosh.NAME, 'f', 943, 22, 943, 23),
woosh.Token(woosh.NAME, 'in', 943, 24, 943, 26),
woosh.Token(woosh.NAME, 'field_list', 943, 27, 943, 37),
woosh.Token(woosh.NAME, 'if', 943, 38, 943, 40),
woosh.Token(woosh.NAME, 'f', 943, 41, 943, 42),
woosh.Token(woosh.OP, '.', 943, 42, 943, 43),
woosh.Token(woosh.NAME, 'repr', 943, 43, 943, 47),
woosh.Token(woosh.OP, ']', 943, 47, 943, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 943, 48, 944, 0),
woosh.Token(woosh.NAME, '_set_new_attribute', 944, 8, 944, 26),
woosh.Token(woosh.OP, '(', 944, 26, 944, 27),
woosh.Token(woosh.NAME, 'cls', 944, 27, 944, 30),
woosh.Token(woosh.OP, ',', 944, 30, 944, 31),
woosh.Token(woosh.STRING, "'__repr__'", 944, 32, 944, 42),
woosh.Token(woosh.OP, ',', 944, 42, 944, 43),
woosh.Token(woosh.NAME, '_repr_fn', 944, 44, 944, 52),
woosh.Token(woosh.OP, '(', 944, 52, 944, 53),
woosh.Token(woosh.NAME, 'flds', 944, 53, 944, 57),
woosh.Token(woosh.OP, ',', 944, 57, 944, 58),
woosh.Token(woosh.NAME, 'globals', 944, 59, 944, 66),
woosh.Token(woosh.OP, ')', 944, 66, 944, 67),
woosh.Token(woosh.OP, ')', 944, 67, 944, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 68, 945, 0),
woosh.Token(woosh.DEDENT, '    ', 946, 0, 946, 4),
woosh.Token(woosh.NAME, 'if', 946, 4, 946, 6),
woosh.Token(woosh.NAME, 'eq', 946, 7, 946, 9),
woosh.Token(woosh.OP, ':', 946, 9, 946, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 946, 10, 947, 0),
woosh.Token(woosh.COMMENT, "# Create _eq__ method.  There's no need for a __ne__ method,", 947, 8, 947, 68),
woosh.Token(woosh.COMMENT, '# since python will call __eq__ and negate it.', 948, 8, 948, 54),
woosh.Token(woosh.INDENT, '        ', 949, 0, 949, 8),
woosh.Token(woosh.NAME, 'flds', 949, 8, 949, 12),
woosh.Token(woosh.OP, '=', 949, 13, 949, 14),
woosh.Token(woosh.OP, '[', 949, 15, 949, 16),
woosh.Token(woosh.NAME, 'f', 949, 16, 949, 17),
woosh.Token(woosh.NAME, 'for', 949, 18, 949, 21),
woosh.Token(woosh.NAME, 'f', 949, 22, 949, 23),
woosh.Token(woosh.NAME, 'in', 949, 24, 949, 26),
woosh.Token(woosh.NAME, 'field_list', 949, 27, 949, 37),
woosh.Token(woosh.NAME, 'if', 949, 38, 949, 40),
woosh.Token(woosh.NAME, 'f', 949, 41, 949, 42),
woosh.Token(woosh.OP, '.', 949, 42, 949, 43),
woosh.Token(woosh.NAME, 'compare', 949, 43, 949, 50),
woosh.Token(woosh.OP, ']', 949, 50, 949, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 949, 51, 950, 0),
woosh.Token(woosh.NAME, 'self_tuple', 950, 8, 950, 18),
woosh.Token(woosh.OP, '=', 950, 19, 950, 20),
woosh.Token(woosh.NAME, '_tuple_str', 950, 21, 950, 31),
woosh.Token(woosh.OP, '(', 950, 31, 950, 32),
woosh.Token(woosh.STRING, "'self'", 950, 32, 950, 38),
woosh.Token(woosh.OP, ',', 950, 38, 950, 39),
woosh.Token(woosh.NAME, 'flds', 950, 40, 950, 44),
woosh.Token(woosh.OP, ')', 950, 44, 950, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 950, 45, 951, 0),
woosh.Token(woosh.NAME, 'other_tuple', 951, 8, 951, 19),
woosh.Token(woosh.OP, '=', 951, 20, 951, 21),
woosh.Token(woosh.NAME, '_tuple_str', 951, 22, 951, 32),
woosh.Token(woosh.OP, '(', 951, 32, 951, 33),
woosh.Token(woosh.STRING, "'other'", 951, 33, 951, 40),
woosh.Token(woosh.OP, ',', 951, 40, 951, 41),
woosh.Token(woosh.NAME, 'flds', 951, 42, 951, 46),
woosh.Token(woosh.OP, ')', 951, 46, 951, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 47, 952, 0),
woosh.Token(woosh.NAME, '_set_new_attribute', 952, 8, 952, 26),
woosh.Token(woosh.OP, '(', 952, 26, 952, 27),
woosh.Token(woosh.NAME, 'cls', 952, 27, 952, 30),
woosh.Token(woosh.OP, ',', 952, 30, 952, 31),
woosh.Token(woosh.STRING, "'__eq__'", 952, 32, 952, 40),
woosh.Token(woosh.OP, ',', 952, 40, 952, 41),
woosh.Token(woosh.NAME, '_cmp_fn', 953, 27, 953, 34),
woosh.Token(woosh.OP, '(', 953, 34, 953, 35),
woosh.Token(woosh.STRING, "'__eq__'", 953, 35, 953, 43),
woosh.Token(woosh.OP, ',', 953, 43, 953, 44),
woosh.Token(woosh.STRING, "'=='", 953, 45, 953, 49),
woosh.Token(woosh.OP, ',', 953, 49, 953, 50),
woosh.Token(woosh.NAME, 'self_tuple', 954, 35, 954, 45),
woosh.Token(woosh.OP, ',', 954, 45, 954, 46),
woosh.Token(woosh.NAME, 'other_tuple', 954, 47, 954, 58),
woosh.Token(woosh.OP, ',', 954, 58, 954, 59),
woosh.Token(woosh.NAME, 'globals', 955, 35, 955, 42),
woosh.Token(woosh.OP, '=', 955, 42, 955, 43),
woosh.Token(woosh.NAME, 'globals', 955, 43, 955, 50),
woosh.Token(woosh.OP, ')', 955, 50, 955, 51),
woosh.Token(woosh.OP, ')', 955, 51, 955, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 52, 956, 0),
woosh.Token(woosh.DEDENT, '    ', 957, 0, 957, 4),
woosh.Token(woosh.NAME, 'if', 957, 4, 957, 6),
woosh.Token(woosh.NAME, 'order', 957, 7, 957, 12),
woosh.Token(woosh.OP, ':', 957, 12, 957, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 957, 13, 958, 0),
woosh.Token(woosh.COMMENT, '# Create and set the ordering methods.', 958, 8, 958, 46),
woosh.Token(woosh.INDENT, '        ', 959, 0, 959, 8),
woosh.Token(woosh.NAME, 'flds', 959, 8, 959, 12),
woosh.Token(woosh.OP, '=', 959, 13, 959, 14),
woosh.Token(woosh.OP, '[', 959, 15, 959, 16),
woosh.Token(woosh.NAME, 'f', 959, 16, 959, 17),
woosh.Token(woosh.NAME, 'for', 959, 18, 959, 21),
woosh.Token(woosh.NAME, 'f', 959, 22, 959, 23),
woosh.Token(woosh.NAME, 'in', 959, 24, 959, 26),
woosh.Token(woosh.NAME, 'field_list', 959, 27, 959, 37),
woosh.Token(woosh.NAME, 'if', 959, 38, 959, 40),
woosh.Token(woosh.NAME, 'f', 959, 41, 959, 42),
woosh.Token(woosh.OP, '.', 959, 42, 959, 43),
woosh.Token(woosh.NAME, 'compare', 959, 43, 959, 50),
woosh.Token(woosh.OP, ']', 959, 50, 959, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 959, 51, 960, 0),
woosh.Token(woosh.NAME, 'self_tuple', 960, 8, 960, 18),
woosh.Token(woosh.OP, '=', 960, 19, 960, 20),
woosh.Token(woosh.NAME, '_tuple_str', 960, 21, 960, 31),
woosh.Token(woosh.OP, '(', 960, 31, 960, 32),
woosh.Token(woosh.STRING, "'self'", 960, 32, 960, 38),
woosh.Token(woosh.OP, ',', 960, 38, 960, 39),
woosh.Token(woosh.NAME, 'flds', 960, 40, 960, 44),
woosh.Token(woosh.OP, ')', 960, 44, 960, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 45, 961, 0),
woosh.Token(woosh.NAME, 'other_tuple', 961, 8, 961, 19),
woosh.Token(woosh.OP, '=', 961, 20, 961, 21),
woosh.Token(woosh.NAME, '_tuple_str', 961, 22, 961, 32),
woosh.Token(woosh.OP, '(', 961, 32, 961, 33),
woosh.Token(woosh.STRING, "'other'", 961, 33, 961, 40),
woosh.Token(woosh.OP, ',', 961, 40, 961, 41),
woosh.Token(woosh.NAME, 'flds', 961, 42, 961, 46),
woosh.Token(woosh.OP, ')', 961, 46, 961, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 47, 962, 0),
woosh.Token(woosh.NAME, 'for', 962, 8, 962, 11),
woosh.Token(woosh.NAME, 'name', 962, 12, 962, 16),
woosh.Token(woosh.OP, ',', 962, 16, 962, 17),
woosh.Token(woosh.NAME, 'op', 962, 18, 962, 20),
woosh.Token(woosh.NAME, 'in', 962, 21, 962, 23),
woosh.Token(woosh.OP, '[', 962, 24, 962, 25),
woosh.Token(woosh.OP, '(', 962, 25, 962, 26),
woosh.Token(woosh.STRING, "'__lt__'", 962, 26, 962, 34),
woosh.Token(woosh.OP, ',', 962, 34, 962, 35),
woosh.Token(woosh.STRING, "'<'", 962, 36, 962, 39),
woosh.Token(woosh.OP, ')', 962, 39, 962, 40),
woosh.Token(woosh.OP, ',', 962, 40, 962, 41),
woosh.Token(woosh.OP, '(', 963, 25, 963, 26),
woosh.Token(woosh.STRING, "'__le__'", 963, 26, 963, 34),
woosh.Token(woosh.OP, ',', 963, 34, 963, 35),
woosh.Token(woosh.STRING, "'<='", 963, 36, 963, 40),
woosh.Token(woosh.OP, ')', 963, 40, 963, 41),
woosh.Token(woosh.OP, ',', 963, 41, 963, 42),
woosh.Token(woosh.OP, '(', 964, 25, 964, 26),
woosh.Token(woosh.STRING, "'__gt__'", 964, 26, 964, 34),
woosh.Token(woosh.OP, ',', 964, 34, 964, 35),
woosh.Token(woosh.STRING, "'>'", 964, 36, 964, 39),
woosh.Token(woosh.OP, ')', 964, 39, 964, 40),
woosh.Token(woosh.OP, ',', 964, 40, 964, 41),
woosh.Token(woosh.OP, '(', 965, 25, 965, 26),
woosh.Token(woosh.STRING, "'__ge__'", 965, 26, 965, 34),
woosh.Token(woosh.OP, ',', 965, 34, 965, 35),
woosh.Token(woosh.STRING, "'>='", 965, 36, 965, 40),
woosh.Token(woosh.OP, ')', 965, 40, 965, 41),
woosh.Token(woosh.OP, ',', 965, 41, 965, 42),
woosh.Token(woosh.OP, ']', 966, 25, 966, 26),
woosh.Token(woosh.OP, ':', 966, 26, 966, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 27, 967, 0),
woosh.Token(woosh.INDENT, '            ', 967, 0, 967, 12),
woosh.Token(woosh.NAME, 'if', 967, 12, 967, 14),
woosh.Token(woosh.NAME, '_set_new_attribute', 967, 15, 967, 33),
woosh.Token(woosh.OP, '(', 967, 33, 967, 34),
woosh.Token(woosh.NAME, 'cls', 967, 34, 967, 37),
woosh.Token(woosh.OP, ',', 967, 37, 967, 38),
woosh.Token(woosh.NAME, 'name', 967, 39, 967, 43),
woosh.Token(woosh.OP, ',', 967, 43, 967, 44),
woosh.Token(woosh.NAME, '_cmp_fn', 968, 34, 968, 41),
woosh.Token(woosh.OP, '(', 968, 41, 968, 42),
woosh.Token(woosh.NAME, 'name', 968, 42, 968, 46),
woosh.Token(woosh.OP, ',', 968, 46, 968, 47),
woosh.Token(woosh.NAME, 'op', 968, 48, 968, 50),
woosh.Token(woosh.OP, ',', 968, 50, 968, 51),
woosh.Token(woosh.NAME, 'self_tuple', 968, 52, 968, 62),
woosh.Token(woosh.OP, ',', 968, 62, 968, 63),
woosh.Token(woosh.NAME, 'other_tuple', 968, 64, 968, 75),
woosh.Token(woosh.OP, ',', 968, 75, 968, 76),
woosh.Token(woosh.NAME, 'globals', 969, 42, 969, 49),
woosh.Token(woosh.OP, '=', 969, 49, 969, 50),
woosh.Token(woosh.NAME, 'globals', 969, 50, 969, 57),
woosh.Token(woosh.OP, ')', 969, 57, 969, 58),
woosh.Token(woosh.OP, ')', 969, 58, 969, 59),
woosh.Token(woosh.OP, ':', 969, 59, 969, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 969, 60, 970, 0),
woosh.Token(woosh.INDENT, '                ', 970, 0, 970, 16),
woosh.Token(woosh.NAME, 'raise', 970, 16, 970, 21),
woosh.Token(woosh.NAME, 'TypeError', 970, 22, 970, 31),
woosh.Token(woosh.OP, '(', 970, 31, 970, 32),
woosh.Token(woosh.STRING, "f'Cannot overwrite attribute {name} '", 970, 32, 970, 69),
woosh.Token(woosh.STRING, "f'in class {cls.__name__}. Consider using '", 971, 32, 971, 75),
woosh.Token(woosh.STRING, "'functools.total_ordering'", 972, 32, 972, 58),
woosh.Token(woosh.OP, ')', 972, 58, 972, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 972, 59, 973, 0),
woosh.Token(woosh.DEDENT, '    ', 974, 0, 974, 4),
woosh.Token(woosh.DEDENT, '', 974, 4, 974, 4),
woosh.Token(woosh.DEDENT, '', 974, 4, 974, 4),
woosh.Token(woosh.NAME, 'if', 974, 4, 974, 6),
woosh.Token(woosh.NAME, 'frozen', 974, 7, 974, 13),
woosh.Token(woosh.OP, ':', 974, 13, 974, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 974, 14, 975, 0),
woosh.Token(woosh.INDENT, '        ', 975, 0, 975, 8),
woosh.Token(woosh.NAME, 'for', 975, 8, 975, 11),
woosh.Token(woosh.NAME, 'fn', 975, 12, 975, 14),
woosh.Token(woosh.NAME, 'in', 975, 15, 975, 17),
woosh.Token(woosh.NAME, '_frozen_get_del_attr', 975, 18, 975, 38),
woosh.Token(woosh.OP, '(', 975, 38, 975, 39),
woosh.Token(woosh.NAME, 'cls', 975, 39, 975, 42),
woosh.Token(woosh.OP, ',', 975, 42, 975, 43),
woosh.Token(woosh.NAME, 'field_list', 975, 44, 975, 54),
woosh.Token(woosh.OP, ',', 975, 54, 975, 55),
woosh.Token(woosh.NAME, 'globals', 975, 56, 975, 63),
woosh.Token(woosh.OP, ')', 975, 63, 975, 64),
woosh.Token(woosh.OP, ':', 975, 64, 975, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 975, 65, 976, 0),
woosh.Token(woosh.INDENT, '            ', 976, 0, 976, 12),
woosh.Token(woosh.NAME, 'if', 976, 12, 976, 14),
woosh.Token(woosh.NAME, '_set_new_attribute', 976, 15, 976, 33),
woosh.Token(woosh.OP, '(', 976, 33, 976, 34),
woosh.Token(woosh.NAME, 'cls', 976, 34, 976, 37),
woosh.Token(woosh.OP, ',', 976, 37, 976, 38),
woosh.Token(woosh.NAME, 'fn', 976, 39, 976, 41),
woosh.Token(woosh.OP, '.', 976, 41, 976, 42),
woosh.Token(woosh.NAME, '__name__', 976, 42, 976, 50),
woosh.Token(woosh.OP, ',', 976, 50, 976, 51),
woosh.Token(woosh.NAME, 'fn', 976, 52, 976, 54),
woosh.Token(woosh.OP, ')', 976, 54, 976, 55),
woosh.Token(woosh.OP, ':', 976, 55, 976, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 976, 56, 977, 0),
woosh.Token(woosh.INDENT, '                ', 977, 0, 977, 16),
woosh.Token(woosh.NAME, 'raise', 977, 16, 977, 21),
woosh.Token(woosh.NAME, 'TypeError', 977, 22, 977, 31),
woosh.Token(woosh.OP, '(', 977, 31, 977, 32),
woosh.Token(woosh.STRING, "f'Cannot overwrite attribute {fn.__name__} '", 977, 32, 977, 76),
woosh.Token(woosh.STRING, "f'in class {cls.__name__}'", 978, 32, 978, 58),
woosh.Token(woosh.OP, ')', 978, 58, 978, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 978, 59, 979, 0),
woosh.Token(woosh.COMMENT, "# Decide if/how we're going to create a hash function.", 980, 4, 980, 58),
woosh.Token(woosh.DEDENT, '    ', 981, 0, 981, 4),
woosh.Token(woosh.DEDENT, '', 981, 4, 981, 4),
woosh.Token(woosh.DEDENT, '', 981, 4, 981, 4),
woosh.Token(woosh.NAME, 'hash_action', 981, 4, 981, 15),
woosh.Token(woosh.OP, '=', 981, 16, 981, 17),
woosh.Token(woosh.NAME, '_hash_action', 981, 18, 981, 30),
woosh.Token(woosh.OP, '[', 981, 30, 981, 31),
woosh.Token(woosh.NAME, 'bool', 981, 31, 981, 35),
woosh.Token(woosh.OP, '(', 981, 35, 981, 36),
woosh.Token(woosh.NAME, 'unsafe_hash', 981, 36, 981, 47),
woosh.Token(woosh.OP, ')', 981, 47, 981, 48),
woosh.Token(woosh.OP, ',', 981, 48, 981, 49),
woosh.Token(woosh.NAME, 'bool', 982, 31, 982, 35),
woosh.Token(woosh.OP, '(', 982, 35, 982, 36),
woosh.Token(woosh.NAME, 'eq', 982, 36, 982, 38),
woosh.Token(woosh.OP, ')', 982, 38, 982, 39),
woosh.Token(woosh.OP, ',', 982, 39, 982, 40),
woosh.Token(woosh.NAME, 'bool', 983, 31, 983, 35),
woosh.Token(woosh.OP, '(', 983, 35, 983, 36),
woosh.Token(woosh.NAME, 'frozen', 983, 36, 983, 42),
woosh.Token(woosh.OP, ')', 983, 42, 983, 43),
woosh.Token(woosh.OP, ',', 983, 43, 983, 44),
woosh.Token(woosh.NAME, 'has_explicit_hash', 984, 31, 984, 48),
woosh.Token(woosh.OP, ']', 984, 48, 984, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 984, 49, 985, 0),
woosh.Token(woosh.NAME, 'if', 985, 4, 985, 6),
woosh.Token(woosh.NAME, 'hash_action', 985, 7, 985, 18),
woosh.Token(woosh.OP, ':', 985, 18, 985, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 985, 19, 986, 0),
woosh.Token(woosh.COMMENT, '# No need to call _set_new_attribute here, since by the time', 986, 8, 986, 68),
woosh.Token(woosh.COMMENT, "# we're here the overwriting is unconditional.", 987, 8, 987, 54),
woosh.Token(woosh.INDENT, '        ', 988, 0, 988, 8),
woosh.Token(woosh.NAME, 'cls', 988, 8, 988, 11),
woosh.Token(woosh.OP, '.', 988, 11, 988, 12),
woosh.Token(woosh.NAME, '__hash__', 988, 12, 988, 20),
woosh.Token(woosh.OP, '=', 988, 21, 988, 22),
woosh.Token(woosh.NAME, 'hash_action', 988, 23, 988, 34),
woosh.Token(woosh.OP, '(', 988, 34, 988, 35),
woosh.Token(woosh.NAME, 'cls', 988, 35, 988, 38),
woosh.Token(woosh.OP, ',', 988, 38, 988, 39),
woosh.Token(woosh.NAME, 'field_list', 988, 40, 988, 50),
woosh.Token(woosh.OP, ',', 988, 50, 988, 51),
woosh.Token(woosh.NAME, 'globals', 988, 52, 988, 59),
woosh.Token(woosh.OP, ')', 988, 59, 988, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 988, 60, 989, 0),
woosh.Token(woosh.DEDENT, '    ', 990, 0, 990, 4),
woosh.Token(woosh.NAME, 'if', 990, 4, 990, 6),
woosh.Token(woosh.NAME, 'not', 990, 7, 990, 10),
woosh.Token(woosh.NAME, 'getattr', 990, 11, 990, 18),
woosh.Token(woosh.OP, '(', 990, 18, 990, 19),
woosh.Token(woosh.NAME, 'cls', 990, 19, 990, 22),
woosh.Token(woosh.OP, ',', 990, 22, 990, 23),
woosh.Token(woosh.STRING, "'__doc__'", 990, 24, 990, 33),
woosh.Token(woosh.OP, ')', 990, 33, 990, 34),
woosh.Token(woosh.OP, ':', 990, 34, 990, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 990, 35, 991, 0),
woosh.Token(woosh.COMMENT, '# Create a class doc-string.', 991, 8, 991, 36),
woosh.Token(woosh.INDENT, '        ', 992, 0, 992, 8),
woosh.Token(woosh.NAME, 'cls', 992, 8, 992, 11),
woosh.Token(woosh.OP, '.', 992, 11, 992, 12),
woosh.Token(woosh.NAME, '__doc__', 992, 12, 992, 19),
woosh.Token(woosh.OP, '=', 992, 20, 992, 21),
woosh.Token(woosh.OP, '(', 992, 22, 992, 23),
woosh.Token(woosh.NAME, 'cls', 992, 23, 992, 26),
woosh.Token(woosh.OP, '.', 992, 26, 992, 27),
woosh.Token(woosh.NAME, '__name__', 992, 27, 992, 35),
woosh.Token(woosh.OP, '+', 992, 36, 992, 37),
woosh.Token(woosh.NAME, 'str', 993, 23, 993, 26),
woosh.Token(woosh.OP, '(', 993, 26, 993, 27),
woosh.Token(woosh.NAME, 'inspect', 993, 27, 993, 34),
woosh.Token(woosh.OP, '.', 993, 34, 993, 35),
woosh.Token(woosh.NAME, 'signature', 993, 35, 993, 44),
woosh.Token(woosh.OP, '(', 993, 44, 993, 45),
woosh.Token(woosh.NAME, 'cls', 993, 45, 993, 48),
woosh.Token(woosh.OP, ')', 993, 48, 993, 49),
woosh.Token(woosh.OP, ')', 993, 49, 993, 50),
woosh.Token(woosh.OP, '.', 993, 50, 993, 51),
woosh.Token(woosh.NAME, 'replace', 993, 51, 993, 58),
woosh.Token(woosh.OP, '(', 993, 58, 993, 59),
woosh.Token(woosh.STRING, "' -> None'", 993, 59, 993, 69),
woosh.Token(woosh.OP, ',', 993, 69, 993, 70),
woosh.Token(woosh.STRING, "''", 993, 71, 993, 73),
woosh.Token(woosh.OP, ')', 993, 73, 993, 74),
woosh.Token(woosh.OP, ')', 993, 74, 993, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 993, 75, 994, 0),
woosh.Token(woosh.DEDENT, '    ', 995, 0, 995, 4),
woosh.Token(woosh.NAME, 'return', 995, 4, 995, 10),
woosh.Token(woosh.NAME, 'cls', 995, 11, 995, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 995, 14, 996, 0),
woosh.Token(woosh.DEDENT, '', 998, 0, 998, 0),
woosh.Token(woosh.NAME, 'def', 998, 0, 998, 3),
woosh.Token(woosh.NAME, 'dataclass', 998, 4, 998, 13),
woosh.Token(woosh.OP, '(', 998, 13, 998, 14),
woosh.Token(woosh.NAME, 'cls', 998, 14, 998, 17),
woosh.Token(woosh.OP, '=', 998, 17, 998, 18),
woosh.Token(woosh.NAME, 'None', 998, 18, 998, 22),
woosh.Token(woosh.OP, ',', 998, 22, 998, 23),
woosh.Token(woosh.OP, '/', 998, 24, 998, 25),
woosh.Token(woosh.OP, ',', 998, 25, 998, 26),
woosh.Token(woosh.OP, '*', 998, 27, 998, 28),
woosh.Token(woosh.OP, ',', 998, 28, 998, 29),
woosh.Token(woosh.NAME, 'init', 998, 30, 998, 34),
woosh.Token(woosh.OP, '=', 998, 34, 998, 35),
woosh.Token(woosh.NAME, 'True', 998, 35, 998, 39),
woosh.Token(woosh.OP, ',', 998, 39, 998, 40),
woosh.Token(woosh.NAME, 'repr', 998, 41, 998, 45),
woosh.Token(woosh.OP, '=', 998, 45, 998, 46),
woosh.Token(woosh.NAME, 'True', 998, 46, 998, 50),
woosh.Token(woosh.OP, ',', 998, 50, 998, 51),
woosh.Token(woosh.NAME, 'eq', 998, 52, 998, 54),
woosh.Token(woosh.OP, '=', 998, 54, 998, 55),
woosh.Token(woosh.NAME, 'True', 998, 55, 998, 59),
woosh.Token(woosh.OP, ',', 998, 59, 998, 60),
woosh.Token(woosh.NAME, 'order', 998, 61, 998, 66),
woosh.Token(woosh.OP, '=', 998, 66, 998, 67),
woosh.Token(woosh.NAME, 'False', 998, 67, 998, 72),
woosh.Token(woosh.OP, ',', 998, 72, 998, 73),
woosh.Token(woosh.NAME, 'unsafe_hash', 999, 14, 999, 25),
woosh.Token(woosh.OP, '=', 999, 25, 999, 26),
woosh.Token(woosh.NAME, 'False', 999, 26, 999, 31),
woosh.Token(woosh.OP, ',', 999, 31, 999, 32),
woosh.Token(woosh.NAME, 'frozen', 999, 33, 999, 39),
woosh.Token(woosh.OP, '=', 999, 39, 999, 40),
woosh.Token(woosh.NAME, 'False', 999, 40, 999, 45),
woosh.Token(woosh.OP, ')', 999, 45, 999, 46),
woosh.Token(woosh.OP, ':', 999, 46, 999, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 999, 47, 1000, 0),
woosh.Token(woosh.INDENT, '    ', 1000, 0, 1000, 4),
woosh.Token(woosh.STRING, '"""Returns the same class as was passed in, with dunder methods\r\n    added based on the fields defined in the class.\r\n\r\n    Examines PEP 526 __annotations__ to determine fields.\r\n\r\n    If init is true, an __init__() method is added to the class. If\r\n    repr is true, a __repr__() method is added. If order is true, rich\r\n    comparison dunder methods are added. If unsafe_hash is true, a\r\n    __hash__() method function is added. If frozen is true, fields may\r\n    not be assigned to after instance creation.\r\n    """', 1000, 4, 1010, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1010, 7, 1011, 0),
woosh.Token(woosh.NAME, 'def', 1012, 4, 1012, 7),
woosh.Token(woosh.NAME, 'wrap', 1012, 8, 1012, 12),
woosh.Token(woosh.OP, '(', 1012, 12, 1012, 13),
woosh.Token(woosh.NAME, 'cls', 1012, 13, 1012, 16),
woosh.Token(woosh.OP, ')', 1012, 16, 1012, 17),
woosh.Token(woosh.OP, ':', 1012, 17, 1012, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1012, 18, 1013, 0),
woosh.Token(woosh.INDENT, '        ', 1013, 0, 1013, 8),
woosh.Token(woosh.NAME, 'return', 1013, 8, 1013, 14),
woosh.Token(woosh.NAME, '_process_class', 1013, 15, 1013, 29),
woosh.Token(woosh.OP, '(', 1013, 29, 1013, 30),
woosh.Token(woosh.NAME, 'cls', 1013, 30, 1013, 33),
woosh.Token(woosh.OP, ',', 1013, 33, 1013, 34),
woosh.Token(woosh.NAME, 'init', 1013, 35, 1013, 39),
woosh.Token(woosh.OP, ',', 1013, 39, 1013, 40),
woosh.Token(woosh.NAME, 'repr', 1013, 41, 1013, 45),
woosh.Token(woosh.OP, ',', 1013, 45, 1013, 46),
woosh.Token(woosh.NAME, 'eq', 1013, 47, 1013, 49),
woosh.Token(woosh.OP, ',', 1013, 49, 1013, 50),
woosh.Token(woosh.NAME, 'order', 1013, 51, 1013, 56),
woosh.Token(woosh.OP, ',', 1013, 56, 1013, 57),
woosh.Token(woosh.NAME, 'unsafe_hash', 1013, 58, 1013, 69),
woosh.Token(woosh.OP, ',', 1013, 69, 1013, 70),
woosh.Token(woosh.NAME, 'frozen', 1013, 71, 1013, 77),
woosh.Token(woosh.OP, ')', 1013, 77, 1013, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1013, 78, 1014, 0),
woosh.Token(woosh.COMMENT, "# See if we're being called as @dataclass or @dataclass().", 1015, 4, 1015, 62),
woosh.Token(woosh.DEDENT, '    ', 1016, 0, 1016, 4),
woosh.Token(woosh.NAME, 'if', 1016, 4, 1016, 6),
woosh.Token(woosh.NAME, 'cls', 1016, 7, 1016, 10),
woosh.Token(woosh.NAME, 'is', 1016, 11, 1016, 13),
woosh.Token(woosh.NAME, 'None', 1016, 14, 1016, 18),
woosh.Token(woosh.OP, ':', 1016, 18, 1016, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 19, 1017, 0),
woosh.Token(woosh.COMMENT, "# We're called with parens.", 1017, 8, 1017, 35),
woosh.Token(woosh.INDENT, '        ', 1018, 0, 1018, 8),
woosh.Token(woosh.NAME, 'return', 1018, 8, 1018, 14),
woosh.Token(woosh.NAME, 'wrap', 1018, 15, 1018, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1018, 19, 1019, 0),
woosh.Token(woosh.COMMENT, "# We're called as @dataclass without parens.", 1020, 4, 1020, 48),
woosh.Token(woosh.DEDENT, '    ', 1021, 0, 1021, 4),
woosh.Token(woosh.NAME, 'return', 1021, 4, 1021, 10),
woosh.Token(woosh.NAME, 'wrap', 1021, 11, 1021, 15),
woosh.Token(woosh.OP, '(', 1021, 15, 1021, 16),
woosh.Token(woosh.NAME, 'cls', 1021, 16, 1021, 19),
woosh.Token(woosh.OP, ')', 1021, 19, 1021, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1021, 20, 1022, 0),
woosh.Token(woosh.DEDENT, '', 1024, 0, 1024, 0),
woosh.Token(woosh.NAME, 'def', 1024, 0, 1024, 3),
woosh.Token(woosh.NAME, 'fields', 1024, 4, 1024, 10),
woosh.Token(woosh.OP, '(', 1024, 10, 1024, 11),
woosh.Token(woosh.NAME, 'class_or_instance', 1024, 11, 1024, 28),
woosh.Token(woosh.OP, ')', 1024, 28, 1024, 29),
woosh.Token(woosh.OP, ':', 1024, 29, 1024, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1024, 30, 1025, 0),
woosh.Token(woosh.INDENT, '    ', 1025, 0, 1025, 4),
woosh.Token(woosh.STRING, '"""Return a tuple describing the fields of this dataclass.\r\n\r\n    Accepts a dataclass or an instance of one. Tuple elements are of\r\n    type Field.\r\n    """', 1025, 4, 1029, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1029, 7, 1030, 0),
woosh.Token(woosh.COMMENT, '# Might it be worth caching this, per class?', 1031, 4, 1031, 48),
woosh.Token(woosh.NAME, 'try', 1032, 4, 1032, 7),
woosh.Token(woosh.OP, ':', 1032, 7, 1032, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 1032, 8, 1033, 0),
woosh.Token(woosh.INDENT, '        ', 1033, 0, 1033, 8),
woosh.Token(woosh.NAME, 'fields', 1033, 8, 1033, 14),
woosh.Token(woosh.OP, '=', 1033, 15, 1033, 16),
woosh.Token(woosh.NAME, 'getattr', 1033, 17, 1033, 24),
woosh.Token(woosh.OP, '(', 1033, 24, 1033, 25),
woosh.Token(woosh.NAME, 'class_or_instance', 1033, 25, 1033, 42),
woosh.Token(woosh.OP, ',', 1033, 42, 1033, 43),
woosh.Token(woosh.NAME, '_FIELDS', 1033, 44, 1033, 51),
woosh.Token(woosh.OP, ')', 1033, 51, 1033, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1033, 52, 1034, 0),
woosh.Token(woosh.DEDENT, '    ', 1034, 0, 1034, 4),
woosh.Token(woosh.NAME, 'except', 1034, 4, 1034, 10),
woosh.Token(woosh.NAME, 'AttributeError', 1034, 11, 1034, 25),
woosh.Token(woosh.OP, ':', 1034, 25, 1034, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1034, 26, 1035, 0),
woosh.Token(woosh.INDENT, '        ', 1035, 0, 1035, 8),
woosh.Token(woosh.NAME, 'raise', 1035, 8, 1035, 13),
woosh.Token(woosh.NAME, 'TypeError', 1035, 14, 1035, 23),
woosh.Token(woosh.OP, '(', 1035, 23, 1035, 24),
woosh.Token(woosh.STRING, "'must be called with a dataclass type or instance'", 1035, 24, 1035, 74),
woosh.Token(woosh.OP, ')', 1035, 74, 1035, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1035, 75, 1036, 0),
woosh.Token(woosh.COMMENT, '# Exclude pseudo-fields.  Note that fields is sorted by insertion', 1037, 4, 1037, 69),
woosh.Token(woosh.COMMENT, '# order, so the order of the tuple is as the fields were defined.', 1038, 4, 1038, 69),
woosh.Token(woosh.DEDENT, '    ', 1039, 0, 1039, 4),
woosh.Token(woosh.NAME, 'return', 1039, 4, 1039, 10),
woosh.Token(woosh.NAME, 'tuple', 1039, 11, 1039, 16),
woosh.Token(woosh.OP, '(', 1039, 16, 1039, 17),
woosh.Token(woosh.NAME, 'f', 1039, 17, 1039, 18),
woosh.Token(woosh.NAME, 'for', 1039, 19, 1039, 22),
woosh.Token(woosh.NAME, 'f', 1039, 23, 1039, 24),
woosh.Token(woosh.NAME, 'in', 1039, 25, 1039, 27),
woosh.Token(woosh.NAME, 'fields', 1039, 28, 1039, 34),
woosh.Token(woosh.OP, '.', 1039, 34, 1039, 35),
woosh.Token(woosh.NAME, 'values', 1039, 35, 1039, 41),
woosh.Token(woosh.OP, '(', 1039, 41, 1039, 42),
woosh.Token(woosh.OP, ')', 1039, 42, 1039, 43),
woosh.Token(woosh.NAME, 'if', 1039, 44, 1039, 46),
woosh.Token(woosh.NAME, 'f', 1039, 47, 1039, 48),
woosh.Token(woosh.OP, '.', 1039, 48, 1039, 49),
woosh.Token(woosh.NAME, '_field_type', 1039, 49, 1039, 60),
woosh.Token(woosh.NAME, 'is', 1039, 61, 1039, 63),
woosh.Token(woosh.NAME, '_FIELD', 1039, 64, 1039, 70),
woosh.Token(woosh.OP, ')', 1039, 70, 1039, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1039, 71, 1040, 0),
woosh.Token(woosh.DEDENT, '', 1042, 0, 1042, 0),
woosh.Token(woosh.NAME, 'def', 1042, 0, 1042, 3),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1042, 4, 1042, 26),
woosh.Token(woosh.OP, '(', 1042, 26, 1042, 27),
woosh.Token(woosh.NAME, 'obj', 1042, 27, 1042, 30),
woosh.Token(woosh.OP, ')', 1042, 30, 1042, 31),
woosh.Token(woosh.OP, ':', 1042, 31, 1042, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1042, 32, 1043, 0),
woosh.Token(woosh.INDENT, '    ', 1043, 0, 1043, 4),
woosh.Token(woosh.STRING, '"""Returns True if obj is an instance of a dataclass."""', 1043, 4, 1043, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1043, 60, 1044, 0),
woosh.Token(woosh.NAME, 'return', 1044, 4, 1044, 10),
woosh.Token(woosh.NAME, 'hasattr', 1044, 11, 1044, 18),
woosh.Token(woosh.OP, '(', 1044, 18, 1044, 19),
woosh.Token(woosh.NAME, 'type', 1044, 19, 1044, 23),
woosh.Token(woosh.OP, '(', 1044, 23, 1044, 24),
woosh.Token(woosh.NAME, 'obj', 1044, 24, 1044, 27),
woosh.Token(woosh.OP, ')', 1044, 27, 1044, 28),
woosh.Token(woosh.OP, ',', 1044, 28, 1044, 29),
woosh.Token(woosh.NAME, '_FIELDS', 1044, 30, 1044, 37),
woosh.Token(woosh.OP, ')', 1044, 37, 1044, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1044, 38, 1045, 0),
woosh.Token(woosh.DEDENT, '', 1047, 0, 1047, 0),
woosh.Token(woosh.NAME, 'def', 1047, 0, 1047, 3),
woosh.Token(woosh.NAME, 'is_dataclass', 1047, 4, 1047, 16),
woosh.Token(woosh.OP, '(', 1047, 16, 1047, 17),
woosh.Token(woosh.NAME, 'obj', 1047, 17, 1047, 20),
woosh.Token(woosh.OP, ')', 1047, 20, 1047, 21),
woosh.Token(woosh.OP, ':', 1047, 21, 1047, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 22, 1048, 0),
woosh.Token(woosh.INDENT, '    ', 1048, 0, 1048, 4),
woosh.Token(woosh.STRING, '"""Returns True if obj is a dataclass or an instance of a\r\n    dataclass."""', 1048, 4, 1049, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1049, 17, 1050, 0),
woosh.Token(woosh.NAME, 'cls', 1050, 4, 1050, 7),
woosh.Token(woosh.OP, '=', 1050, 8, 1050, 9),
woosh.Token(woosh.NAME, 'obj', 1050, 10, 1050, 13),
woosh.Token(woosh.NAME, 'if', 1050, 14, 1050, 16),
woosh.Token(woosh.NAME, 'isinstance', 1050, 17, 1050, 27),
woosh.Token(woosh.OP, '(', 1050, 27, 1050, 28),
woosh.Token(woosh.NAME, 'obj', 1050, 28, 1050, 31),
woosh.Token(woosh.OP, ',', 1050, 31, 1050, 32),
woosh.Token(woosh.NAME, 'type', 1050, 33, 1050, 37),
woosh.Token(woosh.OP, ')', 1050, 37, 1050, 38),
woosh.Token(woosh.NAME, 'else', 1050, 39, 1050, 43),
woosh.Token(woosh.NAME, 'type', 1050, 44, 1050, 48),
woosh.Token(woosh.OP, '(', 1050, 48, 1050, 49),
woosh.Token(woosh.NAME, 'obj', 1050, 49, 1050, 52),
woosh.Token(woosh.OP, ')', 1050, 52, 1050, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1050, 53, 1051, 0),
woosh.Token(woosh.NAME, 'return', 1051, 4, 1051, 10),
woosh.Token(woosh.NAME, 'hasattr', 1051, 11, 1051, 18),
woosh.Token(woosh.OP, '(', 1051, 18, 1051, 19),
woosh.Token(woosh.NAME, 'cls', 1051, 19, 1051, 22),
woosh.Token(woosh.OP, ',', 1051, 22, 1051, 23),
woosh.Token(woosh.NAME, '_FIELDS', 1051, 24, 1051, 31),
woosh.Token(woosh.OP, ')', 1051, 31, 1051, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1051, 32, 1052, 0),
woosh.Token(woosh.DEDENT, '', 1054, 0, 1054, 0),
woosh.Token(woosh.NAME, 'def', 1054, 0, 1054, 3),
woosh.Token(woosh.NAME, 'asdict', 1054, 4, 1054, 10),
woosh.Token(woosh.OP, '(', 1054, 10, 1054, 11),
woosh.Token(woosh.NAME, 'obj', 1054, 11, 1054, 14),
woosh.Token(woosh.OP, ',', 1054, 14, 1054, 15),
woosh.Token(woosh.OP, '*', 1054, 16, 1054, 17),
woosh.Token(woosh.OP, ',', 1054, 17, 1054, 18),
woosh.Token(woosh.NAME, 'dict_factory', 1054, 19, 1054, 31),
woosh.Token(woosh.OP, '=', 1054, 31, 1054, 32),
woosh.Token(woosh.NAME, 'dict', 1054, 32, 1054, 36),
woosh.Token(woosh.OP, ')', 1054, 36, 1054, 37),
woosh.Token(woosh.OP, ':', 1054, 37, 1054, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1054, 38, 1055, 0),
woosh.Token(woosh.INDENT, '    ', 1055, 0, 1055, 4),
woosh.Token(woosh.STRING, '"""Return the fields of a dataclass instance as a new dictionary mapping\r\n    field names to field values.\r\n\r\n    Example usage:\r\n\r\n      @dataclass\r\n      class C:\r\n          x: int\r\n          y: int\r\n\r\n      c = C(1, 2)\r\n      assert asdict(c) == {\'x\': 1, \'y\': 2}\r\n\r\n    If given, \'dict_factory\' will be used instead of built-in dict.\r\n    The function applies recursively to field values that are\r\n    dataclass instances. This will also look into built-in containers:\r\n    tuples, lists, and dicts.\r\n    """', 1055, 4, 1072, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1072, 7, 1073, 0),
woosh.Token(woosh.NAME, 'if', 1073, 4, 1073, 6),
woosh.Token(woosh.NAME, 'not', 1073, 7, 1073, 10),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1073, 11, 1073, 33),
woosh.Token(woosh.OP, '(', 1073, 33, 1073, 34),
woosh.Token(woosh.NAME, 'obj', 1073, 34, 1073, 37),
woosh.Token(woosh.OP, ')', 1073, 37, 1073, 38),
woosh.Token(woosh.OP, ':', 1073, 38, 1073, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1073, 39, 1074, 0),
woosh.Token(woosh.INDENT, '        ', 1074, 0, 1074, 8),
woosh.Token(woosh.NAME, 'raise', 1074, 8, 1074, 13),
woosh.Token(woosh.NAME, 'TypeError', 1074, 14, 1074, 23),
woosh.Token(woosh.OP, '(', 1074, 23, 1074, 24),
woosh.Token(woosh.STRING, '"asdict() should be called on dataclass instances"', 1074, 24, 1074, 74),
woosh.Token(woosh.OP, ')', 1074, 74, 1074, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 75, 1075, 0),
woosh.Token(woosh.DEDENT, '    ', 1075, 0, 1075, 4),
woosh.Token(woosh.NAME, 'return', 1075, 4, 1075, 10),
woosh.Token(woosh.NAME, '_asdict_inner', 1075, 11, 1075, 24),
woosh.Token(woosh.OP, '(', 1075, 24, 1075, 25),
woosh.Token(woosh.NAME, 'obj', 1075, 25, 1075, 28),
woosh.Token(woosh.OP, ',', 1075, 28, 1075, 29),
woosh.Token(woosh.NAME, 'dict_factory', 1075, 30, 1075, 42),
woosh.Token(woosh.OP, ')', 1075, 42, 1075, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1075, 43, 1076, 0),
woosh.Token(woosh.DEDENT, '', 1078, 0, 1078, 0),
woosh.Token(woosh.NAME, 'def', 1078, 0, 1078, 3),
woosh.Token(woosh.NAME, '_asdict_inner', 1078, 4, 1078, 17),
woosh.Token(woosh.OP, '(', 1078, 17, 1078, 18),
woosh.Token(woosh.NAME, 'obj', 1078, 18, 1078, 21),
woosh.Token(woosh.OP, ',', 1078, 21, 1078, 22),
woosh.Token(woosh.NAME, 'dict_factory', 1078, 23, 1078, 35),
woosh.Token(woosh.OP, ')', 1078, 35, 1078, 36),
woosh.Token(woosh.OP, ':', 1078, 36, 1078, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1078, 37, 1079, 0),
woosh.Token(woosh.INDENT, '    ', 1079, 0, 1079, 4),
woosh.Token(woosh.NAME, 'if', 1079, 4, 1079, 6),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1079, 7, 1079, 29),
woosh.Token(woosh.OP, '(', 1079, 29, 1079, 30),
woosh.Token(woosh.NAME, 'obj', 1079, 30, 1079, 33),
woosh.Token(woosh.OP, ')', 1079, 33, 1079, 34),
woosh.Token(woosh.OP, ':', 1079, 34, 1079, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1079, 35, 1080, 0),
woosh.Token(woosh.INDENT, '        ', 1080, 0, 1080, 8),
woosh.Token(woosh.NAME, 'result', 1080, 8, 1080, 14),
woosh.Token(woosh.OP, '=', 1080, 15, 1080, 16),
woosh.Token(woosh.OP, '[', 1080, 17, 1080, 18),
woosh.Token(woosh.OP, ']', 1080, 18, 1080, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1080, 19, 1081, 0),
woosh.Token(woosh.NAME, 'for', 1081, 8, 1081, 11),
woosh.Token(woosh.NAME, 'f', 1081, 12, 1081, 13),
woosh.Token(woosh.NAME, 'in', 1081, 14, 1081, 16),
woosh.Token(woosh.NAME, 'fields', 1081, 17, 1081, 23),
woosh.Token(woosh.OP, '(', 1081, 23, 1081, 24),
woosh.Token(woosh.NAME, 'obj', 1081, 24, 1081, 27),
woosh.Token(woosh.OP, ')', 1081, 27, 1081, 28),
woosh.Token(woosh.OP, ':', 1081, 28, 1081, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1081, 29, 1082, 0),
woosh.Token(woosh.INDENT, '            ', 1082, 0, 1082, 12),
woosh.Token(woosh.NAME, 'value', 1082, 12, 1082, 17),
woosh.Token(woosh.OP, '=', 1082, 18, 1082, 19),
woosh.Token(woosh.NAME, '_asdict_inner', 1082, 20, 1082, 33),
woosh.Token(woosh.OP, '(', 1082, 33, 1082, 34),
woosh.Token(woosh.NAME, 'getattr', 1082, 34, 1082, 41),
woosh.Token(woosh.OP, '(', 1082, 41, 1082, 42),
woosh.Token(woosh.NAME, 'obj', 1082, 42, 1082, 45),
woosh.Token(woosh.OP, ',', 1082, 45, 1082, 46),
woosh.Token(woosh.NAME, 'f', 1082, 47, 1082, 48),
woosh.Token(woosh.OP, '.', 1082, 48, 1082, 49),
woosh.Token(woosh.NAME, 'name', 1082, 49, 1082, 53),
woosh.Token(woosh.OP, ')', 1082, 53, 1082, 54),
woosh.Token(woosh.OP, ',', 1082, 54, 1082, 55),
woosh.Token(woosh.NAME, 'dict_factory', 1082, 56, 1082, 68),
woosh.Token(woosh.OP, ')', 1082, 68, 1082, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1082, 69, 1083, 0),
woosh.Token(woosh.NAME, 'result', 1083, 12, 1083, 18),
woosh.Token(woosh.OP, '.', 1083, 18, 1083, 19),
woosh.Token(woosh.NAME, 'append', 1083, 19, 1083, 25),
woosh.Token(woosh.OP, '(', 1083, 25, 1083, 26),
woosh.Token(woosh.OP, '(', 1083, 26, 1083, 27),
woosh.Token(woosh.NAME, 'f', 1083, 27, 1083, 28),
woosh.Token(woosh.OP, '.', 1083, 28, 1083, 29),
woosh.Token(woosh.NAME, 'name', 1083, 29, 1083, 33),
woosh.Token(woosh.OP, ',', 1083, 33, 1083, 34),
woosh.Token(woosh.NAME, 'value', 1083, 35, 1083, 40),
woosh.Token(woosh.OP, ')', 1083, 40, 1083, 41),
woosh.Token(woosh.OP, ')', 1083, 41, 1083, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1083, 42, 1084, 0),
woosh.Token(woosh.DEDENT, '        ', 1084, 0, 1084, 8),
woosh.Token(woosh.NAME, 'return', 1084, 8, 1084, 14),
woosh.Token(woosh.NAME, 'dict_factory', 1084, 15, 1084, 27),
woosh.Token(woosh.OP, '(', 1084, 27, 1084, 28),
woosh.Token(woosh.NAME, 'result', 1084, 28, 1084, 34),
woosh.Token(woosh.OP, ')', 1084, 34, 1084, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1084, 35, 1085, 0),
woosh.Token(woosh.DEDENT, '    ', 1085, 0, 1085, 4),
woosh.Token(woosh.NAME, 'elif', 1085, 4, 1085, 8),
woosh.Token(woosh.NAME, 'isinstance', 1085, 9, 1085, 19),
woosh.Token(woosh.OP, '(', 1085, 19, 1085, 20),
woosh.Token(woosh.NAME, 'obj', 1085, 20, 1085, 23),
woosh.Token(woosh.OP, ',', 1085, 23, 1085, 24),
woosh.Token(woosh.NAME, 'tuple', 1085, 25, 1085, 30),
woosh.Token(woosh.OP, ')', 1085, 30, 1085, 31),
woosh.Token(woosh.NAME, 'and', 1085, 32, 1085, 35),
woosh.Token(woosh.NAME, 'hasattr', 1085, 36, 1085, 43),
woosh.Token(woosh.OP, '(', 1085, 43, 1085, 44),
woosh.Token(woosh.NAME, 'obj', 1085, 44, 1085, 47),
woosh.Token(woosh.OP, ',', 1085, 47, 1085, 48),
woosh.Token(woosh.STRING, "'_fields'", 1085, 49, 1085, 58),
woosh.Token(woosh.OP, ')', 1085, 58, 1085, 59),
woosh.Token(woosh.OP, ':', 1085, 59, 1085, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1085, 60, 1086, 0),
woosh.Token(woosh.COMMENT, '# obj is a namedtuple.  Recurse into it, but the returned', 1086, 8, 1086, 65),
woosh.Token(woosh.COMMENT, '# object is another namedtuple of the same type.  This is', 1087, 8, 1087, 65),
woosh.Token(woosh.COMMENT, '# similar to how other list- or tuple-derived classes are', 1088, 8, 1088, 65),
woosh.Token(woosh.COMMENT, '# treated (see below), but we just need to create them', 1089, 8, 1089, 62),
woosh.Token(woosh.COMMENT, "# differently because a namedtuple's __init__ needs to be", 1090, 8, 1090, 65),
woosh.Token(woosh.COMMENT, '# called differently (see bpo-34363).', 1091, 8, 1091, 45),
woosh.Token(woosh.COMMENT, "# I'm not using namedtuple's _asdict()", 1093, 8, 1093, 46),
woosh.Token(woosh.COMMENT, '# method, because:', 1094, 8, 1094, 26),
woosh.Token(woosh.COMMENT, '# - it does not recurse in to the namedtuple fields and', 1095, 8, 1095, 63),
woosh.Token(woosh.COMMENT, '#   convert them to dicts (using dict_factory).', 1096, 8, 1096, 55),
woosh.Token(woosh.COMMENT, "# - I don't actually want to return a dict here.  The main", 1097, 8, 1097, 66),
woosh.Token(woosh.COMMENT, '#   use case here is json.dumps, and it handles converting', 1098, 8, 1098, 66),
woosh.Token(woosh.COMMENT, "#   namedtuples to lists.  Admittedly we're losing some", 1099, 8, 1099, 63),
woosh.Token(woosh.COMMENT, '#   information here when we produce a json list instead of a', 1100, 8, 1100, 69),
woosh.Token(woosh.COMMENT, '#   dict.  Note that if we returned dicts here instead of', 1101, 8, 1101, 65),
woosh.Token(woosh.COMMENT, '#   namedtuples, we could no longer call asdict() on a data', 1102, 8, 1102, 67),
woosh.Token(woosh.COMMENT, '#   structure where a namedtuple was used as a dict key.', 1103, 8, 1103, 64),
woosh.Token(woosh.INDENT, '        ', 1105, 0, 1105, 8),
woosh.Token(woosh.NAME, 'return', 1105, 8, 1105, 14),
woosh.Token(woosh.NAME, 'type', 1105, 15, 1105, 19),
woosh.Token(woosh.OP, '(', 1105, 19, 1105, 20),
woosh.Token(woosh.NAME, 'obj', 1105, 20, 1105, 23),
woosh.Token(woosh.OP, ')', 1105, 23, 1105, 24),
woosh.Token(woosh.OP, '(', 1105, 24, 1105, 25),
woosh.Token(woosh.OP, '*', 1105, 25, 1105, 26),
woosh.Token(woosh.OP, '[', 1105, 26, 1105, 27),
woosh.Token(woosh.NAME, '_asdict_inner', 1105, 27, 1105, 40),
woosh.Token(woosh.OP, '(', 1105, 40, 1105, 41),
woosh.Token(woosh.NAME, 'v', 1105, 41, 1105, 42),
woosh.Token(woosh.OP, ',', 1105, 42, 1105, 43),
woosh.Token(woosh.NAME, 'dict_factory', 1105, 44, 1105, 56),
woosh.Token(woosh.OP, ')', 1105, 56, 1105, 57),
woosh.Token(woosh.NAME, 'for', 1105, 58, 1105, 61),
woosh.Token(woosh.NAME, 'v', 1105, 62, 1105, 63),
woosh.Token(woosh.NAME, 'in', 1105, 64, 1105, 66),
woosh.Token(woosh.NAME, 'obj', 1105, 67, 1105, 70),
woosh.Token(woosh.OP, ']', 1105, 70, 1105, 71),
woosh.Token(woosh.OP, ')', 1105, 71, 1105, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1105, 72, 1106, 0),
woosh.Token(woosh.DEDENT, '    ', 1106, 0, 1106, 4),
woosh.Token(woosh.NAME, 'elif', 1106, 4, 1106, 8),
woosh.Token(woosh.NAME, 'isinstance', 1106, 9, 1106, 19),
woosh.Token(woosh.OP, '(', 1106, 19, 1106, 20),
woosh.Token(woosh.NAME, 'obj', 1106, 20, 1106, 23),
woosh.Token(woosh.OP, ',', 1106, 23, 1106, 24),
woosh.Token(woosh.OP, '(', 1106, 25, 1106, 26),
woosh.Token(woosh.NAME, 'list', 1106, 26, 1106, 30),
woosh.Token(woosh.OP, ',', 1106, 30, 1106, 31),
woosh.Token(woosh.NAME, 'tuple', 1106, 32, 1106, 37),
woosh.Token(woosh.OP, ')', 1106, 37, 1106, 38),
woosh.Token(woosh.OP, ')', 1106, 38, 1106, 39),
woosh.Token(woosh.OP, ':', 1106, 39, 1106, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1106, 40, 1107, 0),
woosh.Token(woosh.COMMENT, '# Assume we can create an object of this type by passing in a', 1107, 8, 1107, 69),
woosh.Token(woosh.COMMENT, '# generator (which is not true for namedtuples, handled', 1108, 8, 1108, 63),
woosh.Token(woosh.COMMENT, '# above).', 1109, 8, 1109, 17),
woosh.Token(woosh.INDENT, '        ', 1110, 0, 1110, 8),
woosh.Token(woosh.NAME, 'return', 1110, 8, 1110, 14),
woosh.Token(woosh.NAME, 'type', 1110, 15, 1110, 19),
woosh.Token(woosh.OP, '(', 1110, 19, 1110, 20),
woosh.Token(woosh.NAME, 'obj', 1110, 20, 1110, 23),
woosh.Token(woosh.OP, ')', 1110, 23, 1110, 24),
woosh.Token(woosh.OP, '(', 1110, 24, 1110, 25),
woosh.Token(woosh.NAME, '_asdict_inner', 1110, 25, 1110, 38),
woosh.Token(woosh.OP, '(', 1110, 38, 1110, 39),
woosh.Token(woosh.NAME, 'v', 1110, 39, 1110, 40),
woosh.Token(woosh.OP, ',', 1110, 40, 1110, 41),
woosh.Token(woosh.NAME, 'dict_factory', 1110, 42, 1110, 54),
woosh.Token(woosh.OP, ')', 1110, 54, 1110, 55),
woosh.Token(woosh.NAME, 'for', 1110, 56, 1110, 59),
woosh.Token(woosh.NAME, 'v', 1110, 60, 1110, 61),
woosh.Token(woosh.NAME, 'in', 1110, 62, 1110, 64),
woosh.Token(woosh.NAME, 'obj', 1110, 65, 1110, 68),
woosh.Token(woosh.OP, ')', 1110, 68, 1110, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1110, 69, 1111, 0),
woosh.Token(woosh.DEDENT, '    ', 1111, 0, 1111, 4),
woosh.Token(woosh.NAME, 'elif', 1111, 4, 1111, 8),
woosh.Token(woosh.NAME, 'isinstance', 1111, 9, 1111, 19),
woosh.Token(woosh.OP, '(', 1111, 19, 1111, 20),
woosh.Token(woosh.NAME, 'obj', 1111, 20, 1111, 23),
woosh.Token(woosh.OP, ',', 1111, 23, 1111, 24),
woosh.Token(woosh.NAME, 'dict', 1111, 25, 1111, 29),
woosh.Token(woosh.OP, ')', 1111, 29, 1111, 30),
woosh.Token(woosh.OP, ':', 1111, 30, 1111, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1111, 31, 1112, 0),
woosh.Token(woosh.INDENT, '        ', 1112, 0, 1112, 8),
woosh.Token(woosh.NAME, 'return', 1112, 8, 1112, 14),
woosh.Token(woosh.NAME, 'type', 1112, 15, 1112, 19),
woosh.Token(woosh.OP, '(', 1112, 19, 1112, 20),
woosh.Token(woosh.NAME, 'obj', 1112, 20, 1112, 23),
woosh.Token(woosh.OP, ')', 1112, 23, 1112, 24),
woosh.Token(woosh.OP, '(', 1112, 24, 1112, 25),
woosh.Token(woosh.OP, '(', 1112, 25, 1112, 26),
woosh.Token(woosh.NAME, '_asdict_inner', 1112, 26, 1112, 39),
woosh.Token(woosh.OP, '(', 1112, 39, 1112, 40),
woosh.Token(woosh.NAME, 'k', 1112, 40, 1112, 41),
woosh.Token(woosh.OP, ',', 1112, 41, 1112, 42),
woosh.Token(woosh.NAME, 'dict_factory', 1112, 43, 1112, 55),
woosh.Token(woosh.OP, ')', 1112, 55, 1112, 56),
woosh.Token(woosh.OP, ',', 1112, 56, 1112, 57),
woosh.Token(woosh.NAME, '_asdict_inner', 1113, 26, 1113, 39),
woosh.Token(woosh.OP, '(', 1113, 39, 1113, 40),
woosh.Token(woosh.NAME, 'v', 1113, 40, 1113, 41),
woosh.Token(woosh.OP, ',', 1113, 41, 1113, 42),
woosh.Token(woosh.NAME, 'dict_factory', 1113, 43, 1113, 55),
woosh.Token(woosh.OP, ')', 1113, 55, 1113, 56),
woosh.Token(woosh.OP, ')', 1113, 56, 1113, 57),
woosh.Token(woosh.NAME, 'for', 1114, 25, 1114, 28),
woosh.Token(woosh.NAME, 'k', 1114, 29, 1114, 30),
woosh.Token(woosh.OP, ',', 1114, 30, 1114, 31),
woosh.Token(woosh.NAME, 'v', 1114, 32, 1114, 33),
woosh.Token(woosh.NAME, 'in', 1114, 34, 1114, 36),
woosh.Token(woosh.NAME, 'obj', 1114, 37, 1114, 40),
woosh.Token(woosh.OP, '.', 1114, 40, 1114, 41),
woosh.Token(woosh.NAME, 'items', 1114, 41, 1114, 46),
woosh.Token(woosh.OP, '(', 1114, 46, 1114, 47),
woosh.Token(woosh.OP, ')', 1114, 47, 1114, 48),
woosh.Token(woosh.OP, ')', 1114, 48, 1114, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1114, 49, 1115, 0),
woosh.Token(woosh.DEDENT, '    ', 1115, 0, 1115, 4),
woosh.Token(woosh.NAME, 'else', 1115, 4, 1115, 8),
woosh.Token(woosh.OP, ':', 1115, 8, 1115, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1115, 9, 1116, 0),
woosh.Token(woosh.INDENT, '        ', 1116, 0, 1116, 8),
woosh.Token(woosh.NAME, 'return', 1116, 8, 1116, 14),
woosh.Token(woosh.NAME, 'copy', 1116, 15, 1116, 19),
woosh.Token(woosh.OP, '.', 1116, 19, 1116, 20),
woosh.Token(woosh.NAME, 'deepcopy', 1116, 20, 1116, 28),
woosh.Token(woosh.OP, '(', 1116, 28, 1116, 29),
woosh.Token(woosh.NAME, 'obj', 1116, 29, 1116, 32),
woosh.Token(woosh.OP, ')', 1116, 32, 1116, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1116, 33, 1117, 0),
woosh.Token(woosh.DEDENT, '', 1119, 0, 1119, 0),
woosh.Token(woosh.DEDENT, '', 1119, 0, 1119, 0),
woosh.Token(woosh.NAME, 'def', 1119, 0, 1119, 3),
woosh.Token(woosh.NAME, 'astuple', 1119, 4, 1119, 11),
woosh.Token(woosh.OP, '(', 1119, 11, 1119, 12),
woosh.Token(woosh.NAME, 'obj', 1119, 12, 1119, 15),
woosh.Token(woosh.OP, ',', 1119, 15, 1119, 16),
woosh.Token(woosh.OP, '*', 1119, 17, 1119, 18),
woosh.Token(woosh.OP, ',', 1119, 18, 1119, 19),
woosh.Token(woosh.NAME, 'tuple_factory', 1119, 20, 1119, 33),
woosh.Token(woosh.OP, '=', 1119, 33, 1119, 34),
woosh.Token(woosh.NAME, 'tuple', 1119, 34, 1119, 39),
woosh.Token(woosh.OP, ')', 1119, 39, 1119, 40),
woosh.Token(woosh.OP, ':', 1119, 40, 1119, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1119, 41, 1120, 0),
woosh.Token(woosh.INDENT, '    ', 1120, 0, 1120, 4),
woosh.Token(woosh.STRING, '"""Return the fields of a dataclass instance as a new tuple of field values.\r\n\r\n    Example usage::\r\n\r\n      @dataclass\r\n      class C:\r\n          x: int\r\n          y: int\r\n\r\n    c = C(1, 2)\r\n    assert astuple(c) == (1, 2)\r\n\r\n    If given, \'tuple_factory\' will be used instead of built-in tuple.\r\n    The function applies recursively to field values that are\r\n    dataclass instances. This will also look into built-in containers:\r\n    tuples, lists, and dicts.\r\n    """', 1120, 4, 1136, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1136, 7, 1137, 0),
woosh.Token(woosh.NAME, 'if', 1138, 4, 1138, 6),
woosh.Token(woosh.NAME, 'not', 1138, 7, 1138, 10),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1138, 11, 1138, 33),
woosh.Token(woosh.OP, '(', 1138, 33, 1138, 34),
woosh.Token(woosh.NAME, 'obj', 1138, 34, 1138, 37),
woosh.Token(woosh.OP, ')', 1138, 37, 1138, 38),
woosh.Token(woosh.OP, ':', 1138, 38, 1138, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1138, 39, 1139, 0),
woosh.Token(woosh.INDENT, '        ', 1139, 0, 1139, 8),
woosh.Token(woosh.NAME, 'raise', 1139, 8, 1139, 13),
woosh.Token(woosh.NAME, 'TypeError', 1139, 14, 1139, 23),
woosh.Token(woosh.OP, '(', 1139, 23, 1139, 24),
woosh.Token(woosh.STRING, '"astuple() should be called on dataclass instances"', 1139, 24, 1139, 75),
woosh.Token(woosh.OP, ')', 1139, 75, 1139, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1139, 76, 1140, 0),
woosh.Token(woosh.DEDENT, '    ', 1140, 0, 1140, 4),
woosh.Token(woosh.NAME, 'return', 1140, 4, 1140, 10),
woosh.Token(woosh.NAME, '_astuple_inner', 1140, 11, 1140, 25),
woosh.Token(woosh.OP, '(', 1140, 25, 1140, 26),
woosh.Token(woosh.NAME, 'obj', 1140, 26, 1140, 29),
woosh.Token(woosh.OP, ',', 1140, 29, 1140, 30),
woosh.Token(woosh.NAME, 'tuple_factory', 1140, 31, 1140, 44),
woosh.Token(woosh.OP, ')', 1140, 44, 1140, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1140, 45, 1141, 0),
woosh.Token(woosh.DEDENT, '', 1143, 0, 1143, 0),
woosh.Token(woosh.NAME, 'def', 1143, 0, 1143, 3),
woosh.Token(woosh.NAME, '_astuple_inner', 1143, 4, 1143, 18),
woosh.Token(woosh.OP, '(', 1143, 18, 1143, 19),
woosh.Token(woosh.NAME, 'obj', 1143, 19, 1143, 22),
woosh.Token(woosh.OP, ',', 1143, 22, 1143, 23),
woosh.Token(woosh.NAME, 'tuple_factory', 1143, 24, 1143, 37),
woosh.Token(woosh.OP, ')', 1143, 37, 1143, 38),
woosh.Token(woosh.OP, ':', 1143, 38, 1143, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1143, 39, 1144, 0),
woosh.Token(woosh.INDENT, '    ', 1144, 0, 1144, 4),
woosh.Token(woosh.NAME, 'if', 1144, 4, 1144, 6),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1144, 7, 1144, 29),
woosh.Token(woosh.OP, '(', 1144, 29, 1144, 30),
woosh.Token(woosh.NAME, 'obj', 1144, 30, 1144, 33),
woosh.Token(woosh.OP, ')', 1144, 33, 1144, 34),
woosh.Token(woosh.OP, ':', 1144, 34, 1144, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1144, 35, 1145, 0),
woosh.Token(woosh.INDENT, '        ', 1145, 0, 1145, 8),
woosh.Token(woosh.NAME, 'result', 1145, 8, 1145, 14),
woosh.Token(woosh.OP, '=', 1145, 15, 1145, 16),
woosh.Token(woosh.OP, '[', 1145, 17, 1145, 18),
woosh.Token(woosh.OP, ']', 1145, 18, 1145, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1145, 19, 1146, 0),
woosh.Token(woosh.NAME, 'for', 1146, 8, 1146, 11),
woosh.Token(woosh.NAME, 'f', 1146, 12, 1146, 13),
woosh.Token(woosh.NAME, 'in', 1146, 14, 1146, 16),
woosh.Token(woosh.NAME, 'fields', 1146, 17, 1146, 23),
woosh.Token(woosh.OP, '(', 1146, 23, 1146, 24),
woosh.Token(woosh.NAME, 'obj', 1146, 24, 1146, 27),
woosh.Token(woosh.OP, ')', 1146, 27, 1146, 28),
woosh.Token(woosh.OP, ':', 1146, 28, 1146, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1146, 29, 1147, 0),
woosh.Token(woosh.INDENT, '            ', 1147, 0, 1147, 12),
woosh.Token(woosh.NAME, 'value', 1147, 12, 1147, 17),
woosh.Token(woosh.OP, '=', 1147, 18, 1147, 19),
woosh.Token(woosh.NAME, '_astuple_inner', 1147, 20, 1147, 34),
woosh.Token(woosh.OP, '(', 1147, 34, 1147, 35),
woosh.Token(woosh.NAME, 'getattr', 1147, 35, 1147, 42),
woosh.Token(woosh.OP, '(', 1147, 42, 1147, 43),
woosh.Token(woosh.NAME, 'obj', 1147, 43, 1147, 46),
woosh.Token(woosh.OP, ',', 1147, 46, 1147, 47),
woosh.Token(woosh.NAME, 'f', 1147, 48, 1147, 49),
woosh.Token(woosh.OP, '.', 1147, 49, 1147, 50),
woosh.Token(woosh.NAME, 'name', 1147, 50, 1147, 54),
woosh.Token(woosh.OP, ')', 1147, 54, 1147, 55),
woosh.Token(woosh.OP, ',', 1147, 55, 1147, 56),
woosh.Token(woosh.NAME, 'tuple_factory', 1147, 57, 1147, 70),
woosh.Token(woosh.OP, ')', 1147, 70, 1147, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1147, 71, 1148, 0),
woosh.Token(woosh.NAME, 'result', 1148, 12, 1148, 18),
woosh.Token(woosh.OP, '.', 1148, 18, 1148, 19),
woosh.Token(woosh.NAME, 'append', 1148, 19, 1148, 25),
woosh.Token(woosh.OP, '(', 1148, 25, 1148, 26),
woosh.Token(woosh.NAME, 'value', 1148, 26, 1148, 31),
woosh.Token(woosh.OP, ')', 1148, 31, 1148, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1148, 32, 1149, 0),
woosh.Token(woosh.DEDENT, '        ', 1149, 0, 1149, 8),
woosh.Token(woosh.NAME, 'return', 1149, 8, 1149, 14),
woosh.Token(woosh.NAME, 'tuple_factory', 1149, 15, 1149, 28),
woosh.Token(woosh.OP, '(', 1149, 28, 1149, 29),
woosh.Token(woosh.NAME, 'result', 1149, 29, 1149, 35),
woosh.Token(woosh.OP, ')', 1149, 35, 1149, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1149, 36, 1150, 0),
woosh.Token(woosh.DEDENT, '    ', 1150, 0, 1150, 4),
woosh.Token(woosh.NAME, 'elif', 1150, 4, 1150, 8),
woosh.Token(woosh.NAME, 'isinstance', 1150, 9, 1150, 19),
woosh.Token(woosh.OP, '(', 1150, 19, 1150, 20),
woosh.Token(woosh.NAME, 'obj', 1150, 20, 1150, 23),
woosh.Token(woosh.OP, ',', 1150, 23, 1150, 24),
woosh.Token(woosh.NAME, 'tuple', 1150, 25, 1150, 30),
woosh.Token(woosh.OP, ')', 1150, 30, 1150, 31),
woosh.Token(woosh.NAME, 'and', 1150, 32, 1150, 35),
woosh.Token(woosh.NAME, 'hasattr', 1150, 36, 1150, 43),
woosh.Token(woosh.OP, '(', 1150, 43, 1150, 44),
woosh.Token(woosh.NAME, 'obj', 1150, 44, 1150, 47),
woosh.Token(woosh.OP, ',', 1150, 47, 1150, 48),
woosh.Token(woosh.STRING, "'_fields'", 1150, 49, 1150, 58),
woosh.Token(woosh.OP, ')', 1150, 58, 1150, 59),
woosh.Token(woosh.OP, ':', 1150, 59, 1150, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1150, 60, 1151, 0),
woosh.Token(woosh.COMMENT, '# obj is a namedtuple.  Recurse into it, but the returned', 1151, 8, 1151, 65),
woosh.Token(woosh.COMMENT, '# object is another namedtuple of the same type.  This is', 1152, 8, 1152, 65),
woosh.Token(woosh.COMMENT, '# similar to how other list- or tuple-derived classes are', 1153, 8, 1153, 65),
woosh.Token(woosh.COMMENT, '# treated (see below), but we just need to create them', 1154, 8, 1154, 62),
woosh.Token(woosh.COMMENT, "# differently because a namedtuple's __init__ needs to be", 1155, 8, 1155, 65),
woosh.Token(woosh.COMMENT, '# called differently (see bpo-34363).', 1156, 8, 1156, 45),
woosh.Token(woosh.INDENT, '        ', 1157, 0, 1157, 8),
woosh.Token(woosh.NAME, 'return', 1157, 8, 1157, 14),
woosh.Token(woosh.NAME, 'type', 1157, 15, 1157, 19),
woosh.Token(woosh.OP, '(', 1157, 19, 1157, 20),
woosh.Token(woosh.NAME, 'obj', 1157, 20, 1157, 23),
woosh.Token(woosh.OP, ')', 1157, 23, 1157, 24),
woosh.Token(woosh.OP, '(', 1157, 24, 1157, 25),
woosh.Token(woosh.OP, '*', 1157, 25, 1157, 26),
woosh.Token(woosh.OP, '[', 1157, 26, 1157, 27),
woosh.Token(woosh.NAME, '_astuple_inner', 1157, 27, 1157, 41),
woosh.Token(woosh.OP, '(', 1157, 41, 1157, 42),
woosh.Token(woosh.NAME, 'v', 1157, 42, 1157, 43),
woosh.Token(woosh.OP, ',', 1157, 43, 1157, 44),
woosh.Token(woosh.NAME, 'tuple_factory', 1157, 45, 1157, 58),
woosh.Token(woosh.OP, ')', 1157, 58, 1157, 59),
woosh.Token(woosh.NAME, 'for', 1157, 60, 1157, 63),
woosh.Token(woosh.NAME, 'v', 1157, 64, 1157, 65),
woosh.Token(woosh.NAME, 'in', 1157, 66, 1157, 68),
woosh.Token(woosh.NAME, 'obj', 1157, 69, 1157, 72),
woosh.Token(woosh.OP, ']', 1157, 72, 1157, 73),
woosh.Token(woosh.OP, ')', 1157, 73, 1157, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1157, 74, 1158, 0),
woosh.Token(woosh.DEDENT, '    ', 1158, 0, 1158, 4),
woosh.Token(woosh.NAME, 'elif', 1158, 4, 1158, 8),
woosh.Token(woosh.NAME, 'isinstance', 1158, 9, 1158, 19),
woosh.Token(woosh.OP, '(', 1158, 19, 1158, 20),
woosh.Token(woosh.NAME, 'obj', 1158, 20, 1158, 23),
woosh.Token(woosh.OP, ',', 1158, 23, 1158, 24),
woosh.Token(woosh.OP, '(', 1158, 25, 1158, 26),
woosh.Token(woosh.NAME, 'list', 1158, 26, 1158, 30),
woosh.Token(woosh.OP, ',', 1158, 30, 1158, 31),
woosh.Token(woosh.NAME, 'tuple', 1158, 32, 1158, 37),
woosh.Token(woosh.OP, ')', 1158, 37, 1158, 38),
woosh.Token(woosh.OP, ')', 1158, 38, 1158, 39),
woosh.Token(woosh.OP, ':', 1158, 39, 1158, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1158, 40, 1159, 0),
woosh.Token(woosh.COMMENT, '# Assume we can create an object of this type by passing in a', 1159, 8, 1159, 69),
woosh.Token(woosh.COMMENT, '# generator (which is not true for namedtuples, handled', 1160, 8, 1160, 63),
woosh.Token(woosh.COMMENT, '# above).', 1161, 8, 1161, 17),
woosh.Token(woosh.INDENT, '        ', 1162, 0, 1162, 8),
woosh.Token(woosh.NAME, 'return', 1162, 8, 1162, 14),
woosh.Token(woosh.NAME, 'type', 1162, 15, 1162, 19),
woosh.Token(woosh.OP, '(', 1162, 19, 1162, 20),
woosh.Token(woosh.NAME, 'obj', 1162, 20, 1162, 23),
woosh.Token(woosh.OP, ')', 1162, 23, 1162, 24),
woosh.Token(woosh.OP, '(', 1162, 24, 1162, 25),
woosh.Token(woosh.NAME, '_astuple_inner', 1162, 25, 1162, 39),
woosh.Token(woosh.OP, '(', 1162, 39, 1162, 40),
woosh.Token(woosh.NAME, 'v', 1162, 40, 1162, 41),
woosh.Token(woosh.OP, ',', 1162, 41, 1162, 42),
woosh.Token(woosh.NAME, 'tuple_factory', 1162, 43, 1162, 56),
woosh.Token(woosh.OP, ')', 1162, 56, 1162, 57),
woosh.Token(woosh.NAME, 'for', 1162, 58, 1162, 61),
woosh.Token(woosh.NAME, 'v', 1162, 62, 1162, 63),
woosh.Token(woosh.NAME, 'in', 1162, 64, 1162, 66),
woosh.Token(woosh.NAME, 'obj', 1162, 67, 1162, 70),
woosh.Token(woosh.OP, ')', 1162, 70, 1162, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1162, 71, 1163, 0),
woosh.Token(woosh.DEDENT, '    ', 1163, 0, 1163, 4),
woosh.Token(woosh.NAME, 'elif', 1163, 4, 1163, 8),
woosh.Token(woosh.NAME, 'isinstance', 1163, 9, 1163, 19),
woosh.Token(woosh.OP, '(', 1163, 19, 1163, 20),
woosh.Token(woosh.NAME, 'obj', 1163, 20, 1163, 23),
woosh.Token(woosh.OP, ',', 1163, 23, 1163, 24),
woosh.Token(woosh.NAME, 'dict', 1163, 25, 1163, 29),
woosh.Token(woosh.OP, ')', 1163, 29, 1163, 30),
woosh.Token(woosh.OP, ':', 1163, 30, 1163, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1163, 31, 1164, 0),
woosh.Token(woosh.INDENT, '        ', 1164, 0, 1164, 8),
woosh.Token(woosh.NAME, 'return', 1164, 8, 1164, 14),
woosh.Token(woosh.NAME, 'type', 1164, 15, 1164, 19),
woosh.Token(woosh.OP, '(', 1164, 19, 1164, 20),
woosh.Token(woosh.NAME, 'obj', 1164, 20, 1164, 23),
woosh.Token(woosh.OP, ')', 1164, 23, 1164, 24),
woosh.Token(woosh.OP, '(', 1164, 24, 1164, 25),
woosh.Token(woosh.OP, '(', 1164, 25, 1164, 26),
woosh.Token(woosh.NAME, '_astuple_inner', 1164, 26, 1164, 40),
woosh.Token(woosh.OP, '(', 1164, 40, 1164, 41),
woosh.Token(woosh.NAME, 'k', 1164, 41, 1164, 42),
woosh.Token(woosh.OP, ',', 1164, 42, 1164, 43),
woosh.Token(woosh.NAME, 'tuple_factory', 1164, 44, 1164, 57),
woosh.Token(woosh.OP, ')', 1164, 57, 1164, 58),
woosh.Token(woosh.OP, ',', 1164, 58, 1164, 59),
woosh.Token(woosh.NAME, '_astuple_inner', 1164, 60, 1164, 74),
woosh.Token(woosh.OP, '(', 1164, 74, 1164, 75),
woosh.Token(woosh.NAME, 'v', 1164, 75, 1164, 76),
woosh.Token(woosh.OP, ',', 1164, 76, 1164, 77),
woosh.Token(woosh.NAME, 'tuple_factory', 1164, 78, 1164, 91),
woosh.Token(woosh.OP, ')', 1164, 91, 1164, 92),
woosh.Token(woosh.OP, ')', 1164, 92, 1164, 93),
woosh.Token(woosh.NAME, 'for', 1165, 26, 1165, 29),
woosh.Token(woosh.NAME, 'k', 1165, 30, 1165, 31),
woosh.Token(woosh.OP, ',', 1165, 31, 1165, 32),
woosh.Token(woosh.NAME, 'v', 1165, 33, 1165, 34),
woosh.Token(woosh.NAME, 'in', 1165, 35, 1165, 37),
woosh.Token(woosh.NAME, 'obj', 1165, 38, 1165, 41),
woosh.Token(woosh.OP, '.', 1165, 41, 1165, 42),
woosh.Token(woosh.NAME, 'items', 1165, 42, 1165, 47),
woosh.Token(woosh.OP, '(', 1165, 47, 1165, 48),
woosh.Token(woosh.OP, ')', 1165, 48, 1165, 49),
woosh.Token(woosh.OP, ')', 1165, 49, 1165, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1165, 50, 1166, 0),
woosh.Token(woosh.DEDENT, '    ', 1166, 0, 1166, 4),
woosh.Token(woosh.NAME, 'else', 1166, 4, 1166, 8),
woosh.Token(woosh.OP, ':', 1166, 8, 1166, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1166, 9, 1167, 0),
woosh.Token(woosh.INDENT, '        ', 1167, 0, 1167, 8),
woosh.Token(woosh.NAME, 'return', 1167, 8, 1167, 14),
woosh.Token(woosh.NAME, 'copy', 1167, 15, 1167, 19),
woosh.Token(woosh.OP, '.', 1167, 19, 1167, 20),
woosh.Token(woosh.NAME, 'deepcopy', 1167, 20, 1167, 28),
woosh.Token(woosh.OP, '(', 1167, 28, 1167, 29),
woosh.Token(woosh.NAME, 'obj', 1167, 29, 1167, 32),
woosh.Token(woosh.OP, ')', 1167, 32, 1167, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1167, 33, 1168, 0),
woosh.Token(woosh.DEDENT, '', 1170, 0, 1170, 0),
woosh.Token(woosh.DEDENT, '', 1170, 0, 1170, 0),
woosh.Token(woosh.NAME, 'def', 1170, 0, 1170, 3),
woosh.Token(woosh.NAME, 'make_dataclass', 1170, 4, 1170, 18),
woosh.Token(woosh.OP, '(', 1170, 18, 1170, 19),
woosh.Token(woosh.NAME, 'cls_name', 1170, 19, 1170, 27),
woosh.Token(woosh.OP, ',', 1170, 27, 1170, 28),
woosh.Token(woosh.NAME, 'fields', 1170, 29, 1170, 35),
woosh.Token(woosh.OP, ',', 1170, 35, 1170, 36),
woosh.Token(woosh.OP, '*', 1170, 37, 1170, 38),
woosh.Token(woosh.OP, ',', 1170, 38, 1170, 39),
woosh.Token(woosh.NAME, 'bases', 1170, 40, 1170, 45),
woosh.Token(woosh.OP, '=', 1170, 45, 1170, 46),
woosh.Token(woosh.OP, '(', 1170, 46, 1170, 47),
woosh.Token(woosh.OP, ')', 1170, 47, 1170, 48),
woosh.Token(woosh.OP, ',', 1170, 48, 1170, 49),
woosh.Token(woosh.NAME, 'namespace', 1170, 50, 1170, 59),
woosh.Token(woosh.OP, '=', 1170, 59, 1170, 60),
woosh.Token(woosh.NAME, 'None', 1170, 60, 1170, 64),
woosh.Token(woosh.OP, ',', 1170, 64, 1170, 65),
woosh.Token(woosh.NAME, 'init', 1170, 66, 1170, 70),
woosh.Token(woosh.OP, '=', 1170, 70, 1170, 71),
woosh.Token(woosh.NAME, 'True', 1170, 71, 1170, 75),
woosh.Token(woosh.OP, ',', 1170, 75, 1170, 76),
woosh.Token(woosh.NAME, 'repr', 1171, 19, 1171, 23),
woosh.Token(woosh.OP, '=', 1171, 23, 1171, 24),
woosh.Token(woosh.NAME, 'True', 1171, 24, 1171, 28),
woosh.Token(woosh.OP, ',', 1171, 28, 1171, 29),
woosh.Token(woosh.NAME, 'eq', 1171, 30, 1171, 32),
woosh.Token(woosh.OP, '=', 1171, 32, 1171, 33),
woosh.Token(woosh.NAME, 'True', 1171, 33, 1171, 37),
woosh.Token(woosh.OP, ',', 1171, 37, 1171, 38),
woosh.Token(woosh.NAME, 'order', 1171, 39, 1171, 44),
woosh.Token(woosh.OP, '=', 1171, 44, 1171, 45),
woosh.Token(woosh.NAME, 'False', 1171, 45, 1171, 50),
woosh.Token(woosh.OP, ',', 1171, 50, 1171, 51),
woosh.Token(woosh.NAME, 'unsafe_hash', 1171, 52, 1171, 63),
woosh.Token(woosh.OP, '=', 1171, 63, 1171, 64),
woosh.Token(woosh.NAME, 'False', 1171, 64, 1171, 69),
woosh.Token(woosh.OP, ',', 1171, 69, 1171, 70),
woosh.Token(woosh.NAME, 'frozen', 1172, 19, 1172, 25),
woosh.Token(woosh.OP, '=', 1172, 25, 1172, 26),
woosh.Token(woosh.NAME, 'False', 1172, 26, 1172, 31),
woosh.Token(woosh.OP, ')', 1172, 31, 1172, 32),
woosh.Token(woosh.OP, ':', 1172, 32, 1172, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1172, 33, 1173, 0),
woosh.Token(woosh.INDENT, '    ', 1173, 0, 1173, 4),
woosh.Token(woosh.STRING, '"""Return a new dynamically created dataclass.\r\n\r\n    The dataclass name will be \'cls_name\'.  \'fields\' is an iterable\r\n    of either (name), (name, type) or (name, type, Field) objects. If type is\r\n    omitted, use the string \'typing.Any\'.  Field objects are created by\r\n    the equivalent of calling \'field(name, type [, Field-info])\'.\r\n\r\n      C = make_dataclass(\'C\', [\'x\', (\'y\', int), (\'z\', int, field(init=False))], bases=(Base,))\r\n\r\n    is equivalent to:\r\n\r\n      @dataclass\r\n      class C(Base):\r\n          x: \'typing.Any\'\r\n          y: int\r\n          z: int = field(init=False)\r\n\r\n    For the bases and namespace parameters, see the builtin type() function.\r\n\r\n    The parameters init, repr, eq, order, unsafe_hash, and frozen are passed to\r\n    dataclass().\r\n    """', 1173, 4, 1194, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1194, 7, 1195, 0),
woosh.Token(woosh.NAME, 'if', 1196, 4, 1196, 6),
woosh.Token(woosh.NAME, 'namespace', 1196, 7, 1196, 16),
woosh.Token(woosh.NAME, 'is', 1196, 17, 1196, 19),
woosh.Token(woosh.NAME, 'None', 1196, 20, 1196, 24),
woosh.Token(woosh.OP, ':', 1196, 24, 1196, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1196, 25, 1197, 0),
woosh.Token(woosh.INDENT, '        ', 1197, 0, 1197, 8),
woosh.Token(woosh.NAME, 'namespace', 1197, 8, 1197, 17),
woosh.Token(woosh.OP, '=', 1197, 18, 1197, 19),
woosh.Token(woosh.OP, '{', 1197, 20, 1197, 21),
woosh.Token(woosh.OP, '}', 1197, 21, 1197, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1197, 22, 1198, 0),
woosh.Token(woosh.DEDENT, '    ', 1198, 0, 1198, 4),
woosh.Token(woosh.NAME, 'else', 1198, 4, 1198, 8),
woosh.Token(woosh.OP, ':', 1198, 8, 1198, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1198, 9, 1199, 0),
woosh.Token(woosh.COMMENT, "# Copy namespace since we're going to mutate it.", 1199, 8, 1199, 56),
woosh.Token(woosh.INDENT, '        ', 1200, 0, 1200, 8),
woosh.Token(woosh.NAME, 'namespace', 1200, 8, 1200, 17),
woosh.Token(woosh.OP, '=', 1200, 18, 1200, 19),
woosh.Token(woosh.NAME, 'namespace', 1200, 20, 1200, 29),
woosh.Token(woosh.OP, '.', 1200, 29, 1200, 30),
woosh.Token(woosh.NAME, 'copy', 1200, 30, 1200, 34),
woosh.Token(woosh.OP, '(', 1200, 34, 1200, 35),
woosh.Token(woosh.OP, ')', 1200, 35, 1200, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1200, 36, 1201, 0),
woosh.Token(woosh.COMMENT, "# While we're looking through the field names, validate that they", 1202, 4, 1202, 69),
woosh.Token(woosh.COMMENT, '# are identifiers, are not keywords, and not duplicates.', 1203, 4, 1203, 60),
woosh.Token(woosh.DEDENT, '    ', 1204, 0, 1204, 4),
woosh.Token(woosh.NAME, 'seen', 1204, 4, 1204, 8),
woosh.Token(woosh.OP, '=', 1204, 9, 1204, 10),
woosh.Token(woosh.NAME, 'set', 1204, 11, 1204, 14),
woosh.Token(woosh.OP, '(', 1204, 14, 1204, 15),
woosh.Token(woosh.OP, ')', 1204, 15, 1204, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1204, 16, 1205, 0),
woosh.Token(woosh.NAME, 'anns', 1205, 4, 1205, 8),
woosh.Token(woosh.OP, '=', 1205, 9, 1205, 10),
woosh.Token(woosh.OP, '{', 1205, 11, 1205, 12),
woosh.Token(woosh.OP, '}', 1205, 12, 1205, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1205, 13, 1206, 0),
woosh.Token(woosh.NAME, 'for', 1206, 4, 1206, 7),
woosh.Token(woosh.NAME, 'item', 1206, 8, 1206, 12),
woosh.Token(woosh.NAME, 'in', 1206, 13, 1206, 15),
woosh.Token(woosh.NAME, 'fields', 1206, 16, 1206, 22),
woosh.Token(woosh.OP, ':', 1206, 22, 1206, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1206, 23, 1207, 0),
woosh.Token(woosh.INDENT, '        ', 1207, 0, 1207, 8),
woosh.Token(woosh.NAME, 'if', 1207, 8, 1207, 10),
woosh.Token(woosh.NAME, 'isinstance', 1207, 11, 1207, 21),
woosh.Token(woosh.OP, '(', 1207, 21, 1207, 22),
woosh.Token(woosh.NAME, 'item', 1207, 22, 1207, 26),
woosh.Token(woosh.OP, ',', 1207, 26, 1207, 27),
woosh.Token(woosh.NAME, 'str', 1207, 28, 1207, 31),
woosh.Token(woosh.OP, ')', 1207, 31, 1207, 32),
woosh.Token(woosh.OP, ':', 1207, 32, 1207, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1207, 33, 1208, 0),
woosh.Token(woosh.INDENT, '            ', 1208, 0, 1208, 12),
woosh.Token(woosh.NAME, 'name', 1208, 12, 1208, 16),
woosh.Token(woosh.OP, '=', 1208, 17, 1208, 18),
woosh.Token(woosh.NAME, 'item', 1208, 19, 1208, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1208, 23, 1209, 0),
woosh.Token(woosh.NAME, 'tp', 1209, 12, 1209, 14),
woosh.Token(woosh.OP, '=', 1209, 15, 1209, 16),
woosh.Token(woosh.STRING, "'typing.Any'", 1209, 17, 1209, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1209, 29, 1210, 0),
woosh.Token(woosh.DEDENT, '        ', 1210, 0, 1210, 8),
woosh.Token(woosh.NAME, 'elif', 1210, 8, 1210, 12),
woosh.Token(woosh.NAME, 'len', 1210, 13, 1210, 16),
woosh.Token(woosh.OP, '(', 1210, 16, 1210, 17),
woosh.Token(woosh.NAME, 'item', 1210, 17, 1210, 21),
woosh.Token(woosh.OP, ')', 1210, 21, 1210, 22),
woosh.Token(woosh.OP, '==', 1210, 23, 1210, 25),
woosh.Token(woosh.NUMBER, '2', 1210, 26, 1210, 27),
woosh.Token(woosh.OP, ':', 1210, 27, 1210, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1210, 28, 1211, 0),
woosh.Token(woosh.INDENT, '            ', 1211, 0, 1211, 12),
woosh.Token(woosh.NAME, 'name', 1211, 12, 1211, 16),
woosh.Token(woosh.OP, ',', 1211, 16, 1211, 17),
woosh.Token(woosh.NAME, 'tp', 1211, 18, 1211, 20),
woosh.Token(woosh.OP, ',', 1211, 20, 1211, 21),
woosh.Token(woosh.OP, '=', 1211, 22, 1211, 23),
woosh.Token(woosh.NAME, 'item', 1211, 24, 1211, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1211, 28, 1212, 0),
woosh.Token(woosh.DEDENT, '        ', 1212, 0, 1212, 8),
woosh.Token(woosh.NAME, 'elif', 1212, 8, 1212, 12),
woosh.Token(woosh.NAME, 'len', 1212, 13, 1212, 16),
woosh.Token(woosh.OP, '(', 1212, 16, 1212, 17),
woosh.Token(woosh.NAME, 'item', 1212, 17, 1212, 21),
woosh.Token(woosh.OP, ')', 1212, 21, 1212, 22),
woosh.Token(woosh.OP, '==', 1212, 23, 1212, 25),
woosh.Token(woosh.NUMBER, '3', 1212, 26, 1212, 27),
woosh.Token(woosh.OP, ':', 1212, 27, 1212, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1212, 28, 1213, 0),
woosh.Token(woosh.INDENT, '            ', 1213, 0, 1213, 12),
woosh.Token(woosh.NAME, 'name', 1213, 12, 1213, 16),
woosh.Token(woosh.OP, ',', 1213, 16, 1213, 17),
woosh.Token(woosh.NAME, 'tp', 1213, 18, 1213, 20),
woosh.Token(woosh.OP, ',', 1213, 20, 1213, 21),
woosh.Token(woosh.NAME, 'spec', 1213, 22, 1213, 26),
woosh.Token(woosh.OP, '=', 1213, 27, 1213, 28),
woosh.Token(woosh.NAME, 'item', 1213, 29, 1213, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1213, 33, 1214, 0),
woosh.Token(woosh.NAME, 'namespace', 1214, 12, 1214, 21),
woosh.Token(woosh.OP, '[', 1214, 21, 1214, 22),
woosh.Token(woosh.NAME, 'name', 1214, 22, 1214, 26),
woosh.Token(woosh.OP, ']', 1214, 26, 1214, 27),
woosh.Token(woosh.OP, '=', 1214, 28, 1214, 29),
woosh.Token(woosh.NAME, 'spec', 1214, 30, 1214, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1214, 34, 1215, 0),
woosh.Token(woosh.DEDENT, '        ', 1215, 0, 1215, 8),
woosh.Token(woosh.NAME, 'else', 1215, 8, 1215, 12),
woosh.Token(woosh.OP, ':', 1215, 12, 1215, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1215, 13, 1216, 0),
woosh.Token(woosh.INDENT, '            ', 1216, 0, 1216, 12),
woosh.Token(woosh.NAME, 'raise', 1216, 12, 1216, 17),
woosh.Token(woosh.NAME, 'TypeError', 1216, 18, 1216, 27),
woosh.Token(woosh.OP, '(', 1216, 27, 1216, 28),
woosh.Token(woosh.STRING, "f'Invalid field: {item!r}'", 1216, 28, 1216, 54),
woosh.Token(woosh.OP, ')', 1216, 54, 1216, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1216, 55, 1217, 0),
woosh.Token(woosh.DEDENT, '        ', 1218, 0, 1218, 8),
woosh.Token(woosh.NAME, 'if', 1218, 8, 1218, 10),
woosh.Token(woosh.NAME, 'not', 1218, 11, 1218, 14),
woosh.Token(woosh.NAME, 'isinstance', 1218, 15, 1218, 25),
woosh.Token(woosh.OP, '(', 1218, 25, 1218, 26),
woosh.Token(woosh.NAME, 'name', 1218, 26, 1218, 30),
woosh.Token(woosh.OP, ',', 1218, 30, 1218, 31),
woosh.Token(woosh.NAME, 'str', 1218, 32, 1218, 35),
woosh.Token(woosh.OP, ')', 1218, 35, 1218, 36),
woosh.Token(woosh.NAME, 'or', 1218, 37, 1218, 39),
woosh.Token(woosh.NAME, 'not', 1218, 40, 1218, 43),
woosh.Token(woosh.NAME, 'name', 1218, 44, 1218, 48),
woosh.Token(woosh.OP, '.', 1218, 48, 1218, 49),
woosh.Token(woosh.NAME, 'isidentifier', 1218, 49, 1218, 61),
woosh.Token(woosh.OP, '(', 1218, 61, 1218, 62),
woosh.Token(woosh.OP, ')', 1218, 62, 1218, 63),
woosh.Token(woosh.OP, ':', 1218, 63, 1218, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1218, 64, 1219, 0),
woosh.Token(woosh.INDENT, '            ', 1219, 0, 1219, 12),
woosh.Token(woosh.NAME, 'raise', 1219, 12, 1219, 17),
woosh.Token(woosh.NAME, 'TypeError', 1219, 18, 1219, 27),
woosh.Token(woosh.OP, '(', 1219, 27, 1219, 28),
woosh.Token(woosh.STRING, "f'Field names must be valid identifiers: {name!r}'", 1219, 28, 1219, 78),
woosh.Token(woosh.OP, ')', 1219, 78, 1219, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1219, 79, 1220, 0),
woosh.Token(woosh.DEDENT, '        ', 1220, 0, 1220, 8),
woosh.Token(woosh.NAME, 'if', 1220, 8, 1220, 10),
woosh.Token(woosh.NAME, 'keyword', 1220, 11, 1220, 18),
woosh.Token(woosh.OP, '.', 1220, 18, 1220, 19),
woosh.Token(woosh.NAME, 'iskeyword', 1220, 19, 1220, 28),
woosh.Token(woosh.OP, '(', 1220, 28, 1220, 29),
woosh.Token(woosh.NAME, 'name', 1220, 29, 1220, 33),
woosh.Token(woosh.OP, ')', 1220, 33, 1220, 34),
woosh.Token(woosh.OP, ':', 1220, 34, 1220, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1220, 35, 1221, 0),
woosh.Token(woosh.INDENT, '            ', 1221, 0, 1221, 12),
woosh.Token(woosh.NAME, 'raise', 1221, 12, 1221, 17),
woosh.Token(woosh.NAME, 'TypeError', 1221, 18, 1221, 27),
woosh.Token(woosh.OP, '(', 1221, 27, 1221, 28),
woosh.Token(woosh.STRING, "f'Field names must not be keywords: {name!r}'", 1221, 28, 1221, 73),
woosh.Token(woosh.OP, ')', 1221, 73, 1221, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1221, 74, 1222, 0),
woosh.Token(woosh.DEDENT, '        ', 1222, 0, 1222, 8),
woosh.Token(woosh.NAME, 'if', 1222, 8, 1222, 10),
woosh.Token(woosh.NAME, 'name', 1222, 11, 1222, 15),
woosh.Token(woosh.NAME, 'in', 1222, 16, 1222, 18),
woosh.Token(woosh.NAME, 'seen', 1222, 19, 1222, 23),
woosh.Token(woosh.OP, ':', 1222, 23, 1222, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1222, 24, 1223, 0),
woosh.Token(woosh.INDENT, '            ', 1223, 0, 1223, 12),
woosh.Token(woosh.NAME, 'raise', 1223, 12, 1223, 17),
woosh.Token(woosh.NAME, 'TypeError', 1223, 18, 1223, 27),
woosh.Token(woosh.OP, '(', 1223, 27, 1223, 28),
woosh.Token(woosh.STRING, "f'Field name duplicated: {name!r}'", 1223, 28, 1223, 62),
woosh.Token(woosh.OP, ')', 1223, 62, 1223, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1223, 63, 1224, 0),
woosh.Token(woosh.DEDENT, '        ', 1225, 0, 1225, 8),
woosh.Token(woosh.NAME, 'seen', 1225, 8, 1225, 12),
woosh.Token(woosh.OP, '.', 1225, 12, 1225, 13),
woosh.Token(woosh.NAME, 'add', 1225, 13, 1225, 16),
woosh.Token(woosh.OP, '(', 1225, 16, 1225, 17),
woosh.Token(woosh.NAME, 'name', 1225, 17, 1225, 21),
woosh.Token(woosh.OP, ')', 1225, 21, 1225, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1225, 22, 1226, 0),
woosh.Token(woosh.NAME, 'anns', 1226, 8, 1226, 12),
woosh.Token(woosh.OP, '[', 1226, 12, 1226, 13),
woosh.Token(woosh.NAME, 'name', 1226, 13, 1226, 17),
woosh.Token(woosh.OP, ']', 1226, 17, 1226, 18),
woosh.Token(woosh.OP, '=', 1226, 19, 1226, 20),
woosh.Token(woosh.NAME, 'tp', 1226, 21, 1226, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1226, 23, 1227, 0),
woosh.Token(woosh.DEDENT, '    ', 1228, 0, 1228, 4),
woosh.Token(woosh.NAME, 'namespace', 1228, 4, 1228, 13),
woosh.Token(woosh.OP, '[', 1228, 13, 1228, 14),
woosh.Token(woosh.STRING, "'__annotations__'", 1228, 14, 1228, 31),
woosh.Token(woosh.OP, ']', 1228, 31, 1228, 32),
woosh.Token(woosh.OP, '=', 1228, 33, 1228, 34),
woosh.Token(woosh.NAME, 'anns', 1228, 35, 1228, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1228, 39, 1229, 0),
woosh.Token(woosh.COMMENT, '# We use `types.new_class()` instead of simply `type()` to allow dynamic creation', 1229, 4, 1229, 85),
woosh.Token(woosh.COMMENT, '# of generic dataclassses.', 1230, 4, 1230, 30),
woosh.Token(woosh.NAME, 'cls', 1231, 4, 1231, 7),
woosh.Token(woosh.OP, '=', 1231, 8, 1231, 9),
woosh.Token(woosh.NAME, 'types', 1231, 10, 1231, 15),
woosh.Token(woosh.OP, '.', 1231, 15, 1231, 16),
woosh.Token(woosh.NAME, 'new_class', 1231, 16, 1231, 25),
woosh.Token(woosh.OP, '(', 1231, 25, 1231, 26),
woosh.Token(woosh.NAME, 'cls_name', 1231, 26, 1231, 34),
woosh.Token(woosh.OP, ',', 1231, 34, 1231, 35),
woosh.Token(woosh.NAME, 'bases', 1231, 36, 1231, 41),
woosh.Token(woosh.OP, ',', 1231, 41, 1231, 42),
woosh.Token(woosh.OP, '{', 1231, 43, 1231, 44),
woosh.Token(woosh.OP, '}', 1231, 44, 1231, 45),
woosh.Token(woosh.OP, ',', 1231, 45, 1231, 46),
woosh.Token(woosh.NAME, 'lambda', 1231, 47, 1231, 53),
woosh.Token(woosh.NAME, 'ns', 1231, 54, 1231, 56),
woosh.Token(woosh.OP, ':', 1231, 56, 1231, 57),
woosh.Token(woosh.NAME, 'ns', 1231, 58, 1231, 60),
woosh.Token(woosh.OP, '.', 1231, 60, 1231, 61),
woosh.Token(woosh.NAME, 'update', 1231, 61, 1231, 67),
woosh.Token(woosh.OP, '(', 1231, 67, 1231, 68),
woosh.Token(woosh.NAME, 'namespace', 1231, 68, 1231, 77),
woosh.Token(woosh.OP, ')', 1231, 77, 1231, 78),
woosh.Token(woosh.OP, ')', 1231, 78, 1231, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1231, 79, 1232, 0),
woosh.Token(woosh.NAME, 'return', 1232, 4, 1232, 10),
woosh.Token(woosh.NAME, 'dataclass', 1232, 11, 1232, 20),
woosh.Token(woosh.OP, '(', 1232, 20, 1232, 21),
woosh.Token(woosh.NAME, 'cls', 1232, 21, 1232, 24),
woosh.Token(woosh.OP, ',', 1232, 24, 1232, 25),
woosh.Token(woosh.NAME, 'init', 1232, 26, 1232, 30),
woosh.Token(woosh.OP, '=', 1232, 30, 1232, 31),
woosh.Token(woosh.NAME, 'init', 1232, 31, 1232, 35),
woosh.Token(woosh.OP, ',', 1232, 35, 1232, 36),
woosh.Token(woosh.NAME, 'repr', 1232, 37, 1232, 41),
woosh.Token(woosh.OP, '=', 1232, 41, 1232, 42),
woosh.Token(woosh.NAME, 'repr', 1232, 42, 1232, 46),
woosh.Token(woosh.OP, ',', 1232, 46, 1232, 47),
woosh.Token(woosh.NAME, 'eq', 1232, 48, 1232, 50),
woosh.Token(woosh.OP, '=', 1232, 50, 1232, 51),
woosh.Token(woosh.NAME, 'eq', 1232, 51, 1232, 53),
woosh.Token(woosh.OP, ',', 1232, 53, 1232, 54),
woosh.Token(woosh.NAME, 'order', 1232, 55, 1232, 60),
woosh.Token(woosh.OP, '=', 1232, 60, 1232, 61),
woosh.Token(woosh.NAME, 'order', 1232, 61, 1232, 66),
woosh.Token(woosh.OP, ',', 1232, 66, 1232, 67),
woosh.Token(woosh.NAME, 'unsafe_hash', 1233, 21, 1233, 32),
woosh.Token(woosh.OP, '=', 1233, 32, 1233, 33),
woosh.Token(woosh.NAME, 'unsafe_hash', 1233, 33, 1233, 44),
woosh.Token(woosh.OP, ',', 1233, 44, 1233, 45),
woosh.Token(woosh.NAME, 'frozen', 1233, 46, 1233, 52),
woosh.Token(woosh.OP, '=', 1233, 52, 1233, 53),
woosh.Token(woosh.NAME, 'frozen', 1233, 53, 1233, 59),
woosh.Token(woosh.OP, ')', 1233, 59, 1233, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1233, 60, 1234, 0),
woosh.Token(woosh.DEDENT, '', 1236, 0, 1236, 0),
woosh.Token(woosh.NAME, 'def', 1236, 0, 1236, 3),
woosh.Token(woosh.NAME, 'replace', 1236, 4, 1236, 11),
woosh.Token(woosh.OP, '(', 1236, 11, 1236, 12),
woosh.Token(woosh.NAME, 'obj', 1236, 12, 1236, 15),
woosh.Token(woosh.OP, ',', 1236, 15, 1236, 16),
woosh.Token(woosh.OP, '/', 1236, 17, 1236, 18),
woosh.Token(woosh.OP, ',', 1236, 18, 1236, 19),
woosh.Token(woosh.OP, '**', 1236, 20, 1236, 22),
woosh.Token(woosh.NAME, 'changes', 1236, 22, 1236, 29),
woosh.Token(woosh.OP, ')', 1236, 29, 1236, 30),
woosh.Token(woosh.OP, ':', 1236, 30, 1236, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1236, 31, 1237, 0),
woosh.Token(woosh.INDENT, '    ', 1237, 0, 1237, 4),
woosh.Token(woosh.STRING, '"""Return a new object replacing specified fields with new values.\r\n\r\n    This is especially useful for frozen classes.  Example usage:\r\n\r\n      @dataclass(frozen=True)\r\n      class C:\r\n          x: int\r\n          y: int\r\n\r\n      c = C(1, 2)\r\n      c1 = replace(c, x=3)\r\n      assert c1.x == 3 and c1.y == 2\r\n      """', 1237, 4, 1249, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1249, 9, 1250, 0),
woosh.Token(woosh.COMMENT, "# We're going to mutate 'changes', but that's okay because it's a", 1251, 4, 1251, 69),
woosh.Token(woosh.COMMENT, "# new dict, even if called with 'replace(obj, **my_changes)'.", 1252, 4, 1252, 65),
woosh.Token(woosh.NAME, 'if', 1254, 4, 1254, 6),
woosh.Token(woosh.NAME, 'not', 1254, 7, 1254, 10),
woosh.Token(woosh.NAME, '_is_dataclass_instance', 1254, 11, 1254, 33),
woosh.Token(woosh.OP, '(', 1254, 33, 1254, 34),
woosh.Token(woosh.NAME, 'obj', 1254, 34, 1254, 37),
woosh.Token(woosh.OP, ')', 1254, 37, 1254, 38),
woosh.Token(woosh.OP, ':', 1254, 38, 1254, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1254, 39, 1255, 0),
woosh.Token(woosh.INDENT, '        ', 1255, 0, 1255, 8),
woosh.Token(woosh.NAME, 'raise', 1255, 8, 1255, 13),
woosh.Token(woosh.NAME, 'TypeError', 1255, 14, 1255, 23),
woosh.Token(woosh.OP, '(', 1255, 23, 1255, 24),
woosh.Token(woosh.STRING, '"replace() should be called on dataclass instances"', 1255, 24, 1255, 75),
woosh.Token(woosh.OP, ')', 1255, 75, 1255, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1255, 76, 1256, 0),
woosh.Token(woosh.COMMENT, "# It's an error to have init=False fields in 'changes'.", 1257, 4, 1257, 59),
woosh.Token(woosh.COMMENT, "# If a field is not in 'changes', read its value from the provided obj.", 1258, 4, 1258, 75),
woosh.Token(woosh.DEDENT, '    ', 1260, 0, 1260, 4),
woosh.Token(woosh.NAME, 'for', 1260, 4, 1260, 7),
woosh.Token(woosh.NAME, 'f', 1260, 8, 1260, 9),
woosh.Token(woosh.NAME, 'in', 1260, 10, 1260, 12),
woosh.Token(woosh.NAME, 'getattr', 1260, 13, 1260, 20),
woosh.Token(woosh.OP, '(', 1260, 20, 1260, 21),
woosh.Token(woosh.NAME, 'obj', 1260, 21, 1260, 24),
woosh.Token(woosh.OP, ',', 1260, 24, 1260, 25),
woosh.Token(woosh.NAME, '_FIELDS', 1260, 26, 1260, 33),
woosh.Token(woosh.OP, ')', 1260, 33, 1260, 34),
woosh.Token(woosh.OP, '.', 1260, 34, 1260, 35),
woosh.Token(woosh.NAME, 'values', 1260, 35, 1260, 41),
woosh.Token(woosh.OP, '(', 1260, 41, 1260, 42),
woosh.Token(woosh.OP, ')', 1260, 42, 1260, 43),
woosh.Token(woosh.OP, ':', 1260, 43, 1260, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1260, 44, 1261, 0),
woosh.Token(woosh.COMMENT, '# Only consider normal fields or InitVars.', 1261, 8, 1261, 50),
woosh.Token(woosh.INDENT, '        ', 1262, 0, 1262, 8),
woosh.Token(woosh.NAME, 'if', 1262, 8, 1262, 10),
woosh.Token(woosh.NAME, 'f', 1262, 11, 1262, 12),
woosh.Token(woosh.OP, '.', 1262, 12, 1262, 13),
woosh.Token(woosh.NAME, '_field_type', 1262, 13, 1262, 24),
woosh.Token(woosh.NAME, 'is', 1262, 25, 1262, 27),
woosh.Token(woosh.NAME, '_FIELD_CLASSVAR', 1262, 28, 1262, 43),
woosh.Token(woosh.OP, ':', 1262, 43, 1262, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1262, 44, 1263, 0),
woosh.Token(woosh.INDENT, '            ', 1263, 0, 1263, 12),
woosh.Token(woosh.NAME, 'continue', 1263, 12, 1263, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1263, 20, 1264, 0),
woosh.Token(woosh.DEDENT, '        ', 1265, 0, 1265, 8),
woosh.Token(woosh.NAME, 'if', 1265, 8, 1265, 10),
woosh.Token(woosh.NAME, 'not', 1265, 11, 1265, 14),
woosh.Token(woosh.NAME, 'f', 1265, 15, 1265, 16),
woosh.Token(woosh.OP, '.', 1265, 16, 1265, 17),
woosh.Token(woosh.NAME, 'init', 1265, 17, 1265, 21),
woosh.Token(woosh.OP, ':', 1265, 21, 1265, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1265, 22, 1266, 0),
woosh.Token(woosh.COMMENT, '# Error if this field is specified in changes.', 1266, 12, 1266, 58),
woosh.Token(woosh.INDENT, '            ', 1267, 0, 1267, 12),
woosh.Token(woosh.NAME, 'if', 1267, 12, 1267, 14),
woosh.Token(woosh.NAME, 'f', 1267, 15, 1267, 16),
woosh.Token(woosh.OP, '.', 1267, 16, 1267, 17),
woosh.Token(woosh.NAME, 'name', 1267, 17, 1267, 21),
woosh.Token(woosh.NAME, 'in', 1267, 22, 1267, 24),
woosh.Token(woosh.NAME, 'changes', 1267, 25, 1267, 32),
woosh.Token(woosh.OP, ':', 1267, 32, 1267, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1267, 33, 1268, 0),
woosh.Token(woosh.INDENT, '                ', 1268, 0, 1268, 16),
woosh.Token(woosh.NAME, 'raise', 1268, 16, 1268, 21),
woosh.Token(woosh.NAME, 'ValueError', 1268, 22, 1268, 32),
woosh.Token(woosh.OP, '(', 1268, 32, 1268, 33),
woosh.Token(woosh.STRING, "f'field {f.name} is declared with '", 1268, 33, 1268, 68),
woosh.Token(woosh.STRING, "'init=False, it cannot be specified with '", 1269, 33, 1269, 75),
woosh.Token(woosh.STRING, "'replace()'", 1270, 33, 1270, 44),
woosh.Token(woosh.OP, ')', 1270, 44, 1270, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1270, 45, 1271, 0),
woosh.Token(woosh.DEDENT, '            ', 1271, 0, 1271, 12),
woosh.Token(woosh.NAME, 'continue', 1271, 12, 1271, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1271, 20, 1272, 0),
woosh.Token(woosh.DEDENT, '        ', 1273, 0, 1273, 8),
woosh.Token(woosh.NAME, 'if', 1273, 8, 1273, 10),
woosh.Token(woosh.NAME, 'f', 1273, 11, 1273, 12),
woosh.Token(woosh.OP, '.', 1273, 12, 1273, 13),
woosh.Token(woosh.NAME, 'name', 1273, 13, 1273, 17),
woosh.Token(woosh.NAME, 'not', 1273, 18, 1273, 21),
woosh.Token(woosh.NAME, 'in', 1273, 22, 1273, 24),
woosh.Token(woosh.NAME, 'changes', 1273, 25, 1273, 32),
woosh.Token(woosh.OP, ':', 1273, 32, 1273, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1273, 33, 1274, 0),
woosh.Token(woosh.INDENT, '            ', 1274, 0, 1274, 12),
woosh.Token(woosh.NAME, 'if', 1274, 12, 1274, 14),
woosh.Token(woosh.NAME, 'f', 1274, 15, 1274, 16),
woosh.Token(woosh.OP, '.', 1274, 16, 1274, 17),
woosh.Token(woosh.NAME, '_field_type', 1274, 17, 1274, 28),
woosh.Token(woosh.NAME, 'is', 1274, 29, 1274, 31),
woosh.Token(woosh.NAME, '_FIELD_INITVAR', 1274, 32, 1274, 46),
woosh.Token(woosh.OP, ':', 1274, 46, 1274, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1274, 47, 1275, 0),
woosh.Token(woosh.INDENT, '                ', 1275, 0, 1275, 16),
woosh.Token(woosh.NAME, 'raise', 1275, 16, 1275, 21),
woosh.Token(woosh.NAME, 'ValueError', 1275, 22, 1275, 32),
woosh.Token(woosh.OP, '(', 1275, 32, 1275, 33),
woosh.Token(woosh.STRING, 'f"InitVar {f.name!r} "', 1275, 33, 1275, 55),
woosh.Token(woosh.STRING, "'must be specified with replace()'", 1276, 33, 1276, 67),
woosh.Token(woosh.OP, ')', 1276, 67, 1276, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1276, 68, 1277, 0),
woosh.Token(woosh.DEDENT, '            ', 1277, 0, 1277, 12),
woosh.Token(woosh.NAME, 'changes', 1277, 12, 1277, 19),
woosh.Token(woosh.OP, '[', 1277, 19, 1277, 20),
woosh.Token(woosh.NAME, 'f', 1277, 20, 1277, 21),
woosh.Token(woosh.OP, '.', 1277, 21, 1277, 22),
woosh.Token(woosh.NAME, 'name', 1277, 22, 1277, 26),
woosh.Token(woosh.OP, ']', 1277, 26, 1277, 27),
woosh.Token(woosh.OP, '=', 1277, 28, 1277, 29),
woosh.Token(woosh.NAME, 'getattr', 1277, 30, 1277, 37),
woosh.Token(woosh.OP, '(', 1277, 37, 1277, 38),
woosh.Token(woosh.NAME, 'obj', 1277, 38, 1277, 41),
woosh.Token(woosh.OP, ',', 1277, 41, 1277, 42),
woosh.Token(woosh.NAME, 'f', 1277, 43, 1277, 44),
woosh.Token(woosh.OP, '.', 1277, 44, 1277, 45),
woosh.Token(woosh.NAME, 'name', 1277, 45, 1277, 49),
woosh.Token(woosh.OP, ')', 1277, 49, 1277, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1277, 50, 1278, 0),
woosh.Token(woosh.COMMENT, '# Create the new object, which calls __init__() and', 1279, 4, 1279, 55),
woosh.Token(woosh.COMMENT, "# __post_init__() (if defined), using all of the init fields we've", 1280, 4, 1280, 70),
woosh.Token(woosh.COMMENT, "# added and/or left in 'changes'.  If there are values supplied in", 1281, 4, 1281, 70),
woosh.Token(woosh.COMMENT, "# changes that aren't fields, this will correctly raise a", 1282, 4, 1282, 61),
woosh.Token(woosh.COMMENT, '# TypeError.', 1283, 4, 1283, 16),
woosh.Token(woosh.DEDENT, '    ', 1284, 0, 1284, 4),
woosh.Token(woosh.DEDENT, '', 1284, 4, 1284, 4),
woosh.Token(woosh.NAME, 'return', 1284, 4, 1284, 10),
woosh.Token(woosh.NAME, 'obj', 1284, 11, 1284, 14),
woosh.Token(woosh.OP, '.', 1284, 14, 1284, 15),
woosh.Token(woosh.NAME, '__class__', 1284, 15, 1284, 24),
woosh.Token(woosh.OP, '(', 1284, 24, 1284, 25),
woosh.Token(woosh.OP, '**', 1284, 25, 1284, 27),
woosh.Token(woosh.NAME, 'changes', 1284, 27, 1284, 34),
woosh.Token(woosh.OP, ')', 1284, 34, 1284, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1284, 35, 1285, 0),
woosh.Token(woosh.DEDENT, '', 1285, 0, 1285, 0),
woosh.Token(woosh.EOF, '', 1285, 0, 1285, 0),
]
