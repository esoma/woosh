
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'
def test():
    with open(SAMPLE_DIR / 'stdlib/pathlib.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.NAME, 'import', 1, 0, 1, 6),
woosh.Token(woosh.NAME, 'fnmatch', 1, 7, 1, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 1, 14, 2, 0),
woosh.Token(woosh.NAME, 'import', 2, 0, 2, 6),
woosh.Token(woosh.NAME, 'functools', 2, 7, 2, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 2, 16, 3, 0),
woosh.Token(woosh.NAME, 'import', 3, 0, 3, 6),
woosh.Token(woosh.NAME, 'io', 3, 7, 3, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 3, 9, 4, 0),
woosh.Token(woosh.NAME, 'import', 4, 0, 4, 6),
woosh.Token(woosh.NAME, 'ntpath', 4, 7, 4, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 4, 13, 5, 0),
woosh.Token(woosh.NAME, 'import', 5, 0, 5, 6),
woosh.Token(woosh.NAME, 'os', 5, 7, 5, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 5, 9, 6, 0),
woosh.Token(woosh.NAME, 'import', 6, 0, 6, 6),
woosh.Token(woosh.NAME, 'posixpath', 6, 7, 6, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 6, 16, 7, 0),
woosh.Token(woosh.NAME, 'import', 7, 0, 7, 6),
woosh.Token(woosh.NAME, 're', 7, 7, 7, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 7, 9, 8, 0),
woosh.Token(woosh.NAME, 'import', 8, 0, 8, 6),
woosh.Token(woosh.NAME, 'sys', 8, 7, 8, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 8, 10, 9, 0),
woosh.Token(woosh.NAME, 'from', 9, 0, 9, 4),
woosh.Token(woosh.NAME, '_collections_abc', 9, 5, 9, 21),
woosh.Token(woosh.NAME, 'import', 9, 22, 9, 28),
woosh.Token(woosh.NAME, 'Sequence', 9, 29, 9, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 9, 37, 10, 0),
woosh.Token(woosh.NAME, 'from', 10, 0, 10, 4),
woosh.Token(woosh.NAME, 'errno', 10, 5, 10, 10),
woosh.Token(woosh.NAME, 'import', 10, 11, 10, 17),
woosh.Token(woosh.NAME, 'EINVAL', 10, 18, 10, 24),
woosh.Token(woosh.OP, ',', 10, 24, 10, 25),
woosh.Token(woosh.NAME, 'ENOENT', 10, 26, 10, 32),
woosh.Token(woosh.OP, ',', 10, 32, 10, 33),
woosh.Token(woosh.NAME, 'ENOTDIR', 10, 34, 10, 41),
woosh.Token(woosh.OP, ',', 10, 41, 10, 42),
woosh.Token(woosh.NAME, 'EBADF', 10, 43, 10, 48),
woosh.Token(woosh.OP, ',', 10, 48, 10, 49),
woosh.Token(woosh.NAME, 'ELOOP', 10, 50, 10, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 10, 55, 11, 0),
woosh.Token(woosh.NAME, 'from', 11, 0, 11, 4),
woosh.Token(woosh.NAME, 'operator', 11, 5, 11, 13),
woosh.Token(woosh.NAME, 'import', 11, 14, 11, 20),
woosh.Token(woosh.NAME, 'attrgetter', 11, 21, 11, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 11, 31, 12, 0),
woosh.Token(woosh.NAME, 'from', 12, 0, 12, 4),
woosh.Token(woosh.NAME, 'stat', 12, 5, 12, 9),
woosh.Token(woosh.NAME, 'import', 12, 10, 12, 16),
woosh.Token(woosh.NAME, 'S_ISDIR', 12, 17, 12, 24),
woosh.Token(woosh.OP, ',', 12, 24, 12, 25),
woosh.Token(woosh.NAME, 'S_ISLNK', 12, 26, 12, 33),
woosh.Token(woosh.OP, ',', 12, 33, 12, 34),
woosh.Token(woosh.NAME, 'S_ISREG', 12, 35, 12, 42),
woosh.Token(woosh.OP, ',', 12, 42, 12, 43),
woosh.Token(woosh.NAME, 'S_ISSOCK', 12, 44, 12, 52),
woosh.Token(woosh.OP, ',', 12, 52, 12, 53),
woosh.Token(woosh.NAME, 'S_ISBLK', 12, 54, 12, 61),
woosh.Token(woosh.OP, ',', 12, 61, 12, 62),
woosh.Token(woosh.NAME, 'S_ISCHR', 12, 63, 12, 70),
woosh.Token(woosh.OP, ',', 12, 70, 12, 71),
woosh.Token(woosh.NAME, 'S_ISFIFO', 12, 72, 12, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 12, 80, 13, 0),
woosh.Token(woosh.NAME, 'from', 13, 0, 13, 4),
woosh.Token(woosh.NAME, 'urllib', 13, 5, 13, 11),
woosh.Token(woosh.OP, '.', 13, 11, 13, 12),
woosh.Token(woosh.NAME, 'parse', 13, 12, 13, 17),
woosh.Token(woosh.NAME, 'import', 13, 18, 13, 24),
woosh.Token(woosh.NAME, 'quote_from_bytes', 13, 25, 13, 41),
woosh.Token(woosh.NAME, 'as', 13, 42, 13, 44),
woosh.Token(woosh.NAME, 'urlquote_from_bytes', 13, 45, 13, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 13, 64, 14, 0),
woosh.Token(woosh.NAME, 'supports_symlinks', 16, 0, 16, 17),
woosh.Token(woosh.OP, '=', 16, 18, 16, 19),
woosh.Token(woosh.NAME, 'True', 16, 20, 16, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 16, 24, 17, 0),
woosh.Token(woosh.NAME, 'if', 17, 0, 17, 2),
woosh.Token(woosh.NAME, 'os', 17, 3, 17, 5),
woosh.Token(woosh.OP, '.', 17, 5, 17, 6),
woosh.Token(woosh.NAME, 'name', 17, 6, 17, 10),
woosh.Token(woosh.OP, '==', 17, 11, 17, 13),
woosh.Token(woosh.STRING, "'nt'", 17, 14, 17, 18),
woosh.Token(woosh.OP, ':', 17, 18, 17, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 17, 19, 18, 0),
woosh.Token(woosh.INDENT, '    ', 18, 0, 18, 4),
woosh.Token(woosh.NAME, 'import', 18, 4, 18, 10),
woosh.Token(woosh.NAME, 'nt', 18, 11, 18, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 18, 13, 19, 0),
woosh.Token(woosh.NAME, 'if', 19, 4, 19, 6),
woosh.Token(woosh.NAME, 'sys', 19, 7, 19, 10),
woosh.Token(woosh.OP, '.', 19, 10, 19, 11),
woosh.Token(woosh.NAME, 'getwindowsversion', 19, 11, 19, 28),
woosh.Token(woosh.OP, '(', 19, 28, 19, 29),
woosh.Token(woosh.OP, ')', 19, 29, 19, 30),
woosh.Token(woosh.OP, '[', 19, 30, 19, 31),
woosh.Token(woosh.OP, ':', 19, 31, 19, 32),
woosh.Token(woosh.NUMBER, '2', 19, 32, 19, 33),
woosh.Token(woosh.OP, ']', 19, 33, 19, 34),
woosh.Token(woosh.OP, '>=', 19, 35, 19, 37),
woosh.Token(woosh.OP, '(', 19, 38, 19, 39),
woosh.Token(woosh.NUMBER, '6', 19, 39, 19, 40),
woosh.Token(woosh.OP, ',', 19, 40, 19, 41),
woosh.Token(woosh.NUMBER, '0', 19, 42, 19, 43),
woosh.Token(woosh.OP, ')', 19, 43, 19, 44),
woosh.Token(woosh.OP, ':', 19, 44, 19, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 19, 45, 20, 0),
woosh.Token(woosh.INDENT, '        ', 20, 0, 20, 8),
woosh.Token(woosh.NAME, 'from', 20, 8, 20, 12),
woosh.Token(woosh.NAME, 'nt', 20, 13, 20, 15),
woosh.Token(woosh.NAME, 'import', 20, 16, 20, 22),
woosh.Token(woosh.NAME, '_getfinalpathname', 20, 23, 20, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 20, 40, 21, 0),
woosh.Token(woosh.DEDENT, '    ', 21, 0, 21, 4),
woosh.Token(woosh.NAME, 'else', 21, 4, 21, 8),
woosh.Token(woosh.OP, ':', 21, 8, 21, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 21, 9, 22, 0),
woosh.Token(woosh.INDENT, '        ', 22, 0, 22, 8),
woosh.Token(woosh.NAME, 'supports_symlinks', 22, 8, 22, 25),
woosh.Token(woosh.OP, '=', 22, 26, 22, 27),
woosh.Token(woosh.NAME, 'False', 22, 28, 22, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 22, 33, 23, 0),
woosh.Token(woosh.NAME, '_getfinalpathname', 23, 8, 23, 25),
woosh.Token(woosh.OP, '=', 23, 26, 23, 27),
woosh.Token(woosh.NAME, 'None', 23, 28, 23, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 23, 32, 24, 0),
woosh.Token(woosh.DEDENT, '', 24, 0, 24, 0),
woosh.Token(woosh.DEDENT, '', 24, 0, 24, 0),
woosh.Token(woosh.NAME, 'else', 24, 0, 24, 4),
woosh.Token(woosh.OP, ':', 24, 4, 24, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 24, 5, 25, 0),
woosh.Token(woosh.INDENT, '    ', 25, 0, 25, 4),
woosh.Token(woosh.NAME, 'nt', 25, 4, 25, 6),
woosh.Token(woosh.OP, '=', 25, 7, 25, 8),
woosh.Token(woosh.NAME, 'None', 25, 9, 25, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 25, 13, 26, 0),
woosh.Token(woosh.DEDENT, '', 28, 0, 28, 0),
woosh.Token(woosh.NAME, '__all__', 28, 0, 28, 7),
woosh.Token(woosh.OP, '=', 28, 8, 28, 9),
woosh.Token(woosh.OP, '[', 28, 10, 28, 11),
woosh.Token(woosh.STRING, '"PurePath"', 29, 4, 29, 14),
woosh.Token(woosh.OP, ',', 29, 14, 29, 15),
woosh.Token(woosh.STRING, '"PurePosixPath"', 29, 16, 29, 31),
woosh.Token(woosh.OP, ',', 29, 31, 29, 32),
woosh.Token(woosh.STRING, '"PureWindowsPath"', 29, 33, 29, 50),
woosh.Token(woosh.OP, ',', 29, 50, 29, 51),
woosh.Token(woosh.STRING, '"Path"', 30, 4, 30, 10),
woosh.Token(woosh.OP, ',', 30, 10, 30, 11),
woosh.Token(woosh.STRING, '"PosixPath"', 30, 12, 30, 23),
woosh.Token(woosh.OP, ',', 30, 23, 30, 24),
woosh.Token(woosh.STRING, '"WindowsPath"', 30, 25, 30, 38),
woosh.Token(woosh.OP, ',', 30, 38, 30, 39),
woosh.Token(woosh.OP, ']', 31, 4, 31, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 31, 5, 32, 0),
woosh.Token(woosh.COMMENT, '#', 33, 0, 33, 1),
woosh.Token(woosh.COMMENT, '# Internals', 34, 0, 34, 11),
woosh.Token(woosh.COMMENT, '#', 35, 0, 35, 1),
woosh.Token(woosh.COMMENT, '# EBADF - guard against macOS `stat` throwing EBADF', 37, 0, 37, 51),
woosh.Token(woosh.NAME, '_IGNORED_ERROS', 38, 0, 38, 14),
woosh.Token(woosh.OP, '=', 38, 15, 38, 16),
woosh.Token(woosh.OP, '(', 38, 17, 38, 18),
woosh.Token(woosh.NAME, 'ENOENT', 38, 18, 38, 24),
woosh.Token(woosh.OP, ',', 38, 24, 38, 25),
woosh.Token(woosh.NAME, 'ENOTDIR', 38, 26, 38, 33),
woosh.Token(woosh.OP, ',', 38, 33, 38, 34),
woosh.Token(woosh.NAME, 'EBADF', 38, 35, 38, 40),
woosh.Token(woosh.OP, ',', 38, 40, 38, 41),
woosh.Token(woosh.NAME, 'ELOOP', 38, 42, 38, 47),
woosh.Token(woosh.OP, ')', 38, 47, 38, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 38, 48, 39, 0),
woosh.Token(woosh.NAME, '_IGNORED_WINERRORS', 40, 0, 40, 18),
woosh.Token(woosh.OP, '=', 40, 19, 40, 20),
woosh.Token(woosh.OP, '(', 40, 21, 40, 22),
woosh.Token(woosh.NUMBER, '21', 41, 4, 41, 6),
woosh.Token(woosh.OP, ',', 41, 6, 41, 7),
woosh.Token(woosh.COMMENT, '# ERROR_NOT_READY - drive exists but is not accessible', 41, 9, 41, 63),
woosh.Token(woosh.NUMBER, '1921', 42, 4, 42, 8),
woosh.Token(woosh.OP, ',', 42, 8, 42, 9),
woosh.Token(woosh.COMMENT, '# ERROR_CANT_RESOLVE_FILENAME - fix for broken symlink pointing to itself', 42, 11, 42, 84),
woosh.Token(woosh.OP, ')', 43, 0, 43, 1),
woosh.Token(woosh.NEWLINE, '\r\n', 43, 1, 44, 0),
woosh.Token(woosh.NAME, 'def', 45, 0, 45, 3),
woosh.Token(woosh.NAME, '_ignore_error', 45, 4, 45, 17),
woosh.Token(woosh.OP, '(', 45, 17, 45, 18),
woosh.Token(woosh.NAME, 'exception', 45, 18, 45, 27),
woosh.Token(woosh.OP, ')', 45, 27, 45, 28),
woosh.Token(woosh.OP, ':', 45, 28, 45, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 45, 29, 46, 0),
woosh.Token(woosh.INDENT, '    ', 46, 0, 46, 4),
woosh.Token(woosh.NAME, 'return', 46, 4, 46, 10),
woosh.Token(woosh.OP, '(', 46, 11, 46, 12),
woosh.Token(woosh.NAME, 'getattr', 46, 12, 46, 19),
woosh.Token(woosh.OP, '(', 46, 19, 46, 20),
woosh.Token(woosh.NAME, 'exception', 46, 20, 46, 29),
woosh.Token(woosh.OP, ',', 46, 29, 46, 30),
woosh.Token(woosh.STRING, "'errno'", 46, 31, 46, 38),
woosh.Token(woosh.OP, ',', 46, 38, 46, 39),
woosh.Token(woosh.NAME, 'None', 46, 40, 46, 44),
woosh.Token(woosh.OP, ')', 46, 44, 46, 45),
woosh.Token(woosh.NAME, 'in', 46, 46, 46, 48),
woosh.Token(woosh.NAME, '_IGNORED_ERROS', 46, 49, 46, 63),
woosh.Token(woosh.NAME, 'or', 46, 64, 46, 66),
woosh.Token(woosh.NAME, 'getattr', 47, 12, 47, 19),
woosh.Token(woosh.OP, '(', 47, 19, 47, 20),
woosh.Token(woosh.NAME, 'exception', 47, 20, 47, 29),
woosh.Token(woosh.OP, ',', 47, 29, 47, 30),
woosh.Token(woosh.STRING, "'winerror'", 47, 31, 47, 41),
woosh.Token(woosh.OP, ',', 47, 41, 47, 42),
woosh.Token(woosh.NAME, 'None', 47, 43, 47, 47),
woosh.Token(woosh.OP, ')', 47, 47, 47, 48),
woosh.Token(woosh.NAME, 'in', 47, 49, 47, 51),
woosh.Token(woosh.NAME, '_IGNORED_WINERRORS', 47, 52, 47, 70),
woosh.Token(woosh.OP, ')', 47, 70, 47, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 47, 71, 48, 0),
woosh.Token(woosh.DEDENT, '', 50, 0, 50, 0),
woosh.Token(woosh.NAME, 'def', 50, 0, 50, 3),
woosh.Token(woosh.NAME, '_is_wildcard_pattern', 50, 4, 50, 24),
woosh.Token(woosh.OP, '(', 50, 24, 50, 25),
woosh.Token(woosh.NAME, 'pat', 50, 25, 50, 28),
woosh.Token(woosh.OP, ')', 50, 28, 50, 29),
woosh.Token(woosh.OP, ':', 50, 29, 50, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 50, 30, 51, 0),
woosh.Token(woosh.COMMENT, '# Whether this pattern needs actual matching using fnmatch, or can', 51, 4, 51, 70),
woosh.Token(woosh.COMMENT, '# be looked up directly as a file.', 52, 4, 52, 38),
woosh.Token(woosh.INDENT, '    ', 53, 0, 53, 4),
woosh.Token(woosh.NAME, 'return', 53, 4, 53, 10),
woosh.Token(woosh.STRING, '"*"', 53, 11, 53, 14),
woosh.Token(woosh.NAME, 'in', 53, 15, 53, 17),
woosh.Token(woosh.NAME, 'pat', 53, 18, 53, 21),
woosh.Token(woosh.NAME, 'or', 53, 22, 53, 24),
woosh.Token(woosh.STRING, '"?"', 53, 25, 53, 28),
woosh.Token(woosh.NAME, 'in', 53, 29, 53, 31),
woosh.Token(woosh.NAME, 'pat', 53, 32, 53, 35),
woosh.Token(woosh.NAME, 'or', 53, 36, 53, 38),
woosh.Token(woosh.STRING, '"["', 53, 39, 53, 42),
woosh.Token(woosh.NAME, 'in', 53, 43, 53, 45),
woosh.Token(woosh.NAME, 'pat', 53, 46, 53, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 53, 49, 54, 0),
woosh.Token(woosh.DEDENT, '', 56, 0, 56, 0),
woosh.Token(woosh.NAME, 'class', 56, 0, 56, 5),
woosh.Token(woosh.NAME, '_Flavour', 56, 6, 56, 14),
woosh.Token(woosh.OP, '(', 56, 14, 56, 15),
woosh.Token(woosh.NAME, 'object', 56, 15, 56, 21),
woosh.Token(woosh.OP, ')', 56, 21, 56, 22),
woosh.Token(woosh.OP, ':', 56, 22, 56, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 56, 23, 57, 0),
woosh.Token(woosh.INDENT, '    ', 57, 0, 57, 4),
woosh.Token(woosh.STRING, '"""A flavour implements a particular (platform-specific) set of path\r\n    semantics."""', 57, 4, 58, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 17, 59, 0),
woosh.Token(woosh.NAME, 'def', 60, 4, 60, 7),
woosh.Token(woosh.NAME, '__init__', 60, 8, 60, 16),
woosh.Token(woosh.OP, '(', 60, 16, 60, 17),
woosh.Token(woosh.NAME, 'self', 60, 17, 60, 21),
woosh.Token(woosh.OP, ')', 60, 21, 60, 22),
woosh.Token(woosh.OP, ':', 60, 22, 60, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 23, 61, 0),
woosh.Token(woosh.INDENT, '        ', 61, 0, 61, 8),
woosh.Token(woosh.NAME, 'self', 61, 8, 61, 12),
woosh.Token(woosh.OP, '.', 61, 12, 61, 13),
woosh.Token(woosh.NAME, 'join', 61, 13, 61, 17),
woosh.Token(woosh.OP, '=', 61, 18, 61, 19),
woosh.Token(woosh.NAME, 'self', 61, 20, 61, 24),
woosh.Token(woosh.OP, '.', 61, 24, 61, 25),
woosh.Token(woosh.NAME, 'sep', 61, 25, 61, 28),
woosh.Token(woosh.OP, '.', 61, 28, 61, 29),
woosh.Token(woosh.NAME, 'join', 61, 29, 61, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 33, 62, 0),
woosh.Token(woosh.DEDENT, '    ', 63, 0, 63, 4),
woosh.Token(woosh.NAME, 'def', 63, 4, 63, 7),
woosh.Token(woosh.NAME, 'parse_parts', 63, 8, 63, 19),
woosh.Token(woosh.OP, '(', 63, 19, 63, 20),
woosh.Token(woosh.NAME, 'self', 63, 20, 63, 24),
woosh.Token(woosh.OP, ',', 63, 24, 63, 25),
woosh.Token(woosh.NAME, 'parts', 63, 26, 63, 31),
woosh.Token(woosh.OP, ')', 63, 31, 63, 32),
woosh.Token(woosh.OP, ':', 63, 32, 63, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 63, 33, 64, 0),
woosh.Token(woosh.INDENT, '        ', 64, 0, 64, 8),
woosh.Token(woosh.NAME, 'parsed', 64, 8, 64, 14),
woosh.Token(woosh.OP, '=', 64, 15, 64, 16),
woosh.Token(woosh.OP, '[', 64, 17, 64, 18),
woosh.Token(woosh.OP, ']', 64, 18, 64, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 64, 19, 65, 0),
woosh.Token(woosh.NAME, 'sep', 65, 8, 65, 11),
woosh.Token(woosh.OP, '=', 65, 12, 65, 13),
woosh.Token(woosh.NAME, 'self', 65, 14, 65, 18),
woosh.Token(woosh.OP, '.', 65, 18, 65, 19),
woosh.Token(woosh.NAME, 'sep', 65, 19, 65, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 65, 22, 66, 0),
woosh.Token(woosh.NAME, 'altsep', 66, 8, 66, 14),
woosh.Token(woosh.OP, '=', 66, 15, 66, 16),
woosh.Token(woosh.NAME, 'self', 66, 17, 66, 21),
woosh.Token(woosh.OP, '.', 66, 21, 66, 22),
woosh.Token(woosh.NAME, 'altsep', 66, 22, 66, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 28, 67, 0),
woosh.Token(woosh.NAME, 'drv', 67, 8, 67, 11),
woosh.Token(woosh.OP, '=', 67, 12, 67, 13),
woosh.Token(woosh.NAME, 'root', 67, 14, 67, 18),
woosh.Token(woosh.OP, '=', 67, 19, 67, 20),
woosh.Token(woosh.STRING, "''", 67, 21, 67, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 67, 23, 68, 0),
woosh.Token(woosh.NAME, 'it', 68, 8, 68, 10),
woosh.Token(woosh.OP, '=', 68, 11, 68, 12),
woosh.Token(woosh.NAME, 'reversed', 68, 13, 68, 21),
woosh.Token(woosh.OP, '(', 68, 21, 68, 22),
woosh.Token(woosh.NAME, 'parts', 68, 22, 68, 27),
woosh.Token(woosh.OP, ')', 68, 27, 68, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 68, 28, 69, 0),
woosh.Token(woosh.NAME, 'for', 69, 8, 69, 11),
woosh.Token(woosh.NAME, 'part', 69, 12, 69, 16),
woosh.Token(woosh.NAME, 'in', 69, 17, 69, 19),
woosh.Token(woosh.NAME, 'it', 69, 20, 69, 22),
woosh.Token(woosh.OP, ':', 69, 22, 69, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 23, 70, 0),
woosh.Token(woosh.INDENT, '            ', 70, 0, 70, 12),
woosh.Token(woosh.NAME, 'if', 70, 12, 70, 14),
woosh.Token(woosh.NAME, 'not', 70, 15, 70, 18),
woosh.Token(woosh.NAME, 'part', 70, 19, 70, 23),
woosh.Token(woosh.OP, ':', 70, 23, 70, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 24, 71, 0),
woosh.Token(woosh.INDENT, '                ', 71, 0, 71, 16),
woosh.Token(woosh.NAME, 'continue', 71, 16, 71, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 24, 72, 0),
woosh.Token(woosh.DEDENT, '            ', 72, 0, 72, 12),
woosh.Token(woosh.NAME, 'if', 72, 12, 72, 14),
woosh.Token(woosh.NAME, 'altsep', 72, 15, 72, 21),
woosh.Token(woosh.OP, ':', 72, 21, 72, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 22, 73, 0),
woosh.Token(woosh.INDENT, '                ', 73, 0, 73, 16),
woosh.Token(woosh.NAME, 'part', 73, 16, 73, 20),
woosh.Token(woosh.OP, '=', 73, 21, 73, 22),
woosh.Token(woosh.NAME, 'part', 73, 23, 73, 27),
woosh.Token(woosh.OP, '.', 73, 27, 73, 28),
woosh.Token(woosh.NAME, 'replace', 73, 28, 73, 35),
woosh.Token(woosh.OP, '(', 73, 35, 73, 36),
woosh.Token(woosh.NAME, 'altsep', 73, 36, 73, 42),
woosh.Token(woosh.OP, ',', 73, 42, 73, 43),
woosh.Token(woosh.NAME, 'sep', 73, 44, 73, 47),
woosh.Token(woosh.OP, ')', 73, 47, 73, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 48, 74, 0),
woosh.Token(woosh.DEDENT, '            ', 74, 0, 74, 12),
woosh.Token(woosh.NAME, 'drv', 74, 12, 74, 15),
woosh.Token(woosh.OP, ',', 74, 15, 74, 16),
woosh.Token(woosh.NAME, 'root', 74, 17, 74, 21),
woosh.Token(woosh.OP, ',', 74, 21, 74, 22),
woosh.Token(woosh.NAME, 'rel', 74, 23, 74, 26),
woosh.Token(woosh.OP, '=', 74, 27, 74, 28),
woosh.Token(woosh.NAME, 'self', 74, 29, 74, 33),
woosh.Token(woosh.OP, '.', 74, 33, 74, 34),
woosh.Token(woosh.NAME, 'splitroot', 74, 34, 74, 43),
woosh.Token(woosh.OP, '(', 74, 43, 74, 44),
woosh.Token(woosh.NAME, 'part', 74, 44, 74, 48),
woosh.Token(woosh.OP, ')', 74, 48, 74, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 49, 75, 0),
woosh.Token(woosh.NAME, 'if', 75, 12, 75, 14),
woosh.Token(woosh.NAME, 'sep', 75, 15, 75, 18),
woosh.Token(woosh.NAME, 'in', 75, 19, 75, 21),
woosh.Token(woosh.NAME, 'rel', 75, 22, 75, 25),
woosh.Token(woosh.OP, ':', 75, 25, 75, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 26, 76, 0),
woosh.Token(woosh.INDENT, '                ', 76, 0, 76, 16),
woosh.Token(woosh.NAME, 'for', 76, 16, 76, 19),
woosh.Token(woosh.NAME, 'x', 76, 20, 76, 21),
woosh.Token(woosh.NAME, 'in', 76, 22, 76, 24),
woosh.Token(woosh.NAME, 'reversed', 76, 25, 76, 33),
woosh.Token(woosh.OP, '(', 76, 33, 76, 34),
woosh.Token(woosh.NAME, 'rel', 76, 34, 76, 37),
woosh.Token(woosh.OP, '.', 76, 37, 76, 38),
woosh.Token(woosh.NAME, 'split', 76, 38, 76, 43),
woosh.Token(woosh.OP, '(', 76, 43, 76, 44),
woosh.Token(woosh.NAME, 'sep', 76, 44, 76, 47),
woosh.Token(woosh.OP, ')', 76, 47, 76, 48),
woosh.Token(woosh.OP, ')', 76, 48, 76, 49),
woosh.Token(woosh.OP, ':', 76, 49, 76, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 50, 77, 0),
woosh.Token(woosh.INDENT, '                    ', 77, 0, 77, 20),
woosh.Token(woosh.NAME, 'if', 77, 20, 77, 22),
woosh.Token(woosh.NAME, 'x', 77, 23, 77, 24),
woosh.Token(woosh.NAME, 'and', 77, 25, 77, 28),
woosh.Token(woosh.NAME, 'x', 77, 29, 77, 30),
woosh.Token(woosh.OP, '!=', 77, 31, 77, 33),
woosh.Token(woosh.STRING, "'.'", 77, 34, 77, 37),
woosh.Token(woosh.OP, ':', 77, 37, 77, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 38, 78, 0),
woosh.Token(woosh.INDENT, '                        ', 78, 0, 78, 24),
woosh.Token(woosh.NAME, 'parsed', 78, 24, 78, 30),
woosh.Token(woosh.OP, '.', 78, 30, 78, 31),
woosh.Token(woosh.NAME, 'append', 78, 31, 78, 37),
woosh.Token(woosh.OP, '(', 78, 37, 78, 38),
woosh.Token(woosh.NAME, 'sys', 78, 38, 78, 41),
woosh.Token(woosh.OP, '.', 78, 41, 78, 42),
woosh.Token(woosh.NAME, 'intern', 78, 42, 78, 48),
woosh.Token(woosh.OP, '(', 78, 48, 78, 49),
woosh.Token(woosh.NAME, 'x', 78, 49, 78, 50),
woosh.Token(woosh.OP, ')', 78, 50, 78, 51),
woosh.Token(woosh.OP, ')', 78, 51, 78, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 52, 79, 0),
woosh.Token(woosh.DEDENT, '            ', 79, 0, 79, 12),
woosh.Token(woosh.DEDENT, '', 79, 12, 79, 12),
woosh.Token(woosh.DEDENT, '', 79, 12, 79, 12),
woosh.Token(woosh.NAME, 'else', 79, 12, 79, 16),
woosh.Token(woosh.OP, ':', 79, 16, 79, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 79, 17, 80, 0),
woosh.Token(woosh.INDENT, '                ', 80, 0, 80, 16),
woosh.Token(woosh.NAME, 'if', 80, 16, 80, 18),
woosh.Token(woosh.NAME, 'rel', 80, 19, 80, 22),
woosh.Token(woosh.NAME, 'and', 80, 23, 80, 26),
woosh.Token(woosh.NAME, 'rel', 80, 27, 80, 30),
woosh.Token(woosh.OP, '!=', 80, 31, 80, 33),
woosh.Token(woosh.STRING, "'.'", 80, 34, 80, 37),
woosh.Token(woosh.OP, ':', 80, 37, 80, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 80, 38, 81, 0),
woosh.Token(woosh.INDENT, '                    ', 81, 0, 81, 20),
woosh.Token(woosh.NAME, 'parsed', 81, 20, 81, 26),
woosh.Token(woosh.OP, '.', 81, 26, 81, 27),
woosh.Token(woosh.NAME, 'append', 81, 27, 81, 33),
woosh.Token(woosh.OP, '(', 81, 33, 81, 34),
woosh.Token(woosh.NAME, 'sys', 81, 34, 81, 37),
woosh.Token(woosh.OP, '.', 81, 37, 81, 38),
woosh.Token(woosh.NAME, 'intern', 81, 38, 81, 44),
woosh.Token(woosh.OP, '(', 81, 44, 81, 45),
woosh.Token(woosh.NAME, 'rel', 81, 45, 81, 48),
woosh.Token(woosh.OP, ')', 81, 48, 81, 49),
woosh.Token(woosh.OP, ')', 81, 49, 81, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 81, 50, 82, 0),
woosh.Token(woosh.DEDENT, '            ', 82, 0, 82, 12),
woosh.Token(woosh.DEDENT, '', 82, 12, 82, 12),
woosh.Token(woosh.NAME, 'if', 82, 12, 82, 14),
woosh.Token(woosh.NAME, 'drv', 82, 15, 82, 18),
woosh.Token(woosh.NAME, 'or', 82, 19, 82, 21),
woosh.Token(woosh.NAME, 'root', 82, 22, 82, 26),
woosh.Token(woosh.OP, ':', 82, 26, 82, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 82, 27, 83, 0),
woosh.Token(woosh.INDENT, '                ', 83, 0, 83, 16),
woosh.Token(woosh.NAME, 'if', 83, 16, 83, 18),
woosh.Token(woosh.NAME, 'not', 83, 19, 83, 22),
woosh.Token(woosh.NAME, 'drv', 83, 23, 83, 26),
woosh.Token(woosh.OP, ':', 83, 26, 83, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 83, 27, 84, 0),
woosh.Token(woosh.COMMENT, '# If no drive is present, try to find one in the previous', 84, 20, 84, 77),
woosh.Token(woosh.COMMENT, '# parts. This makes the result of parsing e.g.', 85, 20, 85, 66),
woosh.Token(woosh.COMMENT, '# ("C:", "/", "a") reasonably intuitive.', 86, 20, 86, 60),
woosh.Token(woosh.INDENT, '                    ', 87, 0, 87, 20),
woosh.Token(woosh.NAME, 'for', 87, 20, 87, 23),
woosh.Token(woosh.NAME, 'part', 87, 24, 87, 28),
woosh.Token(woosh.NAME, 'in', 87, 29, 87, 31),
woosh.Token(woosh.NAME, 'it', 87, 32, 87, 34),
woosh.Token(woosh.OP, ':', 87, 34, 87, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 87, 35, 88, 0),
woosh.Token(woosh.INDENT, '                        ', 88, 0, 88, 24),
woosh.Token(woosh.NAME, 'if', 88, 24, 88, 26),
woosh.Token(woosh.NAME, 'not', 88, 27, 88, 30),
woosh.Token(woosh.NAME, 'part', 88, 31, 88, 35),
woosh.Token(woosh.OP, ':', 88, 35, 88, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 36, 89, 0),
woosh.Token(woosh.INDENT, '                            ', 89, 0, 89, 28),
woosh.Token(woosh.NAME, 'continue', 89, 28, 89, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 89, 36, 90, 0),
woosh.Token(woosh.DEDENT, '                        ', 90, 0, 90, 24),
woosh.Token(woosh.NAME, 'if', 90, 24, 90, 26),
woosh.Token(woosh.NAME, 'altsep', 90, 27, 90, 33),
woosh.Token(woosh.OP, ':', 90, 33, 90, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 90, 34, 91, 0),
woosh.Token(woosh.INDENT, '                            ', 91, 0, 91, 28),
woosh.Token(woosh.NAME, 'part', 91, 28, 91, 32),
woosh.Token(woosh.OP, '=', 91, 33, 91, 34),
woosh.Token(woosh.NAME, 'part', 91, 35, 91, 39),
woosh.Token(woosh.OP, '.', 91, 39, 91, 40),
woosh.Token(woosh.NAME, 'replace', 91, 40, 91, 47),
woosh.Token(woosh.OP, '(', 91, 47, 91, 48),
woosh.Token(woosh.NAME, 'altsep', 91, 48, 91, 54),
woosh.Token(woosh.OP, ',', 91, 54, 91, 55),
woosh.Token(woosh.NAME, 'sep', 91, 56, 91, 59),
woosh.Token(woosh.OP, ')', 91, 59, 91, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 91, 60, 92, 0),
woosh.Token(woosh.DEDENT, '                        ', 92, 0, 92, 24),
woosh.Token(woosh.NAME, 'drv', 92, 24, 92, 27),
woosh.Token(woosh.OP, '=', 92, 28, 92, 29),
woosh.Token(woosh.NAME, 'self', 92, 30, 92, 34),
woosh.Token(woosh.OP, '.', 92, 34, 92, 35),
woosh.Token(woosh.NAME, 'splitroot', 92, 35, 92, 44),
woosh.Token(woosh.OP, '(', 92, 44, 92, 45),
woosh.Token(woosh.NAME, 'part', 92, 45, 92, 49),
woosh.Token(woosh.OP, ')', 92, 49, 92, 50),
woosh.Token(woosh.OP, '[', 92, 50, 92, 51),
woosh.Token(woosh.NUMBER, '0', 92, 51, 92, 52),
woosh.Token(woosh.OP, ']', 92, 52, 92, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 53, 93, 0),
woosh.Token(woosh.NAME, 'if', 93, 24, 93, 26),
woosh.Token(woosh.NAME, 'drv', 93, 27, 93, 30),
woosh.Token(woosh.OP, ':', 93, 30, 93, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 31, 94, 0),
woosh.Token(woosh.INDENT, '                            ', 94, 0, 94, 28),
woosh.Token(woosh.NAME, 'break', 94, 28, 94, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 33, 95, 0),
woosh.Token(woosh.DEDENT, '                ', 95, 0, 95, 16),
woosh.Token(woosh.DEDENT, '', 95, 16, 95, 16),
woosh.Token(woosh.DEDENT, '', 95, 16, 95, 16),
woosh.Token(woosh.NAME, 'break', 95, 16, 95, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 21, 96, 0),
woosh.Token(woosh.DEDENT, '        ', 96, 0, 96, 8),
woosh.Token(woosh.DEDENT, '', 96, 8, 96, 8),
woosh.Token(woosh.NAME, 'if', 96, 8, 96, 10),
woosh.Token(woosh.NAME, 'drv', 96, 11, 96, 14),
woosh.Token(woosh.NAME, 'or', 96, 15, 96, 17),
woosh.Token(woosh.NAME, 'root', 96, 18, 96, 22),
woosh.Token(woosh.OP, ':', 96, 22, 96, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 23, 97, 0),
woosh.Token(woosh.INDENT, '            ', 97, 0, 97, 12),
woosh.Token(woosh.NAME, 'parsed', 97, 12, 97, 18),
woosh.Token(woosh.OP, '.', 97, 18, 97, 19),
woosh.Token(woosh.NAME, 'append', 97, 19, 97, 25),
woosh.Token(woosh.OP, '(', 97, 25, 97, 26),
woosh.Token(woosh.NAME, 'drv', 97, 26, 97, 29),
woosh.Token(woosh.OP, '+', 97, 30, 97, 31),
woosh.Token(woosh.NAME, 'root', 97, 32, 97, 36),
woosh.Token(woosh.OP, ')', 97, 36, 97, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 37, 98, 0),
woosh.Token(woosh.DEDENT, '        ', 98, 0, 98, 8),
woosh.Token(woosh.NAME, 'parsed', 98, 8, 98, 14),
woosh.Token(woosh.OP, '.', 98, 14, 98, 15),
woosh.Token(woosh.NAME, 'reverse', 98, 15, 98, 22),
woosh.Token(woosh.OP, '(', 98, 22, 98, 23),
woosh.Token(woosh.OP, ')', 98, 23, 98, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 98, 24, 99, 0),
woosh.Token(woosh.NAME, 'return', 99, 8, 99, 14),
woosh.Token(woosh.NAME, 'drv', 99, 15, 99, 18),
woosh.Token(woosh.OP, ',', 99, 18, 99, 19),
woosh.Token(woosh.NAME, 'root', 99, 20, 99, 24),
woosh.Token(woosh.OP, ',', 99, 24, 99, 25),
woosh.Token(woosh.NAME, 'parsed', 99, 26, 99, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 32, 100, 0),
woosh.Token(woosh.DEDENT, '    ', 101, 0, 101, 4),
woosh.Token(woosh.NAME, 'def', 101, 4, 101, 7),
woosh.Token(woosh.NAME, 'join_parsed_parts', 101, 8, 101, 25),
woosh.Token(woosh.OP, '(', 101, 25, 101, 26),
woosh.Token(woosh.NAME, 'self', 101, 26, 101, 30),
woosh.Token(woosh.OP, ',', 101, 30, 101, 31),
woosh.Token(woosh.NAME, 'drv', 101, 32, 101, 35),
woosh.Token(woosh.OP, ',', 101, 35, 101, 36),
woosh.Token(woosh.NAME, 'root', 101, 37, 101, 41),
woosh.Token(woosh.OP, ',', 101, 41, 101, 42),
woosh.Token(woosh.NAME, 'parts', 101, 43, 101, 48),
woosh.Token(woosh.OP, ',', 101, 48, 101, 49),
woosh.Token(woosh.NAME, 'drv2', 101, 50, 101, 54),
woosh.Token(woosh.OP, ',', 101, 54, 101, 55),
woosh.Token(woosh.NAME, 'root2', 101, 56, 101, 61),
woosh.Token(woosh.OP, ',', 101, 61, 101, 62),
woosh.Token(woosh.NAME, 'parts2', 101, 63, 101, 69),
woosh.Token(woosh.OP, ')', 101, 69, 101, 70),
woosh.Token(woosh.OP, ':', 101, 70, 101, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 101, 71, 102, 0),
woosh.Token(woosh.INDENT, '        ', 102, 0, 102, 8),
woosh.Token(woosh.STRING, '"""\r\n        Join the two paths represented by the respective\r\n        (drive, root, parts) tuples.  Return a new (drive, root, parts) tuple.\r\n        """', 102, 8, 105, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 11, 106, 0),
woosh.Token(woosh.NAME, 'if', 106, 8, 106, 10),
woosh.Token(woosh.NAME, 'root2', 106, 11, 106, 16),
woosh.Token(woosh.OP, ':', 106, 16, 106, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 17, 107, 0),
woosh.Token(woosh.INDENT, '            ', 107, 0, 107, 12),
woosh.Token(woosh.NAME, 'if', 107, 12, 107, 14),
woosh.Token(woosh.NAME, 'not', 107, 15, 107, 18),
woosh.Token(woosh.NAME, 'drv2', 107, 19, 107, 23),
woosh.Token(woosh.NAME, 'and', 107, 24, 107, 27),
woosh.Token(woosh.NAME, 'drv', 107, 28, 107, 31),
woosh.Token(woosh.OP, ':', 107, 31, 107, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 32, 108, 0),
woosh.Token(woosh.INDENT, '                ', 108, 0, 108, 16),
woosh.Token(woosh.NAME, 'return', 108, 16, 108, 22),
woosh.Token(woosh.NAME, 'drv', 108, 23, 108, 26),
woosh.Token(woosh.OP, ',', 108, 26, 108, 27),
woosh.Token(woosh.NAME, 'root2', 108, 28, 108, 33),
woosh.Token(woosh.OP, ',', 108, 33, 108, 34),
woosh.Token(woosh.OP, '[', 108, 35, 108, 36),
woosh.Token(woosh.NAME, 'drv', 108, 36, 108, 39),
woosh.Token(woosh.OP, '+', 108, 40, 108, 41),
woosh.Token(woosh.NAME, 'root2', 108, 42, 108, 47),
woosh.Token(woosh.OP, ']', 108, 47, 108, 48),
woosh.Token(woosh.OP, '+', 108, 49, 108, 50),
woosh.Token(woosh.NAME, 'parts2', 108, 51, 108, 57),
woosh.Token(woosh.OP, '[', 108, 57, 108, 58),
woosh.Token(woosh.NUMBER, '1', 108, 58, 108, 59),
woosh.Token(woosh.OP, ':', 108, 59, 108, 60),
woosh.Token(woosh.OP, ']', 108, 60, 108, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 108, 61, 109, 0),
woosh.Token(woosh.DEDENT, '        ', 109, 0, 109, 8),
woosh.Token(woosh.DEDENT, '', 109, 8, 109, 8),
woosh.Token(woosh.NAME, 'elif', 109, 8, 109, 12),
woosh.Token(woosh.NAME, 'drv2', 109, 13, 109, 17),
woosh.Token(woosh.OP, ':', 109, 17, 109, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 109, 18, 110, 0),
woosh.Token(woosh.INDENT, '            ', 110, 0, 110, 12),
woosh.Token(woosh.NAME, 'if', 110, 12, 110, 14),
woosh.Token(woosh.NAME, 'drv2', 110, 15, 110, 19),
woosh.Token(woosh.OP, '==', 110, 20, 110, 22),
woosh.Token(woosh.NAME, 'drv', 110, 23, 110, 26),
woosh.Token(woosh.NAME, 'or', 110, 27, 110, 29),
woosh.Token(woosh.NAME, 'self', 110, 30, 110, 34),
woosh.Token(woosh.OP, '.', 110, 34, 110, 35),
woosh.Token(woosh.NAME, 'casefold', 110, 35, 110, 43),
woosh.Token(woosh.OP, '(', 110, 43, 110, 44),
woosh.Token(woosh.NAME, 'drv2', 110, 44, 110, 48),
woosh.Token(woosh.OP, ')', 110, 48, 110, 49),
woosh.Token(woosh.OP, '==', 110, 50, 110, 52),
woosh.Token(woosh.NAME, 'self', 110, 53, 110, 57),
woosh.Token(woosh.OP, '.', 110, 57, 110, 58),
woosh.Token(woosh.NAME, 'casefold', 110, 58, 110, 66),
woosh.Token(woosh.OP, '(', 110, 66, 110, 67),
woosh.Token(woosh.NAME, 'drv', 110, 67, 110, 70),
woosh.Token(woosh.OP, ')', 110, 70, 110, 71),
woosh.Token(woosh.OP, ':', 110, 71, 110, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 110, 72, 111, 0),
woosh.Token(woosh.COMMENT, '# Same drive => second path is relative to the first', 111, 16, 111, 68),
woosh.Token(woosh.INDENT, '                ', 112, 0, 112, 16),
woosh.Token(woosh.NAME, 'return', 112, 16, 112, 22),
woosh.Token(woosh.NAME, 'drv', 112, 23, 112, 26),
woosh.Token(woosh.OP, ',', 112, 26, 112, 27),
woosh.Token(woosh.NAME, 'root', 112, 28, 112, 32),
woosh.Token(woosh.OP, ',', 112, 32, 112, 33),
woosh.Token(woosh.NAME, 'parts', 112, 34, 112, 39),
woosh.Token(woosh.OP, '+', 112, 40, 112, 41),
woosh.Token(woosh.NAME, 'parts2', 112, 42, 112, 48),
woosh.Token(woosh.OP, '[', 112, 48, 112, 49),
woosh.Token(woosh.NUMBER, '1', 112, 49, 112, 50),
woosh.Token(woosh.OP, ':', 112, 50, 112, 51),
woosh.Token(woosh.OP, ']', 112, 51, 112, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 52, 113, 0),
woosh.Token(woosh.DEDENT, '        ', 113, 0, 113, 8),
woosh.Token(woosh.DEDENT, '', 113, 8, 113, 8),
woosh.Token(woosh.NAME, 'else', 113, 8, 113, 12),
woosh.Token(woosh.OP, ':', 113, 12, 113, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 13, 114, 0),
woosh.Token(woosh.COMMENT, '# Second path is non-anchored (common case)', 114, 12, 114, 55),
woosh.Token(woosh.INDENT, '            ', 115, 0, 115, 12),
woosh.Token(woosh.NAME, 'return', 115, 12, 115, 18),
woosh.Token(woosh.NAME, 'drv', 115, 19, 115, 22),
woosh.Token(woosh.OP, ',', 115, 22, 115, 23),
woosh.Token(woosh.NAME, 'root', 115, 24, 115, 28),
woosh.Token(woosh.OP, ',', 115, 28, 115, 29),
woosh.Token(woosh.NAME, 'parts', 115, 30, 115, 35),
woosh.Token(woosh.OP, '+', 115, 36, 115, 37),
woosh.Token(woosh.NAME, 'parts2', 115, 38, 115, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 44, 116, 0),
woosh.Token(woosh.DEDENT, '        ', 116, 0, 116, 8),
woosh.Token(woosh.NAME, 'return', 116, 8, 116, 14),
woosh.Token(woosh.NAME, 'drv2', 116, 15, 116, 19),
woosh.Token(woosh.OP, ',', 116, 19, 116, 20),
woosh.Token(woosh.NAME, 'root2', 116, 21, 116, 26),
woosh.Token(woosh.OP, ',', 116, 26, 116, 27),
woosh.Token(woosh.NAME, 'parts2', 116, 28, 116, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 34, 117, 0),
woosh.Token(woosh.DEDENT, '', 119, 0, 119, 0),
woosh.Token(woosh.DEDENT, '', 119, 0, 119, 0),
woosh.Token(woosh.NAME, 'class', 119, 0, 119, 5),
woosh.Token(woosh.NAME, '_WindowsFlavour', 119, 6, 119, 21),
woosh.Token(woosh.OP, '(', 119, 21, 119, 22),
woosh.Token(woosh.NAME, '_Flavour', 119, 22, 119, 30),
woosh.Token(woosh.OP, ')', 119, 30, 119, 31),
woosh.Token(woosh.OP, ':', 119, 31, 119, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 32, 120, 0),
woosh.Token(woosh.COMMENT, '# Reference for Windows paths can be found at', 120, 4, 120, 49),
woosh.Token(woosh.COMMENT, '# http://msdn.microsoft.com/en-us/library/aa365247%28v=vs.85%29.aspx', 121, 4, 121, 72),
woosh.Token(woosh.INDENT, '    ', 123, 0, 123, 4),
woosh.Token(woosh.NAME, 'sep', 123, 4, 123, 7),
woosh.Token(woosh.OP, '=', 123, 8, 123, 9),
woosh.Token(woosh.STRING, "'\\\\'", 123, 10, 123, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 14, 124, 0),
woosh.Token(woosh.NAME, 'altsep', 124, 4, 124, 10),
woosh.Token(woosh.OP, '=', 124, 11, 124, 12),
woosh.Token(woosh.STRING, "'/'", 124, 13, 124, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 16, 125, 0),
woosh.Token(woosh.NAME, 'has_drv', 125, 4, 125, 11),
woosh.Token(woosh.OP, '=', 125, 12, 125, 13),
woosh.Token(woosh.NAME, 'True', 125, 14, 125, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 18, 126, 0),
woosh.Token(woosh.NAME, 'pathmod', 126, 4, 126, 11),
woosh.Token(woosh.OP, '=', 126, 12, 126, 13),
woosh.Token(woosh.NAME, 'ntpath', 126, 14, 126, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 20, 127, 0),
woosh.Token(woosh.NAME, 'is_supported', 128, 4, 128, 16),
woosh.Token(woosh.OP, '=', 128, 17, 128, 18),
woosh.Token(woosh.OP, '(', 128, 19, 128, 20),
woosh.Token(woosh.NAME, 'os', 128, 20, 128, 22),
woosh.Token(woosh.OP, '.', 128, 22, 128, 23),
woosh.Token(woosh.NAME, 'name', 128, 23, 128, 27),
woosh.Token(woosh.OP, '==', 128, 28, 128, 30),
woosh.Token(woosh.STRING, "'nt'", 128, 31, 128, 35),
woosh.Token(woosh.OP, ')', 128, 35, 128, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 36, 129, 0),
woosh.Token(woosh.NAME, 'drive_letters', 130, 4, 130, 17),
woosh.Token(woosh.OP, '=', 130, 18, 130, 19),
woosh.Token(woosh.NAME, 'set', 130, 20, 130, 23),
woosh.Token(woosh.OP, '(', 130, 23, 130, 24),
woosh.Token(woosh.STRING, "'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'", 130, 24, 130, 78),
woosh.Token(woosh.OP, ')', 130, 78, 130, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 79, 131, 0),
woosh.Token(woosh.NAME, 'ext_namespace_prefix', 131, 4, 131, 24),
woosh.Token(woosh.OP, '=', 131, 25, 131, 26),
woosh.Token(woosh.STRING, "'\\\\\\\\?\\\\'", 131, 27, 131, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 36, 132, 0),
woosh.Token(woosh.NAME, 'reserved_names', 133, 4, 133, 18),
woosh.Token(woosh.OP, '=', 133, 19, 133, 20),
woosh.Token(woosh.OP, '(', 133, 21, 133, 22),
woosh.Token(woosh.OP, '{', 134, 8, 134, 9),
woosh.Token(woosh.STRING, "'CON'", 134, 9, 134, 14),
woosh.Token(woosh.OP, ',', 134, 14, 134, 15),
woosh.Token(woosh.STRING, "'PRN'", 134, 16, 134, 21),
woosh.Token(woosh.OP, ',', 134, 21, 134, 22),
woosh.Token(woosh.STRING, "'AUX'", 134, 23, 134, 28),
woosh.Token(woosh.OP, ',', 134, 28, 134, 29),
woosh.Token(woosh.STRING, "'NUL'", 134, 30, 134, 35),
woosh.Token(woosh.OP, '}', 134, 35, 134, 36),
woosh.Token(woosh.OP, '|', 134, 37, 134, 38),
woosh.Token(woosh.OP, '{', 135, 8, 135, 9),
woosh.Token(woosh.STRING, "'COM%d'", 135, 9, 135, 16),
woosh.Token(woosh.OP, '%', 135, 17, 135, 18),
woosh.Token(woosh.NAME, 'i', 135, 19, 135, 20),
woosh.Token(woosh.NAME, 'for', 135, 21, 135, 24),
woosh.Token(woosh.NAME, 'i', 135, 25, 135, 26),
woosh.Token(woosh.NAME, 'in', 135, 27, 135, 29),
woosh.Token(woosh.NAME, 'range', 135, 30, 135, 35),
woosh.Token(woosh.OP, '(', 135, 35, 135, 36),
woosh.Token(woosh.NUMBER, '1', 135, 36, 135, 37),
woosh.Token(woosh.OP, ',', 135, 37, 135, 38),
woosh.Token(woosh.NUMBER, '10', 135, 39, 135, 41),
woosh.Token(woosh.OP, ')', 135, 41, 135, 42),
woosh.Token(woosh.OP, '}', 135, 42, 135, 43),
woosh.Token(woosh.OP, '|', 135, 44, 135, 45),
woosh.Token(woosh.OP, '{', 136, 8, 136, 9),
woosh.Token(woosh.STRING, "'LPT%d'", 136, 9, 136, 16),
woosh.Token(woosh.OP, '%', 136, 17, 136, 18),
woosh.Token(woosh.NAME, 'i', 136, 19, 136, 20),
woosh.Token(woosh.NAME, 'for', 136, 21, 136, 24),
woosh.Token(woosh.NAME, 'i', 136, 25, 136, 26),
woosh.Token(woosh.NAME, 'in', 136, 27, 136, 29),
woosh.Token(woosh.NAME, 'range', 136, 30, 136, 35),
woosh.Token(woosh.OP, '(', 136, 35, 136, 36),
woosh.Token(woosh.NUMBER, '1', 136, 36, 136, 37),
woosh.Token(woosh.OP, ',', 136, 37, 136, 38),
woosh.Token(woosh.NUMBER, '10', 136, 39, 136, 41),
woosh.Token(woosh.OP, ')', 136, 41, 136, 42),
woosh.Token(woosh.OP, '}', 136, 42, 136, 43),
woosh.Token(woosh.OP, ')', 137, 8, 137, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 9, 138, 0),
woosh.Token(woosh.COMMENT, '# Interesting findings about extended paths:', 139, 4, 139, 48),
woosh.Token(woosh.COMMENT, "# - '\\\\?\\c:\\a', '//?/c:\\a' and '//?/c:/a' are all supported", 140, 4, 140, 63),
woosh.Token(woosh.COMMENT, "#   but '\\\\?\\c:/a' is not", 141, 4, 141, 29),
woosh.Token(woosh.COMMENT, '# - extended paths are always absolute; "relative" extended paths will', 142, 4, 142, 74),
woosh.Token(woosh.COMMENT, '#   fail.', 143, 4, 143, 13),
woosh.Token(woosh.NAME, 'def', 145, 4, 145, 7),
woosh.Token(woosh.NAME, 'splitroot', 145, 8, 145, 17),
woosh.Token(woosh.OP, '(', 145, 17, 145, 18),
woosh.Token(woosh.NAME, 'self', 145, 18, 145, 22),
woosh.Token(woosh.OP, ',', 145, 22, 145, 23),
woosh.Token(woosh.NAME, 'part', 145, 24, 145, 28),
woosh.Token(woosh.OP, ',', 145, 28, 145, 29),
woosh.Token(woosh.NAME, 'sep', 145, 30, 145, 33),
woosh.Token(woosh.OP, '=', 145, 33, 145, 34),
woosh.Token(woosh.NAME, 'sep', 145, 34, 145, 37),
woosh.Token(woosh.OP, ')', 145, 37, 145, 38),
woosh.Token(woosh.OP, ':', 145, 38, 145, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 39, 146, 0),
woosh.Token(woosh.INDENT, '        ', 146, 0, 146, 8),
woosh.Token(woosh.NAME, 'first', 146, 8, 146, 13),
woosh.Token(woosh.OP, '=', 146, 14, 146, 15),
woosh.Token(woosh.NAME, 'part', 146, 16, 146, 20),
woosh.Token(woosh.OP, '[', 146, 20, 146, 21),
woosh.Token(woosh.NUMBER, '0', 146, 21, 146, 22),
woosh.Token(woosh.OP, ':', 146, 22, 146, 23),
woosh.Token(woosh.NUMBER, '1', 146, 23, 146, 24),
woosh.Token(woosh.OP, ']', 146, 24, 146, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 25, 147, 0),
woosh.Token(woosh.NAME, 'second', 147, 8, 147, 14),
woosh.Token(woosh.OP, '=', 147, 15, 147, 16),
woosh.Token(woosh.NAME, 'part', 147, 17, 147, 21),
woosh.Token(woosh.OP, '[', 147, 21, 147, 22),
woosh.Token(woosh.NUMBER, '1', 147, 22, 147, 23),
woosh.Token(woosh.OP, ':', 147, 23, 147, 24),
woosh.Token(woosh.NUMBER, '2', 147, 24, 147, 25),
woosh.Token(woosh.OP, ']', 147, 25, 147, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 26, 148, 0),
woosh.Token(woosh.NAME, 'if', 148, 8, 148, 10),
woosh.Token(woosh.OP, '(', 148, 11, 148, 12),
woosh.Token(woosh.NAME, 'second', 148, 12, 148, 18),
woosh.Token(woosh.OP, '==', 148, 19, 148, 21),
woosh.Token(woosh.NAME, 'sep', 148, 22, 148, 25),
woosh.Token(woosh.NAME, 'and', 148, 26, 148, 29),
woosh.Token(woosh.NAME, 'first', 148, 30, 148, 35),
woosh.Token(woosh.OP, '==', 148, 36, 148, 38),
woosh.Token(woosh.NAME, 'sep', 148, 39, 148, 42),
woosh.Token(woosh.OP, ')', 148, 42, 148, 43),
woosh.Token(woosh.OP, ':', 148, 43, 148, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 44, 149, 0),
woosh.Token(woosh.COMMENT, '# XXX extended paths should also disable the collapsing of "."', 149, 12, 149, 74),
woosh.Token(woosh.COMMENT, '# components (according to MSDN docs).', 150, 12, 150, 50),
woosh.Token(woosh.INDENT, '            ', 151, 0, 151, 12),
woosh.Token(woosh.NAME, 'prefix', 151, 12, 151, 18),
woosh.Token(woosh.OP, ',', 151, 18, 151, 19),
woosh.Token(woosh.NAME, 'part', 151, 20, 151, 24),
woosh.Token(woosh.OP, '=', 151, 25, 151, 26),
woosh.Token(woosh.NAME, 'self', 151, 27, 151, 31),
woosh.Token(woosh.OP, '.', 151, 31, 151, 32),
woosh.Token(woosh.NAME, '_split_extended_path', 151, 32, 151, 52),
woosh.Token(woosh.OP, '(', 151, 52, 151, 53),
woosh.Token(woosh.NAME, 'part', 151, 53, 151, 57),
woosh.Token(woosh.OP, ')', 151, 57, 151, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 58, 152, 0),
woosh.Token(woosh.NAME, 'first', 152, 12, 152, 17),
woosh.Token(woosh.OP, '=', 152, 18, 152, 19),
woosh.Token(woosh.NAME, 'part', 152, 20, 152, 24),
woosh.Token(woosh.OP, '[', 152, 24, 152, 25),
woosh.Token(woosh.NUMBER, '0', 152, 25, 152, 26),
woosh.Token(woosh.OP, ':', 152, 26, 152, 27),
woosh.Token(woosh.NUMBER, '1', 152, 27, 152, 28),
woosh.Token(woosh.OP, ']', 152, 28, 152, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 29, 153, 0),
woosh.Token(woosh.NAME, 'second', 153, 12, 153, 18),
woosh.Token(woosh.OP, '=', 153, 19, 153, 20),
woosh.Token(woosh.NAME, 'part', 153, 21, 153, 25),
woosh.Token(woosh.OP, '[', 153, 25, 153, 26),
woosh.Token(woosh.NUMBER, '1', 153, 26, 153, 27),
woosh.Token(woosh.OP, ':', 153, 27, 153, 28),
woosh.Token(woosh.NUMBER, '2', 153, 28, 153, 29),
woosh.Token(woosh.OP, ']', 153, 29, 153, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 30, 154, 0),
woosh.Token(woosh.DEDENT, '        ', 154, 0, 154, 8),
woosh.Token(woosh.NAME, 'else', 154, 8, 154, 12),
woosh.Token(woosh.OP, ':', 154, 12, 154, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 13, 155, 0),
woosh.Token(woosh.INDENT, '            ', 155, 0, 155, 12),
woosh.Token(woosh.NAME, 'prefix', 155, 12, 155, 18),
woosh.Token(woosh.OP, '=', 155, 19, 155, 20),
woosh.Token(woosh.STRING, "''", 155, 21, 155, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 155, 23, 156, 0),
woosh.Token(woosh.DEDENT, '        ', 156, 0, 156, 8),
woosh.Token(woosh.NAME, 'third', 156, 8, 156, 13),
woosh.Token(woosh.OP, '=', 156, 14, 156, 15),
woosh.Token(woosh.NAME, 'part', 156, 16, 156, 20),
woosh.Token(woosh.OP, '[', 156, 20, 156, 21),
woosh.Token(woosh.NUMBER, '2', 156, 21, 156, 22),
woosh.Token(woosh.OP, ':', 156, 22, 156, 23),
woosh.Token(woosh.NUMBER, '3', 156, 23, 156, 24),
woosh.Token(woosh.OP, ']', 156, 24, 156, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 25, 157, 0),
woosh.Token(woosh.NAME, 'if', 157, 8, 157, 10),
woosh.Token(woosh.OP, '(', 157, 11, 157, 12),
woosh.Token(woosh.NAME, 'second', 157, 12, 157, 18),
woosh.Token(woosh.OP, '==', 157, 19, 157, 21),
woosh.Token(woosh.NAME, 'sep', 157, 22, 157, 25),
woosh.Token(woosh.NAME, 'and', 157, 26, 157, 29),
woosh.Token(woosh.NAME, 'first', 157, 30, 157, 35),
woosh.Token(woosh.OP, '==', 157, 36, 157, 38),
woosh.Token(woosh.NAME, 'sep', 157, 39, 157, 42),
woosh.Token(woosh.NAME, 'and', 157, 43, 157, 46),
woosh.Token(woosh.NAME, 'third', 157, 47, 157, 52),
woosh.Token(woosh.OP, '!=', 157, 53, 157, 55),
woosh.Token(woosh.NAME, 'sep', 157, 56, 157, 59),
woosh.Token(woosh.OP, ')', 157, 59, 157, 60),
woosh.Token(woosh.OP, ':', 157, 60, 157, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 157, 61, 158, 0),
woosh.Token(woosh.COMMENT, '# is a UNC path:', 158, 12, 158, 28),
woosh.Token(woosh.COMMENT, '# vvvvvvvvvvvvvvvvvvvvv root', 159, 12, 159, 40),
woosh.Token(woosh.COMMENT, '# \\\\machine\\mountpoint\\directory\\etc\\...', 160, 12, 160, 52),
woosh.Token(woosh.COMMENT, '#            directory ^^^^^^^^^^^^^^', 161, 12, 161, 49),
woosh.Token(woosh.INDENT, '            ', 162, 0, 162, 12),
woosh.Token(woosh.NAME, 'index', 162, 12, 162, 17),
woosh.Token(woosh.OP, '=', 162, 18, 162, 19),
woosh.Token(woosh.NAME, 'part', 162, 20, 162, 24),
woosh.Token(woosh.OP, '.', 162, 24, 162, 25),
woosh.Token(woosh.NAME, 'find', 162, 25, 162, 29),
woosh.Token(woosh.OP, '(', 162, 29, 162, 30),
woosh.Token(woosh.NAME, 'sep', 162, 30, 162, 33),
woosh.Token(woosh.OP, ',', 162, 33, 162, 34),
woosh.Token(woosh.NUMBER, '2', 162, 35, 162, 36),
woosh.Token(woosh.OP, ')', 162, 36, 162, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 37, 163, 0),
woosh.Token(woosh.NAME, 'if', 163, 12, 163, 14),
woosh.Token(woosh.NAME, 'index', 163, 15, 163, 20),
woosh.Token(woosh.OP, '!=', 163, 21, 163, 23),
woosh.Token(woosh.OP, '-', 163, 24, 163, 25),
woosh.Token(woosh.NUMBER, '1', 163, 25, 163, 26),
woosh.Token(woosh.OP, ':', 163, 26, 163, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 27, 164, 0),
woosh.Token(woosh.INDENT, '                ', 164, 0, 164, 16),
woosh.Token(woosh.NAME, 'index2', 164, 16, 164, 22),
woosh.Token(woosh.OP, '=', 164, 23, 164, 24),
woosh.Token(woosh.NAME, 'part', 164, 25, 164, 29),
woosh.Token(woosh.OP, '.', 164, 29, 164, 30),
woosh.Token(woosh.NAME, 'find', 164, 30, 164, 34),
woosh.Token(woosh.OP, '(', 164, 34, 164, 35),
woosh.Token(woosh.NAME, 'sep', 164, 35, 164, 38),
woosh.Token(woosh.OP, ',', 164, 38, 164, 39),
woosh.Token(woosh.NAME, 'index', 164, 40, 164, 45),
woosh.Token(woosh.OP, '+', 164, 46, 164, 47),
woosh.Token(woosh.NUMBER, '1', 164, 48, 164, 49),
woosh.Token(woosh.OP, ')', 164, 49, 164, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 50, 165, 0),
woosh.Token(woosh.COMMENT, "# a UNC path can't have two slashes in a row", 165, 16, 165, 60),
woosh.Token(woosh.COMMENT, '# (after the initial two)', 166, 16, 166, 41),
woosh.Token(woosh.NAME, 'if', 167, 16, 167, 18),
woosh.Token(woosh.NAME, 'index2', 167, 19, 167, 25),
woosh.Token(woosh.OP, '!=', 167, 26, 167, 28),
woosh.Token(woosh.NAME, 'index', 167, 29, 167, 34),
woosh.Token(woosh.OP, '+', 167, 35, 167, 36),
woosh.Token(woosh.NUMBER, '1', 167, 37, 167, 38),
woosh.Token(woosh.OP, ':', 167, 38, 167, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 39, 168, 0),
woosh.Token(woosh.INDENT, '                    ', 168, 0, 168, 20),
woosh.Token(woosh.NAME, 'if', 168, 20, 168, 22),
woosh.Token(woosh.NAME, 'index2', 168, 23, 168, 29),
woosh.Token(woosh.OP, '==', 168, 30, 168, 32),
woosh.Token(woosh.OP, '-', 168, 33, 168, 34),
woosh.Token(woosh.NUMBER, '1', 168, 34, 168, 35),
woosh.Token(woosh.OP, ':', 168, 35, 168, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 36, 169, 0),
woosh.Token(woosh.INDENT, '                        ', 169, 0, 169, 24),
woosh.Token(woosh.NAME, 'index2', 169, 24, 169, 30),
woosh.Token(woosh.OP, '=', 169, 31, 169, 32),
woosh.Token(woosh.NAME, 'len', 169, 33, 169, 36),
woosh.Token(woosh.OP, '(', 169, 36, 169, 37),
woosh.Token(woosh.NAME, 'part', 169, 37, 169, 41),
woosh.Token(woosh.OP, ')', 169, 41, 169, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 42, 170, 0),
woosh.Token(woosh.DEDENT, '                    ', 170, 0, 170, 20),
woosh.Token(woosh.NAME, 'if', 170, 20, 170, 22),
woosh.Token(woosh.NAME, 'prefix', 170, 23, 170, 29),
woosh.Token(woosh.OP, ':', 170, 29, 170, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 30, 171, 0),
woosh.Token(woosh.INDENT, '                        ', 171, 0, 171, 24),
woosh.Token(woosh.NAME, 'return', 171, 24, 171, 30),
woosh.Token(woosh.NAME, 'prefix', 171, 31, 171, 37),
woosh.Token(woosh.OP, '+', 171, 38, 171, 39),
woosh.Token(woosh.NAME, 'part', 171, 40, 171, 44),
woosh.Token(woosh.OP, '[', 171, 44, 171, 45),
woosh.Token(woosh.NUMBER, '1', 171, 45, 171, 46),
woosh.Token(woosh.OP, ':', 171, 46, 171, 47),
woosh.Token(woosh.NAME, 'index2', 171, 47, 171, 53),
woosh.Token(woosh.OP, ']', 171, 53, 171, 54),
woosh.Token(woosh.OP, ',', 171, 54, 171, 55),
woosh.Token(woosh.NAME, 'sep', 171, 56, 171, 59),
woosh.Token(woosh.OP, ',', 171, 59, 171, 60),
woosh.Token(woosh.NAME, 'part', 171, 61, 171, 65),
woosh.Token(woosh.OP, '[', 171, 65, 171, 66),
woosh.Token(woosh.NAME, 'index2', 171, 66, 171, 72),
woosh.Token(woosh.OP, '+', 171, 72, 171, 73),
woosh.Token(woosh.NUMBER, '1', 171, 73, 171, 74),
woosh.Token(woosh.OP, ':', 171, 74, 171, 75),
woosh.Token(woosh.OP, ']', 171, 75, 171, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 76, 172, 0),
woosh.Token(woosh.DEDENT, '                    ', 172, 0, 172, 20),
woosh.Token(woosh.NAME, 'else', 172, 20, 172, 24),
woosh.Token(woosh.OP, ':', 172, 24, 172, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 25, 173, 0),
woosh.Token(woosh.INDENT, '                        ', 173, 0, 173, 24),
woosh.Token(woosh.NAME, 'return', 173, 24, 173, 30),
woosh.Token(woosh.NAME, 'part', 173, 31, 173, 35),
woosh.Token(woosh.OP, '[', 173, 35, 173, 36),
woosh.Token(woosh.OP, ':', 173, 36, 173, 37),
woosh.Token(woosh.NAME, 'index2', 173, 37, 173, 43),
woosh.Token(woosh.OP, ']', 173, 43, 173, 44),
woosh.Token(woosh.OP, ',', 173, 44, 173, 45),
woosh.Token(woosh.NAME, 'sep', 173, 46, 173, 49),
woosh.Token(woosh.OP, ',', 173, 49, 173, 50),
woosh.Token(woosh.NAME, 'part', 173, 51, 173, 55),
woosh.Token(woosh.OP, '[', 173, 55, 173, 56),
woosh.Token(woosh.NAME, 'index2', 173, 56, 173, 62),
woosh.Token(woosh.OP, '+', 173, 62, 173, 63),
woosh.Token(woosh.NUMBER, '1', 173, 63, 173, 64),
woosh.Token(woosh.OP, ':', 173, 64, 173, 65),
woosh.Token(woosh.OP, ']', 173, 65, 173, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 66, 174, 0),
woosh.Token(woosh.DEDENT, '        ', 174, 0, 174, 8),
woosh.Token(woosh.DEDENT, '', 174, 8, 174, 8),
woosh.Token(woosh.DEDENT, '', 174, 8, 174, 8),
woosh.Token(woosh.DEDENT, '', 174, 8, 174, 8),
woosh.Token(woosh.NAME, 'drv', 174, 8, 174, 11),
woosh.Token(woosh.OP, '=', 174, 12, 174, 13),
woosh.Token(woosh.NAME, 'root', 174, 14, 174, 18),
woosh.Token(woosh.OP, '=', 174, 19, 174, 20),
woosh.Token(woosh.STRING, "''", 174, 21, 174, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 23, 175, 0),
woosh.Token(woosh.NAME, 'if', 175, 8, 175, 10),
woosh.Token(woosh.NAME, 'second', 175, 11, 175, 17),
woosh.Token(woosh.OP, '==', 175, 18, 175, 20),
woosh.Token(woosh.STRING, "':'", 175, 21, 175, 24),
woosh.Token(woosh.NAME, 'and', 175, 25, 175, 28),
woosh.Token(woosh.NAME, 'first', 175, 29, 175, 34),
woosh.Token(woosh.NAME, 'in', 175, 35, 175, 37),
woosh.Token(woosh.NAME, 'self', 175, 38, 175, 42),
woosh.Token(woosh.OP, '.', 175, 42, 175, 43),
woosh.Token(woosh.NAME, 'drive_letters', 175, 43, 175, 56),
woosh.Token(woosh.OP, ':', 175, 56, 175, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 57, 176, 0),
woosh.Token(woosh.INDENT, '            ', 176, 0, 176, 12),
woosh.Token(woosh.NAME, 'drv', 176, 12, 176, 15),
woosh.Token(woosh.OP, '=', 176, 16, 176, 17),
woosh.Token(woosh.NAME, 'part', 176, 18, 176, 22),
woosh.Token(woosh.OP, '[', 176, 22, 176, 23),
woosh.Token(woosh.OP, ':', 176, 23, 176, 24),
woosh.Token(woosh.NUMBER, '2', 176, 24, 176, 25),
woosh.Token(woosh.OP, ']', 176, 25, 176, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 26, 177, 0),
woosh.Token(woosh.NAME, 'part', 177, 12, 177, 16),
woosh.Token(woosh.OP, '=', 177, 17, 177, 18),
woosh.Token(woosh.NAME, 'part', 177, 19, 177, 23),
woosh.Token(woosh.OP, '[', 177, 23, 177, 24),
woosh.Token(woosh.NUMBER, '2', 177, 24, 177, 25),
woosh.Token(woosh.OP, ':', 177, 25, 177, 26),
woosh.Token(woosh.OP, ']', 177, 26, 177, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 27, 178, 0),
woosh.Token(woosh.NAME, 'first', 178, 12, 178, 17),
woosh.Token(woosh.OP, '=', 178, 18, 178, 19),
woosh.Token(woosh.NAME, 'third', 178, 20, 178, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 25, 179, 0),
woosh.Token(woosh.DEDENT, '        ', 179, 0, 179, 8),
woosh.Token(woosh.NAME, 'if', 179, 8, 179, 10),
woosh.Token(woosh.NAME, 'first', 179, 11, 179, 16),
woosh.Token(woosh.OP, '==', 179, 17, 179, 19),
woosh.Token(woosh.NAME, 'sep', 179, 20, 179, 23),
woosh.Token(woosh.OP, ':', 179, 23, 179, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 24, 180, 0),
woosh.Token(woosh.INDENT, '            ', 180, 0, 180, 12),
woosh.Token(woosh.NAME, 'root', 180, 12, 180, 16),
woosh.Token(woosh.OP, '=', 180, 17, 180, 18),
woosh.Token(woosh.NAME, 'first', 180, 19, 180, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 24, 181, 0),
woosh.Token(woosh.NAME, 'part', 181, 12, 181, 16),
woosh.Token(woosh.OP, '=', 181, 17, 181, 18),
woosh.Token(woosh.NAME, 'part', 181, 19, 181, 23),
woosh.Token(woosh.OP, '.', 181, 23, 181, 24),
woosh.Token(woosh.NAME, 'lstrip', 181, 24, 181, 30),
woosh.Token(woosh.OP, '(', 181, 30, 181, 31),
woosh.Token(woosh.NAME, 'sep', 181, 31, 181, 34),
woosh.Token(woosh.OP, ')', 181, 34, 181, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 35, 182, 0),
woosh.Token(woosh.DEDENT, '        ', 182, 0, 182, 8),
woosh.Token(woosh.NAME, 'return', 182, 8, 182, 14),
woosh.Token(woosh.NAME, 'prefix', 182, 15, 182, 21),
woosh.Token(woosh.OP, '+', 182, 22, 182, 23),
woosh.Token(woosh.NAME, 'drv', 182, 24, 182, 27),
woosh.Token(woosh.OP, ',', 182, 27, 182, 28),
woosh.Token(woosh.NAME, 'root', 182, 29, 182, 33),
woosh.Token(woosh.OP, ',', 182, 33, 182, 34),
woosh.Token(woosh.NAME, 'part', 182, 35, 182, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 39, 183, 0),
woosh.Token(woosh.DEDENT, '    ', 184, 0, 184, 4),
woosh.Token(woosh.NAME, 'def', 184, 4, 184, 7),
woosh.Token(woosh.NAME, 'casefold', 184, 8, 184, 16),
woosh.Token(woosh.OP, '(', 184, 16, 184, 17),
woosh.Token(woosh.NAME, 'self', 184, 17, 184, 21),
woosh.Token(woosh.OP, ',', 184, 21, 184, 22),
woosh.Token(woosh.NAME, 's', 184, 23, 184, 24),
woosh.Token(woosh.OP, ')', 184, 24, 184, 25),
woosh.Token(woosh.OP, ':', 184, 25, 184, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 26, 185, 0),
woosh.Token(woosh.INDENT, '        ', 185, 0, 185, 8),
woosh.Token(woosh.NAME, 'return', 185, 8, 185, 14),
woosh.Token(woosh.NAME, 's', 185, 15, 185, 16),
woosh.Token(woosh.OP, '.', 185, 16, 185, 17),
woosh.Token(woosh.NAME, 'lower', 185, 17, 185, 22),
woosh.Token(woosh.OP, '(', 185, 22, 185, 23),
woosh.Token(woosh.OP, ')', 185, 23, 185, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 24, 186, 0),
woosh.Token(woosh.DEDENT, '    ', 187, 0, 187, 4),
woosh.Token(woosh.NAME, 'def', 187, 4, 187, 7),
woosh.Token(woosh.NAME, 'casefold_parts', 187, 8, 187, 22),
woosh.Token(woosh.OP, '(', 187, 22, 187, 23),
woosh.Token(woosh.NAME, 'self', 187, 23, 187, 27),
woosh.Token(woosh.OP, ',', 187, 27, 187, 28),
woosh.Token(woosh.NAME, 'parts', 187, 29, 187, 34),
woosh.Token(woosh.OP, ')', 187, 34, 187, 35),
woosh.Token(woosh.OP, ':', 187, 35, 187, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 36, 188, 0),
woosh.Token(woosh.INDENT, '        ', 188, 0, 188, 8),
woosh.Token(woosh.NAME, 'return', 188, 8, 188, 14),
woosh.Token(woosh.OP, '[', 188, 15, 188, 16),
woosh.Token(woosh.NAME, 'p', 188, 16, 188, 17),
woosh.Token(woosh.OP, '.', 188, 17, 188, 18),
woosh.Token(woosh.NAME, 'lower', 188, 18, 188, 23),
woosh.Token(woosh.OP, '(', 188, 23, 188, 24),
woosh.Token(woosh.OP, ')', 188, 24, 188, 25),
woosh.Token(woosh.NAME, 'for', 188, 26, 188, 29),
woosh.Token(woosh.NAME, 'p', 188, 30, 188, 31),
woosh.Token(woosh.NAME, 'in', 188, 32, 188, 34),
woosh.Token(woosh.NAME, 'parts', 188, 35, 188, 40),
woosh.Token(woosh.OP, ']', 188, 40, 188, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 41, 189, 0),
woosh.Token(woosh.DEDENT, '    ', 190, 0, 190, 4),
woosh.Token(woosh.NAME, 'def', 190, 4, 190, 7),
woosh.Token(woosh.NAME, 'compile_pattern', 190, 8, 190, 23),
woosh.Token(woosh.OP, '(', 190, 23, 190, 24),
woosh.Token(woosh.NAME, 'self', 190, 24, 190, 28),
woosh.Token(woosh.OP, ',', 190, 28, 190, 29),
woosh.Token(woosh.NAME, 'pattern', 190, 30, 190, 37),
woosh.Token(woosh.OP, ')', 190, 37, 190, 38),
woosh.Token(woosh.OP, ':', 190, 38, 190, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 39, 191, 0),
woosh.Token(woosh.INDENT, '        ', 191, 0, 191, 8),
woosh.Token(woosh.NAME, 'return', 191, 8, 191, 14),
woosh.Token(woosh.NAME, 're', 191, 15, 191, 17),
woosh.Token(woosh.OP, '.', 191, 17, 191, 18),
woosh.Token(woosh.NAME, 'compile', 191, 18, 191, 25),
woosh.Token(woosh.OP, '(', 191, 25, 191, 26),
woosh.Token(woosh.NAME, 'fnmatch', 191, 26, 191, 33),
woosh.Token(woosh.OP, '.', 191, 33, 191, 34),
woosh.Token(woosh.NAME, 'translate', 191, 34, 191, 43),
woosh.Token(woosh.OP, '(', 191, 43, 191, 44),
woosh.Token(woosh.NAME, 'pattern', 191, 44, 191, 51),
woosh.Token(woosh.OP, ')', 191, 51, 191, 52),
woosh.Token(woosh.OP, ',', 191, 52, 191, 53),
woosh.Token(woosh.NAME, 're', 191, 54, 191, 56),
woosh.Token(woosh.OP, '.', 191, 56, 191, 57),
woosh.Token(woosh.NAME, 'IGNORECASE', 191, 57, 191, 67),
woosh.Token(woosh.OP, ')', 191, 67, 191, 68),
woosh.Token(woosh.OP, '.', 191, 68, 191, 69),
woosh.Token(woosh.NAME, 'fullmatch', 191, 69, 191, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 78, 192, 0),
woosh.Token(woosh.DEDENT, '    ', 193, 0, 193, 4),
woosh.Token(woosh.NAME, 'def', 193, 4, 193, 7),
woosh.Token(woosh.NAME, 'resolve', 193, 8, 193, 15),
woosh.Token(woosh.OP, '(', 193, 15, 193, 16),
woosh.Token(woosh.NAME, 'self', 193, 16, 193, 20),
woosh.Token(woosh.OP, ',', 193, 20, 193, 21),
woosh.Token(woosh.NAME, 'path', 193, 22, 193, 26),
woosh.Token(woosh.OP, ',', 193, 26, 193, 27),
woosh.Token(woosh.NAME, 'strict', 193, 28, 193, 34),
woosh.Token(woosh.OP, '=', 193, 34, 193, 35),
woosh.Token(woosh.NAME, 'False', 193, 35, 193, 40),
woosh.Token(woosh.OP, ')', 193, 40, 193, 41),
woosh.Token(woosh.OP, ':', 193, 41, 193, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 42, 194, 0),
woosh.Token(woosh.INDENT, '        ', 194, 0, 194, 8),
woosh.Token(woosh.NAME, 's', 194, 8, 194, 9),
woosh.Token(woosh.OP, '=', 194, 10, 194, 11),
woosh.Token(woosh.NAME, 'str', 194, 12, 194, 15),
woosh.Token(woosh.OP, '(', 194, 15, 194, 16),
woosh.Token(woosh.NAME, 'path', 194, 16, 194, 20),
woosh.Token(woosh.OP, ')', 194, 20, 194, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 21, 195, 0),
woosh.Token(woosh.NAME, 'if', 195, 8, 195, 10),
woosh.Token(woosh.NAME, 'not', 195, 11, 195, 14),
woosh.Token(woosh.NAME, 's', 195, 15, 195, 16),
woosh.Token(woosh.OP, ':', 195, 16, 195, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 17, 196, 0),
woosh.Token(woosh.INDENT, '            ', 196, 0, 196, 12),
woosh.Token(woosh.NAME, 'return', 196, 12, 196, 18),
woosh.Token(woosh.NAME, 'os', 196, 19, 196, 21),
woosh.Token(woosh.OP, '.', 196, 21, 196, 22),
woosh.Token(woosh.NAME, 'getcwd', 196, 22, 196, 28),
woosh.Token(woosh.OP, '(', 196, 28, 196, 29),
woosh.Token(woosh.OP, ')', 196, 29, 196, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 30, 197, 0),
woosh.Token(woosh.DEDENT, '        ', 197, 0, 197, 8),
woosh.Token(woosh.NAME, 'previous_s', 197, 8, 197, 18),
woosh.Token(woosh.OP, '=', 197, 19, 197, 20),
woosh.Token(woosh.NAME, 'None', 197, 21, 197, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 25, 198, 0),
woosh.Token(woosh.NAME, 'if', 198, 8, 198, 10),
woosh.Token(woosh.NAME, '_getfinalpathname', 198, 11, 198, 28),
woosh.Token(woosh.NAME, 'is', 198, 29, 198, 31),
woosh.Token(woosh.NAME, 'not', 198, 32, 198, 35),
woosh.Token(woosh.NAME, 'None', 198, 36, 198, 40),
woosh.Token(woosh.OP, ':', 198, 40, 198, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 41, 199, 0),
woosh.Token(woosh.INDENT, '            ', 199, 0, 199, 12),
woosh.Token(woosh.NAME, 'if', 199, 12, 199, 14),
woosh.Token(woosh.NAME, 'strict', 199, 15, 199, 21),
woosh.Token(woosh.OP, ':', 199, 21, 199, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 199, 22, 200, 0),
woosh.Token(woosh.INDENT, '                ', 200, 0, 200, 16),
woosh.Token(woosh.NAME, 'return', 200, 16, 200, 22),
woosh.Token(woosh.NAME, 'self', 200, 23, 200, 27),
woosh.Token(woosh.OP, '.', 200, 27, 200, 28),
woosh.Token(woosh.NAME, '_ext_to_normal', 200, 28, 200, 42),
woosh.Token(woosh.OP, '(', 200, 42, 200, 43),
woosh.Token(woosh.NAME, '_getfinalpathname', 200, 43, 200, 60),
woosh.Token(woosh.OP, '(', 200, 60, 200, 61),
woosh.Token(woosh.NAME, 's', 200, 61, 200, 62),
woosh.Token(woosh.OP, ')', 200, 62, 200, 63),
woosh.Token(woosh.OP, ')', 200, 63, 200, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 64, 201, 0),
woosh.Token(woosh.DEDENT, '            ', 201, 0, 201, 12),
woosh.Token(woosh.NAME, 'else', 201, 12, 201, 16),
woosh.Token(woosh.OP, ':', 201, 16, 201, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 17, 202, 0),
woosh.Token(woosh.INDENT, '                ', 202, 0, 202, 16),
woosh.Token(woosh.NAME, 'tail_parts', 202, 16, 202, 26),
woosh.Token(woosh.OP, '=', 202, 27, 202, 28),
woosh.Token(woosh.OP, '[', 202, 29, 202, 30),
woosh.Token(woosh.OP, ']', 202, 30, 202, 31),
woosh.Token(woosh.COMMENT, '# End of the path after the first one not found', 202, 33, 202, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 202, 80, 203, 0),
woosh.Token(woosh.NAME, 'while', 203, 16, 203, 21),
woosh.Token(woosh.NAME, 'True', 203, 22, 203, 26),
woosh.Token(woosh.OP, ':', 203, 26, 203, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 27, 204, 0),
woosh.Token(woosh.INDENT, '                    ', 204, 0, 204, 20),
woosh.Token(woosh.NAME, 'try', 204, 20, 204, 23),
woosh.Token(woosh.OP, ':', 204, 23, 204, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 24, 205, 0),
woosh.Token(woosh.INDENT, '                        ', 205, 0, 205, 24),
woosh.Token(woosh.NAME, 's', 205, 24, 205, 25),
woosh.Token(woosh.OP, '=', 205, 26, 205, 27),
woosh.Token(woosh.NAME, 'self', 205, 28, 205, 32),
woosh.Token(woosh.OP, '.', 205, 32, 205, 33),
woosh.Token(woosh.NAME, '_ext_to_normal', 205, 33, 205, 47),
woosh.Token(woosh.OP, '(', 205, 47, 205, 48),
woosh.Token(woosh.NAME, '_getfinalpathname', 205, 48, 205, 65),
woosh.Token(woosh.OP, '(', 205, 65, 205, 66),
woosh.Token(woosh.NAME, 's', 205, 66, 205, 67),
woosh.Token(woosh.OP, ')', 205, 67, 205, 68),
woosh.Token(woosh.OP, ')', 205, 68, 205, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 69, 206, 0),
woosh.Token(woosh.DEDENT, '                    ', 206, 0, 206, 20),
woosh.Token(woosh.NAME, 'except', 206, 20, 206, 26),
woosh.Token(woosh.NAME, 'FileNotFoundError', 206, 27, 206, 44),
woosh.Token(woosh.OP, ':', 206, 44, 206, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 45, 207, 0),
woosh.Token(woosh.INDENT, '                        ', 207, 0, 207, 24),
woosh.Token(woosh.NAME, 'previous_s', 207, 24, 207, 34),
woosh.Token(woosh.OP, '=', 207, 35, 207, 36),
woosh.Token(woosh.NAME, 's', 207, 37, 207, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 38, 208, 0),
woosh.Token(woosh.NAME, 's', 208, 24, 208, 25),
woosh.Token(woosh.OP, ',', 208, 25, 208, 26),
woosh.Token(woosh.NAME, 'tail', 208, 27, 208, 31),
woosh.Token(woosh.OP, '=', 208, 32, 208, 33),
woosh.Token(woosh.NAME, 'os', 208, 34, 208, 36),
woosh.Token(woosh.OP, '.', 208, 36, 208, 37),
woosh.Token(woosh.NAME, 'path', 208, 37, 208, 41),
woosh.Token(woosh.OP, '.', 208, 41, 208, 42),
woosh.Token(woosh.NAME, 'split', 208, 42, 208, 47),
woosh.Token(woosh.OP, '(', 208, 47, 208, 48),
woosh.Token(woosh.NAME, 's', 208, 48, 208, 49),
woosh.Token(woosh.OP, ')', 208, 49, 208, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 50, 209, 0),
woosh.Token(woosh.NAME, 'tail_parts', 209, 24, 209, 34),
woosh.Token(woosh.OP, '.', 209, 34, 209, 35),
woosh.Token(woosh.NAME, 'append', 209, 35, 209, 41),
woosh.Token(woosh.OP, '(', 209, 41, 209, 42),
woosh.Token(woosh.NAME, 'tail', 209, 42, 209, 46),
woosh.Token(woosh.OP, ')', 209, 46, 209, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 47, 210, 0),
woosh.Token(woosh.NAME, 'if', 210, 24, 210, 26),
woosh.Token(woosh.NAME, 'previous_s', 210, 27, 210, 37),
woosh.Token(woosh.OP, '==', 210, 38, 210, 40),
woosh.Token(woosh.NAME, 's', 210, 41, 210, 42),
woosh.Token(woosh.OP, ':', 210, 42, 210, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 43, 211, 0),
woosh.Token(woosh.INDENT, '                            ', 211, 0, 211, 28),
woosh.Token(woosh.NAME, 'return', 211, 28, 211, 34),
woosh.Token(woosh.NAME, 'path', 211, 35, 211, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 39, 212, 0),
woosh.Token(woosh.DEDENT, '                    ', 212, 0, 212, 20),
woosh.Token(woosh.DEDENT, '', 212, 20, 212, 20),
woosh.Token(woosh.NAME, 'else', 212, 20, 212, 24),
woosh.Token(woosh.OP, ':', 212, 24, 212, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 25, 213, 0),
woosh.Token(woosh.INDENT, '                        ', 213, 0, 213, 24),
woosh.Token(woosh.NAME, 'return', 213, 24, 213, 30),
woosh.Token(woosh.NAME, 'os', 213, 31, 213, 33),
woosh.Token(woosh.OP, '.', 213, 33, 213, 34),
woosh.Token(woosh.NAME, 'path', 213, 34, 213, 38),
woosh.Token(woosh.OP, '.', 213, 38, 213, 39),
woosh.Token(woosh.NAME, 'join', 213, 39, 213, 43),
woosh.Token(woosh.OP, '(', 213, 43, 213, 44),
woosh.Token(woosh.NAME, 's', 213, 44, 213, 45),
woosh.Token(woosh.OP, ',', 213, 45, 213, 46),
woosh.Token(woosh.OP, '*', 213, 47, 213, 48),
woosh.Token(woosh.NAME, 'reversed', 213, 48, 213, 56),
woosh.Token(woosh.OP, '(', 213, 56, 213, 57),
woosh.Token(woosh.NAME, 'tail_parts', 213, 57, 213, 67),
woosh.Token(woosh.OP, ')', 213, 67, 213, 68),
woosh.Token(woosh.OP, ')', 213, 68, 213, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 69, 214, 0),
woosh.Token(woosh.COMMENT, '# Means fallback on absolute', 214, 8, 214, 36),
woosh.Token(woosh.DEDENT, '        ', 215, 0, 215, 8),
woosh.Token(woosh.DEDENT, '', 215, 8, 215, 8),
woosh.Token(woosh.DEDENT, '', 215, 8, 215, 8),
woosh.Token(woosh.DEDENT, '', 215, 8, 215, 8),
woosh.Token(woosh.NAME, 'return', 215, 8, 215, 14),
woosh.Token(woosh.NAME, 'None', 215, 15, 215, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 19, 216, 0),
woosh.Token(woosh.DEDENT, '    ', 217, 0, 217, 4),
woosh.Token(woosh.NAME, 'def', 217, 4, 217, 7),
woosh.Token(woosh.NAME, '_split_extended_path', 217, 8, 217, 28),
woosh.Token(woosh.OP, '(', 217, 28, 217, 29),
woosh.Token(woosh.NAME, 'self', 217, 29, 217, 33),
woosh.Token(woosh.OP, ',', 217, 33, 217, 34),
woosh.Token(woosh.NAME, 's', 217, 35, 217, 36),
woosh.Token(woosh.OP, ',', 217, 36, 217, 37),
woosh.Token(woosh.NAME, 'ext_prefix', 217, 38, 217, 48),
woosh.Token(woosh.OP, '=', 217, 48, 217, 49),
woosh.Token(woosh.NAME, 'ext_namespace_prefix', 217, 49, 217, 69),
woosh.Token(woosh.OP, ')', 217, 69, 217, 70),
woosh.Token(woosh.OP, ':', 217, 70, 217, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 71, 218, 0),
woosh.Token(woosh.INDENT, '        ', 218, 0, 218, 8),
woosh.Token(woosh.NAME, 'prefix', 218, 8, 218, 14),
woosh.Token(woosh.OP, '=', 218, 15, 218, 16),
woosh.Token(woosh.STRING, "''", 218, 17, 218, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 19, 219, 0),
woosh.Token(woosh.NAME, 'if', 219, 8, 219, 10),
woosh.Token(woosh.NAME, 's', 219, 11, 219, 12),
woosh.Token(woosh.OP, '.', 219, 12, 219, 13),
woosh.Token(woosh.NAME, 'startswith', 219, 13, 219, 23),
woosh.Token(woosh.OP, '(', 219, 23, 219, 24),
woosh.Token(woosh.NAME, 'ext_prefix', 219, 24, 219, 34),
woosh.Token(woosh.OP, ')', 219, 34, 219, 35),
woosh.Token(woosh.OP, ':', 219, 35, 219, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 36, 220, 0),
woosh.Token(woosh.INDENT, '            ', 220, 0, 220, 12),
woosh.Token(woosh.NAME, 'prefix', 220, 12, 220, 18),
woosh.Token(woosh.OP, '=', 220, 19, 220, 20),
woosh.Token(woosh.NAME, 's', 220, 21, 220, 22),
woosh.Token(woosh.OP, '[', 220, 22, 220, 23),
woosh.Token(woosh.OP, ':', 220, 23, 220, 24),
woosh.Token(woosh.NUMBER, '4', 220, 24, 220, 25),
woosh.Token(woosh.OP, ']', 220, 25, 220, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 26, 221, 0),
woosh.Token(woosh.NAME, 's', 221, 12, 221, 13),
woosh.Token(woosh.OP, '=', 221, 14, 221, 15),
woosh.Token(woosh.NAME, 's', 221, 16, 221, 17),
woosh.Token(woosh.OP, '[', 221, 17, 221, 18),
woosh.Token(woosh.NUMBER, '4', 221, 18, 221, 19),
woosh.Token(woosh.OP, ':', 221, 19, 221, 20),
woosh.Token(woosh.OP, ']', 221, 20, 221, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 21, 222, 0),
woosh.Token(woosh.NAME, 'if', 222, 12, 222, 14),
woosh.Token(woosh.NAME, 's', 222, 15, 222, 16),
woosh.Token(woosh.OP, '.', 222, 16, 222, 17),
woosh.Token(woosh.NAME, 'startswith', 222, 17, 222, 27),
woosh.Token(woosh.OP, '(', 222, 27, 222, 28),
woosh.Token(woosh.STRING, "'UNC\\\\'", 222, 28, 222, 35),
woosh.Token(woosh.OP, ')', 222, 35, 222, 36),
woosh.Token(woosh.OP, ':', 222, 36, 222, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 37, 223, 0),
woosh.Token(woosh.INDENT, '                ', 223, 0, 223, 16),
woosh.Token(woosh.NAME, 'prefix', 223, 16, 223, 22),
woosh.Token(woosh.OP, '+=', 223, 23, 223, 25),
woosh.Token(woosh.NAME, 's', 223, 26, 223, 27),
woosh.Token(woosh.OP, '[', 223, 27, 223, 28),
woosh.Token(woosh.OP, ':', 223, 28, 223, 29),
woosh.Token(woosh.NUMBER, '3', 223, 29, 223, 30),
woosh.Token(woosh.OP, ']', 223, 30, 223, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 31, 224, 0),
woosh.Token(woosh.NAME, 's', 224, 16, 224, 17),
woosh.Token(woosh.OP, '=', 224, 18, 224, 19),
woosh.Token(woosh.STRING, "'\\\\'", 224, 20, 224, 24),
woosh.Token(woosh.OP, '+', 224, 25, 224, 26),
woosh.Token(woosh.NAME, 's', 224, 27, 224, 28),
woosh.Token(woosh.OP, '[', 224, 28, 224, 29),
woosh.Token(woosh.NUMBER, '3', 224, 29, 224, 30),
woosh.Token(woosh.OP, ':', 224, 30, 224, 31),
woosh.Token(woosh.OP, ']', 224, 31, 224, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 32, 225, 0),
woosh.Token(woosh.DEDENT, '        ', 225, 0, 225, 8),
woosh.Token(woosh.DEDENT, '', 225, 8, 225, 8),
woosh.Token(woosh.NAME, 'return', 225, 8, 225, 14),
woosh.Token(woosh.NAME, 'prefix', 225, 15, 225, 21),
woosh.Token(woosh.OP, ',', 225, 21, 225, 22),
woosh.Token(woosh.NAME, 's', 225, 23, 225, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 24, 226, 0),
woosh.Token(woosh.DEDENT, '    ', 227, 0, 227, 4),
woosh.Token(woosh.NAME, 'def', 227, 4, 227, 7),
woosh.Token(woosh.NAME, '_ext_to_normal', 227, 8, 227, 22),
woosh.Token(woosh.OP, '(', 227, 22, 227, 23),
woosh.Token(woosh.NAME, 'self', 227, 23, 227, 27),
woosh.Token(woosh.OP, ',', 227, 27, 227, 28),
woosh.Token(woosh.NAME, 's', 227, 29, 227, 30),
woosh.Token(woosh.OP, ')', 227, 30, 227, 31),
woosh.Token(woosh.OP, ':', 227, 31, 227, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 32, 228, 0),
woosh.Token(woosh.COMMENT, '# Turn back an extended path into a normal DOS-like path', 228, 8, 228, 64),
woosh.Token(woosh.INDENT, '        ', 229, 0, 229, 8),
woosh.Token(woosh.NAME, 'return', 229, 8, 229, 14),
woosh.Token(woosh.NAME, 'self', 229, 15, 229, 19),
woosh.Token(woosh.OP, '.', 229, 19, 229, 20),
woosh.Token(woosh.NAME, '_split_extended_path', 229, 20, 229, 40),
woosh.Token(woosh.OP, '(', 229, 40, 229, 41),
woosh.Token(woosh.NAME, 's', 229, 41, 229, 42),
woosh.Token(woosh.OP, ')', 229, 42, 229, 43),
woosh.Token(woosh.OP, '[', 229, 43, 229, 44),
woosh.Token(woosh.NUMBER, '1', 229, 44, 229, 45),
woosh.Token(woosh.OP, ']', 229, 45, 229, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 46, 230, 0),
woosh.Token(woosh.DEDENT, '    ', 231, 0, 231, 4),
woosh.Token(woosh.NAME, 'def', 231, 4, 231, 7),
woosh.Token(woosh.NAME, 'is_reserved', 231, 8, 231, 19),
woosh.Token(woosh.OP, '(', 231, 19, 231, 20),
woosh.Token(woosh.NAME, 'self', 231, 20, 231, 24),
woosh.Token(woosh.OP, ',', 231, 24, 231, 25),
woosh.Token(woosh.NAME, 'parts', 231, 26, 231, 31),
woosh.Token(woosh.OP, ')', 231, 31, 231, 32),
woosh.Token(woosh.OP, ':', 231, 32, 231, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 33, 232, 0),
woosh.Token(woosh.COMMENT, '# NOTE: the rules for reserved names seem somewhat complicated', 232, 8, 232, 70),
woosh.Token(woosh.COMMENT, '# (e.g. r"..\\NUL" is reserved but not r"foo\\NUL").', 233, 8, 233, 58),
woosh.Token(woosh.COMMENT, '# We err on the side of caution and return True for paths which are', 234, 8, 234, 75),
woosh.Token(woosh.COMMENT, '# not considered reserved by Windows.', 235, 8, 235, 45),
woosh.Token(woosh.INDENT, '        ', 236, 0, 236, 8),
woosh.Token(woosh.NAME, 'if', 236, 8, 236, 10),
woosh.Token(woosh.NAME, 'not', 236, 11, 236, 14),
woosh.Token(woosh.NAME, 'parts', 236, 15, 236, 20),
woosh.Token(woosh.OP, ':', 236, 20, 236, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 21, 237, 0),
woosh.Token(woosh.INDENT, '            ', 237, 0, 237, 12),
woosh.Token(woosh.NAME, 'return', 237, 12, 237, 18),
woosh.Token(woosh.NAME, 'False', 237, 19, 237, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 24, 238, 0),
woosh.Token(woosh.DEDENT, '        ', 238, 0, 238, 8),
woosh.Token(woosh.NAME, 'if', 238, 8, 238, 10),
woosh.Token(woosh.NAME, 'parts', 238, 11, 238, 16),
woosh.Token(woosh.OP, '[', 238, 16, 238, 17),
woosh.Token(woosh.NUMBER, '0', 238, 17, 238, 18),
woosh.Token(woosh.OP, ']', 238, 18, 238, 19),
woosh.Token(woosh.OP, '.', 238, 19, 238, 20),
woosh.Token(woosh.NAME, 'startswith', 238, 20, 238, 30),
woosh.Token(woosh.OP, '(', 238, 30, 238, 31),
woosh.Token(woosh.STRING, "'\\\\\\\\'", 238, 31, 238, 37),
woosh.Token(woosh.OP, ')', 238, 37, 238, 38),
woosh.Token(woosh.OP, ':', 238, 38, 238, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 39, 239, 0),
woosh.Token(woosh.COMMENT, '# UNC paths are never reserved', 239, 12, 239, 42),
woosh.Token(woosh.INDENT, '            ', 240, 0, 240, 12),
woosh.Token(woosh.NAME, 'return', 240, 12, 240, 18),
woosh.Token(woosh.NAME, 'False', 240, 19, 240, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 24, 241, 0),
woosh.Token(woosh.DEDENT, '        ', 241, 0, 241, 8),
woosh.Token(woosh.NAME, 'return', 241, 8, 241, 14),
woosh.Token(woosh.NAME, 'parts', 241, 15, 241, 20),
woosh.Token(woosh.OP, '[', 241, 20, 241, 21),
woosh.Token(woosh.OP, '-', 241, 21, 241, 22),
woosh.Token(woosh.NUMBER, '1', 241, 22, 241, 23),
woosh.Token(woosh.OP, ']', 241, 23, 241, 24),
woosh.Token(woosh.OP, '.', 241, 24, 241, 25),
woosh.Token(woosh.NAME, 'partition', 241, 25, 241, 34),
woosh.Token(woosh.OP, '(', 241, 34, 241, 35),
woosh.Token(woosh.STRING, "'.'", 241, 35, 241, 38),
woosh.Token(woosh.OP, ')', 241, 38, 241, 39),
woosh.Token(woosh.OP, '[', 241, 39, 241, 40),
woosh.Token(woosh.NUMBER, '0', 241, 40, 241, 41),
woosh.Token(woosh.OP, ']', 241, 41, 241, 42),
woosh.Token(woosh.OP, '.', 241, 42, 241, 43),
woosh.Token(woosh.NAME, 'upper', 241, 43, 241, 48),
woosh.Token(woosh.OP, '(', 241, 48, 241, 49),
woosh.Token(woosh.OP, ')', 241, 49, 241, 50),
woosh.Token(woosh.NAME, 'in', 241, 51, 241, 53),
woosh.Token(woosh.NAME, 'self', 241, 54, 241, 58),
woosh.Token(woosh.OP, '.', 241, 58, 241, 59),
woosh.Token(woosh.NAME, 'reserved_names', 241, 59, 241, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 73, 242, 0),
woosh.Token(woosh.DEDENT, '    ', 243, 0, 243, 4),
woosh.Token(woosh.NAME, 'def', 243, 4, 243, 7),
woosh.Token(woosh.NAME, 'make_uri', 243, 8, 243, 16),
woosh.Token(woosh.OP, '(', 243, 16, 243, 17),
woosh.Token(woosh.NAME, 'self', 243, 17, 243, 21),
woosh.Token(woosh.OP, ',', 243, 21, 243, 22),
woosh.Token(woosh.NAME, 'path', 243, 23, 243, 27),
woosh.Token(woosh.OP, ')', 243, 27, 243, 28),
woosh.Token(woosh.OP, ':', 243, 28, 243, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 29, 244, 0),
woosh.Token(woosh.COMMENT, '# Under Windows, file URIs use the UTF-8 encoding.', 244, 8, 244, 58),
woosh.Token(woosh.INDENT, '        ', 245, 0, 245, 8),
woosh.Token(woosh.NAME, 'drive', 245, 8, 245, 13),
woosh.Token(woosh.OP, '=', 245, 14, 245, 15),
woosh.Token(woosh.NAME, 'path', 245, 16, 245, 20),
woosh.Token(woosh.OP, '.', 245, 20, 245, 21),
woosh.Token(woosh.NAME, 'drive', 245, 21, 245, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 26, 246, 0),
woosh.Token(woosh.NAME, 'if', 246, 8, 246, 10),
woosh.Token(woosh.NAME, 'len', 246, 11, 246, 14),
woosh.Token(woosh.OP, '(', 246, 14, 246, 15),
woosh.Token(woosh.NAME, 'drive', 246, 15, 246, 20),
woosh.Token(woosh.OP, ')', 246, 20, 246, 21),
woosh.Token(woosh.OP, '==', 246, 22, 246, 24),
woosh.Token(woosh.NUMBER, '2', 246, 25, 246, 26),
woosh.Token(woosh.NAME, 'and', 246, 27, 246, 30),
woosh.Token(woosh.NAME, 'drive', 246, 31, 246, 36),
woosh.Token(woosh.OP, '[', 246, 36, 246, 37),
woosh.Token(woosh.NUMBER, '1', 246, 37, 246, 38),
woosh.Token(woosh.OP, ']', 246, 38, 246, 39),
woosh.Token(woosh.OP, '==', 246, 40, 246, 42),
woosh.Token(woosh.STRING, "':'", 246, 43, 246, 46),
woosh.Token(woosh.OP, ':', 246, 46, 246, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 47, 247, 0),
woosh.Token(woosh.COMMENT, "# It's a path on a local drive => 'file:///c:/a/b'", 247, 12, 247, 62),
woosh.Token(woosh.INDENT, '            ', 248, 0, 248, 12),
woosh.Token(woosh.NAME, 'rest', 248, 12, 248, 16),
woosh.Token(woosh.OP, '=', 248, 17, 248, 18),
woosh.Token(woosh.NAME, 'path', 248, 19, 248, 23),
woosh.Token(woosh.OP, '.', 248, 23, 248, 24),
woosh.Token(woosh.NAME, 'as_posix', 248, 24, 248, 32),
woosh.Token(woosh.OP, '(', 248, 32, 248, 33),
woosh.Token(woosh.OP, ')', 248, 33, 248, 34),
woosh.Token(woosh.OP, '[', 248, 34, 248, 35),
woosh.Token(woosh.NUMBER, '2', 248, 35, 248, 36),
woosh.Token(woosh.OP, ':', 248, 36, 248, 37),
woosh.Token(woosh.OP, ']', 248, 37, 248, 38),
woosh.Token(woosh.OP, '.', 248, 38, 248, 39),
woosh.Token(woosh.NAME, 'lstrip', 248, 39, 248, 45),
woosh.Token(woosh.OP, '(', 248, 45, 248, 46),
woosh.Token(woosh.STRING, "'/'", 248, 46, 248, 49),
woosh.Token(woosh.OP, ')', 248, 49, 248, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 50, 249, 0),
woosh.Token(woosh.NAME, 'return', 249, 12, 249, 18),
woosh.Token(woosh.STRING, "'file:///%s/%s'", 249, 19, 249, 34),
woosh.Token(woosh.OP, '%', 249, 35, 249, 36),
woosh.Token(woosh.OP, '(', 249, 37, 249, 38),
woosh.Token(woosh.NAME, 'drive', 250, 16, 250, 21),
woosh.Token(woosh.OP, ',', 250, 21, 250, 22),
woosh.Token(woosh.NAME, 'urlquote_from_bytes', 250, 23, 250, 42),
woosh.Token(woosh.OP, '(', 250, 42, 250, 43),
woosh.Token(woosh.NAME, 'rest', 250, 43, 250, 47),
woosh.Token(woosh.OP, '.', 250, 47, 250, 48),
woosh.Token(woosh.NAME, 'encode', 250, 48, 250, 54),
woosh.Token(woosh.OP, '(', 250, 54, 250, 55),
woosh.Token(woosh.STRING, "'utf-8'", 250, 55, 250, 62),
woosh.Token(woosh.OP, ')', 250, 62, 250, 63),
woosh.Token(woosh.OP, ')', 250, 63, 250, 64),
woosh.Token(woosh.OP, ')', 250, 64, 250, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 65, 251, 0),
woosh.Token(woosh.DEDENT, '        ', 251, 0, 251, 8),
woosh.Token(woosh.NAME, 'else', 251, 8, 251, 12),
woosh.Token(woosh.OP, ':', 251, 12, 251, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 13, 252, 0),
woosh.Token(woosh.COMMENT, "# It's a path on a network drive => 'file://host/share/a/b'", 252, 12, 252, 71),
woosh.Token(woosh.INDENT, '            ', 253, 0, 253, 12),
woosh.Token(woosh.NAME, 'return', 253, 12, 253, 18),
woosh.Token(woosh.STRING, "'file:'", 253, 19, 253, 26),
woosh.Token(woosh.OP, '+', 253, 27, 253, 28),
woosh.Token(woosh.NAME, 'urlquote_from_bytes', 253, 29, 253, 48),
woosh.Token(woosh.OP, '(', 253, 48, 253, 49),
woosh.Token(woosh.NAME, 'path', 253, 49, 253, 53),
woosh.Token(woosh.OP, '.', 253, 53, 253, 54),
woosh.Token(woosh.NAME, 'as_posix', 253, 54, 253, 62),
woosh.Token(woosh.OP, '(', 253, 62, 253, 63),
woosh.Token(woosh.OP, ')', 253, 63, 253, 64),
woosh.Token(woosh.OP, '.', 253, 64, 253, 65),
woosh.Token(woosh.NAME, 'encode', 253, 65, 253, 71),
woosh.Token(woosh.OP, '(', 253, 71, 253, 72),
woosh.Token(woosh.STRING, "'utf-8'", 253, 72, 253, 79),
woosh.Token(woosh.OP, ')', 253, 79, 253, 80),
woosh.Token(woosh.OP, ')', 253, 80, 253, 81),
woosh.Token(woosh.NEWLINE, '\r\n', 253, 81, 254, 0),
woosh.Token(woosh.DEDENT, '    ', 255, 0, 255, 4),
woosh.Token(woosh.DEDENT, '', 255, 4, 255, 4),
woosh.Token(woosh.NAME, 'def', 255, 4, 255, 7),
woosh.Token(woosh.NAME, 'gethomedir', 255, 8, 255, 18),
woosh.Token(woosh.OP, '(', 255, 18, 255, 19),
woosh.Token(woosh.NAME, 'self', 255, 19, 255, 23),
woosh.Token(woosh.OP, ',', 255, 23, 255, 24),
woosh.Token(woosh.NAME, 'username', 255, 25, 255, 33),
woosh.Token(woosh.OP, ')', 255, 33, 255, 34),
woosh.Token(woosh.OP, ':', 255, 34, 255, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 35, 256, 0),
woosh.Token(woosh.INDENT, '        ', 256, 0, 256, 8),
woosh.Token(woosh.NAME, 'if', 256, 8, 256, 10),
woosh.Token(woosh.STRING, "'USERPROFILE'", 256, 11, 256, 24),
woosh.Token(woosh.NAME, 'in', 256, 25, 256, 27),
woosh.Token(woosh.NAME, 'os', 256, 28, 256, 30),
woosh.Token(woosh.OP, '.', 256, 30, 256, 31),
woosh.Token(woosh.NAME, 'environ', 256, 31, 256, 38),
woosh.Token(woosh.OP, ':', 256, 38, 256, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 39, 257, 0),
woosh.Token(woosh.INDENT, '            ', 257, 0, 257, 12),
woosh.Token(woosh.NAME, 'userhome', 257, 12, 257, 20),
woosh.Token(woosh.OP, '=', 257, 21, 257, 22),
woosh.Token(woosh.NAME, 'os', 257, 23, 257, 25),
woosh.Token(woosh.OP, '.', 257, 25, 257, 26),
woosh.Token(woosh.NAME, 'environ', 257, 26, 257, 33),
woosh.Token(woosh.OP, '[', 257, 33, 257, 34),
woosh.Token(woosh.STRING, "'USERPROFILE'", 257, 34, 257, 47),
woosh.Token(woosh.OP, ']', 257, 47, 257, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 48, 258, 0),
woosh.Token(woosh.DEDENT, '        ', 258, 0, 258, 8),
woosh.Token(woosh.NAME, 'elif', 258, 8, 258, 12),
woosh.Token(woosh.STRING, "'HOMEPATH'", 258, 13, 258, 23),
woosh.Token(woosh.NAME, 'in', 258, 24, 258, 26),
woosh.Token(woosh.NAME, 'os', 258, 27, 258, 29),
woosh.Token(woosh.OP, '.', 258, 29, 258, 30),
woosh.Token(woosh.NAME, 'environ', 258, 30, 258, 37),
woosh.Token(woosh.OP, ':', 258, 37, 258, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 38, 259, 0),
woosh.Token(woosh.INDENT, '            ', 259, 0, 259, 12),
woosh.Token(woosh.NAME, 'try', 259, 12, 259, 15),
woosh.Token(woosh.OP, ':', 259, 15, 259, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 16, 260, 0),
woosh.Token(woosh.INDENT, '                ', 260, 0, 260, 16),
woosh.Token(woosh.NAME, 'drv', 260, 16, 260, 19),
woosh.Token(woosh.OP, '=', 260, 20, 260, 21),
woosh.Token(woosh.NAME, 'os', 260, 22, 260, 24),
woosh.Token(woosh.OP, '.', 260, 24, 260, 25),
woosh.Token(woosh.NAME, 'environ', 260, 25, 260, 32),
woosh.Token(woosh.OP, '[', 260, 32, 260, 33),
woosh.Token(woosh.STRING, "'HOMEDRIVE'", 260, 33, 260, 44),
woosh.Token(woosh.OP, ']', 260, 44, 260, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 260, 45, 261, 0),
woosh.Token(woosh.DEDENT, '            ', 261, 0, 261, 12),
woosh.Token(woosh.NAME, 'except', 261, 12, 261, 18),
woosh.Token(woosh.NAME, 'KeyError', 261, 19, 261, 27),
woosh.Token(woosh.OP, ':', 261, 27, 261, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 28, 262, 0),
woosh.Token(woosh.INDENT, '                ', 262, 0, 262, 16),
woosh.Token(woosh.NAME, 'drv', 262, 16, 262, 19),
woosh.Token(woosh.OP, '=', 262, 20, 262, 21),
woosh.Token(woosh.STRING, "''", 262, 22, 262, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 24, 263, 0),
woosh.Token(woosh.DEDENT, '            ', 263, 0, 263, 12),
woosh.Token(woosh.NAME, 'userhome', 263, 12, 263, 20),
woosh.Token(woosh.OP, '=', 263, 21, 263, 22),
woosh.Token(woosh.NAME, 'drv', 263, 23, 263, 26),
woosh.Token(woosh.OP, '+', 263, 27, 263, 28),
woosh.Token(woosh.NAME, 'os', 263, 29, 263, 31),
woosh.Token(woosh.OP, '.', 263, 31, 263, 32),
woosh.Token(woosh.NAME, 'environ', 263, 32, 263, 39),
woosh.Token(woosh.OP, '[', 263, 39, 263, 40),
woosh.Token(woosh.STRING, "'HOMEPATH'", 263, 40, 263, 50),
woosh.Token(woosh.OP, ']', 263, 50, 263, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 51, 264, 0),
woosh.Token(woosh.DEDENT, '        ', 264, 0, 264, 8),
woosh.Token(woosh.NAME, 'else', 264, 8, 264, 12),
woosh.Token(woosh.OP, ':', 264, 12, 264, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 264, 13, 265, 0),
woosh.Token(woosh.INDENT, '            ', 265, 0, 265, 12),
woosh.Token(woosh.NAME, 'raise', 265, 12, 265, 17),
woosh.Token(woosh.NAME, 'RuntimeError', 265, 18, 265, 30),
woosh.Token(woosh.OP, '(', 265, 30, 265, 31),
woosh.Token(woosh.STRING, '"Can\'t determine home directory"', 265, 31, 265, 63),
woosh.Token(woosh.OP, ')', 265, 63, 265, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 64, 266, 0),
woosh.Token(woosh.DEDENT, '        ', 267, 0, 267, 8),
woosh.Token(woosh.NAME, 'if', 267, 8, 267, 10),
woosh.Token(woosh.NAME, 'username', 267, 11, 267, 19),
woosh.Token(woosh.OP, ':', 267, 19, 267, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 20, 268, 0),
woosh.Token(woosh.COMMENT, '# Try to guess user home directory.  By default all users', 268, 12, 268, 69),
woosh.Token(woosh.COMMENT, '# directories are located in the same place and are named by', 269, 12, 269, 72),
woosh.Token(woosh.COMMENT, '# corresponding usernames.  If current user home directory points', 270, 12, 270, 77),
woosh.Token(woosh.COMMENT, '# to nonstandard place, this guess is likely wrong.', 271, 12, 271, 63),
woosh.Token(woosh.INDENT, '            ', 272, 0, 272, 12),
woosh.Token(woosh.NAME, 'if', 272, 12, 272, 14),
woosh.Token(woosh.NAME, 'os', 272, 15, 272, 17),
woosh.Token(woosh.OP, '.', 272, 17, 272, 18),
woosh.Token(woosh.NAME, 'environ', 272, 18, 272, 25),
woosh.Token(woosh.OP, '[', 272, 25, 272, 26),
woosh.Token(woosh.STRING, "'USERNAME'", 272, 26, 272, 36),
woosh.Token(woosh.OP, ']', 272, 36, 272, 37),
woosh.Token(woosh.OP, '!=', 272, 38, 272, 40),
woosh.Token(woosh.NAME, 'username', 272, 41, 272, 49),
woosh.Token(woosh.OP, ':', 272, 49, 272, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 50, 273, 0),
woosh.Token(woosh.INDENT, '                ', 273, 0, 273, 16),
woosh.Token(woosh.NAME, 'drv', 273, 16, 273, 19),
woosh.Token(woosh.OP, ',', 273, 19, 273, 20),
woosh.Token(woosh.NAME, 'root', 273, 21, 273, 25),
woosh.Token(woosh.OP, ',', 273, 25, 273, 26),
woosh.Token(woosh.NAME, 'parts', 273, 27, 273, 32),
woosh.Token(woosh.OP, '=', 273, 33, 273, 34),
woosh.Token(woosh.NAME, 'self', 273, 35, 273, 39),
woosh.Token(woosh.OP, '.', 273, 39, 273, 40),
woosh.Token(woosh.NAME, 'parse_parts', 273, 40, 273, 51),
woosh.Token(woosh.OP, '(', 273, 51, 273, 52),
woosh.Token(woosh.OP, '(', 273, 52, 273, 53),
woosh.Token(woosh.NAME, 'userhome', 273, 53, 273, 61),
woosh.Token(woosh.OP, ',', 273, 61, 273, 62),
woosh.Token(woosh.OP, ')', 273, 62, 273, 63),
woosh.Token(woosh.OP, ')', 273, 63, 273, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 64, 274, 0),
woosh.Token(woosh.NAME, 'if', 274, 16, 274, 18),
woosh.Token(woosh.NAME, 'parts', 274, 19, 274, 24),
woosh.Token(woosh.OP, '[', 274, 24, 274, 25),
woosh.Token(woosh.OP, '-', 274, 25, 274, 26),
woosh.Token(woosh.NUMBER, '1', 274, 26, 274, 27),
woosh.Token(woosh.OP, ']', 274, 27, 274, 28),
woosh.Token(woosh.OP, '!=', 274, 29, 274, 31),
woosh.Token(woosh.NAME, 'os', 274, 32, 274, 34),
woosh.Token(woosh.OP, '.', 274, 34, 274, 35),
woosh.Token(woosh.NAME, 'environ', 274, 35, 274, 42),
woosh.Token(woosh.OP, '[', 274, 42, 274, 43),
woosh.Token(woosh.STRING, "'USERNAME'", 274, 43, 274, 53),
woosh.Token(woosh.OP, ']', 274, 53, 274, 54),
woosh.Token(woosh.OP, ':', 274, 54, 274, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 274, 55, 275, 0),
woosh.Token(woosh.INDENT, '                    ', 275, 0, 275, 20),
woosh.Token(woosh.NAME, 'raise', 275, 20, 275, 25),
woosh.Token(woosh.NAME, 'RuntimeError', 275, 26, 275, 38),
woosh.Token(woosh.OP, '(', 275, 38, 275, 39),
woosh.Token(woosh.STRING, '"Can\'t determine home directory "', 275, 39, 275, 72),
woosh.Token(woosh.STRING, '"for %r"', 276, 39, 276, 47),
woosh.Token(woosh.OP, '%', 276, 48, 276, 49),
woosh.Token(woosh.NAME, 'username', 276, 50, 276, 58),
woosh.Token(woosh.OP, ')', 276, 58, 276, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 59, 277, 0),
woosh.Token(woosh.DEDENT, '                ', 277, 0, 277, 16),
woosh.Token(woosh.NAME, 'parts', 277, 16, 277, 21),
woosh.Token(woosh.OP, '[', 277, 21, 277, 22),
woosh.Token(woosh.OP, '-', 277, 22, 277, 23),
woosh.Token(woosh.NUMBER, '1', 277, 23, 277, 24),
woosh.Token(woosh.OP, ']', 277, 24, 277, 25),
woosh.Token(woosh.OP, '=', 277, 26, 277, 27),
woosh.Token(woosh.NAME, 'username', 277, 28, 277, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 277, 36, 278, 0),
woosh.Token(woosh.NAME, 'if', 278, 16, 278, 18),
woosh.Token(woosh.NAME, 'drv', 278, 19, 278, 22),
woosh.Token(woosh.NAME, 'or', 278, 23, 278, 25),
woosh.Token(woosh.NAME, 'root', 278, 26, 278, 30),
woosh.Token(woosh.OP, ':', 278, 30, 278, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 278, 31, 279, 0),
woosh.Token(woosh.INDENT, '                    ', 279, 0, 279, 20),
woosh.Token(woosh.NAME, 'userhome', 279, 20, 279, 28),
woosh.Token(woosh.OP, '=', 279, 29, 279, 30),
woosh.Token(woosh.NAME, 'drv', 279, 31, 279, 34),
woosh.Token(woosh.OP, '+', 279, 35, 279, 36),
woosh.Token(woosh.NAME, 'root', 279, 37, 279, 41),
woosh.Token(woosh.OP, '+', 279, 42, 279, 43),
woosh.Token(woosh.NAME, 'self', 279, 44, 279, 48),
woosh.Token(woosh.OP, '.', 279, 48, 279, 49),
woosh.Token(woosh.NAME, 'join', 279, 49, 279, 53),
woosh.Token(woosh.OP, '(', 279, 53, 279, 54),
woosh.Token(woosh.NAME, 'parts', 279, 54, 279, 59),
woosh.Token(woosh.OP, '[', 279, 59, 279, 60),
woosh.Token(woosh.NUMBER, '1', 279, 60, 279, 61),
woosh.Token(woosh.OP, ':', 279, 61, 279, 62),
woosh.Token(woosh.OP, ']', 279, 62, 279, 63),
woosh.Token(woosh.OP, ')', 279, 63, 279, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 279, 64, 280, 0),
woosh.Token(woosh.DEDENT, '                ', 280, 0, 280, 16),
woosh.Token(woosh.NAME, 'else', 280, 16, 280, 20),
woosh.Token(woosh.OP, ':', 280, 20, 280, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 21, 281, 0),
woosh.Token(woosh.INDENT, '                    ', 281, 0, 281, 20),
woosh.Token(woosh.NAME, 'userhome', 281, 20, 281, 28),
woosh.Token(woosh.OP, '=', 281, 29, 281, 30),
woosh.Token(woosh.NAME, 'self', 281, 31, 281, 35),
woosh.Token(woosh.OP, '.', 281, 35, 281, 36),
woosh.Token(woosh.NAME, 'join', 281, 36, 281, 40),
woosh.Token(woosh.OP, '(', 281, 40, 281, 41),
woosh.Token(woosh.NAME, 'parts', 281, 41, 281, 46),
woosh.Token(woosh.OP, ')', 281, 46, 281, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 47, 282, 0),
woosh.Token(woosh.DEDENT, '        ', 282, 0, 282, 8),
woosh.Token(woosh.DEDENT, '', 282, 8, 282, 8),
woosh.Token(woosh.DEDENT, '', 282, 8, 282, 8),
woosh.Token(woosh.NAME, 'return', 282, 8, 282, 14),
woosh.Token(woosh.NAME, 'userhome', 282, 15, 282, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 23, 283, 0),
woosh.Token(woosh.DEDENT, '', 284, 0, 284, 0),
woosh.Token(woosh.DEDENT, '', 284, 0, 284, 0),
woosh.Token(woosh.NAME, 'class', 284, 0, 284, 5),
woosh.Token(woosh.NAME, '_PosixFlavour', 284, 6, 284, 19),
woosh.Token(woosh.OP, '(', 284, 19, 284, 20),
woosh.Token(woosh.NAME, '_Flavour', 284, 20, 284, 28),
woosh.Token(woosh.OP, ')', 284, 28, 284, 29),
woosh.Token(woosh.OP, ':', 284, 29, 284, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 30, 285, 0),
woosh.Token(woosh.INDENT, '    ', 285, 0, 285, 4),
woosh.Token(woosh.NAME, 'sep', 285, 4, 285, 7),
woosh.Token(woosh.OP, '=', 285, 8, 285, 9),
woosh.Token(woosh.STRING, "'/'", 285, 10, 285, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 285, 13, 286, 0),
woosh.Token(woosh.NAME, 'altsep', 286, 4, 286, 10),
woosh.Token(woosh.OP, '=', 286, 11, 286, 12),
woosh.Token(woosh.STRING, "''", 286, 13, 286, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 15, 287, 0),
woosh.Token(woosh.NAME, 'has_drv', 287, 4, 287, 11),
woosh.Token(woosh.OP, '=', 287, 12, 287, 13),
woosh.Token(woosh.NAME, 'False', 287, 14, 287, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 287, 19, 288, 0),
woosh.Token(woosh.NAME, 'pathmod', 288, 4, 288, 11),
woosh.Token(woosh.OP, '=', 288, 12, 288, 13),
woosh.Token(woosh.NAME, 'posixpath', 288, 14, 288, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 288, 23, 289, 0),
woosh.Token(woosh.NAME, 'is_supported', 290, 4, 290, 16),
woosh.Token(woosh.OP, '=', 290, 17, 290, 18),
woosh.Token(woosh.OP, '(', 290, 19, 290, 20),
woosh.Token(woosh.NAME, 'os', 290, 20, 290, 22),
woosh.Token(woosh.OP, '.', 290, 22, 290, 23),
woosh.Token(woosh.NAME, 'name', 290, 23, 290, 27),
woosh.Token(woosh.OP, '!=', 290, 28, 290, 30),
woosh.Token(woosh.STRING, "'nt'", 290, 31, 290, 35),
woosh.Token(woosh.OP, ')', 290, 35, 290, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 36, 291, 0),
woosh.Token(woosh.NAME, 'def', 292, 4, 292, 7),
woosh.Token(woosh.NAME, 'splitroot', 292, 8, 292, 17),
woosh.Token(woosh.OP, '(', 292, 17, 292, 18),
woosh.Token(woosh.NAME, 'self', 292, 18, 292, 22),
woosh.Token(woosh.OP, ',', 292, 22, 292, 23),
woosh.Token(woosh.NAME, 'part', 292, 24, 292, 28),
woosh.Token(woosh.OP, ',', 292, 28, 292, 29),
woosh.Token(woosh.NAME, 'sep', 292, 30, 292, 33),
woosh.Token(woosh.OP, '=', 292, 33, 292, 34),
woosh.Token(woosh.NAME, 'sep', 292, 34, 292, 37),
woosh.Token(woosh.OP, ')', 292, 37, 292, 38),
woosh.Token(woosh.OP, ':', 292, 38, 292, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 39, 293, 0),
woosh.Token(woosh.INDENT, '        ', 293, 0, 293, 8),
woosh.Token(woosh.NAME, 'if', 293, 8, 293, 10),
woosh.Token(woosh.NAME, 'part', 293, 11, 293, 15),
woosh.Token(woosh.NAME, 'and', 293, 16, 293, 19),
woosh.Token(woosh.NAME, 'part', 293, 20, 293, 24),
woosh.Token(woosh.OP, '[', 293, 24, 293, 25),
woosh.Token(woosh.NUMBER, '0', 293, 25, 293, 26),
woosh.Token(woosh.OP, ']', 293, 26, 293, 27),
woosh.Token(woosh.OP, '==', 293, 28, 293, 30),
woosh.Token(woosh.NAME, 'sep', 293, 31, 293, 34),
woosh.Token(woosh.OP, ':', 293, 34, 293, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 35, 294, 0),
woosh.Token(woosh.INDENT, '            ', 294, 0, 294, 12),
woosh.Token(woosh.NAME, 'stripped_part', 294, 12, 294, 25),
woosh.Token(woosh.OP, '=', 294, 26, 294, 27),
woosh.Token(woosh.NAME, 'part', 294, 28, 294, 32),
woosh.Token(woosh.OP, '.', 294, 32, 294, 33),
woosh.Token(woosh.NAME, 'lstrip', 294, 33, 294, 39),
woosh.Token(woosh.OP, '(', 294, 39, 294, 40),
woosh.Token(woosh.NAME, 'sep', 294, 40, 294, 43),
woosh.Token(woosh.OP, ')', 294, 43, 294, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 44, 295, 0),
woosh.Token(woosh.COMMENT, '# According to POSIX path resolution:', 295, 12, 295, 49),
woosh.Token(woosh.COMMENT, '# http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap04.html#tag_04_11', 296, 12, 296, 95),
woosh.Token(woosh.COMMENT, '# "A pathname that begins with two successive slashes may be', 297, 12, 297, 72),
woosh.Token(woosh.COMMENT, '# interpreted in an implementation-defined manner, although more', 298, 12, 298, 76),
woosh.Token(woosh.COMMENT, '# than two leading slashes shall be treated as a single slash".', 299, 12, 299, 75),
woosh.Token(woosh.NAME, 'if', 300, 12, 300, 14),
woosh.Token(woosh.NAME, 'len', 300, 15, 300, 18),
woosh.Token(woosh.OP, '(', 300, 18, 300, 19),
woosh.Token(woosh.NAME, 'part', 300, 19, 300, 23),
woosh.Token(woosh.OP, ')', 300, 23, 300, 24),
woosh.Token(woosh.OP, '-', 300, 25, 300, 26),
woosh.Token(woosh.NAME, 'len', 300, 27, 300, 30),
woosh.Token(woosh.OP, '(', 300, 30, 300, 31),
woosh.Token(woosh.NAME, 'stripped_part', 300, 31, 300, 44),
woosh.Token(woosh.OP, ')', 300, 44, 300, 45),
woosh.Token(woosh.OP, '==', 300, 46, 300, 48),
woosh.Token(woosh.NUMBER, '2', 300, 49, 300, 50),
woosh.Token(woosh.OP, ':', 300, 50, 300, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 51, 301, 0),
woosh.Token(woosh.INDENT, '                ', 301, 0, 301, 16),
woosh.Token(woosh.NAME, 'return', 301, 16, 301, 22),
woosh.Token(woosh.STRING, "''", 301, 23, 301, 25),
woosh.Token(woosh.OP, ',', 301, 25, 301, 26),
woosh.Token(woosh.NAME, 'sep', 301, 27, 301, 30),
woosh.Token(woosh.OP, '*', 301, 31, 301, 32),
woosh.Token(woosh.NUMBER, '2', 301, 33, 301, 34),
woosh.Token(woosh.OP, ',', 301, 34, 301, 35),
woosh.Token(woosh.NAME, 'stripped_part', 301, 36, 301, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 301, 49, 302, 0),
woosh.Token(woosh.DEDENT, '            ', 302, 0, 302, 12),
woosh.Token(woosh.NAME, 'else', 302, 12, 302, 16),
woosh.Token(woosh.OP, ':', 302, 16, 302, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 302, 17, 303, 0),
woosh.Token(woosh.INDENT, '                ', 303, 0, 303, 16),
woosh.Token(woosh.NAME, 'return', 303, 16, 303, 22),
woosh.Token(woosh.STRING, "''", 303, 23, 303, 25),
woosh.Token(woosh.OP, ',', 303, 25, 303, 26),
woosh.Token(woosh.NAME, 'sep', 303, 27, 303, 30),
woosh.Token(woosh.OP, ',', 303, 30, 303, 31),
woosh.Token(woosh.NAME, 'stripped_part', 303, 32, 303, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 45, 304, 0),
woosh.Token(woosh.DEDENT, '        ', 304, 0, 304, 8),
woosh.Token(woosh.DEDENT, '', 304, 8, 304, 8),
woosh.Token(woosh.NAME, 'else', 304, 8, 304, 12),
woosh.Token(woosh.OP, ':', 304, 12, 304, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 304, 13, 305, 0),
woosh.Token(woosh.INDENT, '            ', 305, 0, 305, 12),
woosh.Token(woosh.NAME, 'return', 305, 12, 305, 18),
woosh.Token(woosh.STRING, "''", 305, 19, 305, 21),
woosh.Token(woosh.OP, ',', 305, 21, 305, 22),
woosh.Token(woosh.STRING, "''", 305, 23, 305, 25),
woosh.Token(woosh.OP, ',', 305, 25, 305, 26),
woosh.Token(woosh.NAME, 'part', 305, 27, 305, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 31, 306, 0),
woosh.Token(woosh.DEDENT, '    ', 307, 0, 307, 4),
woosh.Token(woosh.DEDENT, '', 307, 4, 307, 4),
woosh.Token(woosh.NAME, 'def', 307, 4, 307, 7),
woosh.Token(woosh.NAME, 'casefold', 307, 8, 307, 16),
woosh.Token(woosh.OP, '(', 307, 16, 307, 17),
woosh.Token(woosh.NAME, 'self', 307, 17, 307, 21),
woosh.Token(woosh.OP, ',', 307, 21, 307, 22),
woosh.Token(woosh.NAME, 's', 307, 23, 307, 24),
woosh.Token(woosh.OP, ')', 307, 24, 307, 25),
woosh.Token(woosh.OP, ':', 307, 25, 307, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 307, 26, 308, 0),
woosh.Token(woosh.INDENT, '        ', 308, 0, 308, 8),
woosh.Token(woosh.NAME, 'return', 308, 8, 308, 14),
woosh.Token(woosh.NAME, 's', 308, 15, 308, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 16, 309, 0),
woosh.Token(woosh.DEDENT, '    ', 310, 0, 310, 4),
woosh.Token(woosh.NAME, 'def', 310, 4, 310, 7),
woosh.Token(woosh.NAME, 'casefold_parts', 310, 8, 310, 22),
woosh.Token(woosh.OP, '(', 310, 22, 310, 23),
woosh.Token(woosh.NAME, 'self', 310, 23, 310, 27),
woosh.Token(woosh.OP, ',', 310, 27, 310, 28),
woosh.Token(woosh.NAME, 'parts', 310, 29, 310, 34),
woosh.Token(woosh.OP, ')', 310, 34, 310, 35),
woosh.Token(woosh.OP, ':', 310, 35, 310, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 36, 311, 0),
woosh.Token(woosh.INDENT, '        ', 311, 0, 311, 8),
woosh.Token(woosh.NAME, 'return', 311, 8, 311, 14),
woosh.Token(woosh.NAME, 'parts', 311, 15, 311, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 20, 312, 0),
woosh.Token(woosh.DEDENT, '    ', 313, 0, 313, 4),
woosh.Token(woosh.NAME, 'def', 313, 4, 313, 7),
woosh.Token(woosh.NAME, 'compile_pattern', 313, 8, 313, 23),
woosh.Token(woosh.OP, '(', 313, 23, 313, 24),
woosh.Token(woosh.NAME, 'self', 313, 24, 313, 28),
woosh.Token(woosh.OP, ',', 313, 28, 313, 29),
woosh.Token(woosh.NAME, 'pattern', 313, 30, 313, 37),
woosh.Token(woosh.OP, ')', 313, 37, 313, 38),
woosh.Token(woosh.OP, ':', 313, 38, 313, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 313, 39, 314, 0),
woosh.Token(woosh.INDENT, '        ', 314, 0, 314, 8),
woosh.Token(woosh.NAME, 'return', 314, 8, 314, 14),
woosh.Token(woosh.NAME, 're', 314, 15, 314, 17),
woosh.Token(woosh.OP, '.', 314, 17, 314, 18),
woosh.Token(woosh.NAME, 'compile', 314, 18, 314, 25),
woosh.Token(woosh.OP, '(', 314, 25, 314, 26),
woosh.Token(woosh.NAME, 'fnmatch', 314, 26, 314, 33),
woosh.Token(woosh.OP, '.', 314, 33, 314, 34),
woosh.Token(woosh.NAME, 'translate', 314, 34, 314, 43),
woosh.Token(woosh.OP, '(', 314, 43, 314, 44),
woosh.Token(woosh.NAME, 'pattern', 314, 44, 314, 51),
woosh.Token(woosh.OP, ')', 314, 51, 314, 52),
woosh.Token(woosh.OP, ')', 314, 52, 314, 53),
woosh.Token(woosh.OP, '.', 314, 53, 314, 54),
woosh.Token(woosh.NAME, 'fullmatch', 314, 54, 314, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 63, 315, 0),
woosh.Token(woosh.DEDENT, '    ', 316, 0, 316, 4),
woosh.Token(woosh.NAME, 'def', 316, 4, 316, 7),
woosh.Token(woosh.NAME, 'resolve', 316, 8, 316, 15),
woosh.Token(woosh.OP, '(', 316, 15, 316, 16),
woosh.Token(woosh.NAME, 'self', 316, 16, 316, 20),
woosh.Token(woosh.OP, ',', 316, 20, 316, 21),
woosh.Token(woosh.NAME, 'path', 316, 22, 316, 26),
woosh.Token(woosh.OP, ',', 316, 26, 316, 27),
woosh.Token(woosh.NAME, 'strict', 316, 28, 316, 34),
woosh.Token(woosh.OP, '=', 316, 34, 316, 35),
woosh.Token(woosh.NAME, 'False', 316, 35, 316, 40),
woosh.Token(woosh.OP, ')', 316, 40, 316, 41),
woosh.Token(woosh.OP, ':', 316, 41, 316, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 42, 317, 0),
woosh.Token(woosh.INDENT, '        ', 317, 0, 317, 8),
woosh.Token(woosh.NAME, 'sep', 317, 8, 317, 11),
woosh.Token(woosh.OP, '=', 317, 12, 317, 13),
woosh.Token(woosh.NAME, 'self', 317, 14, 317, 18),
woosh.Token(woosh.OP, '.', 317, 18, 317, 19),
woosh.Token(woosh.NAME, 'sep', 317, 19, 317, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 22, 318, 0),
woosh.Token(woosh.NAME, 'accessor', 318, 8, 318, 16),
woosh.Token(woosh.OP, '=', 318, 17, 318, 18),
woosh.Token(woosh.NAME, 'path', 318, 19, 318, 23),
woosh.Token(woosh.OP, '.', 318, 23, 318, 24),
woosh.Token(woosh.NAME, '_accessor', 318, 24, 318, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 33, 319, 0),
woosh.Token(woosh.NAME, 'seen', 319, 8, 319, 12),
woosh.Token(woosh.OP, '=', 319, 13, 319, 14),
woosh.Token(woosh.OP, '{', 319, 15, 319, 16),
woosh.Token(woosh.OP, '}', 319, 16, 319, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 17, 320, 0),
woosh.Token(woosh.NAME, 'def', 320, 8, 320, 11),
woosh.Token(woosh.NAME, '_resolve', 320, 12, 320, 20),
woosh.Token(woosh.OP, '(', 320, 20, 320, 21),
woosh.Token(woosh.NAME, 'path', 320, 21, 320, 25),
woosh.Token(woosh.OP, ',', 320, 25, 320, 26),
woosh.Token(woosh.NAME, 'rest', 320, 27, 320, 31),
woosh.Token(woosh.OP, ')', 320, 31, 320, 32),
woosh.Token(woosh.OP, ':', 320, 32, 320, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 33, 321, 0),
woosh.Token(woosh.INDENT, '            ', 321, 0, 321, 12),
woosh.Token(woosh.NAME, 'if', 321, 12, 321, 14),
woosh.Token(woosh.NAME, 'rest', 321, 15, 321, 19),
woosh.Token(woosh.OP, '.', 321, 19, 321, 20),
woosh.Token(woosh.NAME, 'startswith', 321, 20, 321, 30),
woosh.Token(woosh.OP, '(', 321, 30, 321, 31),
woosh.Token(woosh.NAME, 'sep', 321, 31, 321, 34),
woosh.Token(woosh.OP, ')', 321, 34, 321, 35),
woosh.Token(woosh.OP, ':', 321, 35, 321, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 321, 36, 322, 0),
woosh.Token(woosh.INDENT, '                ', 322, 0, 322, 16),
woosh.Token(woosh.NAME, 'path', 322, 16, 322, 20),
woosh.Token(woosh.OP, '=', 322, 21, 322, 22),
woosh.Token(woosh.STRING, "''", 322, 23, 322, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 25, 323, 0),
woosh.Token(woosh.DEDENT, '            ', 324, 0, 324, 12),
woosh.Token(woosh.NAME, 'for', 324, 12, 324, 15),
woosh.Token(woosh.NAME, 'name', 324, 16, 324, 20),
woosh.Token(woosh.NAME, 'in', 324, 21, 324, 23),
woosh.Token(woosh.NAME, 'rest', 324, 24, 324, 28),
woosh.Token(woosh.OP, '.', 324, 28, 324, 29),
woosh.Token(woosh.NAME, 'split', 324, 29, 324, 34),
woosh.Token(woosh.OP, '(', 324, 34, 324, 35),
woosh.Token(woosh.NAME, 'sep', 324, 35, 324, 38),
woosh.Token(woosh.OP, ')', 324, 38, 324, 39),
woosh.Token(woosh.OP, ':', 324, 39, 324, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 40, 325, 0),
woosh.Token(woosh.INDENT, '                ', 325, 0, 325, 16),
woosh.Token(woosh.NAME, 'if', 325, 16, 325, 18),
woosh.Token(woosh.NAME, 'not', 325, 19, 325, 22),
woosh.Token(woosh.NAME, 'name', 325, 23, 325, 27),
woosh.Token(woosh.NAME, 'or', 325, 28, 325, 30),
woosh.Token(woosh.NAME, 'name', 325, 31, 325, 35),
woosh.Token(woosh.OP, '==', 325, 36, 325, 38),
woosh.Token(woosh.STRING, "'.'", 325, 39, 325, 42),
woosh.Token(woosh.OP, ':', 325, 42, 325, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 43, 326, 0),
woosh.Token(woosh.COMMENT, '# current dir', 326, 20, 326, 33),
woosh.Token(woosh.INDENT, '                    ', 327, 0, 327, 20),
woosh.Token(woosh.NAME, 'continue', 327, 20, 327, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 28, 328, 0),
woosh.Token(woosh.DEDENT, '                ', 328, 0, 328, 16),
woosh.Token(woosh.NAME, 'if', 328, 16, 328, 18),
woosh.Token(woosh.NAME, 'name', 328, 19, 328, 23),
woosh.Token(woosh.OP, '==', 328, 24, 328, 26),
woosh.Token(woosh.STRING, "'..'", 328, 27, 328, 31),
woosh.Token(woosh.OP, ':', 328, 31, 328, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 328, 32, 329, 0),
woosh.Token(woosh.COMMENT, '# parent dir', 329, 20, 329, 32),
woosh.Token(woosh.INDENT, '                    ', 330, 0, 330, 20),
woosh.Token(woosh.NAME, 'path', 330, 20, 330, 24),
woosh.Token(woosh.OP, ',', 330, 24, 330, 25),
woosh.Token(woosh.NAME, '_', 330, 26, 330, 27),
woosh.Token(woosh.OP, ',', 330, 27, 330, 28),
woosh.Token(woosh.NAME, '_', 330, 29, 330, 30),
woosh.Token(woosh.OP, '=', 330, 31, 330, 32),
woosh.Token(woosh.NAME, 'path', 330, 33, 330, 37),
woosh.Token(woosh.OP, '.', 330, 37, 330, 38),
woosh.Token(woosh.NAME, 'rpartition', 330, 38, 330, 48),
woosh.Token(woosh.OP, '(', 330, 48, 330, 49),
woosh.Token(woosh.NAME, 'sep', 330, 49, 330, 52),
woosh.Token(woosh.OP, ')', 330, 52, 330, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 330, 53, 331, 0),
woosh.Token(woosh.NAME, 'continue', 331, 20, 331, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 331, 28, 332, 0),
woosh.Token(woosh.DEDENT, '                ', 332, 0, 332, 16),
woosh.Token(woosh.NAME, 'if', 332, 16, 332, 18),
woosh.Token(woosh.NAME, 'path', 332, 19, 332, 23),
woosh.Token(woosh.OP, '.', 332, 23, 332, 24),
woosh.Token(woosh.NAME, 'endswith', 332, 24, 332, 32),
woosh.Token(woosh.OP, '(', 332, 32, 332, 33),
woosh.Token(woosh.NAME, 'sep', 332, 33, 332, 36),
woosh.Token(woosh.OP, ')', 332, 36, 332, 37),
woosh.Token(woosh.OP, ':', 332, 37, 332, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 38, 333, 0),
woosh.Token(woosh.INDENT, '                    ', 333, 0, 333, 20),
woosh.Token(woosh.NAME, 'newpath', 333, 20, 333, 27),
woosh.Token(woosh.OP, '=', 333, 28, 333, 29),
woosh.Token(woosh.NAME, 'path', 333, 30, 333, 34),
woosh.Token(woosh.OP, '+', 333, 35, 333, 36),
woosh.Token(woosh.NAME, 'name', 333, 37, 333, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 333, 41, 334, 0),
woosh.Token(woosh.DEDENT, '                ', 334, 0, 334, 16),
woosh.Token(woosh.NAME, 'else', 334, 16, 334, 20),
woosh.Token(woosh.OP, ':', 334, 20, 334, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 334, 21, 335, 0),
woosh.Token(woosh.INDENT, '                    ', 335, 0, 335, 20),
woosh.Token(woosh.NAME, 'newpath', 335, 20, 335, 27),
woosh.Token(woosh.OP, '=', 335, 28, 335, 29),
woosh.Token(woosh.NAME, 'path', 335, 30, 335, 34),
woosh.Token(woosh.OP, '+', 335, 35, 335, 36),
woosh.Token(woosh.NAME, 'sep', 335, 37, 335, 40),
woosh.Token(woosh.OP, '+', 335, 41, 335, 42),
woosh.Token(woosh.NAME, 'name', 335, 43, 335, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 335, 47, 336, 0),
woosh.Token(woosh.DEDENT, '                ', 336, 0, 336, 16),
woosh.Token(woosh.NAME, 'if', 336, 16, 336, 18),
woosh.Token(woosh.NAME, 'newpath', 336, 19, 336, 26),
woosh.Token(woosh.NAME, 'in', 336, 27, 336, 29),
woosh.Token(woosh.NAME, 'seen', 336, 30, 336, 34),
woosh.Token(woosh.OP, ':', 336, 34, 336, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 35, 337, 0),
woosh.Token(woosh.COMMENT, '# Already seen this path', 337, 20, 337, 44),
woosh.Token(woosh.INDENT, '                    ', 338, 0, 338, 20),
woosh.Token(woosh.NAME, 'path', 338, 20, 338, 24),
woosh.Token(woosh.OP, '=', 338, 25, 338, 26),
woosh.Token(woosh.NAME, 'seen', 338, 27, 338, 31),
woosh.Token(woosh.OP, '[', 338, 31, 338, 32),
woosh.Token(woosh.NAME, 'newpath', 338, 32, 338, 39),
woosh.Token(woosh.OP, ']', 338, 39, 338, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 338, 40, 339, 0),
woosh.Token(woosh.NAME, 'if', 339, 20, 339, 22),
woosh.Token(woosh.NAME, 'path', 339, 23, 339, 27),
woosh.Token(woosh.NAME, 'is', 339, 28, 339, 30),
woosh.Token(woosh.NAME, 'not', 339, 31, 339, 34),
woosh.Token(woosh.NAME, 'None', 339, 35, 339, 39),
woosh.Token(woosh.OP, ':', 339, 39, 339, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 339, 40, 340, 0),
woosh.Token(woosh.COMMENT, '# use cached value', 340, 24, 340, 42),
woosh.Token(woosh.INDENT, '                        ', 341, 0, 341, 24),
woosh.Token(woosh.NAME, 'continue', 341, 24, 341, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 32, 342, 0),
woosh.Token(woosh.COMMENT, '# The symlink is not resolved, so we must have a symlink loop.', 342, 20, 342, 82),
woosh.Token(woosh.DEDENT, '                    ', 343, 0, 343, 20),
woosh.Token(woosh.NAME, 'raise', 343, 20, 343, 25),
woosh.Token(woosh.NAME, 'RuntimeError', 343, 26, 343, 38),
woosh.Token(woosh.OP, '(', 343, 38, 343, 39),
woosh.Token(woosh.STRING, '"Symlink loop from %r"', 343, 39, 343, 61),
woosh.Token(woosh.OP, '%', 343, 62, 343, 63),
woosh.Token(woosh.NAME, 'newpath', 343, 64, 343, 71),
woosh.Token(woosh.OP, ')', 343, 71, 343, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 343, 72, 344, 0),
woosh.Token(woosh.COMMENT, '# Resolve the symbolic link', 344, 16, 344, 43),
woosh.Token(woosh.DEDENT, '                ', 345, 0, 345, 16),
woosh.Token(woosh.NAME, 'try', 345, 16, 345, 19),
woosh.Token(woosh.OP, ':', 345, 19, 345, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 20, 346, 0),
woosh.Token(woosh.INDENT, '                    ', 346, 0, 346, 20),
woosh.Token(woosh.NAME, 'target', 346, 20, 346, 26),
woosh.Token(woosh.OP, '=', 346, 27, 346, 28),
woosh.Token(woosh.NAME, 'accessor', 346, 29, 346, 37),
woosh.Token(woosh.OP, '.', 346, 37, 346, 38),
woosh.Token(woosh.NAME, 'readlink', 346, 38, 346, 46),
woosh.Token(woosh.OP, '(', 346, 46, 346, 47),
woosh.Token(woosh.NAME, 'newpath', 346, 47, 346, 54),
woosh.Token(woosh.OP, ')', 346, 54, 346, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 55, 347, 0),
woosh.Token(woosh.DEDENT, '                ', 347, 0, 347, 16),
woosh.Token(woosh.NAME, 'except', 347, 16, 347, 22),
woosh.Token(woosh.NAME, 'OSError', 347, 23, 347, 30),
woosh.Token(woosh.NAME, 'as', 347, 31, 347, 33),
woosh.Token(woosh.NAME, 'e', 347, 34, 347, 35),
woosh.Token(woosh.OP, ':', 347, 35, 347, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 36, 348, 0),
woosh.Token(woosh.INDENT, '                    ', 348, 0, 348, 20),
woosh.Token(woosh.NAME, 'if', 348, 20, 348, 22),
woosh.Token(woosh.NAME, 'e', 348, 23, 348, 24),
woosh.Token(woosh.OP, '.', 348, 24, 348, 25),
woosh.Token(woosh.NAME, 'errno', 348, 25, 348, 30),
woosh.Token(woosh.OP, '!=', 348, 31, 348, 33),
woosh.Token(woosh.NAME, 'EINVAL', 348, 34, 348, 40),
woosh.Token(woosh.NAME, 'and', 348, 41, 348, 44),
woosh.Token(woosh.NAME, 'strict', 348, 45, 348, 51),
woosh.Token(woosh.OP, ':', 348, 51, 348, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 52, 349, 0),
woosh.Token(woosh.INDENT, '                        ', 349, 0, 349, 24),
woosh.Token(woosh.NAME, 'raise', 349, 24, 349, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 29, 350, 0),
woosh.Token(woosh.COMMENT, '# Not a symlink, or non-strict mode. We just leave the path', 350, 20, 350, 79),
woosh.Token(woosh.COMMENT, '# untouched.', 351, 20, 351, 32),
woosh.Token(woosh.DEDENT, '                    ', 352, 0, 352, 20),
woosh.Token(woosh.NAME, 'path', 352, 20, 352, 24),
woosh.Token(woosh.OP, '=', 352, 25, 352, 26),
woosh.Token(woosh.NAME, 'newpath', 352, 27, 352, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 352, 34, 353, 0),
woosh.Token(woosh.DEDENT, '                ', 353, 0, 353, 16),
woosh.Token(woosh.NAME, 'else', 353, 16, 353, 20),
woosh.Token(woosh.OP, ':', 353, 20, 353, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 353, 21, 354, 0),
woosh.Token(woosh.INDENT, '                    ', 354, 0, 354, 20),
woosh.Token(woosh.NAME, 'seen', 354, 20, 354, 24),
woosh.Token(woosh.OP, '[', 354, 24, 354, 25),
woosh.Token(woosh.NAME, 'newpath', 354, 25, 354, 32),
woosh.Token(woosh.OP, ']', 354, 32, 354, 33),
woosh.Token(woosh.OP, '=', 354, 34, 354, 35),
woosh.Token(woosh.NAME, 'None', 354, 36, 354, 40),
woosh.Token(woosh.COMMENT, '# not resolved symlink', 354, 41, 354, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 354, 63, 355, 0),
woosh.Token(woosh.NAME, 'path', 355, 20, 355, 24),
woosh.Token(woosh.OP, '=', 355, 25, 355, 26),
woosh.Token(woosh.NAME, '_resolve', 355, 27, 355, 35),
woosh.Token(woosh.OP, '(', 355, 35, 355, 36),
woosh.Token(woosh.NAME, 'path', 355, 36, 355, 40),
woosh.Token(woosh.OP, ',', 355, 40, 355, 41),
woosh.Token(woosh.NAME, 'target', 355, 42, 355, 48),
woosh.Token(woosh.OP, ')', 355, 48, 355, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 355, 49, 356, 0),
woosh.Token(woosh.NAME, 'seen', 356, 20, 356, 24),
woosh.Token(woosh.OP, '[', 356, 24, 356, 25),
woosh.Token(woosh.NAME, 'newpath', 356, 25, 356, 32),
woosh.Token(woosh.OP, ']', 356, 32, 356, 33),
woosh.Token(woosh.OP, '=', 356, 34, 356, 35),
woosh.Token(woosh.NAME, 'path', 356, 36, 356, 40),
woosh.Token(woosh.COMMENT, '# resolved symlink', 356, 41, 356, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 356, 59, 357, 0),
woosh.Token(woosh.DEDENT, '            ', 358, 0, 358, 12),
woosh.Token(woosh.DEDENT, '', 358, 12, 358, 12),
woosh.Token(woosh.NAME, 'return', 358, 12, 358, 18),
woosh.Token(woosh.NAME, 'path', 358, 19, 358, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 23, 359, 0),
woosh.Token(woosh.COMMENT, '# NOTE: according to POSIX, getcwd() cannot contain path components', 359, 8, 359, 75),
woosh.Token(woosh.COMMENT, '# which are symlinks.', 360, 8, 360, 29),
woosh.Token(woosh.DEDENT, '        ', 361, 0, 361, 8),
woosh.Token(woosh.NAME, 'base', 361, 8, 361, 12),
woosh.Token(woosh.OP, '=', 361, 13, 361, 14),
woosh.Token(woosh.STRING, "''", 361, 15, 361, 17),
woosh.Token(woosh.NAME, 'if', 361, 18, 361, 20),
woosh.Token(woosh.NAME, 'path', 361, 21, 361, 25),
woosh.Token(woosh.OP, '.', 361, 25, 361, 26),
woosh.Token(woosh.NAME, 'is_absolute', 361, 26, 361, 37),
woosh.Token(woosh.OP, '(', 361, 37, 361, 38),
woosh.Token(woosh.OP, ')', 361, 38, 361, 39),
woosh.Token(woosh.NAME, 'else', 361, 40, 361, 44),
woosh.Token(woosh.NAME, 'os', 361, 45, 361, 47),
woosh.Token(woosh.OP, '.', 361, 47, 361, 48),
woosh.Token(woosh.NAME, 'getcwd', 361, 48, 361, 54),
woosh.Token(woosh.OP, '(', 361, 54, 361, 55),
woosh.Token(woosh.OP, ')', 361, 55, 361, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 56, 362, 0),
woosh.Token(woosh.NAME, 'return', 362, 8, 362, 14),
woosh.Token(woosh.NAME, '_resolve', 362, 15, 362, 23),
woosh.Token(woosh.OP, '(', 362, 23, 362, 24),
woosh.Token(woosh.NAME, 'base', 362, 24, 362, 28),
woosh.Token(woosh.OP, ',', 362, 28, 362, 29),
woosh.Token(woosh.NAME, 'str', 362, 30, 362, 33),
woosh.Token(woosh.OP, '(', 362, 33, 362, 34),
woosh.Token(woosh.NAME, 'path', 362, 34, 362, 38),
woosh.Token(woosh.OP, ')', 362, 38, 362, 39),
woosh.Token(woosh.OP, ')', 362, 39, 362, 40),
woosh.Token(woosh.NAME, 'or', 362, 41, 362, 43),
woosh.Token(woosh.NAME, 'sep', 362, 44, 362, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 362, 47, 363, 0),
woosh.Token(woosh.DEDENT, '    ', 364, 0, 364, 4),
woosh.Token(woosh.NAME, 'def', 364, 4, 364, 7),
woosh.Token(woosh.NAME, 'is_reserved', 364, 8, 364, 19),
woosh.Token(woosh.OP, '(', 364, 19, 364, 20),
woosh.Token(woosh.NAME, 'self', 364, 20, 364, 24),
woosh.Token(woosh.OP, ',', 364, 24, 364, 25),
woosh.Token(woosh.NAME, 'parts', 364, 26, 364, 31),
woosh.Token(woosh.OP, ')', 364, 31, 364, 32),
woosh.Token(woosh.OP, ':', 364, 32, 364, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 33, 365, 0),
woosh.Token(woosh.INDENT, '        ', 365, 0, 365, 8),
woosh.Token(woosh.NAME, 'return', 365, 8, 365, 14),
woosh.Token(woosh.NAME, 'False', 365, 15, 365, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 20, 366, 0),
woosh.Token(woosh.DEDENT, '    ', 367, 0, 367, 4),
woosh.Token(woosh.NAME, 'def', 367, 4, 367, 7),
woosh.Token(woosh.NAME, 'make_uri', 367, 8, 367, 16),
woosh.Token(woosh.OP, '(', 367, 16, 367, 17),
woosh.Token(woosh.NAME, 'self', 367, 17, 367, 21),
woosh.Token(woosh.OP, ',', 367, 21, 367, 22),
woosh.Token(woosh.NAME, 'path', 367, 23, 367, 27),
woosh.Token(woosh.OP, ')', 367, 27, 367, 28),
woosh.Token(woosh.OP, ':', 367, 28, 367, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 29, 368, 0),
woosh.Token(woosh.COMMENT, '# We represent the path using the local filesystem encoding,', 368, 8, 368, 68),
woosh.Token(woosh.COMMENT, '# for portability to other applications.', 369, 8, 369, 48),
woosh.Token(woosh.INDENT, '        ', 370, 0, 370, 8),
woosh.Token(woosh.NAME, 'bpath', 370, 8, 370, 13),
woosh.Token(woosh.OP, '=', 370, 14, 370, 15),
woosh.Token(woosh.NAME, 'bytes', 370, 16, 370, 21),
woosh.Token(woosh.OP, '(', 370, 21, 370, 22),
woosh.Token(woosh.NAME, 'path', 370, 22, 370, 26),
woosh.Token(woosh.OP, ')', 370, 26, 370, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 27, 371, 0),
woosh.Token(woosh.NAME, 'return', 371, 8, 371, 14),
woosh.Token(woosh.STRING, "'file://'", 371, 15, 371, 24),
woosh.Token(woosh.OP, '+', 371, 25, 371, 26),
woosh.Token(woosh.NAME, 'urlquote_from_bytes', 371, 27, 371, 46),
woosh.Token(woosh.OP, '(', 371, 46, 371, 47),
woosh.Token(woosh.NAME, 'bpath', 371, 47, 371, 52),
woosh.Token(woosh.OP, ')', 371, 52, 371, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 53, 372, 0),
woosh.Token(woosh.DEDENT, '    ', 373, 0, 373, 4),
woosh.Token(woosh.NAME, 'def', 373, 4, 373, 7),
woosh.Token(woosh.NAME, 'gethomedir', 373, 8, 373, 18),
woosh.Token(woosh.OP, '(', 373, 18, 373, 19),
woosh.Token(woosh.NAME, 'self', 373, 19, 373, 23),
woosh.Token(woosh.OP, ',', 373, 23, 373, 24),
woosh.Token(woosh.NAME, 'username', 373, 25, 373, 33),
woosh.Token(woosh.OP, ')', 373, 33, 373, 34),
woosh.Token(woosh.OP, ':', 373, 34, 373, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 35, 374, 0),
woosh.Token(woosh.INDENT, '        ', 374, 0, 374, 8),
woosh.Token(woosh.NAME, 'if', 374, 8, 374, 10),
woosh.Token(woosh.NAME, 'not', 374, 11, 374, 14),
woosh.Token(woosh.NAME, 'username', 374, 15, 374, 23),
woosh.Token(woosh.OP, ':', 374, 23, 374, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 24, 375, 0),
woosh.Token(woosh.INDENT, '            ', 375, 0, 375, 12),
woosh.Token(woosh.NAME, 'try', 375, 12, 375, 15),
woosh.Token(woosh.OP, ':', 375, 15, 375, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 16, 376, 0),
woosh.Token(woosh.INDENT, '                ', 376, 0, 376, 16),
woosh.Token(woosh.NAME, 'return', 376, 16, 376, 22),
woosh.Token(woosh.NAME, 'os', 376, 23, 376, 25),
woosh.Token(woosh.OP, '.', 376, 25, 376, 26),
woosh.Token(woosh.NAME, 'environ', 376, 26, 376, 33),
woosh.Token(woosh.OP, '[', 376, 33, 376, 34),
woosh.Token(woosh.STRING, "'HOME'", 376, 34, 376, 40),
woosh.Token(woosh.OP, ']', 376, 40, 376, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 41, 377, 0),
woosh.Token(woosh.DEDENT, '            ', 377, 0, 377, 12),
woosh.Token(woosh.NAME, 'except', 377, 12, 377, 18),
woosh.Token(woosh.NAME, 'KeyError', 377, 19, 377, 27),
woosh.Token(woosh.OP, ':', 377, 27, 377, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 28, 378, 0),
woosh.Token(woosh.INDENT, '                ', 378, 0, 378, 16),
woosh.Token(woosh.NAME, 'import', 378, 16, 378, 22),
woosh.Token(woosh.NAME, 'pwd', 378, 23, 378, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 26, 379, 0),
woosh.Token(woosh.NAME, 'return', 379, 16, 379, 22),
woosh.Token(woosh.NAME, 'pwd', 379, 23, 379, 26),
woosh.Token(woosh.OP, '.', 379, 26, 379, 27),
woosh.Token(woosh.NAME, 'getpwuid', 379, 27, 379, 35),
woosh.Token(woosh.OP, '(', 379, 35, 379, 36),
woosh.Token(woosh.NAME, 'os', 379, 36, 379, 38),
woosh.Token(woosh.OP, '.', 379, 38, 379, 39),
woosh.Token(woosh.NAME, 'getuid', 379, 39, 379, 45),
woosh.Token(woosh.OP, '(', 379, 45, 379, 46),
woosh.Token(woosh.OP, ')', 379, 46, 379, 47),
woosh.Token(woosh.OP, ')', 379, 47, 379, 48),
woosh.Token(woosh.OP, '.', 379, 48, 379, 49),
woosh.Token(woosh.NAME, 'pw_dir', 379, 49, 379, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 55, 380, 0),
woosh.Token(woosh.DEDENT, '        ', 380, 0, 380, 8),
woosh.Token(woosh.DEDENT, '', 380, 8, 380, 8),
woosh.Token(woosh.NAME, 'else', 380, 8, 380, 12),
woosh.Token(woosh.OP, ':', 380, 12, 380, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 13, 381, 0),
woosh.Token(woosh.INDENT, '            ', 381, 0, 381, 12),
woosh.Token(woosh.NAME, 'import', 381, 12, 381, 18),
woosh.Token(woosh.NAME, 'pwd', 381, 19, 381, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 22, 382, 0),
woosh.Token(woosh.NAME, 'try', 382, 12, 382, 15),
woosh.Token(woosh.OP, ':', 382, 15, 382, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 16, 383, 0),
woosh.Token(woosh.INDENT, '                ', 383, 0, 383, 16),
woosh.Token(woosh.NAME, 'return', 383, 16, 383, 22),
woosh.Token(woosh.NAME, 'pwd', 383, 23, 383, 26),
woosh.Token(woosh.OP, '.', 383, 26, 383, 27),
woosh.Token(woosh.NAME, 'getpwnam', 383, 27, 383, 35),
woosh.Token(woosh.OP, '(', 383, 35, 383, 36),
woosh.Token(woosh.NAME, 'username', 383, 36, 383, 44),
woosh.Token(woosh.OP, ')', 383, 44, 383, 45),
woosh.Token(woosh.OP, '.', 383, 45, 383, 46),
woosh.Token(woosh.NAME, 'pw_dir', 383, 46, 383, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 383, 52, 384, 0),
woosh.Token(woosh.DEDENT, '            ', 384, 0, 384, 12),
woosh.Token(woosh.NAME, 'except', 384, 12, 384, 18),
woosh.Token(woosh.NAME, 'KeyError', 384, 19, 384, 27),
woosh.Token(woosh.OP, ':', 384, 27, 384, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 28, 385, 0),
woosh.Token(woosh.INDENT, '                ', 385, 0, 385, 16),
woosh.Token(woosh.NAME, 'raise', 385, 16, 385, 21),
woosh.Token(woosh.NAME, 'RuntimeError', 385, 22, 385, 34),
woosh.Token(woosh.OP, '(', 385, 34, 385, 35),
woosh.Token(woosh.STRING, '"Can\'t determine home directory "', 385, 35, 385, 68),
woosh.Token(woosh.STRING, '"for %r"', 386, 35, 386, 43),
woosh.Token(woosh.OP, '%', 386, 44, 386, 45),
woosh.Token(woosh.NAME, 'username', 386, 46, 386, 54),
woosh.Token(woosh.OP, ')', 386, 54, 386, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 55, 387, 0),
woosh.Token(woosh.DEDENT, '', 389, 0, 389, 0),
woosh.Token(woosh.DEDENT, '', 389, 0, 389, 0),
woosh.Token(woosh.DEDENT, '', 389, 0, 389, 0),
woosh.Token(woosh.DEDENT, '', 389, 0, 389, 0),
woosh.Token(woosh.NAME, '_windows_flavour', 389, 0, 389, 16),
woosh.Token(woosh.OP, '=', 389, 17, 389, 18),
woosh.Token(woosh.NAME, '_WindowsFlavour', 389, 19, 389, 34),
woosh.Token(woosh.OP, '(', 389, 34, 389, 35),
woosh.Token(woosh.OP, ')', 389, 35, 389, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 389, 36, 390, 0),
woosh.Token(woosh.NAME, '_posix_flavour', 390, 0, 390, 14),
woosh.Token(woosh.OP, '=', 390, 15, 390, 16),
woosh.Token(woosh.NAME, '_PosixFlavour', 390, 17, 390, 30),
woosh.Token(woosh.OP, '(', 390, 30, 390, 31),
woosh.Token(woosh.OP, ')', 390, 31, 390, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 390, 32, 391, 0),
woosh.Token(woosh.NAME, 'class', 393, 0, 393, 5),
woosh.Token(woosh.NAME, '_Accessor', 393, 6, 393, 15),
woosh.Token(woosh.OP, ':', 393, 15, 393, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 16, 394, 0),
woosh.Token(woosh.INDENT, '    ', 394, 0, 394, 4),
woosh.Token(woosh.STRING, '"""An accessor implements a particular (system-specific or not) way of\r\n    accessing paths on the filesystem."""', 394, 4, 395, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 41, 396, 0),
woosh.Token(woosh.DEDENT, '', 398, 0, 398, 0),
woosh.Token(woosh.NAME, 'class', 398, 0, 398, 5),
woosh.Token(woosh.NAME, '_NormalAccessor', 398, 6, 398, 21),
woosh.Token(woosh.OP, '(', 398, 21, 398, 22),
woosh.Token(woosh.NAME, '_Accessor', 398, 22, 398, 31),
woosh.Token(woosh.OP, ')', 398, 31, 398, 32),
woosh.Token(woosh.OP, ':', 398, 32, 398, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 398, 33, 399, 0),
woosh.Token(woosh.INDENT, '    ', 400, 0, 400, 4),
woosh.Token(woosh.NAME, 'stat', 400, 4, 400, 8),
woosh.Token(woosh.OP, '=', 400, 9, 400, 10),
woosh.Token(woosh.NAME, 'os', 400, 11, 400, 13),
woosh.Token(woosh.OP, '.', 400, 13, 400, 14),
woosh.Token(woosh.NAME, 'stat', 400, 14, 400, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 18, 401, 0),
woosh.Token(woosh.NAME, 'lstat', 402, 4, 402, 9),
woosh.Token(woosh.OP, '=', 402, 10, 402, 11),
woosh.Token(woosh.NAME, 'os', 402, 12, 402, 14),
woosh.Token(woosh.OP, '.', 402, 14, 402, 15),
woosh.Token(woosh.NAME, 'lstat', 402, 15, 402, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 402, 20, 403, 0),
woosh.Token(woosh.NAME, 'open', 404, 4, 404, 8),
woosh.Token(woosh.OP, '=', 404, 9, 404, 10),
woosh.Token(woosh.NAME, 'os', 404, 11, 404, 13),
woosh.Token(woosh.OP, '.', 404, 13, 404, 14),
woosh.Token(woosh.NAME, 'open', 404, 14, 404, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 18, 405, 0),
woosh.Token(woosh.NAME, 'listdir', 406, 4, 406, 11),
woosh.Token(woosh.OP, '=', 406, 12, 406, 13),
woosh.Token(woosh.NAME, 'os', 406, 14, 406, 16),
woosh.Token(woosh.OP, '.', 406, 16, 406, 17),
woosh.Token(woosh.NAME, 'listdir', 406, 17, 406, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 24, 407, 0),
woosh.Token(woosh.NAME, 'scandir', 408, 4, 408, 11),
woosh.Token(woosh.OP, '=', 408, 12, 408, 13),
woosh.Token(woosh.NAME, 'os', 408, 14, 408, 16),
woosh.Token(woosh.OP, '.', 408, 16, 408, 17),
woosh.Token(woosh.NAME, 'scandir', 408, 17, 408, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 24, 409, 0),
woosh.Token(woosh.NAME, 'chmod', 410, 4, 410, 9),
woosh.Token(woosh.OP, '=', 410, 10, 410, 11),
woosh.Token(woosh.NAME, 'os', 410, 12, 410, 14),
woosh.Token(woosh.OP, '.', 410, 14, 410, 15),
woosh.Token(woosh.NAME, 'chmod', 410, 15, 410, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 20, 411, 0),
woosh.Token(woosh.NAME, 'if', 412, 4, 412, 6),
woosh.Token(woosh.NAME, 'hasattr', 412, 7, 412, 14),
woosh.Token(woosh.OP, '(', 412, 14, 412, 15),
woosh.Token(woosh.NAME, 'os', 412, 15, 412, 17),
woosh.Token(woosh.OP, ',', 412, 17, 412, 18),
woosh.Token(woosh.STRING, '"lchmod"', 412, 19, 412, 27),
woosh.Token(woosh.OP, ')', 412, 27, 412, 28),
woosh.Token(woosh.OP, ':', 412, 28, 412, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 29, 413, 0),
woosh.Token(woosh.INDENT, '        ', 413, 0, 413, 8),
woosh.Token(woosh.NAME, 'lchmod', 413, 8, 413, 14),
woosh.Token(woosh.OP, '=', 413, 15, 413, 16),
woosh.Token(woosh.NAME, 'os', 413, 17, 413, 19),
woosh.Token(woosh.OP, '.', 413, 19, 413, 20),
woosh.Token(woosh.NAME, 'lchmod', 413, 20, 413, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 26, 414, 0),
woosh.Token(woosh.DEDENT, '    ', 414, 0, 414, 4),
woosh.Token(woosh.NAME, 'else', 414, 4, 414, 8),
woosh.Token(woosh.OP, ':', 414, 8, 414, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 9, 415, 0),
woosh.Token(woosh.INDENT, '        ', 415, 0, 415, 8),
woosh.Token(woosh.NAME, 'def', 415, 8, 415, 11),
woosh.Token(woosh.NAME, 'lchmod', 415, 12, 415, 18),
woosh.Token(woosh.OP, '(', 415, 18, 415, 19),
woosh.Token(woosh.NAME, 'self', 415, 19, 415, 23),
woosh.Token(woosh.OP, ',', 415, 23, 415, 24),
woosh.Token(woosh.NAME, 'pathobj', 415, 25, 415, 32),
woosh.Token(woosh.OP, ',', 415, 32, 415, 33),
woosh.Token(woosh.NAME, 'mode', 415, 34, 415, 38),
woosh.Token(woosh.OP, ')', 415, 38, 415, 39),
woosh.Token(woosh.OP, ':', 415, 39, 415, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 415, 40, 416, 0),
woosh.Token(woosh.INDENT, '            ', 416, 0, 416, 12),
woosh.Token(woosh.NAME, 'raise', 416, 12, 416, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 416, 18, 416, 37),
woosh.Token(woosh.OP, '(', 416, 37, 416, 38),
woosh.Token(woosh.STRING, '"lchmod() not available on this system"', 416, 38, 416, 77),
woosh.Token(woosh.OP, ')', 416, 77, 416, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 78, 417, 0),
woosh.Token(woosh.DEDENT, '    ', 418, 0, 418, 4),
woosh.Token(woosh.DEDENT, '', 418, 4, 418, 4),
woosh.Token(woosh.NAME, 'mkdir', 418, 4, 418, 9),
woosh.Token(woosh.OP, '=', 418, 10, 418, 11),
woosh.Token(woosh.NAME, 'os', 418, 12, 418, 14),
woosh.Token(woosh.OP, '.', 418, 14, 418, 15),
woosh.Token(woosh.NAME, 'mkdir', 418, 15, 418, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 418, 20, 419, 0),
woosh.Token(woosh.NAME, 'unlink', 420, 4, 420, 10),
woosh.Token(woosh.OP, '=', 420, 11, 420, 12),
woosh.Token(woosh.NAME, 'os', 420, 13, 420, 15),
woosh.Token(woosh.OP, '.', 420, 15, 420, 16),
woosh.Token(woosh.NAME, 'unlink', 420, 16, 420, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 22, 421, 0),
woosh.Token(woosh.NAME, 'if', 422, 4, 422, 6),
woosh.Token(woosh.NAME, 'hasattr', 422, 7, 422, 14),
woosh.Token(woosh.OP, '(', 422, 14, 422, 15),
woosh.Token(woosh.NAME, 'os', 422, 15, 422, 17),
woosh.Token(woosh.OP, ',', 422, 17, 422, 18),
woosh.Token(woosh.STRING, '"link"', 422, 19, 422, 25),
woosh.Token(woosh.OP, ')', 422, 25, 422, 26),
woosh.Token(woosh.OP, ':', 422, 26, 422, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 27, 423, 0),
woosh.Token(woosh.INDENT, '        ', 423, 0, 423, 8),
woosh.Token(woosh.NAME, 'link_to', 423, 8, 423, 15),
woosh.Token(woosh.OP, '=', 423, 16, 423, 17),
woosh.Token(woosh.NAME, 'os', 423, 18, 423, 20),
woosh.Token(woosh.OP, '.', 423, 20, 423, 21),
woosh.Token(woosh.NAME, 'link', 423, 21, 423, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 423, 25, 424, 0),
woosh.Token(woosh.DEDENT, '    ', 424, 0, 424, 4),
woosh.Token(woosh.NAME, 'else', 424, 4, 424, 8),
woosh.Token(woosh.OP, ':', 424, 8, 424, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 9, 425, 0),
woosh.Token(woosh.INDENT, '        ', 425, 0, 425, 8),
woosh.Token(woosh.OP, '@', 425, 8, 425, 9),
woosh.Token(woosh.NAME, 'staticmethod', 425, 9, 425, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 425, 21, 426, 0),
woosh.Token(woosh.NAME, 'def', 426, 8, 426, 11),
woosh.Token(woosh.NAME, 'link_to', 426, 12, 426, 19),
woosh.Token(woosh.OP, '(', 426, 19, 426, 20),
woosh.Token(woosh.NAME, 'self', 426, 20, 426, 24),
woosh.Token(woosh.OP, ',', 426, 24, 426, 25),
woosh.Token(woosh.NAME, 'target', 426, 26, 426, 32),
woosh.Token(woosh.OP, ')', 426, 32, 426, 33),
woosh.Token(woosh.OP, ':', 426, 33, 426, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 34, 427, 0),
woosh.Token(woosh.INDENT, '            ', 427, 0, 427, 12),
woosh.Token(woosh.NAME, 'raise', 427, 12, 427, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 427, 18, 427, 37),
woosh.Token(woosh.OP, '(', 427, 37, 427, 38),
woosh.Token(woosh.STRING, '"os.link() not available on this system"', 427, 38, 427, 78),
woosh.Token(woosh.OP, ')', 427, 78, 427, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 427, 79, 428, 0),
woosh.Token(woosh.DEDENT, '    ', 429, 0, 429, 4),
woosh.Token(woosh.DEDENT, '', 429, 4, 429, 4),
woosh.Token(woosh.NAME, 'rmdir', 429, 4, 429, 9),
woosh.Token(woosh.OP, '=', 429, 10, 429, 11),
woosh.Token(woosh.NAME, 'os', 429, 12, 429, 14),
woosh.Token(woosh.OP, '.', 429, 14, 429, 15),
woosh.Token(woosh.NAME, 'rmdir', 429, 15, 429, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 20, 430, 0),
woosh.Token(woosh.NAME, 'rename', 431, 4, 431, 10),
woosh.Token(woosh.OP, '=', 431, 11, 431, 12),
woosh.Token(woosh.NAME, 'os', 431, 13, 431, 15),
woosh.Token(woosh.OP, '.', 431, 15, 431, 16),
woosh.Token(woosh.NAME, 'rename', 431, 16, 431, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 431, 22, 432, 0),
woosh.Token(woosh.NAME, 'replace', 433, 4, 433, 11),
woosh.Token(woosh.OP, '=', 433, 12, 433, 13),
woosh.Token(woosh.NAME, 'os', 433, 14, 433, 16),
woosh.Token(woosh.OP, '.', 433, 16, 433, 17),
woosh.Token(woosh.NAME, 'replace', 433, 17, 433, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 24, 434, 0),
woosh.Token(woosh.NAME, 'if', 435, 4, 435, 6),
woosh.Token(woosh.NAME, 'nt', 435, 7, 435, 9),
woosh.Token(woosh.OP, ':', 435, 9, 435, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 435, 10, 436, 0),
woosh.Token(woosh.INDENT, '        ', 436, 0, 436, 8),
woosh.Token(woosh.NAME, 'if', 436, 8, 436, 10),
woosh.Token(woosh.NAME, 'supports_symlinks', 436, 11, 436, 28),
woosh.Token(woosh.OP, ':', 436, 28, 436, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 29, 437, 0),
woosh.Token(woosh.INDENT, '            ', 437, 0, 437, 12),
woosh.Token(woosh.NAME, 'symlink', 437, 12, 437, 19),
woosh.Token(woosh.OP, '=', 437, 20, 437, 21),
woosh.Token(woosh.NAME, 'os', 437, 22, 437, 24),
woosh.Token(woosh.OP, '.', 437, 24, 437, 25),
woosh.Token(woosh.NAME, 'symlink', 437, 25, 437, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 437, 32, 438, 0),
woosh.Token(woosh.DEDENT, '        ', 438, 0, 438, 8),
woosh.Token(woosh.NAME, 'else', 438, 8, 438, 12),
woosh.Token(woosh.OP, ':', 438, 12, 438, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 438, 13, 439, 0),
woosh.Token(woosh.INDENT, '            ', 439, 0, 439, 12),
woosh.Token(woosh.NAME, 'def', 439, 12, 439, 15),
woosh.Token(woosh.NAME, 'symlink', 439, 16, 439, 23),
woosh.Token(woosh.OP, '(', 439, 23, 439, 24),
woosh.Token(woosh.NAME, 'a', 439, 24, 439, 25),
woosh.Token(woosh.OP, ',', 439, 25, 439, 26),
woosh.Token(woosh.NAME, 'b', 439, 27, 439, 28),
woosh.Token(woosh.OP, ',', 439, 28, 439, 29),
woosh.Token(woosh.NAME, 'target_is_directory', 439, 30, 439, 49),
woosh.Token(woosh.OP, ')', 439, 49, 439, 50),
woosh.Token(woosh.OP, ':', 439, 50, 439, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 439, 51, 440, 0),
woosh.Token(woosh.INDENT, '                ', 440, 0, 440, 16),
woosh.Token(woosh.NAME, 'raise', 440, 16, 440, 21),
woosh.Token(woosh.NAME, 'NotImplementedError', 440, 22, 440, 41),
woosh.Token(woosh.OP, '(', 440, 41, 440, 42),
woosh.Token(woosh.STRING, '"symlink() not available on this system"', 440, 42, 440, 82),
woosh.Token(woosh.OP, ')', 440, 82, 440, 83),
woosh.Token(woosh.NEWLINE, '\r\n', 440, 83, 441, 0),
woosh.Token(woosh.DEDENT, '    ', 441, 0, 441, 4),
woosh.Token(woosh.DEDENT, '', 441, 4, 441, 4),
woosh.Token(woosh.DEDENT, '', 441, 4, 441, 4),
woosh.Token(woosh.NAME, 'else', 441, 4, 441, 8),
woosh.Token(woosh.OP, ':', 441, 8, 441, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 441, 9, 442, 0),
woosh.Token(woosh.COMMENT, '# Under POSIX, os.symlink() takes two args', 442, 8, 442, 50),
woosh.Token(woosh.INDENT, '        ', 443, 0, 443, 8),
woosh.Token(woosh.OP, '@', 443, 8, 443, 9),
woosh.Token(woosh.NAME, 'staticmethod', 443, 9, 443, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 443, 21, 444, 0),
woosh.Token(woosh.NAME, 'def', 444, 8, 444, 11),
woosh.Token(woosh.NAME, 'symlink', 444, 12, 444, 19),
woosh.Token(woosh.OP, '(', 444, 19, 444, 20),
woosh.Token(woosh.NAME, 'a', 444, 20, 444, 21),
woosh.Token(woosh.OP, ',', 444, 21, 444, 22),
woosh.Token(woosh.NAME, 'b', 444, 23, 444, 24),
woosh.Token(woosh.OP, ',', 444, 24, 444, 25),
woosh.Token(woosh.NAME, 'target_is_directory', 444, 26, 444, 45),
woosh.Token(woosh.OP, ')', 444, 45, 444, 46),
woosh.Token(woosh.OP, ':', 444, 46, 444, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 444, 47, 445, 0),
woosh.Token(woosh.INDENT, '            ', 445, 0, 445, 12),
woosh.Token(woosh.NAME, 'return', 445, 12, 445, 18),
woosh.Token(woosh.NAME, 'os', 445, 19, 445, 21),
woosh.Token(woosh.OP, '.', 445, 21, 445, 22),
woosh.Token(woosh.NAME, 'symlink', 445, 22, 445, 29),
woosh.Token(woosh.OP, '(', 445, 29, 445, 30),
woosh.Token(woosh.NAME, 'a', 445, 30, 445, 31),
woosh.Token(woosh.OP, ',', 445, 31, 445, 32),
woosh.Token(woosh.NAME, 'b', 445, 33, 445, 34),
woosh.Token(woosh.OP, ')', 445, 34, 445, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 445, 35, 446, 0),
woosh.Token(woosh.DEDENT, '    ', 447, 0, 447, 4),
woosh.Token(woosh.DEDENT, '', 447, 4, 447, 4),
woosh.Token(woosh.NAME, 'utime', 447, 4, 447, 9),
woosh.Token(woosh.OP, '=', 447, 10, 447, 11),
woosh.Token(woosh.NAME, 'os', 447, 12, 447, 14),
woosh.Token(woosh.OP, '.', 447, 14, 447, 15),
woosh.Token(woosh.NAME, 'utime', 447, 15, 447, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 447, 20, 448, 0),
woosh.Token(woosh.COMMENT, '# Helper for resolve()', 449, 4, 449, 26),
woosh.Token(woosh.NAME, 'def', 450, 4, 450, 7),
woosh.Token(woosh.NAME, 'readlink', 450, 8, 450, 16),
woosh.Token(woosh.OP, '(', 450, 16, 450, 17),
woosh.Token(woosh.NAME, 'self', 450, 17, 450, 21),
woosh.Token(woosh.OP, ',', 450, 21, 450, 22),
woosh.Token(woosh.NAME, 'path', 450, 23, 450, 27),
woosh.Token(woosh.OP, ')', 450, 27, 450, 28),
woosh.Token(woosh.OP, ':', 450, 28, 450, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 450, 29, 451, 0),
woosh.Token(woosh.INDENT, '        ', 451, 0, 451, 8),
woosh.Token(woosh.NAME, 'return', 451, 8, 451, 14),
woosh.Token(woosh.NAME, 'os', 451, 15, 451, 17),
woosh.Token(woosh.OP, '.', 451, 17, 451, 18),
woosh.Token(woosh.NAME, 'readlink', 451, 18, 451, 26),
woosh.Token(woosh.OP, '(', 451, 26, 451, 27),
woosh.Token(woosh.NAME, 'path', 451, 27, 451, 31),
woosh.Token(woosh.OP, ')', 451, 31, 451, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 451, 32, 452, 0),
woosh.Token(woosh.DEDENT, '    ', 453, 0, 453, 4),
woosh.Token(woosh.NAME, 'def', 453, 4, 453, 7),
woosh.Token(woosh.NAME, 'owner', 453, 8, 453, 13),
woosh.Token(woosh.OP, '(', 453, 13, 453, 14),
woosh.Token(woosh.NAME, 'self', 453, 14, 453, 18),
woosh.Token(woosh.OP, ',', 453, 18, 453, 19),
woosh.Token(woosh.NAME, 'path', 453, 20, 453, 24),
woosh.Token(woosh.OP, ')', 453, 24, 453, 25),
woosh.Token(woosh.OP, ':', 453, 25, 453, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 453, 26, 454, 0),
woosh.Token(woosh.INDENT, '        ', 454, 0, 454, 8),
woosh.Token(woosh.NAME, 'try', 454, 8, 454, 11),
woosh.Token(woosh.OP, ':', 454, 11, 454, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 12, 455, 0),
woosh.Token(woosh.INDENT, '            ', 455, 0, 455, 12),
woosh.Token(woosh.NAME, 'import', 455, 12, 455, 18),
woosh.Token(woosh.NAME, 'pwd', 455, 19, 455, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 455, 22, 456, 0),
woosh.Token(woosh.NAME, 'return', 456, 12, 456, 18),
woosh.Token(woosh.NAME, 'pwd', 456, 19, 456, 22),
woosh.Token(woosh.OP, '.', 456, 22, 456, 23),
woosh.Token(woosh.NAME, 'getpwuid', 456, 23, 456, 31),
woosh.Token(woosh.OP, '(', 456, 31, 456, 32),
woosh.Token(woosh.NAME, 'self', 456, 32, 456, 36),
woosh.Token(woosh.OP, '.', 456, 36, 456, 37),
woosh.Token(woosh.NAME, 'stat', 456, 37, 456, 41),
woosh.Token(woosh.OP, '(', 456, 41, 456, 42),
woosh.Token(woosh.NAME, 'path', 456, 42, 456, 46),
woosh.Token(woosh.OP, ')', 456, 46, 456, 47),
woosh.Token(woosh.OP, '.', 456, 47, 456, 48),
woosh.Token(woosh.NAME, 'st_uid', 456, 48, 456, 54),
woosh.Token(woosh.OP, ')', 456, 54, 456, 55),
woosh.Token(woosh.OP, '.', 456, 55, 456, 56),
woosh.Token(woosh.NAME, 'pw_name', 456, 56, 456, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 456, 63, 457, 0),
woosh.Token(woosh.DEDENT, '        ', 457, 0, 457, 8),
woosh.Token(woosh.NAME, 'except', 457, 8, 457, 14),
woosh.Token(woosh.NAME, 'ImportError', 457, 15, 457, 26),
woosh.Token(woosh.OP, ':', 457, 26, 457, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 457, 27, 458, 0),
woosh.Token(woosh.INDENT, '            ', 458, 0, 458, 12),
woosh.Token(woosh.NAME, 'raise', 458, 12, 458, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 458, 18, 458, 37),
woosh.Token(woosh.OP, '(', 458, 37, 458, 38),
woosh.Token(woosh.STRING, '"Path.owner() is unsupported on this system"', 458, 38, 458, 82),
woosh.Token(woosh.OP, ')', 458, 82, 458, 83),
woosh.Token(woosh.NEWLINE, '\r\n', 458, 83, 459, 0),
woosh.Token(woosh.DEDENT, '    ', 460, 0, 460, 4),
woosh.Token(woosh.DEDENT, '', 460, 4, 460, 4),
woosh.Token(woosh.NAME, 'def', 460, 4, 460, 7),
woosh.Token(woosh.NAME, 'group', 460, 8, 460, 13),
woosh.Token(woosh.OP, '(', 460, 13, 460, 14),
woosh.Token(woosh.NAME, 'self', 460, 14, 460, 18),
woosh.Token(woosh.OP, ',', 460, 18, 460, 19),
woosh.Token(woosh.NAME, 'path', 460, 20, 460, 24),
woosh.Token(woosh.OP, ')', 460, 24, 460, 25),
woosh.Token(woosh.OP, ':', 460, 25, 460, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 460, 26, 461, 0),
woosh.Token(woosh.INDENT, '        ', 461, 0, 461, 8),
woosh.Token(woosh.NAME, 'try', 461, 8, 461, 11),
woosh.Token(woosh.OP, ':', 461, 11, 461, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 461, 12, 462, 0),
woosh.Token(woosh.INDENT, '            ', 462, 0, 462, 12),
woosh.Token(woosh.NAME, 'import', 462, 12, 462, 18),
woosh.Token(woosh.NAME, 'grp', 462, 19, 462, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 22, 463, 0),
woosh.Token(woosh.NAME, 'return', 463, 12, 463, 18),
woosh.Token(woosh.NAME, 'grp', 463, 19, 463, 22),
woosh.Token(woosh.OP, '.', 463, 22, 463, 23),
woosh.Token(woosh.NAME, 'getgrgid', 463, 23, 463, 31),
woosh.Token(woosh.OP, '(', 463, 31, 463, 32),
woosh.Token(woosh.NAME, 'self', 463, 32, 463, 36),
woosh.Token(woosh.OP, '.', 463, 36, 463, 37),
woosh.Token(woosh.NAME, 'stat', 463, 37, 463, 41),
woosh.Token(woosh.OP, '(', 463, 41, 463, 42),
woosh.Token(woosh.NAME, 'path', 463, 42, 463, 46),
woosh.Token(woosh.OP, ')', 463, 46, 463, 47),
woosh.Token(woosh.OP, '.', 463, 47, 463, 48),
woosh.Token(woosh.NAME, 'st_gid', 463, 48, 463, 54),
woosh.Token(woosh.OP, ')', 463, 54, 463, 55),
woosh.Token(woosh.OP, '.', 463, 55, 463, 56),
woosh.Token(woosh.NAME, 'gr_name', 463, 56, 463, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 463, 63, 464, 0),
woosh.Token(woosh.DEDENT, '        ', 464, 0, 464, 8),
woosh.Token(woosh.NAME, 'except', 464, 8, 464, 14),
woosh.Token(woosh.NAME, 'ImportError', 464, 15, 464, 26),
woosh.Token(woosh.OP, ':', 464, 26, 464, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 27, 465, 0),
woosh.Token(woosh.INDENT, '            ', 465, 0, 465, 12),
woosh.Token(woosh.NAME, 'raise', 465, 12, 465, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 465, 18, 465, 37),
woosh.Token(woosh.OP, '(', 465, 37, 465, 38),
woosh.Token(woosh.STRING, '"Path.group() is unsupported on this system"', 465, 38, 465, 82),
woosh.Token(woosh.OP, ')', 465, 82, 465, 83),
woosh.Token(woosh.NEWLINE, '\r\n', 465, 83, 466, 0),
woosh.Token(woosh.DEDENT, '', 468, 0, 468, 0),
woosh.Token(woosh.DEDENT, '', 468, 0, 468, 0),
woosh.Token(woosh.DEDENT, '', 468, 0, 468, 0),
woosh.Token(woosh.NAME, '_normal_accessor', 468, 0, 468, 16),
woosh.Token(woosh.OP, '=', 468, 17, 468, 18),
woosh.Token(woosh.NAME, '_NormalAccessor', 468, 19, 468, 34),
woosh.Token(woosh.OP, '(', 468, 34, 468, 35),
woosh.Token(woosh.OP, ')', 468, 35, 468, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 468, 36, 469, 0),
woosh.Token(woosh.COMMENT, '#', 471, 0, 471, 1),
woosh.Token(woosh.COMMENT, '# Globbing helpers', 472, 0, 472, 18),
woosh.Token(woosh.COMMENT, '#', 473, 0, 473, 1),
woosh.Token(woosh.NAME, 'def', 475, 0, 475, 3),
woosh.Token(woosh.NAME, '_make_selector', 475, 4, 475, 18),
woosh.Token(woosh.OP, '(', 475, 18, 475, 19),
woosh.Token(woosh.NAME, 'pattern_parts', 475, 19, 475, 32),
woosh.Token(woosh.OP, ',', 475, 32, 475, 33),
woosh.Token(woosh.NAME, 'flavour', 475, 34, 475, 41),
woosh.Token(woosh.OP, ')', 475, 41, 475, 42),
woosh.Token(woosh.OP, ':', 475, 42, 475, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 43, 476, 0),
woosh.Token(woosh.INDENT, '    ', 476, 0, 476, 4),
woosh.Token(woosh.NAME, 'pat', 476, 4, 476, 7),
woosh.Token(woosh.OP, '=', 476, 8, 476, 9),
woosh.Token(woosh.NAME, 'pattern_parts', 476, 10, 476, 23),
woosh.Token(woosh.OP, '[', 476, 23, 476, 24),
woosh.Token(woosh.NUMBER, '0', 476, 24, 476, 25),
woosh.Token(woosh.OP, ']', 476, 25, 476, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 476, 26, 477, 0),
woosh.Token(woosh.NAME, 'child_parts', 477, 4, 477, 15),
woosh.Token(woosh.OP, '=', 477, 16, 477, 17),
woosh.Token(woosh.NAME, 'pattern_parts', 477, 18, 477, 31),
woosh.Token(woosh.OP, '[', 477, 31, 477, 32),
woosh.Token(woosh.NUMBER, '1', 477, 32, 477, 33),
woosh.Token(woosh.OP, ':', 477, 33, 477, 34),
woosh.Token(woosh.OP, ']', 477, 34, 477, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 35, 478, 0),
woosh.Token(woosh.NAME, 'if', 478, 4, 478, 6),
woosh.Token(woosh.NAME, 'pat', 478, 7, 478, 10),
woosh.Token(woosh.OP, '==', 478, 11, 478, 13),
woosh.Token(woosh.STRING, "'**'", 478, 14, 478, 18),
woosh.Token(woosh.OP, ':', 478, 18, 478, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 19, 479, 0),
woosh.Token(woosh.INDENT, '        ', 479, 0, 479, 8),
woosh.Token(woosh.NAME, 'cls', 479, 8, 479, 11),
woosh.Token(woosh.OP, '=', 479, 12, 479, 13),
woosh.Token(woosh.NAME, '_RecursiveWildcardSelector', 479, 14, 479, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 40, 480, 0),
woosh.Token(woosh.DEDENT, '    ', 480, 0, 480, 4),
woosh.Token(woosh.NAME, 'elif', 480, 4, 480, 8),
woosh.Token(woosh.STRING, "'**'", 480, 9, 480, 13),
woosh.Token(woosh.NAME, 'in', 480, 14, 480, 16),
woosh.Token(woosh.NAME, 'pat', 480, 17, 480, 20),
woosh.Token(woosh.OP, ':', 480, 20, 480, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 480, 21, 481, 0),
woosh.Token(woosh.INDENT, '        ', 481, 0, 481, 8),
woosh.Token(woosh.NAME, 'raise', 481, 8, 481, 13),
woosh.Token(woosh.NAME, 'ValueError', 481, 14, 481, 24),
woosh.Token(woosh.OP, '(', 481, 24, 481, 25),
woosh.Token(woosh.STRING, '"Invalid pattern: \'**\' can only be an entire path component"', 481, 25, 481, 85),
woosh.Token(woosh.OP, ')', 481, 85, 481, 86),
woosh.Token(woosh.NEWLINE, '\r\n', 481, 86, 482, 0),
woosh.Token(woosh.DEDENT, '    ', 482, 0, 482, 4),
woosh.Token(woosh.NAME, 'elif', 482, 4, 482, 8),
woosh.Token(woosh.NAME, '_is_wildcard_pattern', 482, 9, 482, 29),
woosh.Token(woosh.OP, '(', 482, 29, 482, 30),
woosh.Token(woosh.NAME, 'pat', 482, 30, 482, 33),
woosh.Token(woosh.OP, ')', 482, 33, 482, 34),
woosh.Token(woosh.OP, ':', 482, 34, 482, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 35, 483, 0),
woosh.Token(woosh.INDENT, '        ', 483, 0, 483, 8),
woosh.Token(woosh.NAME, 'cls', 483, 8, 483, 11),
woosh.Token(woosh.OP, '=', 483, 12, 483, 13),
woosh.Token(woosh.NAME, '_WildcardSelector', 483, 14, 483, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 31, 484, 0),
woosh.Token(woosh.DEDENT, '    ', 484, 0, 484, 4),
woosh.Token(woosh.NAME, 'else', 484, 4, 484, 8),
woosh.Token(woosh.OP, ':', 484, 8, 484, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 9, 485, 0),
woosh.Token(woosh.INDENT, '        ', 485, 0, 485, 8),
woosh.Token(woosh.NAME, 'cls', 485, 8, 485, 11),
woosh.Token(woosh.OP, '=', 485, 12, 485, 13),
woosh.Token(woosh.NAME, '_PreciseSelector', 485, 14, 485, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 30, 486, 0),
woosh.Token(woosh.DEDENT, '    ', 486, 0, 486, 4),
woosh.Token(woosh.NAME, 'return', 486, 4, 486, 10),
woosh.Token(woosh.NAME, 'cls', 486, 11, 486, 14),
woosh.Token(woosh.OP, '(', 486, 14, 486, 15),
woosh.Token(woosh.NAME, 'pat', 486, 15, 486, 18),
woosh.Token(woosh.OP, ',', 486, 18, 486, 19),
woosh.Token(woosh.NAME, 'child_parts', 486, 20, 486, 31),
woosh.Token(woosh.OP, ',', 486, 31, 486, 32),
woosh.Token(woosh.NAME, 'flavour', 486, 33, 486, 40),
woosh.Token(woosh.OP, ')', 486, 40, 486, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 41, 487, 0),
woosh.Token(woosh.DEDENT, '', 488, 0, 488, 0),
woosh.Token(woosh.NAME, 'if', 488, 0, 488, 2),
woosh.Token(woosh.NAME, 'hasattr', 488, 3, 488, 10),
woosh.Token(woosh.OP, '(', 488, 10, 488, 11),
woosh.Token(woosh.NAME, 'functools', 488, 11, 488, 20),
woosh.Token(woosh.OP, ',', 488, 20, 488, 21),
woosh.Token(woosh.STRING, '"lru_cache"', 488, 22, 488, 33),
woosh.Token(woosh.OP, ')', 488, 33, 488, 34),
woosh.Token(woosh.OP, ':', 488, 34, 488, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 488, 35, 489, 0),
woosh.Token(woosh.INDENT, '    ', 489, 0, 489, 4),
woosh.Token(woosh.NAME, '_make_selector', 489, 4, 489, 18),
woosh.Token(woosh.OP, '=', 489, 19, 489, 20),
woosh.Token(woosh.NAME, 'functools', 489, 21, 489, 30),
woosh.Token(woosh.OP, '.', 489, 30, 489, 31),
woosh.Token(woosh.NAME, 'lru_cache', 489, 31, 489, 40),
woosh.Token(woosh.OP, '(', 489, 40, 489, 41),
woosh.Token(woosh.OP, ')', 489, 41, 489, 42),
woosh.Token(woosh.OP, '(', 489, 42, 489, 43),
woosh.Token(woosh.NAME, '_make_selector', 489, 43, 489, 57),
woosh.Token(woosh.OP, ')', 489, 57, 489, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 58, 490, 0),
woosh.Token(woosh.DEDENT, '', 492, 0, 492, 0),
woosh.Token(woosh.NAME, 'class', 492, 0, 492, 5),
woosh.Token(woosh.NAME, '_Selector', 492, 6, 492, 15),
woosh.Token(woosh.OP, ':', 492, 15, 492, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 492, 16, 493, 0),
woosh.Token(woosh.INDENT, '    ', 493, 0, 493, 4),
woosh.Token(woosh.STRING, '"""A selector matches a specific glob pattern part against the children\r\n    of a given path."""', 493, 4, 494, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 494, 23, 495, 0),
woosh.Token(woosh.NAME, 'def', 496, 4, 496, 7),
woosh.Token(woosh.NAME, '__init__', 496, 8, 496, 16),
woosh.Token(woosh.OP, '(', 496, 16, 496, 17),
woosh.Token(woosh.NAME, 'self', 496, 17, 496, 21),
woosh.Token(woosh.OP, ',', 496, 21, 496, 22),
woosh.Token(woosh.NAME, 'child_parts', 496, 23, 496, 34),
woosh.Token(woosh.OP, ',', 496, 34, 496, 35),
woosh.Token(woosh.NAME, 'flavour', 496, 36, 496, 43),
woosh.Token(woosh.OP, ')', 496, 43, 496, 44),
woosh.Token(woosh.OP, ':', 496, 44, 496, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 496, 45, 497, 0),
woosh.Token(woosh.INDENT, '        ', 497, 0, 497, 8),
woosh.Token(woosh.NAME, 'self', 497, 8, 497, 12),
woosh.Token(woosh.OP, '.', 497, 12, 497, 13),
woosh.Token(woosh.NAME, 'child_parts', 497, 13, 497, 24),
woosh.Token(woosh.OP, '=', 497, 25, 497, 26),
woosh.Token(woosh.NAME, 'child_parts', 497, 27, 497, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 38, 498, 0),
woosh.Token(woosh.NAME, 'if', 498, 8, 498, 10),
woosh.Token(woosh.NAME, 'child_parts', 498, 11, 498, 22),
woosh.Token(woosh.OP, ':', 498, 22, 498, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 23, 499, 0),
woosh.Token(woosh.INDENT, '            ', 499, 0, 499, 12),
woosh.Token(woosh.NAME, 'self', 499, 12, 499, 16),
woosh.Token(woosh.OP, '.', 499, 16, 499, 17),
woosh.Token(woosh.NAME, 'successor', 499, 17, 499, 26),
woosh.Token(woosh.OP, '=', 499, 27, 499, 28),
woosh.Token(woosh.NAME, '_make_selector', 499, 29, 499, 43),
woosh.Token(woosh.OP, '(', 499, 43, 499, 44),
woosh.Token(woosh.NAME, 'child_parts', 499, 44, 499, 55),
woosh.Token(woosh.OP, ',', 499, 55, 499, 56),
woosh.Token(woosh.NAME, 'flavour', 499, 57, 499, 64),
woosh.Token(woosh.OP, ')', 499, 64, 499, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 65, 500, 0),
woosh.Token(woosh.NAME, 'self', 500, 12, 500, 16),
woosh.Token(woosh.OP, '.', 500, 16, 500, 17),
woosh.Token(woosh.NAME, 'dironly', 500, 17, 500, 24),
woosh.Token(woosh.OP, '=', 500, 25, 500, 26),
woosh.Token(woosh.NAME, 'True', 500, 27, 500, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 31, 501, 0),
woosh.Token(woosh.DEDENT, '        ', 501, 0, 501, 8),
woosh.Token(woosh.NAME, 'else', 501, 8, 501, 12),
woosh.Token(woosh.OP, ':', 501, 12, 501, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 13, 502, 0),
woosh.Token(woosh.INDENT, '            ', 502, 0, 502, 12),
woosh.Token(woosh.NAME, 'self', 502, 12, 502, 16),
woosh.Token(woosh.OP, '.', 502, 16, 502, 17),
woosh.Token(woosh.NAME, 'successor', 502, 17, 502, 26),
woosh.Token(woosh.OP, '=', 502, 27, 502, 28),
woosh.Token(woosh.NAME, '_TerminatingSelector', 502, 29, 502, 49),
woosh.Token(woosh.OP, '(', 502, 49, 502, 50),
woosh.Token(woosh.OP, ')', 502, 50, 502, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 51, 503, 0),
woosh.Token(woosh.NAME, 'self', 503, 12, 503, 16),
woosh.Token(woosh.OP, '.', 503, 16, 503, 17),
woosh.Token(woosh.NAME, 'dironly', 503, 17, 503, 24),
woosh.Token(woosh.OP, '=', 503, 25, 503, 26),
woosh.Token(woosh.NAME, 'False', 503, 27, 503, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 503, 32, 504, 0),
woosh.Token(woosh.DEDENT, '    ', 505, 0, 505, 4),
woosh.Token(woosh.DEDENT, '', 505, 4, 505, 4),
woosh.Token(woosh.NAME, 'def', 505, 4, 505, 7),
woosh.Token(woosh.NAME, 'select_from', 505, 8, 505, 19),
woosh.Token(woosh.OP, '(', 505, 19, 505, 20),
woosh.Token(woosh.NAME, 'self', 505, 20, 505, 24),
woosh.Token(woosh.OP, ',', 505, 24, 505, 25),
woosh.Token(woosh.NAME, 'parent_path', 505, 26, 505, 37),
woosh.Token(woosh.OP, ')', 505, 37, 505, 38),
woosh.Token(woosh.OP, ':', 505, 38, 505, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 39, 506, 0),
woosh.Token(woosh.INDENT, '        ', 506, 0, 506, 8),
woosh.Token(woosh.STRING, '"""Iterate over all child paths of `parent_path` matched by this\r\n        selector.  This can contain parent_path itself."""', 506, 8, 507, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 507, 58, 508, 0),
woosh.Token(woosh.NAME, 'path_cls', 508, 8, 508, 16),
woosh.Token(woosh.OP, '=', 508, 17, 508, 18),
woosh.Token(woosh.NAME, 'type', 508, 19, 508, 23),
woosh.Token(woosh.OP, '(', 508, 23, 508, 24),
woosh.Token(woosh.NAME, 'parent_path', 508, 24, 508, 35),
woosh.Token(woosh.OP, ')', 508, 35, 508, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 508, 36, 509, 0),
woosh.Token(woosh.NAME, 'is_dir', 509, 8, 509, 14),
woosh.Token(woosh.OP, '=', 509, 15, 509, 16),
woosh.Token(woosh.NAME, 'path_cls', 509, 17, 509, 25),
woosh.Token(woosh.OP, '.', 509, 25, 509, 26),
woosh.Token(woosh.NAME, 'is_dir', 509, 26, 509, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 509, 32, 510, 0),
woosh.Token(woosh.NAME, 'exists', 510, 8, 510, 14),
woosh.Token(woosh.OP, '=', 510, 15, 510, 16),
woosh.Token(woosh.NAME, 'path_cls', 510, 17, 510, 25),
woosh.Token(woosh.OP, '.', 510, 25, 510, 26),
woosh.Token(woosh.NAME, 'exists', 510, 26, 510, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 510, 32, 511, 0),
woosh.Token(woosh.NAME, 'scandir', 511, 8, 511, 15),
woosh.Token(woosh.OP, '=', 511, 16, 511, 17),
woosh.Token(woosh.NAME, 'parent_path', 511, 18, 511, 29),
woosh.Token(woosh.OP, '.', 511, 29, 511, 30),
woosh.Token(woosh.NAME, '_accessor', 511, 30, 511, 39),
woosh.Token(woosh.OP, '.', 511, 39, 511, 40),
woosh.Token(woosh.NAME, 'scandir', 511, 40, 511, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 47, 512, 0),
woosh.Token(woosh.NAME, 'if', 512, 8, 512, 10),
woosh.Token(woosh.NAME, 'not', 512, 11, 512, 14),
woosh.Token(woosh.NAME, 'is_dir', 512, 15, 512, 21),
woosh.Token(woosh.OP, '(', 512, 21, 512, 22),
woosh.Token(woosh.NAME, 'parent_path', 512, 22, 512, 33),
woosh.Token(woosh.OP, ')', 512, 33, 512, 34),
woosh.Token(woosh.OP, ':', 512, 34, 512, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 512, 35, 513, 0),
woosh.Token(woosh.INDENT, '            ', 513, 0, 513, 12),
woosh.Token(woosh.NAME, 'return', 513, 12, 513, 18),
woosh.Token(woosh.NAME, 'iter', 513, 19, 513, 23),
woosh.Token(woosh.OP, '(', 513, 23, 513, 24),
woosh.Token(woosh.OP, '[', 513, 24, 513, 25),
woosh.Token(woosh.OP, ']', 513, 25, 513, 26),
woosh.Token(woosh.OP, ')', 513, 26, 513, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 513, 27, 514, 0),
woosh.Token(woosh.DEDENT, '        ', 514, 0, 514, 8),
woosh.Token(woosh.NAME, 'return', 514, 8, 514, 14),
woosh.Token(woosh.NAME, 'self', 514, 15, 514, 19),
woosh.Token(woosh.OP, '.', 514, 19, 514, 20),
woosh.Token(woosh.NAME, '_select_from', 514, 20, 514, 32),
woosh.Token(woosh.OP, '(', 514, 32, 514, 33),
woosh.Token(woosh.NAME, 'parent_path', 514, 33, 514, 44),
woosh.Token(woosh.OP, ',', 514, 44, 514, 45),
woosh.Token(woosh.NAME, 'is_dir', 514, 46, 514, 52),
woosh.Token(woosh.OP, ',', 514, 52, 514, 53),
woosh.Token(woosh.NAME, 'exists', 514, 54, 514, 60),
woosh.Token(woosh.OP, ',', 514, 60, 514, 61),
woosh.Token(woosh.NAME, 'scandir', 514, 62, 514, 69),
woosh.Token(woosh.OP, ')', 514, 69, 514, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 70, 515, 0),
woosh.Token(woosh.DEDENT, '', 517, 0, 517, 0),
woosh.Token(woosh.DEDENT, '', 517, 0, 517, 0),
woosh.Token(woosh.NAME, 'class', 517, 0, 517, 5),
woosh.Token(woosh.NAME, '_TerminatingSelector', 517, 6, 517, 26),
woosh.Token(woosh.OP, ':', 517, 26, 517, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 517, 27, 518, 0),
woosh.Token(woosh.INDENT, '    ', 519, 0, 519, 4),
woosh.Token(woosh.NAME, 'def', 519, 4, 519, 7),
woosh.Token(woosh.NAME, '_select_from', 519, 8, 519, 20),
woosh.Token(woosh.OP, '(', 519, 20, 519, 21),
woosh.Token(woosh.NAME, 'self', 519, 21, 519, 25),
woosh.Token(woosh.OP, ',', 519, 25, 519, 26),
woosh.Token(woosh.NAME, 'parent_path', 519, 27, 519, 38),
woosh.Token(woosh.OP, ',', 519, 38, 519, 39),
woosh.Token(woosh.NAME, 'is_dir', 519, 40, 519, 46),
woosh.Token(woosh.OP, ',', 519, 46, 519, 47),
woosh.Token(woosh.NAME, 'exists', 519, 48, 519, 54),
woosh.Token(woosh.OP, ',', 519, 54, 519, 55),
woosh.Token(woosh.NAME, 'scandir', 519, 56, 519, 63),
woosh.Token(woosh.OP, ')', 519, 63, 519, 64),
woosh.Token(woosh.OP, ':', 519, 64, 519, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 65, 520, 0),
woosh.Token(woosh.INDENT, '        ', 520, 0, 520, 8),
woosh.Token(woosh.NAME, 'yield', 520, 8, 520, 13),
woosh.Token(woosh.NAME, 'parent_path', 520, 14, 520, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 520, 25, 521, 0),
woosh.Token(woosh.DEDENT, '', 523, 0, 523, 0),
woosh.Token(woosh.DEDENT, '', 523, 0, 523, 0),
woosh.Token(woosh.NAME, 'class', 523, 0, 523, 5),
woosh.Token(woosh.NAME, '_PreciseSelector', 523, 6, 523, 22),
woosh.Token(woosh.OP, '(', 523, 22, 523, 23),
woosh.Token(woosh.NAME, '_Selector', 523, 23, 523, 32),
woosh.Token(woosh.OP, ')', 523, 32, 523, 33),
woosh.Token(woosh.OP, ':', 523, 33, 523, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 523, 34, 524, 0),
woosh.Token(woosh.INDENT, '    ', 525, 0, 525, 4),
woosh.Token(woosh.NAME, 'def', 525, 4, 525, 7),
woosh.Token(woosh.NAME, '__init__', 525, 8, 525, 16),
woosh.Token(woosh.OP, '(', 525, 16, 525, 17),
woosh.Token(woosh.NAME, 'self', 525, 17, 525, 21),
woosh.Token(woosh.OP, ',', 525, 21, 525, 22),
woosh.Token(woosh.NAME, 'name', 525, 23, 525, 27),
woosh.Token(woosh.OP, ',', 525, 27, 525, 28),
woosh.Token(woosh.NAME, 'child_parts', 525, 29, 525, 40),
woosh.Token(woosh.OP, ',', 525, 40, 525, 41),
woosh.Token(woosh.NAME, 'flavour', 525, 42, 525, 49),
woosh.Token(woosh.OP, ')', 525, 49, 525, 50),
woosh.Token(woosh.OP, ':', 525, 50, 525, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 51, 526, 0),
woosh.Token(woosh.INDENT, '        ', 526, 0, 526, 8),
woosh.Token(woosh.NAME, 'self', 526, 8, 526, 12),
woosh.Token(woosh.OP, '.', 526, 12, 526, 13),
woosh.Token(woosh.NAME, 'name', 526, 13, 526, 17),
woosh.Token(woosh.OP, '=', 526, 18, 526, 19),
woosh.Token(woosh.NAME, 'name', 526, 20, 526, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 24, 527, 0),
woosh.Token(woosh.NAME, '_Selector', 527, 8, 527, 17),
woosh.Token(woosh.OP, '.', 527, 17, 527, 18),
woosh.Token(woosh.NAME, '__init__', 527, 18, 527, 26),
woosh.Token(woosh.OP, '(', 527, 26, 527, 27),
woosh.Token(woosh.NAME, 'self', 527, 27, 527, 31),
woosh.Token(woosh.OP, ',', 527, 31, 527, 32),
woosh.Token(woosh.NAME, 'child_parts', 527, 33, 527, 44),
woosh.Token(woosh.OP, ',', 527, 44, 527, 45),
woosh.Token(woosh.NAME, 'flavour', 527, 46, 527, 53),
woosh.Token(woosh.OP, ')', 527, 53, 527, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 527, 54, 528, 0),
woosh.Token(woosh.DEDENT, '    ', 529, 0, 529, 4),
woosh.Token(woosh.NAME, 'def', 529, 4, 529, 7),
woosh.Token(woosh.NAME, '_select_from', 529, 8, 529, 20),
woosh.Token(woosh.OP, '(', 529, 20, 529, 21),
woosh.Token(woosh.NAME, 'self', 529, 21, 529, 25),
woosh.Token(woosh.OP, ',', 529, 25, 529, 26),
woosh.Token(woosh.NAME, 'parent_path', 529, 27, 529, 38),
woosh.Token(woosh.OP, ',', 529, 38, 529, 39),
woosh.Token(woosh.NAME, 'is_dir', 529, 40, 529, 46),
woosh.Token(woosh.OP, ',', 529, 46, 529, 47),
woosh.Token(woosh.NAME, 'exists', 529, 48, 529, 54),
woosh.Token(woosh.OP, ',', 529, 54, 529, 55),
woosh.Token(woosh.NAME, 'scandir', 529, 56, 529, 63),
woosh.Token(woosh.OP, ')', 529, 63, 529, 64),
woosh.Token(woosh.OP, ':', 529, 64, 529, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 65, 530, 0),
woosh.Token(woosh.INDENT, '        ', 530, 0, 530, 8),
woosh.Token(woosh.NAME, 'try', 530, 8, 530, 11),
woosh.Token(woosh.OP, ':', 530, 11, 530, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 530, 12, 531, 0),
woosh.Token(woosh.INDENT, '            ', 531, 0, 531, 12),
woosh.Token(woosh.NAME, 'path', 531, 12, 531, 16),
woosh.Token(woosh.OP, '=', 531, 17, 531, 18),
woosh.Token(woosh.NAME, 'parent_path', 531, 19, 531, 30),
woosh.Token(woosh.OP, '.', 531, 30, 531, 31),
woosh.Token(woosh.NAME, '_make_child_relpath', 531, 31, 531, 50),
woosh.Token(woosh.OP, '(', 531, 50, 531, 51),
woosh.Token(woosh.NAME, 'self', 531, 51, 531, 55),
woosh.Token(woosh.OP, '.', 531, 55, 531, 56),
woosh.Token(woosh.NAME, 'name', 531, 56, 531, 60),
woosh.Token(woosh.OP, ')', 531, 60, 531, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 531, 61, 532, 0),
woosh.Token(woosh.NAME, 'if', 532, 12, 532, 14),
woosh.Token(woosh.OP, '(', 532, 15, 532, 16),
woosh.Token(woosh.NAME, 'is_dir', 532, 16, 532, 22),
woosh.Token(woosh.NAME, 'if', 532, 23, 532, 25),
woosh.Token(woosh.NAME, 'self', 532, 26, 532, 30),
woosh.Token(woosh.OP, '.', 532, 30, 532, 31),
woosh.Token(woosh.NAME, 'dironly', 532, 31, 532, 38),
woosh.Token(woosh.NAME, 'else', 532, 39, 532, 43),
woosh.Token(woosh.NAME, 'exists', 532, 44, 532, 50),
woosh.Token(woosh.OP, ')', 532, 50, 532, 51),
woosh.Token(woosh.OP, '(', 532, 51, 532, 52),
woosh.Token(woosh.NAME, 'path', 532, 52, 532, 56),
woosh.Token(woosh.OP, ')', 532, 56, 532, 57),
woosh.Token(woosh.OP, ':', 532, 57, 532, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 58, 533, 0),
woosh.Token(woosh.INDENT, '                ', 533, 0, 533, 16),
woosh.Token(woosh.NAME, 'for', 533, 16, 533, 19),
woosh.Token(woosh.NAME, 'p', 533, 20, 533, 21),
woosh.Token(woosh.NAME, 'in', 533, 22, 533, 24),
woosh.Token(woosh.NAME, 'self', 533, 25, 533, 29),
woosh.Token(woosh.OP, '.', 533, 29, 533, 30),
woosh.Token(woosh.NAME, 'successor', 533, 30, 533, 39),
woosh.Token(woosh.OP, '.', 533, 39, 533, 40),
woosh.Token(woosh.NAME, '_select_from', 533, 40, 533, 52),
woosh.Token(woosh.OP, '(', 533, 52, 533, 53),
woosh.Token(woosh.NAME, 'path', 533, 53, 533, 57),
woosh.Token(woosh.OP, ',', 533, 57, 533, 58),
woosh.Token(woosh.NAME, 'is_dir', 533, 59, 533, 65),
woosh.Token(woosh.OP, ',', 533, 65, 533, 66),
woosh.Token(woosh.NAME, 'exists', 533, 67, 533, 73),
woosh.Token(woosh.OP, ',', 533, 73, 533, 74),
woosh.Token(woosh.NAME, 'scandir', 533, 75, 533, 82),
woosh.Token(woosh.OP, ')', 533, 82, 533, 83),
woosh.Token(woosh.OP, ':', 533, 83, 533, 84),
woosh.Token(woosh.NEWLINE, '\r\n', 533, 84, 534, 0),
woosh.Token(woosh.INDENT, '                    ', 534, 0, 534, 20),
woosh.Token(woosh.NAME, 'yield', 534, 20, 534, 25),
woosh.Token(woosh.NAME, 'p', 534, 26, 534, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 534, 27, 535, 0),
woosh.Token(woosh.DEDENT, '        ', 535, 0, 535, 8),
woosh.Token(woosh.DEDENT, '', 535, 8, 535, 8),
woosh.Token(woosh.DEDENT, '', 535, 8, 535, 8),
woosh.Token(woosh.NAME, 'except', 535, 8, 535, 14),
woosh.Token(woosh.NAME, 'PermissionError', 535, 15, 535, 30),
woosh.Token(woosh.OP, ':', 535, 30, 535, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 31, 536, 0),
woosh.Token(woosh.INDENT, '            ', 536, 0, 536, 12),
woosh.Token(woosh.NAME, 'return', 536, 12, 536, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 18, 537, 0),
woosh.Token(woosh.DEDENT, '', 539, 0, 539, 0),
woosh.Token(woosh.DEDENT, '', 539, 0, 539, 0),
woosh.Token(woosh.DEDENT, '', 539, 0, 539, 0),
woosh.Token(woosh.NAME, 'class', 539, 0, 539, 5),
woosh.Token(woosh.NAME, '_WildcardSelector', 539, 6, 539, 23),
woosh.Token(woosh.OP, '(', 539, 23, 539, 24),
woosh.Token(woosh.NAME, '_Selector', 539, 24, 539, 33),
woosh.Token(woosh.OP, ')', 539, 33, 539, 34),
woosh.Token(woosh.OP, ':', 539, 34, 539, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 539, 35, 540, 0),
woosh.Token(woosh.INDENT, '    ', 541, 0, 541, 4),
woosh.Token(woosh.NAME, 'def', 541, 4, 541, 7),
woosh.Token(woosh.NAME, '__init__', 541, 8, 541, 16),
woosh.Token(woosh.OP, '(', 541, 16, 541, 17),
woosh.Token(woosh.NAME, 'self', 541, 17, 541, 21),
woosh.Token(woosh.OP, ',', 541, 21, 541, 22),
woosh.Token(woosh.NAME, 'pat', 541, 23, 541, 26),
woosh.Token(woosh.OP, ',', 541, 26, 541, 27),
woosh.Token(woosh.NAME, 'child_parts', 541, 28, 541, 39),
woosh.Token(woosh.OP, ',', 541, 39, 541, 40),
woosh.Token(woosh.NAME, 'flavour', 541, 41, 541, 48),
woosh.Token(woosh.OP, ')', 541, 48, 541, 49),
woosh.Token(woosh.OP, ':', 541, 49, 541, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 541, 50, 542, 0),
woosh.Token(woosh.INDENT, '        ', 542, 0, 542, 8),
woosh.Token(woosh.NAME, 'self', 542, 8, 542, 12),
woosh.Token(woosh.OP, '.', 542, 12, 542, 13),
woosh.Token(woosh.NAME, 'match', 542, 13, 542, 18),
woosh.Token(woosh.OP, '=', 542, 19, 542, 20),
woosh.Token(woosh.NAME, 'flavour', 542, 21, 542, 28),
woosh.Token(woosh.OP, '.', 542, 28, 542, 29),
woosh.Token(woosh.NAME, 'compile_pattern', 542, 29, 542, 44),
woosh.Token(woosh.OP, '(', 542, 44, 542, 45),
woosh.Token(woosh.NAME, 'pat', 542, 45, 542, 48),
woosh.Token(woosh.OP, ')', 542, 48, 542, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 49, 543, 0),
woosh.Token(woosh.NAME, '_Selector', 543, 8, 543, 17),
woosh.Token(woosh.OP, '.', 543, 17, 543, 18),
woosh.Token(woosh.NAME, '__init__', 543, 18, 543, 26),
woosh.Token(woosh.OP, '(', 543, 26, 543, 27),
woosh.Token(woosh.NAME, 'self', 543, 27, 543, 31),
woosh.Token(woosh.OP, ',', 543, 31, 543, 32),
woosh.Token(woosh.NAME, 'child_parts', 543, 33, 543, 44),
woosh.Token(woosh.OP, ',', 543, 44, 543, 45),
woosh.Token(woosh.NAME, 'flavour', 543, 46, 543, 53),
woosh.Token(woosh.OP, ')', 543, 53, 543, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 54, 544, 0),
woosh.Token(woosh.DEDENT, '    ', 545, 0, 545, 4),
woosh.Token(woosh.NAME, 'def', 545, 4, 545, 7),
woosh.Token(woosh.NAME, '_select_from', 545, 8, 545, 20),
woosh.Token(woosh.OP, '(', 545, 20, 545, 21),
woosh.Token(woosh.NAME, 'self', 545, 21, 545, 25),
woosh.Token(woosh.OP, ',', 545, 25, 545, 26),
woosh.Token(woosh.NAME, 'parent_path', 545, 27, 545, 38),
woosh.Token(woosh.OP, ',', 545, 38, 545, 39),
woosh.Token(woosh.NAME, 'is_dir', 545, 40, 545, 46),
woosh.Token(woosh.OP, ',', 545, 46, 545, 47),
woosh.Token(woosh.NAME, 'exists', 545, 48, 545, 54),
woosh.Token(woosh.OP, ',', 545, 54, 545, 55),
woosh.Token(woosh.NAME, 'scandir', 545, 56, 545, 63),
woosh.Token(woosh.OP, ')', 545, 63, 545, 64),
woosh.Token(woosh.OP, ':', 545, 64, 545, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 65, 546, 0),
woosh.Token(woosh.INDENT, '        ', 546, 0, 546, 8),
woosh.Token(woosh.NAME, 'try', 546, 8, 546, 11),
woosh.Token(woosh.OP, ':', 546, 11, 546, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 12, 547, 0),
woosh.Token(woosh.INDENT, '            ', 547, 0, 547, 12),
woosh.Token(woosh.NAME, 'with', 547, 12, 547, 16),
woosh.Token(woosh.NAME, 'scandir', 547, 17, 547, 24),
woosh.Token(woosh.OP, '(', 547, 24, 547, 25),
woosh.Token(woosh.NAME, 'parent_path', 547, 25, 547, 36),
woosh.Token(woosh.OP, ')', 547, 36, 547, 37),
woosh.Token(woosh.NAME, 'as', 547, 38, 547, 40),
woosh.Token(woosh.NAME, 'scandir_it', 547, 41, 547, 51),
woosh.Token(woosh.OP, ':', 547, 51, 547, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 52, 548, 0),
woosh.Token(woosh.INDENT, '                ', 548, 0, 548, 16),
woosh.Token(woosh.NAME, 'entries', 548, 16, 548, 23),
woosh.Token(woosh.OP, '=', 548, 24, 548, 25),
woosh.Token(woosh.NAME, 'list', 548, 26, 548, 30),
woosh.Token(woosh.OP, '(', 548, 30, 548, 31),
woosh.Token(woosh.NAME, 'scandir_it', 548, 31, 548, 41),
woosh.Token(woosh.OP, ')', 548, 41, 548, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 42, 549, 0),
woosh.Token(woosh.DEDENT, '            ', 549, 0, 549, 12),
woosh.Token(woosh.NAME, 'for', 549, 12, 549, 15),
woosh.Token(woosh.NAME, 'entry', 549, 16, 549, 21),
woosh.Token(woosh.NAME, 'in', 549, 22, 549, 24),
woosh.Token(woosh.NAME, 'entries', 549, 25, 549, 32),
woosh.Token(woosh.OP, ':', 549, 32, 549, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 549, 33, 550, 0),
woosh.Token(woosh.INDENT, '                ', 550, 0, 550, 16),
woosh.Token(woosh.NAME, 'if', 550, 16, 550, 18),
woosh.Token(woosh.NAME, 'self', 550, 19, 550, 23),
woosh.Token(woosh.OP, '.', 550, 23, 550, 24),
woosh.Token(woosh.NAME, 'dironly', 550, 24, 550, 31),
woosh.Token(woosh.OP, ':', 550, 31, 550, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 550, 32, 551, 0),
woosh.Token(woosh.INDENT, '                    ', 551, 0, 551, 20),
woosh.Token(woosh.NAME, 'try', 551, 20, 551, 23),
woosh.Token(woosh.OP, ':', 551, 23, 551, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 551, 24, 552, 0),
woosh.Token(woosh.COMMENT, '# "entry.is_dir()" can raise PermissionError', 552, 24, 552, 68),
woosh.Token(woosh.COMMENT, '# in some cases (see bpo-38894), which is not', 553, 24, 553, 69),
woosh.Token(woosh.COMMENT, '# among the errors ignored by _ignore_error()', 554, 24, 554, 69),
woosh.Token(woosh.INDENT, '                        ', 555, 0, 555, 24),
woosh.Token(woosh.NAME, 'if', 555, 24, 555, 26),
woosh.Token(woosh.NAME, 'not', 555, 27, 555, 30),
woosh.Token(woosh.NAME, 'entry', 555, 31, 555, 36),
woosh.Token(woosh.OP, '.', 555, 36, 555, 37),
woosh.Token(woosh.NAME, 'is_dir', 555, 37, 555, 43),
woosh.Token(woosh.OP, '(', 555, 43, 555, 44),
woosh.Token(woosh.OP, ')', 555, 44, 555, 45),
woosh.Token(woosh.OP, ':', 555, 45, 555, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 46, 556, 0),
woosh.Token(woosh.INDENT, '                            ', 556, 0, 556, 28),
woosh.Token(woosh.NAME, 'continue', 556, 28, 556, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 36, 557, 0),
woosh.Token(woosh.DEDENT, '                    ', 557, 0, 557, 20),
woosh.Token(woosh.DEDENT, '', 557, 20, 557, 20),
woosh.Token(woosh.NAME, 'except', 557, 20, 557, 26),
woosh.Token(woosh.NAME, 'OSError', 557, 27, 557, 34),
woosh.Token(woosh.NAME, 'as', 557, 35, 557, 37),
woosh.Token(woosh.NAME, 'e', 557, 38, 557, 39),
woosh.Token(woosh.OP, ':', 557, 39, 557, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 40, 558, 0),
woosh.Token(woosh.INDENT, '                        ', 558, 0, 558, 24),
woosh.Token(woosh.NAME, 'if', 558, 24, 558, 26),
woosh.Token(woosh.NAME, 'not', 558, 27, 558, 30),
woosh.Token(woosh.NAME, '_ignore_error', 558, 31, 558, 44),
woosh.Token(woosh.OP, '(', 558, 44, 558, 45),
woosh.Token(woosh.NAME, 'e', 558, 45, 558, 46),
woosh.Token(woosh.OP, ')', 558, 46, 558, 47),
woosh.Token(woosh.OP, ':', 558, 47, 558, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 558, 48, 559, 0),
woosh.Token(woosh.INDENT, '                            ', 559, 0, 559, 28),
woosh.Token(woosh.NAME, 'raise', 559, 28, 559, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 559, 33, 560, 0),
woosh.Token(woosh.DEDENT, '                        ', 560, 0, 560, 24),
woosh.Token(woosh.NAME, 'continue', 560, 24, 560, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 560, 32, 561, 0),
woosh.Token(woosh.DEDENT, '                ', 561, 0, 561, 16),
woosh.Token(woosh.DEDENT, '', 561, 16, 561, 16),
woosh.Token(woosh.NAME, 'name', 561, 16, 561, 20),
woosh.Token(woosh.OP, '=', 561, 21, 561, 22),
woosh.Token(woosh.NAME, 'entry', 561, 23, 561, 28),
woosh.Token(woosh.OP, '.', 561, 28, 561, 29),
woosh.Token(woosh.NAME, 'name', 561, 29, 561, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 561, 33, 562, 0),
woosh.Token(woosh.NAME, 'if', 562, 16, 562, 18),
woosh.Token(woosh.NAME, 'self', 562, 19, 562, 23),
woosh.Token(woosh.OP, '.', 562, 23, 562, 24),
woosh.Token(woosh.NAME, 'match', 562, 24, 562, 29),
woosh.Token(woosh.OP, '(', 562, 29, 562, 30),
woosh.Token(woosh.NAME, 'name', 562, 30, 562, 34),
woosh.Token(woosh.OP, ')', 562, 34, 562, 35),
woosh.Token(woosh.OP, ':', 562, 35, 562, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 562, 36, 563, 0),
woosh.Token(woosh.INDENT, '                    ', 563, 0, 563, 20),
woosh.Token(woosh.NAME, 'path', 563, 20, 563, 24),
woosh.Token(woosh.OP, '=', 563, 25, 563, 26),
woosh.Token(woosh.NAME, 'parent_path', 563, 27, 563, 38),
woosh.Token(woosh.OP, '.', 563, 38, 563, 39),
woosh.Token(woosh.NAME, '_make_child_relpath', 563, 39, 563, 58),
woosh.Token(woosh.OP, '(', 563, 58, 563, 59),
woosh.Token(woosh.NAME, 'name', 563, 59, 563, 63),
woosh.Token(woosh.OP, ')', 563, 63, 563, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 563, 64, 564, 0),
woosh.Token(woosh.NAME, 'for', 564, 20, 564, 23),
woosh.Token(woosh.NAME, 'p', 564, 24, 564, 25),
woosh.Token(woosh.NAME, 'in', 564, 26, 564, 28),
woosh.Token(woosh.NAME, 'self', 564, 29, 564, 33),
woosh.Token(woosh.OP, '.', 564, 33, 564, 34),
woosh.Token(woosh.NAME, 'successor', 564, 34, 564, 43),
woosh.Token(woosh.OP, '.', 564, 43, 564, 44),
woosh.Token(woosh.NAME, '_select_from', 564, 44, 564, 56),
woosh.Token(woosh.OP, '(', 564, 56, 564, 57),
woosh.Token(woosh.NAME, 'path', 564, 57, 564, 61),
woosh.Token(woosh.OP, ',', 564, 61, 564, 62),
woosh.Token(woosh.NAME, 'is_dir', 564, 63, 564, 69),
woosh.Token(woosh.OP, ',', 564, 69, 564, 70),
woosh.Token(woosh.NAME, 'exists', 564, 71, 564, 77),
woosh.Token(woosh.OP, ',', 564, 77, 564, 78),
woosh.Token(woosh.NAME, 'scandir', 564, 79, 564, 86),
woosh.Token(woosh.OP, ')', 564, 86, 564, 87),
woosh.Token(woosh.OP, ':', 564, 87, 564, 88),
woosh.Token(woosh.NEWLINE, '\r\n', 564, 88, 565, 0),
woosh.Token(woosh.INDENT, '                        ', 565, 0, 565, 24),
woosh.Token(woosh.NAME, 'yield', 565, 24, 565, 29),
woosh.Token(woosh.NAME, 'p', 565, 30, 565, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 565, 31, 566, 0),
woosh.Token(woosh.DEDENT, '        ', 566, 0, 566, 8),
woosh.Token(woosh.DEDENT, '', 566, 8, 566, 8),
woosh.Token(woosh.DEDENT, '', 566, 8, 566, 8),
woosh.Token(woosh.DEDENT, '', 566, 8, 566, 8),
woosh.Token(woosh.NAME, 'except', 566, 8, 566, 14),
woosh.Token(woosh.NAME, 'PermissionError', 566, 15, 566, 30),
woosh.Token(woosh.OP, ':', 566, 30, 566, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 566, 31, 567, 0),
woosh.Token(woosh.INDENT, '            ', 567, 0, 567, 12),
woosh.Token(woosh.NAME, 'return', 567, 12, 567, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 567, 18, 568, 0),
woosh.Token(woosh.DEDENT, '', 570, 0, 570, 0),
woosh.Token(woosh.DEDENT, '', 570, 0, 570, 0),
woosh.Token(woosh.DEDENT, '', 570, 0, 570, 0),
woosh.Token(woosh.NAME, 'class', 570, 0, 570, 5),
woosh.Token(woosh.NAME, '_RecursiveWildcardSelector', 570, 6, 570, 32),
woosh.Token(woosh.OP, '(', 570, 32, 570, 33),
woosh.Token(woosh.NAME, '_Selector', 570, 33, 570, 42),
woosh.Token(woosh.OP, ')', 570, 42, 570, 43),
woosh.Token(woosh.OP, ':', 570, 43, 570, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 570, 44, 571, 0),
woosh.Token(woosh.INDENT, '    ', 572, 0, 572, 4),
woosh.Token(woosh.NAME, 'def', 572, 4, 572, 7),
woosh.Token(woosh.NAME, '__init__', 572, 8, 572, 16),
woosh.Token(woosh.OP, '(', 572, 16, 572, 17),
woosh.Token(woosh.NAME, 'self', 572, 17, 572, 21),
woosh.Token(woosh.OP, ',', 572, 21, 572, 22),
woosh.Token(woosh.NAME, 'pat', 572, 23, 572, 26),
woosh.Token(woosh.OP, ',', 572, 26, 572, 27),
woosh.Token(woosh.NAME, 'child_parts', 572, 28, 572, 39),
woosh.Token(woosh.OP, ',', 572, 39, 572, 40),
woosh.Token(woosh.NAME, 'flavour', 572, 41, 572, 48),
woosh.Token(woosh.OP, ')', 572, 48, 572, 49),
woosh.Token(woosh.OP, ':', 572, 49, 572, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 572, 50, 573, 0),
woosh.Token(woosh.INDENT, '        ', 573, 0, 573, 8),
woosh.Token(woosh.NAME, '_Selector', 573, 8, 573, 17),
woosh.Token(woosh.OP, '.', 573, 17, 573, 18),
woosh.Token(woosh.NAME, '__init__', 573, 18, 573, 26),
woosh.Token(woosh.OP, '(', 573, 26, 573, 27),
woosh.Token(woosh.NAME, 'self', 573, 27, 573, 31),
woosh.Token(woosh.OP, ',', 573, 31, 573, 32),
woosh.Token(woosh.NAME, 'child_parts', 573, 33, 573, 44),
woosh.Token(woosh.OP, ',', 573, 44, 573, 45),
woosh.Token(woosh.NAME, 'flavour', 573, 46, 573, 53),
woosh.Token(woosh.OP, ')', 573, 53, 573, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 54, 574, 0),
woosh.Token(woosh.DEDENT, '    ', 575, 0, 575, 4),
woosh.Token(woosh.NAME, 'def', 575, 4, 575, 7),
woosh.Token(woosh.NAME, '_iterate_directories', 575, 8, 575, 28),
woosh.Token(woosh.OP, '(', 575, 28, 575, 29),
woosh.Token(woosh.NAME, 'self', 575, 29, 575, 33),
woosh.Token(woosh.OP, ',', 575, 33, 575, 34),
woosh.Token(woosh.NAME, 'parent_path', 575, 35, 575, 46),
woosh.Token(woosh.OP, ',', 575, 46, 575, 47),
woosh.Token(woosh.NAME, 'is_dir', 575, 48, 575, 54),
woosh.Token(woosh.OP, ',', 575, 54, 575, 55),
woosh.Token(woosh.NAME, 'scandir', 575, 56, 575, 63),
woosh.Token(woosh.OP, ')', 575, 63, 575, 64),
woosh.Token(woosh.OP, ':', 575, 64, 575, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 575, 65, 576, 0),
woosh.Token(woosh.INDENT, '        ', 576, 0, 576, 8),
woosh.Token(woosh.NAME, 'yield', 576, 8, 576, 13),
woosh.Token(woosh.NAME, 'parent_path', 576, 14, 576, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 25, 577, 0),
woosh.Token(woosh.NAME, 'try', 577, 8, 577, 11),
woosh.Token(woosh.OP, ':', 577, 11, 577, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 577, 12, 578, 0),
woosh.Token(woosh.INDENT, '            ', 578, 0, 578, 12),
woosh.Token(woosh.NAME, 'with', 578, 12, 578, 16),
woosh.Token(woosh.NAME, 'scandir', 578, 17, 578, 24),
woosh.Token(woosh.OP, '(', 578, 24, 578, 25),
woosh.Token(woosh.NAME, 'parent_path', 578, 25, 578, 36),
woosh.Token(woosh.OP, ')', 578, 36, 578, 37),
woosh.Token(woosh.NAME, 'as', 578, 38, 578, 40),
woosh.Token(woosh.NAME, 'scandir_it', 578, 41, 578, 51),
woosh.Token(woosh.OP, ':', 578, 51, 578, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 578, 52, 579, 0),
woosh.Token(woosh.INDENT, '                ', 579, 0, 579, 16),
woosh.Token(woosh.NAME, 'entries', 579, 16, 579, 23),
woosh.Token(woosh.OP, '=', 579, 24, 579, 25),
woosh.Token(woosh.NAME, 'list', 579, 26, 579, 30),
woosh.Token(woosh.OP, '(', 579, 30, 579, 31),
woosh.Token(woosh.NAME, 'scandir_it', 579, 31, 579, 41),
woosh.Token(woosh.OP, ')', 579, 41, 579, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 42, 580, 0),
woosh.Token(woosh.DEDENT, '            ', 580, 0, 580, 12),
woosh.Token(woosh.NAME, 'for', 580, 12, 580, 15),
woosh.Token(woosh.NAME, 'entry', 580, 16, 580, 21),
woosh.Token(woosh.NAME, 'in', 580, 22, 580, 24),
woosh.Token(woosh.NAME, 'entries', 580, 25, 580, 32),
woosh.Token(woosh.OP, ':', 580, 32, 580, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 580, 33, 581, 0),
woosh.Token(woosh.INDENT, '                ', 581, 0, 581, 16),
woosh.Token(woosh.NAME, 'entry_is_dir', 581, 16, 581, 28),
woosh.Token(woosh.OP, '=', 581, 29, 581, 30),
woosh.Token(woosh.NAME, 'False', 581, 31, 581, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 36, 582, 0),
woosh.Token(woosh.NAME, 'try', 582, 16, 582, 19),
woosh.Token(woosh.OP, ':', 582, 19, 582, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 20, 583, 0),
woosh.Token(woosh.INDENT, '                    ', 583, 0, 583, 20),
woosh.Token(woosh.NAME, 'entry_is_dir', 583, 20, 583, 32),
woosh.Token(woosh.OP, '=', 583, 33, 583, 34),
woosh.Token(woosh.NAME, 'entry', 583, 35, 583, 40),
woosh.Token(woosh.OP, '.', 583, 40, 583, 41),
woosh.Token(woosh.NAME, 'is_dir', 583, 41, 583, 47),
woosh.Token(woosh.OP, '(', 583, 47, 583, 48),
woosh.Token(woosh.OP, ')', 583, 48, 583, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 49, 584, 0),
woosh.Token(woosh.DEDENT, '                ', 584, 0, 584, 16),
woosh.Token(woosh.NAME, 'except', 584, 16, 584, 22),
woosh.Token(woosh.NAME, 'OSError', 584, 23, 584, 30),
woosh.Token(woosh.NAME, 'as', 584, 31, 584, 33),
woosh.Token(woosh.NAME, 'e', 584, 34, 584, 35),
woosh.Token(woosh.OP, ':', 584, 35, 584, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 584, 36, 585, 0),
woosh.Token(woosh.INDENT, '                    ', 585, 0, 585, 20),
woosh.Token(woosh.NAME, 'if', 585, 20, 585, 22),
woosh.Token(woosh.NAME, 'not', 585, 23, 585, 26),
woosh.Token(woosh.NAME, '_ignore_error', 585, 27, 585, 40),
woosh.Token(woosh.OP, '(', 585, 40, 585, 41),
woosh.Token(woosh.NAME, 'e', 585, 41, 585, 42),
woosh.Token(woosh.OP, ')', 585, 42, 585, 43),
woosh.Token(woosh.OP, ':', 585, 43, 585, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 44, 586, 0),
woosh.Token(woosh.INDENT, '                        ', 586, 0, 586, 24),
woosh.Token(woosh.NAME, 'raise', 586, 24, 586, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 586, 29, 587, 0),
woosh.Token(woosh.DEDENT, '                ', 587, 0, 587, 16),
woosh.Token(woosh.DEDENT, '', 587, 16, 587, 16),
woosh.Token(woosh.NAME, 'if', 587, 16, 587, 18),
woosh.Token(woosh.NAME, 'entry_is_dir', 587, 19, 587, 31),
woosh.Token(woosh.NAME, 'and', 587, 32, 587, 35),
woosh.Token(woosh.NAME, 'not', 587, 36, 587, 39),
woosh.Token(woosh.NAME, 'entry', 587, 40, 587, 45),
woosh.Token(woosh.OP, '.', 587, 45, 587, 46),
woosh.Token(woosh.NAME, 'is_symlink', 587, 46, 587, 56),
woosh.Token(woosh.OP, '(', 587, 56, 587, 57),
woosh.Token(woosh.OP, ')', 587, 57, 587, 58),
woosh.Token(woosh.OP, ':', 587, 58, 587, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 59, 588, 0),
woosh.Token(woosh.INDENT, '                    ', 588, 0, 588, 20),
woosh.Token(woosh.NAME, 'path', 588, 20, 588, 24),
woosh.Token(woosh.OP, '=', 588, 25, 588, 26),
woosh.Token(woosh.NAME, 'parent_path', 588, 27, 588, 38),
woosh.Token(woosh.OP, '.', 588, 38, 588, 39),
woosh.Token(woosh.NAME, '_make_child_relpath', 588, 39, 588, 58),
woosh.Token(woosh.OP, '(', 588, 58, 588, 59),
woosh.Token(woosh.NAME, 'entry', 588, 59, 588, 64),
woosh.Token(woosh.OP, '.', 588, 64, 588, 65),
woosh.Token(woosh.NAME, 'name', 588, 65, 588, 69),
woosh.Token(woosh.OP, ')', 588, 69, 588, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 588, 70, 589, 0),
woosh.Token(woosh.NAME, 'for', 589, 20, 589, 23),
woosh.Token(woosh.NAME, 'p', 589, 24, 589, 25),
woosh.Token(woosh.NAME, 'in', 589, 26, 589, 28),
woosh.Token(woosh.NAME, 'self', 589, 29, 589, 33),
woosh.Token(woosh.OP, '.', 589, 33, 589, 34),
woosh.Token(woosh.NAME, '_iterate_directories', 589, 34, 589, 54),
woosh.Token(woosh.OP, '(', 589, 54, 589, 55),
woosh.Token(woosh.NAME, 'path', 589, 55, 589, 59),
woosh.Token(woosh.OP, ',', 589, 59, 589, 60),
woosh.Token(woosh.NAME, 'is_dir', 589, 61, 589, 67),
woosh.Token(woosh.OP, ',', 589, 67, 589, 68),
woosh.Token(woosh.NAME, 'scandir', 589, 69, 589, 76),
woosh.Token(woosh.OP, ')', 589, 76, 589, 77),
woosh.Token(woosh.OP, ':', 589, 77, 589, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 78, 590, 0),
woosh.Token(woosh.INDENT, '                        ', 590, 0, 590, 24),
woosh.Token(woosh.NAME, 'yield', 590, 24, 590, 29),
woosh.Token(woosh.NAME, 'p', 590, 30, 590, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 31, 591, 0),
woosh.Token(woosh.DEDENT, '        ', 591, 0, 591, 8),
woosh.Token(woosh.DEDENT, '', 591, 8, 591, 8),
woosh.Token(woosh.DEDENT, '', 591, 8, 591, 8),
woosh.Token(woosh.DEDENT, '', 591, 8, 591, 8),
woosh.Token(woosh.NAME, 'except', 591, 8, 591, 14),
woosh.Token(woosh.NAME, 'PermissionError', 591, 15, 591, 30),
woosh.Token(woosh.OP, ':', 591, 30, 591, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 31, 592, 0),
woosh.Token(woosh.INDENT, '            ', 592, 0, 592, 12),
woosh.Token(woosh.NAME, 'return', 592, 12, 592, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 18, 593, 0),
woosh.Token(woosh.DEDENT, '    ', 594, 0, 594, 4),
woosh.Token(woosh.DEDENT, '', 594, 4, 594, 4),
woosh.Token(woosh.NAME, 'def', 594, 4, 594, 7),
woosh.Token(woosh.NAME, '_select_from', 594, 8, 594, 20),
woosh.Token(woosh.OP, '(', 594, 20, 594, 21),
woosh.Token(woosh.NAME, 'self', 594, 21, 594, 25),
woosh.Token(woosh.OP, ',', 594, 25, 594, 26),
woosh.Token(woosh.NAME, 'parent_path', 594, 27, 594, 38),
woosh.Token(woosh.OP, ',', 594, 38, 594, 39),
woosh.Token(woosh.NAME, 'is_dir', 594, 40, 594, 46),
woosh.Token(woosh.OP, ',', 594, 46, 594, 47),
woosh.Token(woosh.NAME, 'exists', 594, 48, 594, 54),
woosh.Token(woosh.OP, ',', 594, 54, 594, 55),
woosh.Token(woosh.NAME, 'scandir', 594, 56, 594, 63),
woosh.Token(woosh.OP, ')', 594, 63, 594, 64),
woosh.Token(woosh.OP, ':', 594, 64, 594, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 65, 595, 0),
woosh.Token(woosh.INDENT, '        ', 595, 0, 595, 8),
woosh.Token(woosh.NAME, 'try', 595, 8, 595, 11),
woosh.Token(woosh.OP, ':', 595, 11, 595, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 595, 12, 596, 0),
woosh.Token(woosh.INDENT, '            ', 596, 0, 596, 12),
woosh.Token(woosh.NAME, 'yielded', 596, 12, 596, 19),
woosh.Token(woosh.OP, '=', 596, 20, 596, 21),
woosh.Token(woosh.NAME, 'set', 596, 22, 596, 25),
woosh.Token(woosh.OP, '(', 596, 25, 596, 26),
woosh.Token(woosh.OP, ')', 596, 26, 596, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 27, 597, 0),
woosh.Token(woosh.NAME, 'try', 597, 12, 597, 15),
woosh.Token(woosh.OP, ':', 597, 15, 597, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 16, 598, 0),
woosh.Token(woosh.INDENT, '                ', 598, 0, 598, 16),
woosh.Token(woosh.NAME, 'successor_select', 598, 16, 598, 32),
woosh.Token(woosh.OP, '=', 598, 33, 598, 34),
woosh.Token(woosh.NAME, 'self', 598, 35, 598, 39),
woosh.Token(woosh.OP, '.', 598, 39, 598, 40),
woosh.Token(woosh.NAME, 'successor', 598, 40, 598, 49),
woosh.Token(woosh.OP, '.', 598, 49, 598, 50),
woosh.Token(woosh.NAME, '_select_from', 598, 50, 598, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 598, 62, 599, 0),
woosh.Token(woosh.NAME, 'for', 599, 16, 599, 19),
woosh.Token(woosh.NAME, 'starting_point', 599, 20, 599, 34),
woosh.Token(woosh.NAME, 'in', 599, 35, 599, 37),
woosh.Token(woosh.NAME, 'self', 599, 38, 599, 42),
woosh.Token(woosh.OP, '.', 599, 42, 599, 43),
woosh.Token(woosh.NAME, '_iterate_directories', 599, 43, 599, 63),
woosh.Token(woosh.OP, '(', 599, 63, 599, 64),
woosh.Token(woosh.NAME, 'parent_path', 599, 64, 599, 75),
woosh.Token(woosh.OP, ',', 599, 75, 599, 76),
woosh.Token(woosh.NAME, 'is_dir', 599, 77, 599, 83),
woosh.Token(woosh.OP, ',', 599, 83, 599, 84),
woosh.Token(woosh.NAME, 'scandir', 599, 85, 599, 92),
woosh.Token(woosh.OP, ')', 599, 92, 599, 93),
woosh.Token(woosh.OP, ':', 599, 93, 599, 94),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 94, 600, 0),
woosh.Token(woosh.INDENT, '                    ', 600, 0, 600, 20),
woosh.Token(woosh.NAME, 'for', 600, 20, 600, 23),
woosh.Token(woosh.NAME, 'p', 600, 24, 600, 25),
woosh.Token(woosh.NAME, 'in', 600, 26, 600, 28),
woosh.Token(woosh.NAME, 'successor_select', 600, 29, 600, 45),
woosh.Token(woosh.OP, '(', 600, 45, 600, 46),
woosh.Token(woosh.NAME, 'starting_point', 600, 46, 600, 60),
woosh.Token(woosh.OP, ',', 600, 60, 600, 61),
woosh.Token(woosh.NAME, 'is_dir', 600, 62, 600, 68),
woosh.Token(woosh.OP, ',', 600, 68, 600, 69),
woosh.Token(woosh.NAME, 'exists', 600, 70, 600, 76),
woosh.Token(woosh.OP, ',', 600, 76, 600, 77),
woosh.Token(woosh.NAME, 'scandir', 600, 78, 600, 85),
woosh.Token(woosh.OP, ')', 600, 85, 600, 86),
woosh.Token(woosh.OP, ':', 600, 86, 600, 87),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 87, 601, 0),
woosh.Token(woosh.INDENT, '                        ', 601, 0, 601, 24),
woosh.Token(woosh.NAME, 'if', 601, 24, 601, 26),
woosh.Token(woosh.NAME, 'p', 601, 27, 601, 28),
woosh.Token(woosh.NAME, 'not', 601, 29, 601, 32),
woosh.Token(woosh.NAME, 'in', 601, 33, 601, 35),
woosh.Token(woosh.NAME, 'yielded', 601, 36, 601, 43),
woosh.Token(woosh.OP, ':', 601, 43, 601, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 44, 602, 0),
woosh.Token(woosh.INDENT, '                            ', 602, 0, 602, 28),
woosh.Token(woosh.NAME, 'yield', 602, 28, 602, 33),
woosh.Token(woosh.NAME, 'p', 602, 34, 602, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 35, 603, 0),
woosh.Token(woosh.NAME, 'yielded', 603, 28, 603, 35),
woosh.Token(woosh.OP, '.', 603, 35, 603, 36),
woosh.Token(woosh.NAME, 'add', 603, 36, 603, 39),
woosh.Token(woosh.OP, '(', 603, 39, 603, 40),
woosh.Token(woosh.NAME, 'p', 603, 40, 603, 41),
woosh.Token(woosh.OP, ')', 603, 41, 603, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 42, 604, 0),
woosh.Token(woosh.DEDENT, '            ', 604, 0, 604, 12),
woosh.Token(woosh.DEDENT, '', 604, 12, 604, 12),
woosh.Token(woosh.DEDENT, '', 604, 12, 604, 12),
woosh.Token(woosh.DEDENT, '', 604, 12, 604, 12),
woosh.Token(woosh.NAME, 'finally', 604, 12, 604, 19),
woosh.Token(woosh.OP, ':', 604, 19, 604, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 20, 605, 0),
woosh.Token(woosh.INDENT, '                ', 605, 0, 605, 16),
woosh.Token(woosh.NAME, 'yielded', 605, 16, 605, 23),
woosh.Token(woosh.OP, '.', 605, 23, 605, 24),
woosh.Token(woosh.NAME, 'clear', 605, 24, 605, 29),
woosh.Token(woosh.OP, '(', 605, 29, 605, 30),
woosh.Token(woosh.OP, ')', 605, 30, 605, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 31, 606, 0),
woosh.Token(woosh.DEDENT, '        ', 606, 0, 606, 8),
woosh.Token(woosh.DEDENT, '', 606, 8, 606, 8),
woosh.Token(woosh.NAME, 'except', 606, 8, 606, 14),
woosh.Token(woosh.NAME, 'PermissionError', 606, 15, 606, 30),
woosh.Token(woosh.OP, ':', 606, 30, 606, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 606, 31, 607, 0),
woosh.Token(woosh.INDENT, '            ', 607, 0, 607, 12),
woosh.Token(woosh.NAME, 'return', 607, 12, 607, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 18, 608, 0),
woosh.Token(woosh.COMMENT, '#', 610, 0, 610, 1),
woosh.Token(woosh.COMMENT, '# Public API', 611, 0, 611, 12),
woosh.Token(woosh.COMMENT, '#', 612, 0, 612, 1),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.NAME, 'class', 614, 0, 614, 5),
woosh.Token(woosh.NAME, '_PathParents', 614, 6, 614, 18),
woosh.Token(woosh.OP, '(', 614, 18, 614, 19),
woosh.Token(woosh.NAME, 'Sequence', 614, 19, 614, 27),
woosh.Token(woosh.OP, ')', 614, 27, 614, 28),
woosh.Token(woosh.OP, ':', 614, 28, 614, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 29, 615, 0),
woosh.Token(woosh.INDENT, '    ', 615, 0, 615, 4),
woosh.Token(woosh.STRING, '"""This object provides sequence-like access to the logical ancestors\r\n    of a path.  Don\'t try to construct it yourself."""', 615, 4, 616, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 616, 54, 617, 0),
woosh.Token(woosh.NAME, '__slots__', 617, 4, 617, 13),
woosh.Token(woosh.OP, '=', 617, 14, 617, 15),
woosh.Token(woosh.OP, '(', 617, 16, 617, 17),
woosh.Token(woosh.STRING, "'_pathcls'", 617, 17, 617, 27),
woosh.Token(woosh.OP, ',', 617, 27, 617, 28),
woosh.Token(woosh.STRING, "'_drv'", 617, 29, 617, 35),
woosh.Token(woosh.OP, ',', 617, 35, 617, 36),
woosh.Token(woosh.STRING, "'_root'", 617, 37, 617, 44),
woosh.Token(woosh.OP, ',', 617, 44, 617, 45),
woosh.Token(woosh.STRING, "'_parts'", 617, 46, 617, 54),
woosh.Token(woosh.OP, ')', 617, 54, 617, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 617, 55, 618, 0),
woosh.Token(woosh.NAME, 'def', 619, 4, 619, 7),
woosh.Token(woosh.NAME, '__init__', 619, 8, 619, 16),
woosh.Token(woosh.OP, '(', 619, 16, 619, 17),
woosh.Token(woosh.NAME, 'self', 619, 17, 619, 21),
woosh.Token(woosh.OP, ',', 619, 21, 619, 22),
woosh.Token(woosh.NAME, 'path', 619, 23, 619, 27),
woosh.Token(woosh.OP, ')', 619, 27, 619, 28),
woosh.Token(woosh.OP, ':', 619, 28, 619, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 29, 620, 0),
woosh.Token(woosh.COMMENT, "# We don't store the instance to avoid reference cycles", 620, 8, 620, 63),
woosh.Token(woosh.INDENT, '        ', 621, 0, 621, 8),
woosh.Token(woosh.NAME, 'self', 621, 8, 621, 12),
woosh.Token(woosh.OP, '.', 621, 12, 621, 13),
woosh.Token(woosh.NAME, '_pathcls', 621, 13, 621, 21),
woosh.Token(woosh.OP, '=', 621, 22, 621, 23),
woosh.Token(woosh.NAME, 'type', 621, 24, 621, 28),
woosh.Token(woosh.OP, '(', 621, 28, 621, 29),
woosh.Token(woosh.NAME, 'path', 621, 29, 621, 33),
woosh.Token(woosh.OP, ')', 621, 33, 621, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 34, 622, 0),
woosh.Token(woosh.NAME, 'self', 622, 8, 622, 12),
woosh.Token(woosh.OP, '.', 622, 12, 622, 13),
woosh.Token(woosh.NAME, '_drv', 622, 13, 622, 17),
woosh.Token(woosh.OP, '=', 622, 18, 622, 19),
woosh.Token(woosh.NAME, 'path', 622, 20, 622, 24),
woosh.Token(woosh.OP, '.', 622, 24, 622, 25),
woosh.Token(woosh.NAME, '_drv', 622, 25, 622, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 622, 29, 623, 0),
woosh.Token(woosh.NAME, 'self', 623, 8, 623, 12),
woosh.Token(woosh.OP, '.', 623, 12, 623, 13),
woosh.Token(woosh.NAME, '_root', 623, 13, 623, 18),
woosh.Token(woosh.OP, '=', 623, 19, 623, 20),
woosh.Token(woosh.NAME, 'path', 623, 21, 623, 25),
woosh.Token(woosh.OP, '.', 623, 25, 623, 26),
woosh.Token(woosh.NAME, '_root', 623, 26, 623, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 623, 31, 624, 0),
woosh.Token(woosh.NAME, 'self', 624, 8, 624, 12),
woosh.Token(woosh.OP, '.', 624, 12, 624, 13),
woosh.Token(woosh.NAME, '_parts', 624, 13, 624, 19),
woosh.Token(woosh.OP, '=', 624, 20, 624, 21),
woosh.Token(woosh.NAME, 'path', 624, 22, 624, 26),
woosh.Token(woosh.OP, '.', 624, 26, 624, 27),
woosh.Token(woosh.NAME, '_parts', 624, 27, 624, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 33, 625, 0),
woosh.Token(woosh.DEDENT, '    ', 626, 0, 626, 4),
woosh.Token(woosh.NAME, 'def', 626, 4, 626, 7),
woosh.Token(woosh.NAME, '__len__', 626, 8, 626, 15),
woosh.Token(woosh.OP, '(', 626, 15, 626, 16),
woosh.Token(woosh.NAME, 'self', 626, 16, 626, 20),
woosh.Token(woosh.OP, ')', 626, 20, 626, 21),
woosh.Token(woosh.OP, ':', 626, 21, 626, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 626, 22, 627, 0),
woosh.Token(woosh.INDENT, '        ', 627, 0, 627, 8),
woosh.Token(woosh.NAME, 'if', 627, 8, 627, 10),
woosh.Token(woosh.NAME, 'self', 627, 11, 627, 15),
woosh.Token(woosh.OP, '.', 627, 15, 627, 16),
woosh.Token(woosh.NAME, '_drv', 627, 16, 627, 20),
woosh.Token(woosh.NAME, 'or', 627, 21, 627, 23),
woosh.Token(woosh.NAME, 'self', 627, 24, 627, 28),
woosh.Token(woosh.OP, '.', 627, 28, 627, 29),
woosh.Token(woosh.NAME, '_root', 627, 29, 627, 34),
woosh.Token(woosh.OP, ':', 627, 34, 627, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 627, 35, 628, 0),
woosh.Token(woosh.INDENT, '            ', 628, 0, 628, 12),
woosh.Token(woosh.NAME, 'return', 628, 12, 628, 18),
woosh.Token(woosh.NAME, 'len', 628, 19, 628, 22),
woosh.Token(woosh.OP, '(', 628, 22, 628, 23),
woosh.Token(woosh.NAME, 'self', 628, 23, 628, 27),
woosh.Token(woosh.OP, '.', 628, 27, 628, 28),
woosh.Token(woosh.NAME, '_parts', 628, 28, 628, 34),
woosh.Token(woosh.OP, ')', 628, 34, 628, 35),
woosh.Token(woosh.OP, '-', 628, 36, 628, 37),
woosh.Token(woosh.NUMBER, '1', 628, 38, 628, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 628, 39, 629, 0),
woosh.Token(woosh.DEDENT, '        ', 629, 0, 629, 8),
woosh.Token(woosh.NAME, 'else', 629, 8, 629, 12),
woosh.Token(woosh.OP, ':', 629, 12, 629, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 13, 630, 0),
woosh.Token(woosh.INDENT, '            ', 630, 0, 630, 12),
woosh.Token(woosh.NAME, 'return', 630, 12, 630, 18),
woosh.Token(woosh.NAME, 'len', 630, 19, 630, 22),
woosh.Token(woosh.OP, '(', 630, 22, 630, 23),
woosh.Token(woosh.NAME, 'self', 630, 23, 630, 27),
woosh.Token(woosh.OP, '.', 630, 27, 630, 28),
woosh.Token(woosh.NAME, '_parts', 630, 28, 630, 34),
woosh.Token(woosh.OP, ')', 630, 34, 630, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 630, 35, 631, 0),
woosh.Token(woosh.DEDENT, '    ', 632, 0, 632, 4),
woosh.Token(woosh.DEDENT, '', 632, 4, 632, 4),
woosh.Token(woosh.NAME, 'def', 632, 4, 632, 7),
woosh.Token(woosh.NAME, '__getitem__', 632, 8, 632, 19),
woosh.Token(woosh.OP, '(', 632, 19, 632, 20),
woosh.Token(woosh.NAME, 'self', 632, 20, 632, 24),
woosh.Token(woosh.OP, ',', 632, 24, 632, 25),
woosh.Token(woosh.NAME, 'idx', 632, 26, 632, 29),
woosh.Token(woosh.OP, ')', 632, 29, 632, 30),
woosh.Token(woosh.OP, ':', 632, 30, 632, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 31, 633, 0),
woosh.Token(woosh.INDENT, '        ', 633, 0, 633, 8),
woosh.Token(woosh.NAME, 'if', 633, 8, 633, 10),
woosh.Token(woosh.NAME, 'idx', 633, 11, 633, 14),
woosh.Token(woosh.OP, '<', 633, 15, 633, 16),
woosh.Token(woosh.NUMBER, '0', 633, 17, 633, 18),
woosh.Token(woosh.NAME, 'or', 633, 19, 633, 21),
woosh.Token(woosh.NAME, 'idx', 633, 22, 633, 25),
woosh.Token(woosh.OP, '>=', 633, 26, 633, 28),
woosh.Token(woosh.NAME, 'len', 633, 29, 633, 32),
woosh.Token(woosh.OP, '(', 633, 32, 633, 33),
woosh.Token(woosh.NAME, 'self', 633, 33, 633, 37),
woosh.Token(woosh.OP, ')', 633, 37, 633, 38),
woosh.Token(woosh.OP, ':', 633, 38, 633, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 633, 39, 634, 0),
woosh.Token(woosh.INDENT, '            ', 634, 0, 634, 12),
woosh.Token(woosh.NAME, 'raise', 634, 12, 634, 17),
woosh.Token(woosh.NAME, 'IndexError', 634, 18, 634, 28),
woosh.Token(woosh.OP, '(', 634, 28, 634, 29),
woosh.Token(woosh.NAME, 'idx', 634, 29, 634, 32),
woosh.Token(woosh.OP, ')', 634, 32, 634, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 33, 635, 0),
woosh.Token(woosh.DEDENT, '        ', 635, 0, 635, 8),
woosh.Token(woosh.NAME, 'return', 635, 8, 635, 14),
woosh.Token(woosh.NAME, 'self', 635, 15, 635, 19),
woosh.Token(woosh.OP, '.', 635, 19, 635, 20),
woosh.Token(woosh.NAME, '_pathcls', 635, 20, 635, 28),
woosh.Token(woosh.OP, '.', 635, 28, 635, 29),
woosh.Token(woosh.NAME, '_from_parsed_parts', 635, 29, 635, 47),
woosh.Token(woosh.OP, '(', 635, 47, 635, 48),
woosh.Token(woosh.NAME, 'self', 635, 48, 635, 52),
woosh.Token(woosh.OP, '.', 635, 52, 635, 53),
woosh.Token(woosh.NAME, '_drv', 635, 53, 635, 57),
woosh.Token(woosh.OP, ',', 635, 57, 635, 58),
woosh.Token(woosh.NAME, 'self', 635, 59, 635, 63),
woosh.Token(woosh.OP, '.', 635, 63, 635, 64),
woosh.Token(woosh.NAME, '_root', 635, 64, 635, 69),
woosh.Token(woosh.OP, ',', 635, 69, 635, 70),
woosh.Token(woosh.NAME, 'self', 636, 48, 636, 52),
woosh.Token(woosh.OP, '.', 636, 52, 636, 53),
woosh.Token(woosh.NAME, '_parts', 636, 53, 636, 59),
woosh.Token(woosh.OP, '[', 636, 59, 636, 60),
woosh.Token(woosh.OP, ':', 636, 60, 636, 61),
woosh.Token(woosh.OP, '-', 636, 61, 636, 62),
woosh.Token(woosh.NAME, 'idx', 636, 62, 636, 65),
woosh.Token(woosh.OP, '-', 636, 66, 636, 67),
woosh.Token(woosh.NUMBER, '1', 636, 68, 636, 69),
woosh.Token(woosh.OP, ']', 636, 69, 636, 70),
woosh.Token(woosh.OP, ')', 636, 70, 636, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 636, 71, 637, 0),
woosh.Token(woosh.DEDENT, '    ', 638, 0, 638, 4),
woosh.Token(woosh.NAME, 'def', 638, 4, 638, 7),
woosh.Token(woosh.NAME, '__repr__', 638, 8, 638, 16),
woosh.Token(woosh.OP, '(', 638, 16, 638, 17),
woosh.Token(woosh.NAME, 'self', 638, 17, 638, 21),
woosh.Token(woosh.OP, ')', 638, 21, 638, 22),
woosh.Token(woosh.OP, ':', 638, 22, 638, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 23, 639, 0),
woosh.Token(woosh.INDENT, '        ', 639, 0, 639, 8),
woosh.Token(woosh.NAME, 'return', 639, 8, 639, 14),
woosh.Token(woosh.STRING, '"<{}.parents>"', 639, 15, 639, 29),
woosh.Token(woosh.OP, '.', 639, 29, 639, 30),
woosh.Token(woosh.NAME, 'format', 639, 30, 639, 36),
woosh.Token(woosh.OP, '(', 639, 36, 639, 37),
woosh.Token(woosh.NAME, 'self', 639, 37, 639, 41),
woosh.Token(woosh.OP, '.', 639, 41, 639, 42),
woosh.Token(woosh.NAME, '_pathcls', 639, 42, 639, 50),
woosh.Token(woosh.OP, '.', 639, 50, 639, 51),
woosh.Token(woosh.NAME, '__name__', 639, 51, 639, 59),
woosh.Token(woosh.OP, ')', 639, 59, 639, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 60, 640, 0),
woosh.Token(woosh.DEDENT, '', 642, 0, 642, 0),
woosh.Token(woosh.DEDENT, '', 642, 0, 642, 0),
woosh.Token(woosh.NAME, 'class', 642, 0, 642, 5),
woosh.Token(woosh.NAME, 'PurePath', 642, 6, 642, 14),
woosh.Token(woosh.OP, '(', 642, 14, 642, 15),
woosh.Token(woosh.NAME, 'object', 642, 15, 642, 21),
woosh.Token(woosh.OP, ')', 642, 21, 642, 22),
woosh.Token(woosh.OP, ':', 642, 22, 642, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 23, 643, 0),
woosh.Token(woosh.INDENT, '    ', 643, 0, 643, 4),
woosh.Token(woosh.STRING, '"""Base class for manipulating paths without I/O.\r\n\r\n    PurePath represents a filesystem path and offers operations which\r\n    don\'t imply any actual filesystem I/O.  Depending on your system,\r\n    instantiating a PurePath will return either a PurePosixPath or a\r\n    PureWindowsPath object.  You can also instantiate either of these classes\r\n    directly, regardless of your system.\r\n    """', 643, 4, 650, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 650, 7, 651, 0),
woosh.Token(woosh.NAME, '__slots__', 651, 4, 651, 13),
woosh.Token(woosh.OP, '=', 651, 14, 651, 15),
woosh.Token(woosh.OP, '(', 651, 16, 651, 17),
woosh.Token(woosh.STRING, "'_drv'", 652, 8, 652, 14),
woosh.Token(woosh.OP, ',', 652, 14, 652, 15),
woosh.Token(woosh.STRING, "'_root'", 652, 16, 652, 23),
woosh.Token(woosh.OP, ',', 652, 23, 652, 24),
woosh.Token(woosh.STRING, "'_parts'", 652, 25, 652, 33),
woosh.Token(woosh.OP, ',', 652, 33, 652, 34),
woosh.Token(woosh.STRING, "'_str'", 653, 8, 653, 14),
woosh.Token(woosh.OP, ',', 653, 14, 653, 15),
woosh.Token(woosh.STRING, "'_hash'", 653, 16, 653, 23),
woosh.Token(woosh.OP, ',', 653, 23, 653, 24),
woosh.Token(woosh.STRING, "'_pparts'", 653, 25, 653, 34),
woosh.Token(woosh.OP, ',', 653, 34, 653, 35),
woosh.Token(woosh.STRING, "'_cached_cparts'", 653, 36, 653, 52),
woosh.Token(woosh.OP, ',', 653, 52, 653, 53),
woosh.Token(woosh.OP, ')', 654, 4, 654, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 654, 5, 655, 0),
woosh.Token(woosh.NAME, 'def', 656, 4, 656, 7),
woosh.Token(woosh.NAME, '__new__', 656, 8, 656, 15),
woosh.Token(woosh.OP, '(', 656, 15, 656, 16),
woosh.Token(woosh.NAME, 'cls', 656, 16, 656, 19),
woosh.Token(woosh.OP, ',', 656, 19, 656, 20),
woosh.Token(woosh.OP, '*', 656, 21, 656, 22),
woosh.Token(woosh.NAME, 'args', 656, 22, 656, 26),
woosh.Token(woosh.OP, ')', 656, 26, 656, 27),
woosh.Token(woosh.OP, ':', 656, 27, 656, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 28, 657, 0),
woosh.Token(woosh.INDENT, '        ', 657, 0, 657, 8),
woosh.Token(woosh.STRING, '"""Construct a PurePath from one or several strings and or existing\r\n        PurePath objects.  The strings and path objects are combined so as\r\n        to yield a canonicalized path, which is incorporated into the\r\n        new PurePath object.\r\n        """', 657, 8, 661, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 11, 662, 0),
woosh.Token(woosh.NAME, 'if', 662, 8, 662, 10),
woosh.Token(woosh.NAME, 'cls', 662, 11, 662, 14),
woosh.Token(woosh.NAME, 'is', 662, 15, 662, 17),
woosh.Token(woosh.NAME, 'PurePath', 662, 18, 662, 26),
woosh.Token(woosh.OP, ':', 662, 26, 662, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 662, 27, 663, 0),
woosh.Token(woosh.INDENT, '            ', 663, 0, 663, 12),
woosh.Token(woosh.NAME, 'cls', 663, 12, 663, 15),
woosh.Token(woosh.OP, '=', 663, 16, 663, 17),
woosh.Token(woosh.NAME, 'PureWindowsPath', 663, 18, 663, 33),
woosh.Token(woosh.NAME, 'if', 663, 34, 663, 36),
woosh.Token(woosh.NAME, 'os', 663, 37, 663, 39),
woosh.Token(woosh.OP, '.', 663, 39, 663, 40),
woosh.Token(woosh.NAME, 'name', 663, 40, 663, 44),
woosh.Token(woosh.OP, '==', 663, 45, 663, 47),
woosh.Token(woosh.STRING, "'nt'", 663, 48, 663, 52),
woosh.Token(woosh.NAME, 'else', 663, 53, 663, 57),
woosh.Token(woosh.NAME, 'PurePosixPath', 663, 58, 663, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 71, 664, 0),
woosh.Token(woosh.DEDENT, '        ', 664, 0, 664, 8),
woosh.Token(woosh.NAME, 'return', 664, 8, 664, 14),
woosh.Token(woosh.NAME, 'cls', 664, 15, 664, 18),
woosh.Token(woosh.OP, '.', 664, 18, 664, 19),
woosh.Token(woosh.NAME, '_from_parts', 664, 19, 664, 30),
woosh.Token(woosh.OP, '(', 664, 30, 664, 31),
woosh.Token(woosh.NAME, 'args', 664, 31, 664, 35),
woosh.Token(woosh.OP, ')', 664, 35, 664, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 664, 36, 665, 0),
woosh.Token(woosh.DEDENT, '    ', 666, 0, 666, 4),
woosh.Token(woosh.NAME, 'def', 666, 4, 666, 7),
woosh.Token(woosh.NAME, '__reduce__', 666, 8, 666, 18),
woosh.Token(woosh.OP, '(', 666, 18, 666, 19),
woosh.Token(woosh.NAME, 'self', 666, 19, 666, 23),
woosh.Token(woosh.OP, ')', 666, 23, 666, 24),
woosh.Token(woosh.OP, ':', 666, 24, 666, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 666, 25, 667, 0),
woosh.Token(woosh.COMMENT, '# Using the parts tuple helps share interned path parts', 667, 8, 667, 63),
woosh.Token(woosh.COMMENT, '# when pickling related paths.', 668, 8, 668, 38),
woosh.Token(woosh.INDENT, '        ', 669, 0, 669, 8),
woosh.Token(woosh.NAME, 'return', 669, 8, 669, 14),
woosh.Token(woosh.OP, '(', 669, 15, 669, 16),
woosh.Token(woosh.NAME, 'self', 669, 16, 669, 20),
woosh.Token(woosh.OP, '.', 669, 20, 669, 21),
woosh.Token(woosh.NAME, '__class__', 669, 21, 669, 30),
woosh.Token(woosh.OP, ',', 669, 30, 669, 31),
woosh.Token(woosh.NAME, 'tuple', 669, 32, 669, 37),
woosh.Token(woosh.OP, '(', 669, 37, 669, 38),
woosh.Token(woosh.NAME, 'self', 669, 38, 669, 42),
woosh.Token(woosh.OP, '.', 669, 42, 669, 43),
woosh.Token(woosh.NAME, '_parts', 669, 43, 669, 49),
woosh.Token(woosh.OP, ')', 669, 49, 669, 50),
woosh.Token(woosh.OP, ')', 669, 50, 669, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 669, 51, 670, 0),
woosh.Token(woosh.DEDENT, '    ', 671, 0, 671, 4),
woosh.Token(woosh.OP, '@', 671, 4, 671, 5),
woosh.Token(woosh.NAME, 'classmethod', 671, 5, 671, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 16, 672, 0),
woosh.Token(woosh.NAME, 'def', 672, 4, 672, 7),
woosh.Token(woosh.NAME, '_parse_args', 672, 8, 672, 19),
woosh.Token(woosh.OP, '(', 672, 19, 672, 20),
woosh.Token(woosh.NAME, 'cls', 672, 20, 672, 23),
woosh.Token(woosh.OP, ',', 672, 23, 672, 24),
woosh.Token(woosh.NAME, 'args', 672, 25, 672, 29),
woosh.Token(woosh.OP, ')', 672, 29, 672, 30),
woosh.Token(woosh.OP, ':', 672, 30, 672, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 672, 31, 673, 0),
woosh.Token(woosh.COMMENT, "# This is useful when you don't want to create an instance, just", 673, 8, 673, 72),
woosh.Token(woosh.COMMENT, '# canonicalize some constructor arguments.', 674, 8, 674, 50),
woosh.Token(woosh.INDENT, '        ', 675, 0, 675, 8),
woosh.Token(woosh.NAME, 'parts', 675, 8, 675, 13),
woosh.Token(woosh.OP, '=', 675, 14, 675, 15),
woosh.Token(woosh.OP, '[', 675, 16, 675, 17),
woosh.Token(woosh.OP, ']', 675, 17, 675, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 675, 18, 676, 0),
woosh.Token(woosh.NAME, 'for', 676, 8, 676, 11),
woosh.Token(woosh.NAME, 'a', 676, 12, 676, 13),
woosh.Token(woosh.NAME, 'in', 676, 14, 676, 16),
woosh.Token(woosh.NAME, 'args', 676, 17, 676, 21),
woosh.Token(woosh.OP, ':', 676, 21, 676, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 22, 677, 0),
woosh.Token(woosh.INDENT, '            ', 677, 0, 677, 12),
woosh.Token(woosh.NAME, 'if', 677, 12, 677, 14),
woosh.Token(woosh.NAME, 'isinstance', 677, 15, 677, 25),
woosh.Token(woosh.OP, '(', 677, 25, 677, 26),
woosh.Token(woosh.NAME, 'a', 677, 26, 677, 27),
woosh.Token(woosh.OP, ',', 677, 27, 677, 28),
woosh.Token(woosh.NAME, 'PurePath', 677, 29, 677, 37),
woosh.Token(woosh.OP, ')', 677, 37, 677, 38),
woosh.Token(woosh.OP, ':', 677, 38, 677, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 677, 39, 678, 0),
woosh.Token(woosh.INDENT, '                ', 678, 0, 678, 16),
woosh.Token(woosh.NAME, 'parts', 678, 16, 678, 21),
woosh.Token(woosh.OP, '+=', 678, 22, 678, 24),
woosh.Token(woosh.NAME, 'a', 678, 25, 678, 26),
woosh.Token(woosh.OP, '.', 678, 26, 678, 27),
woosh.Token(woosh.NAME, '_parts', 678, 27, 678, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 678, 33, 679, 0),
woosh.Token(woosh.DEDENT, '            ', 679, 0, 679, 12),
woosh.Token(woosh.NAME, 'else', 679, 12, 679, 16),
woosh.Token(woosh.OP, ':', 679, 16, 679, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 17, 680, 0),
woosh.Token(woosh.INDENT, '                ', 680, 0, 680, 16),
woosh.Token(woosh.NAME, 'a', 680, 16, 680, 17),
woosh.Token(woosh.OP, '=', 680, 18, 680, 19),
woosh.Token(woosh.NAME, 'os', 680, 20, 680, 22),
woosh.Token(woosh.OP, '.', 680, 22, 680, 23),
woosh.Token(woosh.NAME, 'fspath', 680, 23, 680, 29),
woosh.Token(woosh.OP, '(', 680, 29, 680, 30),
woosh.Token(woosh.NAME, 'a', 680, 30, 680, 31),
woosh.Token(woosh.OP, ')', 680, 31, 680, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 680, 32, 681, 0),
woosh.Token(woosh.NAME, 'if', 681, 16, 681, 18),
woosh.Token(woosh.NAME, 'isinstance', 681, 19, 681, 29),
woosh.Token(woosh.OP, '(', 681, 29, 681, 30),
woosh.Token(woosh.NAME, 'a', 681, 30, 681, 31),
woosh.Token(woosh.OP, ',', 681, 31, 681, 32),
woosh.Token(woosh.NAME, 'str', 681, 33, 681, 36),
woosh.Token(woosh.OP, ')', 681, 36, 681, 37),
woosh.Token(woosh.OP, ':', 681, 37, 681, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 681, 38, 682, 0),
woosh.Token(woosh.COMMENT, '# Force-cast str subclasses to str (issue #21127)', 682, 20, 682, 69),
woosh.Token(woosh.INDENT, '                    ', 683, 0, 683, 20),
woosh.Token(woosh.NAME, 'parts', 683, 20, 683, 25),
woosh.Token(woosh.OP, '.', 683, 25, 683, 26),
woosh.Token(woosh.NAME, 'append', 683, 26, 683, 32),
woosh.Token(woosh.OP, '(', 683, 32, 683, 33),
woosh.Token(woosh.NAME, 'str', 683, 33, 683, 36),
woosh.Token(woosh.OP, '(', 683, 36, 683, 37),
woosh.Token(woosh.NAME, 'a', 683, 37, 683, 38),
woosh.Token(woosh.OP, ')', 683, 38, 683, 39),
woosh.Token(woosh.OP, ')', 683, 39, 683, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 683, 40, 684, 0),
woosh.Token(woosh.DEDENT, '                ', 684, 0, 684, 16),
woosh.Token(woosh.NAME, 'else', 684, 16, 684, 20),
woosh.Token(woosh.OP, ':', 684, 20, 684, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 21, 685, 0),
woosh.Token(woosh.INDENT, '                    ', 685, 0, 685, 20),
woosh.Token(woosh.NAME, 'raise', 685, 20, 685, 25),
woosh.Token(woosh.NAME, 'TypeError', 685, 26, 685, 35),
woosh.Token(woosh.OP, '(', 685, 35, 685, 36),
woosh.Token(woosh.STRING, '"argument should be a str object or an os.PathLike "', 686, 24, 686, 76),
woosh.Token(woosh.STRING, '"object returning str, not %r"', 687, 24, 687, 54),
woosh.Token(woosh.OP, '%', 688, 24, 688, 25),
woosh.Token(woosh.NAME, 'type', 688, 26, 688, 30),
woosh.Token(woosh.OP, '(', 688, 30, 688, 31),
woosh.Token(woosh.NAME, 'a', 688, 31, 688, 32),
woosh.Token(woosh.OP, ')', 688, 32, 688, 33),
woosh.Token(woosh.OP, ')', 688, 33, 688, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 34, 689, 0),
woosh.Token(woosh.DEDENT, '        ', 689, 0, 689, 8),
woosh.Token(woosh.DEDENT, '', 689, 8, 689, 8),
woosh.Token(woosh.DEDENT, '', 689, 8, 689, 8),
woosh.Token(woosh.NAME, 'return', 689, 8, 689, 14),
woosh.Token(woosh.NAME, 'cls', 689, 15, 689, 18),
woosh.Token(woosh.OP, '.', 689, 18, 689, 19),
woosh.Token(woosh.NAME, '_flavour', 689, 19, 689, 27),
woosh.Token(woosh.OP, '.', 689, 27, 689, 28),
woosh.Token(woosh.NAME, 'parse_parts', 689, 28, 689, 39),
woosh.Token(woosh.OP, '(', 689, 39, 689, 40),
woosh.Token(woosh.NAME, 'parts', 689, 40, 689, 45),
woosh.Token(woosh.OP, ')', 689, 45, 689, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 689, 46, 690, 0),
woosh.Token(woosh.DEDENT, '    ', 691, 0, 691, 4),
woosh.Token(woosh.OP, '@', 691, 4, 691, 5),
woosh.Token(woosh.NAME, 'classmethod', 691, 5, 691, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 691, 16, 692, 0),
woosh.Token(woosh.NAME, 'def', 692, 4, 692, 7),
woosh.Token(woosh.NAME, '_from_parts', 692, 8, 692, 19),
woosh.Token(woosh.OP, '(', 692, 19, 692, 20),
woosh.Token(woosh.NAME, 'cls', 692, 20, 692, 23),
woosh.Token(woosh.OP, ',', 692, 23, 692, 24),
woosh.Token(woosh.NAME, 'args', 692, 25, 692, 29),
woosh.Token(woosh.OP, ',', 692, 29, 692, 30),
woosh.Token(woosh.NAME, 'init', 692, 31, 692, 35),
woosh.Token(woosh.OP, '=', 692, 35, 692, 36),
woosh.Token(woosh.NAME, 'True', 692, 36, 692, 40),
woosh.Token(woosh.OP, ')', 692, 40, 692, 41),
woosh.Token(woosh.OP, ':', 692, 41, 692, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 692, 42, 693, 0),
woosh.Token(woosh.COMMENT, '# We need to call _parse_args on the instance, so as to get the', 693, 8, 693, 71),
woosh.Token(woosh.COMMENT, '# right flavour.', 694, 8, 694, 24),
woosh.Token(woosh.INDENT, '        ', 695, 0, 695, 8),
woosh.Token(woosh.NAME, 'self', 695, 8, 695, 12),
woosh.Token(woosh.OP, '=', 695, 13, 695, 14),
woosh.Token(woosh.NAME, 'object', 695, 15, 695, 21),
woosh.Token(woosh.OP, '.', 695, 21, 695, 22),
woosh.Token(woosh.NAME, '__new__', 695, 22, 695, 29),
woosh.Token(woosh.OP, '(', 695, 29, 695, 30),
woosh.Token(woosh.NAME, 'cls', 695, 30, 695, 33),
woosh.Token(woosh.OP, ')', 695, 33, 695, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 695, 34, 696, 0),
woosh.Token(woosh.NAME, 'drv', 696, 8, 696, 11),
woosh.Token(woosh.OP, ',', 696, 11, 696, 12),
woosh.Token(woosh.NAME, 'root', 696, 13, 696, 17),
woosh.Token(woosh.OP, ',', 696, 17, 696, 18),
woosh.Token(woosh.NAME, 'parts', 696, 19, 696, 24),
woosh.Token(woosh.OP, '=', 696, 25, 696, 26),
woosh.Token(woosh.NAME, 'self', 696, 27, 696, 31),
woosh.Token(woosh.OP, '.', 696, 31, 696, 32),
woosh.Token(woosh.NAME, '_parse_args', 696, 32, 696, 43),
woosh.Token(woosh.OP, '(', 696, 43, 696, 44),
woosh.Token(woosh.NAME, 'args', 696, 44, 696, 48),
woosh.Token(woosh.OP, ')', 696, 48, 696, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 696, 49, 697, 0),
woosh.Token(woosh.NAME, 'self', 697, 8, 697, 12),
woosh.Token(woosh.OP, '.', 697, 12, 697, 13),
woosh.Token(woosh.NAME, '_drv', 697, 13, 697, 17),
woosh.Token(woosh.OP, '=', 697, 18, 697, 19),
woosh.Token(woosh.NAME, 'drv', 697, 20, 697, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 697, 23, 698, 0),
woosh.Token(woosh.NAME, 'self', 698, 8, 698, 12),
woosh.Token(woosh.OP, '.', 698, 12, 698, 13),
woosh.Token(woosh.NAME, '_root', 698, 13, 698, 18),
woosh.Token(woosh.OP, '=', 698, 19, 698, 20),
woosh.Token(woosh.NAME, 'root', 698, 21, 698, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 698, 25, 699, 0),
woosh.Token(woosh.NAME, 'self', 699, 8, 699, 12),
woosh.Token(woosh.OP, '.', 699, 12, 699, 13),
woosh.Token(woosh.NAME, '_parts', 699, 13, 699, 19),
woosh.Token(woosh.OP, '=', 699, 20, 699, 21),
woosh.Token(woosh.NAME, 'parts', 699, 22, 699, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 27, 700, 0),
woosh.Token(woosh.NAME, 'if', 700, 8, 700, 10),
woosh.Token(woosh.NAME, 'init', 700, 11, 700, 15),
woosh.Token(woosh.OP, ':', 700, 15, 700, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 16, 701, 0),
woosh.Token(woosh.INDENT, '            ', 701, 0, 701, 12),
woosh.Token(woosh.NAME, 'self', 701, 12, 701, 16),
woosh.Token(woosh.OP, '.', 701, 16, 701, 17),
woosh.Token(woosh.NAME, '_init', 701, 17, 701, 22),
woosh.Token(woosh.OP, '(', 701, 22, 701, 23),
woosh.Token(woosh.OP, ')', 701, 23, 701, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 701, 24, 702, 0),
woosh.Token(woosh.DEDENT, '        ', 702, 0, 702, 8),
woosh.Token(woosh.NAME, 'return', 702, 8, 702, 14),
woosh.Token(woosh.NAME, 'self', 702, 15, 702, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 19, 703, 0),
woosh.Token(woosh.DEDENT, '    ', 704, 0, 704, 4),
woosh.Token(woosh.OP, '@', 704, 4, 704, 5),
woosh.Token(woosh.NAME, 'classmethod', 704, 5, 704, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 704, 16, 705, 0),
woosh.Token(woosh.NAME, 'def', 705, 4, 705, 7),
woosh.Token(woosh.NAME, '_from_parsed_parts', 705, 8, 705, 26),
woosh.Token(woosh.OP, '(', 705, 26, 705, 27),
woosh.Token(woosh.NAME, 'cls', 705, 27, 705, 30),
woosh.Token(woosh.OP, ',', 705, 30, 705, 31),
woosh.Token(woosh.NAME, 'drv', 705, 32, 705, 35),
woosh.Token(woosh.OP, ',', 705, 35, 705, 36),
woosh.Token(woosh.NAME, 'root', 705, 37, 705, 41),
woosh.Token(woosh.OP, ',', 705, 41, 705, 42),
woosh.Token(woosh.NAME, 'parts', 705, 43, 705, 48),
woosh.Token(woosh.OP, ',', 705, 48, 705, 49),
woosh.Token(woosh.NAME, 'init', 705, 50, 705, 54),
woosh.Token(woosh.OP, '=', 705, 54, 705, 55),
woosh.Token(woosh.NAME, 'True', 705, 55, 705, 59),
woosh.Token(woosh.OP, ')', 705, 59, 705, 60),
woosh.Token(woosh.OP, ':', 705, 60, 705, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 705, 61, 706, 0),
woosh.Token(woosh.INDENT, '        ', 706, 0, 706, 8),
woosh.Token(woosh.NAME, 'self', 706, 8, 706, 12),
woosh.Token(woosh.OP, '=', 706, 13, 706, 14),
woosh.Token(woosh.NAME, 'object', 706, 15, 706, 21),
woosh.Token(woosh.OP, '.', 706, 21, 706, 22),
woosh.Token(woosh.NAME, '__new__', 706, 22, 706, 29),
woosh.Token(woosh.OP, '(', 706, 29, 706, 30),
woosh.Token(woosh.NAME, 'cls', 706, 30, 706, 33),
woosh.Token(woosh.OP, ')', 706, 33, 706, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 706, 34, 707, 0),
woosh.Token(woosh.NAME, 'self', 707, 8, 707, 12),
woosh.Token(woosh.OP, '.', 707, 12, 707, 13),
woosh.Token(woosh.NAME, '_drv', 707, 13, 707, 17),
woosh.Token(woosh.OP, '=', 707, 18, 707, 19),
woosh.Token(woosh.NAME, 'drv', 707, 20, 707, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 707, 23, 708, 0),
woosh.Token(woosh.NAME, 'self', 708, 8, 708, 12),
woosh.Token(woosh.OP, '.', 708, 12, 708, 13),
woosh.Token(woosh.NAME, '_root', 708, 13, 708, 18),
woosh.Token(woosh.OP, '=', 708, 19, 708, 20),
woosh.Token(woosh.NAME, 'root', 708, 21, 708, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 708, 25, 709, 0),
woosh.Token(woosh.NAME, 'self', 709, 8, 709, 12),
woosh.Token(woosh.OP, '.', 709, 12, 709, 13),
woosh.Token(woosh.NAME, '_parts', 709, 13, 709, 19),
woosh.Token(woosh.OP, '=', 709, 20, 709, 21),
woosh.Token(woosh.NAME, 'parts', 709, 22, 709, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 27, 710, 0),
woosh.Token(woosh.NAME, 'if', 710, 8, 710, 10),
woosh.Token(woosh.NAME, 'init', 710, 11, 710, 15),
woosh.Token(woosh.OP, ':', 710, 15, 710, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 710, 16, 711, 0),
woosh.Token(woosh.INDENT, '            ', 711, 0, 711, 12),
woosh.Token(woosh.NAME, 'self', 711, 12, 711, 16),
woosh.Token(woosh.OP, '.', 711, 16, 711, 17),
woosh.Token(woosh.NAME, '_init', 711, 17, 711, 22),
woosh.Token(woosh.OP, '(', 711, 22, 711, 23),
woosh.Token(woosh.OP, ')', 711, 23, 711, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 24, 712, 0),
woosh.Token(woosh.DEDENT, '        ', 712, 0, 712, 8),
woosh.Token(woosh.NAME, 'return', 712, 8, 712, 14),
woosh.Token(woosh.NAME, 'self', 712, 15, 712, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 712, 19, 713, 0),
woosh.Token(woosh.DEDENT, '    ', 714, 0, 714, 4),
woosh.Token(woosh.OP, '@', 714, 4, 714, 5),
woosh.Token(woosh.NAME, 'classmethod', 714, 5, 714, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 16, 715, 0),
woosh.Token(woosh.NAME, 'def', 715, 4, 715, 7),
woosh.Token(woosh.NAME, '_format_parsed_parts', 715, 8, 715, 28),
woosh.Token(woosh.OP, '(', 715, 28, 715, 29),
woosh.Token(woosh.NAME, 'cls', 715, 29, 715, 32),
woosh.Token(woosh.OP, ',', 715, 32, 715, 33),
woosh.Token(woosh.NAME, 'drv', 715, 34, 715, 37),
woosh.Token(woosh.OP, ',', 715, 37, 715, 38),
woosh.Token(woosh.NAME, 'root', 715, 39, 715, 43),
woosh.Token(woosh.OP, ',', 715, 43, 715, 44),
woosh.Token(woosh.NAME, 'parts', 715, 45, 715, 50),
woosh.Token(woosh.OP, ')', 715, 50, 715, 51),
woosh.Token(woosh.OP, ':', 715, 51, 715, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 52, 716, 0),
woosh.Token(woosh.INDENT, '        ', 716, 0, 716, 8),
woosh.Token(woosh.NAME, 'if', 716, 8, 716, 10),
woosh.Token(woosh.NAME, 'drv', 716, 11, 716, 14),
woosh.Token(woosh.NAME, 'or', 716, 15, 716, 17),
woosh.Token(woosh.NAME, 'root', 716, 18, 716, 22),
woosh.Token(woosh.OP, ':', 716, 22, 716, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 23, 717, 0),
woosh.Token(woosh.INDENT, '            ', 717, 0, 717, 12),
woosh.Token(woosh.NAME, 'return', 717, 12, 717, 18),
woosh.Token(woosh.NAME, 'drv', 717, 19, 717, 22),
woosh.Token(woosh.OP, '+', 717, 23, 717, 24),
woosh.Token(woosh.NAME, 'root', 717, 25, 717, 29),
woosh.Token(woosh.OP, '+', 717, 30, 717, 31),
woosh.Token(woosh.NAME, 'cls', 717, 32, 717, 35),
woosh.Token(woosh.OP, '.', 717, 35, 717, 36),
woosh.Token(woosh.NAME, '_flavour', 717, 36, 717, 44),
woosh.Token(woosh.OP, '.', 717, 44, 717, 45),
woosh.Token(woosh.NAME, 'join', 717, 45, 717, 49),
woosh.Token(woosh.OP, '(', 717, 49, 717, 50),
woosh.Token(woosh.NAME, 'parts', 717, 50, 717, 55),
woosh.Token(woosh.OP, '[', 717, 55, 717, 56),
woosh.Token(woosh.NUMBER, '1', 717, 56, 717, 57),
woosh.Token(woosh.OP, ':', 717, 57, 717, 58),
woosh.Token(woosh.OP, ']', 717, 58, 717, 59),
woosh.Token(woosh.OP, ')', 717, 59, 717, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 60, 718, 0),
woosh.Token(woosh.DEDENT, '        ', 718, 0, 718, 8),
woosh.Token(woosh.NAME, 'else', 718, 8, 718, 12),
woosh.Token(woosh.OP, ':', 718, 12, 718, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 718, 13, 719, 0),
woosh.Token(woosh.INDENT, '            ', 719, 0, 719, 12),
woosh.Token(woosh.NAME, 'return', 719, 12, 719, 18),
woosh.Token(woosh.NAME, 'cls', 719, 19, 719, 22),
woosh.Token(woosh.OP, '.', 719, 22, 719, 23),
woosh.Token(woosh.NAME, '_flavour', 719, 23, 719, 31),
woosh.Token(woosh.OP, '.', 719, 31, 719, 32),
woosh.Token(woosh.NAME, 'join', 719, 32, 719, 36),
woosh.Token(woosh.OP, '(', 719, 36, 719, 37),
woosh.Token(woosh.NAME, 'parts', 719, 37, 719, 42),
woosh.Token(woosh.OP, ')', 719, 42, 719, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 719, 43, 720, 0),
woosh.Token(woosh.DEDENT, '    ', 721, 0, 721, 4),
woosh.Token(woosh.DEDENT, '', 721, 4, 721, 4),
woosh.Token(woosh.NAME, 'def', 721, 4, 721, 7),
woosh.Token(woosh.NAME, '_init', 721, 8, 721, 13),
woosh.Token(woosh.OP, '(', 721, 13, 721, 14),
woosh.Token(woosh.NAME, 'self', 721, 14, 721, 18),
woosh.Token(woosh.OP, ')', 721, 18, 721, 19),
woosh.Token(woosh.OP, ':', 721, 19, 721, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 20, 722, 0),
woosh.Token(woosh.COMMENT, '# Overridden in concrete Path', 722, 8, 722, 37),
woosh.Token(woosh.INDENT, '        ', 723, 0, 723, 8),
woosh.Token(woosh.NAME, 'pass', 723, 8, 723, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 12, 724, 0),
woosh.Token(woosh.DEDENT, '    ', 725, 0, 725, 4),
woosh.Token(woosh.NAME, 'def', 725, 4, 725, 7),
woosh.Token(woosh.NAME, '_make_child', 725, 8, 725, 19),
woosh.Token(woosh.OP, '(', 725, 19, 725, 20),
woosh.Token(woosh.NAME, 'self', 725, 20, 725, 24),
woosh.Token(woosh.OP, ',', 725, 24, 725, 25),
woosh.Token(woosh.NAME, 'args', 725, 26, 725, 30),
woosh.Token(woosh.OP, ')', 725, 30, 725, 31),
woosh.Token(woosh.OP, ':', 725, 31, 725, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 32, 726, 0),
woosh.Token(woosh.INDENT, '        ', 726, 0, 726, 8),
woosh.Token(woosh.NAME, 'drv', 726, 8, 726, 11),
woosh.Token(woosh.OP, ',', 726, 11, 726, 12),
woosh.Token(woosh.NAME, 'root', 726, 13, 726, 17),
woosh.Token(woosh.OP, ',', 726, 17, 726, 18),
woosh.Token(woosh.NAME, 'parts', 726, 19, 726, 24),
woosh.Token(woosh.OP, '=', 726, 25, 726, 26),
woosh.Token(woosh.NAME, 'self', 726, 27, 726, 31),
woosh.Token(woosh.OP, '.', 726, 31, 726, 32),
woosh.Token(woosh.NAME, '_parse_args', 726, 32, 726, 43),
woosh.Token(woosh.OP, '(', 726, 43, 726, 44),
woosh.Token(woosh.NAME, 'args', 726, 44, 726, 48),
woosh.Token(woosh.OP, ')', 726, 48, 726, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 49, 727, 0),
woosh.Token(woosh.NAME, 'drv', 727, 8, 727, 11),
woosh.Token(woosh.OP, ',', 727, 11, 727, 12),
woosh.Token(woosh.NAME, 'root', 727, 13, 727, 17),
woosh.Token(woosh.OP, ',', 727, 17, 727, 18),
woosh.Token(woosh.NAME, 'parts', 727, 19, 727, 24),
woosh.Token(woosh.OP, '=', 727, 25, 727, 26),
woosh.Token(woosh.NAME, 'self', 727, 27, 727, 31),
woosh.Token(woosh.OP, '.', 727, 31, 727, 32),
woosh.Token(woosh.NAME, '_flavour', 727, 32, 727, 40),
woosh.Token(woosh.OP, '.', 727, 40, 727, 41),
woosh.Token(woosh.NAME, 'join_parsed_parts', 727, 41, 727, 58),
woosh.Token(woosh.OP, '(', 727, 58, 727, 59),
woosh.Token(woosh.NAME, 'self', 728, 12, 728, 16),
woosh.Token(woosh.OP, '.', 728, 16, 728, 17),
woosh.Token(woosh.NAME, '_drv', 728, 17, 728, 21),
woosh.Token(woosh.OP, ',', 728, 21, 728, 22),
woosh.Token(woosh.NAME, 'self', 728, 23, 728, 27),
woosh.Token(woosh.OP, '.', 728, 27, 728, 28),
woosh.Token(woosh.NAME, '_root', 728, 28, 728, 33),
woosh.Token(woosh.OP, ',', 728, 33, 728, 34),
woosh.Token(woosh.NAME, 'self', 728, 35, 728, 39),
woosh.Token(woosh.OP, '.', 728, 39, 728, 40),
woosh.Token(woosh.NAME, '_parts', 728, 40, 728, 46),
woosh.Token(woosh.OP, ',', 728, 46, 728, 47),
woosh.Token(woosh.NAME, 'drv', 728, 48, 728, 51),
woosh.Token(woosh.OP, ',', 728, 51, 728, 52),
woosh.Token(woosh.NAME, 'root', 728, 53, 728, 57),
woosh.Token(woosh.OP, ',', 728, 57, 728, 58),
woosh.Token(woosh.NAME, 'parts', 728, 59, 728, 64),
woosh.Token(woosh.OP, ')', 728, 64, 728, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 728, 65, 729, 0),
woosh.Token(woosh.NAME, 'return', 729, 8, 729, 14),
woosh.Token(woosh.NAME, 'self', 729, 15, 729, 19),
woosh.Token(woosh.OP, '.', 729, 19, 729, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 729, 20, 729, 38),
woosh.Token(woosh.OP, '(', 729, 38, 729, 39),
woosh.Token(woosh.NAME, 'drv', 729, 39, 729, 42),
woosh.Token(woosh.OP, ',', 729, 42, 729, 43),
woosh.Token(woosh.NAME, 'root', 729, 44, 729, 48),
woosh.Token(woosh.OP, ',', 729, 48, 729, 49),
woosh.Token(woosh.NAME, 'parts', 729, 50, 729, 55),
woosh.Token(woosh.OP, ')', 729, 55, 729, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 729, 56, 730, 0),
woosh.Token(woosh.DEDENT, '    ', 731, 0, 731, 4),
woosh.Token(woosh.NAME, 'def', 731, 4, 731, 7),
woosh.Token(woosh.NAME, '__str__', 731, 8, 731, 15),
woosh.Token(woosh.OP, '(', 731, 15, 731, 16),
woosh.Token(woosh.NAME, 'self', 731, 16, 731, 20),
woosh.Token(woosh.OP, ')', 731, 20, 731, 21),
woosh.Token(woosh.OP, ':', 731, 21, 731, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 731, 22, 732, 0),
woosh.Token(woosh.INDENT, '        ', 732, 0, 732, 8),
woosh.Token(woosh.STRING, '"""Return the string representation of the path, suitable for\r\n        passing to system calls."""', 732, 8, 733, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 733, 35, 734, 0),
woosh.Token(woosh.NAME, 'try', 734, 8, 734, 11),
woosh.Token(woosh.OP, ':', 734, 11, 734, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 12, 735, 0),
woosh.Token(woosh.INDENT, '            ', 735, 0, 735, 12),
woosh.Token(woosh.NAME, 'return', 735, 12, 735, 18),
woosh.Token(woosh.NAME, 'self', 735, 19, 735, 23),
woosh.Token(woosh.OP, '.', 735, 23, 735, 24),
woosh.Token(woosh.NAME, '_str', 735, 24, 735, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 735, 28, 736, 0),
woosh.Token(woosh.DEDENT, '        ', 736, 0, 736, 8),
woosh.Token(woosh.NAME, 'except', 736, 8, 736, 14),
woosh.Token(woosh.NAME, 'AttributeError', 736, 15, 736, 29),
woosh.Token(woosh.OP, ':', 736, 29, 736, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 30, 737, 0),
woosh.Token(woosh.INDENT, '            ', 737, 0, 737, 12),
woosh.Token(woosh.NAME, 'self', 737, 12, 737, 16),
woosh.Token(woosh.OP, '.', 737, 16, 737, 17),
woosh.Token(woosh.NAME, '_str', 737, 17, 737, 21),
woosh.Token(woosh.OP, '=', 737, 22, 737, 23),
woosh.Token(woosh.NAME, 'self', 737, 24, 737, 28),
woosh.Token(woosh.OP, '.', 737, 28, 737, 29),
woosh.Token(woosh.NAME, '_format_parsed_parts', 737, 29, 737, 49),
woosh.Token(woosh.OP, '(', 737, 49, 737, 50),
woosh.Token(woosh.NAME, 'self', 737, 50, 737, 54),
woosh.Token(woosh.OP, '.', 737, 54, 737, 55),
woosh.Token(woosh.NAME, '_drv', 737, 55, 737, 59),
woosh.Token(woosh.OP, ',', 737, 59, 737, 60),
woosh.Token(woosh.NAME, 'self', 737, 61, 737, 65),
woosh.Token(woosh.OP, '.', 737, 65, 737, 66),
woosh.Token(woosh.NAME, '_root', 737, 66, 737, 71),
woosh.Token(woosh.OP, ',', 737, 71, 737, 72),
woosh.Token(woosh.NAME, 'self', 738, 50, 738, 54),
woosh.Token(woosh.OP, '.', 738, 54, 738, 55),
woosh.Token(woosh.NAME, '_parts', 738, 55, 738, 61),
woosh.Token(woosh.OP, ')', 738, 61, 738, 62),
woosh.Token(woosh.NAME, 'or', 738, 63, 738, 65),
woosh.Token(woosh.STRING, "'.'", 738, 66, 738, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 69, 739, 0),
woosh.Token(woosh.NAME, 'return', 739, 12, 739, 18),
woosh.Token(woosh.NAME, 'self', 739, 19, 739, 23),
woosh.Token(woosh.OP, '.', 739, 23, 739, 24),
woosh.Token(woosh.NAME, '_str', 739, 24, 739, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 28, 740, 0),
woosh.Token(woosh.DEDENT, '    ', 741, 0, 741, 4),
woosh.Token(woosh.DEDENT, '', 741, 4, 741, 4),
woosh.Token(woosh.NAME, 'def', 741, 4, 741, 7),
woosh.Token(woosh.NAME, '__fspath__', 741, 8, 741, 18),
woosh.Token(woosh.OP, '(', 741, 18, 741, 19),
woosh.Token(woosh.NAME, 'self', 741, 19, 741, 23),
woosh.Token(woosh.OP, ')', 741, 23, 741, 24),
woosh.Token(woosh.OP, ':', 741, 24, 741, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 25, 742, 0),
woosh.Token(woosh.INDENT, '        ', 742, 0, 742, 8),
woosh.Token(woosh.NAME, 'return', 742, 8, 742, 14),
woosh.Token(woosh.NAME, 'str', 742, 15, 742, 18),
woosh.Token(woosh.OP, '(', 742, 18, 742, 19),
woosh.Token(woosh.NAME, 'self', 742, 19, 742, 23),
woosh.Token(woosh.OP, ')', 742, 23, 742, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 742, 24, 743, 0),
woosh.Token(woosh.DEDENT, '    ', 744, 0, 744, 4),
woosh.Token(woosh.NAME, 'def', 744, 4, 744, 7),
woosh.Token(woosh.NAME, 'as_posix', 744, 8, 744, 16),
woosh.Token(woosh.OP, '(', 744, 16, 744, 17),
woosh.Token(woosh.NAME, 'self', 744, 17, 744, 21),
woosh.Token(woosh.OP, ')', 744, 21, 744, 22),
woosh.Token(woosh.OP, ':', 744, 22, 744, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 23, 745, 0),
woosh.Token(woosh.INDENT, '        ', 745, 0, 745, 8),
woosh.Token(woosh.STRING, '"""Return the string representation of the path with forward (/)\r\n        slashes."""', 745, 8, 746, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 19, 747, 0),
woosh.Token(woosh.NAME, 'f', 747, 8, 747, 9),
woosh.Token(woosh.OP, '=', 747, 10, 747, 11),
woosh.Token(woosh.NAME, 'self', 747, 12, 747, 16),
woosh.Token(woosh.OP, '.', 747, 16, 747, 17),
woosh.Token(woosh.NAME, '_flavour', 747, 17, 747, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 25, 748, 0),
woosh.Token(woosh.NAME, 'return', 748, 8, 748, 14),
woosh.Token(woosh.NAME, 'str', 748, 15, 748, 18),
woosh.Token(woosh.OP, '(', 748, 18, 748, 19),
woosh.Token(woosh.NAME, 'self', 748, 19, 748, 23),
woosh.Token(woosh.OP, ')', 748, 23, 748, 24),
woosh.Token(woosh.OP, '.', 748, 24, 748, 25),
woosh.Token(woosh.NAME, 'replace', 748, 25, 748, 32),
woosh.Token(woosh.OP, '(', 748, 32, 748, 33),
woosh.Token(woosh.NAME, 'f', 748, 33, 748, 34),
woosh.Token(woosh.OP, '.', 748, 34, 748, 35),
woosh.Token(woosh.NAME, 'sep', 748, 35, 748, 38),
woosh.Token(woosh.OP, ',', 748, 38, 748, 39),
woosh.Token(woosh.STRING, "'/'", 748, 40, 748, 43),
woosh.Token(woosh.OP, ')', 748, 43, 748, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 44, 749, 0),
woosh.Token(woosh.DEDENT, '    ', 750, 0, 750, 4),
woosh.Token(woosh.NAME, 'def', 750, 4, 750, 7),
woosh.Token(woosh.NAME, '__bytes__', 750, 8, 750, 17),
woosh.Token(woosh.OP, '(', 750, 17, 750, 18),
woosh.Token(woosh.NAME, 'self', 750, 18, 750, 22),
woosh.Token(woosh.OP, ')', 750, 22, 750, 23),
woosh.Token(woosh.OP, ':', 750, 23, 750, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 24, 751, 0),
woosh.Token(woosh.INDENT, '        ', 751, 0, 751, 8),
woosh.Token(woosh.STRING, '"""Return the bytes representation of the path.  This is only\r\n        recommended to use under Unix."""', 751, 8, 752, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 752, 41, 753, 0),
woosh.Token(woosh.NAME, 'return', 753, 8, 753, 14),
woosh.Token(woosh.NAME, 'os', 753, 15, 753, 17),
woosh.Token(woosh.OP, '.', 753, 17, 753, 18),
woosh.Token(woosh.NAME, 'fsencode', 753, 18, 753, 26),
woosh.Token(woosh.OP, '(', 753, 26, 753, 27),
woosh.Token(woosh.NAME, 'self', 753, 27, 753, 31),
woosh.Token(woosh.OP, ')', 753, 31, 753, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 32, 754, 0),
woosh.Token(woosh.DEDENT, '    ', 755, 0, 755, 4),
woosh.Token(woosh.NAME, 'def', 755, 4, 755, 7),
woosh.Token(woosh.NAME, '__repr__', 755, 8, 755, 16),
woosh.Token(woosh.OP, '(', 755, 16, 755, 17),
woosh.Token(woosh.NAME, 'self', 755, 17, 755, 21),
woosh.Token(woosh.OP, ')', 755, 21, 755, 22),
woosh.Token(woosh.OP, ':', 755, 22, 755, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 755, 23, 756, 0),
woosh.Token(woosh.INDENT, '        ', 756, 0, 756, 8),
woosh.Token(woosh.NAME, 'return', 756, 8, 756, 14),
woosh.Token(woosh.STRING, '"{}({!r})"', 756, 15, 756, 25),
woosh.Token(woosh.OP, '.', 756, 25, 756, 26),
woosh.Token(woosh.NAME, 'format', 756, 26, 756, 32),
woosh.Token(woosh.OP, '(', 756, 32, 756, 33),
woosh.Token(woosh.NAME, 'self', 756, 33, 756, 37),
woosh.Token(woosh.OP, '.', 756, 37, 756, 38),
woosh.Token(woosh.NAME, '__class__', 756, 38, 756, 47),
woosh.Token(woosh.OP, '.', 756, 47, 756, 48),
woosh.Token(woosh.NAME, '__name__', 756, 48, 756, 56),
woosh.Token(woosh.OP, ',', 756, 56, 756, 57),
woosh.Token(woosh.NAME, 'self', 756, 58, 756, 62),
woosh.Token(woosh.OP, '.', 756, 62, 756, 63),
woosh.Token(woosh.NAME, 'as_posix', 756, 63, 756, 71),
woosh.Token(woosh.OP, '(', 756, 71, 756, 72),
woosh.Token(woosh.OP, ')', 756, 72, 756, 73),
woosh.Token(woosh.OP, ')', 756, 73, 756, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 74, 757, 0),
woosh.Token(woosh.DEDENT, '    ', 758, 0, 758, 4),
woosh.Token(woosh.NAME, 'def', 758, 4, 758, 7),
woosh.Token(woosh.NAME, 'as_uri', 758, 8, 758, 14),
woosh.Token(woosh.OP, '(', 758, 14, 758, 15),
woosh.Token(woosh.NAME, 'self', 758, 15, 758, 19),
woosh.Token(woosh.OP, ')', 758, 19, 758, 20),
woosh.Token(woosh.OP, ':', 758, 20, 758, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 21, 759, 0),
woosh.Token(woosh.INDENT, '        ', 759, 0, 759, 8),
woosh.Token(woosh.STRING, '"""Return the path as a \'file\' URI."""', 759, 8, 759, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 46, 760, 0),
woosh.Token(woosh.NAME, 'if', 760, 8, 760, 10),
woosh.Token(woosh.NAME, 'not', 760, 11, 760, 14),
woosh.Token(woosh.NAME, 'self', 760, 15, 760, 19),
woosh.Token(woosh.OP, '.', 760, 19, 760, 20),
woosh.Token(woosh.NAME, 'is_absolute', 760, 20, 760, 31),
woosh.Token(woosh.OP, '(', 760, 31, 760, 32),
woosh.Token(woosh.OP, ')', 760, 32, 760, 33),
woosh.Token(woosh.OP, ':', 760, 33, 760, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 34, 761, 0),
woosh.Token(woosh.INDENT, '            ', 761, 0, 761, 12),
woosh.Token(woosh.NAME, 'raise', 761, 12, 761, 17),
woosh.Token(woosh.NAME, 'ValueError', 761, 18, 761, 28),
woosh.Token(woosh.OP, '(', 761, 28, 761, 29),
woosh.Token(woosh.STRING, '"relative path can\'t be expressed as a file URI"', 761, 29, 761, 77),
woosh.Token(woosh.OP, ')', 761, 77, 761, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 78, 762, 0),
woosh.Token(woosh.DEDENT, '        ', 762, 0, 762, 8),
woosh.Token(woosh.NAME, 'return', 762, 8, 762, 14),
woosh.Token(woosh.NAME, 'self', 762, 15, 762, 19),
woosh.Token(woosh.OP, '.', 762, 19, 762, 20),
woosh.Token(woosh.NAME, '_flavour', 762, 20, 762, 28),
woosh.Token(woosh.OP, '.', 762, 28, 762, 29),
woosh.Token(woosh.NAME, 'make_uri', 762, 29, 762, 37),
woosh.Token(woosh.OP, '(', 762, 37, 762, 38),
woosh.Token(woosh.NAME, 'self', 762, 38, 762, 42),
woosh.Token(woosh.OP, ')', 762, 42, 762, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 762, 43, 763, 0),
woosh.Token(woosh.DEDENT, '    ', 764, 0, 764, 4),
woosh.Token(woosh.OP, '@', 764, 4, 764, 5),
woosh.Token(woosh.NAME, 'property', 764, 5, 764, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 764, 13, 765, 0),
woosh.Token(woosh.NAME, 'def', 765, 4, 765, 7),
woosh.Token(woosh.NAME, '_cparts', 765, 8, 765, 15),
woosh.Token(woosh.OP, '(', 765, 15, 765, 16),
woosh.Token(woosh.NAME, 'self', 765, 16, 765, 20),
woosh.Token(woosh.OP, ')', 765, 20, 765, 21),
woosh.Token(woosh.OP, ':', 765, 21, 765, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 765, 22, 766, 0),
woosh.Token(woosh.COMMENT, '# Cached casefolded parts, for hashing and comparison', 766, 8, 766, 61),
woosh.Token(woosh.INDENT, '        ', 767, 0, 767, 8),
woosh.Token(woosh.NAME, 'try', 767, 8, 767, 11),
woosh.Token(woosh.OP, ':', 767, 11, 767, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 767, 12, 768, 0),
woosh.Token(woosh.INDENT, '            ', 768, 0, 768, 12),
woosh.Token(woosh.NAME, 'return', 768, 12, 768, 18),
woosh.Token(woosh.NAME, 'self', 768, 19, 768, 23),
woosh.Token(woosh.OP, '.', 768, 23, 768, 24),
woosh.Token(woosh.NAME, '_cached_cparts', 768, 24, 768, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 768, 38, 769, 0),
woosh.Token(woosh.DEDENT, '        ', 769, 0, 769, 8),
woosh.Token(woosh.NAME, 'except', 769, 8, 769, 14),
woosh.Token(woosh.NAME, 'AttributeError', 769, 15, 769, 29),
woosh.Token(woosh.OP, ':', 769, 29, 769, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 769, 30, 770, 0),
woosh.Token(woosh.INDENT, '            ', 770, 0, 770, 12),
woosh.Token(woosh.NAME, 'self', 770, 12, 770, 16),
woosh.Token(woosh.OP, '.', 770, 16, 770, 17),
woosh.Token(woosh.NAME, '_cached_cparts', 770, 17, 770, 31),
woosh.Token(woosh.OP, '=', 770, 32, 770, 33),
woosh.Token(woosh.NAME, 'self', 770, 34, 770, 38),
woosh.Token(woosh.OP, '.', 770, 38, 770, 39),
woosh.Token(woosh.NAME, '_flavour', 770, 39, 770, 47),
woosh.Token(woosh.OP, '.', 770, 47, 770, 48),
woosh.Token(woosh.NAME, 'casefold_parts', 770, 48, 770, 62),
woosh.Token(woosh.OP, '(', 770, 62, 770, 63),
woosh.Token(woosh.NAME, 'self', 770, 63, 770, 67),
woosh.Token(woosh.OP, '.', 770, 67, 770, 68),
woosh.Token(woosh.NAME, '_parts', 770, 68, 770, 74),
woosh.Token(woosh.OP, ')', 770, 74, 770, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 75, 771, 0),
woosh.Token(woosh.NAME, 'return', 771, 12, 771, 18),
woosh.Token(woosh.NAME, 'self', 771, 19, 771, 23),
woosh.Token(woosh.OP, '.', 771, 23, 771, 24),
woosh.Token(woosh.NAME, '_cached_cparts', 771, 24, 771, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 771, 38, 772, 0),
woosh.Token(woosh.DEDENT, '    ', 773, 0, 773, 4),
woosh.Token(woosh.DEDENT, '', 773, 4, 773, 4),
woosh.Token(woosh.NAME, 'def', 773, 4, 773, 7),
woosh.Token(woosh.NAME, '__eq__', 773, 8, 773, 14),
woosh.Token(woosh.OP, '(', 773, 14, 773, 15),
woosh.Token(woosh.NAME, 'self', 773, 15, 773, 19),
woosh.Token(woosh.OP, ',', 773, 19, 773, 20),
woosh.Token(woosh.NAME, 'other', 773, 21, 773, 26),
woosh.Token(woosh.OP, ')', 773, 26, 773, 27),
woosh.Token(woosh.OP, ':', 773, 27, 773, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 773, 28, 774, 0),
woosh.Token(woosh.INDENT, '        ', 774, 0, 774, 8),
woosh.Token(woosh.NAME, 'if', 774, 8, 774, 10),
woosh.Token(woosh.NAME, 'not', 774, 11, 774, 14),
woosh.Token(woosh.NAME, 'isinstance', 774, 15, 774, 25),
woosh.Token(woosh.OP, '(', 774, 25, 774, 26),
woosh.Token(woosh.NAME, 'other', 774, 26, 774, 31),
woosh.Token(woosh.OP, ',', 774, 31, 774, 32),
woosh.Token(woosh.NAME, 'PurePath', 774, 33, 774, 41),
woosh.Token(woosh.OP, ')', 774, 41, 774, 42),
woosh.Token(woosh.OP, ':', 774, 42, 774, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 43, 775, 0),
woosh.Token(woosh.INDENT, '            ', 775, 0, 775, 12),
woosh.Token(woosh.NAME, 'return', 775, 12, 775, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 775, 19, 775, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 33, 776, 0),
woosh.Token(woosh.DEDENT, '        ', 776, 0, 776, 8),
woosh.Token(woosh.NAME, 'return', 776, 8, 776, 14),
woosh.Token(woosh.NAME, 'self', 776, 15, 776, 19),
woosh.Token(woosh.OP, '.', 776, 19, 776, 20),
woosh.Token(woosh.NAME, '_cparts', 776, 20, 776, 27),
woosh.Token(woosh.OP, '==', 776, 28, 776, 30),
woosh.Token(woosh.NAME, 'other', 776, 31, 776, 36),
woosh.Token(woosh.OP, '.', 776, 36, 776, 37),
woosh.Token(woosh.NAME, '_cparts', 776, 37, 776, 44),
woosh.Token(woosh.NAME, 'and', 776, 45, 776, 48),
woosh.Token(woosh.NAME, 'self', 776, 49, 776, 53),
woosh.Token(woosh.OP, '.', 776, 53, 776, 54),
woosh.Token(woosh.NAME, '_flavour', 776, 54, 776, 62),
woosh.Token(woosh.NAME, 'is', 776, 63, 776, 65),
woosh.Token(woosh.NAME, 'other', 776, 66, 776, 71),
woosh.Token(woosh.OP, '.', 776, 71, 776, 72),
woosh.Token(woosh.NAME, '_flavour', 776, 72, 776, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 776, 80, 777, 0),
woosh.Token(woosh.DEDENT, '    ', 778, 0, 778, 4),
woosh.Token(woosh.NAME, 'def', 778, 4, 778, 7),
woosh.Token(woosh.NAME, '__hash__', 778, 8, 778, 16),
woosh.Token(woosh.OP, '(', 778, 16, 778, 17),
woosh.Token(woosh.NAME, 'self', 778, 17, 778, 21),
woosh.Token(woosh.OP, ')', 778, 21, 778, 22),
woosh.Token(woosh.OP, ':', 778, 22, 778, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 23, 779, 0),
woosh.Token(woosh.INDENT, '        ', 779, 0, 779, 8),
woosh.Token(woosh.NAME, 'try', 779, 8, 779, 11),
woosh.Token(woosh.OP, ':', 779, 11, 779, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 12, 780, 0),
woosh.Token(woosh.INDENT, '            ', 780, 0, 780, 12),
woosh.Token(woosh.NAME, 'return', 780, 12, 780, 18),
woosh.Token(woosh.NAME, 'self', 780, 19, 780, 23),
woosh.Token(woosh.OP, '.', 780, 23, 780, 24),
woosh.Token(woosh.NAME, '_hash', 780, 24, 780, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 780, 29, 781, 0),
woosh.Token(woosh.DEDENT, '        ', 781, 0, 781, 8),
woosh.Token(woosh.NAME, 'except', 781, 8, 781, 14),
woosh.Token(woosh.NAME, 'AttributeError', 781, 15, 781, 29),
woosh.Token(woosh.OP, ':', 781, 29, 781, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 30, 782, 0),
woosh.Token(woosh.INDENT, '            ', 782, 0, 782, 12),
woosh.Token(woosh.NAME, 'self', 782, 12, 782, 16),
woosh.Token(woosh.OP, '.', 782, 16, 782, 17),
woosh.Token(woosh.NAME, '_hash', 782, 17, 782, 22),
woosh.Token(woosh.OP, '=', 782, 23, 782, 24),
woosh.Token(woosh.NAME, 'hash', 782, 25, 782, 29),
woosh.Token(woosh.OP, '(', 782, 29, 782, 30),
woosh.Token(woosh.NAME, 'tuple', 782, 30, 782, 35),
woosh.Token(woosh.OP, '(', 782, 35, 782, 36),
woosh.Token(woosh.NAME, 'self', 782, 36, 782, 40),
woosh.Token(woosh.OP, '.', 782, 40, 782, 41),
woosh.Token(woosh.NAME, '_cparts', 782, 41, 782, 48),
woosh.Token(woosh.OP, ')', 782, 48, 782, 49),
woosh.Token(woosh.OP, ')', 782, 49, 782, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 50, 783, 0),
woosh.Token(woosh.NAME, 'return', 783, 12, 783, 18),
woosh.Token(woosh.NAME, 'self', 783, 19, 783, 23),
woosh.Token(woosh.OP, '.', 783, 23, 783, 24),
woosh.Token(woosh.NAME, '_hash', 783, 24, 783, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 783, 29, 784, 0),
woosh.Token(woosh.DEDENT, '    ', 785, 0, 785, 4),
woosh.Token(woosh.DEDENT, '', 785, 4, 785, 4),
woosh.Token(woosh.NAME, 'def', 785, 4, 785, 7),
woosh.Token(woosh.NAME, '__lt__', 785, 8, 785, 14),
woosh.Token(woosh.OP, '(', 785, 14, 785, 15),
woosh.Token(woosh.NAME, 'self', 785, 15, 785, 19),
woosh.Token(woosh.OP, ',', 785, 19, 785, 20),
woosh.Token(woosh.NAME, 'other', 785, 21, 785, 26),
woosh.Token(woosh.OP, ')', 785, 26, 785, 27),
woosh.Token(woosh.OP, ':', 785, 27, 785, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 785, 28, 786, 0),
woosh.Token(woosh.INDENT, '        ', 786, 0, 786, 8),
woosh.Token(woosh.NAME, 'if', 786, 8, 786, 10),
woosh.Token(woosh.NAME, 'not', 786, 11, 786, 14),
woosh.Token(woosh.NAME, 'isinstance', 786, 15, 786, 25),
woosh.Token(woosh.OP, '(', 786, 25, 786, 26),
woosh.Token(woosh.NAME, 'other', 786, 26, 786, 31),
woosh.Token(woosh.OP, ',', 786, 31, 786, 32),
woosh.Token(woosh.NAME, 'PurePath', 786, 33, 786, 41),
woosh.Token(woosh.OP, ')', 786, 41, 786, 42),
woosh.Token(woosh.NAME, 'or', 786, 43, 786, 45),
woosh.Token(woosh.NAME, 'self', 786, 46, 786, 50),
woosh.Token(woosh.OP, '.', 786, 50, 786, 51),
woosh.Token(woosh.NAME, '_flavour', 786, 51, 786, 59),
woosh.Token(woosh.NAME, 'is', 786, 60, 786, 62),
woosh.Token(woosh.NAME, 'not', 786, 63, 786, 66),
woosh.Token(woosh.NAME, 'other', 786, 67, 786, 72),
woosh.Token(woosh.OP, '.', 786, 72, 786, 73),
woosh.Token(woosh.NAME, '_flavour', 786, 73, 786, 81),
woosh.Token(woosh.OP, ':', 786, 81, 786, 82),
woosh.Token(woosh.NEWLINE, '\r\n', 786, 82, 787, 0),
woosh.Token(woosh.INDENT, '            ', 787, 0, 787, 12),
woosh.Token(woosh.NAME, 'return', 787, 12, 787, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 787, 19, 787, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 33, 788, 0),
woosh.Token(woosh.DEDENT, '        ', 788, 0, 788, 8),
woosh.Token(woosh.NAME, 'return', 788, 8, 788, 14),
woosh.Token(woosh.NAME, 'self', 788, 15, 788, 19),
woosh.Token(woosh.OP, '.', 788, 19, 788, 20),
woosh.Token(woosh.NAME, '_cparts', 788, 20, 788, 27),
woosh.Token(woosh.OP, '<', 788, 28, 788, 29),
woosh.Token(woosh.NAME, 'other', 788, 30, 788, 35),
woosh.Token(woosh.OP, '.', 788, 35, 788, 36),
woosh.Token(woosh.NAME, '_cparts', 788, 36, 788, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 788, 43, 789, 0),
woosh.Token(woosh.DEDENT, '    ', 790, 0, 790, 4),
woosh.Token(woosh.NAME, 'def', 790, 4, 790, 7),
woosh.Token(woosh.NAME, '__le__', 790, 8, 790, 14),
woosh.Token(woosh.OP, '(', 790, 14, 790, 15),
woosh.Token(woosh.NAME, 'self', 790, 15, 790, 19),
woosh.Token(woosh.OP, ',', 790, 19, 790, 20),
woosh.Token(woosh.NAME, 'other', 790, 21, 790, 26),
woosh.Token(woosh.OP, ')', 790, 26, 790, 27),
woosh.Token(woosh.OP, ':', 790, 27, 790, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 28, 791, 0),
woosh.Token(woosh.INDENT, '        ', 791, 0, 791, 8),
woosh.Token(woosh.NAME, 'if', 791, 8, 791, 10),
woosh.Token(woosh.NAME, 'not', 791, 11, 791, 14),
woosh.Token(woosh.NAME, 'isinstance', 791, 15, 791, 25),
woosh.Token(woosh.OP, '(', 791, 25, 791, 26),
woosh.Token(woosh.NAME, 'other', 791, 26, 791, 31),
woosh.Token(woosh.OP, ',', 791, 31, 791, 32),
woosh.Token(woosh.NAME, 'PurePath', 791, 33, 791, 41),
woosh.Token(woosh.OP, ')', 791, 41, 791, 42),
woosh.Token(woosh.NAME, 'or', 791, 43, 791, 45),
woosh.Token(woosh.NAME, 'self', 791, 46, 791, 50),
woosh.Token(woosh.OP, '.', 791, 50, 791, 51),
woosh.Token(woosh.NAME, '_flavour', 791, 51, 791, 59),
woosh.Token(woosh.NAME, 'is', 791, 60, 791, 62),
woosh.Token(woosh.NAME, 'not', 791, 63, 791, 66),
woosh.Token(woosh.NAME, 'other', 791, 67, 791, 72),
woosh.Token(woosh.OP, '.', 791, 72, 791, 73),
woosh.Token(woosh.NAME, '_flavour', 791, 73, 791, 81),
woosh.Token(woosh.OP, ':', 791, 81, 791, 82),
woosh.Token(woosh.NEWLINE, '\r\n', 791, 82, 792, 0),
woosh.Token(woosh.INDENT, '            ', 792, 0, 792, 12),
woosh.Token(woosh.NAME, 'return', 792, 12, 792, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 792, 19, 792, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 33, 793, 0),
woosh.Token(woosh.DEDENT, '        ', 793, 0, 793, 8),
woosh.Token(woosh.NAME, 'return', 793, 8, 793, 14),
woosh.Token(woosh.NAME, 'self', 793, 15, 793, 19),
woosh.Token(woosh.OP, '.', 793, 19, 793, 20),
woosh.Token(woosh.NAME, '_cparts', 793, 20, 793, 27),
woosh.Token(woosh.OP, '<=', 793, 28, 793, 30),
woosh.Token(woosh.NAME, 'other', 793, 31, 793, 36),
woosh.Token(woosh.OP, '.', 793, 36, 793, 37),
woosh.Token(woosh.NAME, '_cparts', 793, 37, 793, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 793, 44, 794, 0),
woosh.Token(woosh.DEDENT, '    ', 795, 0, 795, 4),
woosh.Token(woosh.NAME, 'def', 795, 4, 795, 7),
woosh.Token(woosh.NAME, '__gt__', 795, 8, 795, 14),
woosh.Token(woosh.OP, '(', 795, 14, 795, 15),
woosh.Token(woosh.NAME, 'self', 795, 15, 795, 19),
woosh.Token(woosh.OP, ',', 795, 19, 795, 20),
woosh.Token(woosh.NAME, 'other', 795, 21, 795, 26),
woosh.Token(woosh.OP, ')', 795, 26, 795, 27),
woosh.Token(woosh.OP, ':', 795, 27, 795, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 28, 796, 0),
woosh.Token(woosh.INDENT, '        ', 796, 0, 796, 8),
woosh.Token(woosh.NAME, 'if', 796, 8, 796, 10),
woosh.Token(woosh.NAME, 'not', 796, 11, 796, 14),
woosh.Token(woosh.NAME, 'isinstance', 796, 15, 796, 25),
woosh.Token(woosh.OP, '(', 796, 25, 796, 26),
woosh.Token(woosh.NAME, 'other', 796, 26, 796, 31),
woosh.Token(woosh.OP, ',', 796, 31, 796, 32),
woosh.Token(woosh.NAME, 'PurePath', 796, 33, 796, 41),
woosh.Token(woosh.OP, ')', 796, 41, 796, 42),
woosh.Token(woosh.NAME, 'or', 796, 43, 796, 45),
woosh.Token(woosh.NAME, 'self', 796, 46, 796, 50),
woosh.Token(woosh.OP, '.', 796, 50, 796, 51),
woosh.Token(woosh.NAME, '_flavour', 796, 51, 796, 59),
woosh.Token(woosh.NAME, 'is', 796, 60, 796, 62),
woosh.Token(woosh.NAME, 'not', 796, 63, 796, 66),
woosh.Token(woosh.NAME, 'other', 796, 67, 796, 72),
woosh.Token(woosh.OP, '.', 796, 72, 796, 73),
woosh.Token(woosh.NAME, '_flavour', 796, 73, 796, 81),
woosh.Token(woosh.OP, ':', 796, 81, 796, 82),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 82, 797, 0),
woosh.Token(woosh.INDENT, '            ', 797, 0, 797, 12),
woosh.Token(woosh.NAME, 'return', 797, 12, 797, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 797, 19, 797, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 33, 798, 0),
woosh.Token(woosh.DEDENT, '        ', 798, 0, 798, 8),
woosh.Token(woosh.NAME, 'return', 798, 8, 798, 14),
woosh.Token(woosh.NAME, 'self', 798, 15, 798, 19),
woosh.Token(woosh.OP, '.', 798, 19, 798, 20),
woosh.Token(woosh.NAME, '_cparts', 798, 20, 798, 27),
woosh.Token(woosh.OP, '>', 798, 28, 798, 29),
woosh.Token(woosh.NAME, 'other', 798, 30, 798, 35),
woosh.Token(woosh.OP, '.', 798, 35, 798, 36),
woosh.Token(woosh.NAME, '_cparts', 798, 36, 798, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 43, 799, 0),
woosh.Token(woosh.DEDENT, '    ', 800, 0, 800, 4),
woosh.Token(woosh.NAME, 'def', 800, 4, 800, 7),
woosh.Token(woosh.NAME, '__ge__', 800, 8, 800, 14),
woosh.Token(woosh.OP, '(', 800, 14, 800, 15),
woosh.Token(woosh.NAME, 'self', 800, 15, 800, 19),
woosh.Token(woosh.OP, ',', 800, 19, 800, 20),
woosh.Token(woosh.NAME, 'other', 800, 21, 800, 26),
woosh.Token(woosh.OP, ')', 800, 26, 800, 27),
woosh.Token(woosh.OP, ':', 800, 27, 800, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 28, 801, 0),
woosh.Token(woosh.INDENT, '        ', 801, 0, 801, 8),
woosh.Token(woosh.NAME, 'if', 801, 8, 801, 10),
woosh.Token(woosh.NAME, 'not', 801, 11, 801, 14),
woosh.Token(woosh.NAME, 'isinstance', 801, 15, 801, 25),
woosh.Token(woosh.OP, '(', 801, 25, 801, 26),
woosh.Token(woosh.NAME, 'other', 801, 26, 801, 31),
woosh.Token(woosh.OP, ',', 801, 31, 801, 32),
woosh.Token(woosh.NAME, 'PurePath', 801, 33, 801, 41),
woosh.Token(woosh.OP, ')', 801, 41, 801, 42),
woosh.Token(woosh.NAME, 'or', 801, 43, 801, 45),
woosh.Token(woosh.NAME, 'self', 801, 46, 801, 50),
woosh.Token(woosh.OP, '.', 801, 50, 801, 51),
woosh.Token(woosh.NAME, '_flavour', 801, 51, 801, 59),
woosh.Token(woosh.NAME, 'is', 801, 60, 801, 62),
woosh.Token(woosh.NAME, 'not', 801, 63, 801, 66),
woosh.Token(woosh.NAME, 'other', 801, 67, 801, 72),
woosh.Token(woosh.OP, '.', 801, 72, 801, 73),
woosh.Token(woosh.NAME, '_flavour', 801, 73, 801, 81),
woosh.Token(woosh.OP, ':', 801, 81, 801, 82),
woosh.Token(woosh.NEWLINE, '\r\n', 801, 82, 802, 0),
woosh.Token(woosh.INDENT, '            ', 802, 0, 802, 12),
woosh.Token(woosh.NAME, 'return', 802, 12, 802, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 802, 19, 802, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 33, 803, 0),
woosh.Token(woosh.DEDENT, '        ', 803, 0, 803, 8),
woosh.Token(woosh.NAME, 'return', 803, 8, 803, 14),
woosh.Token(woosh.NAME, 'self', 803, 15, 803, 19),
woosh.Token(woosh.OP, '.', 803, 19, 803, 20),
woosh.Token(woosh.NAME, '_cparts', 803, 20, 803, 27),
woosh.Token(woosh.OP, '>=', 803, 28, 803, 30),
woosh.Token(woosh.NAME, 'other', 803, 31, 803, 36),
woosh.Token(woosh.OP, '.', 803, 36, 803, 37),
woosh.Token(woosh.NAME, '_cparts', 803, 37, 803, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 803, 44, 804, 0),
woosh.Token(woosh.DEDENT, '    ', 805, 0, 805, 4),
woosh.Token(woosh.NAME, 'def', 805, 4, 805, 7),
woosh.Token(woosh.NAME, '__class_getitem__', 805, 8, 805, 25),
woosh.Token(woosh.OP, '(', 805, 25, 805, 26),
woosh.Token(woosh.NAME, 'cls', 805, 26, 805, 29),
woosh.Token(woosh.OP, ',', 805, 29, 805, 30),
woosh.Token(woosh.NAME, 'type', 805, 31, 805, 35),
woosh.Token(woosh.OP, ')', 805, 35, 805, 36),
woosh.Token(woosh.OP, ':', 805, 36, 805, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 805, 37, 806, 0),
woosh.Token(woosh.INDENT, '        ', 806, 0, 806, 8),
woosh.Token(woosh.NAME, 'return', 806, 8, 806, 14),
woosh.Token(woosh.NAME, 'cls', 806, 15, 806, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 806, 18, 807, 0),
woosh.Token(woosh.DEDENT, '    ', 808, 0, 808, 4),
woosh.Token(woosh.NAME, 'drive', 808, 4, 808, 9),
woosh.Token(woosh.OP, '=', 808, 10, 808, 11),
woosh.Token(woosh.NAME, 'property', 808, 12, 808, 20),
woosh.Token(woosh.OP, '(', 808, 20, 808, 21),
woosh.Token(woosh.NAME, 'attrgetter', 808, 21, 808, 31),
woosh.Token(woosh.OP, '(', 808, 31, 808, 32),
woosh.Token(woosh.STRING, "'_drv'", 808, 32, 808, 38),
woosh.Token(woosh.OP, ')', 808, 38, 808, 39),
woosh.Token(woosh.OP, ',', 808, 39, 808, 40),
woosh.Token(woosh.NAME, 'doc', 809, 21, 809, 24),
woosh.Token(woosh.OP, '=', 809, 24, 809, 25),
woosh.Token(woosh.STRING, '"""The drive prefix (letter or UNC path), if any."""', 809, 25, 809, 77),
woosh.Token(woosh.OP, ')', 809, 77, 809, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 809, 78, 810, 0),
woosh.Token(woosh.NAME, 'root', 811, 4, 811, 8),
woosh.Token(woosh.OP, '=', 811, 9, 811, 10),
woosh.Token(woosh.NAME, 'property', 811, 11, 811, 19),
woosh.Token(woosh.OP, '(', 811, 19, 811, 20),
woosh.Token(woosh.NAME, 'attrgetter', 811, 20, 811, 30),
woosh.Token(woosh.OP, '(', 811, 30, 811, 31),
woosh.Token(woosh.STRING, "'_root'", 811, 31, 811, 38),
woosh.Token(woosh.OP, ')', 811, 38, 811, 39),
woosh.Token(woosh.OP, ',', 811, 39, 811, 40),
woosh.Token(woosh.NAME, 'doc', 812, 20, 812, 23),
woosh.Token(woosh.OP, '=', 812, 23, 812, 24),
woosh.Token(woosh.STRING, '"""The root of the path, if any."""', 812, 24, 812, 59),
woosh.Token(woosh.OP, ')', 812, 59, 812, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 812, 60, 813, 0),
woosh.Token(woosh.OP, '@', 814, 4, 814, 5),
woosh.Token(woosh.NAME, 'property', 814, 5, 814, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 814, 13, 815, 0),
woosh.Token(woosh.NAME, 'def', 815, 4, 815, 7),
woosh.Token(woosh.NAME, 'anchor', 815, 8, 815, 14),
woosh.Token(woosh.OP, '(', 815, 14, 815, 15),
woosh.Token(woosh.NAME, 'self', 815, 15, 815, 19),
woosh.Token(woosh.OP, ')', 815, 19, 815, 20),
woosh.Token(woosh.OP, ':', 815, 20, 815, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 815, 21, 816, 0),
woosh.Token(woosh.INDENT, '        ', 816, 0, 816, 8),
woosh.Token(woosh.STRING, '"""The concatenation of the drive and root, or \'\'."""', 816, 8, 816, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 816, 61, 817, 0),
woosh.Token(woosh.NAME, 'anchor', 817, 8, 817, 14),
woosh.Token(woosh.OP, '=', 817, 15, 817, 16),
woosh.Token(woosh.NAME, 'self', 817, 17, 817, 21),
woosh.Token(woosh.OP, '.', 817, 21, 817, 22),
woosh.Token(woosh.NAME, '_drv', 817, 22, 817, 26),
woosh.Token(woosh.OP, '+', 817, 27, 817, 28),
woosh.Token(woosh.NAME, 'self', 817, 29, 817, 33),
woosh.Token(woosh.OP, '.', 817, 33, 817, 34),
woosh.Token(woosh.NAME, '_root', 817, 34, 817, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 817, 39, 818, 0),
woosh.Token(woosh.NAME, 'return', 818, 8, 818, 14),
woosh.Token(woosh.NAME, 'anchor', 818, 15, 818, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 818, 21, 819, 0),
woosh.Token(woosh.DEDENT, '    ', 820, 0, 820, 4),
woosh.Token(woosh.OP, '@', 820, 4, 820, 5),
woosh.Token(woosh.NAME, 'property', 820, 5, 820, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 820, 13, 821, 0),
woosh.Token(woosh.NAME, 'def', 821, 4, 821, 7),
woosh.Token(woosh.NAME, 'name', 821, 8, 821, 12),
woosh.Token(woosh.OP, '(', 821, 12, 821, 13),
woosh.Token(woosh.NAME, 'self', 821, 13, 821, 17),
woosh.Token(woosh.OP, ')', 821, 17, 821, 18),
woosh.Token(woosh.OP, ':', 821, 18, 821, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 19, 822, 0),
woosh.Token(woosh.INDENT, '        ', 822, 0, 822, 8),
woosh.Token(woosh.STRING, '"""The final path component, if any."""', 822, 8, 822, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 47, 823, 0),
woosh.Token(woosh.NAME, 'parts', 823, 8, 823, 13),
woosh.Token(woosh.OP, '=', 823, 14, 823, 15),
woosh.Token(woosh.NAME, 'self', 823, 16, 823, 20),
woosh.Token(woosh.OP, '.', 823, 20, 823, 21),
woosh.Token(woosh.NAME, '_parts', 823, 21, 823, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 823, 27, 824, 0),
woosh.Token(woosh.NAME, 'if', 824, 8, 824, 10),
woosh.Token(woosh.NAME, 'len', 824, 11, 824, 14),
woosh.Token(woosh.OP, '(', 824, 14, 824, 15),
woosh.Token(woosh.NAME, 'parts', 824, 15, 824, 20),
woosh.Token(woosh.OP, ')', 824, 20, 824, 21),
woosh.Token(woosh.OP, '==', 824, 22, 824, 24),
woosh.Token(woosh.OP, '(', 824, 25, 824, 26),
woosh.Token(woosh.NUMBER, '1', 824, 26, 824, 27),
woosh.Token(woosh.NAME, 'if', 824, 28, 824, 30),
woosh.Token(woosh.OP, '(', 824, 31, 824, 32),
woosh.Token(woosh.NAME, 'self', 824, 32, 824, 36),
woosh.Token(woosh.OP, '.', 824, 36, 824, 37),
woosh.Token(woosh.NAME, '_drv', 824, 37, 824, 41),
woosh.Token(woosh.NAME, 'or', 824, 42, 824, 44),
woosh.Token(woosh.NAME, 'self', 824, 45, 824, 49),
woosh.Token(woosh.OP, '.', 824, 49, 824, 50),
woosh.Token(woosh.NAME, '_root', 824, 50, 824, 55),
woosh.Token(woosh.OP, ')', 824, 55, 824, 56),
woosh.Token(woosh.NAME, 'else', 824, 57, 824, 61),
woosh.Token(woosh.NUMBER, '0', 824, 62, 824, 63),
woosh.Token(woosh.OP, ')', 824, 63, 824, 64),
woosh.Token(woosh.OP, ':', 824, 64, 824, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 65, 825, 0),
woosh.Token(woosh.INDENT, '            ', 825, 0, 825, 12),
woosh.Token(woosh.NAME, 'return', 825, 12, 825, 18),
woosh.Token(woosh.STRING, "''", 825, 19, 825, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 21, 826, 0),
woosh.Token(woosh.DEDENT, '        ', 826, 0, 826, 8),
woosh.Token(woosh.NAME, 'return', 826, 8, 826, 14),
woosh.Token(woosh.NAME, 'parts', 826, 15, 826, 20),
woosh.Token(woosh.OP, '[', 826, 20, 826, 21),
woosh.Token(woosh.OP, '-', 826, 21, 826, 22),
woosh.Token(woosh.NUMBER, '1', 826, 22, 826, 23),
woosh.Token(woosh.OP, ']', 826, 23, 826, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 826, 24, 827, 0),
woosh.Token(woosh.DEDENT, '    ', 828, 0, 828, 4),
woosh.Token(woosh.OP, '@', 828, 4, 828, 5),
woosh.Token(woosh.NAME, 'property', 828, 5, 828, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 828, 13, 829, 0),
woosh.Token(woosh.NAME, 'def', 829, 4, 829, 7),
woosh.Token(woosh.NAME, 'suffix', 829, 8, 829, 14),
woosh.Token(woosh.OP, '(', 829, 14, 829, 15),
woosh.Token(woosh.NAME, 'self', 829, 15, 829, 19),
woosh.Token(woosh.OP, ')', 829, 19, 829, 20),
woosh.Token(woosh.OP, ':', 829, 20, 829, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 829, 21, 830, 0),
woosh.Token(woosh.INDENT, '        ', 830, 0, 830, 8),
woosh.Token(woosh.STRING, '"""\r\n        The final component\'s last suffix, if any.\r\n\r\n        This includes the leading period. For example: \'.txt\'\r\n        """', 830, 8, 834, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 11, 835, 0),
woosh.Token(woosh.NAME, 'name', 835, 8, 835, 12),
woosh.Token(woosh.OP, '=', 835, 13, 835, 14),
woosh.Token(woosh.NAME, 'self', 835, 15, 835, 19),
woosh.Token(woosh.OP, '.', 835, 19, 835, 20),
woosh.Token(woosh.NAME, 'name', 835, 20, 835, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 835, 24, 836, 0),
woosh.Token(woosh.NAME, 'i', 836, 8, 836, 9),
woosh.Token(woosh.OP, '=', 836, 10, 836, 11),
woosh.Token(woosh.NAME, 'name', 836, 12, 836, 16),
woosh.Token(woosh.OP, '.', 836, 16, 836, 17),
woosh.Token(woosh.NAME, 'rfind', 836, 17, 836, 22),
woosh.Token(woosh.OP, '(', 836, 22, 836, 23),
woosh.Token(woosh.STRING, "'.'", 836, 23, 836, 26),
woosh.Token(woosh.OP, ')', 836, 26, 836, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 836, 27, 837, 0),
woosh.Token(woosh.NAME, 'if', 837, 8, 837, 10),
woosh.Token(woosh.NUMBER, '0', 837, 11, 837, 12),
woosh.Token(woosh.OP, '<', 837, 13, 837, 14),
woosh.Token(woosh.NAME, 'i', 837, 15, 837, 16),
woosh.Token(woosh.OP, '<', 837, 17, 837, 18),
woosh.Token(woosh.NAME, 'len', 837, 19, 837, 22),
woosh.Token(woosh.OP, '(', 837, 22, 837, 23),
woosh.Token(woosh.NAME, 'name', 837, 23, 837, 27),
woosh.Token(woosh.OP, ')', 837, 27, 837, 28),
woosh.Token(woosh.OP, '-', 837, 29, 837, 30),
woosh.Token(woosh.NUMBER, '1', 837, 31, 837, 32),
woosh.Token(woosh.OP, ':', 837, 32, 837, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 33, 838, 0),
woosh.Token(woosh.INDENT, '            ', 838, 0, 838, 12),
woosh.Token(woosh.NAME, 'return', 838, 12, 838, 18),
woosh.Token(woosh.NAME, 'name', 838, 19, 838, 23),
woosh.Token(woosh.OP, '[', 838, 23, 838, 24),
woosh.Token(woosh.NAME, 'i', 838, 24, 838, 25),
woosh.Token(woosh.OP, ':', 838, 25, 838, 26),
woosh.Token(woosh.OP, ']', 838, 26, 838, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 27, 839, 0),
woosh.Token(woosh.DEDENT, '        ', 839, 0, 839, 8),
woosh.Token(woosh.NAME, 'else', 839, 8, 839, 12),
woosh.Token(woosh.OP, ':', 839, 12, 839, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 13, 840, 0),
woosh.Token(woosh.INDENT, '            ', 840, 0, 840, 12),
woosh.Token(woosh.NAME, 'return', 840, 12, 840, 18),
woosh.Token(woosh.STRING, "''", 840, 19, 840, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 840, 21, 841, 0),
woosh.Token(woosh.DEDENT, '    ', 842, 0, 842, 4),
woosh.Token(woosh.DEDENT, '', 842, 4, 842, 4),
woosh.Token(woosh.OP, '@', 842, 4, 842, 5),
woosh.Token(woosh.NAME, 'property', 842, 5, 842, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 13, 843, 0),
woosh.Token(woosh.NAME, 'def', 843, 4, 843, 7),
woosh.Token(woosh.NAME, 'suffixes', 843, 8, 843, 16),
woosh.Token(woosh.OP, '(', 843, 16, 843, 17),
woosh.Token(woosh.NAME, 'self', 843, 17, 843, 21),
woosh.Token(woosh.OP, ')', 843, 21, 843, 22),
woosh.Token(woosh.OP, ':', 843, 22, 843, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 23, 844, 0),
woosh.Token(woosh.INDENT, '        ', 844, 0, 844, 8),
woosh.Token(woosh.STRING, '"""\r\n        A list of the final component\'s suffixes, if any.\r\n\r\n        These include the leading periods. For example: [\'.tar\', \'.gz\']\r\n        """', 844, 8, 848, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 11, 849, 0),
woosh.Token(woosh.NAME, 'name', 849, 8, 849, 12),
woosh.Token(woosh.OP, '=', 849, 13, 849, 14),
woosh.Token(woosh.NAME, 'self', 849, 15, 849, 19),
woosh.Token(woosh.OP, '.', 849, 19, 849, 20),
woosh.Token(woosh.NAME, 'name', 849, 20, 849, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 24, 850, 0),
woosh.Token(woosh.NAME, 'if', 850, 8, 850, 10),
woosh.Token(woosh.NAME, 'name', 850, 11, 850, 15),
woosh.Token(woosh.OP, '.', 850, 15, 850, 16),
woosh.Token(woosh.NAME, 'endswith', 850, 16, 850, 24),
woosh.Token(woosh.OP, '(', 850, 24, 850, 25),
woosh.Token(woosh.STRING, "'.'", 850, 25, 850, 28),
woosh.Token(woosh.OP, ')', 850, 28, 850, 29),
woosh.Token(woosh.OP, ':', 850, 29, 850, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 30, 851, 0),
woosh.Token(woosh.INDENT, '            ', 851, 0, 851, 12),
woosh.Token(woosh.NAME, 'return', 851, 12, 851, 18),
woosh.Token(woosh.OP, '[', 851, 19, 851, 20),
woosh.Token(woosh.OP, ']', 851, 20, 851, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 21, 852, 0),
woosh.Token(woosh.DEDENT, '        ', 852, 0, 852, 8),
woosh.Token(woosh.NAME, 'name', 852, 8, 852, 12),
woosh.Token(woosh.OP, '=', 852, 13, 852, 14),
woosh.Token(woosh.NAME, 'name', 852, 15, 852, 19),
woosh.Token(woosh.OP, '.', 852, 19, 852, 20),
woosh.Token(woosh.NAME, 'lstrip', 852, 20, 852, 26),
woosh.Token(woosh.OP, '(', 852, 26, 852, 27),
woosh.Token(woosh.STRING, "'.'", 852, 27, 852, 30),
woosh.Token(woosh.OP, ')', 852, 30, 852, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 852, 31, 853, 0),
woosh.Token(woosh.NAME, 'return', 853, 8, 853, 14),
woosh.Token(woosh.OP, '[', 853, 15, 853, 16),
woosh.Token(woosh.STRING, "'.'", 853, 16, 853, 19),
woosh.Token(woosh.OP, '+', 853, 20, 853, 21),
woosh.Token(woosh.NAME, 'suffix', 853, 22, 853, 28),
woosh.Token(woosh.NAME, 'for', 853, 29, 853, 32),
woosh.Token(woosh.NAME, 'suffix', 853, 33, 853, 39),
woosh.Token(woosh.NAME, 'in', 853, 40, 853, 42),
woosh.Token(woosh.NAME, 'name', 853, 43, 853, 47),
woosh.Token(woosh.OP, '.', 853, 47, 853, 48),
woosh.Token(woosh.NAME, 'split', 853, 48, 853, 53),
woosh.Token(woosh.OP, '(', 853, 53, 853, 54),
woosh.Token(woosh.STRING, "'.'", 853, 54, 853, 57),
woosh.Token(woosh.OP, ')', 853, 57, 853, 58),
woosh.Token(woosh.OP, '[', 853, 58, 853, 59),
woosh.Token(woosh.NUMBER, '1', 853, 59, 853, 60),
woosh.Token(woosh.OP, ':', 853, 60, 853, 61),
woosh.Token(woosh.OP, ']', 853, 61, 853, 62),
woosh.Token(woosh.OP, ']', 853, 62, 853, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 853, 63, 854, 0),
woosh.Token(woosh.DEDENT, '    ', 855, 0, 855, 4),
woosh.Token(woosh.OP, '@', 855, 4, 855, 5),
woosh.Token(woosh.NAME, 'property', 855, 5, 855, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 855, 13, 856, 0),
woosh.Token(woosh.NAME, 'def', 856, 4, 856, 7),
woosh.Token(woosh.NAME, 'stem', 856, 8, 856, 12),
woosh.Token(woosh.OP, '(', 856, 12, 856, 13),
woosh.Token(woosh.NAME, 'self', 856, 13, 856, 17),
woosh.Token(woosh.OP, ')', 856, 17, 856, 18),
woosh.Token(woosh.OP, ':', 856, 18, 856, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 19, 857, 0),
woosh.Token(woosh.INDENT, '        ', 857, 0, 857, 8),
woosh.Token(woosh.STRING, '"""The final path component, minus its last suffix."""', 857, 8, 857, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 62, 858, 0),
woosh.Token(woosh.NAME, 'name', 858, 8, 858, 12),
woosh.Token(woosh.OP, '=', 858, 13, 858, 14),
woosh.Token(woosh.NAME, 'self', 858, 15, 858, 19),
woosh.Token(woosh.OP, '.', 858, 19, 858, 20),
woosh.Token(woosh.NAME, 'name', 858, 20, 858, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 24, 859, 0),
woosh.Token(woosh.NAME, 'i', 859, 8, 859, 9),
woosh.Token(woosh.OP, '=', 859, 10, 859, 11),
woosh.Token(woosh.NAME, 'name', 859, 12, 859, 16),
woosh.Token(woosh.OP, '.', 859, 16, 859, 17),
woosh.Token(woosh.NAME, 'rfind', 859, 17, 859, 22),
woosh.Token(woosh.OP, '(', 859, 22, 859, 23),
woosh.Token(woosh.STRING, "'.'", 859, 23, 859, 26),
woosh.Token(woosh.OP, ')', 859, 26, 859, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 27, 860, 0),
woosh.Token(woosh.NAME, 'if', 860, 8, 860, 10),
woosh.Token(woosh.NUMBER, '0', 860, 11, 860, 12),
woosh.Token(woosh.OP, '<', 860, 13, 860, 14),
woosh.Token(woosh.NAME, 'i', 860, 15, 860, 16),
woosh.Token(woosh.OP, '<', 860, 17, 860, 18),
woosh.Token(woosh.NAME, 'len', 860, 19, 860, 22),
woosh.Token(woosh.OP, '(', 860, 22, 860, 23),
woosh.Token(woosh.NAME, 'name', 860, 23, 860, 27),
woosh.Token(woosh.OP, ')', 860, 27, 860, 28),
woosh.Token(woosh.OP, '-', 860, 29, 860, 30),
woosh.Token(woosh.NUMBER, '1', 860, 31, 860, 32),
woosh.Token(woosh.OP, ':', 860, 32, 860, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 860, 33, 861, 0),
woosh.Token(woosh.INDENT, '            ', 861, 0, 861, 12),
woosh.Token(woosh.NAME, 'return', 861, 12, 861, 18),
woosh.Token(woosh.NAME, 'name', 861, 19, 861, 23),
woosh.Token(woosh.OP, '[', 861, 23, 861, 24),
woosh.Token(woosh.OP, ':', 861, 24, 861, 25),
woosh.Token(woosh.NAME, 'i', 861, 25, 861, 26),
woosh.Token(woosh.OP, ']', 861, 26, 861, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 27, 862, 0),
woosh.Token(woosh.DEDENT, '        ', 862, 0, 862, 8),
woosh.Token(woosh.NAME, 'else', 862, 8, 862, 12),
woosh.Token(woosh.OP, ':', 862, 12, 862, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 862, 13, 863, 0),
woosh.Token(woosh.INDENT, '            ', 863, 0, 863, 12),
woosh.Token(woosh.NAME, 'return', 863, 12, 863, 18),
woosh.Token(woosh.NAME, 'name', 863, 19, 863, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 23, 864, 0),
woosh.Token(woosh.DEDENT, '    ', 865, 0, 865, 4),
woosh.Token(woosh.DEDENT, '', 865, 4, 865, 4),
woosh.Token(woosh.NAME, 'def', 865, 4, 865, 7),
woosh.Token(woosh.NAME, 'with_name', 865, 8, 865, 17),
woosh.Token(woosh.OP, '(', 865, 17, 865, 18),
woosh.Token(woosh.NAME, 'self', 865, 18, 865, 22),
woosh.Token(woosh.OP, ',', 865, 22, 865, 23),
woosh.Token(woosh.NAME, 'name', 865, 24, 865, 28),
woosh.Token(woosh.OP, ')', 865, 28, 865, 29),
woosh.Token(woosh.OP, ':', 865, 29, 865, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 865, 30, 866, 0),
woosh.Token(woosh.INDENT, '        ', 866, 0, 866, 8),
woosh.Token(woosh.STRING, '"""Return a new path with the file name changed."""', 866, 8, 866, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 866, 59, 867, 0),
woosh.Token(woosh.NAME, 'if', 867, 8, 867, 10),
woosh.Token(woosh.NAME, 'not', 867, 11, 867, 14),
woosh.Token(woosh.NAME, 'self', 867, 15, 867, 19),
woosh.Token(woosh.OP, '.', 867, 19, 867, 20),
woosh.Token(woosh.NAME, 'name', 867, 20, 867, 24),
woosh.Token(woosh.OP, ':', 867, 24, 867, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 867, 25, 868, 0),
woosh.Token(woosh.INDENT, '            ', 868, 0, 868, 12),
woosh.Token(woosh.NAME, 'raise', 868, 12, 868, 17),
woosh.Token(woosh.NAME, 'ValueError', 868, 18, 868, 28),
woosh.Token(woosh.OP, '(', 868, 28, 868, 29),
woosh.Token(woosh.STRING, '"%r has an empty name"', 868, 29, 868, 51),
woosh.Token(woosh.OP, '%', 868, 52, 868, 53),
woosh.Token(woosh.OP, '(', 868, 54, 868, 55),
woosh.Token(woosh.NAME, 'self', 868, 55, 868, 59),
woosh.Token(woosh.OP, ',', 868, 59, 868, 60),
woosh.Token(woosh.OP, ')', 868, 60, 868, 61),
woosh.Token(woosh.OP, ')', 868, 61, 868, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 868, 62, 869, 0),
woosh.Token(woosh.DEDENT, '        ', 869, 0, 869, 8),
woosh.Token(woosh.NAME, 'drv', 869, 8, 869, 11),
woosh.Token(woosh.OP, ',', 869, 11, 869, 12),
woosh.Token(woosh.NAME, 'root', 869, 13, 869, 17),
woosh.Token(woosh.OP, ',', 869, 17, 869, 18),
woosh.Token(woosh.NAME, 'parts', 869, 19, 869, 24),
woosh.Token(woosh.OP, '=', 869, 25, 869, 26),
woosh.Token(woosh.NAME, 'self', 869, 27, 869, 31),
woosh.Token(woosh.OP, '.', 869, 31, 869, 32),
woosh.Token(woosh.NAME, '_flavour', 869, 32, 869, 40),
woosh.Token(woosh.OP, '.', 869, 40, 869, 41),
woosh.Token(woosh.NAME, 'parse_parts', 869, 41, 869, 52),
woosh.Token(woosh.OP, '(', 869, 52, 869, 53),
woosh.Token(woosh.OP, '(', 869, 53, 869, 54),
woosh.Token(woosh.NAME, 'name', 869, 54, 869, 58),
woosh.Token(woosh.OP, ',', 869, 58, 869, 59),
woosh.Token(woosh.OP, ')', 869, 59, 869, 60),
woosh.Token(woosh.OP, ')', 869, 60, 869, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 869, 61, 870, 0),
woosh.Token(woosh.NAME, 'if', 870, 8, 870, 10),
woosh.Token(woosh.OP, '(', 870, 11, 870, 12),
woosh.Token(woosh.NAME, 'not', 870, 12, 870, 15),
woosh.Token(woosh.NAME, 'name', 870, 16, 870, 20),
woosh.Token(woosh.NAME, 'or', 870, 21, 870, 23),
woosh.Token(woosh.NAME, 'name', 870, 24, 870, 28),
woosh.Token(woosh.OP, '[', 870, 28, 870, 29),
woosh.Token(woosh.OP, '-', 870, 29, 870, 30),
woosh.Token(woosh.NUMBER, '1', 870, 30, 870, 31),
woosh.Token(woosh.OP, ']', 870, 31, 870, 32),
woosh.Token(woosh.NAME, 'in', 870, 33, 870, 35),
woosh.Token(woosh.OP, '[', 870, 36, 870, 37),
woosh.Token(woosh.NAME, 'self', 870, 37, 870, 41),
woosh.Token(woosh.OP, '.', 870, 41, 870, 42),
woosh.Token(woosh.NAME, '_flavour', 870, 42, 870, 50),
woosh.Token(woosh.OP, '.', 870, 50, 870, 51),
woosh.Token(woosh.NAME, 'sep', 870, 51, 870, 54),
woosh.Token(woosh.OP, ',', 870, 54, 870, 55),
woosh.Token(woosh.NAME, 'self', 870, 56, 870, 60),
woosh.Token(woosh.OP, '.', 870, 60, 870, 61),
woosh.Token(woosh.NAME, '_flavour', 870, 61, 870, 69),
woosh.Token(woosh.OP, '.', 870, 69, 870, 70),
woosh.Token(woosh.NAME, 'altsep', 870, 70, 870, 76),
woosh.Token(woosh.OP, ']', 870, 76, 870, 77),
woosh.Token(woosh.NAME, 'or', 871, 12, 871, 14),
woosh.Token(woosh.NAME, 'drv', 871, 15, 871, 18),
woosh.Token(woosh.NAME, 'or', 871, 19, 871, 21),
woosh.Token(woosh.NAME, 'root', 871, 22, 871, 26),
woosh.Token(woosh.NAME, 'or', 871, 27, 871, 29),
woosh.Token(woosh.NAME, 'len', 871, 30, 871, 33),
woosh.Token(woosh.OP, '(', 871, 33, 871, 34),
woosh.Token(woosh.NAME, 'parts', 871, 34, 871, 39),
woosh.Token(woosh.OP, ')', 871, 39, 871, 40),
woosh.Token(woosh.OP, '!=', 871, 41, 871, 43),
woosh.Token(woosh.NUMBER, '1', 871, 44, 871, 45),
woosh.Token(woosh.OP, ')', 871, 45, 871, 46),
woosh.Token(woosh.OP, ':', 871, 46, 871, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 871, 47, 872, 0),
woosh.Token(woosh.INDENT, '            ', 872, 0, 872, 12),
woosh.Token(woosh.NAME, 'raise', 872, 12, 872, 17),
woosh.Token(woosh.NAME, 'ValueError', 872, 18, 872, 28),
woosh.Token(woosh.OP, '(', 872, 28, 872, 29),
woosh.Token(woosh.STRING, '"Invalid name %r"', 872, 29, 872, 46),
woosh.Token(woosh.OP, '%', 872, 47, 872, 48),
woosh.Token(woosh.OP, '(', 872, 49, 872, 50),
woosh.Token(woosh.NAME, 'name', 872, 50, 872, 54),
woosh.Token(woosh.OP, ')', 872, 54, 872, 55),
woosh.Token(woosh.OP, ')', 872, 55, 872, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 56, 873, 0),
woosh.Token(woosh.DEDENT, '        ', 873, 0, 873, 8),
woosh.Token(woosh.NAME, 'return', 873, 8, 873, 14),
woosh.Token(woosh.NAME, 'self', 873, 15, 873, 19),
woosh.Token(woosh.OP, '.', 873, 19, 873, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 873, 20, 873, 38),
woosh.Token(woosh.OP, '(', 873, 38, 873, 39),
woosh.Token(woosh.NAME, 'self', 873, 39, 873, 43),
woosh.Token(woosh.OP, '.', 873, 43, 873, 44),
woosh.Token(woosh.NAME, '_drv', 873, 44, 873, 48),
woosh.Token(woosh.OP, ',', 873, 48, 873, 49),
woosh.Token(woosh.NAME, 'self', 873, 50, 873, 54),
woosh.Token(woosh.OP, '.', 873, 54, 873, 55),
woosh.Token(woosh.NAME, '_root', 873, 55, 873, 60),
woosh.Token(woosh.OP, ',', 873, 60, 873, 61),
woosh.Token(woosh.NAME, 'self', 874, 39, 874, 43),
woosh.Token(woosh.OP, '.', 874, 43, 874, 44),
woosh.Token(woosh.NAME, '_parts', 874, 44, 874, 50),
woosh.Token(woosh.OP, '[', 874, 50, 874, 51),
woosh.Token(woosh.OP, ':', 874, 51, 874, 52),
woosh.Token(woosh.OP, '-', 874, 52, 874, 53),
woosh.Token(woosh.NUMBER, '1', 874, 53, 874, 54),
woosh.Token(woosh.OP, ']', 874, 54, 874, 55),
woosh.Token(woosh.OP, '+', 874, 56, 874, 57),
woosh.Token(woosh.OP, '[', 874, 58, 874, 59),
woosh.Token(woosh.NAME, 'name', 874, 59, 874, 63),
woosh.Token(woosh.OP, ']', 874, 63, 874, 64),
woosh.Token(woosh.OP, ')', 874, 64, 874, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 874, 65, 875, 0),
woosh.Token(woosh.DEDENT, '    ', 876, 0, 876, 4),
woosh.Token(woosh.NAME, 'def', 876, 4, 876, 7),
woosh.Token(woosh.NAME, 'with_stem', 876, 8, 876, 17),
woosh.Token(woosh.OP, '(', 876, 17, 876, 18),
woosh.Token(woosh.NAME, 'self', 876, 18, 876, 22),
woosh.Token(woosh.OP, ',', 876, 22, 876, 23),
woosh.Token(woosh.NAME, 'stem', 876, 24, 876, 28),
woosh.Token(woosh.OP, ')', 876, 28, 876, 29),
woosh.Token(woosh.OP, ':', 876, 29, 876, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 876, 30, 877, 0),
woosh.Token(woosh.INDENT, '        ', 877, 0, 877, 8),
woosh.Token(woosh.STRING, '"""Return a new path with the stem changed."""', 877, 8, 877, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 877, 54, 878, 0),
woosh.Token(woosh.NAME, 'return', 878, 8, 878, 14),
woosh.Token(woosh.NAME, 'self', 878, 15, 878, 19),
woosh.Token(woosh.OP, '.', 878, 19, 878, 20),
woosh.Token(woosh.NAME, 'with_name', 878, 20, 878, 29),
woosh.Token(woosh.OP, '(', 878, 29, 878, 30),
woosh.Token(woosh.NAME, 'stem', 878, 30, 878, 34),
woosh.Token(woosh.OP, '+', 878, 35, 878, 36),
woosh.Token(woosh.NAME, 'self', 878, 37, 878, 41),
woosh.Token(woosh.OP, '.', 878, 41, 878, 42),
woosh.Token(woosh.NAME, 'suffix', 878, 42, 878, 48),
woosh.Token(woosh.OP, ')', 878, 48, 878, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 878, 49, 879, 0),
woosh.Token(woosh.DEDENT, '    ', 880, 0, 880, 4),
woosh.Token(woosh.NAME, 'def', 880, 4, 880, 7),
woosh.Token(woosh.NAME, 'with_suffix', 880, 8, 880, 19),
woosh.Token(woosh.OP, '(', 880, 19, 880, 20),
woosh.Token(woosh.NAME, 'self', 880, 20, 880, 24),
woosh.Token(woosh.OP, ',', 880, 24, 880, 25),
woosh.Token(woosh.NAME, 'suffix', 880, 26, 880, 32),
woosh.Token(woosh.OP, ')', 880, 32, 880, 33),
woosh.Token(woosh.OP, ':', 880, 33, 880, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 880, 34, 881, 0),
woosh.Token(woosh.INDENT, '        ', 881, 0, 881, 8),
woosh.Token(woosh.STRING, '"""Return a new path with the file suffix changed.  If the path\r\n        has no suffix, add given suffix.  If the given suffix is an empty\r\n        string, remove the suffix from the path.\r\n        """', 881, 8, 884, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 884, 11, 885, 0),
woosh.Token(woosh.NAME, 'f', 885, 8, 885, 9),
woosh.Token(woosh.OP, '=', 885, 10, 885, 11),
woosh.Token(woosh.NAME, 'self', 885, 12, 885, 16),
woosh.Token(woosh.OP, '.', 885, 16, 885, 17),
woosh.Token(woosh.NAME, '_flavour', 885, 17, 885, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 885, 25, 886, 0),
woosh.Token(woosh.NAME, 'if', 886, 8, 886, 10),
woosh.Token(woosh.NAME, 'f', 886, 11, 886, 12),
woosh.Token(woosh.OP, '.', 886, 12, 886, 13),
woosh.Token(woosh.NAME, 'sep', 886, 13, 886, 16),
woosh.Token(woosh.NAME, 'in', 886, 17, 886, 19),
woosh.Token(woosh.NAME, 'suffix', 886, 20, 886, 26),
woosh.Token(woosh.NAME, 'or', 886, 27, 886, 29),
woosh.Token(woosh.NAME, 'f', 886, 30, 886, 31),
woosh.Token(woosh.OP, '.', 886, 31, 886, 32),
woosh.Token(woosh.NAME, 'altsep', 886, 32, 886, 38),
woosh.Token(woosh.NAME, 'and', 886, 39, 886, 42),
woosh.Token(woosh.NAME, 'f', 886, 43, 886, 44),
woosh.Token(woosh.OP, '.', 886, 44, 886, 45),
woosh.Token(woosh.NAME, 'altsep', 886, 45, 886, 51),
woosh.Token(woosh.NAME, 'in', 886, 52, 886, 54),
woosh.Token(woosh.NAME, 'suffix', 886, 55, 886, 61),
woosh.Token(woosh.OP, ':', 886, 61, 886, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 62, 887, 0),
woosh.Token(woosh.INDENT, '            ', 887, 0, 887, 12),
woosh.Token(woosh.NAME, 'raise', 887, 12, 887, 17),
woosh.Token(woosh.NAME, 'ValueError', 887, 18, 887, 28),
woosh.Token(woosh.OP, '(', 887, 28, 887, 29),
woosh.Token(woosh.STRING, '"Invalid suffix %r"', 887, 29, 887, 48),
woosh.Token(woosh.OP, '%', 887, 49, 887, 50),
woosh.Token(woosh.OP, '(', 887, 51, 887, 52),
woosh.Token(woosh.NAME, 'suffix', 887, 52, 887, 58),
woosh.Token(woosh.OP, ',', 887, 58, 887, 59),
woosh.Token(woosh.OP, ')', 887, 59, 887, 60),
woosh.Token(woosh.OP, ')', 887, 60, 887, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 887, 61, 888, 0),
woosh.Token(woosh.DEDENT, '        ', 888, 0, 888, 8),
woosh.Token(woosh.NAME, 'if', 888, 8, 888, 10),
woosh.Token(woosh.NAME, 'suffix', 888, 11, 888, 17),
woosh.Token(woosh.NAME, 'and', 888, 18, 888, 21),
woosh.Token(woosh.NAME, 'not', 888, 22, 888, 25),
woosh.Token(woosh.NAME, 'suffix', 888, 26, 888, 32),
woosh.Token(woosh.OP, '.', 888, 32, 888, 33),
woosh.Token(woosh.NAME, 'startswith', 888, 33, 888, 43),
woosh.Token(woosh.OP, '(', 888, 43, 888, 44),
woosh.Token(woosh.STRING, "'.'", 888, 44, 888, 47),
woosh.Token(woosh.OP, ')', 888, 47, 888, 48),
woosh.Token(woosh.NAME, 'or', 888, 49, 888, 51),
woosh.Token(woosh.NAME, 'suffix', 888, 52, 888, 58),
woosh.Token(woosh.OP, '==', 888, 59, 888, 61),
woosh.Token(woosh.STRING, "'.'", 888, 62, 888, 65),
woosh.Token(woosh.OP, ':', 888, 65, 888, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 888, 66, 889, 0),
woosh.Token(woosh.INDENT, '            ', 889, 0, 889, 12),
woosh.Token(woosh.NAME, 'raise', 889, 12, 889, 17),
woosh.Token(woosh.NAME, 'ValueError', 889, 18, 889, 28),
woosh.Token(woosh.OP, '(', 889, 28, 889, 29),
woosh.Token(woosh.STRING, '"Invalid suffix %r"', 889, 29, 889, 48),
woosh.Token(woosh.OP, '%', 889, 49, 889, 50),
woosh.Token(woosh.OP, '(', 889, 51, 889, 52),
woosh.Token(woosh.NAME, 'suffix', 889, 52, 889, 58),
woosh.Token(woosh.OP, ')', 889, 58, 889, 59),
woosh.Token(woosh.OP, ')', 889, 59, 889, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 60, 890, 0),
woosh.Token(woosh.DEDENT, '        ', 890, 0, 890, 8),
woosh.Token(woosh.NAME, 'name', 890, 8, 890, 12),
woosh.Token(woosh.OP, '=', 890, 13, 890, 14),
woosh.Token(woosh.NAME, 'self', 890, 15, 890, 19),
woosh.Token(woosh.OP, '.', 890, 19, 890, 20),
woosh.Token(woosh.NAME, 'name', 890, 20, 890, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 890, 24, 891, 0),
woosh.Token(woosh.NAME, 'if', 891, 8, 891, 10),
woosh.Token(woosh.NAME, 'not', 891, 11, 891, 14),
woosh.Token(woosh.NAME, 'name', 891, 15, 891, 19),
woosh.Token(woosh.OP, ':', 891, 19, 891, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 20, 892, 0),
woosh.Token(woosh.INDENT, '            ', 892, 0, 892, 12),
woosh.Token(woosh.NAME, 'raise', 892, 12, 892, 17),
woosh.Token(woosh.NAME, 'ValueError', 892, 18, 892, 28),
woosh.Token(woosh.OP, '(', 892, 28, 892, 29),
woosh.Token(woosh.STRING, '"%r has an empty name"', 892, 29, 892, 51),
woosh.Token(woosh.OP, '%', 892, 52, 892, 53),
woosh.Token(woosh.OP, '(', 892, 54, 892, 55),
woosh.Token(woosh.NAME, 'self', 892, 55, 892, 59),
woosh.Token(woosh.OP, ',', 892, 59, 892, 60),
woosh.Token(woosh.OP, ')', 892, 60, 892, 61),
woosh.Token(woosh.OP, ')', 892, 61, 892, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 62, 893, 0),
woosh.Token(woosh.DEDENT, '        ', 893, 0, 893, 8),
woosh.Token(woosh.NAME, 'old_suffix', 893, 8, 893, 18),
woosh.Token(woosh.OP, '=', 893, 19, 893, 20),
woosh.Token(woosh.NAME, 'self', 893, 21, 893, 25),
woosh.Token(woosh.OP, '.', 893, 25, 893, 26),
woosh.Token(woosh.NAME, 'suffix', 893, 26, 893, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 32, 894, 0),
woosh.Token(woosh.NAME, 'if', 894, 8, 894, 10),
woosh.Token(woosh.NAME, 'not', 894, 11, 894, 14),
woosh.Token(woosh.NAME, 'old_suffix', 894, 15, 894, 25),
woosh.Token(woosh.OP, ':', 894, 25, 894, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 26, 895, 0),
woosh.Token(woosh.INDENT, '            ', 895, 0, 895, 12),
woosh.Token(woosh.NAME, 'name', 895, 12, 895, 16),
woosh.Token(woosh.OP, '=', 895, 17, 895, 18),
woosh.Token(woosh.NAME, 'name', 895, 19, 895, 23),
woosh.Token(woosh.OP, '+', 895, 24, 895, 25),
woosh.Token(woosh.NAME, 'suffix', 895, 26, 895, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 895, 32, 896, 0),
woosh.Token(woosh.DEDENT, '        ', 896, 0, 896, 8),
woosh.Token(woosh.NAME, 'else', 896, 8, 896, 12),
woosh.Token(woosh.OP, ':', 896, 12, 896, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 896, 13, 897, 0),
woosh.Token(woosh.INDENT, '            ', 897, 0, 897, 12),
woosh.Token(woosh.NAME, 'name', 897, 12, 897, 16),
woosh.Token(woosh.OP, '=', 897, 17, 897, 18),
woosh.Token(woosh.NAME, 'name', 897, 19, 897, 23),
woosh.Token(woosh.OP, '[', 897, 23, 897, 24),
woosh.Token(woosh.OP, ':', 897, 24, 897, 25),
woosh.Token(woosh.OP, '-', 897, 25, 897, 26),
woosh.Token(woosh.NAME, 'len', 897, 26, 897, 29),
woosh.Token(woosh.OP, '(', 897, 29, 897, 30),
woosh.Token(woosh.NAME, 'old_suffix', 897, 30, 897, 40),
woosh.Token(woosh.OP, ')', 897, 40, 897, 41),
woosh.Token(woosh.OP, ']', 897, 41, 897, 42),
woosh.Token(woosh.OP, '+', 897, 43, 897, 44),
woosh.Token(woosh.NAME, 'suffix', 897, 45, 897, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 897, 51, 898, 0),
woosh.Token(woosh.DEDENT, '        ', 898, 0, 898, 8),
woosh.Token(woosh.NAME, 'return', 898, 8, 898, 14),
woosh.Token(woosh.NAME, 'self', 898, 15, 898, 19),
woosh.Token(woosh.OP, '.', 898, 19, 898, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 898, 20, 898, 38),
woosh.Token(woosh.OP, '(', 898, 38, 898, 39),
woosh.Token(woosh.NAME, 'self', 898, 39, 898, 43),
woosh.Token(woosh.OP, '.', 898, 43, 898, 44),
woosh.Token(woosh.NAME, '_drv', 898, 44, 898, 48),
woosh.Token(woosh.OP, ',', 898, 48, 898, 49),
woosh.Token(woosh.NAME, 'self', 898, 50, 898, 54),
woosh.Token(woosh.OP, '.', 898, 54, 898, 55),
woosh.Token(woosh.NAME, '_root', 898, 55, 898, 60),
woosh.Token(woosh.OP, ',', 898, 60, 898, 61),
woosh.Token(woosh.NAME, 'self', 899, 39, 899, 43),
woosh.Token(woosh.OP, '.', 899, 43, 899, 44),
woosh.Token(woosh.NAME, '_parts', 899, 44, 899, 50),
woosh.Token(woosh.OP, '[', 899, 50, 899, 51),
woosh.Token(woosh.OP, ':', 899, 51, 899, 52),
woosh.Token(woosh.OP, '-', 899, 52, 899, 53),
woosh.Token(woosh.NUMBER, '1', 899, 53, 899, 54),
woosh.Token(woosh.OP, ']', 899, 54, 899, 55),
woosh.Token(woosh.OP, '+', 899, 56, 899, 57),
woosh.Token(woosh.OP, '[', 899, 58, 899, 59),
woosh.Token(woosh.NAME, 'name', 899, 59, 899, 63),
woosh.Token(woosh.OP, ']', 899, 63, 899, 64),
woosh.Token(woosh.OP, ')', 899, 64, 899, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 65, 900, 0),
woosh.Token(woosh.DEDENT, '    ', 901, 0, 901, 4),
woosh.Token(woosh.NAME, 'def', 901, 4, 901, 7),
woosh.Token(woosh.NAME, 'relative_to', 901, 8, 901, 19),
woosh.Token(woosh.OP, '(', 901, 19, 901, 20),
woosh.Token(woosh.NAME, 'self', 901, 20, 901, 24),
woosh.Token(woosh.OP, ',', 901, 24, 901, 25),
woosh.Token(woosh.OP, '*', 901, 26, 901, 27),
woosh.Token(woosh.NAME, 'other', 901, 27, 901, 32),
woosh.Token(woosh.OP, ')', 901, 32, 901, 33),
woosh.Token(woosh.OP, ':', 901, 33, 901, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 34, 902, 0),
woosh.Token(woosh.INDENT, '        ', 902, 0, 902, 8),
woosh.Token(woosh.STRING, '"""Return the relative path to another path identified by the passed\r\n        arguments.  If the operation is not possible (because this is not\r\n        a subpath of the other path), raise ValueError.\r\n        """', 902, 8, 905, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 905, 11, 906, 0),
woosh.Token(woosh.COMMENT, '# For the purpose of this method, drive and root are considered', 906, 8, 906, 71),
woosh.Token(woosh.COMMENT, '# separate parts, i.e.:', 907, 8, 907, 31),
woosh.Token(woosh.COMMENT, "#   Path('c:/').relative_to('c:')  gives Path('/')", 908, 8, 908, 58),
woosh.Token(woosh.COMMENT, "#   Path('c:/').relative_to('/')   raise ValueError", 909, 8, 909, 59),
woosh.Token(woosh.NAME, 'if', 910, 8, 910, 10),
woosh.Token(woosh.NAME, 'not', 910, 11, 910, 14),
woosh.Token(woosh.NAME, 'other', 910, 15, 910, 20),
woosh.Token(woosh.OP, ':', 910, 20, 910, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 21, 911, 0),
woosh.Token(woosh.INDENT, '            ', 911, 0, 911, 12),
woosh.Token(woosh.NAME, 'raise', 911, 12, 911, 17),
woosh.Token(woosh.NAME, 'TypeError', 911, 18, 911, 27),
woosh.Token(woosh.OP, '(', 911, 27, 911, 28),
woosh.Token(woosh.STRING, '"need at least one argument"', 911, 28, 911, 56),
woosh.Token(woosh.OP, ')', 911, 56, 911, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 57, 912, 0),
woosh.Token(woosh.DEDENT, '        ', 912, 0, 912, 8),
woosh.Token(woosh.NAME, 'parts', 912, 8, 912, 13),
woosh.Token(woosh.OP, '=', 912, 14, 912, 15),
woosh.Token(woosh.NAME, 'self', 912, 16, 912, 20),
woosh.Token(woosh.OP, '.', 912, 20, 912, 21),
woosh.Token(woosh.NAME, '_parts', 912, 21, 912, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 27, 913, 0),
woosh.Token(woosh.NAME, 'drv', 913, 8, 913, 11),
woosh.Token(woosh.OP, '=', 913, 12, 913, 13),
woosh.Token(woosh.NAME, 'self', 913, 14, 913, 18),
woosh.Token(woosh.OP, '.', 913, 18, 913, 19),
woosh.Token(woosh.NAME, '_drv', 913, 19, 913, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 913, 23, 914, 0),
woosh.Token(woosh.NAME, 'root', 914, 8, 914, 12),
woosh.Token(woosh.OP, '=', 914, 13, 914, 14),
woosh.Token(woosh.NAME, 'self', 914, 15, 914, 19),
woosh.Token(woosh.OP, '.', 914, 19, 914, 20),
woosh.Token(woosh.NAME, '_root', 914, 20, 914, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 914, 25, 915, 0),
woosh.Token(woosh.NAME, 'if', 915, 8, 915, 10),
woosh.Token(woosh.NAME, 'root', 915, 11, 915, 15),
woosh.Token(woosh.OP, ':', 915, 15, 915, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 915, 16, 916, 0),
woosh.Token(woosh.INDENT, '            ', 916, 0, 916, 12),
woosh.Token(woosh.NAME, 'abs_parts', 916, 12, 916, 21),
woosh.Token(woosh.OP, '=', 916, 22, 916, 23),
woosh.Token(woosh.OP, '[', 916, 24, 916, 25),
woosh.Token(woosh.NAME, 'drv', 916, 25, 916, 28),
woosh.Token(woosh.OP, ',', 916, 28, 916, 29),
woosh.Token(woosh.NAME, 'root', 916, 30, 916, 34),
woosh.Token(woosh.OP, ']', 916, 34, 916, 35),
woosh.Token(woosh.OP, '+', 916, 36, 916, 37),
woosh.Token(woosh.NAME, 'parts', 916, 38, 916, 43),
woosh.Token(woosh.OP, '[', 916, 43, 916, 44),
woosh.Token(woosh.NUMBER, '1', 916, 44, 916, 45),
woosh.Token(woosh.OP, ':', 916, 45, 916, 46),
woosh.Token(woosh.OP, ']', 916, 46, 916, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 916, 47, 917, 0),
woosh.Token(woosh.DEDENT, '        ', 917, 0, 917, 8),
woosh.Token(woosh.NAME, 'else', 917, 8, 917, 12),
woosh.Token(woosh.OP, ':', 917, 12, 917, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 917, 13, 918, 0),
woosh.Token(woosh.INDENT, '            ', 918, 0, 918, 12),
woosh.Token(woosh.NAME, 'abs_parts', 918, 12, 918, 21),
woosh.Token(woosh.OP, '=', 918, 22, 918, 23),
woosh.Token(woosh.NAME, 'parts', 918, 24, 918, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 918, 29, 919, 0),
woosh.Token(woosh.DEDENT, '        ', 919, 0, 919, 8),
woosh.Token(woosh.NAME, 'to_drv', 919, 8, 919, 14),
woosh.Token(woosh.OP, ',', 919, 14, 919, 15),
woosh.Token(woosh.NAME, 'to_root', 919, 16, 919, 23),
woosh.Token(woosh.OP, ',', 919, 23, 919, 24),
woosh.Token(woosh.NAME, 'to_parts', 919, 25, 919, 33),
woosh.Token(woosh.OP, '=', 919, 34, 919, 35),
woosh.Token(woosh.NAME, 'self', 919, 36, 919, 40),
woosh.Token(woosh.OP, '.', 919, 40, 919, 41),
woosh.Token(woosh.NAME, '_parse_args', 919, 41, 919, 52),
woosh.Token(woosh.OP, '(', 919, 52, 919, 53),
woosh.Token(woosh.NAME, 'other', 919, 53, 919, 58),
woosh.Token(woosh.OP, ')', 919, 58, 919, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 919, 59, 920, 0),
woosh.Token(woosh.NAME, 'if', 920, 8, 920, 10),
woosh.Token(woosh.NAME, 'to_root', 920, 11, 920, 18),
woosh.Token(woosh.OP, ':', 920, 18, 920, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 920, 19, 921, 0),
woosh.Token(woosh.INDENT, '            ', 921, 0, 921, 12),
woosh.Token(woosh.NAME, 'to_abs_parts', 921, 12, 921, 24),
woosh.Token(woosh.OP, '=', 921, 25, 921, 26),
woosh.Token(woosh.OP, '[', 921, 27, 921, 28),
woosh.Token(woosh.NAME, 'to_drv', 921, 28, 921, 34),
woosh.Token(woosh.OP, ',', 921, 34, 921, 35),
woosh.Token(woosh.NAME, 'to_root', 921, 36, 921, 43),
woosh.Token(woosh.OP, ']', 921, 43, 921, 44),
woosh.Token(woosh.OP, '+', 921, 45, 921, 46),
woosh.Token(woosh.NAME, 'to_parts', 921, 47, 921, 55),
woosh.Token(woosh.OP, '[', 921, 55, 921, 56),
woosh.Token(woosh.NUMBER, '1', 921, 56, 921, 57),
woosh.Token(woosh.OP, ':', 921, 57, 921, 58),
woosh.Token(woosh.OP, ']', 921, 58, 921, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 921, 59, 922, 0),
woosh.Token(woosh.DEDENT, '        ', 922, 0, 922, 8),
woosh.Token(woosh.NAME, 'else', 922, 8, 922, 12),
woosh.Token(woosh.OP, ':', 922, 12, 922, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 922, 13, 923, 0),
woosh.Token(woosh.INDENT, '            ', 923, 0, 923, 12),
woosh.Token(woosh.NAME, 'to_abs_parts', 923, 12, 923, 24),
woosh.Token(woosh.OP, '=', 923, 25, 923, 26),
woosh.Token(woosh.NAME, 'to_parts', 923, 27, 923, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 923, 35, 924, 0),
woosh.Token(woosh.DEDENT, '        ', 924, 0, 924, 8),
woosh.Token(woosh.NAME, 'n', 924, 8, 924, 9),
woosh.Token(woosh.OP, '=', 924, 10, 924, 11),
woosh.Token(woosh.NAME, 'len', 924, 12, 924, 15),
woosh.Token(woosh.OP, '(', 924, 15, 924, 16),
woosh.Token(woosh.NAME, 'to_abs_parts', 924, 16, 924, 28),
woosh.Token(woosh.OP, ')', 924, 28, 924, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 924, 29, 925, 0),
woosh.Token(woosh.NAME, 'cf', 925, 8, 925, 10),
woosh.Token(woosh.OP, '=', 925, 11, 925, 12),
woosh.Token(woosh.NAME, 'self', 925, 13, 925, 17),
woosh.Token(woosh.OP, '.', 925, 17, 925, 18),
woosh.Token(woosh.NAME, '_flavour', 925, 18, 925, 26),
woosh.Token(woosh.OP, '.', 925, 26, 925, 27),
woosh.Token(woosh.NAME, 'casefold_parts', 925, 27, 925, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 41, 926, 0),
woosh.Token(woosh.NAME, 'if', 926, 8, 926, 10),
woosh.Token(woosh.OP, '(', 926, 11, 926, 12),
woosh.Token(woosh.NAME, 'root', 926, 12, 926, 16),
woosh.Token(woosh.NAME, 'or', 926, 17, 926, 19),
woosh.Token(woosh.NAME, 'drv', 926, 20, 926, 23),
woosh.Token(woosh.OP, ')', 926, 23, 926, 24),
woosh.Token(woosh.NAME, 'if', 926, 25, 926, 27),
woosh.Token(woosh.NAME, 'n', 926, 28, 926, 29),
woosh.Token(woosh.OP, '==', 926, 30, 926, 32),
woosh.Token(woosh.NUMBER, '0', 926, 33, 926, 34),
woosh.Token(woosh.NAME, 'else', 926, 35, 926, 39),
woosh.Token(woosh.NAME, 'cf', 926, 40, 926, 42),
woosh.Token(woosh.OP, '(', 926, 42, 926, 43),
woosh.Token(woosh.NAME, 'abs_parts', 926, 43, 926, 52),
woosh.Token(woosh.OP, '[', 926, 52, 926, 53),
woosh.Token(woosh.OP, ':', 926, 53, 926, 54),
woosh.Token(woosh.NAME, 'n', 926, 54, 926, 55),
woosh.Token(woosh.OP, ']', 926, 55, 926, 56),
woosh.Token(woosh.OP, ')', 926, 56, 926, 57),
woosh.Token(woosh.OP, '!=', 926, 58, 926, 60),
woosh.Token(woosh.NAME, 'cf', 926, 61, 926, 63),
woosh.Token(woosh.OP, '(', 926, 63, 926, 64),
woosh.Token(woosh.NAME, 'to_abs_parts', 926, 64, 926, 76),
woosh.Token(woosh.OP, ')', 926, 76, 926, 77),
woosh.Token(woosh.OP, ':', 926, 77, 926, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 926, 78, 927, 0),
woosh.Token(woosh.INDENT, '            ', 927, 0, 927, 12),
woosh.Token(woosh.NAME, 'formatted', 927, 12, 927, 21),
woosh.Token(woosh.OP, '=', 927, 22, 927, 23),
woosh.Token(woosh.NAME, 'self', 927, 24, 927, 28),
woosh.Token(woosh.OP, '.', 927, 28, 927, 29),
woosh.Token(woosh.NAME, '_format_parsed_parts', 927, 29, 927, 49),
woosh.Token(woosh.OP, '(', 927, 49, 927, 50),
woosh.Token(woosh.NAME, 'to_drv', 927, 50, 927, 56),
woosh.Token(woosh.OP, ',', 927, 56, 927, 57),
woosh.Token(woosh.NAME, 'to_root', 927, 58, 927, 65),
woosh.Token(woosh.OP, ',', 927, 65, 927, 66),
woosh.Token(woosh.NAME, 'to_parts', 927, 67, 927, 75),
woosh.Token(woosh.OP, ')', 927, 75, 927, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 76, 928, 0),
woosh.Token(woosh.NAME, 'raise', 928, 12, 928, 17),
woosh.Token(woosh.NAME, 'ValueError', 928, 18, 928, 28),
woosh.Token(woosh.OP, '(', 928, 28, 928, 29),
woosh.Token(woosh.STRING, '"{!r} is not in the subpath of {!r}"', 928, 29, 928, 65),
woosh.Token(woosh.STRING, '" OR one path is relative and the other is absolute."', 929, 20, 929, 73),
woosh.Token(woosh.OP, '.', 930, 29, 930, 30),
woosh.Token(woosh.NAME, 'format', 930, 30, 930, 36),
woosh.Token(woosh.OP, '(', 930, 36, 930, 37),
woosh.Token(woosh.NAME, 'str', 930, 37, 930, 40),
woosh.Token(woosh.OP, '(', 930, 40, 930, 41),
woosh.Token(woosh.NAME, 'self', 930, 41, 930, 45),
woosh.Token(woosh.OP, ')', 930, 45, 930, 46),
woosh.Token(woosh.OP, ',', 930, 46, 930, 47),
woosh.Token(woosh.NAME, 'str', 930, 48, 930, 51),
woosh.Token(woosh.OP, '(', 930, 51, 930, 52),
woosh.Token(woosh.NAME, 'formatted', 930, 52, 930, 61),
woosh.Token(woosh.OP, ')', 930, 61, 930, 62),
woosh.Token(woosh.OP, ')', 930, 62, 930, 63),
woosh.Token(woosh.OP, ')', 930, 63, 930, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 930, 64, 931, 0),
woosh.Token(woosh.DEDENT, '        ', 931, 0, 931, 8),
woosh.Token(woosh.NAME, 'return', 931, 8, 931, 14),
woosh.Token(woosh.NAME, 'self', 931, 15, 931, 19),
woosh.Token(woosh.OP, '.', 931, 19, 931, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 931, 20, 931, 38),
woosh.Token(woosh.OP, '(', 931, 38, 931, 39),
woosh.Token(woosh.STRING, "''", 931, 39, 931, 41),
woosh.Token(woosh.OP, ',', 931, 41, 931, 42),
woosh.Token(woosh.NAME, 'root', 931, 43, 931, 47),
woosh.Token(woosh.NAME, 'if', 931, 48, 931, 50),
woosh.Token(woosh.NAME, 'n', 931, 51, 931, 52),
woosh.Token(woosh.OP, '==', 931, 53, 931, 55),
woosh.Token(woosh.NUMBER, '1', 931, 56, 931, 57),
woosh.Token(woosh.NAME, 'else', 931, 58, 931, 62),
woosh.Token(woosh.STRING, "''", 931, 63, 931, 65),
woosh.Token(woosh.OP, ',', 931, 65, 931, 66),
woosh.Token(woosh.NAME, 'abs_parts', 932, 39, 932, 48),
woosh.Token(woosh.OP, '[', 932, 48, 932, 49),
woosh.Token(woosh.NAME, 'n', 932, 49, 932, 50),
woosh.Token(woosh.OP, ':', 932, 50, 932, 51),
woosh.Token(woosh.OP, ']', 932, 51, 932, 52),
woosh.Token(woosh.OP, ')', 932, 52, 932, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 53, 933, 0),
woosh.Token(woosh.DEDENT, '    ', 934, 0, 934, 4),
woosh.Token(woosh.NAME, 'def', 934, 4, 934, 7),
woosh.Token(woosh.NAME, 'is_relative_to', 934, 8, 934, 22),
woosh.Token(woosh.OP, '(', 934, 22, 934, 23),
woosh.Token(woosh.NAME, 'self', 934, 23, 934, 27),
woosh.Token(woosh.OP, ',', 934, 27, 934, 28),
woosh.Token(woosh.OP, '*', 934, 29, 934, 30),
woosh.Token(woosh.NAME, 'other', 934, 30, 934, 35),
woosh.Token(woosh.OP, ')', 934, 35, 934, 36),
woosh.Token(woosh.OP, ':', 934, 36, 934, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 934, 37, 935, 0),
woosh.Token(woosh.INDENT, '        ', 935, 0, 935, 8),
woosh.Token(woosh.STRING, '"""Return True if the path is relative to another path or False.\r\n        """', 935, 8, 936, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 936, 11, 937, 0),
woosh.Token(woosh.NAME, 'try', 937, 8, 937, 11),
woosh.Token(woosh.OP, ':', 937, 11, 937, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 937, 12, 938, 0),
woosh.Token(woosh.INDENT, '            ', 938, 0, 938, 12),
woosh.Token(woosh.NAME, 'self', 938, 12, 938, 16),
woosh.Token(woosh.OP, '.', 938, 16, 938, 17),
woosh.Token(woosh.NAME, 'relative_to', 938, 17, 938, 28),
woosh.Token(woosh.OP, '(', 938, 28, 938, 29),
woosh.Token(woosh.OP, '*', 938, 29, 938, 30),
woosh.Token(woosh.NAME, 'other', 938, 30, 938, 35),
woosh.Token(woosh.OP, ')', 938, 35, 938, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 36, 939, 0),
woosh.Token(woosh.NAME, 'return', 939, 12, 939, 18),
woosh.Token(woosh.NAME, 'True', 939, 19, 939, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 23, 940, 0),
woosh.Token(woosh.DEDENT, '        ', 940, 0, 940, 8),
woosh.Token(woosh.NAME, 'except', 940, 8, 940, 14),
woosh.Token(woosh.NAME, 'ValueError', 940, 15, 940, 25),
woosh.Token(woosh.OP, ':', 940, 25, 940, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 940, 26, 941, 0),
woosh.Token(woosh.INDENT, '            ', 941, 0, 941, 12),
woosh.Token(woosh.NAME, 'return', 941, 12, 941, 18),
woosh.Token(woosh.NAME, 'False', 941, 19, 941, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 941, 24, 942, 0),
woosh.Token(woosh.DEDENT, '    ', 943, 0, 943, 4),
woosh.Token(woosh.DEDENT, '', 943, 4, 943, 4),
woosh.Token(woosh.OP, '@', 943, 4, 943, 5),
woosh.Token(woosh.NAME, 'property', 943, 5, 943, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 943, 13, 944, 0),
woosh.Token(woosh.NAME, 'def', 944, 4, 944, 7),
woosh.Token(woosh.NAME, 'parts', 944, 8, 944, 13),
woosh.Token(woosh.OP, '(', 944, 13, 944, 14),
woosh.Token(woosh.NAME, 'self', 944, 14, 944, 18),
woosh.Token(woosh.OP, ')', 944, 18, 944, 19),
woosh.Token(woosh.OP, ':', 944, 19, 944, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 20, 945, 0),
woosh.Token(woosh.INDENT, '        ', 945, 0, 945, 8),
woosh.Token(woosh.STRING, '"""An object providing sequence-like access to the\r\n        components in the filesystem path."""', 945, 8, 946, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 946, 45, 947, 0),
woosh.Token(woosh.COMMENT, '# We cache the tuple to avoid building a new one each time .parts', 947, 8, 947, 73),
woosh.Token(woosh.COMMENT, '# is accessed.  XXX is this necessary?', 948, 8, 948, 46),
woosh.Token(woosh.NAME, 'try', 949, 8, 949, 11),
woosh.Token(woosh.OP, ':', 949, 11, 949, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 949, 12, 950, 0),
woosh.Token(woosh.INDENT, '            ', 950, 0, 950, 12),
woosh.Token(woosh.NAME, 'return', 950, 12, 950, 18),
woosh.Token(woosh.NAME, 'self', 950, 19, 950, 23),
woosh.Token(woosh.OP, '.', 950, 23, 950, 24),
woosh.Token(woosh.NAME, '_pparts', 950, 24, 950, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 950, 31, 951, 0),
woosh.Token(woosh.DEDENT, '        ', 951, 0, 951, 8),
woosh.Token(woosh.NAME, 'except', 951, 8, 951, 14),
woosh.Token(woosh.NAME, 'AttributeError', 951, 15, 951, 29),
woosh.Token(woosh.OP, ':', 951, 29, 951, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 30, 952, 0),
woosh.Token(woosh.INDENT, '            ', 952, 0, 952, 12),
woosh.Token(woosh.NAME, 'self', 952, 12, 952, 16),
woosh.Token(woosh.OP, '.', 952, 16, 952, 17),
woosh.Token(woosh.NAME, '_pparts', 952, 17, 952, 24),
woosh.Token(woosh.OP, '=', 952, 25, 952, 26),
woosh.Token(woosh.NAME, 'tuple', 952, 27, 952, 32),
woosh.Token(woosh.OP, '(', 952, 32, 952, 33),
woosh.Token(woosh.NAME, 'self', 952, 33, 952, 37),
woosh.Token(woosh.OP, '.', 952, 37, 952, 38),
woosh.Token(woosh.NAME, '_parts', 952, 38, 952, 44),
woosh.Token(woosh.OP, ')', 952, 44, 952, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 952, 45, 953, 0),
woosh.Token(woosh.NAME, 'return', 953, 12, 953, 18),
woosh.Token(woosh.NAME, 'self', 953, 19, 953, 23),
woosh.Token(woosh.OP, '.', 953, 23, 953, 24),
woosh.Token(woosh.NAME, '_pparts', 953, 24, 953, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 31, 954, 0),
woosh.Token(woosh.DEDENT, '    ', 955, 0, 955, 4),
woosh.Token(woosh.DEDENT, '', 955, 4, 955, 4),
woosh.Token(woosh.NAME, 'def', 955, 4, 955, 7),
woosh.Token(woosh.NAME, 'joinpath', 955, 8, 955, 16),
woosh.Token(woosh.OP, '(', 955, 16, 955, 17),
woosh.Token(woosh.NAME, 'self', 955, 17, 955, 21),
woosh.Token(woosh.OP, ',', 955, 21, 955, 22),
woosh.Token(woosh.OP, '*', 955, 23, 955, 24),
woosh.Token(woosh.NAME, 'args', 955, 24, 955, 28),
woosh.Token(woosh.OP, ')', 955, 28, 955, 29),
woosh.Token(woosh.OP, ':', 955, 29, 955, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 30, 956, 0),
woosh.Token(woosh.INDENT, '        ', 956, 0, 956, 8),
woosh.Token(woosh.STRING, '"""Combine this path with one or several arguments, and return a\r\n        new path representing either a subpath (if all arguments are relative\r\n        paths) or a totally different path (if one of the arguments is\r\n        anchored).\r\n        """', 956, 8, 960, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 11, 961, 0),
woosh.Token(woosh.NAME, 'return', 961, 8, 961, 14),
woosh.Token(woosh.NAME, 'self', 961, 15, 961, 19),
woosh.Token(woosh.OP, '.', 961, 19, 961, 20),
woosh.Token(woosh.NAME, '_make_child', 961, 20, 961, 31),
woosh.Token(woosh.OP, '(', 961, 31, 961, 32),
woosh.Token(woosh.NAME, 'args', 961, 32, 961, 36),
woosh.Token(woosh.OP, ')', 961, 36, 961, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 37, 962, 0),
woosh.Token(woosh.DEDENT, '    ', 963, 0, 963, 4),
woosh.Token(woosh.NAME, 'def', 963, 4, 963, 7),
woosh.Token(woosh.NAME, '__truediv__', 963, 8, 963, 19),
woosh.Token(woosh.OP, '(', 963, 19, 963, 20),
woosh.Token(woosh.NAME, 'self', 963, 20, 963, 24),
woosh.Token(woosh.OP, ',', 963, 24, 963, 25),
woosh.Token(woosh.NAME, 'key', 963, 26, 963, 29),
woosh.Token(woosh.OP, ')', 963, 29, 963, 30),
woosh.Token(woosh.OP, ':', 963, 30, 963, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 963, 31, 964, 0),
woosh.Token(woosh.INDENT, '        ', 964, 0, 964, 8),
woosh.Token(woosh.NAME, 'try', 964, 8, 964, 11),
woosh.Token(woosh.OP, ':', 964, 11, 964, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 964, 12, 965, 0),
woosh.Token(woosh.INDENT, '            ', 965, 0, 965, 12),
woosh.Token(woosh.NAME, 'return', 965, 12, 965, 18),
woosh.Token(woosh.NAME, 'self', 965, 19, 965, 23),
woosh.Token(woosh.OP, '.', 965, 23, 965, 24),
woosh.Token(woosh.NAME, '_make_child', 965, 24, 965, 35),
woosh.Token(woosh.OP, '(', 965, 35, 965, 36),
woosh.Token(woosh.OP, '(', 965, 36, 965, 37),
woosh.Token(woosh.NAME, 'key', 965, 37, 965, 40),
woosh.Token(woosh.OP, ',', 965, 40, 965, 41),
woosh.Token(woosh.OP, ')', 965, 41, 965, 42),
woosh.Token(woosh.OP, ')', 965, 42, 965, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 965, 43, 966, 0),
woosh.Token(woosh.DEDENT, '        ', 966, 0, 966, 8),
woosh.Token(woosh.NAME, 'except', 966, 8, 966, 14),
woosh.Token(woosh.NAME, 'TypeError', 966, 15, 966, 24),
woosh.Token(woosh.OP, ':', 966, 24, 966, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 25, 967, 0),
woosh.Token(woosh.INDENT, '            ', 967, 0, 967, 12),
woosh.Token(woosh.NAME, 'return', 967, 12, 967, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 967, 19, 967, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 967, 33, 968, 0),
woosh.Token(woosh.DEDENT, '    ', 969, 0, 969, 4),
woosh.Token(woosh.DEDENT, '', 969, 4, 969, 4),
woosh.Token(woosh.NAME, 'def', 969, 4, 969, 7),
woosh.Token(woosh.NAME, '__rtruediv__', 969, 8, 969, 20),
woosh.Token(woosh.OP, '(', 969, 20, 969, 21),
woosh.Token(woosh.NAME, 'self', 969, 21, 969, 25),
woosh.Token(woosh.OP, ',', 969, 25, 969, 26),
woosh.Token(woosh.NAME, 'key', 969, 27, 969, 30),
woosh.Token(woosh.OP, ')', 969, 30, 969, 31),
woosh.Token(woosh.OP, ':', 969, 31, 969, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 969, 32, 970, 0),
woosh.Token(woosh.INDENT, '        ', 970, 0, 970, 8),
woosh.Token(woosh.NAME, 'try', 970, 8, 970, 11),
woosh.Token(woosh.OP, ':', 970, 11, 970, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 12, 971, 0),
woosh.Token(woosh.INDENT, '            ', 971, 0, 971, 12),
woosh.Token(woosh.NAME, 'return', 971, 12, 971, 18),
woosh.Token(woosh.NAME, 'self', 971, 19, 971, 23),
woosh.Token(woosh.OP, '.', 971, 23, 971, 24),
woosh.Token(woosh.NAME, '_from_parts', 971, 24, 971, 35),
woosh.Token(woosh.OP, '(', 971, 35, 971, 36),
woosh.Token(woosh.OP, '[', 971, 36, 971, 37),
woosh.Token(woosh.NAME, 'key', 971, 37, 971, 40),
woosh.Token(woosh.OP, ']', 971, 40, 971, 41),
woosh.Token(woosh.OP, '+', 971, 42, 971, 43),
woosh.Token(woosh.NAME, 'self', 971, 44, 971, 48),
woosh.Token(woosh.OP, '.', 971, 48, 971, 49),
woosh.Token(woosh.NAME, '_parts', 971, 49, 971, 55),
woosh.Token(woosh.OP, ')', 971, 55, 971, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 971, 56, 972, 0),
woosh.Token(woosh.DEDENT, '        ', 972, 0, 972, 8),
woosh.Token(woosh.NAME, 'except', 972, 8, 972, 14),
woosh.Token(woosh.NAME, 'TypeError', 972, 15, 972, 24),
woosh.Token(woosh.OP, ':', 972, 24, 972, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 972, 25, 973, 0),
woosh.Token(woosh.INDENT, '            ', 973, 0, 973, 12),
woosh.Token(woosh.NAME, 'return', 973, 12, 973, 18),
woosh.Token(woosh.NAME, 'NotImplemented', 973, 19, 973, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 973, 33, 974, 0),
woosh.Token(woosh.DEDENT, '    ', 975, 0, 975, 4),
woosh.Token(woosh.DEDENT, '', 975, 4, 975, 4),
woosh.Token(woosh.OP, '@', 975, 4, 975, 5),
woosh.Token(woosh.NAME, 'property', 975, 5, 975, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 975, 13, 976, 0),
woosh.Token(woosh.NAME, 'def', 976, 4, 976, 7),
woosh.Token(woosh.NAME, 'parent', 976, 8, 976, 14),
woosh.Token(woosh.OP, '(', 976, 14, 976, 15),
woosh.Token(woosh.NAME, 'self', 976, 15, 976, 19),
woosh.Token(woosh.OP, ')', 976, 19, 976, 20),
woosh.Token(woosh.OP, ':', 976, 20, 976, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 976, 21, 977, 0),
woosh.Token(woosh.INDENT, '        ', 977, 0, 977, 8),
woosh.Token(woosh.STRING, '"""The logical parent of the path."""', 977, 8, 977, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 977, 45, 978, 0),
woosh.Token(woosh.NAME, 'drv', 978, 8, 978, 11),
woosh.Token(woosh.OP, '=', 978, 12, 978, 13),
woosh.Token(woosh.NAME, 'self', 978, 14, 978, 18),
woosh.Token(woosh.OP, '.', 978, 18, 978, 19),
woosh.Token(woosh.NAME, '_drv', 978, 19, 978, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 978, 23, 979, 0),
woosh.Token(woosh.NAME, 'root', 979, 8, 979, 12),
woosh.Token(woosh.OP, '=', 979, 13, 979, 14),
woosh.Token(woosh.NAME, 'self', 979, 15, 979, 19),
woosh.Token(woosh.OP, '.', 979, 19, 979, 20),
woosh.Token(woosh.NAME, '_root', 979, 20, 979, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 979, 25, 980, 0),
woosh.Token(woosh.NAME, 'parts', 980, 8, 980, 13),
woosh.Token(woosh.OP, '=', 980, 14, 980, 15),
woosh.Token(woosh.NAME, 'self', 980, 16, 980, 20),
woosh.Token(woosh.OP, '.', 980, 20, 980, 21),
woosh.Token(woosh.NAME, '_parts', 980, 21, 980, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 980, 27, 981, 0),
woosh.Token(woosh.NAME, 'if', 981, 8, 981, 10),
woosh.Token(woosh.NAME, 'len', 981, 11, 981, 14),
woosh.Token(woosh.OP, '(', 981, 14, 981, 15),
woosh.Token(woosh.NAME, 'parts', 981, 15, 981, 20),
woosh.Token(woosh.OP, ')', 981, 20, 981, 21),
woosh.Token(woosh.OP, '==', 981, 22, 981, 24),
woosh.Token(woosh.NUMBER, '1', 981, 25, 981, 26),
woosh.Token(woosh.NAME, 'and', 981, 27, 981, 30),
woosh.Token(woosh.OP, '(', 981, 31, 981, 32),
woosh.Token(woosh.NAME, 'drv', 981, 32, 981, 35),
woosh.Token(woosh.NAME, 'or', 981, 36, 981, 38),
woosh.Token(woosh.NAME, 'root', 981, 39, 981, 43),
woosh.Token(woosh.OP, ')', 981, 43, 981, 44),
woosh.Token(woosh.OP, ':', 981, 44, 981, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 981, 45, 982, 0),
woosh.Token(woosh.INDENT, '            ', 982, 0, 982, 12),
woosh.Token(woosh.NAME, 'return', 982, 12, 982, 18),
woosh.Token(woosh.NAME, 'self', 982, 19, 982, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 982, 23, 983, 0),
woosh.Token(woosh.DEDENT, '        ', 983, 0, 983, 8),
woosh.Token(woosh.NAME, 'return', 983, 8, 983, 14),
woosh.Token(woosh.NAME, 'self', 983, 15, 983, 19),
woosh.Token(woosh.OP, '.', 983, 19, 983, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 983, 20, 983, 38),
woosh.Token(woosh.OP, '(', 983, 38, 983, 39),
woosh.Token(woosh.NAME, 'drv', 983, 39, 983, 42),
woosh.Token(woosh.OP, ',', 983, 42, 983, 43),
woosh.Token(woosh.NAME, 'root', 983, 44, 983, 48),
woosh.Token(woosh.OP, ',', 983, 48, 983, 49),
woosh.Token(woosh.NAME, 'parts', 983, 50, 983, 55),
woosh.Token(woosh.OP, '[', 983, 55, 983, 56),
woosh.Token(woosh.OP, ':', 983, 56, 983, 57),
woosh.Token(woosh.OP, '-', 983, 57, 983, 58),
woosh.Token(woosh.NUMBER, '1', 983, 58, 983, 59),
woosh.Token(woosh.OP, ']', 983, 59, 983, 60),
woosh.Token(woosh.OP, ')', 983, 60, 983, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 983, 61, 984, 0),
woosh.Token(woosh.DEDENT, '    ', 985, 0, 985, 4),
woosh.Token(woosh.OP, '@', 985, 4, 985, 5),
woosh.Token(woosh.NAME, 'property', 985, 5, 985, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 985, 13, 986, 0),
woosh.Token(woosh.NAME, 'def', 986, 4, 986, 7),
woosh.Token(woosh.NAME, 'parents', 986, 8, 986, 15),
woosh.Token(woosh.OP, '(', 986, 15, 986, 16),
woosh.Token(woosh.NAME, 'self', 986, 16, 986, 20),
woosh.Token(woosh.OP, ')', 986, 20, 986, 21),
woosh.Token(woosh.OP, ':', 986, 21, 986, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 986, 22, 987, 0),
woosh.Token(woosh.INDENT, '        ', 987, 0, 987, 8),
woosh.Token(woosh.STRING, '"""A sequence of this path\'s logical parents."""', 987, 8, 987, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 987, 56, 988, 0),
woosh.Token(woosh.NAME, 'return', 988, 8, 988, 14),
woosh.Token(woosh.NAME, '_PathParents', 988, 15, 988, 27),
woosh.Token(woosh.OP, '(', 988, 27, 988, 28),
woosh.Token(woosh.NAME, 'self', 988, 28, 988, 32),
woosh.Token(woosh.OP, ')', 988, 32, 988, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 988, 33, 989, 0),
woosh.Token(woosh.DEDENT, '    ', 990, 0, 990, 4),
woosh.Token(woosh.NAME, 'def', 990, 4, 990, 7),
woosh.Token(woosh.NAME, 'is_absolute', 990, 8, 990, 19),
woosh.Token(woosh.OP, '(', 990, 19, 990, 20),
woosh.Token(woosh.NAME, 'self', 990, 20, 990, 24),
woosh.Token(woosh.OP, ')', 990, 24, 990, 25),
woosh.Token(woosh.OP, ':', 990, 25, 990, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 990, 26, 991, 0),
woosh.Token(woosh.INDENT, '        ', 991, 0, 991, 8),
woosh.Token(woosh.STRING, '"""True if the path is absolute (has both a root and, if applicable,\r\n        a drive)."""', 991, 8, 992, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 992, 20, 993, 0),
woosh.Token(woosh.NAME, 'if', 993, 8, 993, 10),
woosh.Token(woosh.NAME, 'not', 993, 11, 993, 14),
woosh.Token(woosh.NAME, 'self', 993, 15, 993, 19),
woosh.Token(woosh.OP, '.', 993, 19, 993, 20),
woosh.Token(woosh.NAME, '_root', 993, 20, 993, 25),
woosh.Token(woosh.OP, ':', 993, 25, 993, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 993, 26, 994, 0),
woosh.Token(woosh.INDENT, '            ', 994, 0, 994, 12),
woosh.Token(woosh.NAME, 'return', 994, 12, 994, 18),
woosh.Token(woosh.NAME, 'False', 994, 19, 994, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 994, 24, 995, 0),
woosh.Token(woosh.DEDENT, '        ', 995, 0, 995, 8),
woosh.Token(woosh.NAME, 'return', 995, 8, 995, 14),
woosh.Token(woosh.NAME, 'not', 995, 15, 995, 18),
woosh.Token(woosh.NAME, 'self', 995, 19, 995, 23),
woosh.Token(woosh.OP, '.', 995, 23, 995, 24),
woosh.Token(woosh.NAME, '_flavour', 995, 24, 995, 32),
woosh.Token(woosh.OP, '.', 995, 32, 995, 33),
woosh.Token(woosh.NAME, 'has_drv', 995, 33, 995, 40),
woosh.Token(woosh.NAME, 'or', 995, 41, 995, 43),
woosh.Token(woosh.NAME, 'bool', 995, 44, 995, 48),
woosh.Token(woosh.OP, '(', 995, 48, 995, 49),
woosh.Token(woosh.NAME, 'self', 995, 49, 995, 53),
woosh.Token(woosh.OP, '.', 995, 53, 995, 54),
woosh.Token(woosh.NAME, '_drv', 995, 54, 995, 58),
woosh.Token(woosh.OP, ')', 995, 58, 995, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 995, 59, 996, 0),
woosh.Token(woosh.DEDENT, '    ', 997, 0, 997, 4),
woosh.Token(woosh.NAME, 'def', 997, 4, 997, 7),
woosh.Token(woosh.NAME, 'is_reserved', 997, 8, 997, 19),
woosh.Token(woosh.OP, '(', 997, 19, 997, 20),
woosh.Token(woosh.NAME, 'self', 997, 20, 997, 24),
woosh.Token(woosh.OP, ')', 997, 24, 997, 25),
woosh.Token(woosh.OP, ':', 997, 25, 997, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 997, 26, 998, 0),
woosh.Token(woosh.INDENT, '        ', 998, 0, 998, 8),
woosh.Token(woosh.STRING, '"""Return True if the path contains one of the special names reserved\r\n        by the system, if any."""', 998, 8, 999, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 999, 33, 1000, 0),
woosh.Token(woosh.NAME, 'return', 1000, 8, 1000, 14),
woosh.Token(woosh.NAME, 'self', 1000, 15, 1000, 19),
woosh.Token(woosh.OP, '.', 1000, 19, 1000, 20),
woosh.Token(woosh.NAME, '_flavour', 1000, 20, 1000, 28),
woosh.Token(woosh.OP, '.', 1000, 28, 1000, 29),
woosh.Token(woosh.NAME, 'is_reserved', 1000, 29, 1000, 40),
woosh.Token(woosh.OP, '(', 1000, 40, 1000, 41),
woosh.Token(woosh.NAME, 'self', 1000, 41, 1000, 45),
woosh.Token(woosh.OP, '.', 1000, 45, 1000, 46),
woosh.Token(woosh.NAME, '_parts', 1000, 46, 1000, 52),
woosh.Token(woosh.OP, ')', 1000, 52, 1000, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1000, 53, 1001, 0),
woosh.Token(woosh.DEDENT, '    ', 1002, 0, 1002, 4),
woosh.Token(woosh.NAME, 'def', 1002, 4, 1002, 7),
woosh.Token(woosh.NAME, 'match', 1002, 8, 1002, 13),
woosh.Token(woosh.OP, '(', 1002, 13, 1002, 14),
woosh.Token(woosh.NAME, 'self', 1002, 14, 1002, 18),
woosh.Token(woosh.OP, ',', 1002, 18, 1002, 19),
woosh.Token(woosh.NAME, 'path_pattern', 1002, 20, 1002, 32),
woosh.Token(woosh.OP, ')', 1002, 32, 1002, 33),
woosh.Token(woosh.OP, ':', 1002, 33, 1002, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1002, 34, 1003, 0),
woosh.Token(woosh.INDENT, '        ', 1003, 0, 1003, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return True if this path matches the given pattern.\r\n        """', 1003, 8, 1005, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1005, 11, 1006, 0),
woosh.Token(woosh.NAME, 'cf', 1006, 8, 1006, 10),
woosh.Token(woosh.OP, '=', 1006, 11, 1006, 12),
woosh.Token(woosh.NAME, 'self', 1006, 13, 1006, 17),
woosh.Token(woosh.OP, '.', 1006, 17, 1006, 18),
woosh.Token(woosh.NAME, '_flavour', 1006, 18, 1006, 26),
woosh.Token(woosh.OP, '.', 1006, 26, 1006, 27),
woosh.Token(woosh.NAME, 'casefold', 1006, 27, 1006, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1006, 35, 1007, 0),
woosh.Token(woosh.NAME, 'path_pattern', 1007, 8, 1007, 20),
woosh.Token(woosh.OP, '=', 1007, 21, 1007, 22),
woosh.Token(woosh.NAME, 'cf', 1007, 23, 1007, 25),
woosh.Token(woosh.OP, '(', 1007, 25, 1007, 26),
woosh.Token(woosh.NAME, 'path_pattern', 1007, 26, 1007, 38),
woosh.Token(woosh.OP, ')', 1007, 38, 1007, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1007, 39, 1008, 0),
woosh.Token(woosh.NAME, 'drv', 1008, 8, 1008, 11),
woosh.Token(woosh.OP, ',', 1008, 11, 1008, 12),
woosh.Token(woosh.NAME, 'root', 1008, 13, 1008, 17),
woosh.Token(woosh.OP, ',', 1008, 17, 1008, 18),
woosh.Token(woosh.NAME, 'pat_parts', 1008, 19, 1008, 28),
woosh.Token(woosh.OP, '=', 1008, 29, 1008, 30),
woosh.Token(woosh.NAME, 'self', 1008, 31, 1008, 35),
woosh.Token(woosh.OP, '.', 1008, 35, 1008, 36),
woosh.Token(woosh.NAME, '_flavour', 1008, 36, 1008, 44),
woosh.Token(woosh.OP, '.', 1008, 44, 1008, 45),
woosh.Token(woosh.NAME, 'parse_parts', 1008, 45, 1008, 56),
woosh.Token(woosh.OP, '(', 1008, 56, 1008, 57),
woosh.Token(woosh.OP, '(', 1008, 57, 1008, 58),
woosh.Token(woosh.NAME, 'path_pattern', 1008, 58, 1008, 70),
woosh.Token(woosh.OP, ',', 1008, 70, 1008, 71),
woosh.Token(woosh.OP, ')', 1008, 71, 1008, 72),
woosh.Token(woosh.OP, ')', 1008, 72, 1008, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1008, 73, 1009, 0),
woosh.Token(woosh.NAME, 'if', 1009, 8, 1009, 10),
woosh.Token(woosh.NAME, 'not', 1009, 11, 1009, 14),
woosh.Token(woosh.NAME, 'pat_parts', 1009, 15, 1009, 24),
woosh.Token(woosh.OP, ':', 1009, 24, 1009, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1009, 25, 1010, 0),
woosh.Token(woosh.INDENT, '            ', 1010, 0, 1010, 12),
woosh.Token(woosh.NAME, 'raise', 1010, 12, 1010, 17),
woosh.Token(woosh.NAME, 'ValueError', 1010, 18, 1010, 28),
woosh.Token(woosh.OP, '(', 1010, 28, 1010, 29),
woosh.Token(woosh.STRING, '"empty pattern"', 1010, 29, 1010, 44),
woosh.Token(woosh.OP, ')', 1010, 44, 1010, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1010, 45, 1011, 0),
woosh.Token(woosh.DEDENT, '        ', 1011, 0, 1011, 8),
woosh.Token(woosh.NAME, 'if', 1011, 8, 1011, 10),
woosh.Token(woosh.NAME, 'drv', 1011, 11, 1011, 14),
woosh.Token(woosh.NAME, 'and', 1011, 15, 1011, 18),
woosh.Token(woosh.NAME, 'drv', 1011, 19, 1011, 22),
woosh.Token(woosh.OP, '!=', 1011, 23, 1011, 25),
woosh.Token(woosh.NAME, 'cf', 1011, 26, 1011, 28),
woosh.Token(woosh.OP, '(', 1011, 28, 1011, 29),
woosh.Token(woosh.NAME, 'self', 1011, 29, 1011, 33),
woosh.Token(woosh.OP, '.', 1011, 33, 1011, 34),
woosh.Token(woosh.NAME, '_drv', 1011, 34, 1011, 38),
woosh.Token(woosh.OP, ')', 1011, 38, 1011, 39),
woosh.Token(woosh.OP, ':', 1011, 39, 1011, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1011, 40, 1012, 0),
woosh.Token(woosh.INDENT, '            ', 1012, 0, 1012, 12),
woosh.Token(woosh.NAME, 'return', 1012, 12, 1012, 18),
woosh.Token(woosh.NAME, 'False', 1012, 19, 1012, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1012, 24, 1013, 0),
woosh.Token(woosh.DEDENT, '        ', 1013, 0, 1013, 8),
woosh.Token(woosh.NAME, 'if', 1013, 8, 1013, 10),
woosh.Token(woosh.NAME, 'root', 1013, 11, 1013, 15),
woosh.Token(woosh.NAME, 'and', 1013, 16, 1013, 19),
woosh.Token(woosh.NAME, 'root', 1013, 20, 1013, 24),
woosh.Token(woosh.OP, '!=', 1013, 25, 1013, 27),
woosh.Token(woosh.NAME, 'cf', 1013, 28, 1013, 30),
woosh.Token(woosh.OP, '(', 1013, 30, 1013, 31),
woosh.Token(woosh.NAME, 'self', 1013, 31, 1013, 35),
woosh.Token(woosh.OP, '.', 1013, 35, 1013, 36),
woosh.Token(woosh.NAME, '_root', 1013, 36, 1013, 41),
woosh.Token(woosh.OP, ')', 1013, 41, 1013, 42),
woosh.Token(woosh.OP, ':', 1013, 42, 1013, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1013, 43, 1014, 0),
woosh.Token(woosh.INDENT, '            ', 1014, 0, 1014, 12),
woosh.Token(woosh.NAME, 'return', 1014, 12, 1014, 18),
woosh.Token(woosh.NAME, 'False', 1014, 19, 1014, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1014, 24, 1015, 0),
woosh.Token(woosh.DEDENT, '        ', 1015, 0, 1015, 8),
woosh.Token(woosh.NAME, 'parts', 1015, 8, 1015, 13),
woosh.Token(woosh.OP, '=', 1015, 14, 1015, 15),
woosh.Token(woosh.NAME, 'self', 1015, 16, 1015, 20),
woosh.Token(woosh.OP, '.', 1015, 20, 1015, 21),
woosh.Token(woosh.NAME, '_cparts', 1015, 21, 1015, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1015, 28, 1016, 0),
woosh.Token(woosh.NAME, 'if', 1016, 8, 1016, 10),
woosh.Token(woosh.NAME, 'drv', 1016, 11, 1016, 14),
woosh.Token(woosh.NAME, 'or', 1016, 15, 1016, 17),
woosh.Token(woosh.NAME, 'root', 1016, 18, 1016, 22),
woosh.Token(woosh.OP, ':', 1016, 22, 1016, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 23, 1017, 0),
woosh.Token(woosh.INDENT, '            ', 1017, 0, 1017, 12),
woosh.Token(woosh.NAME, 'if', 1017, 12, 1017, 14),
woosh.Token(woosh.NAME, 'len', 1017, 15, 1017, 18),
woosh.Token(woosh.OP, '(', 1017, 18, 1017, 19),
woosh.Token(woosh.NAME, 'pat_parts', 1017, 19, 1017, 28),
woosh.Token(woosh.OP, ')', 1017, 28, 1017, 29),
woosh.Token(woosh.OP, '!=', 1017, 30, 1017, 32),
woosh.Token(woosh.NAME, 'len', 1017, 33, 1017, 36),
woosh.Token(woosh.OP, '(', 1017, 36, 1017, 37),
woosh.Token(woosh.NAME, 'parts', 1017, 37, 1017, 42),
woosh.Token(woosh.OP, ')', 1017, 42, 1017, 43),
woosh.Token(woosh.OP, ':', 1017, 43, 1017, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1017, 44, 1018, 0),
woosh.Token(woosh.INDENT, '                ', 1018, 0, 1018, 16),
woosh.Token(woosh.NAME, 'return', 1018, 16, 1018, 22),
woosh.Token(woosh.NAME, 'False', 1018, 23, 1018, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1018, 28, 1019, 0),
woosh.Token(woosh.DEDENT, '            ', 1019, 0, 1019, 12),
woosh.Token(woosh.NAME, 'pat_parts', 1019, 12, 1019, 21),
woosh.Token(woosh.OP, '=', 1019, 22, 1019, 23),
woosh.Token(woosh.NAME, 'pat_parts', 1019, 24, 1019, 33),
woosh.Token(woosh.OP, '[', 1019, 33, 1019, 34),
woosh.Token(woosh.NUMBER, '1', 1019, 34, 1019, 35),
woosh.Token(woosh.OP, ':', 1019, 35, 1019, 36),
woosh.Token(woosh.OP, ']', 1019, 36, 1019, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1019, 37, 1020, 0),
woosh.Token(woosh.DEDENT, '        ', 1020, 0, 1020, 8),
woosh.Token(woosh.NAME, 'elif', 1020, 8, 1020, 12),
woosh.Token(woosh.NAME, 'len', 1020, 13, 1020, 16),
woosh.Token(woosh.OP, '(', 1020, 16, 1020, 17),
woosh.Token(woosh.NAME, 'pat_parts', 1020, 17, 1020, 26),
woosh.Token(woosh.OP, ')', 1020, 26, 1020, 27),
woosh.Token(woosh.OP, '>', 1020, 28, 1020, 29),
woosh.Token(woosh.NAME, 'len', 1020, 30, 1020, 33),
woosh.Token(woosh.OP, '(', 1020, 33, 1020, 34),
woosh.Token(woosh.NAME, 'parts', 1020, 34, 1020, 39),
woosh.Token(woosh.OP, ')', 1020, 39, 1020, 40),
woosh.Token(woosh.OP, ':', 1020, 40, 1020, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1020, 41, 1021, 0),
woosh.Token(woosh.INDENT, '            ', 1021, 0, 1021, 12),
woosh.Token(woosh.NAME, 'return', 1021, 12, 1021, 18),
woosh.Token(woosh.NAME, 'False', 1021, 19, 1021, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1021, 24, 1022, 0),
woosh.Token(woosh.DEDENT, '        ', 1022, 0, 1022, 8),
woosh.Token(woosh.NAME, 'for', 1022, 8, 1022, 11),
woosh.Token(woosh.NAME, 'part', 1022, 12, 1022, 16),
woosh.Token(woosh.OP, ',', 1022, 16, 1022, 17),
woosh.Token(woosh.NAME, 'pat', 1022, 18, 1022, 21),
woosh.Token(woosh.NAME, 'in', 1022, 22, 1022, 24),
woosh.Token(woosh.NAME, 'zip', 1022, 25, 1022, 28),
woosh.Token(woosh.OP, '(', 1022, 28, 1022, 29),
woosh.Token(woosh.NAME, 'reversed', 1022, 29, 1022, 37),
woosh.Token(woosh.OP, '(', 1022, 37, 1022, 38),
woosh.Token(woosh.NAME, 'parts', 1022, 38, 1022, 43),
woosh.Token(woosh.OP, ')', 1022, 43, 1022, 44),
woosh.Token(woosh.OP, ',', 1022, 44, 1022, 45),
woosh.Token(woosh.NAME, 'reversed', 1022, 46, 1022, 54),
woosh.Token(woosh.OP, '(', 1022, 54, 1022, 55),
woosh.Token(woosh.NAME, 'pat_parts', 1022, 55, 1022, 64),
woosh.Token(woosh.OP, ')', 1022, 64, 1022, 65),
woosh.Token(woosh.OP, ')', 1022, 65, 1022, 66),
woosh.Token(woosh.OP, ':', 1022, 66, 1022, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1022, 67, 1023, 0),
woosh.Token(woosh.INDENT, '            ', 1023, 0, 1023, 12),
woosh.Token(woosh.NAME, 'if', 1023, 12, 1023, 14),
woosh.Token(woosh.NAME, 'not', 1023, 15, 1023, 18),
woosh.Token(woosh.NAME, 'fnmatch', 1023, 19, 1023, 26),
woosh.Token(woosh.OP, '.', 1023, 26, 1023, 27),
woosh.Token(woosh.NAME, 'fnmatchcase', 1023, 27, 1023, 38),
woosh.Token(woosh.OP, '(', 1023, 38, 1023, 39),
woosh.Token(woosh.NAME, 'part', 1023, 39, 1023, 43),
woosh.Token(woosh.OP, ',', 1023, 43, 1023, 44),
woosh.Token(woosh.NAME, 'pat', 1023, 45, 1023, 48),
woosh.Token(woosh.OP, ')', 1023, 48, 1023, 49),
woosh.Token(woosh.OP, ':', 1023, 49, 1023, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1023, 50, 1024, 0),
woosh.Token(woosh.INDENT, '                ', 1024, 0, 1024, 16),
woosh.Token(woosh.NAME, 'return', 1024, 16, 1024, 22),
woosh.Token(woosh.NAME, 'False', 1024, 23, 1024, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1024, 28, 1025, 0),
woosh.Token(woosh.DEDENT, '        ', 1025, 0, 1025, 8),
woosh.Token(woosh.DEDENT, '', 1025, 8, 1025, 8),
woosh.Token(woosh.NAME, 'return', 1025, 8, 1025, 14),
woosh.Token(woosh.NAME, 'True', 1025, 15, 1025, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1025, 19, 1026, 0),
woosh.Token(woosh.COMMENT, "# Can't subclass os.PathLike from PurePath and keep the constructor", 1027, 0, 1027, 67),
woosh.Token(woosh.COMMENT, '# optimizations in PurePath._parse_args().', 1028, 0, 1028, 42),
woosh.Token(woosh.DEDENT, '', 1029, 0, 1029, 0),
woosh.Token(woosh.DEDENT, '', 1029, 0, 1029, 0),
woosh.Token(woosh.NAME, 'os', 1029, 0, 1029, 2),
woosh.Token(woosh.OP, '.', 1029, 2, 1029, 3),
woosh.Token(woosh.NAME, 'PathLike', 1029, 3, 1029, 11),
woosh.Token(woosh.OP, '.', 1029, 11, 1029, 12),
woosh.Token(woosh.NAME, 'register', 1029, 12, 1029, 20),
woosh.Token(woosh.OP, '(', 1029, 20, 1029, 21),
woosh.Token(woosh.NAME, 'PurePath', 1029, 21, 1029, 29),
woosh.Token(woosh.OP, ')', 1029, 29, 1029, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1029, 30, 1030, 0),
woosh.Token(woosh.NAME, 'class', 1032, 0, 1032, 5),
woosh.Token(woosh.NAME, 'PurePosixPath', 1032, 6, 1032, 19),
woosh.Token(woosh.OP, '(', 1032, 19, 1032, 20),
woosh.Token(woosh.NAME, 'PurePath', 1032, 20, 1032, 28),
woosh.Token(woosh.OP, ')', 1032, 28, 1032, 29),
woosh.Token(woosh.OP, ':', 1032, 29, 1032, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1032, 30, 1033, 0),
woosh.Token(woosh.INDENT, '    ', 1033, 0, 1033, 4),
woosh.Token(woosh.STRING, '"""PurePath subclass for non-Windows systems.\r\n\r\n    On a POSIX system, instantiating a PurePath should return this object.\r\n    However, you can also instantiate it directly on any system.\r\n    """', 1033, 4, 1037, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1037, 7, 1038, 0),
woosh.Token(woosh.NAME, '_flavour', 1038, 4, 1038, 12),
woosh.Token(woosh.OP, '=', 1038, 13, 1038, 14),
woosh.Token(woosh.NAME, '_posix_flavour', 1038, 15, 1038, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1038, 29, 1039, 0),
woosh.Token(woosh.NAME, '__slots__', 1039, 4, 1039, 13),
woosh.Token(woosh.OP, '=', 1039, 14, 1039, 15),
woosh.Token(woosh.OP, '(', 1039, 16, 1039, 17),
woosh.Token(woosh.OP, ')', 1039, 17, 1039, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1039, 18, 1040, 0),
woosh.Token(woosh.DEDENT, '', 1042, 0, 1042, 0),
woosh.Token(woosh.NAME, 'class', 1042, 0, 1042, 5),
woosh.Token(woosh.NAME, 'PureWindowsPath', 1042, 6, 1042, 21),
woosh.Token(woosh.OP, '(', 1042, 21, 1042, 22),
woosh.Token(woosh.NAME, 'PurePath', 1042, 22, 1042, 30),
woosh.Token(woosh.OP, ')', 1042, 30, 1042, 31),
woosh.Token(woosh.OP, ':', 1042, 31, 1042, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1042, 32, 1043, 0),
woosh.Token(woosh.INDENT, '    ', 1043, 0, 1043, 4),
woosh.Token(woosh.STRING, '"""PurePath subclass for Windows systems.\r\n\r\n    On a Windows system, instantiating a PurePath should return this object.\r\n    However, you can also instantiate it directly on any system.\r\n    """', 1043, 4, 1047, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 7, 1048, 0),
woosh.Token(woosh.NAME, '_flavour', 1048, 4, 1048, 12),
woosh.Token(woosh.OP, '=', 1048, 13, 1048, 14),
woosh.Token(woosh.NAME, '_windows_flavour', 1048, 15, 1048, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1048, 31, 1049, 0),
woosh.Token(woosh.NAME, '__slots__', 1049, 4, 1049, 13),
woosh.Token(woosh.OP, '=', 1049, 14, 1049, 15),
woosh.Token(woosh.OP, '(', 1049, 16, 1049, 17),
woosh.Token(woosh.OP, ')', 1049, 17, 1049, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1049, 18, 1050, 0),
woosh.Token(woosh.COMMENT, '# Filesystem-accessing classes', 1052, 0, 1052, 30),
woosh.Token(woosh.DEDENT, '', 1055, 0, 1055, 0),
woosh.Token(woosh.NAME, 'class', 1055, 0, 1055, 5),
woosh.Token(woosh.NAME, 'Path', 1055, 6, 1055, 10),
woosh.Token(woosh.OP, '(', 1055, 10, 1055, 11),
woosh.Token(woosh.NAME, 'PurePath', 1055, 11, 1055, 19),
woosh.Token(woosh.OP, ')', 1055, 19, 1055, 20),
woosh.Token(woosh.OP, ':', 1055, 20, 1055, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1055, 21, 1056, 0),
woosh.Token(woosh.INDENT, '    ', 1056, 0, 1056, 4),
woosh.Token(woosh.STRING, '"""PurePath subclass that can make system calls.\r\n\r\n    Path represents a filesystem path but unlike PurePath, also offers\r\n    methods to do system calls on path objects. Depending on your system,\r\n    instantiating a Path will return either a PosixPath or a WindowsPath\r\n    object. You can also instantiate a PosixPath or WindowsPath directly,\r\n    but cannot instantiate a WindowsPath on a POSIX system or vice versa.\r\n    """', 1056, 4, 1063, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1063, 7, 1064, 0),
woosh.Token(woosh.NAME, '__slots__', 1064, 4, 1064, 13),
woosh.Token(woosh.OP, '=', 1064, 14, 1064, 15),
woosh.Token(woosh.OP, '(', 1064, 16, 1064, 17),
woosh.Token(woosh.STRING, "'_accessor'", 1065, 8, 1065, 19),
woosh.Token(woosh.OP, ',', 1065, 19, 1065, 20),
woosh.Token(woosh.OP, ')', 1066, 4, 1066, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 1066, 5, 1067, 0),
woosh.Token(woosh.NAME, 'def', 1068, 4, 1068, 7),
woosh.Token(woosh.NAME, '__new__', 1068, 8, 1068, 15),
woosh.Token(woosh.OP, '(', 1068, 15, 1068, 16),
woosh.Token(woosh.NAME, 'cls', 1068, 16, 1068, 19),
woosh.Token(woosh.OP, ',', 1068, 19, 1068, 20),
woosh.Token(woosh.OP, '*', 1068, 21, 1068, 22),
woosh.Token(woosh.NAME, 'args', 1068, 22, 1068, 26),
woosh.Token(woosh.OP, ',', 1068, 26, 1068, 27),
woosh.Token(woosh.OP, '**', 1068, 28, 1068, 30),
woosh.Token(woosh.NAME, 'kwargs', 1068, 30, 1068, 36),
woosh.Token(woosh.OP, ')', 1068, 36, 1068, 37),
woosh.Token(woosh.OP, ':', 1068, 37, 1068, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1068, 38, 1069, 0),
woosh.Token(woosh.INDENT, '        ', 1069, 0, 1069, 8),
woosh.Token(woosh.NAME, 'if', 1069, 8, 1069, 10),
woosh.Token(woosh.NAME, 'cls', 1069, 11, 1069, 14),
woosh.Token(woosh.NAME, 'is', 1069, 15, 1069, 17),
woosh.Token(woosh.NAME, 'Path', 1069, 18, 1069, 22),
woosh.Token(woosh.OP, ':', 1069, 22, 1069, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1069, 23, 1070, 0),
woosh.Token(woosh.INDENT, '            ', 1070, 0, 1070, 12),
woosh.Token(woosh.NAME, 'cls', 1070, 12, 1070, 15),
woosh.Token(woosh.OP, '=', 1070, 16, 1070, 17),
woosh.Token(woosh.NAME, 'WindowsPath', 1070, 18, 1070, 29),
woosh.Token(woosh.NAME, 'if', 1070, 30, 1070, 32),
woosh.Token(woosh.NAME, 'os', 1070, 33, 1070, 35),
woosh.Token(woosh.OP, '.', 1070, 35, 1070, 36),
woosh.Token(woosh.NAME, 'name', 1070, 36, 1070, 40),
woosh.Token(woosh.OP, '==', 1070, 41, 1070, 43),
woosh.Token(woosh.STRING, "'nt'", 1070, 44, 1070, 48),
woosh.Token(woosh.NAME, 'else', 1070, 49, 1070, 53),
woosh.Token(woosh.NAME, 'PosixPath', 1070, 54, 1070, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1070, 63, 1071, 0),
woosh.Token(woosh.DEDENT, '        ', 1071, 0, 1071, 8),
woosh.Token(woosh.NAME, 'self', 1071, 8, 1071, 12),
woosh.Token(woosh.OP, '=', 1071, 13, 1071, 14),
woosh.Token(woosh.NAME, 'cls', 1071, 15, 1071, 18),
woosh.Token(woosh.OP, '.', 1071, 18, 1071, 19),
woosh.Token(woosh.NAME, '_from_parts', 1071, 19, 1071, 30),
woosh.Token(woosh.OP, '(', 1071, 30, 1071, 31),
woosh.Token(woosh.NAME, 'args', 1071, 31, 1071, 35),
woosh.Token(woosh.OP, ',', 1071, 35, 1071, 36),
woosh.Token(woosh.NAME, 'init', 1071, 37, 1071, 41),
woosh.Token(woosh.OP, '=', 1071, 41, 1071, 42),
woosh.Token(woosh.NAME, 'False', 1071, 42, 1071, 47),
woosh.Token(woosh.OP, ')', 1071, 47, 1071, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1071, 48, 1072, 0),
woosh.Token(woosh.NAME, 'if', 1072, 8, 1072, 10),
woosh.Token(woosh.NAME, 'not', 1072, 11, 1072, 14),
woosh.Token(woosh.NAME, 'self', 1072, 15, 1072, 19),
woosh.Token(woosh.OP, '.', 1072, 19, 1072, 20),
woosh.Token(woosh.NAME, '_flavour', 1072, 20, 1072, 28),
woosh.Token(woosh.OP, '.', 1072, 28, 1072, 29),
woosh.Token(woosh.NAME, 'is_supported', 1072, 29, 1072, 41),
woosh.Token(woosh.OP, ':', 1072, 41, 1072, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1072, 42, 1073, 0),
woosh.Token(woosh.INDENT, '            ', 1073, 0, 1073, 12),
woosh.Token(woosh.NAME, 'raise', 1073, 12, 1073, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 1073, 18, 1073, 37),
woosh.Token(woosh.OP, '(', 1073, 37, 1073, 38),
woosh.Token(woosh.STRING, '"cannot instantiate %r on your system"', 1073, 38, 1073, 76),
woosh.Token(woosh.OP, '%', 1074, 38, 1074, 39),
woosh.Token(woosh.OP, '(', 1074, 40, 1074, 41),
woosh.Token(woosh.NAME, 'cls', 1074, 41, 1074, 44),
woosh.Token(woosh.OP, '.', 1074, 44, 1074, 45),
woosh.Token(woosh.NAME, '__name__', 1074, 45, 1074, 53),
woosh.Token(woosh.OP, ',', 1074, 53, 1074, 54),
woosh.Token(woosh.OP, ')', 1074, 54, 1074, 55),
woosh.Token(woosh.OP, ')', 1074, 55, 1074, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 56, 1075, 0),
woosh.Token(woosh.DEDENT, '        ', 1075, 0, 1075, 8),
woosh.Token(woosh.NAME, 'self', 1075, 8, 1075, 12),
woosh.Token(woosh.OP, '.', 1075, 12, 1075, 13),
woosh.Token(woosh.NAME, '_init', 1075, 13, 1075, 18),
woosh.Token(woosh.OP, '(', 1075, 18, 1075, 19),
woosh.Token(woosh.OP, ')', 1075, 19, 1075, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1075, 20, 1076, 0),
woosh.Token(woosh.NAME, 'return', 1076, 8, 1076, 14),
woosh.Token(woosh.NAME, 'self', 1076, 15, 1076, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1076, 19, 1077, 0),
woosh.Token(woosh.DEDENT, '    ', 1078, 0, 1078, 4),
woosh.Token(woosh.NAME, 'def', 1078, 4, 1078, 7),
woosh.Token(woosh.NAME, '_init', 1078, 8, 1078, 13),
woosh.Token(woosh.OP, '(', 1078, 13, 1078, 14),
woosh.Token(woosh.NAME, 'self', 1078, 14, 1078, 18),
woosh.Token(woosh.OP, ',', 1078, 18, 1078, 19),
woosh.Token(woosh.COMMENT, '# Private non-constructor arguments', 1079, 14, 1079, 49),
woosh.Token(woosh.NAME, 'template', 1080, 14, 1080, 22),
woosh.Token(woosh.OP, '=', 1080, 22, 1080, 23),
woosh.Token(woosh.NAME, 'None', 1080, 23, 1080, 27),
woosh.Token(woosh.OP, ',', 1080, 27, 1080, 28),
woosh.Token(woosh.OP, ')', 1081, 14, 1081, 15),
woosh.Token(woosh.OP, ':', 1081, 15, 1081, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1081, 16, 1082, 0),
woosh.Token(woosh.INDENT, '        ', 1082, 0, 1082, 8),
woosh.Token(woosh.NAME, 'if', 1082, 8, 1082, 10),
woosh.Token(woosh.NAME, 'template', 1082, 11, 1082, 19),
woosh.Token(woosh.NAME, 'is', 1082, 20, 1082, 22),
woosh.Token(woosh.NAME, 'not', 1082, 23, 1082, 26),
woosh.Token(woosh.NAME, 'None', 1082, 27, 1082, 31),
woosh.Token(woosh.OP, ':', 1082, 31, 1082, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1082, 32, 1083, 0),
woosh.Token(woosh.INDENT, '            ', 1083, 0, 1083, 12),
woosh.Token(woosh.NAME, 'self', 1083, 12, 1083, 16),
woosh.Token(woosh.OP, '.', 1083, 16, 1083, 17),
woosh.Token(woosh.NAME, '_accessor', 1083, 17, 1083, 26),
woosh.Token(woosh.OP, '=', 1083, 27, 1083, 28),
woosh.Token(woosh.NAME, 'template', 1083, 29, 1083, 37),
woosh.Token(woosh.OP, '.', 1083, 37, 1083, 38),
woosh.Token(woosh.NAME, '_accessor', 1083, 38, 1083, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1083, 47, 1084, 0),
woosh.Token(woosh.DEDENT, '        ', 1084, 0, 1084, 8),
woosh.Token(woosh.NAME, 'else', 1084, 8, 1084, 12),
woosh.Token(woosh.OP, ':', 1084, 12, 1084, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1084, 13, 1085, 0),
woosh.Token(woosh.INDENT, '            ', 1085, 0, 1085, 12),
woosh.Token(woosh.NAME, 'self', 1085, 12, 1085, 16),
woosh.Token(woosh.OP, '.', 1085, 16, 1085, 17),
woosh.Token(woosh.NAME, '_accessor', 1085, 17, 1085, 26),
woosh.Token(woosh.OP, '=', 1085, 27, 1085, 28),
woosh.Token(woosh.NAME, '_normal_accessor', 1085, 29, 1085, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1085, 45, 1086, 0),
woosh.Token(woosh.DEDENT, '    ', 1087, 0, 1087, 4),
woosh.Token(woosh.DEDENT, '', 1087, 4, 1087, 4),
woosh.Token(woosh.NAME, 'def', 1087, 4, 1087, 7),
woosh.Token(woosh.NAME, '_make_child_relpath', 1087, 8, 1087, 27),
woosh.Token(woosh.OP, '(', 1087, 27, 1087, 28),
woosh.Token(woosh.NAME, 'self', 1087, 28, 1087, 32),
woosh.Token(woosh.OP, ',', 1087, 32, 1087, 33),
woosh.Token(woosh.NAME, 'part', 1087, 34, 1087, 38),
woosh.Token(woosh.OP, ')', 1087, 38, 1087, 39),
woosh.Token(woosh.OP, ':', 1087, 39, 1087, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1087, 40, 1088, 0),
woosh.Token(woosh.COMMENT, '# This is an optimization used for dir walking.  `part` must be', 1088, 8, 1088, 71),
woosh.Token(woosh.COMMENT, '# a single part relative to this path.', 1089, 8, 1089, 46),
woosh.Token(woosh.INDENT, '        ', 1090, 0, 1090, 8),
woosh.Token(woosh.NAME, 'parts', 1090, 8, 1090, 13),
woosh.Token(woosh.OP, '=', 1090, 14, 1090, 15),
woosh.Token(woosh.NAME, 'self', 1090, 16, 1090, 20),
woosh.Token(woosh.OP, '.', 1090, 20, 1090, 21),
woosh.Token(woosh.NAME, '_parts', 1090, 21, 1090, 27),
woosh.Token(woosh.OP, '+', 1090, 28, 1090, 29),
woosh.Token(woosh.OP, '[', 1090, 30, 1090, 31),
woosh.Token(woosh.NAME, 'part', 1090, 31, 1090, 35),
woosh.Token(woosh.OP, ']', 1090, 35, 1090, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1090, 36, 1091, 0),
woosh.Token(woosh.NAME, 'return', 1091, 8, 1091, 14),
woosh.Token(woosh.NAME, 'self', 1091, 15, 1091, 19),
woosh.Token(woosh.OP, '.', 1091, 19, 1091, 20),
woosh.Token(woosh.NAME, '_from_parsed_parts', 1091, 20, 1091, 38),
woosh.Token(woosh.OP, '(', 1091, 38, 1091, 39),
woosh.Token(woosh.NAME, 'self', 1091, 39, 1091, 43),
woosh.Token(woosh.OP, '.', 1091, 43, 1091, 44),
woosh.Token(woosh.NAME, '_drv', 1091, 44, 1091, 48),
woosh.Token(woosh.OP, ',', 1091, 48, 1091, 49),
woosh.Token(woosh.NAME, 'self', 1091, 50, 1091, 54),
woosh.Token(woosh.OP, '.', 1091, 54, 1091, 55),
woosh.Token(woosh.NAME, '_root', 1091, 55, 1091, 60),
woosh.Token(woosh.OP, ',', 1091, 60, 1091, 61),
woosh.Token(woosh.NAME, 'parts', 1091, 62, 1091, 67),
woosh.Token(woosh.OP, ')', 1091, 67, 1091, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1091, 68, 1092, 0),
woosh.Token(woosh.DEDENT, '    ', 1093, 0, 1093, 4),
woosh.Token(woosh.NAME, 'def', 1093, 4, 1093, 7),
woosh.Token(woosh.NAME, '__enter__', 1093, 8, 1093, 17),
woosh.Token(woosh.OP, '(', 1093, 17, 1093, 18),
woosh.Token(woosh.NAME, 'self', 1093, 18, 1093, 22),
woosh.Token(woosh.OP, ')', 1093, 22, 1093, 23),
woosh.Token(woosh.OP, ':', 1093, 23, 1093, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1093, 24, 1094, 0),
woosh.Token(woosh.INDENT, '        ', 1094, 0, 1094, 8),
woosh.Token(woosh.NAME, 'return', 1094, 8, 1094, 14),
woosh.Token(woosh.NAME, 'self', 1094, 15, 1094, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1094, 19, 1095, 0),
woosh.Token(woosh.DEDENT, '    ', 1096, 0, 1096, 4),
woosh.Token(woosh.NAME, 'def', 1096, 4, 1096, 7),
woosh.Token(woosh.NAME, '__exit__', 1096, 8, 1096, 16),
woosh.Token(woosh.OP, '(', 1096, 16, 1096, 17),
woosh.Token(woosh.NAME, 'self', 1096, 17, 1096, 21),
woosh.Token(woosh.OP, ',', 1096, 21, 1096, 22),
woosh.Token(woosh.NAME, 't', 1096, 23, 1096, 24),
woosh.Token(woosh.OP, ',', 1096, 24, 1096, 25),
woosh.Token(woosh.NAME, 'v', 1096, 26, 1096, 27),
woosh.Token(woosh.OP, ',', 1096, 27, 1096, 28),
woosh.Token(woosh.NAME, 'tb', 1096, 29, 1096, 31),
woosh.Token(woosh.OP, ')', 1096, 31, 1096, 32),
woosh.Token(woosh.OP, ':', 1096, 32, 1096, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1096, 33, 1097, 0),
woosh.Token(woosh.COMMENT, '# https://bugs.python.org/issue39682', 1097, 8, 1097, 44),
woosh.Token(woosh.COMMENT, '# In previous versions of pathlib, this method marked this path as', 1098, 8, 1098, 74),
woosh.Token(woosh.COMMENT, '# closed; subsequent attempts to perform I/O would raise an IOError.', 1099, 8, 1099, 76),
woosh.Token(woosh.COMMENT, '# This functionality was never documented, and had the effect of', 1100, 8, 1100, 72),
woosh.Token(woosh.COMMENT, '# making Path objects mutable, contrary to PEP 428. In Python 3.9 the', 1101, 8, 1101, 77),
woosh.Token(woosh.COMMENT, '# _closed attribute was removed, and this method made a no-op.', 1102, 8, 1102, 70),
woosh.Token(woosh.COMMENT, '# This method and __enter__()/__exit__() should be deprecated and', 1103, 8, 1103, 73),
woosh.Token(woosh.COMMENT, '# removed in the future.', 1104, 8, 1104, 32),
woosh.Token(woosh.INDENT, '        ', 1105, 0, 1105, 8),
woosh.Token(woosh.NAME, 'pass', 1105, 8, 1105, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1105, 12, 1106, 0),
woosh.Token(woosh.DEDENT, '    ', 1107, 0, 1107, 4),
woosh.Token(woosh.NAME, 'def', 1107, 4, 1107, 7),
woosh.Token(woosh.NAME, '_opener', 1107, 8, 1107, 15),
woosh.Token(woosh.OP, '(', 1107, 15, 1107, 16),
woosh.Token(woosh.NAME, 'self', 1107, 16, 1107, 20),
woosh.Token(woosh.OP, ',', 1107, 20, 1107, 21),
woosh.Token(woosh.NAME, 'name', 1107, 22, 1107, 26),
woosh.Token(woosh.OP, ',', 1107, 26, 1107, 27),
woosh.Token(woosh.NAME, 'flags', 1107, 28, 1107, 33),
woosh.Token(woosh.OP, ',', 1107, 33, 1107, 34),
woosh.Token(woosh.NAME, 'mode', 1107, 35, 1107, 39),
woosh.Token(woosh.OP, '=', 1107, 39, 1107, 40),
woosh.Token(woosh.NUMBER, '0o666', 1107, 40, 1107, 45),
woosh.Token(woosh.OP, ')', 1107, 45, 1107, 46),
woosh.Token(woosh.OP, ':', 1107, 46, 1107, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1107, 47, 1108, 0),
woosh.Token(woosh.COMMENT, '# A stub for the opener argument to built-in open()', 1108, 8, 1108, 59),
woosh.Token(woosh.INDENT, '        ', 1109, 0, 1109, 8),
woosh.Token(woosh.NAME, 'return', 1109, 8, 1109, 14),
woosh.Token(woosh.NAME, 'self', 1109, 15, 1109, 19),
woosh.Token(woosh.OP, '.', 1109, 19, 1109, 20),
woosh.Token(woosh.NAME, '_accessor', 1109, 20, 1109, 29),
woosh.Token(woosh.OP, '.', 1109, 29, 1109, 30),
woosh.Token(woosh.NAME, 'open', 1109, 30, 1109, 34),
woosh.Token(woosh.OP, '(', 1109, 34, 1109, 35),
woosh.Token(woosh.NAME, 'self', 1109, 35, 1109, 39),
woosh.Token(woosh.OP, ',', 1109, 39, 1109, 40),
woosh.Token(woosh.NAME, 'flags', 1109, 41, 1109, 46),
woosh.Token(woosh.OP, ',', 1109, 46, 1109, 47),
woosh.Token(woosh.NAME, 'mode', 1109, 48, 1109, 52),
woosh.Token(woosh.OP, ')', 1109, 52, 1109, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1109, 53, 1110, 0),
woosh.Token(woosh.DEDENT, '    ', 1111, 0, 1111, 4),
woosh.Token(woosh.NAME, 'def', 1111, 4, 1111, 7),
woosh.Token(woosh.NAME, '_raw_open', 1111, 8, 1111, 17),
woosh.Token(woosh.OP, '(', 1111, 17, 1111, 18),
woosh.Token(woosh.NAME, 'self', 1111, 18, 1111, 22),
woosh.Token(woosh.OP, ',', 1111, 22, 1111, 23),
woosh.Token(woosh.NAME, 'flags', 1111, 24, 1111, 29),
woosh.Token(woosh.OP, ',', 1111, 29, 1111, 30),
woosh.Token(woosh.NAME, 'mode', 1111, 31, 1111, 35),
woosh.Token(woosh.OP, '=', 1111, 35, 1111, 36),
woosh.Token(woosh.NUMBER, '0o777', 1111, 36, 1111, 41),
woosh.Token(woosh.OP, ')', 1111, 41, 1111, 42),
woosh.Token(woosh.OP, ':', 1111, 42, 1111, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1111, 43, 1112, 0),
woosh.Token(woosh.INDENT, '        ', 1112, 0, 1112, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file pointed by this path and return a file descriptor,\r\n        as os.open() does.\r\n        """', 1112, 8, 1115, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1115, 11, 1116, 0),
woosh.Token(woosh.NAME, 'return', 1116, 8, 1116, 14),
woosh.Token(woosh.NAME, 'self', 1116, 15, 1116, 19),
woosh.Token(woosh.OP, '.', 1116, 19, 1116, 20),
woosh.Token(woosh.NAME, '_accessor', 1116, 20, 1116, 29),
woosh.Token(woosh.OP, '.', 1116, 29, 1116, 30),
woosh.Token(woosh.NAME, 'open', 1116, 30, 1116, 34),
woosh.Token(woosh.OP, '(', 1116, 34, 1116, 35),
woosh.Token(woosh.NAME, 'self', 1116, 35, 1116, 39),
woosh.Token(woosh.OP, ',', 1116, 39, 1116, 40),
woosh.Token(woosh.NAME, 'flags', 1116, 41, 1116, 46),
woosh.Token(woosh.OP, ',', 1116, 46, 1116, 47),
woosh.Token(woosh.NAME, 'mode', 1116, 48, 1116, 52),
woosh.Token(woosh.OP, ')', 1116, 52, 1116, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1116, 53, 1117, 0),
woosh.Token(woosh.COMMENT, '# Public API', 1118, 4, 1118, 16),
woosh.Token(woosh.DEDENT, '    ', 1120, 0, 1120, 4),
woosh.Token(woosh.OP, '@', 1120, 4, 1120, 5),
woosh.Token(woosh.NAME, 'classmethod', 1120, 5, 1120, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1120, 16, 1121, 0),
woosh.Token(woosh.NAME, 'def', 1121, 4, 1121, 7),
woosh.Token(woosh.NAME, 'cwd', 1121, 8, 1121, 11),
woosh.Token(woosh.OP, '(', 1121, 11, 1121, 12),
woosh.Token(woosh.NAME, 'cls', 1121, 12, 1121, 15),
woosh.Token(woosh.OP, ')', 1121, 15, 1121, 16),
woosh.Token(woosh.OP, ':', 1121, 16, 1121, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1121, 17, 1122, 0),
woosh.Token(woosh.INDENT, '        ', 1122, 0, 1122, 8),
woosh.Token(woosh.STRING, '"""Return a new path pointing to the current working directory\r\n        (as returned by os.getcwd()).\r\n        """', 1122, 8, 1124, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1124, 11, 1125, 0),
woosh.Token(woosh.NAME, 'return', 1125, 8, 1125, 14),
woosh.Token(woosh.NAME, 'cls', 1125, 15, 1125, 18),
woosh.Token(woosh.OP, '(', 1125, 18, 1125, 19),
woosh.Token(woosh.NAME, 'os', 1125, 19, 1125, 21),
woosh.Token(woosh.OP, '.', 1125, 21, 1125, 22),
woosh.Token(woosh.NAME, 'getcwd', 1125, 22, 1125, 28),
woosh.Token(woosh.OP, '(', 1125, 28, 1125, 29),
woosh.Token(woosh.OP, ')', 1125, 29, 1125, 30),
woosh.Token(woosh.OP, ')', 1125, 30, 1125, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1125, 31, 1126, 0),
woosh.Token(woosh.DEDENT, '    ', 1127, 0, 1127, 4),
woosh.Token(woosh.OP, '@', 1127, 4, 1127, 5),
woosh.Token(woosh.NAME, 'classmethod', 1127, 5, 1127, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1127, 16, 1128, 0),
woosh.Token(woosh.NAME, 'def', 1128, 4, 1128, 7),
woosh.Token(woosh.NAME, 'home', 1128, 8, 1128, 12),
woosh.Token(woosh.OP, '(', 1128, 12, 1128, 13),
woosh.Token(woosh.NAME, 'cls', 1128, 13, 1128, 16),
woosh.Token(woosh.OP, ')', 1128, 16, 1128, 17),
woosh.Token(woosh.OP, ':', 1128, 17, 1128, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1128, 18, 1129, 0),
woosh.Token(woosh.INDENT, '        ', 1129, 0, 1129, 8),
woosh.Token(woosh.STRING, '"""Return a new path pointing to the user\'s home directory (as\r\n        returned by os.path.expanduser(\'~\')).\r\n        """', 1129, 8, 1131, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1131, 11, 1132, 0),
woosh.Token(woosh.NAME, 'return', 1132, 8, 1132, 14),
woosh.Token(woosh.NAME, 'cls', 1132, 15, 1132, 18),
woosh.Token(woosh.OP, '(', 1132, 18, 1132, 19),
woosh.Token(woosh.NAME, 'cls', 1132, 19, 1132, 22),
woosh.Token(woosh.OP, '(', 1132, 22, 1132, 23),
woosh.Token(woosh.OP, ')', 1132, 23, 1132, 24),
woosh.Token(woosh.OP, '.', 1132, 24, 1132, 25),
woosh.Token(woosh.NAME, '_flavour', 1132, 25, 1132, 33),
woosh.Token(woosh.OP, '.', 1132, 33, 1132, 34),
woosh.Token(woosh.NAME, 'gethomedir', 1132, 34, 1132, 44),
woosh.Token(woosh.OP, '(', 1132, 44, 1132, 45),
woosh.Token(woosh.NAME, 'None', 1132, 45, 1132, 49),
woosh.Token(woosh.OP, ')', 1132, 49, 1132, 50),
woosh.Token(woosh.OP, ')', 1132, 50, 1132, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1132, 51, 1133, 0),
woosh.Token(woosh.DEDENT, '    ', 1134, 0, 1134, 4),
woosh.Token(woosh.NAME, 'def', 1134, 4, 1134, 7),
woosh.Token(woosh.NAME, 'samefile', 1134, 8, 1134, 16),
woosh.Token(woosh.OP, '(', 1134, 16, 1134, 17),
woosh.Token(woosh.NAME, 'self', 1134, 17, 1134, 21),
woosh.Token(woosh.OP, ',', 1134, 21, 1134, 22),
woosh.Token(woosh.NAME, 'other_path', 1134, 23, 1134, 33),
woosh.Token(woosh.OP, ')', 1134, 33, 1134, 34),
woosh.Token(woosh.OP, ':', 1134, 34, 1134, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1134, 35, 1135, 0),
woosh.Token(woosh.INDENT, '        ', 1135, 0, 1135, 8),
woosh.Token(woosh.STRING, '"""Return whether other_path is the same or not as this file\r\n        (as returned by os.path.samefile()).\r\n        """', 1135, 8, 1137, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1137, 11, 1138, 0),
woosh.Token(woosh.NAME, 'st', 1138, 8, 1138, 10),
woosh.Token(woosh.OP, '=', 1138, 11, 1138, 12),
woosh.Token(woosh.NAME, 'self', 1138, 13, 1138, 17),
woosh.Token(woosh.OP, '.', 1138, 17, 1138, 18),
woosh.Token(woosh.NAME, 'stat', 1138, 18, 1138, 22),
woosh.Token(woosh.OP, '(', 1138, 22, 1138, 23),
woosh.Token(woosh.OP, ')', 1138, 23, 1138, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1138, 24, 1139, 0),
woosh.Token(woosh.NAME, 'try', 1139, 8, 1139, 11),
woosh.Token(woosh.OP, ':', 1139, 11, 1139, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1139, 12, 1140, 0),
woosh.Token(woosh.INDENT, '            ', 1140, 0, 1140, 12),
woosh.Token(woosh.NAME, 'other_st', 1140, 12, 1140, 20),
woosh.Token(woosh.OP, '=', 1140, 21, 1140, 22),
woosh.Token(woosh.NAME, 'other_path', 1140, 23, 1140, 33),
woosh.Token(woosh.OP, '.', 1140, 33, 1140, 34),
woosh.Token(woosh.NAME, 'stat', 1140, 34, 1140, 38),
woosh.Token(woosh.OP, '(', 1140, 38, 1140, 39),
woosh.Token(woosh.OP, ')', 1140, 39, 1140, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1140, 40, 1141, 0),
woosh.Token(woosh.DEDENT, '        ', 1141, 0, 1141, 8),
woosh.Token(woosh.NAME, 'except', 1141, 8, 1141, 14),
woosh.Token(woosh.NAME, 'AttributeError', 1141, 15, 1141, 29),
woosh.Token(woosh.OP, ':', 1141, 29, 1141, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1141, 30, 1142, 0),
woosh.Token(woosh.INDENT, '            ', 1142, 0, 1142, 12),
woosh.Token(woosh.NAME, 'other_st', 1142, 12, 1142, 20),
woosh.Token(woosh.OP, '=', 1142, 21, 1142, 22),
woosh.Token(woosh.NAME, 'self', 1142, 23, 1142, 27),
woosh.Token(woosh.OP, '.', 1142, 27, 1142, 28),
woosh.Token(woosh.NAME, '_accessor', 1142, 28, 1142, 37),
woosh.Token(woosh.OP, '.', 1142, 37, 1142, 38),
woosh.Token(woosh.NAME, 'stat', 1142, 38, 1142, 42),
woosh.Token(woosh.OP, '(', 1142, 42, 1142, 43),
woosh.Token(woosh.NAME, 'other_path', 1142, 43, 1142, 53),
woosh.Token(woosh.OP, ')', 1142, 53, 1142, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1142, 54, 1143, 0),
woosh.Token(woosh.DEDENT, '        ', 1143, 0, 1143, 8),
woosh.Token(woosh.NAME, 'return', 1143, 8, 1143, 14),
woosh.Token(woosh.NAME, 'os', 1143, 15, 1143, 17),
woosh.Token(woosh.OP, '.', 1143, 17, 1143, 18),
woosh.Token(woosh.NAME, 'path', 1143, 18, 1143, 22),
woosh.Token(woosh.OP, '.', 1143, 22, 1143, 23),
woosh.Token(woosh.NAME, 'samestat', 1143, 23, 1143, 31),
woosh.Token(woosh.OP, '(', 1143, 31, 1143, 32),
woosh.Token(woosh.NAME, 'st', 1143, 32, 1143, 34),
woosh.Token(woosh.OP, ',', 1143, 34, 1143, 35),
woosh.Token(woosh.NAME, 'other_st', 1143, 36, 1143, 44),
woosh.Token(woosh.OP, ')', 1143, 44, 1143, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1143, 45, 1144, 0),
woosh.Token(woosh.DEDENT, '    ', 1145, 0, 1145, 4),
woosh.Token(woosh.NAME, 'def', 1145, 4, 1145, 7),
woosh.Token(woosh.NAME, 'iterdir', 1145, 8, 1145, 15),
woosh.Token(woosh.OP, '(', 1145, 15, 1145, 16),
woosh.Token(woosh.NAME, 'self', 1145, 16, 1145, 20),
woosh.Token(woosh.OP, ')', 1145, 20, 1145, 21),
woosh.Token(woosh.OP, ':', 1145, 21, 1145, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1145, 22, 1146, 0),
woosh.Token(woosh.INDENT, '        ', 1146, 0, 1146, 8),
woosh.Token(woosh.STRING, '"""Iterate over the files in this directory.  Does not yield any\r\n        result for the special paths \'.\' and \'..\'.\r\n        """', 1146, 8, 1148, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1148, 11, 1149, 0),
woosh.Token(woosh.NAME, 'for', 1149, 8, 1149, 11),
woosh.Token(woosh.NAME, 'name', 1149, 12, 1149, 16),
woosh.Token(woosh.NAME, 'in', 1149, 17, 1149, 19),
woosh.Token(woosh.NAME, 'self', 1149, 20, 1149, 24),
woosh.Token(woosh.OP, '.', 1149, 24, 1149, 25),
woosh.Token(woosh.NAME, '_accessor', 1149, 25, 1149, 34),
woosh.Token(woosh.OP, '.', 1149, 34, 1149, 35),
woosh.Token(woosh.NAME, 'listdir', 1149, 35, 1149, 42),
woosh.Token(woosh.OP, '(', 1149, 42, 1149, 43),
woosh.Token(woosh.NAME, 'self', 1149, 43, 1149, 47),
woosh.Token(woosh.OP, ')', 1149, 47, 1149, 48),
woosh.Token(woosh.OP, ':', 1149, 48, 1149, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1149, 49, 1150, 0),
woosh.Token(woosh.INDENT, '            ', 1150, 0, 1150, 12),
woosh.Token(woosh.NAME, 'if', 1150, 12, 1150, 14),
woosh.Token(woosh.NAME, 'name', 1150, 15, 1150, 19),
woosh.Token(woosh.NAME, 'in', 1150, 20, 1150, 22),
woosh.Token(woosh.OP, '{', 1150, 23, 1150, 24),
woosh.Token(woosh.STRING, "'.'", 1150, 24, 1150, 27),
woosh.Token(woosh.OP, ',', 1150, 27, 1150, 28),
woosh.Token(woosh.STRING, "'..'", 1150, 29, 1150, 33),
woosh.Token(woosh.OP, '}', 1150, 33, 1150, 34),
woosh.Token(woosh.OP, ':', 1150, 34, 1150, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1150, 35, 1151, 0),
woosh.Token(woosh.COMMENT, '# Yielding a path object for these makes little sense', 1151, 16, 1151, 69),
woosh.Token(woosh.INDENT, '                ', 1152, 0, 1152, 16),
woosh.Token(woosh.NAME, 'continue', 1152, 16, 1152, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1152, 24, 1153, 0),
woosh.Token(woosh.DEDENT, '            ', 1153, 0, 1153, 12),
woosh.Token(woosh.NAME, 'yield', 1153, 12, 1153, 17),
woosh.Token(woosh.NAME, 'self', 1153, 18, 1153, 22),
woosh.Token(woosh.OP, '.', 1153, 22, 1153, 23),
woosh.Token(woosh.NAME, '_make_child_relpath', 1153, 23, 1153, 42),
woosh.Token(woosh.OP, '(', 1153, 42, 1153, 43),
woosh.Token(woosh.NAME, 'name', 1153, 43, 1153, 47),
woosh.Token(woosh.OP, ')', 1153, 47, 1153, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1153, 48, 1154, 0),
woosh.Token(woosh.DEDENT, '    ', 1155, 0, 1155, 4),
woosh.Token(woosh.DEDENT, '', 1155, 4, 1155, 4),
woosh.Token(woosh.NAME, 'def', 1155, 4, 1155, 7),
woosh.Token(woosh.NAME, 'glob', 1155, 8, 1155, 12),
woosh.Token(woosh.OP, '(', 1155, 12, 1155, 13),
woosh.Token(woosh.NAME, 'self', 1155, 13, 1155, 17),
woosh.Token(woosh.OP, ',', 1155, 17, 1155, 18),
woosh.Token(woosh.NAME, 'pattern', 1155, 19, 1155, 26),
woosh.Token(woosh.OP, ')', 1155, 26, 1155, 27),
woosh.Token(woosh.OP, ':', 1155, 27, 1155, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1155, 28, 1156, 0),
woosh.Token(woosh.INDENT, '        ', 1156, 0, 1156, 8),
woosh.Token(woosh.STRING, '"""Iterate over this subtree and yield all existing files (of any\r\n        kind, including directories) matching the given relative pattern.\r\n        """', 1156, 8, 1158, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1158, 11, 1159, 0),
woosh.Token(woosh.NAME, 'sys', 1159, 8, 1159, 11),
woosh.Token(woosh.OP, '.', 1159, 11, 1159, 12),
woosh.Token(woosh.NAME, 'audit', 1159, 12, 1159, 17),
woosh.Token(woosh.OP, '(', 1159, 17, 1159, 18),
woosh.Token(woosh.STRING, '"pathlib.Path.glob"', 1159, 18, 1159, 37),
woosh.Token(woosh.OP, ',', 1159, 37, 1159, 38),
woosh.Token(woosh.NAME, 'self', 1159, 39, 1159, 43),
woosh.Token(woosh.OP, ',', 1159, 43, 1159, 44),
woosh.Token(woosh.NAME, 'pattern', 1159, 45, 1159, 52),
woosh.Token(woosh.OP, ')', 1159, 52, 1159, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1159, 53, 1160, 0),
woosh.Token(woosh.NAME, 'if', 1160, 8, 1160, 10),
woosh.Token(woosh.NAME, 'not', 1160, 11, 1160, 14),
woosh.Token(woosh.NAME, 'pattern', 1160, 15, 1160, 22),
woosh.Token(woosh.OP, ':', 1160, 22, 1160, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1160, 23, 1161, 0),
woosh.Token(woosh.INDENT, '            ', 1161, 0, 1161, 12),
woosh.Token(woosh.NAME, 'raise', 1161, 12, 1161, 17),
woosh.Token(woosh.NAME, 'ValueError', 1161, 18, 1161, 28),
woosh.Token(woosh.OP, '(', 1161, 28, 1161, 29),
woosh.Token(woosh.STRING, '"Unacceptable pattern: {!r}"', 1161, 29, 1161, 57),
woosh.Token(woosh.OP, '.', 1161, 57, 1161, 58),
woosh.Token(woosh.NAME, 'format', 1161, 58, 1161, 64),
woosh.Token(woosh.OP, '(', 1161, 64, 1161, 65),
woosh.Token(woosh.NAME, 'pattern', 1161, 65, 1161, 72),
woosh.Token(woosh.OP, ')', 1161, 72, 1161, 73),
woosh.Token(woosh.OP, ')', 1161, 73, 1161, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1161, 74, 1162, 0),
woosh.Token(woosh.DEDENT, '        ', 1162, 0, 1162, 8),
woosh.Token(woosh.NAME, 'drv', 1162, 8, 1162, 11),
woosh.Token(woosh.OP, ',', 1162, 11, 1162, 12),
woosh.Token(woosh.NAME, 'root', 1162, 13, 1162, 17),
woosh.Token(woosh.OP, ',', 1162, 17, 1162, 18),
woosh.Token(woosh.NAME, 'pattern_parts', 1162, 19, 1162, 32),
woosh.Token(woosh.OP, '=', 1162, 33, 1162, 34),
woosh.Token(woosh.NAME, 'self', 1162, 35, 1162, 39),
woosh.Token(woosh.OP, '.', 1162, 39, 1162, 40),
woosh.Token(woosh.NAME, '_flavour', 1162, 40, 1162, 48),
woosh.Token(woosh.OP, '.', 1162, 48, 1162, 49),
woosh.Token(woosh.NAME, 'parse_parts', 1162, 49, 1162, 60),
woosh.Token(woosh.OP, '(', 1162, 60, 1162, 61),
woosh.Token(woosh.OP, '(', 1162, 61, 1162, 62),
woosh.Token(woosh.NAME, 'pattern', 1162, 62, 1162, 69),
woosh.Token(woosh.OP, ',', 1162, 69, 1162, 70),
woosh.Token(woosh.OP, ')', 1162, 70, 1162, 71),
woosh.Token(woosh.OP, ')', 1162, 71, 1162, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1162, 72, 1163, 0),
woosh.Token(woosh.NAME, 'if', 1163, 8, 1163, 10),
woosh.Token(woosh.NAME, 'drv', 1163, 11, 1163, 14),
woosh.Token(woosh.NAME, 'or', 1163, 15, 1163, 17),
woosh.Token(woosh.NAME, 'root', 1163, 18, 1163, 22),
woosh.Token(woosh.OP, ':', 1163, 22, 1163, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1163, 23, 1164, 0),
woosh.Token(woosh.INDENT, '            ', 1164, 0, 1164, 12),
woosh.Token(woosh.NAME, 'raise', 1164, 12, 1164, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 1164, 18, 1164, 37),
woosh.Token(woosh.OP, '(', 1164, 37, 1164, 38),
woosh.Token(woosh.STRING, '"Non-relative patterns are unsupported"', 1164, 38, 1164, 77),
woosh.Token(woosh.OP, ')', 1164, 77, 1164, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1164, 78, 1165, 0),
woosh.Token(woosh.DEDENT, '        ', 1165, 0, 1165, 8),
woosh.Token(woosh.NAME, 'selector', 1165, 8, 1165, 16),
woosh.Token(woosh.OP, '=', 1165, 17, 1165, 18),
woosh.Token(woosh.NAME, '_make_selector', 1165, 19, 1165, 33),
woosh.Token(woosh.OP, '(', 1165, 33, 1165, 34),
woosh.Token(woosh.NAME, 'tuple', 1165, 34, 1165, 39),
woosh.Token(woosh.OP, '(', 1165, 39, 1165, 40),
woosh.Token(woosh.NAME, 'pattern_parts', 1165, 40, 1165, 53),
woosh.Token(woosh.OP, ')', 1165, 53, 1165, 54),
woosh.Token(woosh.OP, ',', 1165, 54, 1165, 55),
woosh.Token(woosh.NAME, 'self', 1165, 56, 1165, 60),
woosh.Token(woosh.OP, '.', 1165, 60, 1165, 61),
woosh.Token(woosh.NAME, '_flavour', 1165, 61, 1165, 69),
woosh.Token(woosh.OP, ')', 1165, 69, 1165, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1165, 70, 1166, 0),
woosh.Token(woosh.NAME, 'for', 1166, 8, 1166, 11),
woosh.Token(woosh.NAME, 'p', 1166, 12, 1166, 13),
woosh.Token(woosh.NAME, 'in', 1166, 14, 1166, 16),
woosh.Token(woosh.NAME, 'selector', 1166, 17, 1166, 25),
woosh.Token(woosh.OP, '.', 1166, 25, 1166, 26),
woosh.Token(woosh.NAME, 'select_from', 1166, 26, 1166, 37),
woosh.Token(woosh.OP, '(', 1166, 37, 1166, 38),
woosh.Token(woosh.NAME, 'self', 1166, 38, 1166, 42),
woosh.Token(woosh.OP, ')', 1166, 42, 1166, 43),
woosh.Token(woosh.OP, ':', 1166, 43, 1166, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1166, 44, 1167, 0),
woosh.Token(woosh.INDENT, '            ', 1167, 0, 1167, 12),
woosh.Token(woosh.NAME, 'yield', 1167, 12, 1167, 17),
woosh.Token(woosh.NAME, 'p', 1167, 18, 1167, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1167, 19, 1168, 0),
woosh.Token(woosh.DEDENT, '    ', 1169, 0, 1169, 4),
woosh.Token(woosh.DEDENT, '', 1169, 4, 1169, 4),
woosh.Token(woosh.NAME, 'def', 1169, 4, 1169, 7),
woosh.Token(woosh.NAME, 'rglob', 1169, 8, 1169, 13),
woosh.Token(woosh.OP, '(', 1169, 13, 1169, 14),
woosh.Token(woosh.NAME, 'self', 1169, 14, 1169, 18),
woosh.Token(woosh.OP, ',', 1169, 18, 1169, 19),
woosh.Token(woosh.NAME, 'pattern', 1169, 20, 1169, 27),
woosh.Token(woosh.OP, ')', 1169, 27, 1169, 28),
woosh.Token(woosh.OP, ':', 1169, 28, 1169, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1169, 29, 1170, 0),
woosh.Token(woosh.INDENT, '        ', 1170, 0, 1170, 8),
woosh.Token(woosh.STRING, '"""Recursively yield all existing files (of any kind, including\r\n        directories) matching the given relative pattern, anywhere in\r\n        this subtree.\r\n        """', 1170, 8, 1173, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1173, 11, 1174, 0),
woosh.Token(woosh.NAME, 'sys', 1174, 8, 1174, 11),
woosh.Token(woosh.OP, '.', 1174, 11, 1174, 12),
woosh.Token(woosh.NAME, 'audit', 1174, 12, 1174, 17),
woosh.Token(woosh.OP, '(', 1174, 17, 1174, 18),
woosh.Token(woosh.STRING, '"pathlib.Path.rglob"', 1174, 18, 1174, 38),
woosh.Token(woosh.OP, ',', 1174, 38, 1174, 39),
woosh.Token(woosh.NAME, 'self', 1174, 40, 1174, 44),
woosh.Token(woosh.OP, ',', 1174, 44, 1174, 45),
woosh.Token(woosh.NAME, 'pattern', 1174, 46, 1174, 53),
woosh.Token(woosh.OP, ')', 1174, 53, 1174, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1174, 54, 1175, 0),
woosh.Token(woosh.NAME, 'drv', 1175, 8, 1175, 11),
woosh.Token(woosh.OP, ',', 1175, 11, 1175, 12),
woosh.Token(woosh.NAME, 'root', 1175, 13, 1175, 17),
woosh.Token(woosh.OP, ',', 1175, 17, 1175, 18),
woosh.Token(woosh.NAME, 'pattern_parts', 1175, 19, 1175, 32),
woosh.Token(woosh.OP, '=', 1175, 33, 1175, 34),
woosh.Token(woosh.NAME, 'self', 1175, 35, 1175, 39),
woosh.Token(woosh.OP, '.', 1175, 39, 1175, 40),
woosh.Token(woosh.NAME, '_flavour', 1175, 40, 1175, 48),
woosh.Token(woosh.OP, '.', 1175, 48, 1175, 49),
woosh.Token(woosh.NAME, 'parse_parts', 1175, 49, 1175, 60),
woosh.Token(woosh.OP, '(', 1175, 60, 1175, 61),
woosh.Token(woosh.OP, '(', 1175, 61, 1175, 62),
woosh.Token(woosh.NAME, 'pattern', 1175, 62, 1175, 69),
woosh.Token(woosh.OP, ',', 1175, 69, 1175, 70),
woosh.Token(woosh.OP, ')', 1175, 70, 1175, 71),
woosh.Token(woosh.OP, ')', 1175, 71, 1175, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1175, 72, 1176, 0),
woosh.Token(woosh.NAME, 'if', 1176, 8, 1176, 10),
woosh.Token(woosh.NAME, 'drv', 1176, 11, 1176, 14),
woosh.Token(woosh.NAME, 'or', 1176, 15, 1176, 17),
woosh.Token(woosh.NAME, 'root', 1176, 18, 1176, 22),
woosh.Token(woosh.OP, ':', 1176, 22, 1176, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1176, 23, 1177, 0),
woosh.Token(woosh.INDENT, '            ', 1177, 0, 1177, 12),
woosh.Token(woosh.NAME, 'raise', 1177, 12, 1177, 17),
woosh.Token(woosh.NAME, 'NotImplementedError', 1177, 18, 1177, 37),
woosh.Token(woosh.OP, '(', 1177, 37, 1177, 38),
woosh.Token(woosh.STRING, '"Non-relative patterns are unsupported"', 1177, 38, 1177, 77),
woosh.Token(woosh.OP, ')', 1177, 77, 1177, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1177, 78, 1178, 0),
woosh.Token(woosh.DEDENT, '        ', 1178, 0, 1178, 8),
woosh.Token(woosh.NAME, 'selector', 1178, 8, 1178, 16),
woosh.Token(woosh.OP, '=', 1178, 17, 1178, 18),
woosh.Token(woosh.NAME, '_make_selector', 1178, 19, 1178, 33),
woosh.Token(woosh.OP, '(', 1178, 33, 1178, 34),
woosh.Token(woosh.OP, '(', 1178, 34, 1178, 35),
woosh.Token(woosh.STRING, '"**"', 1178, 35, 1178, 39),
woosh.Token(woosh.OP, ',', 1178, 39, 1178, 40),
woosh.Token(woosh.OP, ')', 1178, 40, 1178, 41),
woosh.Token(woosh.OP, '+', 1178, 42, 1178, 43),
woosh.Token(woosh.NAME, 'tuple', 1178, 44, 1178, 49),
woosh.Token(woosh.OP, '(', 1178, 49, 1178, 50),
woosh.Token(woosh.NAME, 'pattern_parts', 1178, 50, 1178, 63),
woosh.Token(woosh.OP, ')', 1178, 63, 1178, 64),
woosh.Token(woosh.OP, ',', 1178, 64, 1178, 65),
woosh.Token(woosh.NAME, 'self', 1178, 66, 1178, 70),
woosh.Token(woosh.OP, '.', 1178, 70, 1178, 71),
woosh.Token(woosh.NAME, '_flavour', 1178, 71, 1178, 79),
woosh.Token(woosh.OP, ')', 1178, 79, 1178, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 1178, 80, 1179, 0),
woosh.Token(woosh.NAME, 'for', 1179, 8, 1179, 11),
woosh.Token(woosh.NAME, 'p', 1179, 12, 1179, 13),
woosh.Token(woosh.NAME, 'in', 1179, 14, 1179, 16),
woosh.Token(woosh.NAME, 'selector', 1179, 17, 1179, 25),
woosh.Token(woosh.OP, '.', 1179, 25, 1179, 26),
woosh.Token(woosh.NAME, 'select_from', 1179, 26, 1179, 37),
woosh.Token(woosh.OP, '(', 1179, 37, 1179, 38),
woosh.Token(woosh.NAME, 'self', 1179, 38, 1179, 42),
woosh.Token(woosh.OP, ')', 1179, 42, 1179, 43),
woosh.Token(woosh.OP, ':', 1179, 43, 1179, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1179, 44, 1180, 0),
woosh.Token(woosh.INDENT, '            ', 1180, 0, 1180, 12),
woosh.Token(woosh.NAME, 'yield', 1180, 12, 1180, 17),
woosh.Token(woosh.NAME, 'p', 1180, 18, 1180, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1180, 19, 1181, 0),
woosh.Token(woosh.DEDENT, '    ', 1182, 0, 1182, 4),
woosh.Token(woosh.DEDENT, '', 1182, 4, 1182, 4),
woosh.Token(woosh.NAME, 'def', 1182, 4, 1182, 7),
woosh.Token(woosh.NAME, 'absolute', 1182, 8, 1182, 16),
woosh.Token(woosh.OP, '(', 1182, 16, 1182, 17),
woosh.Token(woosh.NAME, 'self', 1182, 17, 1182, 21),
woosh.Token(woosh.OP, ')', 1182, 21, 1182, 22),
woosh.Token(woosh.OP, ':', 1182, 22, 1182, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1182, 23, 1183, 0),
woosh.Token(woosh.INDENT, '        ', 1183, 0, 1183, 8),
woosh.Token(woosh.STRING, '"""Return an absolute version of this path.  This function works\r\n        even if the path doesn\'t point to anything.\r\n\r\n        No normalization is done, i.e. all \'.\' and \'..\' will be kept along.\r\n        Use resolve() to get the canonical path to a file.\r\n        """', 1183, 8, 1188, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1188, 11, 1189, 0),
woosh.Token(woosh.COMMENT, '# XXX untested yet!', 1189, 8, 1189, 27),
woosh.Token(woosh.NAME, 'if', 1190, 8, 1190, 10),
woosh.Token(woosh.NAME, 'self', 1190, 11, 1190, 15),
woosh.Token(woosh.OP, '.', 1190, 15, 1190, 16),
woosh.Token(woosh.NAME, 'is_absolute', 1190, 16, 1190, 27),
woosh.Token(woosh.OP, '(', 1190, 27, 1190, 28),
woosh.Token(woosh.OP, ')', 1190, 28, 1190, 29),
woosh.Token(woosh.OP, ':', 1190, 29, 1190, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1190, 30, 1191, 0),
woosh.Token(woosh.INDENT, '            ', 1191, 0, 1191, 12),
woosh.Token(woosh.NAME, 'return', 1191, 12, 1191, 18),
woosh.Token(woosh.NAME, 'self', 1191, 19, 1191, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1191, 23, 1192, 0),
woosh.Token(woosh.COMMENT, '# FIXME this must defer to the specific flavour (and, under Windows,', 1192, 8, 1192, 76),
woosh.Token(woosh.COMMENT, '# use nt._getfullpathname())', 1193, 8, 1193, 36),
woosh.Token(woosh.DEDENT, '        ', 1194, 0, 1194, 8),
woosh.Token(woosh.NAME, 'obj', 1194, 8, 1194, 11),
woosh.Token(woosh.OP, '=', 1194, 12, 1194, 13),
woosh.Token(woosh.NAME, 'self', 1194, 14, 1194, 18),
woosh.Token(woosh.OP, '.', 1194, 18, 1194, 19),
woosh.Token(woosh.NAME, '_from_parts', 1194, 19, 1194, 30),
woosh.Token(woosh.OP, '(', 1194, 30, 1194, 31),
woosh.Token(woosh.OP, '[', 1194, 31, 1194, 32),
woosh.Token(woosh.NAME, 'os', 1194, 32, 1194, 34),
woosh.Token(woosh.OP, '.', 1194, 34, 1194, 35),
woosh.Token(woosh.NAME, 'getcwd', 1194, 35, 1194, 41),
woosh.Token(woosh.OP, '(', 1194, 41, 1194, 42),
woosh.Token(woosh.OP, ')', 1194, 42, 1194, 43),
woosh.Token(woosh.OP, ']', 1194, 43, 1194, 44),
woosh.Token(woosh.OP, '+', 1194, 45, 1194, 46),
woosh.Token(woosh.NAME, 'self', 1194, 47, 1194, 51),
woosh.Token(woosh.OP, '.', 1194, 51, 1194, 52),
woosh.Token(woosh.NAME, '_parts', 1194, 52, 1194, 58),
woosh.Token(woosh.OP, ',', 1194, 58, 1194, 59),
woosh.Token(woosh.NAME, 'init', 1194, 60, 1194, 64),
woosh.Token(woosh.OP, '=', 1194, 64, 1194, 65),
woosh.Token(woosh.NAME, 'False', 1194, 65, 1194, 70),
woosh.Token(woosh.OP, ')', 1194, 70, 1194, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1194, 71, 1195, 0),
woosh.Token(woosh.NAME, 'obj', 1195, 8, 1195, 11),
woosh.Token(woosh.OP, '.', 1195, 11, 1195, 12),
woosh.Token(woosh.NAME, '_init', 1195, 12, 1195, 17),
woosh.Token(woosh.OP, '(', 1195, 17, 1195, 18),
woosh.Token(woosh.NAME, 'template', 1195, 18, 1195, 26),
woosh.Token(woosh.OP, '=', 1195, 26, 1195, 27),
woosh.Token(woosh.NAME, 'self', 1195, 27, 1195, 31),
woosh.Token(woosh.OP, ')', 1195, 31, 1195, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1195, 32, 1196, 0),
woosh.Token(woosh.NAME, 'return', 1196, 8, 1196, 14),
woosh.Token(woosh.NAME, 'obj', 1196, 15, 1196, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1196, 18, 1197, 0),
woosh.Token(woosh.DEDENT, '    ', 1198, 0, 1198, 4),
woosh.Token(woosh.NAME, 'def', 1198, 4, 1198, 7),
woosh.Token(woosh.NAME, 'resolve', 1198, 8, 1198, 15),
woosh.Token(woosh.OP, '(', 1198, 15, 1198, 16),
woosh.Token(woosh.NAME, 'self', 1198, 16, 1198, 20),
woosh.Token(woosh.OP, ',', 1198, 20, 1198, 21),
woosh.Token(woosh.NAME, 'strict', 1198, 22, 1198, 28),
woosh.Token(woosh.OP, '=', 1198, 28, 1198, 29),
woosh.Token(woosh.NAME, 'False', 1198, 29, 1198, 34),
woosh.Token(woosh.OP, ')', 1198, 34, 1198, 35),
woosh.Token(woosh.OP, ':', 1198, 35, 1198, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1198, 36, 1199, 0),
woosh.Token(woosh.INDENT, '        ', 1199, 0, 1199, 8),
woosh.Token(woosh.STRING, '"""\r\n        Make the path absolute, resolving all symlinks on the way and also\r\n        normalizing it (for example turning slashes into backslashes under\r\n        Windows).\r\n        """', 1199, 8, 1203, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1203, 11, 1204, 0),
woosh.Token(woosh.NAME, 's', 1204, 8, 1204, 9),
woosh.Token(woosh.OP, '=', 1204, 10, 1204, 11),
woosh.Token(woosh.NAME, 'self', 1204, 12, 1204, 16),
woosh.Token(woosh.OP, '.', 1204, 16, 1204, 17),
woosh.Token(woosh.NAME, '_flavour', 1204, 17, 1204, 25),
woosh.Token(woosh.OP, '.', 1204, 25, 1204, 26),
woosh.Token(woosh.NAME, 'resolve', 1204, 26, 1204, 33),
woosh.Token(woosh.OP, '(', 1204, 33, 1204, 34),
woosh.Token(woosh.NAME, 'self', 1204, 34, 1204, 38),
woosh.Token(woosh.OP, ',', 1204, 38, 1204, 39),
woosh.Token(woosh.NAME, 'strict', 1204, 40, 1204, 46),
woosh.Token(woosh.OP, '=', 1204, 46, 1204, 47),
woosh.Token(woosh.NAME, 'strict', 1204, 47, 1204, 53),
woosh.Token(woosh.OP, ')', 1204, 53, 1204, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1204, 54, 1205, 0),
woosh.Token(woosh.NAME, 'if', 1205, 8, 1205, 10),
woosh.Token(woosh.NAME, 's', 1205, 11, 1205, 12),
woosh.Token(woosh.NAME, 'is', 1205, 13, 1205, 15),
woosh.Token(woosh.NAME, 'None', 1205, 16, 1205, 20),
woosh.Token(woosh.OP, ':', 1205, 20, 1205, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1205, 21, 1206, 0),
woosh.Token(woosh.COMMENT, '# No symlink resolution => for consistency, raise an error if', 1206, 12, 1206, 73),
woosh.Token(woosh.COMMENT, "# the path doesn't exist or is forbidden", 1207, 12, 1207, 52),
woosh.Token(woosh.INDENT, '            ', 1208, 0, 1208, 12),
woosh.Token(woosh.NAME, 'self', 1208, 12, 1208, 16),
woosh.Token(woosh.OP, '.', 1208, 16, 1208, 17),
woosh.Token(woosh.NAME, 'stat', 1208, 17, 1208, 21),
woosh.Token(woosh.OP, '(', 1208, 21, 1208, 22),
woosh.Token(woosh.OP, ')', 1208, 22, 1208, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1208, 23, 1209, 0),
woosh.Token(woosh.NAME, 's', 1209, 12, 1209, 13),
woosh.Token(woosh.OP, '=', 1209, 14, 1209, 15),
woosh.Token(woosh.NAME, 'str', 1209, 16, 1209, 19),
woosh.Token(woosh.OP, '(', 1209, 19, 1209, 20),
woosh.Token(woosh.NAME, 'self', 1209, 20, 1209, 24),
woosh.Token(woosh.OP, '.', 1209, 24, 1209, 25),
woosh.Token(woosh.NAME, 'absolute', 1209, 25, 1209, 33),
woosh.Token(woosh.OP, '(', 1209, 33, 1209, 34),
woosh.Token(woosh.OP, ')', 1209, 34, 1209, 35),
woosh.Token(woosh.OP, ')', 1209, 35, 1209, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1209, 36, 1210, 0),
woosh.Token(woosh.COMMENT, "# Now we have no symlinks in the path, it's safe to normalize it.", 1210, 8, 1210, 73),
woosh.Token(woosh.DEDENT, '        ', 1211, 0, 1211, 8),
woosh.Token(woosh.NAME, 'normed', 1211, 8, 1211, 14),
woosh.Token(woosh.OP, '=', 1211, 15, 1211, 16),
woosh.Token(woosh.NAME, 'self', 1211, 17, 1211, 21),
woosh.Token(woosh.OP, '.', 1211, 21, 1211, 22),
woosh.Token(woosh.NAME, '_flavour', 1211, 22, 1211, 30),
woosh.Token(woosh.OP, '.', 1211, 30, 1211, 31),
woosh.Token(woosh.NAME, 'pathmod', 1211, 31, 1211, 38),
woosh.Token(woosh.OP, '.', 1211, 38, 1211, 39),
woosh.Token(woosh.NAME, 'normpath', 1211, 39, 1211, 47),
woosh.Token(woosh.OP, '(', 1211, 47, 1211, 48),
woosh.Token(woosh.NAME, 's', 1211, 48, 1211, 49),
woosh.Token(woosh.OP, ')', 1211, 49, 1211, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1211, 50, 1212, 0),
woosh.Token(woosh.NAME, 'obj', 1212, 8, 1212, 11),
woosh.Token(woosh.OP, '=', 1212, 12, 1212, 13),
woosh.Token(woosh.NAME, 'self', 1212, 14, 1212, 18),
woosh.Token(woosh.OP, '.', 1212, 18, 1212, 19),
woosh.Token(woosh.NAME, '_from_parts', 1212, 19, 1212, 30),
woosh.Token(woosh.OP, '(', 1212, 30, 1212, 31),
woosh.Token(woosh.OP, '(', 1212, 31, 1212, 32),
woosh.Token(woosh.NAME, 'normed', 1212, 32, 1212, 38),
woosh.Token(woosh.OP, ',', 1212, 38, 1212, 39),
woosh.Token(woosh.OP, ')', 1212, 39, 1212, 40),
woosh.Token(woosh.OP, ',', 1212, 40, 1212, 41),
woosh.Token(woosh.NAME, 'init', 1212, 42, 1212, 46),
woosh.Token(woosh.OP, '=', 1212, 46, 1212, 47),
woosh.Token(woosh.NAME, 'False', 1212, 47, 1212, 52),
woosh.Token(woosh.OP, ')', 1212, 52, 1212, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1212, 53, 1213, 0),
woosh.Token(woosh.NAME, 'obj', 1213, 8, 1213, 11),
woosh.Token(woosh.OP, '.', 1213, 11, 1213, 12),
woosh.Token(woosh.NAME, '_init', 1213, 12, 1213, 17),
woosh.Token(woosh.OP, '(', 1213, 17, 1213, 18),
woosh.Token(woosh.NAME, 'template', 1213, 18, 1213, 26),
woosh.Token(woosh.OP, '=', 1213, 26, 1213, 27),
woosh.Token(woosh.NAME, 'self', 1213, 27, 1213, 31),
woosh.Token(woosh.OP, ')', 1213, 31, 1213, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1213, 32, 1214, 0),
woosh.Token(woosh.NAME, 'return', 1214, 8, 1214, 14),
woosh.Token(woosh.NAME, 'obj', 1214, 15, 1214, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1214, 18, 1215, 0),
woosh.Token(woosh.DEDENT, '    ', 1216, 0, 1216, 4),
woosh.Token(woosh.NAME, 'def', 1216, 4, 1216, 7),
woosh.Token(woosh.NAME, 'stat', 1216, 8, 1216, 12),
woosh.Token(woosh.OP, '(', 1216, 12, 1216, 13),
woosh.Token(woosh.NAME, 'self', 1216, 13, 1216, 17),
woosh.Token(woosh.OP, ')', 1216, 17, 1216, 18),
woosh.Token(woosh.OP, ':', 1216, 18, 1216, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1216, 19, 1217, 0),
woosh.Token(woosh.INDENT, '        ', 1217, 0, 1217, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return the result of the stat() system call on this path, like\r\n        os.stat() does.\r\n        """', 1217, 8, 1220, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1220, 11, 1221, 0),
woosh.Token(woosh.NAME, 'return', 1221, 8, 1221, 14),
woosh.Token(woosh.NAME, 'self', 1221, 15, 1221, 19),
woosh.Token(woosh.OP, '.', 1221, 19, 1221, 20),
woosh.Token(woosh.NAME, '_accessor', 1221, 20, 1221, 29),
woosh.Token(woosh.OP, '.', 1221, 29, 1221, 30),
woosh.Token(woosh.NAME, 'stat', 1221, 30, 1221, 34),
woosh.Token(woosh.OP, '(', 1221, 34, 1221, 35),
woosh.Token(woosh.NAME, 'self', 1221, 35, 1221, 39),
woosh.Token(woosh.OP, ')', 1221, 39, 1221, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1221, 40, 1222, 0),
woosh.Token(woosh.DEDENT, '    ', 1223, 0, 1223, 4),
woosh.Token(woosh.NAME, 'def', 1223, 4, 1223, 7),
woosh.Token(woosh.NAME, 'owner', 1223, 8, 1223, 13),
woosh.Token(woosh.OP, '(', 1223, 13, 1223, 14),
woosh.Token(woosh.NAME, 'self', 1223, 14, 1223, 18),
woosh.Token(woosh.OP, ')', 1223, 18, 1223, 19),
woosh.Token(woosh.OP, ':', 1223, 19, 1223, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1223, 20, 1224, 0),
woosh.Token(woosh.INDENT, '        ', 1224, 0, 1224, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return the login name of the file owner.\r\n        """', 1224, 8, 1226, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1226, 11, 1227, 0),
woosh.Token(woosh.NAME, 'return', 1227, 8, 1227, 14),
woosh.Token(woosh.NAME, 'self', 1227, 15, 1227, 19),
woosh.Token(woosh.OP, '.', 1227, 19, 1227, 20),
woosh.Token(woosh.NAME, '_accessor', 1227, 20, 1227, 29),
woosh.Token(woosh.OP, '.', 1227, 29, 1227, 30),
woosh.Token(woosh.NAME, 'owner', 1227, 30, 1227, 35),
woosh.Token(woosh.OP, '(', 1227, 35, 1227, 36),
woosh.Token(woosh.NAME, 'self', 1227, 36, 1227, 40),
woosh.Token(woosh.OP, ')', 1227, 40, 1227, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1227, 41, 1228, 0),
woosh.Token(woosh.DEDENT, '    ', 1229, 0, 1229, 4),
woosh.Token(woosh.NAME, 'def', 1229, 4, 1229, 7),
woosh.Token(woosh.NAME, 'group', 1229, 8, 1229, 13),
woosh.Token(woosh.OP, '(', 1229, 13, 1229, 14),
woosh.Token(woosh.NAME, 'self', 1229, 14, 1229, 18),
woosh.Token(woosh.OP, ')', 1229, 18, 1229, 19),
woosh.Token(woosh.OP, ':', 1229, 19, 1229, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1229, 20, 1230, 0),
woosh.Token(woosh.INDENT, '        ', 1230, 0, 1230, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return the group name of the file gid.\r\n        """', 1230, 8, 1232, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1232, 11, 1233, 0),
woosh.Token(woosh.NAME, 'return', 1233, 8, 1233, 14),
woosh.Token(woosh.NAME, 'self', 1233, 15, 1233, 19),
woosh.Token(woosh.OP, '.', 1233, 19, 1233, 20),
woosh.Token(woosh.NAME, '_accessor', 1233, 20, 1233, 29),
woosh.Token(woosh.OP, '.', 1233, 29, 1233, 30),
woosh.Token(woosh.NAME, 'group', 1233, 30, 1233, 35),
woosh.Token(woosh.OP, '(', 1233, 35, 1233, 36),
woosh.Token(woosh.NAME, 'self', 1233, 36, 1233, 40),
woosh.Token(woosh.OP, ')', 1233, 40, 1233, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1233, 41, 1234, 0),
woosh.Token(woosh.DEDENT, '    ', 1235, 0, 1235, 4),
woosh.Token(woosh.NAME, 'def', 1235, 4, 1235, 7),
woosh.Token(woosh.NAME, 'open', 1235, 8, 1235, 12),
woosh.Token(woosh.OP, '(', 1235, 12, 1235, 13),
woosh.Token(woosh.NAME, 'self', 1235, 13, 1235, 17),
woosh.Token(woosh.OP, ',', 1235, 17, 1235, 18),
woosh.Token(woosh.NAME, 'mode', 1235, 19, 1235, 23),
woosh.Token(woosh.OP, '=', 1235, 23, 1235, 24),
woosh.Token(woosh.STRING, "'r'", 1235, 24, 1235, 27),
woosh.Token(woosh.OP, ',', 1235, 27, 1235, 28),
woosh.Token(woosh.NAME, 'buffering', 1235, 29, 1235, 38),
woosh.Token(woosh.OP, '=', 1235, 38, 1235, 39),
woosh.Token(woosh.OP, '-', 1235, 39, 1235, 40),
woosh.Token(woosh.NUMBER, '1', 1235, 40, 1235, 41),
woosh.Token(woosh.OP, ',', 1235, 41, 1235, 42),
woosh.Token(woosh.NAME, 'encoding', 1235, 43, 1235, 51),
woosh.Token(woosh.OP, '=', 1235, 51, 1235, 52),
woosh.Token(woosh.NAME, 'None', 1235, 52, 1235, 56),
woosh.Token(woosh.OP, ',', 1235, 56, 1235, 57),
woosh.Token(woosh.NAME, 'errors', 1236, 13, 1236, 19),
woosh.Token(woosh.OP, '=', 1236, 19, 1236, 20),
woosh.Token(woosh.NAME, 'None', 1236, 20, 1236, 24),
woosh.Token(woosh.OP, ',', 1236, 24, 1236, 25),
woosh.Token(woosh.NAME, 'newline', 1236, 26, 1236, 33),
woosh.Token(woosh.OP, '=', 1236, 33, 1236, 34),
woosh.Token(woosh.NAME, 'None', 1236, 34, 1236, 38),
woosh.Token(woosh.OP, ')', 1236, 38, 1236, 39),
woosh.Token(woosh.OP, ':', 1236, 39, 1236, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1236, 40, 1237, 0),
woosh.Token(woosh.INDENT, '        ', 1237, 0, 1237, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file pointed by this path and return a file object, as\r\n        the built-in open() function does.\r\n        """', 1237, 8, 1240, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1240, 11, 1241, 0),
woosh.Token(woosh.NAME, 'return', 1241, 8, 1241, 14),
woosh.Token(woosh.NAME, 'io', 1241, 15, 1241, 17),
woosh.Token(woosh.OP, '.', 1241, 17, 1241, 18),
woosh.Token(woosh.NAME, 'open', 1241, 18, 1241, 22),
woosh.Token(woosh.OP, '(', 1241, 22, 1241, 23),
woosh.Token(woosh.NAME, 'self', 1241, 23, 1241, 27),
woosh.Token(woosh.OP, ',', 1241, 27, 1241, 28),
woosh.Token(woosh.NAME, 'mode', 1241, 29, 1241, 33),
woosh.Token(woosh.OP, ',', 1241, 33, 1241, 34),
woosh.Token(woosh.NAME, 'buffering', 1241, 35, 1241, 44),
woosh.Token(woosh.OP, ',', 1241, 44, 1241, 45),
woosh.Token(woosh.NAME, 'encoding', 1241, 46, 1241, 54),
woosh.Token(woosh.OP, ',', 1241, 54, 1241, 55),
woosh.Token(woosh.NAME, 'errors', 1241, 56, 1241, 62),
woosh.Token(woosh.OP, ',', 1241, 62, 1241, 63),
woosh.Token(woosh.NAME, 'newline', 1241, 64, 1241, 71),
woosh.Token(woosh.OP, ',', 1241, 71, 1241, 72),
woosh.Token(woosh.NAME, 'opener', 1242, 23, 1242, 29),
woosh.Token(woosh.OP, '=', 1242, 29, 1242, 30),
woosh.Token(woosh.NAME, 'self', 1242, 30, 1242, 34),
woosh.Token(woosh.OP, '.', 1242, 34, 1242, 35),
woosh.Token(woosh.NAME, '_opener', 1242, 35, 1242, 42),
woosh.Token(woosh.OP, ')', 1242, 42, 1242, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1242, 43, 1243, 0),
woosh.Token(woosh.DEDENT, '    ', 1244, 0, 1244, 4),
woosh.Token(woosh.NAME, 'def', 1244, 4, 1244, 7),
woosh.Token(woosh.NAME, 'read_bytes', 1244, 8, 1244, 18),
woosh.Token(woosh.OP, '(', 1244, 18, 1244, 19),
woosh.Token(woosh.NAME, 'self', 1244, 19, 1244, 23),
woosh.Token(woosh.OP, ')', 1244, 23, 1244, 24),
woosh.Token(woosh.OP, ':', 1244, 24, 1244, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1244, 25, 1245, 0),
woosh.Token(woosh.INDENT, '        ', 1245, 0, 1245, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file in bytes mode, read it, and close the file.\r\n        """', 1245, 8, 1247, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1247, 11, 1248, 0),
woosh.Token(woosh.NAME, 'with', 1248, 8, 1248, 12),
woosh.Token(woosh.NAME, 'self', 1248, 13, 1248, 17),
woosh.Token(woosh.OP, '.', 1248, 17, 1248, 18),
woosh.Token(woosh.NAME, 'open', 1248, 18, 1248, 22),
woosh.Token(woosh.OP, '(', 1248, 22, 1248, 23),
woosh.Token(woosh.NAME, 'mode', 1248, 23, 1248, 27),
woosh.Token(woosh.OP, '=', 1248, 27, 1248, 28),
woosh.Token(woosh.STRING, "'rb'", 1248, 28, 1248, 32),
woosh.Token(woosh.OP, ')', 1248, 32, 1248, 33),
woosh.Token(woosh.NAME, 'as', 1248, 34, 1248, 36),
woosh.Token(woosh.NAME, 'f', 1248, 37, 1248, 38),
woosh.Token(woosh.OP, ':', 1248, 38, 1248, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1248, 39, 1249, 0),
woosh.Token(woosh.INDENT, '            ', 1249, 0, 1249, 12),
woosh.Token(woosh.NAME, 'return', 1249, 12, 1249, 18),
woosh.Token(woosh.NAME, 'f', 1249, 19, 1249, 20),
woosh.Token(woosh.OP, '.', 1249, 20, 1249, 21),
woosh.Token(woosh.NAME, 'read', 1249, 21, 1249, 25),
woosh.Token(woosh.OP, '(', 1249, 25, 1249, 26),
woosh.Token(woosh.OP, ')', 1249, 26, 1249, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1249, 27, 1250, 0),
woosh.Token(woosh.DEDENT, '    ', 1251, 0, 1251, 4),
woosh.Token(woosh.DEDENT, '', 1251, 4, 1251, 4),
woosh.Token(woosh.NAME, 'def', 1251, 4, 1251, 7),
woosh.Token(woosh.NAME, 'read_text', 1251, 8, 1251, 17),
woosh.Token(woosh.OP, '(', 1251, 17, 1251, 18),
woosh.Token(woosh.NAME, 'self', 1251, 18, 1251, 22),
woosh.Token(woosh.OP, ',', 1251, 22, 1251, 23),
woosh.Token(woosh.NAME, 'encoding', 1251, 24, 1251, 32),
woosh.Token(woosh.OP, '=', 1251, 32, 1251, 33),
woosh.Token(woosh.NAME, 'None', 1251, 33, 1251, 37),
woosh.Token(woosh.OP, ',', 1251, 37, 1251, 38),
woosh.Token(woosh.NAME, 'errors', 1251, 39, 1251, 45),
woosh.Token(woosh.OP, '=', 1251, 45, 1251, 46),
woosh.Token(woosh.NAME, 'None', 1251, 46, 1251, 50),
woosh.Token(woosh.OP, ')', 1251, 50, 1251, 51),
woosh.Token(woosh.OP, ':', 1251, 51, 1251, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1251, 52, 1252, 0),
woosh.Token(woosh.INDENT, '        ', 1252, 0, 1252, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file in text mode, read it, and close the file.\r\n        """', 1252, 8, 1254, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1254, 11, 1255, 0),
woosh.Token(woosh.NAME, 'with', 1255, 8, 1255, 12),
woosh.Token(woosh.NAME, 'self', 1255, 13, 1255, 17),
woosh.Token(woosh.OP, '.', 1255, 17, 1255, 18),
woosh.Token(woosh.NAME, 'open', 1255, 18, 1255, 22),
woosh.Token(woosh.OP, '(', 1255, 22, 1255, 23),
woosh.Token(woosh.NAME, 'mode', 1255, 23, 1255, 27),
woosh.Token(woosh.OP, '=', 1255, 27, 1255, 28),
woosh.Token(woosh.STRING, "'r'", 1255, 28, 1255, 31),
woosh.Token(woosh.OP, ',', 1255, 31, 1255, 32),
woosh.Token(woosh.NAME, 'encoding', 1255, 33, 1255, 41),
woosh.Token(woosh.OP, '=', 1255, 41, 1255, 42),
woosh.Token(woosh.NAME, 'encoding', 1255, 42, 1255, 50),
woosh.Token(woosh.OP, ',', 1255, 50, 1255, 51),
woosh.Token(woosh.NAME, 'errors', 1255, 52, 1255, 58),
woosh.Token(woosh.OP, '=', 1255, 58, 1255, 59),
woosh.Token(woosh.NAME, 'errors', 1255, 59, 1255, 65),
woosh.Token(woosh.OP, ')', 1255, 65, 1255, 66),
woosh.Token(woosh.NAME, 'as', 1255, 67, 1255, 69),
woosh.Token(woosh.NAME, 'f', 1255, 70, 1255, 71),
woosh.Token(woosh.OP, ':', 1255, 71, 1255, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1255, 72, 1256, 0),
woosh.Token(woosh.INDENT, '            ', 1256, 0, 1256, 12),
woosh.Token(woosh.NAME, 'return', 1256, 12, 1256, 18),
woosh.Token(woosh.NAME, 'f', 1256, 19, 1256, 20),
woosh.Token(woosh.OP, '.', 1256, 20, 1256, 21),
woosh.Token(woosh.NAME, 'read', 1256, 21, 1256, 25),
woosh.Token(woosh.OP, '(', 1256, 25, 1256, 26),
woosh.Token(woosh.OP, ')', 1256, 26, 1256, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1256, 27, 1257, 0),
woosh.Token(woosh.DEDENT, '    ', 1258, 0, 1258, 4),
woosh.Token(woosh.DEDENT, '', 1258, 4, 1258, 4),
woosh.Token(woosh.NAME, 'def', 1258, 4, 1258, 7),
woosh.Token(woosh.NAME, 'write_bytes', 1258, 8, 1258, 19),
woosh.Token(woosh.OP, '(', 1258, 19, 1258, 20),
woosh.Token(woosh.NAME, 'self', 1258, 20, 1258, 24),
woosh.Token(woosh.OP, ',', 1258, 24, 1258, 25),
woosh.Token(woosh.NAME, 'data', 1258, 26, 1258, 30),
woosh.Token(woosh.OP, ')', 1258, 30, 1258, 31),
woosh.Token(woosh.OP, ':', 1258, 31, 1258, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1258, 32, 1259, 0),
woosh.Token(woosh.INDENT, '        ', 1259, 0, 1259, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file in bytes mode, write to it, and close the file.\r\n        """', 1259, 8, 1261, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1261, 11, 1262, 0),
woosh.Token(woosh.COMMENT, '# type-check for the buffer interface before truncating the file', 1262, 8, 1262, 72),
woosh.Token(woosh.NAME, 'view', 1263, 8, 1263, 12),
woosh.Token(woosh.OP, '=', 1263, 13, 1263, 14),
woosh.Token(woosh.NAME, 'memoryview', 1263, 15, 1263, 25),
woosh.Token(woosh.OP, '(', 1263, 25, 1263, 26),
woosh.Token(woosh.NAME, 'data', 1263, 26, 1263, 30),
woosh.Token(woosh.OP, ')', 1263, 30, 1263, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1263, 31, 1264, 0),
woosh.Token(woosh.NAME, 'with', 1264, 8, 1264, 12),
woosh.Token(woosh.NAME, 'self', 1264, 13, 1264, 17),
woosh.Token(woosh.OP, '.', 1264, 17, 1264, 18),
woosh.Token(woosh.NAME, 'open', 1264, 18, 1264, 22),
woosh.Token(woosh.OP, '(', 1264, 22, 1264, 23),
woosh.Token(woosh.NAME, 'mode', 1264, 23, 1264, 27),
woosh.Token(woosh.OP, '=', 1264, 27, 1264, 28),
woosh.Token(woosh.STRING, "'wb'", 1264, 28, 1264, 32),
woosh.Token(woosh.OP, ')', 1264, 32, 1264, 33),
woosh.Token(woosh.NAME, 'as', 1264, 34, 1264, 36),
woosh.Token(woosh.NAME, 'f', 1264, 37, 1264, 38),
woosh.Token(woosh.OP, ':', 1264, 38, 1264, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1264, 39, 1265, 0),
woosh.Token(woosh.INDENT, '            ', 1265, 0, 1265, 12),
woosh.Token(woosh.NAME, 'return', 1265, 12, 1265, 18),
woosh.Token(woosh.NAME, 'f', 1265, 19, 1265, 20),
woosh.Token(woosh.OP, '.', 1265, 20, 1265, 21),
woosh.Token(woosh.NAME, 'write', 1265, 21, 1265, 26),
woosh.Token(woosh.OP, '(', 1265, 26, 1265, 27),
woosh.Token(woosh.NAME, 'view', 1265, 27, 1265, 31),
woosh.Token(woosh.OP, ')', 1265, 31, 1265, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1265, 32, 1266, 0),
woosh.Token(woosh.DEDENT, '    ', 1267, 0, 1267, 4),
woosh.Token(woosh.DEDENT, '', 1267, 4, 1267, 4),
woosh.Token(woosh.NAME, 'def', 1267, 4, 1267, 7),
woosh.Token(woosh.NAME, 'write_text', 1267, 8, 1267, 18),
woosh.Token(woosh.OP, '(', 1267, 18, 1267, 19),
woosh.Token(woosh.NAME, 'self', 1267, 19, 1267, 23),
woosh.Token(woosh.OP, ',', 1267, 23, 1267, 24),
woosh.Token(woosh.NAME, 'data', 1267, 25, 1267, 29),
woosh.Token(woosh.OP, ',', 1267, 29, 1267, 30),
woosh.Token(woosh.NAME, 'encoding', 1267, 31, 1267, 39),
woosh.Token(woosh.OP, '=', 1267, 39, 1267, 40),
woosh.Token(woosh.NAME, 'None', 1267, 40, 1267, 44),
woosh.Token(woosh.OP, ',', 1267, 44, 1267, 45),
woosh.Token(woosh.NAME, 'errors', 1267, 46, 1267, 52),
woosh.Token(woosh.OP, '=', 1267, 52, 1267, 53),
woosh.Token(woosh.NAME, 'None', 1267, 53, 1267, 57),
woosh.Token(woosh.OP, ')', 1267, 57, 1267, 58),
woosh.Token(woosh.OP, ':', 1267, 58, 1267, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 1267, 59, 1268, 0),
woosh.Token(woosh.INDENT, '        ', 1268, 0, 1268, 8),
woosh.Token(woosh.STRING, '"""\r\n        Open the file in text mode, write to it, and close the file.\r\n        """', 1268, 8, 1270, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1270, 11, 1271, 0),
woosh.Token(woosh.NAME, 'if', 1271, 8, 1271, 10),
woosh.Token(woosh.NAME, 'not', 1271, 11, 1271, 14),
woosh.Token(woosh.NAME, 'isinstance', 1271, 15, 1271, 25),
woosh.Token(woosh.OP, '(', 1271, 25, 1271, 26),
woosh.Token(woosh.NAME, 'data', 1271, 26, 1271, 30),
woosh.Token(woosh.OP, ',', 1271, 30, 1271, 31),
woosh.Token(woosh.NAME, 'str', 1271, 32, 1271, 35),
woosh.Token(woosh.OP, ')', 1271, 35, 1271, 36),
woosh.Token(woosh.OP, ':', 1271, 36, 1271, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1271, 37, 1272, 0),
woosh.Token(woosh.INDENT, '            ', 1272, 0, 1272, 12),
woosh.Token(woosh.NAME, 'raise', 1272, 12, 1272, 17),
woosh.Token(woosh.NAME, 'TypeError', 1272, 18, 1272, 27),
woosh.Token(woosh.OP, '(', 1272, 27, 1272, 28),
woosh.Token(woosh.STRING, "'data must be str, not %s'", 1272, 28, 1272, 54),
woosh.Token(woosh.OP, '%', 1272, 55, 1272, 56),
woosh.Token(woosh.NAME, 'data', 1273, 28, 1273, 32),
woosh.Token(woosh.OP, '.', 1273, 32, 1273, 33),
woosh.Token(woosh.NAME, '__class__', 1273, 33, 1273, 42),
woosh.Token(woosh.OP, '.', 1273, 42, 1273, 43),
woosh.Token(woosh.NAME, '__name__', 1273, 43, 1273, 51),
woosh.Token(woosh.OP, ')', 1273, 51, 1273, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1273, 52, 1274, 0),
woosh.Token(woosh.DEDENT, '        ', 1274, 0, 1274, 8),
woosh.Token(woosh.NAME, 'with', 1274, 8, 1274, 12),
woosh.Token(woosh.NAME, 'self', 1274, 13, 1274, 17),
woosh.Token(woosh.OP, '.', 1274, 17, 1274, 18),
woosh.Token(woosh.NAME, 'open', 1274, 18, 1274, 22),
woosh.Token(woosh.OP, '(', 1274, 22, 1274, 23),
woosh.Token(woosh.NAME, 'mode', 1274, 23, 1274, 27),
woosh.Token(woosh.OP, '=', 1274, 27, 1274, 28),
woosh.Token(woosh.STRING, "'w'", 1274, 28, 1274, 31),
woosh.Token(woosh.OP, ',', 1274, 31, 1274, 32),
woosh.Token(woosh.NAME, 'encoding', 1274, 33, 1274, 41),
woosh.Token(woosh.OP, '=', 1274, 41, 1274, 42),
woosh.Token(woosh.NAME, 'encoding', 1274, 42, 1274, 50),
woosh.Token(woosh.OP, ',', 1274, 50, 1274, 51),
woosh.Token(woosh.NAME, 'errors', 1274, 52, 1274, 58),
woosh.Token(woosh.OP, '=', 1274, 58, 1274, 59),
woosh.Token(woosh.NAME, 'errors', 1274, 59, 1274, 65),
woosh.Token(woosh.OP, ')', 1274, 65, 1274, 66),
woosh.Token(woosh.NAME, 'as', 1274, 67, 1274, 69),
woosh.Token(woosh.NAME, 'f', 1274, 70, 1274, 71),
woosh.Token(woosh.OP, ':', 1274, 71, 1274, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1274, 72, 1275, 0),
woosh.Token(woosh.INDENT, '            ', 1275, 0, 1275, 12),
woosh.Token(woosh.NAME, 'return', 1275, 12, 1275, 18),
woosh.Token(woosh.NAME, 'f', 1275, 19, 1275, 20),
woosh.Token(woosh.OP, '.', 1275, 20, 1275, 21),
woosh.Token(woosh.NAME, 'write', 1275, 21, 1275, 26),
woosh.Token(woosh.OP, '(', 1275, 26, 1275, 27),
woosh.Token(woosh.NAME, 'data', 1275, 27, 1275, 31),
woosh.Token(woosh.OP, ')', 1275, 31, 1275, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1275, 32, 1276, 0),
woosh.Token(woosh.DEDENT, '    ', 1277, 0, 1277, 4),
woosh.Token(woosh.DEDENT, '', 1277, 4, 1277, 4),
woosh.Token(woosh.NAME, 'def', 1277, 4, 1277, 7),
woosh.Token(woosh.NAME, 'readlink', 1277, 8, 1277, 16),
woosh.Token(woosh.OP, '(', 1277, 16, 1277, 17),
woosh.Token(woosh.NAME, 'self', 1277, 17, 1277, 21),
woosh.Token(woosh.OP, ')', 1277, 21, 1277, 22),
woosh.Token(woosh.OP, ':', 1277, 22, 1277, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1277, 23, 1278, 0),
woosh.Token(woosh.INDENT, '        ', 1278, 0, 1278, 8),
woosh.Token(woosh.STRING, '"""\r\n        Return the path to which the symbolic link points.\r\n        """', 1278, 8, 1280, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1280, 11, 1281, 0),
woosh.Token(woosh.NAME, 'path', 1281, 8, 1281, 12),
woosh.Token(woosh.OP, '=', 1281, 13, 1281, 14),
woosh.Token(woosh.NAME, 'self', 1281, 15, 1281, 19),
woosh.Token(woosh.OP, '.', 1281, 19, 1281, 20),
woosh.Token(woosh.NAME, '_accessor', 1281, 20, 1281, 29),
woosh.Token(woosh.OP, '.', 1281, 29, 1281, 30),
woosh.Token(woosh.NAME, 'readlink', 1281, 30, 1281, 38),
woosh.Token(woosh.OP, '(', 1281, 38, 1281, 39),
woosh.Token(woosh.NAME, 'self', 1281, 39, 1281, 43),
woosh.Token(woosh.OP, ')', 1281, 43, 1281, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1281, 44, 1282, 0),
woosh.Token(woosh.NAME, 'obj', 1282, 8, 1282, 11),
woosh.Token(woosh.OP, '=', 1282, 12, 1282, 13),
woosh.Token(woosh.NAME, 'self', 1282, 14, 1282, 18),
woosh.Token(woosh.OP, '.', 1282, 18, 1282, 19),
woosh.Token(woosh.NAME, '_from_parts', 1282, 19, 1282, 30),
woosh.Token(woosh.OP, '(', 1282, 30, 1282, 31),
woosh.Token(woosh.OP, '(', 1282, 31, 1282, 32),
woosh.Token(woosh.NAME, 'path', 1282, 32, 1282, 36),
woosh.Token(woosh.OP, ',', 1282, 36, 1282, 37),
woosh.Token(woosh.OP, ')', 1282, 37, 1282, 38),
woosh.Token(woosh.OP, ',', 1282, 38, 1282, 39),
woosh.Token(woosh.NAME, 'init', 1282, 40, 1282, 44),
woosh.Token(woosh.OP, '=', 1282, 44, 1282, 45),
woosh.Token(woosh.NAME, 'False', 1282, 45, 1282, 50),
woosh.Token(woosh.OP, ')', 1282, 50, 1282, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1282, 51, 1283, 0),
woosh.Token(woosh.NAME, 'obj', 1283, 8, 1283, 11),
woosh.Token(woosh.OP, '.', 1283, 11, 1283, 12),
woosh.Token(woosh.NAME, '_init', 1283, 12, 1283, 17),
woosh.Token(woosh.OP, '(', 1283, 17, 1283, 18),
woosh.Token(woosh.NAME, 'template', 1283, 18, 1283, 26),
woosh.Token(woosh.OP, '=', 1283, 26, 1283, 27),
woosh.Token(woosh.NAME, 'self', 1283, 27, 1283, 31),
woosh.Token(woosh.OP, ')', 1283, 31, 1283, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1283, 32, 1284, 0),
woosh.Token(woosh.NAME, 'return', 1284, 8, 1284, 14),
woosh.Token(woosh.NAME, 'obj', 1284, 15, 1284, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1284, 18, 1285, 0),
woosh.Token(woosh.DEDENT, '    ', 1286, 0, 1286, 4),
woosh.Token(woosh.NAME, 'def', 1286, 4, 1286, 7),
woosh.Token(woosh.NAME, 'touch', 1286, 8, 1286, 13),
woosh.Token(woosh.OP, '(', 1286, 13, 1286, 14),
woosh.Token(woosh.NAME, 'self', 1286, 14, 1286, 18),
woosh.Token(woosh.OP, ',', 1286, 18, 1286, 19),
woosh.Token(woosh.NAME, 'mode', 1286, 20, 1286, 24),
woosh.Token(woosh.OP, '=', 1286, 24, 1286, 25),
woosh.Token(woosh.NUMBER, '0o666', 1286, 25, 1286, 30),
woosh.Token(woosh.OP, ',', 1286, 30, 1286, 31),
woosh.Token(woosh.NAME, 'exist_ok', 1286, 32, 1286, 40),
woosh.Token(woosh.OP, '=', 1286, 40, 1286, 41),
woosh.Token(woosh.NAME, 'True', 1286, 41, 1286, 45),
woosh.Token(woosh.OP, ')', 1286, 45, 1286, 46),
woosh.Token(woosh.OP, ':', 1286, 46, 1286, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1286, 47, 1287, 0),
woosh.Token(woosh.INDENT, '        ', 1287, 0, 1287, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create this file with the given access mode, if it doesn\'t exist.\r\n        """', 1287, 8, 1289, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1289, 11, 1290, 0),
woosh.Token(woosh.NAME, 'if', 1290, 8, 1290, 10),
woosh.Token(woosh.NAME, 'exist_ok', 1290, 11, 1290, 19),
woosh.Token(woosh.OP, ':', 1290, 19, 1290, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1290, 20, 1291, 0),
woosh.Token(woosh.COMMENT, '# First try to bump modification time', 1291, 12, 1291, 49),
woosh.Token(woosh.COMMENT, '# Implementation note: GNU touch uses the UTIME_NOW option of', 1292, 12, 1292, 73),
woosh.Token(woosh.COMMENT, '# the utimensat() / futimens() functions.', 1293, 12, 1293, 53),
woosh.Token(woosh.INDENT, '            ', 1294, 0, 1294, 12),
woosh.Token(woosh.NAME, 'try', 1294, 12, 1294, 15),
woosh.Token(woosh.OP, ':', 1294, 15, 1294, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1294, 16, 1295, 0),
woosh.Token(woosh.INDENT, '                ', 1295, 0, 1295, 16),
woosh.Token(woosh.NAME, 'self', 1295, 16, 1295, 20),
woosh.Token(woosh.OP, '.', 1295, 20, 1295, 21),
woosh.Token(woosh.NAME, '_accessor', 1295, 21, 1295, 30),
woosh.Token(woosh.OP, '.', 1295, 30, 1295, 31),
woosh.Token(woosh.NAME, 'utime', 1295, 31, 1295, 36),
woosh.Token(woosh.OP, '(', 1295, 36, 1295, 37),
woosh.Token(woosh.NAME, 'self', 1295, 37, 1295, 41),
woosh.Token(woosh.OP, ',', 1295, 41, 1295, 42),
woosh.Token(woosh.NAME, 'None', 1295, 43, 1295, 47),
woosh.Token(woosh.OP, ')', 1295, 47, 1295, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1295, 48, 1296, 0),
woosh.Token(woosh.DEDENT, '            ', 1296, 0, 1296, 12),
woosh.Token(woosh.NAME, 'except', 1296, 12, 1296, 18),
woosh.Token(woosh.NAME, 'OSError', 1296, 19, 1296, 26),
woosh.Token(woosh.OP, ':', 1296, 26, 1296, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1296, 27, 1297, 0),
woosh.Token(woosh.COMMENT, '# Avoid exception chaining', 1297, 16, 1297, 42),
woosh.Token(woosh.INDENT, '                ', 1298, 0, 1298, 16),
woosh.Token(woosh.NAME, 'pass', 1298, 16, 1298, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1298, 20, 1299, 0),
woosh.Token(woosh.DEDENT, '            ', 1299, 0, 1299, 12),
woosh.Token(woosh.NAME, 'else', 1299, 12, 1299, 16),
woosh.Token(woosh.OP, ':', 1299, 16, 1299, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1299, 17, 1300, 0),
woosh.Token(woosh.INDENT, '                ', 1300, 0, 1300, 16),
woosh.Token(woosh.NAME, 'return', 1300, 16, 1300, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1300, 22, 1301, 0),
woosh.Token(woosh.DEDENT, '        ', 1301, 0, 1301, 8),
woosh.Token(woosh.DEDENT, '', 1301, 8, 1301, 8),
woosh.Token(woosh.NAME, 'flags', 1301, 8, 1301, 13),
woosh.Token(woosh.OP, '=', 1301, 14, 1301, 15),
woosh.Token(woosh.NAME, 'os', 1301, 16, 1301, 18),
woosh.Token(woosh.OP, '.', 1301, 18, 1301, 19),
woosh.Token(woosh.NAME, 'O_CREAT', 1301, 19, 1301, 26),
woosh.Token(woosh.OP, '|', 1301, 27, 1301, 28),
woosh.Token(woosh.NAME, 'os', 1301, 29, 1301, 31),
woosh.Token(woosh.OP, '.', 1301, 31, 1301, 32),
woosh.Token(woosh.NAME, 'O_WRONLY', 1301, 32, 1301, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1301, 40, 1302, 0),
woosh.Token(woosh.NAME, 'if', 1302, 8, 1302, 10),
woosh.Token(woosh.NAME, 'not', 1302, 11, 1302, 14),
woosh.Token(woosh.NAME, 'exist_ok', 1302, 15, 1302, 23),
woosh.Token(woosh.OP, ':', 1302, 23, 1302, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1302, 24, 1303, 0),
woosh.Token(woosh.INDENT, '            ', 1303, 0, 1303, 12),
woosh.Token(woosh.NAME, 'flags', 1303, 12, 1303, 17),
woosh.Token(woosh.OP, '|=', 1303, 18, 1303, 20),
woosh.Token(woosh.NAME, 'os', 1303, 21, 1303, 23),
woosh.Token(woosh.OP, '.', 1303, 23, 1303, 24),
woosh.Token(woosh.NAME, 'O_EXCL', 1303, 24, 1303, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1303, 30, 1304, 0),
woosh.Token(woosh.DEDENT, '        ', 1304, 0, 1304, 8),
woosh.Token(woosh.NAME, 'fd', 1304, 8, 1304, 10),
woosh.Token(woosh.OP, '=', 1304, 11, 1304, 12),
woosh.Token(woosh.NAME, 'self', 1304, 13, 1304, 17),
woosh.Token(woosh.OP, '.', 1304, 17, 1304, 18),
woosh.Token(woosh.NAME, '_raw_open', 1304, 18, 1304, 27),
woosh.Token(woosh.OP, '(', 1304, 27, 1304, 28),
woosh.Token(woosh.NAME, 'flags', 1304, 28, 1304, 33),
woosh.Token(woosh.OP, ',', 1304, 33, 1304, 34),
woosh.Token(woosh.NAME, 'mode', 1304, 35, 1304, 39),
woosh.Token(woosh.OP, ')', 1304, 39, 1304, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1304, 40, 1305, 0),
woosh.Token(woosh.NAME, 'os', 1305, 8, 1305, 10),
woosh.Token(woosh.OP, '.', 1305, 10, 1305, 11),
woosh.Token(woosh.NAME, 'close', 1305, 11, 1305, 16),
woosh.Token(woosh.OP, '(', 1305, 16, 1305, 17),
woosh.Token(woosh.NAME, 'fd', 1305, 17, 1305, 19),
woosh.Token(woosh.OP, ')', 1305, 19, 1305, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1305, 20, 1306, 0),
woosh.Token(woosh.DEDENT, '    ', 1307, 0, 1307, 4),
woosh.Token(woosh.NAME, 'def', 1307, 4, 1307, 7),
woosh.Token(woosh.NAME, 'mkdir', 1307, 8, 1307, 13),
woosh.Token(woosh.OP, '(', 1307, 13, 1307, 14),
woosh.Token(woosh.NAME, 'self', 1307, 14, 1307, 18),
woosh.Token(woosh.OP, ',', 1307, 18, 1307, 19),
woosh.Token(woosh.NAME, 'mode', 1307, 20, 1307, 24),
woosh.Token(woosh.OP, '=', 1307, 24, 1307, 25),
woosh.Token(woosh.NUMBER, '0o777', 1307, 25, 1307, 30),
woosh.Token(woosh.OP, ',', 1307, 30, 1307, 31),
woosh.Token(woosh.NAME, 'parents', 1307, 32, 1307, 39),
woosh.Token(woosh.OP, '=', 1307, 39, 1307, 40),
woosh.Token(woosh.NAME, 'False', 1307, 40, 1307, 45),
woosh.Token(woosh.OP, ',', 1307, 45, 1307, 46),
woosh.Token(woosh.NAME, 'exist_ok', 1307, 47, 1307, 55),
woosh.Token(woosh.OP, '=', 1307, 55, 1307, 56),
woosh.Token(woosh.NAME, 'False', 1307, 56, 1307, 61),
woosh.Token(woosh.OP, ')', 1307, 61, 1307, 62),
woosh.Token(woosh.OP, ':', 1307, 62, 1307, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1307, 63, 1308, 0),
woosh.Token(woosh.INDENT, '        ', 1308, 0, 1308, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create a new directory at this given path.\r\n        """', 1308, 8, 1310, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1310, 11, 1311, 0),
woosh.Token(woosh.NAME, 'try', 1311, 8, 1311, 11),
woosh.Token(woosh.OP, ':', 1311, 11, 1311, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1311, 12, 1312, 0),
woosh.Token(woosh.INDENT, '            ', 1312, 0, 1312, 12),
woosh.Token(woosh.NAME, 'self', 1312, 12, 1312, 16),
woosh.Token(woosh.OP, '.', 1312, 16, 1312, 17),
woosh.Token(woosh.NAME, '_accessor', 1312, 17, 1312, 26),
woosh.Token(woosh.OP, '.', 1312, 26, 1312, 27),
woosh.Token(woosh.NAME, 'mkdir', 1312, 27, 1312, 32),
woosh.Token(woosh.OP, '(', 1312, 32, 1312, 33),
woosh.Token(woosh.NAME, 'self', 1312, 33, 1312, 37),
woosh.Token(woosh.OP, ',', 1312, 37, 1312, 38),
woosh.Token(woosh.NAME, 'mode', 1312, 39, 1312, 43),
woosh.Token(woosh.OP, ')', 1312, 43, 1312, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1312, 44, 1313, 0),
woosh.Token(woosh.DEDENT, '        ', 1313, 0, 1313, 8),
woosh.Token(woosh.NAME, 'except', 1313, 8, 1313, 14),
woosh.Token(woosh.NAME, 'FileNotFoundError', 1313, 15, 1313, 32),
woosh.Token(woosh.OP, ':', 1313, 32, 1313, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1313, 33, 1314, 0),
woosh.Token(woosh.INDENT, '            ', 1314, 0, 1314, 12),
woosh.Token(woosh.NAME, 'if', 1314, 12, 1314, 14),
woosh.Token(woosh.NAME, 'not', 1314, 15, 1314, 18),
woosh.Token(woosh.NAME, 'parents', 1314, 19, 1314, 26),
woosh.Token(woosh.NAME, 'or', 1314, 27, 1314, 29),
woosh.Token(woosh.NAME, 'self', 1314, 30, 1314, 34),
woosh.Token(woosh.OP, '.', 1314, 34, 1314, 35),
woosh.Token(woosh.NAME, 'parent', 1314, 35, 1314, 41),
woosh.Token(woosh.OP, '==', 1314, 42, 1314, 44),
woosh.Token(woosh.NAME, 'self', 1314, 45, 1314, 49),
woosh.Token(woosh.OP, ':', 1314, 49, 1314, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1314, 50, 1315, 0),
woosh.Token(woosh.INDENT, '                ', 1315, 0, 1315, 16),
woosh.Token(woosh.NAME, 'raise', 1315, 16, 1315, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1315, 21, 1316, 0),
woosh.Token(woosh.DEDENT, '            ', 1316, 0, 1316, 12),
woosh.Token(woosh.NAME, 'self', 1316, 12, 1316, 16),
woosh.Token(woosh.OP, '.', 1316, 16, 1316, 17),
woosh.Token(woosh.NAME, 'parent', 1316, 17, 1316, 23),
woosh.Token(woosh.OP, '.', 1316, 23, 1316, 24),
woosh.Token(woosh.NAME, 'mkdir', 1316, 24, 1316, 29),
woosh.Token(woosh.OP, '(', 1316, 29, 1316, 30),
woosh.Token(woosh.NAME, 'parents', 1316, 30, 1316, 37),
woosh.Token(woosh.OP, '=', 1316, 37, 1316, 38),
woosh.Token(woosh.NAME, 'True', 1316, 38, 1316, 42),
woosh.Token(woosh.OP, ',', 1316, 42, 1316, 43),
woosh.Token(woosh.NAME, 'exist_ok', 1316, 44, 1316, 52),
woosh.Token(woosh.OP, '=', 1316, 52, 1316, 53),
woosh.Token(woosh.NAME, 'True', 1316, 53, 1316, 57),
woosh.Token(woosh.OP, ')', 1316, 57, 1316, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1316, 58, 1317, 0),
woosh.Token(woosh.NAME, 'self', 1317, 12, 1317, 16),
woosh.Token(woosh.OP, '.', 1317, 16, 1317, 17),
woosh.Token(woosh.NAME, 'mkdir', 1317, 17, 1317, 22),
woosh.Token(woosh.OP, '(', 1317, 22, 1317, 23),
woosh.Token(woosh.NAME, 'mode', 1317, 23, 1317, 27),
woosh.Token(woosh.OP, ',', 1317, 27, 1317, 28),
woosh.Token(woosh.NAME, 'parents', 1317, 29, 1317, 36),
woosh.Token(woosh.OP, '=', 1317, 36, 1317, 37),
woosh.Token(woosh.NAME, 'False', 1317, 37, 1317, 42),
woosh.Token(woosh.OP, ',', 1317, 42, 1317, 43),
woosh.Token(woosh.NAME, 'exist_ok', 1317, 44, 1317, 52),
woosh.Token(woosh.OP, '=', 1317, 52, 1317, 53),
woosh.Token(woosh.NAME, 'exist_ok', 1317, 53, 1317, 61),
woosh.Token(woosh.OP, ')', 1317, 61, 1317, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1317, 62, 1318, 0),
woosh.Token(woosh.DEDENT, '        ', 1318, 0, 1318, 8),
woosh.Token(woosh.NAME, 'except', 1318, 8, 1318, 14),
woosh.Token(woosh.NAME, 'OSError', 1318, 15, 1318, 22),
woosh.Token(woosh.OP, ':', 1318, 22, 1318, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1318, 23, 1319, 0),
woosh.Token(woosh.COMMENT, '# Cannot rely on checking for EEXIST, since the operating system', 1319, 12, 1319, 76),
woosh.Token(woosh.COMMENT, '# could give priority to other errors like EACCES or EROFS', 1320, 12, 1320, 70),
woosh.Token(woosh.INDENT, '            ', 1321, 0, 1321, 12),
woosh.Token(woosh.NAME, 'if', 1321, 12, 1321, 14),
woosh.Token(woosh.NAME, 'not', 1321, 15, 1321, 18),
woosh.Token(woosh.NAME, 'exist_ok', 1321, 19, 1321, 27),
woosh.Token(woosh.NAME, 'or', 1321, 28, 1321, 30),
woosh.Token(woosh.NAME, 'not', 1321, 31, 1321, 34),
woosh.Token(woosh.NAME, 'self', 1321, 35, 1321, 39),
woosh.Token(woosh.OP, '.', 1321, 39, 1321, 40),
woosh.Token(woosh.NAME, 'is_dir', 1321, 40, 1321, 46),
woosh.Token(woosh.OP, '(', 1321, 46, 1321, 47),
woosh.Token(woosh.OP, ')', 1321, 47, 1321, 48),
woosh.Token(woosh.OP, ':', 1321, 48, 1321, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1321, 49, 1322, 0),
woosh.Token(woosh.INDENT, '                ', 1322, 0, 1322, 16),
woosh.Token(woosh.NAME, 'raise', 1322, 16, 1322, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1322, 21, 1323, 0),
woosh.Token(woosh.DEDENT, '    ', 1324, 0, 1324, 4),
woosh.Token(woosh.DEDENT, '', 1324, 4, 1324, 4),
woosh.Token(woosh.DEDENT, '', 1324, 4, 1324, 4),
woosh.Token(woosh.NAME, 'def', 1324, 4, 1324, 7),
woosh.Token(woosh.NAME, 'chmod', 1324, 8, 1324, 13),
woosh.Token(woosh.OP, '(', 1324, 13, 1324, 14),
woosh.Token(woosh.NAME, 'self', 1324, 14, 1324, 18),
woosh.Token(woosh.OP, ',', 1324, 18, 1324, 19),
woosh.Token(woosh.NAME, 'mode', 1324, 20, 1324, 24),
woosh.Token(woosh.OP, ')', 1324, 24, 1324, 25),
woosh.Token(woosh.OP, ':', 1324, 25, 1324, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1324, 26, 1325, 0),
woosh.Token(woosh.INDENT, '        ', 1325, 0, 1325, 8),
woosh.Token(woosh.STRING, '"""\r\n        Change the permissions of the path, like os.chmod().\r\n        """', 1325, 8, 1327, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1327, 11, 1328, 0),
woosh.Token(woosh.NAME, 'self', 1328, 8, 1328, 12),
woosh.Token(woosh.OP, '.', 1328, 12, 1328, 13),
woosh.Token(woosh.NAME, '_accessor', 1328, 13, 1328, 22),
woosh.Token(woosh.OP, '.', 1328, 22, 1328, 23),
woosh.Token(woosh.NAME, 'chmod', 1328, 23, 1328, 28),
woosh.Token(woosh.OP, '(', 1328, 28, 1328, 29),
woosh.Token(woosh.NAME, 'self', 1328, 29, 1328, 33),
woosh.Token(woosh.OP, ',', 1328, 33, 1328, 34),
woosh.Token(woosh.NAME, 'mode', 1328, 35, 1328, 39),
woosh.Token(woosh.OP, ')', 1328, 39, 1328, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1328, 40, 1329, 0),
woosh.Token(woosh.DEDENT, '    ', 1330, 0, 1330, 4),
woosh.Token(woosh.NAME, 'def', 1330, 4, 1330, 7),
woosh.Token(woosh.NAME, 'lchmod', 1330, 8, 1330, 14),
woosh.Token(woosh.OP, '(', 1330, 14, 1330, 15),
woosh.Token(woosh.NAME, 'self', 1330, 15, 1330, 19),
woosh.Token(woosh.OP, ',', 1330, 19, 1330, 20),
woosh.Token(woosh.NAME, 'mode', 1330, 21, 1330, 25),
woosh.Token(woosh.OP, ')', 1330, 25, 1330, 26),
woosh.Token(woosh.OP, ':', 1330, 26, 1330, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1330, 27, 1331, 0),
woosh.Token(woosh.INDENT, '        ', 1331, 0, 1331, 8),
woosh.Token(woosh.STRING, '"""\r\n        Like chmod(), except if the path points to a symlink, the symlink\'s\r\n        permissions are changed, rather than its target\'s.\r\n        """', 1331, 8, 1334, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1334, 11, 1335, 0),
woosh.Token(woosh.NAME, 'self', 1335, 8, 1335, 12),
woosh.Token(woosh.OP, '.', 1335, 12, 1335, 13),
woosh.Token(woosh.NAME, '_accessor', 1335, 13, 1335, 22),
woosh.Token(woosh.OP, '.', 1335, 22, 1335, 23),
woosh.Token(woosh.NAME, 'lchmod', 1335, 23, 1335, 29),
woosh.Token(woosh.OP, '(', 1335, 29, 1335, 30),
woosh.Token(woosh.NAME, 'self', 1335, 30, 1335, 34),
woosh.Token(woosh.OP, ',', 1335, 34, 1335, 35),
woosh.Token(woosh.NAME, 'mode', 1335, 36, 1335, 40),
woosh.Token(woosh.OP, ')', 1335, 40, 1335, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1335, 41, 1336, 0),
woosh.Token(woosh.DEDENT, '    ', 1337, 0, 1337, 4),
woosh.Token(woosh.NAME, 'def', 1337, 4, 1337, 7),
woosh.Token(woosh.NAME, 'unlink', 1337, 8, 1337, 14),
woosh.Token(woosh.OP, '(', 1337, 14, 1337, 15),
woosh.Token(woosh.NAME, 'self', 1337, 15, 1337, 19),
woosh.Token(woosh.OP, ',', 1337, 19, 1337, 20),
woosh.Token(woosh.NAME, 'missing_ok', 1337, 21, 1337, 31),
woosh.Token(woosh.OP, '=', 1337, 31, 1337, 32),
woosh.Token(woosh.NAME, 'False', 1337, 32, 1337, 37),
woosh.Token(woosh.OP, ')', 1337, 37, 1337, 38),
woosh.Token(woosh.OP, ':', 1337, 38, 1337, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1337, 39, 1338, 0),
woosh.Token(woosh.INDENT, '        ', 1338, 0, 1338, 8),
woosh.Token(woosh.STRING, '"""\r\n        Remove this file or link.\r\n        If the path is a directory, use rmdir() instead.\r\n        """', 1338, 8, 1341, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1341, 11, 1342, 0),
woosh.Token(woosh.NAME, 'try', 1342, 8, 1342, 11),
woosh.Token(woosh.OP, ':', 1342, 11, 1342, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1342, 12, 1343, 0),
woosh.Token(woosh.INDENT, '            ', 1343, 0, 1343, 12),
woosh.Token(woosh.NAME, 'self', 1343, 12, 1343, 16),
woosh.Token(woosh.OP, '.', 1343, 16, 1343, 17),
woosh.Token(woosh.NAME, '_accessor', 1343, 17, 1343, 26),
woosh.Token(woosh.OP, '.', 1343, 26, 1343, 27),
woosh.Token(woosh.NAME, 'unlink', 1343, 27, 1343, 33),
woosh.Token(woosh.OP, '(', 1343, 33, 1343, 34),
woosh.Token(woosh.NAME, 'self', 1343, 34, 1343, 38),
woosh.Token(woosh.OP, ')', 1343, 38, 1343, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1343, 39, 1344, 0),
woosh.Token(woosh.DEDENT, '        ', 1344, 0, 1344, 8),
woosh.Token(woosh.NAME, 'except', 1344, 8, 1344, 14),
woosh.Token(woosh.NAME, 'FileNotFoundError', 1344, 15, 1344, 32),
woosh.Token(woosh.OP, ':', 1344, 32, 1344, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 1344, 33, 1345, 0),
woosh.Token(woosh.INDENT, '            ', 1345, 0, 1345, 12),
woosh.Token(woosh.NAME, 'if', 1345, 12, 1345, 14),
woosh.Token(woosh.NAME, 'not', 1345, 15, 1345, 18),
woosh.Token(woosh.NAME, 'missing_ok', 1345, 19, 1345, 29),
woosh.Token(woosh.OP, ':', 1345, 29, 1345, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1345, 30, 1346, 0),
woosh.Token(woosh.INDENT, '                ', 1346, 0, 1346, 16),
woosh.Token(woosh.NAME, 'raise', 1346, 16, 1346, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1346, 21, 1347, 0),
woosh.Token(woosh.DEDENT, '    ', 1348, 0, 1348, 4),
woosh.Token(woosh.DEDENT, '', 1348, 4, 1348, 4),
woosh.Token(woosh.DEDENT, '', 1348, 4, 1348, 4),
woosh.Token(woosh.NAME, 'def', 1348, 4, 1348, 7),
woosh.Token(woosh.NAME, 'rmdir', 1348, 8, 1348, 13),
woosh.Token(woosh.OP, '(', 1348, 13, 1348, 14),
woosh.Token(woosh.NAME, 'self', 1348, 14, 1348, 18),
woosh.Token(woosh.OP, ')', 1348, 18, 1348, 19),
woosh.Token(woosh.OP, ':', 1348, 19, 1348, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1348, 20, 1349, 0),
woosh.Token(woosh.INDENT, '        ', 1349, 0, 1349, 8),
woosh.Token(woosh.STRING, '"""\r\n        Remove this directory.  The directory must be empty.\r\n        """', 1349, 8, 1351, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1351, 11, 1352, 0),
woosh.Token(woosh.NAME, 'self', 1352, 8, 1352, 12),
woosh.Token(woosh.OP, '.', 1352, 12, 1352, 13),
woosh.Token(woosh.NAME, '_accessor', 1352, 13, 1352, 22),
woosh.Token(woosh.OP, '.', 1352, 22, 1352, 23),
woosh.Token(woosh.NAME, 'rmdir', 1352, 23, 1352, 28),
woosh.Token(woosh.OP, '(', 1352, 28, 1352, 29),
woosh.Token(woosh.NAME, 'self', 1352, 29, 1352, 33),
woosh.Token(woosh.OP, ')', 1352, 33, 1352, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1352, 34, 1353, 0),
woosh.Token(woosh.DEDENT, '    ', 1354, 0, 1354, 4),
woosh.Token(woosh.NAME, 'def', 1354, 4, 1354, 7),
woosh.Token(woosh.NAME, 'lstat', 1354, 8, 1354, 13),
woosh.Token(woosh.OP, '(', 1354, 13, 1354, 14),
woosh.Token(woosh.NAME, 'self', 1354, 14, 1354, 18),
woosh.Token(woosh.OP, ')', 1354, 18, 1354, 19),
woosh.Token(woosh.OP, ':', 1354, 19, 1354, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1354, 20, 1355, 0),
woosh.Token(woosh.INDENT, '        ', 1355, 0, 1355, 8),
woosh.Token(woosh.STRING, '"""\r\n        Like stat(), except if the path points to a symlink, the symlink\'s\r\n        status information is returned, rather than its target\'s.\r\n        """', 1355, 8, 1358, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1358, 11, 1359, 0),
woosh.Token(woosh.NAME, 'return', 1359, 8, 1359, 14),
woosh.Token(woosh.NAME, 'self', 1359, 15, 1359, 19),
woosh.Token(woosh.OP, '.', 1359, 19, 1359, 20),
woosh.Token(woosh.NAME, '_accessor', 1359, 20, 1359, 29),
woosh.Token(woosh.OP, '.', 1359, 29, 1359, 30),
woosh.Token(woosh.NAME, 'lstat', 1359, 30, 1359, 35),
woosh.Token(woosh.OP, '(', 1359, 35, 1359, 36),
woosh.Token(woosh.NAME, 'self', 1359, 36, 1359, 40),
woosh.Token(woosh.OP, ')', 1359, 40, 1359, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1359, 41, 1360, 0),
woosh.Token(woosh.DEDENT, '    ', 1361, 0, 1361, 4),
woosh.Token(woosh.NAME, 'def', 1361, 4, 1361, 7),
woosh.Token(woosh.NAME, 'link_to', 1361, 8, 1361, 15),
woosh.Token(woosh.OP, '(', 1361, 15, 1361, 16),
woosh.Token(woosh.NAME, 'self', 1361, 16, 1361, 20),
woosh.Token(woosh.OP, ',', 1361, 20, 1361, 21),
woosh.Token(woosh.NAME, 'target', 1361, 22, 1361, 28),
woosh.Token(woosh.OP, ')', 1361, 28, 1361, 29),
woosh.Token(woosh.OP, ':', 1361, 29, 1361, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1361, 30, 1362, 0),
woosh.Token(woosh.INDENT, '        ', 1362, 0, 1362, 8),
woosh.Token(woosh.STRING, '"""\r\n        Create a hard link pointing to a path named target.\r\n        """', 1362, 8, 1364, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1364, 11, 1365, 0),
woosh.Token(woosh.NAME, 'self', 1365, 8, 1365, 12),
woosh.Token(woosh.OP, '.', 1365, 12, 1365, 13),
woosh.Token(woosh.NAME, '_accessor', 1365, 13, 1365, 22),
woosh.Token(woosh.OP, '.', 1365, 22, 1365, 23),
woosh.Token(woosh.NAME, 'link_to', 1365, 23, 1365, 30),
woosh.Token(woosh.OP, '(', 1365, 30, 1365, 31),
woosh.Token(woosh.NAME, 'self', 1365, 31, 1365, 35),
woosh.Token(woosh.OP, ',', 1365, 35, 1365, 36),
woosh.Token(woosh.NAME, 'target', 1365, 37, 1365, 43),
woosh.Token(woosh.OP, ')', 1365, 43, 1365, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1365, 44, 1366, 0),
woosh.Token(woosh.DEDENT, '    ', 1367, 0, 1367, 4),
woosh.Token(woosh.NAME, 'def', 1367, 4, 1367, 7),
woosh.Token(woosh.NAME, 'rename', 1367, 8, 1367, 14),
woosh.Token(woosh.OP, '(', 1367, 14, 1367, 15),
woosh.Token(woosh.NAME, 'self', 1367, 15, 1367, 19),
woosh.Token(woosh.OP, ',', 1367, 19, 1367, 20),
woosh.Token(woosh.NAME, 'target', 1367, 21, 1367, 27),
woosh.Token(woosh.OP, ')', 1367, 27, 1367, 28),
woosh.Token(woosh.OP, ':', 1367, 28, 1367, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1367, 29, 1368, 0),
woosh.Token(woosh.INDENT, '        ', 1368, 0, 1368, 8),
woosh.Token(woosh.STRING, '"""\r\n        Rename this path to the target path.\r\n\r\n        The target path may be absolute or relative. Relative paths are\r\n        interpreted relative to the current working directory, *not* the\r\n        directory of the Path object.\r\n\r\n        Returns the new Path instance pointing to the target path.\r\n        """', 1368, 8, 1376, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1376, 11, 1377, 0),
woosh.Token(woosh.NAME, 'self', 1377, 8, 1377, 12),
woosh.Token(woosh.OP, '.', 1377, 12, 1377, 13),
woosh.Token(woosh.NAME, '_accessor', 1377, 13, 1377, 22),
woosh.Token(woosh.OP, '.', 1377, 22, 1377, 23),
woosh.Token(woosh.NAME, 'rename', 1377, 23, 1377, 29),
woosh.Token(woosh.OP, '(', 1377, 29, 1377, 30),
woosh.Token(woosh.NAME, 'self', 1377, 30, 1377, 34),
woosh.Token(woosh.OP, ',', 1377, 34, 1377, 35),
woosh.Token(woosh.NAME, 'target', 1377, 36, 1377, 42),
woosh.Token(woosh.OP, ')', 1377, 42, 1377, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1377, 43, 1378, 0),
woosh.Token(woosh.NAME, 'return', 1378, 8, 1378, 14),
woosh.Token(woosh.NAME, 'self', 1378, 15, 1378, 19),
woosh.Token(woosh.OP, '.', 1378, 19, 1378, 20),
woosh.Token(woosh.NAME, '__class__', 1378, 20, 1378, 29),
woosh.Token(woosh.OP, '(', 1378, 29, 1378, 30),
woosh.Token(woosh.NAME, 'target', 1378, 30, 1378, 36),
woosh.Token(woosh.OP, ')', 1378, 36, 1378, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1378, 37, 1379, 0),
woosh.Token(woosh.DEDENT, '    ', 1380, 0, 1380, 4),
woosh.Token(woosh.NAME, 'def', 1380, 4, 1380, 7),
woosh.Token(woosh.NAME, 'replace', 1380, 8, 1380, 15),
woosh.Token(woosh.OP, '(', 1380, 15, 1380, 16),
woosh.Token(woosh.NAME, 'self', 1380, 16, 1380, 20),
woosh.Token(woosh.OP, ',', 1380, 20, 1380, 21),
woosh.Token(woosh.NAME, 'target', 1380, 22, 1380, 28),
woosh.Token(woosh.OP, ')', 1380, 28, 1380, 29),
woosh.Token(woosh.OP, ':', 1380, 29, 1380, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1380, 30, 1381, 0),
woosh.Token(woosh.INDENT, '        ', 1381, 0, 1381, 8),
woosh.Token(woosh.STRING, '"""\r\n        Rename this path to the target path, overwriting if that path exists.\r\n\r\n        The target path may be absolute or relative. Relative paths are\r\n        interpreted relative to the current working directory, *not* the\r\n        directory of the Path object.\r\n\r\n        Returns the new Path instance pointing to the target path.\r\n        """', 1381, 8, 1389, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1389, 11, 1390, 0),
woosh.Token(woosh.NAME, 'self', 1390, 8, 1390, 12),
woosh.Token(woosh.OP, '.', 1390, 12, 1390, 13),
woosh.Token(woosh.NAME, '_accessor', 1390, 13, 1390, 22),
woosh.Token(woosh.OP, '.', 1390, 22, 1390, 23),
woosh.Token(woosh.NAME, 'replace', 1390, 23, 1390, 30),
woosh.Token(woosh.OP, '(', 1390, 30, 1390, 31),
woosh.Token(woosh.NAME, 'self', 1390, 31, 1390, 35),
woosh.Token(woosh.OP, ',', 1390, 35, 1390, 36),
woosh.Token(woosh.NAME, 'target', 1390, 37, 1390, 43),
woosh.Token(woosh.OP, ')', 1390, 43, 1390, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1390, 44, 1391, 0),
woosh.Token(woosh.NAME, 'return', 1391, 8, 1391, 14),
woosh.Token(woosh.NAME, 'self', 1391, 15, 1391, 19),
woosh.Token(woosh.OP, '.', 1391, 19, 1391, 20),
woosh.Token(woosh.NAME, '__class__', 1391, 20, 1391, 29),
woosh.Token(woosh.OP, '(', 1391, 29, 1391, 30),
woosh.Token(woosh.NAME, 'target', 1391, 30, 1391, 36),
woosh.Token(woosh.OP, ')', 1391, 36, 1391, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1391, 37, 1392, 0),
woosh.Token(woosh.DEDENT, '    ', 1393, 0, 1393, 4),
woosh.Token(woosh.NAME, 'def', 1393, 4, 1393, 7),
woosh.Token(woosh.NAME, 'symlink_to', 1393, 8, 1393, 18),
woosh.Token(woosh.OP, '(', 1393, 18, 1393, 19),
woosh.Token(woosh.NAME, 'self', 1393, 19, 1393, 23),
woosh.Token(woosh.OP, ',', 1393, 23, 1393, 24),
woosh.Token(woosh.NAME, 'target', 1393, 25, 1393, 31),
woosh.Token(woosh.OP, ',', 1393, 31, 1393, 32),
woosh.Token(woosh.NAME, 'target_is_directory', 1393, 33, 1393, 52),
woosh.Token(woosh.OP, '=', 1393, 52, 1393, 53),
woosh.Token(woosh.NAME, 'False', 1393, 53, 1393, 58),
woosh.Token(woosh.OP, ')', 1393, 58, 1393, 59),
woosh.Token(woosh.OP, ':', 1393, 59, 1393, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1393, 60, 1394, 0),
woosh.Token(woosh.INDENT, '        ', 1394, 0, 1394, 8),
woosh.Token(woosh.STRING, '"""\r\n        Make this path a symlink pointing to the given path.\r\n        Note the order of arguments (self, target) is the reverse of os.symlink\'s.\r\n        """', 1394, 8, 1397, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1397, 11, 1398, 0),
woosh.Token(woosh.NAME, 'self', 1398, 8, 1398, 12),
woosh.Token(woosh.OP, '.', 1398, 12, 1398, 13),
woosh.Token(woosh.NAME, '_accessor', 1398, 13, 1398, 22),
woosh.Token(woosh.OP, '.', 1398, 22, 1398, 23),
woosh.Token(woosh.NAME, 'symlink', 1398, 23, 1398, 30),
woosh.Token(woosh.OP, '(', 1398, 30, 1398, 31),
woosh.Token(woosh.NAME, 'target', 1398, 31, 1398, 37),
woosh.Token(woosh.OP, ',', 1398, 37, 1398, 38),
woosh.Token(woosh.NAME, 'self', 1398, 39, 1398, 43),
woosh.Token(woosh.OP, ',', 1398, 43, 1398, 44),
woosh.Token(woosh.NAME, 'target_is_directory', 1398, 45, 1398, 64),
woosh.Token(woosh.OP, ')', 1398, 64, 1398, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1398, 65, 1399, 0),
woosh.Token(woosh.COMMENT, '# Convenience functions for querying the stat results', 1400, 4, 1400, 57),
woosh.Token(woosh.DEDENT, '    ', 1402, 0, 1402, 4),
woosh.Token(woosh.NAME, 'def', 1402, 4, 1402, 7),
woosh.Token(woosh.NAME, 'exists', 1402, 8, 1402, 14),
woosh.Token(woosh.OP, '(', 1402, 14, 1402, 15),
woosh.Token(woosh.NAME, 'self', 1402, 15, 1402, 19),
woosh.Token(woosh.OP, ')', 1402, 19, 1402, 20),
woosh.Token(woosh.OP, ':', 1402, 20, 1402, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1402, 21, 1403, 0),
woosh.Token(woosh.INDENT, '        ', 1403, 0, 1403, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path exists.\r\n        """', 1403, 8, 1405, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1405, 11, 1406, 0),
woosh.Token(woosh.NAME, 'try', 1406, 8, 1406, 11),
woosh.Token(woosh.OP, ':', 1406, 11, 1406, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1406, 12, 1407, 0),
woosh.Token(woosh.INDENT, '            ', 1407, 0, 1407, 12),
woosh.Token(woosh.NAME, 'self', 1407, 12, 1407, 16),
woosh.Token(woosh.OP, '.', 1407, 16, 1407, 17),
woosh.Token(woosh.NAME, 'stat', 1407, 17, 1407, 21),
woosh.Token(woosh.OP, '(', 1407, 21, 1407, 22),
woosh.Token(woosh.OP, ')', 1407, 22, 1407, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1407, 23, 1408, 0),
woosh.Token(woosh.DEDENT, '        ', 1408, 0, 1408, 8),
woosh.Token(woosh.NAME, 'except', 1408, 8, 1408, 14),
woosh.Token(woosh.NAME, 'OSError', 1408, 15, 1408, 22),
woosh.Token(woosh.NAME, 'as', 1408, 23, 1408, 25),
woosh.Token(woosh.NAME, 'e', 1408, 26, 1408, 27),
woosh.Token(woosh.OP, ':', 1408, 27, 1408, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1408, 28, 1409, 0),
woosh.Token(woosh.INDENT, '            ', 1409, 0, 1409, 12),
woosh.Token(woosh.NAME, 'if', 1409, 12, 1409, 14),
woosh.Token(woosh.NAME, 'not', 1409, 15, 1409, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1409, 19, 1409, 32),
woosh.Token(woosh.OP, '(', 1409, 32, 1409, 33),
woosh.Token(woosh.NAME, 'e', 1409, 33, 1409, 34),
woosh.Token(woosh.OP, ')', 1409, 34, 1409, 35),
woosh.Token(woosh.OP, ':', 1409, 35, 1409, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1409, 36, 1410, 0),
woosh.Token(woosh.INDENT, '                ', 1410, 0, 1410, 16),
woosh.Token(woosh.NAME, 'raise', 1410, 16, 1410, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1410, 21, 1411, 0),
woosh.Token(woosh.DEDENT, '            ', 1411, 0, 1411, 12),
woosh.Token(woosh.NAME, 'return', 1411, 12, 1411, 18),
woosh.Token(woosh.NAME, 'False', 1411, 19, 1411, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1411, 24, 1412, 0),
woosh.Token(woosh.DEDENT, '        ', 1412, 0, 1412, 8),
woosh.Token(woosh.NAME, 'except', 1412, 8, 1412, 14),
woosh.Token(woosh.NAME, 'ValueError', 1412, 15, 1412, 25),
woosh.Token(woosh.OP, ':', 1412, 25, 1412, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1412, 26, 1413, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1413, 12, 1413, 32),
woosh.Token(woosh.INDENT, '            ', 1414, 0, 1414, 12),
woosh.Token(woosh.NAME, 'return', 1414, 12, 1414, 18),
woosh.Token(woosh.NAME, 'False', 1414, 19, 1414, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1414, 24, 1415, 0),
woosh.Token(woosh.DEDENT, '        ', 1415, 0, 1415, 8),
woosh.Token(woosh.NAME, 'return', 1415, 8, 1415, 14),
woosh.Token(woosh.NAME, 'True', 1415, 15, 1415, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1415, 19, 1416, 0),
woosh.Token(woosh.DEDENT, '    ', 1417, 0, 1417, 4),
woosh.Token(woosh.NAME, 'def', 1417, 4, 1417, 7),
woosh.Token(woosh.NAME, 'is_dir', 1417, 8, 1417, 14),
woosh.Token(woosh.OP, '(', 1417, 14, 1417, 15),
woosh.Token(woosh.NAME, 'self', 1417, 15, 1417, 19),
woosh.Token(woosh.OP, ')', 1417, 19, 1417, 20),
woosh.Token(woosh.OP, ':', 1417, 20, 1417, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1417, 21, 1418, 0),
woosh.Token(woosh.INDENT, '        ', 1418, 0, 1418, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a directory.\r\n        """', 1418, 8, 1420, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1420, 11, 1421, 0),
woosh.Token(woosh.NAME, 'try', 1421, 8, 1421, 11),
woosh.Token(woosh.OP, ':', 1421, 11, 1421, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1421, 12, 1422, 0),
woosh.Token(woosh.INDENT, '            ', 1422, 0, 1422, 12),
woosh.Token(woosh.NAME, 'return', 1422, 12, 1422, 18),
woosh.Token(woosh.NAME, 'S_ISDIR', 1422, 19, 1422, 26),
woosh.Token(woosh.OP, '(', 1422, 26, 1422, 27),
woosh.Token(woosh.NAME, 'self', 1422, 27, 1422, 31),
woosh.Token(woosh.OP, '.', 1422, 31, 1422, 32),
woosh.Token(woosh.NAME, 'stat', 1422, 32, 1422, 36),
woosh.Token(woosh.OP, '(', 1422, 36, 1422, 37),
woosh.Token(woosh.OP, ')', 1422, 37, 1422, 38),
woosh.Token(woosh.OP, '.', 1422, 38, 1422, 39),
woosh.Token(woosh.NAME, 'st_mode', 1422, 39, 1422, 46),
woosh.Token(woosh.OP, ')', 1422, 46, 1422, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1422, 47, 1423, 0),
woosh.Token(woosh.DEDENT, '        ', 1423, 0, 1423, 8),
woosh.Token(woosh.NAME, 'except', 1423, 8, 1423, 14),
woosh.Token(woosh.NAME, 'OSError', 1423, 15, 1423, 22),
woosh.Token(woosh.NAME, 'as', 1423, 23, 1423, 25),
woosh.Token(woosh.NAME, 'e', 1423, 26, 1423, 27),
woosh.Token(woosh.OP, ':', 1423, 27, 1423, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1423, 28, 1424, 0),
woosh.Token(woosh.INDENT, '            ', 1424, 0, 1424, 12),
woosh.Token(woosh.NAME, 'if', 1424, 12, 1424, 14),
woosh.Token(woosh.NAME, 'not', 1424, 15, 1424, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1424, 19, 1424, 32),
woosh.Token(woosh.OP, '(', 1424, 32, 1424, 33),
woosh.Token(woosh.NAME, 'e', 1424, 33, 1424, 34),
woosh.Token(woosh.OP, ')', 1424, 34, 1424, 35),
woosh.Token(woosh.OP, ':', 1424, 35, 1424, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1424, 36, 1425, 0),
woosh.Token(woosh.INDENT, '                ', 1425, 0, 1425, 16),
woosh.Token(woosh.NAME, 'raise', 1425, 16, 1425, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1425, 21, 1426, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1426, 12, 1426, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1427, 12, 1427, 66),
woosh.Token(woosh.DEDENT, '            ', 1428, 0, 1428, 12),
woosh.Token(woosh.NAME, 'return', 1428, 12, 1428, 18),
woosh.Token(woosh.NAME, 'False', 1428, 19, 1428, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1428, 24, 1429, 0),
woosh.Token(woosh.DEDENT, '        ', 1429, 0, 1429, 8),
woosh.Token(woosh.NAME, 'except', 1429, 8, 1429, 14),
woosh.Token(woosh.NAME, 'ValueError', 1429, 15, 1429, 25),
woosh.Token(woosh.OP, ':', 1429, 25, 1429, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1429, 26, 1430, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1430, 12, 1430, 32),
woosh.Token(woosh.INDENT, '            ', 1431, 0, 1431, 12),
woosh.Token(woosh.NAME, 'return', 1431, 12, 1431, 18),
woosh.Token(woosh.NAME, 'False', 1431, 19, 1431, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1431, 24, 1432, 0),
woosh.Token(woosh.DEDENT, '    ', 1433, 0, 1433, 4),
woosh.Token(woosh.DEDENT, '', 1433, 4, 1433, 4),
woosh.Token(woosh.NAME, 'def', 1433, 4, 1433, 7),
woosh.Token(woosh.NAME, 'is_file', 1433, 8, 1433, 15),
woosh.Token(woosh.OP, '(', 1433, 15, 1433, 16),
woosh.Token(woosh.NAME, 'self', 1433, 16, 1433, 20),
woosh.Token(woosh.OP, ')', 1433, 20, 1433, 21),
woosh.Token(woosh.OP, ':', 1433, 21, 1433, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1433, 22, 1434, 0),
woosh.Token(woosh.INDENT, '        ', 1434, 0, 1434, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a regular file (also True for symlinks pointing\r\n        to regular files).\r\n        """', 1434, 8, 1437, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1437, 11, 1438, 0),
woosh.Token(woosh.NAME, 'try', 1438, 8, 1438, 11),
woosh.Token(woosh.OP, ':', 1438, 11, 1438, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1438, 12, 1439, 0),
woosh.Token(woosh.INDENT, '            ', 1439, 0, 1439, 12),
woosh.Token(woosh.NAME, 'return', 1439, 12, 1439, 18),
woosh.Token(woosh.NAME, 'S_ISREG', 1439, 19, 1439, 26),
woosh.Token(woosh.OP, '(', 1439, 26, 1439, 27),
woosh.Token(woosh.NAME, 'self', 1439, 27, 1439, 31),
woosh.Token(woosh.OP, '.', 1439, 31, 1439, 32),
woosh.Token(woosh.NAME, 'stat', 1439, 32, 1439, 36),
woosh.Token(woosh.OP, '(', 1439, 36, 1439, 37),
woosh.Token(woosh.OP, ')', 1439, 37, 1439, 38),
woosh.Token(woosh.OP, '.', 1439, 38, 1439, 39),
woosh.Token(woosh.NAME, 'st_mode', 1439, 39, 1439, 46),
woosh.Token(woosh.OP, ')', 1439, 46, 1439, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1439, 47, 1440, 0),
woosh.Token(woosh.DEDENT, '        ', 1440, 0, 1440, 8),
woosh.Token(woosh.NAME, 'except', 1440, 8, 1440, 14),
woosh.Token(woosh.NAME, 'OSError', 1440, 15, 1440, 22),
woosh.Token(woosh.NAME, 'as', 1440, 23, 1440, 25),
woosh.Token(woosh.NAME, 'e', 1440, 26, 1440, 27),
woosh.Token(woosh.OP, ':', 1440, 27, 1440, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1440, 28, 1441, 0),
woosh.Token(woosh.INDENT, '            ', 1441, 0, 1441, 12),
woosh.Token(woosh.NAME, 'if', 1441, 12, 1441, 14),
woosh.Token(woosh.NAME, 'not', 1441, 15, 1441, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1441, 19, 1441, 32),
woosh.Token(woosh.OP, '(', 1441, 32, 1441, 33),
woosh.Token(woosh.NAME, 'e', 1441, 33, 1441, 34),
woosh.Token(woosh.OP, ')', 1441, 34, 1441, 35),
woosh.Token(woosh.OP, ':', 1441, 35, 1441, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1441, 36, 1442, 0),
woosh.Token(woosh.INDENT, '                ', 1442, 0, 1442, 16),
woosh.Token(woosh.NAME, 'raise', 1442, 16, 1442, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1442, 21, 1443, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1443, 12, 1443, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1444, 12, 1444, 66),
woosh.Token(woosh.DEDENT, '            ', 1445, 0, 1445, 12),
woosh.Token(woosh.NAME, 'return', 1445, 12, 1445, 18),
woosh.Token(woosh.NAME, 'False', 1445, 19, 1445, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1445, 24, 1446, 0),
woosh.Token(woosh.DEDENT, '        ', 1446, 0, 1446, 8),
woosh.Token(woosh.NAME, 'except', 1446, 8, 1446, 14),
woosh.Token(woosh.NAME, 'ValueError', 1446, 15, 1446, 25),
woosh.Token(woosh.OP, ':', 1446, 25, 1446, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1446, 26, 1447, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1447, 12, 1447, 32),
woosh.Token(woosh.INDENT, '            ', 1448, 0, 1448, 12),
woosh.Token(woosh.NAME, 'return', 1448, 12, 1448, 18),
woosh.Token(woosh.NAME, 'False', 1448, 19, 1448, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1448, 24, 1449, 0),
woosh.Token(woosh.DEDENT, '    ', 1450, 0, 1450, 4),
woosh.Token(woosh.DEDENT, '', 1450, 4, 1450, 4),
woosh.Token(woosh.NAME, 'def', 1450, 4, 1450, 7),
woosh.Token(woosh.NAME, 'is_mount', 1450, 8, 1450, 16),
woosh.Token(woosh.OP, '(', 1450, 16, 1450, 17),
woosh.Token(woosh.NAME, 'self', 1450, 17, 1450, 21),
woosh.Token(woosh.OP, ')', 1450, 21, 1450, 22),
woosh.Token(woosh.OP, ':', 1450, 22, 1450, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1450, 23, 1451, 0),
woosh.Token(woosh.INDENT, '        ', 1451, 0, 1451, 8),
woosh.Token(woosh.STRING, '"""\r\n        Check if this path is a POSIX mount point\r\n        """', 1451, 8, 1453, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1453, 11, 1454, 0),
woosh.Token(woosh.COMMENT, '# Need to exist and be a dir', 1454, 8, 1454, 36),
woosh.Token(woosh.NAME, 'if', 1455, 8, 1455, 10),
woosh.Token(woosh.NAME, 'not', 1455, 11, 1455, 14),
woosh.Token(woosh.NAME, 'self', 1455, 15, 1455, 19),
woosh.Token(woosh.OP, '.', 1455, 19, 1455, 20),
woosh.Token(woosh.NAME, 'exists', 1455, 20, 1455, 26),
woosh.Token(woosh.OP, '(', 1455, 26, 1455, 27),
woosh.Token(woosh.OP, ')', 1455, 27, 1455, 28),
woosh.Token(woosh.NAME, 'or', 1455, 29, 1455, 31),
woosh.Token(woosh.NAME, 'not', 1455, 32, 1455, 35),
woosh.Token(woosh.NAME, 'self', 1455, 36, 1455, 40),
woosh.Token(woosh.OP, '.', 1455, 40, 1455, 41),
woosh.Token(woosh.NAME, 'is_dir', 1455, 41, 1455, 47),
woosh.Token(woosh.OP, '(', 1455, 47, 1455, 48),
woosh.Token(woosh.OP, ')', 1455, 48, 1455, 49),
woosh.Token(woosh.OP, ':', 1455, 49, 1455, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1455, 50, 1456, 0),
woosh.Token(woosh.INDENT, '            ', 1456, 0, 1456, 12),
woosh.Token(woosh.NAME, 'return', 1456, 12, 1456, 18),
woosh.Token(woosh.NAME, 'False', 1456, 19, 1456, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1456, 24, 1457, 0),
woosh.Token(woosh.DEDENT, '        ', 1458, 0, 1458, 8),
woosh.Token(woosh.NAME, 'try', 1458, 8, 1458, 11),
woosh.Token(woosh.OP, ':', 1458, 11, 1458, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1458, 12, 1459, 0),
woosh.Token(woosh.INDENT, '            ', 1459, 0, 1459, 12),
woosh.Token(woosh.NAME, 'parent_dev', 1459, 12, 1459, 22),
woosh.Token(woosh.OP, '=', 1459, 23, 1459, 24),
woosh.Token(woosh.NAME, 'self', 1459, 25, 1459, 29),
woosh.Token(woosh.OP, '.', 1459, 29, 1459, 30),
woosh.Token(woosh.NAME, 'parent', 1459, 30, 1459, 36),
woosh.Token(woosh.OP, '.', 1459, 36, 1459, 37),
woosh.Token(woosh.NAME, 'stat', 1459, 37, 1459, 41),
woosh.Token(woosh.OP, '(', 1459, 41, 1459, 42),
woosh.Token(woosh.OP, ')', 1459, 42, 1459, 43),
woosh.Token(woosh.OP, '.', 1459, 43, 1459, 44),
woosh.Token(woosh.NAME, 'st_dev', 1459, 44, 1459, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1459, 50, 1460, 0),
woosh.Token(woosh.DEDENT, '        ', 1460, 0, 1460, 8),
woosh.Token(woosh.NAME, 'except', 1460, 8, 1460, 14),
woosh.Token(woosh.NAME, 'OSError', 1460, 15, 1460, 22),
woosh.Token(woosh.OP, ':', 1460, 22, 1460, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1460, 23, 1461, 0),
woosh.Token(woosh.INDENT, '            ', 1461, 0, 1461, 12),
woosh.Token(woosh.NAME, 'return', 1461, 12, 1461, 18),
woosh.Token(woosh.NAME, 'False', 1461, 19, 1461, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1461, 24, 1462, 0),
woosh.Token(woosh.DEDENT, '        ', 1463, 0, 1463, 8),
woosh.Token(woosh.NAME, 'dev', 1463, 8, 1463, 11),
woosh.Token(woosh.OP, '=', 1463, 12, 1463, 13),
woosh.Token(woosh.NAME, 'self', 1463, 14, 1463, 18),
woosh.Token(woosh.OP, '.', 1463, 18, 1463, 19),
woosh.Token(woosh.NAME, 'stat', 1463, 19, 1463, 23),
woosh.Token(woosh.OP, '(', 1463, 23, 1463, 24),
woosh.Token(woosh.OP, ')', 1463, 24, 1463, 25),
woosh.Token(woosh.OP, '.', 1463, 25, 1463, 26),
woosh.Token(woosh.NAME, 'st_dev', 1463, 26, 1463, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1463, 32, 1464, 0),
woosh.Token(woosh.NAME, 'if', 1464, 8, 1464, 10),
woosh.Token(woosh.NAME, 'dev', 1464, 11, 1464, 14),
woosh.Token(woosh.OP, '!=', 1464, 15, 1464, 17),
woosh.Token(woosh.NAME, 'parent_dev', 1464, 18, 1464, 28),
woosh.Token(woosh.OP, ':', 1464, 28, 1464, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1464, 29, 1465, 0),
woosh.Token(woosh.INDENT, '            ', 1465, 0, 1465, 12),
woosh.Token(woosh.NAME, 'return', 1465, 12, 1465, 18),
woosh.Token(woosh.NAME, 'True', 1465, 19, 1465, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1465, 23, 1466, 0),
woosh.Token(woosh.DEDENT, '        ', 1466, 0, 1466, 8),
woosh.Token(woosh.NAME, 'ino', 1466, 8, 1466, 11),
woosh.Token(woosh.OP, '=', 1466, 12, 1466, 13),
woosh.Token(woosh.NAME, 'self', 1466, 14, 1466, 18),
woosh.Token(woosh.OP, '.', 1466, 18, 1466, 19),
woosh.Token(woosh.NAME, 'stat', 1466, 19, 1466, 23),
woosh.Token(woosh.OP, '(', 1466, 23, 1466, 24),
woosh.Token(woosh.OP, ')', 1466, 24, 1466, 25),
woosh.Token(woosh.OP, '.', 1466, 25, 1466, 26),
woosh.Token(woosh.NAME, 'st_ino', 1466, 26, 1466, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1466, 32, 1467, 0),
woosh.Token(woosh.NAME, 'parent_ino', 1467, 8, 1467, 18),
woosh.Token(woosh.OP, '=', 1467, 19, 1467, 20),
woosh.Token(woosh.NAME, 'self', 1467, 21, 1467, 25),
woosh.Token(woosh.OP, '.', 1467, 25, 1467, 26),
woosh.Token(woosh.NAME, 'parent', 1467, 26, 1467, 32),
woosh.Token(woosh.OP, '.', 1467, 32, 1467, 33),
woosh.Token(woosh.NAME, 'stat', 1467, 33, 1467, 37),
woosh.Token(woosh.OP, '(', 1467, 37, 1467, 38),
woosh.Token(woosh.OP, ')', 1467, 38, 1467, 39),
woosh.Token(woosh.OP, '.', 1467, 39, 1467, 40),
woosh.Token(woosh.NAME, 'st_ino', 1467, 40, 1467, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1467, 46, 1468, 0),
woosh.Token(woosh.NAME, 'return', 1468, 8, 1468, 14),
woosh.Token(woosh.NAME, 'ino', 1468, 15, 1468, 18),
woosh.Token(woosh.OP, '==', 1468, 19, 1468, 21),
woosh.Token(woosh.NAME, 'parent_ino', 1468, 22, 1468, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1468, 32, 1469, 0),
woosh.Token(woosh.DEDENT, '    ', 1470, 0, 1470, 4),
woosh.Token(woosh.NAME, 'def', 1470, 4, 1470, 7),
woosh.Token(woosh.NAME, 'is_symlink', 1470, 8, 1470, 18),
woosh.Token(woosh.OP, '(', 1470, 18, 1470, 19),
woosh.Token(woosh.NAME, 'self', 1470, 19, 1470, 23),
woosh.Token(woosh.OP, ')', 1470, 23, 1470, 24),
woosh.Token(woosh.OP, ':', 1470, 24, 1470, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1470, 25, 1471, 0),
woosh.Token(woosh.INDENT, '        ', 1471, 0, 1471, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a symbolic link.\r\n        """', 1471, 8, 1473, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1473, 11, 1474, 0),
woosh.Token(woosh.NAME, 'try', 1474, 8, 1474, 11),
woosh.Token(woosh.OP, ':', 1474, 11, 1474, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1474, 12, 1475, 0),
woosh.Token(woosh.INDENT, '            ', 1475, 0, 1475, 12),
woosh.Token(woosh.NAME, 'return', 1475, 12, 1475, 18),
woosh.Token(woosh.NAME, 'S_ISLNK', 1475, 19, 1475, 26),
woosh.Token(woosh.OP, '(', 1475, 26, 1475, 27),
woosh.Token(woosh.NAME, 'self', 1475, 27, 1475, 31),
woosh.Token(woosh.OP, '.', 1475, 31, 1475, 32),
woosh.Token(woosh.NAME, 'lstat', 1475, 32, 1475, 37),
woosh.Token(woosh.OP, '(', 1475, 37, 1475, 38),
woosh.Token(woosh.OP, ')', 1475, 38, 1475, 39),
woosh.Token(woosh.OP, '.', 1475, 39, 1475, 40),
woosh.Token(woosh.NAME, 'st_mode', 1475, 40, 1475, 47),
woosh.Token(woosh.OP, ')', 1475, 47, 1475, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1475, 48, 1476, 0),
woosh.Token(woosh.DEDENT, '        ', 1476, 0, 1476, 8),
woosh.Token(woosh.NAME, 'except', 1476, 8, 1476, 14),
woosh.Token(woosh.NAME, 'OSError', 1476, 15, 1476, 22),
woosh.Token(woosh.NAME, 'as', 1476, 23, 1476, 25),
woosh.Token(woosh.NAME, 'e', 1476, 26, 1476, 27),
woosh.Token(woosh.OP, ':', 1476, 27, 1476, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1476, 28, 1477, 0),
woosh.Token(woosh.INDENT, '            ', 1477, 0, 1477, 12),
woosh.Token(woosh.NAME, 'if', 1477, 12, 1477, 14),
woosh.Token(woosh.NAME, 'not', 1477, 15, 1477, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1477, 19, 1477, 32),
woosh.Token(woosh.OP, '(', 1477, 32, 1477, 33),
woosh.Token(woosh.NAME, 'e', 1477, 33, 1477, 34),
woosh.Token(woosh.OP, ')', 1477, 34, 1477, 35),
woosh.Token(woosh.OP, ':', 1477, 35, 1477, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1477, 36, 1478, 0),
woosh.Token(woosh.INDENT, '                ', 1478, 0, 1478, 16),
woosh.Token(woosh.NAME, 'raise', 1478, 16, 1478, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1478, 21, 1479, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist", 1479, 12, 1479, 32),
woosh.Token(woosh.DEDENT, '            ', 1480, 0, 1480, 12),
woosh.Token(woosh.NAME, 'return', 1480, 12, 1480, 18),
woosh.Token(woosh.NAME, 'False', 1480, 19, 1480, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1480, 24, 1481, 0),
woosh.Token(woosh.DEDENT, '        ', 1481, 0, 1481, 8),
woosh.Token(woosh.NAME, 'except', 1481, 8, 1481, 14),
woosh.Token(woosh.NAME, 'ValueError', 1481, 15, 1481, 25),
woosh.Token(woosh.OP, ':', 1481, 25, 1481, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1481, 26, 1482, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1482, 12, 1482, 32),
woosh.Token(woosh.INDENT, '            ', 1483, 0, 1483, 12),
woosh.Token(woosh.NAME, 'return', 1483, 12, 1483, 18),
woosh.Token(woosh.NAME, 'False', 1483, 19, 1483, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1483, 24, 1484, 0),
woosh.Token(woosh.DEDENT, '    ', 1485, 0, 1485, 4),
woosh.Token(woosh.DEDENT, '', 1485, 4, 1485, 4),
woosh.Token(woosh.NAME, 'def', 1485, 4, 1485, 7),
woosh.Token(woosh.NAME, 'is_block_device', 1485, 8, 1485, 23),
woosh.Token(woosh.OP, '(', 1485, 23, 1485, 24),
woosh.Token(woosh.NAME, 'self', 1485, 24, 1485, 28),
woosh.Token(woosh.OP, ')', 1485, 28, 1485, 29),
woosh.Token(woosh.OP, ':', 1485, 29, 1485, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1485, 30, 1486, 0),
woosh.Token(woosh.INDENT, '        ', 1486, 0, 1486, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a block device.\r\n        """', 1486, 8, 1488, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1488, 11, 1489, 0),
woosh.Token(woosh.NAME, 'try', 1489, 8, 1489, 11),
woosh.Token(woosh.OP, ':', 1489, 11, 1489, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1489, 12, 1490, 0),
woosh.Token(woosh.INDENT, '            ', 1490, 0, 1490, 12),
woosh.Token(woosh.NAME, 'return', 1490, 12, 1490, 18),
woosh.Token(woosh.NAME, 'S_ISBLK', 1490, 19, 1490, 26),
woosh.Token(woosh.OP, '(', 1490, 26, 1490, 27),
woosh.Token(woosh.NAME, 'self', 1490, 27, 1490, 31),
woosh.Token(woosh.OP, '.', 1490, 31, 1490, 32),
woosh.Token(woosh.NAME, 'stat', 1490, 32, 1490, 36),
woosh.Token(woosh.OP, '(', 1490, 36, 1490, 37),
woosh.Token(woosh.OP, ')', 1490, 37, 1490, 38),
woosh.Token(woosh.OP, '.', 1490, 38, 1490, 39),
woosh.Token(woosh.NAME, 'st_mode', 1490, 39, 1490, 46),
woosh.Token(woosh.OP, ')', 1490, 46, 1490, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1490, 47, 1491, 0),
woosh.Token(woosh.DEDENT, '        ', 1491, 0, 1491, 8),
woosh.Token(woosh.NAME, 'except', 1491, 8, 1491, 14),
woosh.Token(woosh.NAME, 'OSError', 1491, 15, 1491, 22),
woosh.Token(woosh.NAME, 'as', 1491, 23, 1491, 25),
woosh.Token(woosh.NAME, 'e', 1491, 26, 1491, 27),
woosh.Token(woosh.OP, ':', 1491, 27, 1491, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1491, 28, 1492, 0),
woosh.Token(woosh.INDENT, '            ', 1492, 0, 1492, 12),
woosh.Token(woosh.NAME, 'if', 1492, 12, 1492, 14),
woosh.Token(woosh.NAME, 'not', 1492, 15, 1492, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1492, 19, 1492, 32),
woosh.Token(woosh.OP, '(', 1492, 32, 1492, 33),
woosh.Token(woosh.NAME, 'e', 1492, 33, 1492, 34),
woosh.Token(woosh.OP, ')', 1492, 34, 1492, 35),
woosh.Token(woosh.OP, ':', 1492, 35, 1492, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1492, 36, 1493, 0),
woosh.Token(woosh.INDENT, '                ', 1493, 0, 1493, 16),
woosh.Token(woosh.NAME, 'raise', 1493, 16, 1493, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1493, 21, 1494, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1494, 12, 1494, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1495, 12, 1495, 66),
woosh.Token(woosh.DEDENT, '            ', 1496, 0, 1496, 12),
woosh.Token(woosh.NAME, 'return', 1496, 12, 1496, 18),
woosh.Token(woosh.NAME, 'False', 1496, 19, 1496, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1496, 24, 1497, 0),
woosh.Token(woosh.DEDENT, '        ', 1497, 0, 1497, 8),
woosh.Token(woosh.NAME, 'except', 1497, 8, 1497, 14),
woosh.Token(woosh.NAME, 'ValueError', 1497, 15, 1497, 25),
woosh.Token(woosh.OP, ':', 1497, 25, 1497, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1497, 26, 1498, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1498, 12, 1498, 32),
woosh.Token(woosh.INDENT, '            ', 1499, 0, 1499, 12),
woosh.Token(woosh.NAME, 'return', 1499, 12, 1499, 18),
woosh.Token(woosh.NAME, 'False', 1499, 19, 1499, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1499, 24, 1500, 0),
woosh.Token(woosh.DEDENT, '    ', 1501, 0, 1501, 4),
woosh.Token(woosh.DEDENT, '', 1501, 4, 1501, 4),
woosh.Token(woosh.NAME, 'def', 1501, 4, 1501, 7),
woosh.Token(woosh.NAME, 'is_char_device', 1501, 8, 1501, 22),
woosh.Token(woosh.OP, '(', 1501, 22, 1501, 23),
woosh.Token(woosh.NAME, 'self', 1501, 23, 1501, 27),
woosh.Token(woosh.OP, ')', 1501, 27, 1501, 28),
woosh.Token(woosh.OP, ':', 1501, 28, 1501, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1501, 29, 1502, 0),
woosh.Token(woosh.INDENT, '        ', 1502, 0, 1502, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a character device.\r\n        """', 1502, 8, 1504, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1504, 11, 1505, 0),
woosh.Token(woosh.NAME, 'try', 1505, 8, 1505, 11),
woosh.Token(woosh.OP, ':', 1505, 11, 1505, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1505, 12, 1506, 0),
woosh.Token(woosh.INDENT, '            ', 1506, 0, 1506, 12),
woosh.Token(woosh.NAME, 'return', 1506, 12, 1506, 18),
woosh.Token(woosh.NAME, 'S_ISCHR', 1506, 19, 1506, 26),
woosh.Token(woosh.OP, '(', 1506, 26, 1506, 27),
woosh.Token(woosh.NAME, 'self', 1506, 27, 1506, 31),
woosh.Token(woosh.OP, '.', 1506, 31, 1506, 32),
woosh.Token(woosh.NAME, 'stat', 1506, 32, 1506, 36),
woosh.Token(woosh.OP, '(', 1506, 36, 1506, 37),
woosh.Token(woosh.OP, ')', 1506, 37, 1506, 38),
woosh.Token(woosh.OP, '.', 1506, 38, 1506, 39),
woosh.Token(woosh.NAME, 'st_mode', 1506, 39, 1506, 46),
woosh.Token(woosh.OP, ')', 1506, 46, 1506, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1506, 47, 1507, 0),
woosh.Token(woosh.DEDENT, '        ', 1507, 0, 1507, 8),
woosh.Token(woosh.NAME, 'except', 1507, 8, 1507, 14),
woosh.Token(woosh.NAME, 'OSError', 1507, 15, 1507, 22),
woosh.Token(woosh.NAME, 'as', 1507, 23, 1507, 25),
woosh.Token(woosh.NAME, 'e', 1507, 26, 1507, 27),
woosh.Token(woosh.OP, ':', 1507, 27, 1507, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1507, 28, 1508, 0),
woosh.Token(woosh.INDENT, '            ', 1508, 0, 1508, 12),
woosh.Token(woosh.NAME, 'if', 1508, 12, 1508, 14),
woosh.Token(woosh.NAME, 'not', 1508, 15, 1508, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1508, 19, 1508, 32),
woosh.Token(woosh.OP, '(', 1508, 32, 1508, 33),
woosh.Token(woosh.NAME, 'e', 1508, 33, 1508, 34),
woosh.Token(woosh.OP, ')', 1508, 34, 1508, 35),
woosh.Token(woosh.OP, ':', 1508, 35, 1508, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1508, 36, 1509, 0),
woosh.Token(woosh.INDENT, '                ', 1509, 0, 1509, 16),
woosh.Token(woosh.NAME, 'raise', 1509, 16, 1509, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1509, 21, 1510, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1510, 12, 1510, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1511, 12, 1511, 66),
woosh.Token(woosh.DEDENT, '            ', 1512, 0, 1512, 12),
woosh.Token(woosh.NAME, 'return', 1512, 12, 1512, 18),
woosh.Token(woosh.NAME, 'False', 1512, 19, 1512, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1512, 24, 1513, 0),
woosh.Token(woosh.DEDENT, '        ', 1513, 0, 1513, 8),
woosh.Token(woosh.NAME, 'except', 1513, 8, 1513, 14),
woosh.Token(woosh.NAME, 'ValueError', 1513, 15, 1513, 25),
woosh.Token(woosh.OP, ':', 1513, 25, 1513, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1513, 26, 1514, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1514, 12, 1514, 32),
woosh.Token(woosh.INDENT, '            ', 1515, 0, 1515, 12),
woosh.Token(woosh.NAME, 'return', 1515, 12, 1515, 18),
woosh.Token(woosh.NAME, 'False', 1515, 19, 1515, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1515, 24, 1516, 0),
woosh.Token(woosh.DEDENT, '    ', 1517, 0, 1517, 4),
woosh.Token(woosh.DEDENT, '', 1517, 4, 1517, 4),
woosh.Token(woosh.NAME, 'def', 1517, 4, 1517, 7),
woosh.Token(woosh.NAME, 'is_fifo', 1517, 8, 1517, 15),
woosh.Token(woosh.OP, '(', 1517, 15, 1517, 16),
woosh.Token(woosh.NAME, 'self', 1517, 16, 1517, 20),
woosh.Token(woosh.OP, ')', 1517, 20, 1517, 21),
woosh.Token(woosh.OP, ':', 1517, 21, 1517, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1517, 22, 1518, 0),
woosh.Token(woosh.INDENT, '        ', 1518, 0, 1518, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a FIFO.\r\n        """', 1518, 8, 1520, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1520, 11, 1521, 0),
woosh.Token(woosh.NAME, 'try', 1521, 8, 1521, 11),
woosh.Token(woosh.OP, ':', 1521, 11, 1521, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1521, 12, 1522, 0),
woosh.Token(woosh.INDENT, '            ', 1522, 0, 1522, 12),
woosh.Token(woosh.NAME, 'return', 1522, 12, 1522, 18),
woosh.Token(woosh.NAME, 'S_ISFIFO', 1522, 19, 1522, 27),
woosh.Token(woosh.OP, '(', 1522, 27, 1522, 28),
woosh.Token(woosh.NAME, 'self', 1522, 28, 1522, 32),
woosh.Token(woosh.OP, '.', 1522, 32, 1522, 33),
woosh.Token(woosh.NAME, 'stat', 1522, 33, 1522, 37),
woosh.Token(woosh.OP, '(', 1522, 37, 1522, 38),
woosh.Token(woosh.OP, ')', 1522, 38, 1522, 39),
woosh.Token(woosh.OP, '.', 1522, 39, 1522, 40),
woosh.Token(woosh.NAME, 'st_mode', 1522, 40, 1522, 47),
woosh.Token(woosh.OP, ')', 1522, 47, 1522, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1522, 48, 1523, 0),
woosh.Token(woosh.DEDENT, '        ', 1523, 0, 1523, 8),
woosh.Token(woosh.NAME, 'except', 1523, 8, 1523, 14),
woosh.Token(woosh.NAME, 'OSError', 1523, 15, 1523, 22),
woosh.Token(woosh.NAME, 'as', 1523, 23, 1523, 25),
woosh.Token(woosh.NAME, 'e', 1523, 26, 1523, 27),
woosh.Token(woosh.OP, ':', 1523, 27, 1523, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1523, 28, 1524, 0),
woosh.Token(woosh.INDENT, '            ', 1524, 0, 1524, 12),
woosh.Token(woosh.NAME, 'if', 1524, 12, 1524, 14),
woosh.Token(woosh.NAME, 'not', 1524, 15, 1524, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1524, 19, 1524, 32),
woosh.Token(woosh.OP, '(', 1524, 32, 1524, 33),
woosh.Token(woosh.NAME, 'e', 1524, 33, 1524, 34),
woosh.Token(woosh.OP, ')', 1524, 34, 1524, 35),
woosh.Token(woosh.OP, ':', 1524, 35, 1524, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1524, 36, 1525, 0),
woosh.Token(woosh.INDENT, '                ', 1525, 0, 1525, 16),
woosh.Token(woosh.NAME, 'raise', 1525, 16, 1525, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1525, 21, 1526, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1526, 12, 1526, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1527, 12, 1527, 66),
woosh.Token(woosh.DEDENT, '            ', 1528, 0, 1528, 12),
woosh.Token(woosh.NAME, 'return', 1528, 12, 1528, 18),
woosh.Token(woosh.NAME, 'False', 1528, 19, 1528, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1528, 24, 1529, 0),
woosh.Token(woosh.DEDENT, '        ', 1529, 0, 1529, 8),
woosh.Token(woosh.NAME, 'except', 1529, 8, 1529, 14),
woosh.Token(woosh.NAME, 'ValueError', 1529, 15, 1529, 25),
woosh.Token(woosh.OP, ':', 1529, 25, 1529, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1529, 26, 1530, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1530, 12, 1530, 32),
woosh.Token(woosh.INDENT, '            ', 1531, 0, 1531, 12),
woosh.Token(woosh.NAME, 'return', 1531, 12, 1531, 18),
woosh.Token(woosh.NAME, 'False', 1531, 19, 1531, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1531, 24, 1532, 0),
woosh.Token(woosh.DEDENT, '    ', 1533, 0, 1533, 4),
woosh.Token(woosh.DEDENT, '', 1533, 4, 1533, 4),
woosh.Token(woosh.NAME, 'def', 1533, 4, 1533, 7),
woosh.Token(woosh.NAME, 'is_socket', 1533, 8, 1533, 17),
woosh.Token(woosh.OP, '(', 1533, 17, 1533, 18),
woosh.Token(woosh.NAME, 'self', 1533, 18, 1533, 22),
woosh.Token(woosh.OP, ')', 1533, 22, 1533, 23),
woosh.Token(woosh.OP, ':', 1533, 23, 1533, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1533, 24, 1534, 0),
woosh.Token(woosh.INDENT, '        ', 1534, 0, 1534, 8),
woosh.Token(woosh.STRING, '"""\r\n        Whether this path is a socket.\r\n        """', 1534, 8, 1536, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1536, 11, 1537, 0),
woosh.Token(woosh.NAME, 'try', 1537, 8, 1537, 11),
woosh.Token(woosh.OP, ':', 1537, 11, 1537, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1537, 12, 1538, 0),
woosh.Token(woosh.INDENT, '            ', 1538, 0, 1538, 12),
woosh.Token(woosh.NAME, 'return', 1538, 12, 1538, 18),
woosh.Token(woosh.NAME, 'S_ISSOCK', 1538, 19, 1538, 27),
woosh.Token(woosh.OP, '(', 1538, 27, 1538, 28),
woosh.Token(woosh.NAME, 'self', 1538, 28, 1538, 32),
woosh.Token(woosh.OP, '.', 1538, 32, 1538, 33),
woosh.Token(woosh.NAME, 'stat', 1538, 33, 1538, 37),
woosh.Token(woosh.OP, '(', 1538, 37, 1538, 38),
woosh.Token(woosh.OP, ')', 1538, 38, 1538, 39),
woosh.Token(woosh.OP, '.', 1538, 39, 1538, 40),
woosh.Token(woosh.NAME, 'st_mode', 1538, 40, 1538, 47),
woosh.Token(woosh.OP, ')', 1538, 47, 1538, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1538, 48, 1539, 0),
woosh.Token(woosh.DEDENT, '        ', 1539, 0, 1539, 8),
woosh.Token(woosh.NAME, 'except', 1539, 8, 1539, 14),
woosh.Token(woosh.NAME, 'OSError', 1539, 15, 1539, 22),
woosh.Token(woosh.NAME, 'as', 1539, 23, 1539, 25),
woosh.Token(woosh.NAME, 'e', 1539, 26, 1539, 27),
woosh.Token(woosh.OP, ':', 1539, 27, 1539, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 1539, 28, 1540, 0),
woosh.Token(woosh.INDENT, '            ', 1540, 0, 1540, 12),
woosh.Token(woosh.NAME, 'if', 1540, 12, 1540, 14),
woosh.Token(woosh.NAME, 'not', 1540, 15, 1540, 18),
woosh.Token(woosh.NAME, '_ignore_error', 1540, 19, 1540, 32),
woosh.Token(woosh.OP, '(', 1540, 32, 1540, 33),
woosh.Token(woosh.NAME, 'e', 1540, 33, 1540, 34),
woosh.Token(woosh.OP, ')', 1540, 34, 1540, 35),
woosh.Token(woosh.OP, ':', 1540, 35, 1540, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1540, 36, 1541, 0),
woosh.Token(woosh.INDENT, '                ', 1541, 0, 1541, 16),
woosh.Token(woosh.NAME, 'raise', 1541, 16, 1541, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1541, 21, 1542, 0),
woosh.Token(woosh.COMMENT, "# Path doesn't exist or is a broken symlink", 1542, 12, 1542, 55),
woosh.Token(woosh.COMMENT, '# (see https://bitbucket.org/pitrou/pathlib/issue/12/)', 1543, 12, 1543, 66),
woosh.Token(woosh.DEDENT, '            ', 1544, 0, 1544, 12),
woosh.Token(woosh.NAME, 'return', 1544, 12, 1544, 18),
woosh.Token(woosh.NAME, 'False', 1544, 19, 1544, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1544, 24, 1545, 0),
woosh.Token(woosh.DEDENT, '        ', 1545, 0, 1545, 8),
woosh.Token(woosh.NAME, 'except', 1545, 8, 1545, 14),
woosh.Token(woosh.NAME, 'ValueError', 1545, 15, 1545, 25),
woosh.Token(woosh.OP, ':', 1545, 25, 1545, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1545, 26, 1546, 0),
woosh.Token(woosh.COMMENT, '# Non-encodable path', 1546, 12, 1546, 32),
woosh.Token(woosh.INDENT, '            ', 1547, 0, 1547, 12),
woosh.Token(woosh.NAME, 'return', 1547, 12, 1547, 18),
woosh.Token(woosh.NAME, 'False', 1547, 19, 1547, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1547, 24, 1548, 0),
woosh.Token(woosh.DEDENT, '    ', 1549, 0, 1549, 4),
woosh.Token(woosh.DEDENT, '', 1549, 4, 1549, 4),
woosh.Token(woosh.NAME, 'def', 1549, 4, 1549, 7),
woosh.Token(woosh.NAME, 'expanduser', 1549, 8, 1549, 18),
woosh.Token(woosh.OP, '(', 1549, 18, 1549, 19),
woosh.Token(woosh.NAME, 'self', 1549, 19, 1549, 23),
woosh.Token(woosh.OP, ')', 1549, 23, 1549, 24),
woosh.Token(woosh.OP, ':', 1549, 24, 1549, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1549, 25, 1550, 0),
woosh.Token(woosh.INDENT, '        ', 1550, 0, 1550, 8),
woosh.Token(woosh.STRING, '""" Return a new path with expanded ~ and ~user constructs\r\n        (as returned by os.path.expanduser)\r\n        """', 1550, 8, 1552, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1552, 11, 1553, 0),
woosh.Token(woosh.NAME, 'if', 1553, 8, 1553, 10),
woosh.Token(woosh.OP, '(', 1553, 11, 1553, 12),
woosh.Token(woosh.NAME, 'not', 1553, 12, 1553, 15),
woosh.Token(woosh.OP, '(', 1553, 16, 1553, 17),
woosh.Token(woosh.NAME, 'self', 1553, 17, 1553, 21),
woosh.Token(woosh.OP, '.', 1553, 21, 1553, 22),
woosh.Token(woosh.NAME, '_drv', 1553, 22, 1553, 26),
woosh.Token(woosh.NAME, 'or', 1553, 27, 1553, 29),
woosh.Token(woosh.NAME, 'self', 1553, 30, 1553, 34),
woosh.Token(woosh.OP, '.', 1553, 34, 1553, 35),
woosh.Token(woosh.NAME, '_root', 1553, 35, 1553, 40),
woosh.Token(woosh.OP, ')', 1553, 40, 1553, 41),
woosh.Token(woosh.NAME, 'and', 1553, 42, 1553, 45),
woosh.Token(woosh.NAME, 'self', 1554, 12, 1554, 16),
woosh.Token(woosh.OP, '.', 1554, 16, 1554, 17),
woosh.Token(woosh.NAME, '_parts', 1554, 17, 1554, 23),
woosh.Token(woosh.NAME, 'and', 1554, 24, 1554, 27),
woosh.Token(woosh.NAME, 'self', 1554, 28, 1554, 32),
woosh.Token(woosh.OP, '.', 1554, 32, 1554, 33),
woosh.Token(woosh.NAME, '_parts', 1554, 33, 1554, 39),
woosh.Token(woosh.OP, '[', 1554, 39, 1554, 40),
woosh.Token(woosh.NUMBER, '0', 1554, 40, 1554, 41),
woosh.Token(woosh.OP, ']', 1554, 41, 1554, 42),
woosh.Token(woosh.OP, '[', 1554, 42, 1554, 43),
woosh.Token(woosh.OP, ':', 1554, 43, 1554, 44),
woosh.Token(woosh.NUMBER, '1', 1554, 44, 1554, 45),
woosh.Token(woosh.OP, ']', 1554, 45, 1554, 46),
woosh.Token(woosh.OP, '==', 1554, 47, 1554, 49),
woosh.Token(woosh.STRING, "'~'", 1554, 50, 1554, 53),
woosh.Token(woosh.OP, ')', 1554, 53, 1554, 54),
woosh.Token(woosh.OP, ':', 1554, 54, 1554, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1554, 55, 1555, 0),
woosh.Token(woosh.INDENT, '            ', 1555, 0, 1555, 12),
woosh.Token(woosh.NAME, 'homedir', 1555, 12, 1555, 19),
woosh.Token(woosh.OP, '=', 1555, 20, 1555, 21),
woosh.Token(woosh.NAME, 'self', 1555, 22, 1555, 26),
woosh.Token(woosh.OP, '.', 1555, 26, 1555, 27),
woosh.Token(woosh.NAME, '_flavour', 1555, 27, 1555, 35),
woosh.Token(woosh.OP, '.', 1555, 35, 1555, 36),
woosh.Token(woosh.NAME, 'gethomedir', 1555, 36, 1555, 46),
woosh.Token(woosh.OP, '(', 1555, 46, 1555, 47),
woosh.Token(woosh.NAME, 'self', 1555, 47, 1555, 51),
woosh.Token(woosh.OP, '.', 1555, 51, 1555, 52),
woosh.Token(woosh.NAME, '_parts', 1555, 52, 1555, 58),
woosh.Token(woosh.OP, '[', 1555, 58, 1555, 59),
woosh.Token(woosh.NUMBER, '0', 1555, 59, 1555, 60),
woosh.Token(woosh.OP, ']', 1555, 60, 1555, 61),
woosh.Token(woosh.OP, '[', 1555, 61, 1555, 62),
woosh.Token(woosh.NUMBER, '1', 1555, 62, 1555, 63),
woosh.Token(woosh.OP, ':', 1555, 63, 1555, 64),
woosh.Token(woosh.OP, ']', 1555, 64, 1555, 65),
woosh.Token(woosh.OP, ')', 1555, 65, 1555, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1555, 66, 1556, 0),
woosh.Token(woosh.NAME, 'return', 1556, 12, 1556, 18),
woosh.Token(woosh.NAME, 'self', 1556, 19, 1556, 23),
woosh.Token(woosh.OP, '.', 1556, 23, 1556, 24),
woosh.Token(woosh.NAME, '_from_parts', 1556, 24, 1556, 35),
woosh.Token(woosh.OP, '(', 1556, 35, 1556, 36),
woosh.Token(woosh.OP, '[', 1556, 36, 1556, 37),
woosh.Token(woosh.NAME, 'homedir', 1556, 37, 1556, 44),
woosh.Token(woosh.OP, ']', 1556, 44, 1556, 45),
woosh.Token(woosh.OP, '+', 1556, 46, 1556, 47),
woosh.Token(woosh.NAME, 'self', 1556, 48, 1556, 52),
woosh.Token(woosh.OP, '.', 1556, 52, 1556, 53),
woosh.Token(woosh.NAME, '_parts', 1556, 53, 1556, 59),
woosh.Token(woosh.OP, '[', 1556, 59, 1556, 60),
woosh.Token(woosh.NUMBER, '1', 1556, 60, 1556, 61),
woosh.Token(woosh.OP, ':', 1556, 61, 1556, 62),
woosh.Token(woosh.OP, ']', 1556, 62, 1556, 63),
woosh.Token(woosh.OP, ')', 1556, 63, 1556, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1556, 64, 1557, 0),
woosh.Token(woosh.DEDENT, '        ', 1558, 0, 1558, 8),
woosh.Token(woosh.NAME, 'return', 1558, 8, 1558, 14),
woosh.Token(woosh.NAME, 'self', 1558, 15, 1558, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1558, 19, 1559, 0),
woosh.Token(woosh.DEDENT, '', 1561, 0, 1561, 0),
woosh.Token(woosh.DEDENT, '', 1561, 0, 1561, 0),
woosh.Token(woosh.NAME, 'class', 1561, 0, 1561, 5),
woosh.Token(woosh.NAME, 'PosixPath', 1561, 6, 1561, 15),
woosh.Token(woosh.OP, '(', 1561, 15, 1561, 16),
woosh.Token(woosh.NAME, 'Path', 1561, 16, 1561, 20),
woosh.Token(woosh.OP, ',', 1561, 20, 1561, 21),
woosh.Token(woosh.NAME, 'PurePosixPath', 1561, 22, 1561, 35),
woosh.Token(woosh.OP, ')', 1561, 35, 1561, 36),
woosh.Token(woosh.OP, ':', 1561, 36, 1561, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1561, 37, 1562, 0),
woosh.Token(woosh.INDENT, '    ', 1562, 0, 1562, 4),
woosh.Token(woosh.STRING, '"""Path subclass for non-Windows systems.\r\n\r\n    On a POSIX system, instantiating a Path should return this object.\r\n    """', 1562, 4, 1565, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1565, 7, 1566, 0),
woosh.Token(woosh.NAME, '__slots__', 1566, 4, 1566, 13),
woosh.Token(woosh.OP, '=', 1566, 14, 1566, 15),
woosh.Token(woosh.OP, '(', 1566, 16, 1566, 17),
woosh.Token(woosh.OP, ')', 1566, 17, 1566, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1566, 18, 1567, 0),
woosh.Token(woosh.DEDENT, '', 1568, 0, 1568, 0),
woosh.Token(woosh.NAME, 'class', 1568, 0, 1568, 5),
woosh.Token(woosh.NAME, 'WindowsPath', 1568, 6, 1568, 17),
woosh.Token(woosh.OP, '(', 1568, 17, 1568, 18),
woosh.Token(woosh.NAME, 'Path', 1568, 18, 1568, 22),
woosh.Token(woosh.OP, ',', 1568, 22, 1568, 23),
woosh.Token(woosh.NAME, 'PureWindowsPath', 1568, 24, 1568, 39),
woosh.Token(woosh.OP, ')', 1568, 39, 1568, 40),
woosh.Token(woosh.OP, ':', 1568, 40, 1568, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1568, 41, 1569, 0),
woosh.Token(woosh.INDENT, '    ', 1569, 0, 1569, 4),
woosh.Token(woosh.STRING, '"""Path subclass for Windows systems.\r\n\r\n    On a Windows system, instantiating a Path should return this object.\r\n    """', 1569, 4, 1572, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1572, 7, 1573, 0),
woosh.Token(woosh.NAME, '__slots__', 1573, 4, 1573, 13),
woosh.Token(woosh.OP, '=', 1573, 14, 1573, 15),
woosh.Token(woosh.OP, '(', 1573, 16, 1573, 17),
woosh.Token(woosh.OP, ')', 1573, 17, 1573, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1573, 18, 1574, 0),
woosh.Token(woosh.NAME, 'def', 1575, 4, 1575, 7),
woosh.Token(woosh.NAME, 'is_mount', 1575, 8, 1575, 16),
woosh.Token(woosh.OP, '(', 1575, 16, 1575, 17),
woosh.Token(woosh.NAME, 'self', 1575, 17, 1575, 21),
woosh.Token(woosh.OP, ')', 1575, 21, 1575, 22),
woosh.Token(woosh.OP, ':', 1575, 22, 1575, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1575, 23, 1576, 0),
woosh.Token(woosh.INDENT, '        ', 1576, 0, 1576, 8),
woosh.Token(woosh.NAME, 'raise', 1576, 8, 1576, 13),
woosh.Token(woosh.NAME, 'NotImplementedError', 1576, 14, 1576, 33),
woosh.Token(woosh.OP, '(', 1576, 33, 1576, 34),
woosh.Token(woosh.STRING, '"Path.is_mount() is unsupported on this system"', 1576, 34, 1576, 81),
woosh.Token(woosh.OP, ')', 1576, 81, 1576, 82),
woosh.Token(woosh.NEWLINE, '\r\n', 1576, 82, 1577, 0),
woosh.Token(woosh.DEDENT, '', 1577, 0, 1577, 0),
woosh.Token(woosh.DEDENT, '', 1577, 0, 1577, 0),
woosh.Token(woosh.EOF, '', 1577, 0, 1577, 0),
]
