
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../../sample/'
def test():
    with open('F:\\code\\woosh\\sample\\stdlib\\socket.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.COMMENT, '# Wrapper module for _socket, providing some additional facilities', 1, 0, 1, 66),
woosh.Token(woosh.COMMENT, '# implemented in Python.', 2, 0, 2, 24),
woosh.Token(woosh.STRING, '"""\\\r\nThis module provides socket operations and some related functions.\r\nOn Unix, it supports IP (Internet Protocol) and Unix domain sockets.\r\nOn other systems, it only supports IP. Functions specific for a\r\nsocket are available as methods of the socket object.\r\n\r\nFunctions:\r\n\r\nsocket() -- create a new socket object\r\nsocketpair() -- create a pair of new socket objects [*]\r\nfromfd() -- create a socket object from an open file descriptor [*]\r\nsend_fds() -- Send file descriptor to the socket.\r\nrecv_fds() -- Recieve file descriptors from the socket.\r\nfromshare() -- create a socket object from data received from socket.share() [*]\r\ngethostname() -- return the current hostname\r\ngethostbyname() -- map a hostname to its IP number\r\ngethostbyaddr() -- map an IP number or hostname to DNS info\r\ngetservbyname() -- map a service name and a protocol name to a port number\r\ngetprotobyname() -- map a protocol name (e.g. \'tcp\') to a number\r\nntohs(), ntohl() -- convert 16, 32 bit int from network to host byte order\r\nhtons(), htonl() -- convert 16, 32 bit int from host to network byte order\r\ninet_aton() -- convert IP addr string (123.45.67.89) to 32-bit packed format\r\ninet_ntoa() -- convert 32-bit packed format IP to string (123.45.67.89)\r\nsocket.getdefaulttimeout() -- get the default timeout value\r\nsocket.setdefaulttimeout() -- set the default timeout value\r\ncreate_connection() -- connects to an address, with an optional timeout and\r\n                       optional source address.\r\n\r\n [*] not available on all platforms!\r\n\r\nSpecial objects:\r\n\r\nSocketType -- type object for socket objects\r\nerror -- exception raised for I/O errors\r\nhas_ipv6 -- boolean value indicating if IPv6 is supported\r\n\r\nIntEnum constants:\r\n\r\nAF_INET, AF_UNIX -- socket domains (first argument to socket() call)\r\nSOCK_STREAM, SOCK_DGRAM, SOCK_RAW -- socket types (second argument)\r\n\r\nInteger constants:\r\n\r\nMany other constants may be defined; these may be used in calls to\r\nthe setsockopt() and getsockopt() methods.\r\n"""', 4, 0, 49, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 49, 3, 50, 0),
woosh.Token(woosh.NAME, 'import', 51, 0, 51, 6),
woosh.Token(woosh.NAME, '_socket', 51, 7, 51, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 51, 14, 52, 0),
woosh.Token(woosh.NAME, 'from', 52, 0, 52, 4),
woosh.Token(woosh.NAME, '_socket', 52, 5, 52, 12),
woosh.Token(woosh.NAME, 'import', 52, 13, 52, 19),
woosh.Token(woosh.OP, '*', 52, 20, 52, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 21, 53, 0),
woosh.Token(woosh.NAME, 'import', 54, 0, 54, 6),
woosh.Token(woosh.NAME, 'os', 54, 7, 54, 9),
woosh.Token(woosh.OP, ',', 54, 9, 54, 10),
woosh.Token(woosh.NAME, 'sys', 54, 11, 54, 14),
woosh.Token(woosh.OP, ',', 54, 14, 54, 15),
woosh.Token(woosh.NAME, 'io', 54, 16, 54, 18),
woosh.Token(woosh.OP, ',', 54, 18, 54, 19),
woosh.Token(woosh.NAME, 'selectors', 54, 20, 54, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 29, 55, 0),
woosh.Token(woosh.NAME, 'from', 55, 0, 55, 4),
woosh.Token(woosh.NAME, 'enum', 55, 5, 55, 9),
woosh.Token(woosh.NAME, 'import', 55, 10, 55, 16),
woosh.Token(woosh.NAME, 'IntEnum', 55, 17, 55, 24),
woosh.Token(woosh.OP, ',', 55, 24, 55, 25),
woosh.Token(woosh.NAME, 'IntFlag', 55, 26, 55, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 33, 56, 0),
woosh.Token(woosh.NAME, 'try', 57, 0, 57, 3),
woosh.Token(woosh.OP, ':', 57, 3, 57, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 57, 4, 58, 0),
woosh.Token(woosh.INDENT, '    ', 58, 0, 58, 4),
woosh.Token(woosh.NAME, 'import', 58, 4, 58, 10),
woosh.Token(woosh.NAME, 'errno', 58, 11, 58, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 16, 59, 0),
woosh.Token(woosh.DEDENT, '', 59, 0, 59, 0),
woosh.Token(woosh.NAME, 'except', 59, 0, 59, 6),
woosh.Token(woosh.NAME, 'ImportError', 59, 7, 59, 18),
woosh.Token(woosh.OP, ':', 59, 18, 59, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 59, 19, 60, 0),
woosh.Token(woosh.INDENT, '    ', 60, 0, 60, 4),
woosh.Token(woosh.NAME, 'errno', 60, 4, 60, 9),
woosh.Token(woosh.OP, '=', 60, 10, 60, 11),
woosh.Token(woosh.NAME, 'None', 60, 12, 60, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 60, 16, 61, 0),
woosh.Token(woosh.DEDENT, '', 61, 0, 61, 0),
woosh.Token(woosh.NAME, 'EBADF', 61, 0, 61, 5),
woosh.Token(woosh.OP, '=', 61, 6, 61, 7),
woosh.Token(woosh.NAME, 'getattr', 61, 8, 61, 15),
woosh.Token(woosh.OP, '(', 61, 15, 61, 16),
woosh.Token(woosh.NAME, 'errno', 61, 16, 61, 21),
woosh.Token(woosh.OP, ',', 61, 21, 61, 22),
woosh.Token(woosh.STRING, "'EBADF'", 61, 23, 61, 30),
woosh.Token(woosh.OP, ',', 61, 30, 61, 31),
woosh.Token(woosh.NUMBER, '9', 61, 32, 61, 33),
woosh.Token(woosh.OP, ')', 61, 33, 61, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 61, 34, 62, 0),
woosh.Token(woosh.NAME, 'EAGAIN', 62, 0, 62, 6),
woosh.Token(woosh.OP, '=', 62, 7, 62, 8),
woosh.Token(woosh.NAME, 'getattr', 62, 9, 62, 16),
woosh.Token(woosh.OP, '(', 62, 16, 62, 17),
woosh.Token(woosh.NAME, 'errno', 62, 17, 62, 22),
woosh.Token(woosh.OP, ',', 62, 22, 62, 23),
woosh.Token(woosh.STRING, "'EAGAIN'", 62, 24, 62, 32),
woosh.Token(woosh.OP, ',', 62, 32, 62, 33),
woosh.Token(woosh.NUMBER, '11', 62, 34, 62, 36),
woosh.Token(woosh.OP, ')', 62, 36, 62, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 62, 37, 63, 0),
woosh.Token(woosh.NAME, 'EWOULDBLOCK', 63, 0, 63, 11),
woosh.Token(woosh.OP, '=', 63, 12, 63, 13),
woosh.Token(woosh.NAME, 'getattr', 63, 14, 63, 21),
woosh.Token(woosh.OP, '(', 63, 21, 63, 22),
woosh.Token(woosh.NAME, 'errno', 63, 22, 63, 27),
woosh.Token(woosh.OP, ',', 63, 27, 63, 28),
woosh.Token(woosh.STRING, "'EWOULDBLOCK'", 63, 29, 63, 42),
woosh.Token(woosh.OP, ',', 63, 42, 63, 43),
woosh.Token(woosh.NUMBER, '11', 63, 44, 63, 46),
woosh.Token(woosh.OP, ')', 63, 46, 63, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 63, 47, 64, 0),
woosh.Token(woosh.NAME, '__all__', 65, 0, 65, 7),
woosh.Token(woosh.OP, '=', 65, 8, 65, 9),
woosh.Token(woosh.OP, '[', 65, 10, 65, 11),
woosh.Token(woosh.STRING, '"fromfd"', 65, 11, 65, 19),
woosh.Token(woosh.OP, ',', 65, 19, 65, 20),
woosh.Token(woosh.STRING, '"getfqdn"', 65, 21, 65, 30),
woosh.Token(woosh.OP, ',', 65, 30, 65, 31),
woosh.Token(woosh.STRING, '"create_connection"', 65, 32, 65, 51),
woosh.Token(woosh.OP, ',', 65, 51, 65, 52),
woosh.Token(woosh.STRING, '"create_server"', 65, 53, 65, 68),
woosh.Token(woosh.OP, ',', 65, 68, 65, 69),
woosh.Token(woosh.STRING, '"has_dualstack_ipv6"', 66, 11, 66, 31),
woosh.Token(woosh.OP, ',', 66, 31, 66, 32),
woosh.Token(woosh.STRING, '"AddressFamily"', 66, 33, 66, 48),
woosh.Token(woosh.OP, ',', 66, 48, 66, 49),
woosh.Token(woosh.STRING, '"SocketKind"', 66, 50, 66, 62),
woosh.Token(woosh.OP, ']', 66, 62, 66, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 63, 67, 0),
woosh.Token(woosh.NAME, '__all__', 67, 0, 67, 7),
woosh.Token(woosh.OP, '.', 67, 7, 67, 8),
woosh.Token(woosh.NAME, 'extend', 67, 8, 67, 14),
woosh.Token(woosh.OP, '(', 67, 14, 67, 15),
woosh.Token(woosh.NAME, 'os', 67, 15, 67, 17),
woosh.Token(woosh.OP, '.', 67, 17, 67, 18),
woosh.Token(woosh.NAME, '_get_exports_list', 67, 18, 67, 35),
woosh.Token(woosh.OP, '(', 67, 35, 67, 36),
woosh.Token(woosh.NAME, '_socket', 67, 36, 67, 43),
woosh.Token(woosh.OP, ')', 67, 43, 67, 44),
woosh.Token(woosh.OP, ')', 67, 44, 67, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 67, 45, 68, 0),
woosh.Token(woosh.COMMENT, '# Set up the socket.AF_* socket.SOCK_* constants as members of IntEnums for', 69, 0, 69, 75),
woosh.Token(woosh.COMMENT, '# nicer string representations.', 70, 0, 70, 31),
woosh.Token(woosh.COMMENT, '# Note that _socket only knows about the integer values. The public interface', 71, 0, 71, 77),
woosh.Token(woosh.COMMENT, '# in this module understands the enums and translates them back from integers', 72, 0, 72, 77),
woosh.Token(woosh.COMMENT, '# where needed (e.g. .family property of a socket object).', 73, 0, 73, 58),
woosh.Token(woosh.NAME, 'IntEnum', 75, 0, 75, 7),
woosh.Token(woosh.OP, '.', 75, 7, 75, 8),
woosh.Token(woosh.NAME, '_convert_', 75, 8, 75, 17),
woosh.Token(woosh.OP, '(', 75, 17, 75, 18),
woosh.Token(woosh.STRING, "'AddressFamily'", 76, 8, 76, 23),
woosh.Token(woosh.OP, ',', 76, 23, 76, 24),
woosh.Token(woosh.NAME, '__name__', 77, 8, 77, 16),
woosh.Token(woosh.OP, ',', 77, 16, 77, 17),
woosh.Token(woosh.NAME, 'lambda', 78, 8, 78, 14),
woosh.Token(woosh.NAME, 'C', 78, 15, 78, 16),
woosh.Token(woosh.OP, ':', 78, 16, 78, 17),
woosh.Token(woosh.NAME, 'C', 78, 18, 78, 19),
woosh.Token(woosh.OP, '.', 78, 19, 78, 20),
woosh.Token(woosh.NAME, 'isupper', 78, 20, 78, 27),
woosh.Token(woosh.OP, '(', 78, 27, 78, 28),
woosh.Token(woosh.OP, ')', 78, 28, 78, 29),
woosh.Token(woosh.NAME, 'and', 78, 30, 78, 33),
woosh.Token(woosh.NAME, 'C', 78, 34, 78, 35),
woosh.Token(woosh.OP, '.', 78, 35, 78, 36),
woosh.Token(woosh.NAME, 'startswith', 78, 36, 78, 46),
woosh.Token(woosh.OP, '(', 78, 46, 78, 47),
woosh.Token(woosh.STRING, "'AF_'", 78, 47, 78, 52),
woosh.Token(woosh.OP, ')', 78, 52, 78, 53),
woosh.Token(woosh.OP, ')', 78, 53, 78, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 54, 79, 0),
woosh.Token(woosh.NAME, 'IntEnum', 80, 0, 80, 7),
woosh.Token(woosh.OP, '.', 80, 7, 80, 8),
woosh.Token(woosh.NAME, '_convert_', 80, 8, 80, 17),
woosh.Token(woosh.OP, '(', 80, 17, 80, 18),
woosh.Token(woosh.STRING, "'SocketKind'", 81, 8, 81, 20),
woosh.Token(woosh.OP, ',', 81, 20, 81, 21),
woosh.Token(woosh.NAME, '__name__', 82, 8, 82, 16),
woosh.Token(woosh.OP, ',', 82, 16, 82, 17),
woosh.Token(woosh.NAME, 'lambda', 83, 8, 83, 14),
woosh.Token(woosh.NAME, 'C', 83, 15, 83, 16),
woosh.Token(woosh.OP, ':', 83, 16, 83, 17),
woosh.Token(woosh.NAME, 'C', 83, 18, 83, 19),
woosh.Token(woosh.OP, '.', 83, 19, 83, 20),
woosh.Token(woosh.NAME, 'isupper', 83, 20, 83, 27),
woosh.Token(woosh.OP, '(', 83, 27, 83, 28),
woosh.Token(woosh.OP, ')', 83, 28, 83, 29),
woosh.Token(woosh.NAME, 'and', 83, 30, 83, 33),
woosh.Token(woosh.NAME, 'C', 83, 34, 83, 35),
woosh.Token(woosh.OP, '.', 83, 35, 83, 36),
woosh.Token(woosh.NAME, 'startswith', 83, 36, 83, 46),
woosh.Token(woosh.OP, '(', 83, 46, 83, 47),
woosh.Token(woosh.STRING, "'SOCK_'", 83, 47, 83, 54),
woosh.Token(woosh.OP, ')', 83, 54, 83, 55),
woosh.Token(woosh.OP, ')', 83, 55, 83, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 83, 56, 84, 0),
woosh.Token(woosh.NAME, 'IntFlag', 85, 0, 85, 7),
woosh.Token(woosh.OP, '.', 85, 7, 85, 8),
woosh.Token(woosh.NAME, '_convert_', 85, 8, 85, 17),
woosh.Token(woosh.OP, '(', 85, 17, 85, 18),
woosh.Token(woosh.STRING, "'MsgFlag'", 86, 8, 86, 17),
woosh.Token(woosh.OP, ',', 86, 17, 86, 18),
woosh.Token(woosh.NAME, '__name__', 87, 8, 87, 16),
woosh.Token(woosh.OP, ',', 87, 16, 87, 17),
woosh.Token(woosh.NAME, 'lambda', 88, 8, 88, 14),
woosh.Token(woosh.NAME, 'C', 88, 15, 88, 16),
woosh.Token(woosh.OP, ':', 88, 16, 88, 17),
woosh.Token(woosh.NAME, 'C', 88, 18, 88, 19),
woosh.Token(woosh.OP, '.', 88, 19, 88, 20),
woosh.Token(woosh.NAME, 'isupper', 88, 20, 88, 27),
woosh.Token(woosh.OP, '(', 88, 27, 88, 28),
woosh.Token(woosh.OP, ')', 88, 28, 88, 29),
woosh.Token(woosh.NAME, 'and', 88, 30, 88, 33),
woosh.Token(woosh.NAME, 'C', 88, 34, 88, 35),
woosh.Token(woosh.OP, '.', 88, 35, 88, 36),
woosh.Token(woosh.NAME, 'startswith', 88, 36, 88, 46),
woosh.Token(woosh.OP, '(', 88, 46, 88, 47),
woosh.Token(woosh.STRING, "'MSG_'", 88, 47, 88, 53),
woosh.Token(woosh.OP, ')', 88, 53, 88, 54),
woosh.Token(woosh.OP, ')', 88, 54, 88, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 88, 55, 89, 0),
woosh.Token(woosh.NAME, 'IntFlag', 90, 0, 90, 7),
woosh.Token(woosh.OP, '.', 90, 7, 90, 8),
woosh.Token(woosh.NAME, '_convert_', 90, 8, 90, 17),
woosh.Token(woosh.OP, '(', 90, 17, 90, 18),
woosh.Token(woosh.STRING, "'AddressInfo'", 91, 8, 91, 21),
woosh.Token(woosh.OP, ',', 91, 21, 91, 22),
woosh.Token(woosh.NAME, '__name__', 92, 8, 92, 16),
woosh.Token(woosh.OP, ',', 92, 16, 92, 17),
woosh.Token(woosh.NAME, 'lambda', 93, 8, 93, 14),
woosh.Token(woosh.NAME, 'C', 93, 15, 93, 16),
woosh.Token(woosh.OP, ':', 93, 16, 93, 17),
woosh.Token(woosh.NAME, 'C', 93, 18, 93, 19),
woosh.Token(woosh.OP, '.', 93, 19, 93, 20),
woosh.Token(woosh.NAME, 'isupper', 93, 20, 93, 27),
woosh.Token(woosh.OP, '(', 93, 27, 93, 28),
woosh.Token(woosh.OP, ')', 93, 28, 93, 29),
woosh.Token(woosh.NAME, 'and', 93, 30, 93, 33),
woosh.Token(woosh.NAME, 'C', 93, 34, 93, 35),
woosh.Token(woosh.OP, '.', 93, 35, 93, 36),
woosh.Token(woosh.NAME, 'startswith', 93, 36, 93, 46),
woosh.Token(woosh.OP, '(', 93, 46, 93, 47),
woosh.Token(woosh.STRING, "'AI_'", 93, 47, 93, 52),
woosh.Token(woosh.OP, ')', 93, 52, 93, 53),
woosh.Token(woosh.OP, ')', 93, 53, 93, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 54, 94, 0),
woosh.Token(woosh.NAME, '_LOCALHOST', 95, 0, 95, 10),
woosh.Token(woosh.OP, '=', 95, 14, 95, 15),
woosh.Token(woosh.STRING, "'127.0.0.1'", 95, 16, 95, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 27, 96, 0),
woosh.Token(woosh.NAME, '_LOCALHOST_V6', 96, 0, 96, 13),
woosh.Token(woosh.OP, '=', 96, 14, 96, 15),
woosh.Token(woosh.STRING, "'::1'", 96, 16, 96, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 96, 21, 97, 0),
woosh.Token(woosh.NAME, 'def', 99, 0, 99, 3),
woosh.Token(woosh.NAME, '_intenum_converter', 99, 4, 99, 22),
woosh.Token(woosh.OP, '(', 99, 22, 99, 23),
woosh.Token(woosh.NAME, 'value', 99, 23, 99, 28),
woosh.Token(woosh.OP, ',', 99, 28, 99, 29),
woosh.Token(woosh.NAME, 'enum_klass', 99, 30, 99, 40),
woosh.Token(woosh.OP, ')', 99, 40, 99, 41),
woosh.Token(woosh.OP, ':', 99, 41, 99, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 99, 42, 100, 0),
woosh.Token(woosh.INDENT, '    ', 100, 0, 100, 4),
woosh.Token(woosh.STRING, '"""Convert a numeric family value to an IntEnum member.\r\n\r\n    If it\'s not a known member, return the numeric value itself.\r\n    """', 100, 4, 103, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 103, 7, 104, 0),
woosh.Token(woosh.NAME, 'try', 104, 4, 104, 7),
woosh.Token(woosh.OP, ':', 104, 7, 104, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 104, 8, 105, 0),
woosh.Token(woosh.INDENT, '        ', 105, 0, 105, 8),
woosh.Token(woosh.NAME, 'return', 105, 8, 105, 14),
woosh.Token(woosh.NAME, 'enum_klass', 105, 15, 105, 25),
woosh.Token(woosh.OP, '(', 105, 25, 105, 26),
woosh.Token(woosh.NAME, 'value', 105, 26, 105, 31),
woosh.Token(woosh.OP, ')', 105, 31, 105, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 105, 32, 106, 0),
woosh.Token(woosh.DEDENT, '    ', 106, 0, 106, 4),
woosh.Token(woosh.NAME, 'except', 106, 4, 106, 10),
woosh.Token(woosh.NAME, 'ValueError', 106, 11, 106, 21),
woosh.Token(woosh.OP, ':', 106, 21, 106, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 106, 22, 107, 0),
woosh.Token(woosh.INDENT, '        ', 107, 0, 107, 8),
woosh.Token(woosh.NAME, 'return', 107, 8, 107, 14),
woosh.Token(woosh.NAME, 'value', 107, 15, 107, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 107, 20, 108, 0),
woosh.Token(woosh.COMMENT, '# WSA error codes', 110, 0, 110, 17),
woosh.Token(woosh.DEDENT, '', 111, 0, 111, 0),
woosh.Token(woosh.DEDENT, '', 111, 0, 111, 0),
woosh.Token(woosh.NAME, 'if', 111, 0, 111, 2),
woosh.Token(woosh.NAME, 'sys', 111, 3, 111, 6),
woosh.Token(woosh.OP, '.', 111, 6, 111, 7),
woosh.Token(woosh.NAME, 'platform', 111, 7, 111, 15),
woosh.Token(woosh.OP, '.', 111, 15, 111, 16),
woosh.Token(woosh.NAME, 'lower', 111, 16, 111, 21),
woosh.Token(woosh.OP, '(', 111, 21, 111, 22),
woosh.Token(woosh.OP, ')', 111, 22, 111, 23),
woosh.Token(woosh.OP, '.', 111, 23, 111, 24),
woosh.Token(woosh.NAME, 'startswith', 111, 24, 111, 34),
woosh.Token(woosh.OP, '(', 111, 34, 111, 35),
woosh.Token(woosh.STRING, '"win"', 111, 35, 111, 40),
woosh.Token(woosh.OP, ')', 111, 40, 111, 41),
woosh.Token(woosh.OP, ':', 111, 41, 111, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 111, 42, 112, 0),
woosh.Token(woosh.INDENT, '    ', 112, 0, 112, 4),
woosh.Token(woosh.NAME, 'errorTab', 112, 4, 112, 12),
woosh.Token(woosh.OP, '=', 112, 13, 112, 14),
woosh.Token(woosh.OP, '{', 112, 15, 112, 16),
woosh.Token(woosh.OP, '}', 112, 16, 112, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 112, 17, 113, 0),
woosh.Token(woosh.NAME, 'errorTab', 113, 4, 113, 12),
woosh.Token(woosh.OP, '[', 113, 12, 113, 13),
woosh.Token(woosh.NUMBER, '6', 113, 13, 113, 14),
woosh.Token(woosh.OP, ']', 113, 14, 113, 15),
woosh.Token(woosh.OP, '=', 113, 16, 113, 17),
woosh.Token(woosh.STRING, '"Specified event object handle is invalid."', 113, 18, 113, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 113, 61, 114, 0),
woosh.Token(woosh.NAME, 'errorTab', 114, 4, 114, 12),
woosh.Token(woosh.OP, '[', 114, 12, 114, 13),
woosh.Token(woosh.NUMBER, '8', 114, 13, 114, 14),
woosh.Token(woosh.OP, ']', 114, 14, 114, 15),
woosh.Token(woosh.OP, '=', 114, 16, 114, 17),
woosh.Token(woosh.STRING, '"Insufficient memory available."', 114, 18, 114, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 114, 50, 115, 0),
woosh.Token(woosh.NAME, 'errorTab', 115, 4, 115, 12),
woosh.Token(woosh.OP, '[', 115, 12, 115, 13),
woosh.Token(woosh.NUMBER, '87', 115, 13, 115, 15),
woosh.Token(woosh.OP, ']', 115, 15, 115, 16),
woosh.Token(woosh.OP, '=', 115, 17, 115, 18),
woosh.Token(woosh.STRING, '"One or more parameters are invalid."', 115, 19, 115, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 56, 116, 0),
woosh.Token(woosh.NAME, 'errorTab', 116, 4, 116, 12),
woosh.Token(woosh.OP, '[', 116, 12, 116, 13),
woosh.Token(woosh.NUMBER, '995', 116, 13, 116, 16),
woosh.Token(woosh.OP, ']', 116, 16, 116, 17),
woosh.Token(woosh.OP, '=', 116, 18, 116, 19),
woosh.Token(woosh.STRING, '"Overlapped operation aborted."', 116, 20, 116, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 51, 117, 0),
woosh.Token(woosh.NAME, 'errorTab', 117, 4, 117, 12),
woosh.Token(woosh.OP, '[', 117, 12, 117, 13),
woosh.Token(woosh.NUMBER, '996', 117, 13, 117, 16),
woosh.Token(woosh.OP, ']', 117, 16, 117, 17),
woosh.Token(woosh.OP, '=', 117, 18, 117, 19),
woosh.Token(woosh.STRING, '"Overlapped I/O event object not in signaled state."', 117, 20, 117, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 72, 118, 0),
woosh.Token(woosh.NAME, 'errorTab', 118, 4, 118, 12),
woosh.Token(woosh.OP, '[', 118, 12, 118, 13),
woosh.Token(woosh.NUMBER, '997', 118, 13, 118, 16),
woosh.Token(woosh.OP, ']', 118, 16, 118, 17),
woosh.Token(woosh.OP, '=', 118, 18, 118, 19),
woosh.Token(woosh.STRING, '"Overlapped operation will complete later."', 118, 20, 118, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 63, 119, 0),
woosh.Token(woosh.NAME, 'errorTab', 119, 4, 119, 12),
woosh.Token(woosh.OP, '[', 119, 12, 119, 13),
woosh.Token(woosh.NUMBER, '10004', 119, 13, 119, 18),
woosh.Token(woosh.OP, ']', 119, 18, 119, 19),
woosh.Token(woosh.OP, '=', 119, 20, 119, 21),
woosh.Token(woosh.STRING, '"The operation was interrupted."', 119, 22, 119, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 119, 54, 120, 0),
woosh.Token(woosh.NAME, 'errorTab', 120, 4, 120, 12),
woosh.Token(woosh.OP, '[', 120, 12, 120, 13),
woosh.Token(woosh.NUMBER, '10009', 120, 13, 120, 18),
woosh.Token(woosh.OP, ']', 120, 18, 120, 19),
woosh.Token(woosh.OP, '=', 120, 20, 120, 21),
woosh.Token(woosh.STRING, '"A bad file handle was passed."', 120, 22, 120, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 120, 53, 121, 0),
woosh.Token(woosh.NAME, 'errorTab', 121, 4, 121, 12),
woosh.Token(woosh.OP, '[', 121, 12, 121, 13),
woosh.Token(woosh.NUMBER, '10013', 121, 13, 121, 18),
woosh.Token(woosh.OP, ']', 121, 18, 121, 19),
woosh.Token(woosh.OP, '=', 121, 20, 121, 21),
woosh.Token(woosh.STRING, '"Permission denied."', 121, 22, 121, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 121, 42, 122, 0),
woosh.Token(woosh.NAME, 'errorTab', 122, 4, 122, 12),
woosh.Token(woosh.OP, '[', 122, 12, 122, 13),
woosh.Token(woosh.NUMBER, '10014', 122, 13, 122, 18),
woosh.Token(woosh.OP, ']', 122, 18, 122, 19),
woosh.Token(woosh.OP, '=', 122, 20, 122, 21),
woosh.Token(woosh.STRING, '"A fault occurred on the network??"', 122, 22, 122, 57),
woosh.Token(woosh.COMMENT, '# WSAEFAULT', 122, 59, 122, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 122, 70, 123, 0),
woosh.Token(woosh.NAME, 'errorTab', 123, 4, 123, 12),
woosh.Token(woosh.OP, '[', 123, 12, 123, 13),
woosh.Token(woosh.NUMBER, '10022', 123, 13, 123, 18),
woosh.Token(woosh.OP, ']', 123, 18, 123, 19),
woosh.Token(woosh.OP, '=', 123, 20, 123, 21),
woosh.Token(woosh.STRING, '"An invalid operation was attempted."', 123, 22, 123, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 123, 59, 124, 0),
woosh.Token(woosh.NAME, 'errorTab', 124, 4, 124, 12),
woosh.Token(woosh.OP, '[', 124, 12, 124, 13),
woosh.Token(woosh.NUMBER, '10024', 124, 13, 124, 18),
woosh.Token(woosh.OP, ']', 124, 18, 124, 19),
woosh.Token(woosh.OP, '=', 124, 20, 124, 21),
woosh.Token(woosh.STRING, '"Too many open files."', 124, 22, 124, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 124, 44, 125, 0),
woosh.Token(woosh.NAME, 'errorTab', 125, 4, 125, 12),
woosh.Token(woosh.OP, '[', 125, 12, 125, 13),
woosh.Token(woosh.NUMBER, '10035', 125, 13, 125, 18),
woosh.Token(woosh.OP, ']', 125, 18, 125, 19),
woosh.Token(woosh.OP, '=', 125, 20, 125, 21),
woosh.Token(woosh.STRING, '"The socket operation would block"', 125, 22, 125, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 56, 126, 0),
woosh.Token(woosh.NAME, 'errorTab', 126, 4, 126, 12),
woosh.Token(woosh.OP, '[', 126, 12, 126, 13),
woosh.Token(woosh.NUMBER, '10036', 126, 13, 126, 18),
woosh.Token(woosh.OP, ']', 126, 18, 126, 19),
woosh.Token(woosh.OP, '=', 126, 20, 126, 21),
woosh.Token(woosh.STRING, '"A blocking operation is already in progress."', 126, 22, 126, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 68, 127, 0),
woosh.Token(woosh.NAME, 'errorTab', 127, 4, 127, 12),
woosh.Token(woosh.OP, '[', 127, 12, 127, 13),
woosh.Token(woosh.NUMBER, '10037', 127, 13, 127, 18),
woosh.Token(woosh.OP, ']', 127, 18, 127, 19),
woosh.Token(woosh.OP, '=', 127, 20, 127, 21),
woosh.Token(woosh.STRING, '"Operation already in progress."', 127, 22, 127, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 127, 54, 128, 0),
woosh.Token(woosh.NAME, 'errorTab', 128, 4, 128, 12),
woosh.Token(woosh.OP, '[', 128, 12, 128, 13),
woosh.Token(woosh.NUMBER, '10038', 128, 13, 128, 18),
woosh.Token(woosh.OP, ']', 128, 18, 128, 19),
woosh.Token(woosh.OP, '=', 128, 20, 128, 21),
woosh.Token(woosh.STRING, '"Socket operation on nonsocket."', 128, 22, 128, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 54, 129, 0),
woosh.Token(woosh.NAME, 'errorTab', 129, 4, 129, 12),
woosh.Token(woosh.OP, '[', 129, 12, 129, 13),
woosh.Token(woosh.NUMBER, '10039', 129, 13, 129, 18),
woosh.Token(woosh.OP, ']', 129, 18, 129, 19),
woosh.Token(woosh.OP, '=', 129, 20, 129, 21),
woosh.Token(woosh.STRING, '"Destination address required."', 129, 22, 129, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 53, 130, 0),
woosh.Token(woosh.NAME, 'errorTab', 130, 4, 130, 12),
woosh.Token(woosh.OP, '[', 130, 12, 130, 13),
woosh.Token(woosh.NUMBER, '10040', 130, 13, 130, 18),
woosh.Token(woosh.OP, ']', 130, 18, 130, 19),
woosh.Token(woosh.OP, '=', 130, 20, 130, 21),
woosh.Token(woosh.STRING, '"Message too long."', 130, 22, 130, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 41, 131, 0),
woosh.Token(woosh.NAME, 'errorTab', 131, 4, 131, 12),
woosh.Token(woosh.OP, '[', 131, 12, 131, 13),
woosh.Token(woosh.NUMBER, '10041', 131, 13, 131, 18),
woosh.Token(woosh.OP, ']', 131, 18, 131, 19),
woosh.Token(woosh.OP, '=', 131, 20, 131, 21),
woosh.Token(woosh.STRING, '"Protocol wrong type for socket."', 131, 22, 131, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 55, 132, 0),
woosh.Token(woosh.NAME, 'errorTab', 132, 4, 132, 12),
woosh.Token(woosh.OP, '[', 132, 12, 132, 13),
woosh.Token(woosh.NUMBER, '10042', 132, 13, 132, 18),
woosh.Token(woosh.OP, ']', 132, 18, 132, 19),
woosh.Token(woosh.OP, '=', 132, 20, 132, 21),
woosh.Token(woosh.STRING, '"Bad protocol option."', 132, 22, 132, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 44, 133, 0),
woosh.Token(woosh.NAME, 'errorTab', 133, 4, 133, 12),
woosh.Token(woosh.OP, '[', 133, 12, 133, 13),
woosh.Token(woosh.NUMBER, '10043', 133, 13, 133, 18),
woosh.Token(woosh.OP, ']', 133, 18, 133, 19),
woosh.Token(woosh.OP, '=', 133, 20, 133, 21),
woosh.Token(woosh.STRING, '"Protocol not supported."', 133, 22, 133, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 47, 134, 0),
woosh.Token(woosh.NAME, 'errorTab', 134, 4, 134, 12),
woosh.Token(woosh.OP, '[', 134, 12, 134, 13),
woosh.Token(woosh.NUMBER, '10044', 134, 13, 134, 18),
woosh.Token(woosh.OP, ']', 134, 18, 134, 19),
woosh.Token(woosh.OP, '=', 134, 20, 134, 21),
woosh.Token(woosh.STRING, '"Socket type not supported."', 134, 22, 134, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 50, 135, 0),
woosh.Token(woosh.NAME, 'errorTab', 135, 4, 135, 12),
woosh.Token(woosh.OP, '[', 135, 12, 135, 13),
woosh.Token(woosh.NUMBER, '10045', 135, 13, 135, 18),
woosh.Token(woosh.OP, ']', 135, 18, 135, 19),
woosh.Token(woosh.OP, '=', 135, 20, 135, 21),
woosh.Token(woosh.STRING, '"Operation not supported."', 135, 22, 135, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 48, 136, 0),
woosh.Token(woosh.NAME, 'errorTab', 136, 4, 136, 12),
woosh.Token(woosh.OP, '[', 136, 12, 136, 13),
woosh.Token(woosh.NUMBER, '10046', 136, 13, 136, 18),
woosh.Token(woosh.OP, ']', 136, 18, 136, 19),
woosh.Token(woosh.OP, '=', 136, 20, 136, 21),
woosh.Token(woosh.STRING, '"Protocol family not supported."', 136, 22, 136, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 54, 137, 0),
woosh.Token(woosh.NAME, 'errorTab', 137, 4, 137, 12),
woosh.Token(woosh.OP, '[', 137, 12, 137, 13),
woosh.Token(woosh.NUMBER, '10047', 137, 13, 137, 18),
woosh.Token(woosh.OP, ']', 137, 18, 137, 19),
woosh.Token(woosh.OP, '=', 137, 20, 137, 21),
woosh.Token(woosh.STRING, '"Address family not supported by protocol family."', 137, 22, 137, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 72, 138, 0),
woosh.Token(woosh.NAME, 'errorTab', 138, 4, 138, 12),
woosh.Token(woosh.OP, '[', 138, 12, 138, 13),
woosh.Token(woosh.NUMBER, '10048', 138, 13, 138, 18),
woosh.Token(woosh.OP, ']', 138, 18, 138, 19),
woosh.Token(woosh.OP, '=', 138, 20, 138, 21),
woosh.Token(woosh.STRING, '"The network address is in use."', 138, 22, 138, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 54, 139, 0),
woosh.Token(woosh.NAME, 'errorTab', 139, 4, 139, 12),
woosh.Token(woosh.OP, '[', 139, 12, 139, 13),
woosh.Token(woosh.NUMBER, '10049', 139, 13, 139, 18),
woosh.Token(woosh.OP, ']', 139, 18, 139, 19),
woosh.Token(woosh.OP, '=', 139, 20, 139, 21),
woosh.Token(woosh.STRING, '"Cannot assign requested address."', 139, 22, 139, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 56, 140, 0),
woosh.Token(woosh.NAME, 'errorTab', 140, 4, 140, 12),
woosh.Token(woosh.OP, '[', 140, 12, 140, 13),
woosh.Token(woosh.NUMBER, '10050', 140, 13, 140, 18),
woosh.Token(woosh.OP, ']', 140, 18, 140, 19),
woosh.Token(woosh.OP, '=', 140, 20, 140, 21),
woosh.Token(woosh.STRING, '"Network is down."', 140, 22, 140, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 40, 141, 0),
woosh.Token(woosh.NAME, 'errorTab', 141, 4, 141, 12),
woosh.Token(woosh.OP, '[', 141, 12, 141, 13),
woosh.Token(woosh.NUMBER, '10051', 141, 13, 141, 18),
woosh.Token(woosh.OP, ']', 141, 18, 141, 19),
woosh.Token(woosh.OP, '=', 141, 20, 141, 21),
woosh.Token(woosh.STRING, '"Network is unreachable."', 141, 22, 141, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 47, 142, 0),
woosh.Token(woosh.NAME, 'errorTab', 142, 4, 142, 12),
woosh.Token(woosh.OP, '[', 142, 12, 142, 13),
woosh.Token(woosh.NUMBER, '10052', 142, 13, 142, 18),
woosh.Token(woosh.OP, ']', 142, 18, 142, 19),
woosh.Token(woosh.OP, '=', 142, 20, 142, 21),
woosh.Token(woosh.STRING, '"Network dropped connection on reset."', 142, 22, 142, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 60, 143, 0),
woosh.Token(woosh.NAME, 'errorTab', 143, 4, 143, 12),
woosh.Token(woosh.OP, '[', 143, 12, 143, 13),
woosh.Token(woosh.NUMBER, '10053', 143, 13, 143, 18),
woosh.Token(woosh.OP, ']', 143, 18, 143, 19),
woosh.Token(woosh.OP, '=', 143, 20, 143, 21),
woosh.Token(woosh.STRING, '"Software caused connection abort."', 143, 22, 143, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 57, 144, 0),
woosh.Token(woosh.NAME, 'errorTab', 144, 4, 144, 12),
woosh.Token(woosh.OP, '[', 144, 12, 144, 13),
woosh.Token(woosh.NUMBER, '10054', 144, 13, 144, 18),
woosh.Token(woosh.OP, ']', 144, 18, 144, 19),
woosh.Token(woosh.OP, '=', 144, 20, 144, 21),
woosh.Token(woosh.STRING, '"The connection has been reset."', 144, 22, 144, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 54, 145, 0),
woosh.Token(woosh.NAME, 'errorTab', 145, 4, 145, 12),
woosh.Token(woosh.OP, '[', 145, 12, 145, 13),
woosh.Token(woosh.NUMBER, '10055', 145, 13, 145, 18),
woosh.Token(woosh.OP, ']', 145, 18, 145, 19),
woosh.Token(woosh.OP, '=', 145, 20, 145, 21),
woosh.Token(woosh.STRING, '"No buffer space available."', 145, 22, 145, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 50, 146, 0),
woosh.Token(woosh.NAME, 'errorTab', 146, 4, 146, 12),
woosh.Token(woosh.OP, '[', 146, 12, 146, 13),
woosh.Token(woosh.NUMBER, '10056', 146, 13, 146, 18),
woosh.Token(woosh.OP, ']', 146, 18, 146, 19),
woosh.Token(woosh.OP, '=', 146, 20, 146, 21),
woosh.Token(woosh.STRING, '"Socket is already connected."', 146, 22, 146, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 52, 147, 0),
woosh.Token(woosh.NAME, 'errorTab', 147, 4, 147, 12),
woosh.Token(woosh.OP, '[', 147, 12, 147, 13),
woosh.Token(woosh.NUMBER, '10057', 147, 13, 147, 18),
woosh.Token(woosh.OP, ']', 147, 18, 147, 19),
woosh.Token(woosh.OP, '=', 147, 20, 147, 21),
woosh.Token(woosh.STRING, '"Socket is not connected."', 147, 22, 147, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 48, 148, 0),
woosh.Token(woosh.NAME, 'errorTab', 148, 4, 148, 12),
woosh.Token(woosh.OP, '[', 148, 12, 148, 13),
woosh.Token(woosh.NUMBER, '10058', 148, 13, 148, 18),
woosh.Token(woosh.OP, ']', 148, 18, 148, 19),
woosh.Token(woosh.OP, '=', 148, 20, 148, 21),
woosh.Token(woosh.STRING, '"The network has been shut down."', 148, 22, 148, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 55, 149, 0),
woosh.Token(woosh.NAME, 'errorTab', 149, 4, 149, 12),
woosh.Token(woosh.OP, '[', 149, 12, 149, 13),
woosh.Token(woosh.NUMBER, '10059', 149, 13, 149, 18),
woosh.Token(woosh.OP, ']', 149, 18, 149, 19),
woosh.Token(woosh.OP, '=', 149, 20, 149, 21),
woosh.Token(woosh.STRING, '"Too many references."', 149, 22, 149, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 44, 150, 0),
woosh.Token(woosh.NAME, 'errorTab', 150, 4, 150, 12),
woosh.Token(woosh.OP, '[', 150, 12, 150, 13),
woosh.Token(woosh.NUMBER, '10060', 150, 13, 150, 18),
woosh.Token(woosh.OP, ']', 150, 18, 150, 19),
woosh.Token(woosh.OP, '=', 150, 20, 150, 21),
woosh.Token(woosh.STRING, '"The operation timed out."', 150, 22, 150, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 48, 151, 0),
woosh.Token(woosh.NAME, 'errorTab', 151, 4, 151, 12),
woosh.Token(woosh.OP, '[', 151, 12, 151, 13),
woosh.Token(woosh.NUMBER, '10061', 151, 13, 151, 18),
woosh.Token(woosh.OP, ']', 151, 18, 151, 19),
woosh.Token(woosh.OP, '=', 151, 20, 151, 21),
woosh.Token(woosh.STRING, '"Connection refused."', 151, 22, 151, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 43, 152, 0),
woosh.Token(woosh.NAME, 'errorTab', 152, 4, 152, 12),
woosh.Token(woosh.OP, '[', 152, 12, 152, 13),
woosh.Token(woosh.NUMBER, '10062', 152, 13, 152, 18),
woosh.Token(woosh.OP, ']', 152, 18, 152, 19),
woosh.Token(woosh.OP, '=', 152, 20, 152, 21),
woosh.Token(woosh.STRING, '"Cannot translate name."', 152, 22, 152, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 46, 153, 0),
woosh.Token(woosh.NAME, 'errorTab', 153, 4, 153, 12),
woosh.Token(woosh.OP, '[', 153, 12, 153, 13),
woosh.Token(woosh.NUMBER, '10063', 153, 13, 153, 18),
woosh.Token(woosh.OP, ']', 153, 18, 153, 19),
woosh.Token(woosh.OP, '=', 153, 20, 153, 21),
woosh.Token(woosh.STRING, '"The name is too long."', 153, 22, 153, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 45, 154, 0),
woosh.Token(woosh.NAME, 'errorTab', 154, 4, 154, 12),
woosh.Token(woosh.OP, '[', 154, 12, 154, 13),
woosh.Token(woosh.NUMBER, '10064', 154, 13, 154, 18),
woosh.Token(woosh.OP, ']', 154, 18, 154, 19),
woosh.Token(woosh.OP, '=', 154, 20, 154, 21),
woosh.Token(woosh.STRING, '"The host is down."', 154, 22, 154, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 41, 155, 0),
woosh.Token(woosh.NAME, 'errorTab', 155, 4, 155, 12),
woosh.Token(woosh.OP, '[', 155, 12, 155, 13),
woosh.Token(woosh.NUMBER, '10065', 155, 13, 155, 18),
woosh.Token(woosh.OP, ']', 155, 18, 155, 19),
woosh.Token(woosh.OP, '=', 155, 20, 155, 21),
woosh.Token(woosh.STRING, '"The host is unreachable."', 155, 22, 155, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 155, 48, 156, 0),
woosh.Token(woosh.NAME, 'errorTab', 156, 4, 156, 12),
woosh.Token(woosh.OP, '[', 156, 12, 156, 13),
woosh.Token(woosh.NUMBER, '10066', 156, 13, 156, 18),
woosh.Token(woosh.OP, ']', 156, 18, 156, 19),
woosh.Token(woosh.OP, '=', 156, 20, 156, 21),
woosh.Token(woosh.STRING, '"Directory not empty."', 156, 22, 156, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 44, 157, 0),
woosh.Token(woosh.NAME, 'errorTab', 157, 4, 157, 12),
woosh.Token(woosh.OP, '[', 157, 12, 157, 13),
woosh.Token(woosh.NUMBER, '10067', 157, 13, 157, 18),
woosh.Token(woosh.OP, ']', 157, 18, 157, 19),
woosh.Token(woosh.OP, '=', 157, 20, 157, 21),
woosh.Token(woosh.STRING, '"Too many processes."', 157, 22, 157, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 157, 43, 158, 0),
woosh.Token(woosh.NAME, 'errorTab', 158, 4, 158, 12),
woosh.Token(woosh.OP, '[', 158, 12, 158, 13),
woosh.Token(woosh.NUMBER, '10068', 158, 13, 158, 18),
woosh.Token(woosh.OP, ']', 158, 18, 158, 19),
woosh.Token(woosh.OP, '=', 158, 20, 158, 21),
woosh.Token(woosh.STRING, '"User quota exceeded."', 158, 22, 158, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 44, 159, 0),
woosh.Token(woosh.NAME, 'errorTab', 159, 4, 159, 12),
woosh.Token(woosh.OP, '[', 159, 12, 159, 13),
woosh.Token(woosh.NUMBER, '10069', 159, 13, 159, 18),
woosh.Token(woosh.OP, ']', 159, 18, 159, 19),
woosh.Token(woosh.OP, '=', 159, 20, 159, 21),
woosh.Token(woosh.STRING, '"Disk quota exceeded."', 159, 22, 159, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 159, 44, 160, 0),
woosh.Token(woosh.NAME, 'errorTab', 160, 4, 160, 12),
woosh.Token(woosh.OP, '[', 160, 12, 160, 13),
woosh.Token(woosh.NUMBER, '10070', 160, 13, 160, 18),
woosh.Token(woosh.OP, ']', 160, 18, 160, 19),
woosh.Token(woosh.OP, '=', 160, 20, 160, 21),
woosh.Token(woosh.STRING, '"Stale file handle reference."', 160, 22, 160, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 52, 161, 0),
woosh.Token(woosh.NAME, 'errorTab', 161, 4, 161, 12),
woosh.Token(woosh.OP, '[', 161, 12, 161, 13),
woosh.Token(woosh.NUMBER, '10071', 161, 13, 161, 18),
woosh.Token(woosh.OP, ']', 161, 18, 161, 19),
woosh.Token(woosh.OP, '=', 161, 20, 161, 21),
woosh.Token(woosh.STRING, '"Item is remote."', 161, 22, 161, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 161, 39, 162, 0),
woosh.Token(woosh.NAME, 'errorTab', 162, 4, 162, 12),
woosh.Token(woosh.OP, '[', 162, 12, 162, 13),
woosh.Token(woosh.NUMBER, '10091', 162, 13, 162, 18),
woosh.Token(woosh.OP, ']', 162, 18, 162, 19),
woosh.Token(woosh.OP, '=', 162, 20, 162, 21),
woosh.Token(woosh.STRING, '"Network subsystem is unavailable."', 162, 22, 162, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 162, 57, 163, 0),
woosh.Token(woosh.NAME, 'errorTab', 163, 4, 163, 12),
woosh.Token(woosh.OP, '[', 163, 12, 163, 13),
woosh.Token(woosh.NUMBER, '10092', 163, 13, 163, 18),
woosh.Token(woosh.OP, ']', 163, 18, 163, 19),
woosh.Token(woosh.OP, '=', 163, 20, 163, 21),
woosh.Token(woosh.STRING, '"Winsock.dll version out of range."', 163, 22, 163, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 57, 164, 0),
woosh.Token(woosh.NAME, 'errorTab', 164, 4, 164, 12),
woosh.Token(woosh.OP, '[', 164, 12, 164, 13),
woosh.Token(woosh.NUMBER, '10093', 164, 13, 164, 18),
woosh.Token(woosh.OP, ']', 164, 18, 164, 19),
woosh.Token(woosh.OP, '=', 164, 20, 164, 21),
woosh.Token(woosh.STRING, '"Successful WSAStartup not yet performed."', 164, 22, 164, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 164, 64, 165, 0),
woosh.Token(woosh.NAME, 'errorTab', 165, 4, 165, 12),
woosh.Token(woosh.OP, '[', 165, 12, 165, 13),
woosh.Token(woosh.NUMBER, '10101', 165, 13, 165, 18),
woosh.Token(woosh.OP, ']', 165, 18, 165, 19),
woosh.Token(woosh.OP, '=', 165, 20, 165, 21),
woosh.Token(woosh.STRING, '"Graceful shutdown in progress."', 165, 22, 165, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 165, 54, 166, 0),
woosh.Token(woosh.NAME, 'errorTab', 166, 4, 166, 12),
woosh.Token(woosh.OP, '[', 166, 12, 166, 13),
woosh.Token(woosh.NUMBER, '10102', 166, 13, 166, 18),
woosh.Token(woosh.OP, ']', 166, 18, 166, 19),
woosh.Token(woosh.OP, '=', 166, 20, 166, 21),
woosh.Token(woosh.STRING, '"No more results from WSALookupServiceNext."', 166, 22, 166, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 166, 66, 167, 0),
woosh.Token(woosh.NAME, 'errorTab', 167, 4, 167, 12),
woosh.Token(woosh.OP, '[', 167, 12, 167, 13),
woosh.Token(woosh.NUMBER, '10103', 167, 13, 167, 18),
woosh.Token(woosh.OP, ']', 167, 18, 167, 19),
woosh.Token(woosh.OP, '=', 167, 20, 167, 21),
woosh.Token(woosh.STRING, '"Call has been canceled."', 167, 22, 167, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 167, 47, 168, 0),
woosh.Token(woosh.NAME, 'errorTab', 168, 4, 168, 12),
woosh.Token(woosh.OP, '[', 168, 12, 168, 13),
woosh.Token(woosh.NUMBER, '10104', 168, 13, 168, 18),
woosh.Token(woosh.OP, ']', 168, 18, 168, 19),
woosh.Token(woosh.OP, '=', 168, 20, 168, 21),
woosh.Token(woosh.STRING, '"Procedure call table is invalid."', 168, 22, 168, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 56, 169, 0),
woosh.Token(woosh.NAME, 'errorTab', 169, 4, 169, 12),
woosh.Token(woosh.OP, '[', 169, 12, 169, 13),
woosh.Token(woosh.NUMBER, '10105', 169, 13, 169, 18),
woosh.Token(woosh.OP, ']', 169, 18, 169, 19),
woosh.Token(woosh.OP, '=', 169, 20, 169, 21),
woosh.Token(woosh.STRING, '"Service provider is invalid."', 169, 22, 169, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 52, 170, 0),
woosh.Token(woosh.NAME, 'errorTab', 170, 4, 170, 12),
woosh.Token(woosh.OP, '[', 170, 12, 170, 13),
woosh.Token(woosh.NUMBER, '10106', 170, 13, 170, 18),
woosh.Token(woosh.OP, ']', 170, 18, 170, 19),
woosh.Token(woosh.OP, '=', 170, 20, 170, 21),
woosh.Token(woosh.STRING, '"Service provider failed to initialize."', 170, 22, 170, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 62, 171, 0),
woosh.Token(woosh.NAME, 'errorTab', 171, 4, 171, 12),
woosh.Token(woosh.OP, '[', 171, 12, 171, 13),
woosh.Token(woosh.NUMBER, '10107', 171, 13, 171, 18),
woosh.Token(woosh.OP, ']', 171, 18, 171, 19),
woosh.Token(woosh.OP, '=', 171, 20, 171, 21),
woosh.Token(woosh.STRING, '"System call failure."', 171, 22, 171, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 44, 172, 0),
woosh.Token(woosh.NAME, 'errorTab', 172, 4, 172, 12),
woosh.Token(woosh.OP, '[', 172, 12, 172, 13),
woosh.Token(woosh.NUMBER, '10108', 172, 13, 172, 18),
woosh.Token(woosh.OP, ']', 172, 18, 172, 19),
woosh.Token(woosh.OP, '=', 172, 20, 172, 21),
woosh.Token(woosh.STRING, '"Service not found."', 172, 22, 172, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 42, 173, 0),
woosh.Token(woosh.NAME, 'errorTab', 173, 4, 173, 12),
woosh.Token(woosh.OP, '[', 173, 12, 173, 13),
woosh.Token(woosh.NUMBER, '10109', 173, 13, 173, 18),
woosh.Token(woosh.OP, ']', 173, 18, 173, 19),
woosh.Token(woosh.OP, '=', 173, 20, 173, 21),
woosh.Token(woosh.STRING, '"Class type not found."', 173, 22, 173, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 45, 174, 0),
woosh.Token(woosh.NAME, 'errorTab', 174, 4, 174, 12),
woosh.Token(woosh.OP, '[', 174, 12, 174, 13),
woosh.Token(woosh.NUMBER, '10110', 174, 13, 174, 18),
woosh.Token(woosh.OP, ']', 174, 18, 174, 19),
woosh.Token(woosh.OP, '=', 174, 20, 174, 21),
woosh.Token(woosh.STRING, '"No more results from WSALookupServiceNext."', 174, 22, 174, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 66, 175, 0),
woosh.Token(woosh.NAME, 'errorTab', 175, 4, 175, 12),
woosh.Token(woosh.OP, '[', 175, 12, 175, 13),
woosh.Token(woosh.NUMBER, '10111', 175, 13, 175, 18),
woosh.Token(woosh.OP, ']', 175, 18, 175, 19),
woosh.Token(woosh.OP, '=', 175, 20, 175, 21),
woosh.Token(woosh.STRING, '"Call was canceled."', 175, 22, 175, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 42, 176, 0),
woosh.Token(woosh.NAME, 'errorTab', 176, 4, 176, 12),
woosh.Token(woosh.OP, '[', 176, 12, 176, 13),
woosh.Token(woosh.NUMBER, '10112', 176, 13, 176, 18),
woosh.Token(woosh.OP, ']', 176, 18, 176, 19),
woosh.Token(woosh.OP, '=', 176, 20, 176, 21),
woosh.Token(woosh.STRING, '"Database query was refused."', 176, 22, 176, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 51, 177, 0),
woosh.Token(woosh.NAME, 'errorTab', 177, 4, 177, 12),
woosh.Token(woosh.OP, '[', 177, 12, 177, 13),
woosh.Token(woosh.NUMBER, '11001', 177, 13, 177, 18),
woosh.Token(woosh.OP, ']', 177, 18, 177, 19),
woosh.Token(woosh.OP, '=', 177, 20, 177, 21),
woosh.Token(woosh.STRING, '"Host not found."', 177, 22, 177, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 39, 178, 0),
woosh.Token(woosh.NAME, 'errorTab', 178, 4, 178, 12),
woosh.Token(woosh.OP, '[', 178, 12, 178, 13),
woosh.Token(woosh.NUMBER, '11002', 178, 13, 178, 18),
woosh.Token(woosh.OP, ']', 178, 18, 178, 19),
woosh.Token(woosh.OP, '=', 178, 20, 178, 21),
woosh.Token(woosh.STRING, '"Nonauthoritative host not found."', 178, 22, 178, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 56, 179, 0),
woosh.Token(woosh.NAME, 'errorTab', 179, 4, 179, 12),
woosh.Token(woosh.OP, '[', 179, 12, 179, 13),
woosh.Token(woosh.NUMBER, '11003', 179, 13, 179, 18),
woosh.Token(woosh.OP, ']', 179, 18, 179, 19),
woosh.Token(woosh.OP, '=', 179, 20, 179, 21),
woosh.Token(woosh.STRING, '"This is a nonrecoverable error."', 179, 22, 179, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 55, 180, 0),
woosh.Token(woosh.NAME, 'errorTab', 180, 4, 180, 12),
woosh.Token(woosh.OP, '[', 180, 12, 180, 13),
woosh.Token(woosh.NUMBER, '11004', 180, 13, 180, 18),
woosh.Token(woosh.OP, ']', 180, 18, 180, 19),
woosh.Token(woosh.OP, '=', 180, 20, 180, 21),
woosh.Token(woosh.STRING, '"Valid name, no data record requested type."', 180, 22, 180, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 180, 66, 181, 0),
woosh.Token(woosh.NAME, 'errorTab', 181, 4, 181, 12),
woosh.Token(woosh.OP, '[', 181, 12, 181, 13),
woosh.Token(woosh.NUMBER, '11005', 181, 13, 181, 18),
woosh.Token(woosh.OP, ']', 181, 18, 181, 19),
woosh.Token(woosh.OP, '=', 181, 20, 181, 21),
woosh.Token(woosh.STRING, '"QoS receivers."', 181, 22, 181, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 38, 182, 0),
woosh.Token(woosh.NAME, 'errorTab', 182, 4, 182, 12),
woosh.Token(woosh.OP, '[', 182, 12, 182, 13),
woosh.Token(woosh.NUMBER, '11006', 182, 13, 182, 18),
woosh.Token(woosh.OP, ']', 182, 18, 182, 19),
woosh.Token(woosh.OP, '=', 182, 20, 182, 21),
woosh.Token(woosh.STRING, '"QoS senders."', 182, 22, 182, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 36, 183, 0),
woosh.Token(woosh.NAME, 'errorTab', 183, 4, 183, 12),
woosh.Token(woosh.OP, '[', 183, 12, 183, 13),
woosh.Token(woosh.NUMBER, '11007', 183, 13, 183, 18),
woosh.Token(woosh.OP, ']', 183, 18, 183, 19),
woosh.Token(woosh.OP, '=', 183, 20, 183, 21),
woosh.Token(woosh.STRING, '"No QoS senders."', 183, 22, 183, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 183, 39, 184, 0),
woosh.Token(woosh.NAME, 'errorTab', 184, 4, 184, 12),
woosh.Token(woosh.OP, '[', 184, 12, 184, 13),
woosh.Token(woosh.NUMBER, '11008', 184, 13, 184, 18),
woosh.Token(woosh.OP, ']', 184, 18, 184, 19),
woosh.Token(woosh.OP, '=', 184, 20, 184, 21),
woosh.Token(woosh.STRING, '"QoS no receivers."', 184, 22, 184, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 41, 185, 0),
woosh.Token(woosh.NAME, 'errorTab', 185, 4, 185, 12),
woosh.Token(woosh.OP, '[', 185, 12, 185, 13),
woosh.Token(woosh.NUMBER, '11009', 185, 13, 185, 18),
woosh.Token(woosh.OP, ']', 185, 18, 185, 19),
woosh.Token(woosh.OP, '=', 185, 20, 185, 21),
woosh.Token(woosh.STRING, '"QoS request confirmed."', 185, 22, 185, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 46, 186, 0),
woosh.Token(woosh.NAME, 'errorTab', 186, 4, 186, 12),
woosh.Token(woosh.OP, '[', 186, 12, 186, 13),
woosh.Token(woosh.NUMBER, '11010', 186, 13, 186, 18),
woosh.Token(woosh.OP, ']', 186, 18, 186, 19),
woosh.Token(woosh.OP, '=', 186, 20, 186, 21),
woosh.Token(woosh.STRING, '"QoS admission error."', 186, 22, 186, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 44, 187, 0),
woosh.Token(woosh.NAME, 'errorTab', 187, 4, 187, 12),
woosh.Token(woosh.OP, '[', 187, 12, 187, 13),
woosh.Token(woosh.NUMBER, '11011', 187, 13, 187, 18),
woosh.Token(woosh.OP, ']', 187, 18, 187, 19),
woosh.Token(woosh.OP, '=', 187, 20, 187, 21),
woosh.Token(woosh.STRING, '"QoS policy failure."', 187, 22, 187, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 43, 188, 0),
woosh.Token(woosh.NAME, 'errorTab', 188, 4, 188, 12),
woosh.Token(woosh.OP, '[', 188, 12, 188, 13),
woosh.Token(woosh.NUMBER, '11012', 188, 13, 188, 18),
woosh.Token(woosh.OP, ']', 188, 18, 188, 19),
woosh.Token(woosh.OP, '=', 188, 20, 188, 21),
woosh.Token(woosh.STRING, '"QoS bad style."', 188, 22, 188, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 188, 38, 189, 0),
woosh.Token(woosh.NAME, 'errorTab', 189, 4, 189, 12),
woosh.Token(woosh.OP, '[', 189, 12, 189, 13),
woosh.Token(woosh.NUMBER, '11013', 189, 13, 189, 18),
woosh.Token(woosh.OP, ']', 189, 18, 189, 19),
woosh.Token(woosh.OP, '=', 189, 20, 189, 21),
woosh.Token(woosh.STRING, '"QoS bad object."', 189, 22, 189, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 189, 39, 190, 0),
woosh.Token(woosh.NAME, 'errorTab', 190, 4, 190, 12),
woosh.Token(woosh.OP, '[', 190, 12, 190, 13),
woosh.Token(woosh.NUMBER, '11014', 190, 13, 190, 18),
woosh.Token(woosh.OP, ']', 190, 18, 190, 19),
woosh.Token(woosh.OP, '=', 190, 20, 190, 21),
woosh.Token(woosh.STRING, '"QoS traffic control error."', 190, 22, 190, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 50, 191, 0),
woosh.Token(woosh.NAME, 'errorTab', 191, 4, 191, 12),
woosh.Token(woosh.OP, '[', 191, 12, 191, 13),
woosh.Token(woosh.NUMBER, '11015', 191, 13, 191, 18),
woosh.Token(woosh.OP, ']', 191, 18, 191, 19),
woosh.Token(woosh.OP, '=', 191, 20, 191, 21),
woosh.Token(woosh.STRING, '"QoS generic error."', 191, 22, 191, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 42, 192, 0),
woosh.Token(woosh.NAME, 'errorTab', 192, 4, 192, 12),
woosh.Token(woosh.OP, '[', 192, 12, 192, 13),
woosh.Token(woosh.NUMBER, '11016', 192, 13, 192, 18),
woosh.Token(woosh.OP, ']', 192, 18, 192, 19),
woosh.Token(woosh.OP, '=', 192, 20, 192, 21),
woosh.Token(woosh.STRING, '"QoS service type error."', 192, 22, 192, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 47, 193, 0),
woosh.Token(woosh.NAME, 'errorTab', 193, 4, 193, 12),
woosh.Token(woosh.OP, '[', 193, 12, 193, 13),
woosh.Token(woosh.NUMBER, '11017', 193, 13, 193, 18),
woosh.Token(woosh.OP, ']', 193, 18, 193, 19),
woosh.Token(woosh.OP, '=', 193, 20, 193, 21),
woosh.Token(woosh.STRING, '"QoS flowspec error."', 193, 22, 193, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 43, 194, 0),
woosh.Token(woosh.NAME, 'errorTab', 194, 4, 194, 12),
woosh.Token(woosh.OP, '[', 194, 12, 194, 13),
woosh.Token(woosh.NUMBER, '11018', 194, 13, 194, 18),
woosh.Token(woosh.OP, ']', 194, 18, 194, 19),
woosh.Token(woosh.OP, '=', 194, 20, 194, 21),
woosh.Token(woosh.STRING, '"Invalid QoS provider buffer."', 194, 22, 194, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 52, 195, 0),
woosh.Token(woosh.NAME, 'errorTab', 195, 4, 195, 12),
woosh.Token(woosh.OP, '[', 195, 12, 195, 13),
woosh.Token(woosh.NUMBER, '11019', 195, 13, 195, 18),
woosh.Token(woosh.OP, ']', 195, 18, 195, 19),
woosh.Token(woosh.OP, '=', 195, 20, 195, 21),
woosh.Token(woosh.STRING, '"Invalid QoS filter style."', 195, 22, 195, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 49, 196, 0),
woosh.Token(woosh.NAME, 'errorTab', 196, 4, 196, 12),
woosh.Token(woosh.OP, '[', 196, 12, 196, 13),
woosh.Token(woosh.NUMBER, '11020', 196, 13, 196, 18),
woosh.Token(woosh.OP, ']', 196, 18, 196, 19),
woosh.Token(woosh.OP, '=', 196, 20, 196, 21),
woosh.Token(woosh.STRING, '"Invalid QoS filter style."', 196, 22, 196, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 49, 197, 0),
woosh.Token(woosh.NAME, 'errorTab', 197, 4, 197, 12),
woosh.Token(woosh.OP, '[', 197, 12, 197, 13),
woosh.Token(woosh.NUMBER, '11021', 197, 13, 197, 18),
woosh.Token(woosh.OP, ']', 197, 18, 197, 19),
woosh.Token(woosh.OP, '=', 197, 20, 197, 21),
woosh.Token(woosh.STRING, '"Incorrect QoS filter count."', 197, 22, 197, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 51, 198, 0),
woosh.Token(woosh.NAME, 'errorTab', 198, 4, 198, 12),
woosh.Token(woosh.OP, '[', 198, 12, 198, 13),
woosh.Token(woosh.NUMBER, '11022', 198, 13, 198, 18),
woosh.Token(woosh.OP, ']', 198, 18, 198, 19),
woosh.Token(woosh.OP, '=', 198, 20, 198, 21),
woosh.Token(woosh.STRING, '"Invalid QoS object length."', 198, 22, 198, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 50, 199, 0),
woosh.Token(woosh.NAME, 'errorTab', 199, 4, 199, 12),
woosh.Token(woosh.OP, '[', 199, 12, 199, 13),
woosh.Token(woosh.NUMBER, '11023', 199, 13, 199, 18),
woosh.Token(woosh.OP, ']', 199, 18, 199, 19),
woosh.Token(woosh.OP, '=', 199, 20, 199, 21),
woosh.Token(woosh.STRING, '"Incorrect QoS flow count."', 199, 22, 199, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 199, 49, 200, 0),
woosh.Token(woosh.NAME, 'errorTab', 200, 4, 200, 12),
woosh.Token(woosh.OP, '[', 200, 12, 200, 13),
woosh.Token(woosh.NUMBER, '11024', 200, 13, 200, 18),
woosh.Token(woosh.OP, ']', 200, 18, 200, 19),
woosh.Token(woosh.OP, '=', 200, 20, 200, 21),
woosh.Token(woosh.STRING, '"Unrecognized QoS object."', 200, 22, 200, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 48, 201, 0),
woosh.Token(woosh.NAME, 'errorTab', 201, 4, 201, 12),
woosh.Token(woosh.OP, '[', 201, 12, 201, 13),
woosh.Token(woosh.NUMBER, '11025', 201, 13, 201, 18),
woosh.Token(woosh.OP, ']', 201, 18, 201, 19),
woosh.Token(woosh.OP, '=', 201, 20, 201, 21),
woosh.Token(woosh.STRING, '"Invalid QoS policy object."', 201, 22, 201, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 50, 202, 0),
woosh.Token(woosh.NAME, 'errorTab', 202, 4, 202, 12),
woosh.Token(woosh.OP, '[', 202, 12, 202, 13),
woosh.Token(woosh.NUMBER, '11026', 202, 13, 202, 18),
woosh.Token(woosh.OP, ']', 202, 18, 202, 19),
woosh.Token(woosh.OP, '=', 202, 20, 202, 21),
woosh.Token(woosh.STRING, '"Invalid QoS flow descriptor."', 202, 22, 202, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 202, 52, 203, 0),
woosh.Token(woosh.NAME, 'errorTab', 203, 4, 203, 12),
woosh.Token(woosh.OP, '[', 203, 12, 203, 13),
woosh.Token(woosh.NUMBER, '11027', 203, 13, 203, 18),
woosh.Token(woosh.OP, ']', 203, 18, 203, 19),
woosh.Token(woosh.OP, '=', 203, 20, 203, 21),
woosh.Token(woosh.STRING, '"Invalid QoS provider-specific flowspec."', 203, 22, 203, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 63, 204, 0),
woosh.Token(woosh.NAME, 'errorTab', 204, 4, 204, 12),
woosh.Token(woosh.OP, '[', 204, 12, 204, 13),
woosh.Token(woosh.NUMBER, '11028', 204, 13, 204, 18),
woosh.Token(woosh.OP, ']', 204, 18, 204, 19),
woosh.Token(woosh.OP, '=', 204, 20, 204, 21),
woosh.Token(woosh.STRING, '"Invalid QoS provider-specific filterspec."', 204, 22, 204, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 65, 205, 0),
woosh.Token(woosh.NAME, 'errorTab', 205, 4, 205, 12),
woosh.Token(woosh.OP, '[', 205, 12, 205, 13),
woosh.Token(woosh.NUMBER, '11029', 205, 13, 205, 18),
woosh.Token(woosh.OP, ']', 205, 18, 205, 19),
woosh.Token(woosh.OP, '=', 205, 20, 205, 21),
woosh.Token(woosh.STRING, '"Invalid QoS shape discard mode object."', 205, 22, 205, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 62, 206, 0),
woosh.Token(woosh.NAME, 'errorTab', 206, 4, 206, 12),
woosh.Token(woosh.OP, '[', 206, 12, 206, 13),
woosh.Token(woosh.NUMBER, '11030', 206, 13, 206, 18),
woosh.Token(woosh.OP, ']', 206, 18, 206, 19),
woosh.Token(woosh.OP, '=', 206, 20, 206, 21),
woosh.Token(woosh.STRING, '"Invalid QoS shaping rate object."', 206, 22, 206, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 56, 207, 0),
woosh.Token(woosh.NAME, 'errorTab', 207, 4, 207, 12),
woosh.Token(woosh.OP, '[', 207, 12, 207, 13),
woosh.Token(woosh.NUMBER, '11031', 207, 13, 207, 18),
woosh.Token(woosh.OP, ']', 207, 18, 207, 19),
woosh.Token(woosh.OP, '=', 207, 20, 207, 21),
woosh.Token(woosh.STRING, '"Reserved policy QoS element type."', 207, 22, 207, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 57, 208, 0),
woosh.Token(woosh.NAME, '__all__', 208, 4, 208, 11),
woosh.Token(woosh.OP, '.', 208, 11, 208, 12),
woosh.Token(woosh.NAME, 'append', 208, 12, 208, 18),
woosh.Token(woosh.OP, '(', 208, 18, 208, 19),
woosh.Token(woosh.STRING, '"errorTab"', 208, 19, 208, 29),
woosh.Token(woosh.OP, ')', 208, 29, 208, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 30, 209, 0),
woosh.Token(woosh.DEDENT, '', 211, 0, 211, 0),
woosh.Token(woosh.NAME, 'class', 211, 0, 211, 5),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 211, 6, 211, 23),
woosh.Token(woosh.OP, '(', 211, 23, 211, 24),
woosh.Token(woosh.NAME, 'Exception', 211, 24, 211, 33),
woosh.Token(woosh.OP, ')', 211, 33, 211, 34),
woosh.Token(woosh.OP, ':', 211, 34, 211, 35),
woosh.Token(woosh.NAME, 'pass', 211, 36, 211, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 40, 212, 0),
woosh.Token(woosh.NAME, 'class', 214, 0, 214, 5),
woosh.Token(woosh.NAME, 'socket', 214, 6, 214, 12),
woosh.Token(woosh.OP, '(', 214, 12, 214, 13),
woosh.Token(woosh.NAME, '_socket', 214, 13, 214, 20),
woosh.Token(woosh.OP, '.', 214, 20, 214, 21),
woosh.Token(woosh.NAME, 'socket', 214, 21, 214, 27),
woosh.Token(woosh.OP, ')', 214, 27, 214, 28),
woosh.Token(woosh.OP, ':', 214, 28, 214, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 214, 29, 215, 0),
woosh.Token(woosh.INDENT, '    ', 216, 0, 216, 4),
woosh.Token(woosh.STRING, '"""A subclass of _socket.socket adding the makefile() method."""', 216, 4, 216, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 68, 217, 0),
woosh.Token(woosh.NAME, '__slots__', 218, 4, 218, 13),
woosh.Token(woosh.OP, '=', 218, 14, 218, 15),
woosh.Token(woosh.OP, '[', 218, 16, 218, 17),
woosh.Token(woosh.STRING, '"__weakref__"', 218, 17, 218, 30),
woosh.Token(woosh.OP, ',', 218, 30, 218, 31),
woosh.Token(woosh.STRING, '"_io_refs"', 218, 32, 218, 42),
woosh.Token(woosh.OP, ',', 218, 42, 218, 43),
woosh.Token(woosh.STRING, '"_closed"', 218, 44, 218, 53),
woosh.Token(woosh.OP, ']', 218, 53, 218, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 54, 219, 0),
woosh.Token(woosh.NAME, 'def', 220, 4, 220, 7),
woosh.Token(woosh.NAME, '__init__', 220, 8, 220, 16),
woosh.Token(woosh.OP, '(', 220, 16, 220, 17),
woosh.Token(woosh.NAME, 'self', 220, 17, 220, 21),
woosh.Token(woosh.OP, ',', 220, 21, 220, 22),
woosh.Token(woosh.NAME, 'family', 220, 23, 220, 29),
woosh.Token(woosh.OP, '=', 220, 29, 220, 30),
woosh.Token(woosh.OP, '-', 220, 30, 220, 31),
woosh.Token(woosh.NUMBER, '1', 220, 31, 220, 32),
woosh.Token(woosh.OP, ',', 220, 32, 220, 33),
woosh.Token(woosh.NAME, 'type', 220, 34, 220, 38),
woosh.Token(woosh.OP, '=', 220, 38, 220, 39),
woosh.Token(woosh.OP, '-', 220, 39, 220, 40),
woosh.Token(woosh.NUMBER, '1', 220, 40, 220, 41),
woosh.Token(woosh.OP, ',', 220, 41, 220, 42),
woosh.Token(woosh.NAME, 'proto', 220, 43, 220, 48),
woosh.Token(woosh.OP, '=', 220, 48, 220, 49),
woosh.Token(woosh.OP, '-', 220, 49, 220, 50),
woosh.Token(woosh.NUMBER, '1', 220, 50, 220, 51),
woosh.Token(woosh.OP, ',', 220, 51, 220, 52),
woosh.Token(woosh.NAME, 'fileno', 220, 53, 220, 59),
woosh.Token(woosh.OP, '=', 220, 59, 220, 60),
woosh.Token(woosh.NAME, 'None', 220, 60, 220, 64),
woosh.Token(woosh.OP, ')', 220, 64, 220, 65),
woosh.Token(woosh.OP, ':', 220, 65, 220, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 66, 221, 0),
woosh.Token(woosh.COMMENT, '# For user code address family and type values are IntEnum members, but', 221, 8, 221, 79),
woosh.Token(woosh.COMMENT, "# for the underlying _socket.socket they're just integers. The", 222, 8, 222, 70),
woosh.Token(woosh.COMMENT, '# constructor of _socket.socket converts the given argument to an', 223, 8, 223, 73),
woosh.Token(woosh.COMMENT, '# integer automatically.', 224, 8, 224, 32),
woosh.Token(woosh.INDENT, '        ', 225, 0, 225, 8),
woosh.Token(woosh.NAME, 'if', 225, 8, 225, 10),
woosh.Token(woosh.NAME, 'fileno', 225, 11, 225, 17),
woosh.Token(woosh.NAME, 'is', 225, 18, 225, 20),
woosh.Token(woosh.NAME, 'None', 225, 21, 225, 25),
woosh.Token(woosh.OP, ':', 225, 25, 225, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 26, 226, 0),
woosh.Token(woosh.INDENT, '            ', 226, 0, 226, 12),
woosh.Token(woosh.NAME, 'if', 226, 12, 226, 14),
woosh.Token(woosh.NAME, 'family', 226, 15, 226, 21),
woosh.Token(woosh.OP, '==', 226, 22, 226, 24),
woosh.Token(woosh.OP, '-', 226, 25, 226, 26),
woosh.Token(woosh.NUMBER, '1', 226, 26, 226, 27),
woosh.Token(woosh.OP, ':', 226, 27, 226, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 28, 227, 0),
woosh.Token(woosh.INDENT, '                ', 227, 0, 227, 16),
woosh.Token(woosh.NAME, 'family', 227, 16, 227, 22),
woosh.Token(woosh.OP, '=', 227, 23, 227, 24),
woosh.Token(woosh.NAME, 'AF_INET', 227, 25, 227, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 32, 228, 0),
woosh.Token(woosh.DEDENT, '            ', 228, 0, 228, 12),
woosh.Token(woosh.NAME, 'if', 228, 12, 228, 14),
woosh.Token(woosh.NAME, 'type', 228, 15, 228, 19),
woosh.Token(woosh.OP, '==', 228, 20, 228, 22),
woosh.Token(woosh.OP, '-', 228, 23, 228, 24),
woosh.Token(woosh.NUMBER, '1', 228, 24, 228, 25),
woosh.Token(woosh.OP, ':', 228, 25, 228, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 26, 229, 0),
woosh.Token(woosh.INDENT, '                ', 229, 0, 229, 16),
woosh.Token(woosh.NAME, 'type', 229, 16, 229, 20),
woosh.Token(woosh.OP, '=', 229, 21, 229, 22),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 229, 23, 229, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 34, 230, 0),
woosh.Token(woosh.DEDENT, '            ', 230, 0, 230, 12),
woosh.Token(woosh.NAME, 'if', 230, 12, 230, 14),
woosh.Token(woosh.NAME, 'proto', 230, 15, 230, 20),
woosh.Token(woosh.OP, '==', 230, 21, 230, 23),
woosh.Token(woosh.OP, '-', 230, 24, 230, 25),
woosh.Token(woosh.NUMBER, '1', 230, 25, 230, 26),
woosh.Token(woosh.OP, ':', 230, 26, 230, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 27, 231, 0),
woosh.Token(woosh.INDENT, '                ', 231, 0, 231, 16),
woosh.Token(woosh.NAME, 'proto', 231, 16, 231, 21),
woosh.Token(woosh.OP, '=', 231, 22, 231, 23),
woosh.Token(woosh.NUMBER, '0', 231, 24, 231, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 25, 232, 0),
woosh.Token(woosh.DEDENT, '        ', 232, 0, 232, 8),
woosh.Token(woosh.DEDENT, '', 232, 8, 232, 8),
woosh.Token(woosh.NAME, '_socket', 232, 8, 232, 15),
woosh.Token(woosh.OP, '.', 232, 15, 232, 16),
woosh.Token(woosh.NAME, 'socket', 232, 16, 232, 22),
woosh.Token(woosh.OP, '.', 232, 22, 232, 23),
woosh.Token(woosh.NAME, '__init__', 232, 23, 232, 31),
woosh.Token(woosh.OP, '(', 232, 31, 232, 32),
woosh.Token(woosh.NAME, 'self', 232, 32, 232, 36),
woosh.Token(woosh.OP, ',', 232, 36, 232, 37),
woosh.Token(woosh.NAME, 'family', 232, 38, 232, 44),
woosh.Token(woosh.OP, ',', 232, 44, 232, 45),
woosh.Token(woosh.NAME, 'type', 232, 46, 232, 50),
woosh.Token(woosh.OP, ',', 232, 50, 232, 51),
woosh.Token(woosh.NAME, 'proto', 232, 52, 232, 57),
woosh.Token(woosh.OP, ',', 232, 57, 232, 58),
woosh.Token(woosh.NAME, 'fileno', 232, 59, 232, 65),
woosh.Token(woosh.OP, ')', 232, 65, 232, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 66, 233, 0),
woosh.Token(woosh.NAME, 'self', 233, 8, 233, 12),
woosh.Token(woosh.OP, '.', 233, 12, 233, 13),
woosh.Token(woosh.NAME, '_io_refs', 233, 13, 233, 21),
woosh.Token(woosh.OP, '=', 233, 22, 233, 23),
woosh.Token(woosh.NUMBER, '0', 233, 24, 233, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 25, 234, 0),
woosh.Token(woosh.NAME, 'self', 234, 8, 234, 12),
woosh.Token(woosh.OP, '.', 234, 12, 234, 13),
woosh.Token(woosh.NAME, '_closed', 234, 13, 234, 20),
woosh.Token(woosh.OP, '=', 234, 21, 234, 22),
woosh.Token(woosh.NAME, 'False', 234, 23, 234, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 28, 235, 0),
woosh.Token(woosh.DEDENT, '    ', 236, 0, 236, 4),
woosh.Token(woosh.NAME, 'def', 236, 4, 236, 7),
woosh.Token(woosh.NAME, '__enter__', 236, 8, 236, 17),
woosh.Token(woosh.OP, '(', 236, 17, 236, 18),
woosh.Token(woosh.NAME, 'self', 236, 18, 236, 22),
woosh.Token(woosh.OP, ')', 236, 22, 236, 23),
woosh.Token(woosh.OP, ':', 236, 23, 236, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 24, 237, 0),
woosh.Token(woosh.INDENT, '        ', 237, 0, 237, 8),
woosh.Token(woosh.NAME, 'return', 237, 8, 237, 14),
woosh.Token(woosh.NAME, 'self', 237, 15, 237, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 19, 238, 0),
woosh.Token(woosh.DEDENT, '    ', 239, 0, 239, 4),
woosh.Token(woosh.NAME, 'def', 239, 4, 239, 7),
woosh.Token(woosh.NAME, '__exit__', 239, 8, 239, 16),
woosh.Token(woosh.OP, '(', 239, 16, 239, 17),
woosh.Token(woosh.NAME, 'self', 239, 17, 239, 21),
woosh.Token(woosh.OP, ',', 239, 21, 239, 22),
woosh.Token(woosh.OP, '*', 239, 23, 239, 24),
woosh.Token(woosh.NAME, 'args', 239, 24, 239, 28),
woosh.Token(woosh.OP, ')', 239, 28, 239, 29),
woosh.Token(woosh.OP, ':', 239, 29, 239, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 30, 240, 0),
woosh.Token(woosh.INDENT, '        ', 240, 0, 240, 8),
woosh.Token(woosh.NAME, 'if', 240, 8, 240, 10),
woosh.Token(woosh.NAME, 'not', 240, 11, 240, 14),
woosh.Token(woosh.NAME, 'self', 240, 15, 240, 19),
woosh.Token(woosh.OP, '.', 240, 19, 240, 20),
woosh.Token(woosh.NAME, '_closed', 240, 20, 240, 27),
woosh.Token(woosh.OP, ':', 240, 27, 240, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 28, 241, 0),
woosh.Token(woosh.INDENT, '            ', 241, 0, 241, 12),
woosh.Token(woosh.NAME, 'self', 241, 12, 241, 16),
woosh.Token(woosh.OP, '.', 241, 16, 241, 17),
woosh.Token(woosh.NAME, 'close', 241, 17, 241, 22),
woosh.Token(woosh.OP, '(', 241, 22, 241, 23),
woosh.Token(woosh.OP, ')', 241, 23, 241, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 24, 242, 0),
woosh.Token(woosh.DEDENT, '    ', 243, 0, 243, 4),
woosh.Token(woosh.DEDENT, '', 243, 4, 243, 4),
woosh.Token(woosh.NAME, 'def', 243, 4, 243, 7),
woosh.Token(woosh.NAME, '__repr__', 243, 8, 243, 16),
woosh.Token(woosh.OP, '(', 243, 16, 243, 17),
woosh.Token(woosh.NAME, 'self', 243, 17, 243, 21),
woosh.Token(woosh.OP, ')', 243, 21, 243, 22),
woosh.Token(woosh.OP, ':', 243, 22, 243, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 23, 244, 0),
woosh.Token(woosh.INDENT, '        ', 244, 0, 244, 8),
woosh.Token(woosh.STRING, '"""Wrap __repr__() to reveal the real class name and socket\r\n        address(es).\r\n        """', 244, 8, 246, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 11, 247, 0),
woosh.Token(woosh.NAME, 'closed', 247, 8, 247, 14),
woosh.Token(woosh.OP, '=', 247, 15, 247, 16),
woosh.Token(woosh.NAME, 'getattr', 247, 17, 247, 24),
woosh.Token(woosh.OP, '(', 247, 24, 247, 25),
woosh.Token(woosh.NAME, 'self', 247, 25, 247, 29),
woosh.Token(woosh.OP, ',', 247, 29, 247, 30),
woosh.Token(woosh.STRING, "'_closed'", 247, 31, 247, 40),
woosh.Token(woosh.OP, ',', 247, 40, 247, 41),
woosh.Token(woosh.NAME, 'False', 247, 42, 247, 47),
woosh.Token(woosh.OP, ')', 247, 47, 247, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 48, 248, 0),
woosh.Token(woosh.NAME, 's', 248, 8, 248, 9),
woosh.Token(woosh.OP, '=', 248, 10, 248, 11),
woosh.Token(woosh.STRING, '"<%s.%s%s fd=%i, family=%s, type=%s, proto=%i"', 248, 12, 248, 58),
woosh.Token(woosh.OP, '%', 249, 12, 249, 13),
woosh.Token(woosh.OP, '(', 249, 14, 249, 15),
woosh.Token(woosh.NAME, 'self', 249, 15, 249, 19),
woosh.Token(woosh.OP, '.', 249, 19, 249, 20),
woosh.Token(woosh.NAME, '__class__', 249, 20, 249, 29),
woosh.Token(woosh.OP, '.', 249, 29, 249, 30),
woosh.Token(woosh.NAME, '__module__', 249, 30, 249, 40),
woosh.Token(woosh.OP, ',', 249, 40, 249, 41),
woosh.Token(woosh.NAME, 'self', 250, 15, 250, 19),
woosh.Token(woosh.OP, '.', 250, 19, 250, 20),
woosh.Token(woosh.NAME, '__class__', 250, 20, 250, 29),
woosh.Token(woosh.OP, '.', 250, 29, 250, 30),
woosh.Token(woosh.NAME, '__qualname__', 250, 30, 250, 42),
woosh.Token(woosh.OP, ',', 250, 42, 250, 43),
woosh.Token(woosh.STRING, '" [closed]"', 251, 15, 251, 26),
woosh.Token(woosh.NAME, 'if', 251, 27, 251, 29),
woosh.Token(woosh.NAME, 'closed', 251, 30, 251, 36),
woosh.Token(woosh.NAME, 'else', 251, 37, 251, 41),
woosh.Token(woosh.STRING, '""', 251, 42, 251, 44),
woosh.Token(woosh.OP, ',', 251, 44, 251, 45),
woosh.Token(woosh.NAME, 'self', 252, 15, 252, 19),
woosh.Token(woosh.OP, '.', 252, 19, 252, 20),
woosh.Token(woosh.NAME, 'fileno', 252, 20, 252, 26),
woosh.Token(woosh.OP, '(', 252, 26, 252, 27),
woosh.Token(woosh.OP, ')', 252, 27, 252, 28),
woosh.Token(woosh.OP, ',', 252, 28, 252, 29),
woosh.Token(woosh.NAME, 'self', 253, 15, 253, 19),
woosh.Token(woosh.OP, '.', 253, 19, 253, 20),
woosh.Token(woosh.NAME, 'family', 253, 20, 253, 26),
woosh.Token(woosh.OP, ',', 253, 26, 253, 27),
woosh.Token(woosh.NAME, 'self', 254, 15, 254, 19),
woosh.Token(woosh.OP, '.', 254, 19, 254, 20),
woosh.Token(woosh.NAME, 'type', 254, 20, 254, 24),
woosh.Token(woosh.OP, ',', 254, 24, 254, 25),
woosh.Token(woosh.NAME, 'self', 255, 15, 255, 19),
woosh.Token(woosh.OP, '.', 255, 19, 255, 20),
woosh.Token(woosh.NAME, 'proto', 255, 20, 255, 25),
woosh.Token(woosh.OP, ')', 255, 25, 255, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 26, 256, 0),
woosh.Token(woosh.NAME, 'if', 256, 8, 256, 10),
woosh.Token(woosh.NAME, 'not', 256, 11, 256, 14),
woosh.Token(woosh.NAME, 'closed', 256, 15, 256, 21),
woosh.Token(woosh.OP, ':', 256, 21, 256, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 22, 257, 0),
woosh.Token(woosh.INDENT, '            ', 257, 0, 257, 12),
woosh.Token(woosh.NAME, 'try', 257, 12, 257, 15),
woosh.Token(woosh.OP, ':', 257, 15, 257, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 16, 258, 0),
woosh.Token(woosh.INDENT, '                ', 258, 0, 258, 16),
woosh.Token(woosh.NAME, 'laddr', 258, 16, 258, 21),
woosh.Token(woosh.OP, '=', 258, 22, 258, 23),
woosh.Token(woosh.NAME, 'self', 258, 24, 258, 28),
woosh.Token(woosh.OP, '.', 258, 28, 258, 29),
woosh.Token(woosh.NAME, 'getsockname', 258, 29, 258, 40),
woosh.Token(woosh.OP, '(', 258, 40, 258, 41),
woosh.Token(woosh.OP, ')', 258, 41, 258, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 42, 259, 0),
woosh.Token(woosh.NAME, 'if', 259, 16, 259, 18),
woosh.Token(woosh.NAME, 'laddr', 259, 19, 259, 24),
woosh.Token(woosh.OP, ':', 259, 24, 259, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 25, 260, 0),
woosh.Token(woosh.INDENT, '                    ', 260, 0, 260, 20),
woosh.Token(woosh.NAME, 's', 260, 20, 260, 21),
woosh.Token(woosh.OP, '+=', 260, 22, 260, 24),
woosh.Token(woosh.STRING, '", laddr=%s"', 260, 25, 260, 37),
woosh.Token(woosh.OP, '%', 260, 38, 260, 39),
woosh.Token(woosh.NAME, 'str', 260, 40, 260, 43),
woosh.Token(woosh.OP, '(', 260, 43, 260, 44),
woosh.Token(woosh.NAME, 'laddr', 260, 44, 260, 49),
woosh.Token(woosh.OP, ')', 260, 49, 260, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 260, 50, 261, 0),
woosh.Token(woosh.DEDENT, '            ', 261, 0, 261, 12),
woosh.Token(woosh.DEDENT, '', 261, 12, 261, 12),
woosh.Token(woosh.NAME, 'except', 261, 12, 261, 18),
woosh.Token(woosh.NAME, 'error', 261, 19, 261, 24),
woosh.Token(woosh.OP, ':', 261, 24, 261, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 25, 262, 0),
woosh.Token(woosh.INDENT, '                ', 262, 0, 262, 16),
woosh.Token(woosh.NAME, 'pass', 262, 16, 262, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 20, 263, 0),
woosh.Token(woosh.DEDENT, '            ', 263, 0, 263, 12),
woosh.Token(woosh.NAME, 'try', 263, 12, 263, 15),
woosh.Token(woosh.OP, ':', 263, 15, 263, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 263, 16, 264, 0),
woosh.Token(woosh.INDENT, '                ', 264, 0, 264, 16),
woosh.Token(woosh.NAME, 'raddr', 264, 16, 264, 21),
woosh.Token(woosh.OP, '=', 264, 22, 264, 23),
woosh.Token(woosh.NAME, 'self', 264, 24, 264, 28),
woosh.Token(woosh.OP, '.', 264, 28, 264, 29),
woosh.Token(woosh.NAME, 'getpeername', 264, 29, 264, 40),
woosh.Token(woosh.OP, '(', 264, 40, 264, 41),
woosh.Token(woosh.OP, ')', 264, 41, 264, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 264, 42, 265, 0),
woosh.Token(woosh.NAME, 'if', 265, 16, 265, 18),
woosh.Token(woosh.NAME, 'raddr', 265, 19, 265, 24),
woosh.Token(woosh.OP, ':', 265, 24, 265, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 25, 266, 0),
woosh.Token(woosh.INDENT, '                    ', 266, 0, 266, 20),
woosh.Token(woosh.NAME, 's', 266, 20, 266, 21),
woosh.Token(woosh.OP, '+=', 266, 22, 266, 24),
woosh.Token(woosh.STRING, '", raddr=%s"', 266, 25, 266, 37),
woosh.Token(woosh.OP, '%', 266, 38, 266, 39),
woosh.Token(woosh.NAME, 'str', 266, 40, 266, 43),
woosh.Token(woosh.OP, '(', 266, 43, 266, 44),
woosh.Token(woosh.NAME, 'raddr', 266, 44, 266, 49),
woosh.Token(woosh.OP, ')', 266, 49, 266, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 50, 267, 0),
woosh.Token(woosh.DEDENT, '            ', 267, 0, 267, 12),
woosh.Token(woosh.DEDENT, '', 267, 12, 267, 12),
woosh.Token(woosh.NAME, 'except', 267, 12, 267, 18),
woosh.Token(woosh.NAME, 'error', 267, 19, 267, 24),
woosh.Token(woosh.OP, ':', 267, 24, 267, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 25, 268, 0),
woosh.Token(woosh.INDENT, '                ', 268, 0, 268, 16),
woosh.Token(woosh.NAME, 'pass', 268, 16, 268, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 20, 269, 0),
woosh.Token(woosh.DEDENT, '        ', 269, 0, 269, 8),
woosh.Token(woosh.DEDENT, '', 269, 8, 269, 8),
woosh.Token(woosh.NAME, 's', 269, 8, 269, 9),
woosh.Token(woosh.OP, '+=', 269, 10, 269, 12),
woosh.Token(woosh.STRING, "'>'", 269, 13, 269, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 16, 270, 0),
woosh.Token(woosh.NAME, 'return', 270, 8, 270, 14),
woosh.Token(woosh.NAME, 's', 270, 15, 270, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 16, 271, 0),
woosh.Token(woosh.DEDENT, '    ', 272, 0, 272, 4),
woosh.Token(woosh.NAME, 'def', 272, 4, 272, 7),
woosh.Token(woosh.NAME, '__getstate__', 272, 8, 272, 20),
woosh.Token(woosh.OP, '(', 272, 20, 272, 21),
woosh.Token(woosh.NAME, 'self', 272, 21, 272, 25),
woosh.Token(woosh.OP, ')', 272, 25, 272, 26),
woosh.Token(woosh.OP, ':', 272, 26, 272, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 27, 273, 0),
woosh.Token(woosh.INDENT, '        ', 273, 0, 273, 8),
woosh.Token(woosh.NAME, 'raise', 273, 8, 273, 13),
woosh.Token(woosh.NAME, 'TypeError', 273, 14, 273, 23),
woosh.Token(woosh.OP, '(', 273, 23, 273, 24),
woosh.Token(woosh.STRING, 'f"cannot pickle {self.__class__.__name__!r} object"', 273, 24, 273, 75),
woosh.Token(woosh.OP, ')', 273, 75, 273, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 76, 274, 0),
woosh.Token(woosh.DEDENT, '    ', 275, 0, 275, 4),
woosh.Token(woosh.NAME, 'def', 275, 4, 275, 7),
woosh.Token(woosh.NAME, 'dup', 275, 8, 275, 11),
woosh.Token(woosh.OP, '(', 275, 11, 275, 12),
woosh.Token(woosh.NAME, 'self', 275, 12, 275, 16),
woosh.Token(woosh.OP, ')', 275, 16, 275, 17),
woosh.Token(woosh.OP, ':', 275, 17, 275, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 275, 18, 276, 0),
woosh.Token(woosh.INDENT, '        ', 276, 0, 276, 8),
woosh.Token(woosh.STRING, '"""dup() -> socket object\r\n\r\n        Duplicate the socket. Return a new socket object connected to the same\r\n        system resource. The new socket is non-inheritable.\r\n        """', 276, 8, 280, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 280, 11, 281, 0),
woosh.Token(woosh.NAME, 'fd', 281, 8, 281, 10),
woosh.Token(woosh.OP, '=', 281, 11, 281, 12),
woosh.Token(woosh.NAME, 'dup', 281, 13, 281, 16),
woosh.Token(woosh.OP, '(', 281, 16, 281, 17),
woosh.Token(woosh.NAME, 'self', 281, 17, 281, 21),
woosh.Token(woosh.OP, '.', 281, 21, 281, 22),
woosh.Token(woosh.NAME, 'fileno', 281, 22, 281, 28),
woosh.Token(woosh.OP, '(', 281, 28, 281, 29),
woosh.Token(woosh.OP, ')', 281, 29, 281, 30),
woosh.Token(woosh.OP, ')', 281, 30, 281, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 31, 282, 0),
woosh.Token(woosh.NAME, 'sock', 282, 8, 282, 12),
woosh.Token(woosh.OP, '=', 282, 13, 282, 14),
woosh.Token(woosh.NAME, 'self', 282, 15, 282, 19),
woosh.Token(woosh.OP, '.', 282, 19, 282, 20),
woosh.Token(woosh.NAME, '__class__', 282, 20, 282, 29),
woosh.Token(woosh.OP, '(', 282, 29, 282, 30),
woosh.Token(woosh.NAME, 'self', 282, 30, 282, 34),
woosh.Token(woosh.OP, '.', 282, 34, 282, 35),
woosh.Token(woosh.NAME, 'family', 282, 35, 282, 41),
woosh.Token(woosh.OP, ',', 282, 41, 282, 42),
woosh.Token(woosh.NAME, 'self', 282, 43, 282, 47),
woosh.Token(woosh.OP, '.', 282, 47, 282, 48),
woosh.Token(woosh.NAME, 'type', 282, 48, 282, 52),
woosh.Token(woosh.OP, ',', 282, 52, 282, 53),
woosh.Token(woosh.NAME, 'self', 282, 54, 282, 58),
woosh.Token(woosh.OP, '.', 282, 58, 282, 59),
woosh.Token(woosh.NAME, 'proto', 282, 59, 282, 64),
woosh.Token(woosh.OP, ',', 282, 64, 282, 65),
woosh.Token(woosh.NAME, 'fileno', 282, 66, 282, 72),
woosh.Token(woosh.OP, '=', 282, 72, 282, 73),
woosh.Token(woosh.NAME, 'fd', 282, 73, 282, 75),
woosh.Token(woosh.OP, ')', 282, 75, 282, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 282, 76, 283, 0),
woosh.Token(woosh.NAME, 'sock', 283, 8, 283, 12),
woosh.Token(woosh.OP, '.', 283, 12, 283, 13),
woosh.Token(woosh.NAME, 'settimeout', 283, 13, 283, 23),
woosh.Token(woosh.OP, '(', 283, 23, 283, 24),
woosh.Token(woosh.NAME, 'self', 283, 24, 283, 28),
woosh.Token(woosh.OP, '.', 283, 28, 283, 29),
woosh.Token(woosh.NAME, 'gettimeout', 283, 29, 283, 39),
woosh.Token(woosh.OP, '(', 283, 39, 283, 40),
woosh.Token(woosh.OP, ')', 283, 40, 283, 41),
woosh.Token(woosh.OP, ')', 283, 41, 283, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 283, 42, 284, 0),
woosh.Token(woosh.NAME, 'return', 284, 8, 284, 14),
woosh.Token(woosh.NAME, 'sock', 284, 15, 284, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 19, 285, 0),
woosh.Token(woosh.DEDENT, '    ', 286, 0, 286, 4),
woosh.Token(woosh.NAME, 'def', 286, 4, 286, 7),
woosh.Token(woosh.NAME, 'accept', 286, 8, 286, 14),
woosh.Token(woosh.OP, '(', 286, 14, 286, 15),
woosh.Token(woosh.NAME, 'self', 286, 15, 286, 19),
woosh.Token(woosh.OP, ')', 286, 19, 286, 20),
woosh.Token(woosh.OP, ':', 286, 20, 286, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 286, 21, 287, 0),
woosh.Token(woosh.INDENT, '        ', 287, 0, 287, 8),
woosh.Token(woosh.STRING, '"""accept() -> (socket object, address info)\r\n\r\n        Wait for an incoming connection.  Return a new socket\r\n        representing the connection, and the address of the client.\r\n        For IP sockets, the address info is a pair (hostaddr, port).\r\n        """', 287, 8, 292, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 11, 293, 0),
woosh.Token(woosh.NAME, 'fd', 293, 8, 293, 10),
woosh.Token(woosh.OP, ',', 293, 10, 293, 11),
woosh.Token(woosh.NAME, 'addr', 293, 12, 293, 16),
woosh.Token(woosh.OP, '=', 293, 17, 293, 18),
woosh.Token(woosh.NAME, 'self', 293, 19, 293, 23),
woosh.Token(woosh.OP, '.', 293, 23, 293, 24),
woosh.Token(woosh.NAME, '_accept', 293, 24, 293, 31),
woosh.Token(woosh.OP, '(', 293, 31, 293, 32),
woosh.Token(woosh.OP, ')', 293, 32, 293, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 33, 294, 0),
woosh.Token(woosh.NAME, 'sock', 294, 8, 294, 12),
woosh.Token(woosh.OP, '=', 294, 13, 294, 14),
woosh.Token(woosh.NAME, 'socket', 294, 15, 294, 21),
woosh.Token(woosh.OP, '(', 294, 21, 294, 22),
woosh.Token(woosh.NAME, 'self', 294, 22, 294, 26),
woosh.Token(woosh.OP, '.', 294, 26, 294, 27),
woosh.Token(woosh.NAME, 'family', 294, 27, 294, 33),
woosh.Token(woosh.OP, ',', 294, 33, 294, 34),
woosh.Token(woosh.NAME, 'self', 294, 35, 294, 39),
woosh.Token(woosh.OP, '.', 294, 39, 294, 40),
woosh.Token(woosh.NAME, 'type', 294, 40, 294, 44),
woosh.Token(woosh.OP, ',', 294, 44, 294, 45),
woosh.Token(woosh.NAME, 'self', 294, 46, 294, 50),
woosh.Token(woosh.OP, '.', 294, 50, 294, 51),
woosh.Token(woosh.NAME, 'proto', 294, 51, 294, 56),
woosh.Token(woosh.OP, ',', 294, 56, 294, 57),
woosh.Token(woosh.NAME, 'fileno', 294, 58, 294, 64),
woosh.Token(woosh.OP, '=', 294, 64, 294, 65),
woosh.Token(woosh.NAME, 'fd', 294, 65, 294, 67),
woosh.Token(woosh.OP, ')', 294, 67, 294, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 68, 295, 0),
woosh.Token(woosh.COMMENT, '# Issue #7995: if no default timeout is set and the listening', 295, 8, 295, 69),
woosh.Token(woosh.COMMENT, '# socket had a (non-zero) timeout, force the new socket in blocking', 296, 8, 296, 75),
woosh.Token(woosh.COMMENT, '# mode to override platform-specific socket flags inheritance.', 297, 8, 297, 70),
woosh.Token(woosh.NAME, 'if', 298, 8, 298, 10),
woosh.Token(woosh.NAME, 'getdefaulttimeout', 298, 11, 298, 28),
woosh.Token(woosh.OP, '(', 298, 28, 298, 29),
woosh.Token(woosh.OP, ')', 298, 29, 298, 30),
woosh.Token(woosh.NAME, 'is', 298, 31, 298, 33),
woosh.Token(woosh.NAME, 'None', 298, 34, 298, 38),
woosh.Token(woosh.NAME, 'and', 298, 39, 298, 42),
woosh.Token(woosh.NAME, 'self', 298, 43, 298, 47),
woosh.Token(woosh.OP, '.', 298, 47, 298, 48),
woosh.Token(woosh.NAME, 'gettimeout', 298, 48, 298, 58),
woosh.Token(woosh.OP, '(', 298, 58, 298, 59),
woosh.Token(woosh.OP, ')', 298, 59, 298, 60),
woosh.Token(woosh.OP, ':', 298, 60, 298, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 61, 299, 0),
woosh.Token(woosh.INDENT, '            ', 299, 0, 299, 12),
woosh.Token(woosh.NAME, 'sock', 299, 12, 299, 16),
woosh.Token(woosh.OP, '.', 299, 16, 299, 17),
woosh.Token(woosh.NAME, 'setblocking', 299, 17, 299, 28),
woosh.Token(woosh.OP, '(', 299, 28, 299, 29),
woosh.Token(woosh.NAME, 'True', 299, 29, 299, 33),
woosh.Token(woosh.OP, ')', 299, 33, 299, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 299, 34, 300, 0),
woosh.Token(woosh.DEDENT, '        ', 300, 0, 300, 8),
woosh.Token(woosh.NAME, 'return', 300, 8, 300, 14),
woosh.Token(woosh.NAME, 'sock', 300, 15, 300, 19),
woosh.Token(woosh.OP, ',', 300, 19, 300, 20),
woosh.Token(woosh.NAME, 'addr', 300, 21, 300, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 25, 301, 0),
woosh.Token(woosh.DEDENT, '    ', 302, 0, 302, 4),
woosh.Token(woosh.NAME, 'def', 302, 4, 302, 7),
woosh.Token(woosh.NAME, 'makefile', 302, 8, 302, 16),
woosh.Token(woosh.OP, '(', 302, 16, 302, 17),
woosh.Token(woosh.NAME, 'self', 302, 17, 302, 21),
woosh.Token(woosh.OP, ',', 302, 21, 302, 22),
woosh.Token(woosh.NAME, 'mode', 302, 23, 302, 27),
woosh.Token(woosh.OP, '=', 302, 27, 302, 28),
woosh.Token(woosh.STRING, '"r"', 302, 28, 302, 31),
woosh.Token(woosh.OP, ',', 302, 31, 302, 32),
woosh.Token(woosh.NAME, 'buffering', 302, 33, 302, 42),
woosh.Token(woosh.OP, '=', 302, 42, 302, 43),
woosh.Token(woosh.NAME, 'None', 302, 43, 302, 47),
woosh.Token(woosh.OP, ',', 302, 47, 302, 48),
woosh.Token(woosh.OP, '*', 302, 49, 302, 50),
woosh.Token(woosh.OP, ',', 302, 50, 302, 51),
woosh.Token(woosh.NAME, 'encoding', 303, 17, 303, 25),
woosh.Token(woosh.OP, '=', 303, 25, 303, 26),
woosh.Token(woosh.NAME, 'None', 303, 26, 303, 30),
woosh.Token(woosh.OP, ',', 303, 30, 303, 31),
woosh.Token(woosh.NAME, 'errors', 303, 32, 303, 38),
woosh.Token(woosh.OP, '=', 303, 38, 303, 39),
woosh.Token(woosh.NAME, 'None', 303, 39, 303, 43),
woosh.Token(woosh.OP, ',', 303, 43, 303, 44),
woosh.Token(woosh.NAME, 'newline', 303, 45, 303, 52),
woosh.Token(woosh.OP, '=', 303, 52, 303, 53),
woosh.Token(woosh.NAME, 'None', 303, 53, 303, 57),
woosh.Token(woosh.OP, ')', 303, 57, 303, 58),
woosh.Token(woosh.OP, ':', 303, 58, 303, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 59, 304, 0),
woosh.Token(woosh.INDENT, '        ', 304, 0, 304, 8),
woosh.Token(woosh.STRING, '"""makefile(...) -> an I/O stream connected to the socket\r\n\r\n        The arguments are as for io.open() after the filename, except the only\r\n        supported mode values are \'r\' (default), \'w\' and \'b\'.\r\n        """', 304, 8, 308, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 11, 309, 0),
woosh.Token(woosh.COMMENT, '# XXX refactor to share code?', 309, 8, 309, 37),
woosh.Token(woosh.NAME, 'if', 310, 8, 310, 10),
woosh.Token(woosh.NAME, 'not', 310, 11, 310, 14),
woosh.Token(woosh.NAME, 'set', 310, 15, 310, 18),
woosh.Token(woosh.OP, '(', 310, 18, 310, 19),
woosh.Token(woosh.NAME, 'mode', 310, 19, 310, 23),
woosh.Token(woosh.OP, ')', 310, 23, 310, 24),
woosh.Token(woosh.OP, '<=', 310, 25, 310, 27),
woosh.Token(woosh.OP, '{', 310, 28, 310, 29),
woosh.Token(woosh.STRING, '"r"', 310, 29, 310, 32),
woosh.Token(woosh.OP, ',', 310, 32, 310, 33),
woosh.Token(woosh.STRING, '"w"', 310, 34, 310, 37),
woosh.Token(woosh.OP, ',', 310, 37, 310, 38),
woosh.Token(woosh.STRING, '"b"', 310, 39, 310, 42),
woosh.Token(woosh.OP, '}', 310, 42, 310, 43),
woosh.Token(woosh.OP, ':', 310, 43, 310, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 44, 311, 0),
woosh.Token(woosh.INDENT, '            ', 311, 0, 311, 12),
woosh.Token(woosh.NAME, 'raise', 311, 12, 311, 17),
woosh.Token(woosh.NAME, 'ValueError', 311, 18, 311, 28),
woosh.Token(woosh.OP, '(', 311, 28, 311, 29),
woosh.Token(woosh.STRING, '"invalid mode %r (only r, w, b allowed)"', 311, 29, 311, 69),
woosh.Token(woosh.OP, '%', 311, 70, 311, 71),
woosh.Token(woosh.OP, '(', 311, 72, 311, 73),
woosh.Token(woosh.NAME, 'mode', 311, 73, 311, 77),
woosh.Token(woosh.OP, ',', 311, 77, 311, 78),
woosh.Token(woosh.OP, ')', 311, 78, 311, 79),
woosh.Token(woosh.OP, ')', 311, 79, 311, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 80, 312, 0),
woosh.Token(woosh.DEDENT, '        ', 312, 0, 312, 8),
woosh.Token(woosh.NAME, 'writing', 312, 8, 312, 15),
woosh.Token(woosh.OP, '=', 312, 16, 312, 17),
woosh.Token(woosh.STRING, '"w"', 312, 18, 312, 21),
woosh.Token(woosh.NAME, 'in', 312, 22, 312, 24),
woosh.Token(woosh.NAME, 'mode', 312, 25, 312, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 29, 313, 0),
woosh.Token(woosh.NAME, 'reading', 313, 8, 313, 15),
woosh.Token(woosh.OP, '=', 313, 16, 313, 17),
woosh.Token(woosh.STRING, '"r"', 313, 18, 313, 21),
woosh.Token(woosh.NAME, 'in', 313, 22, 313, 24),
woosh.Token(woosh.NAME, 'mode', 313, 25, 313, 29),
woosh.Token(woosh.NAME, 'or', 313, 30, 313, 32),
woosh.Token(woosh.NAME, 'not', 313, 33, 313, 36),
woosh.Token(woosh.NAME, 'writing', 313, 37, 313, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 313, 44, 314, 0),
woosh.Token(woosh.NAME, 'assert', 314, 8, 314, 14),
woosh.Token(woosh.NAME, 'reading', 314, 15, 314, 22),
woosh.Token(woosh.NAME, 'or', 314, 23, 314, 25),
woosh.Token(woosh.NAME, 'writing', 314, 26, 314, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 314, 33, 315, 0),
woosh.Token(woosh.NAME, 'binary', 315, 8, 315, 14),
woosh.Token(woosh.OP, '=', 315, 15, 315, 16),
woosh.Token(woosh.STRING, '"b"', 315, 17, 315, 20),
woosh.Token(woosh.NAME, 'in', 315, 21, 315, 23),
woosh.Token(woosh.NAME, 'mode', 315, 24, 315, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 28, 316, 0),
woosh.Token(woosh.NAME, 'rawmode', 316, 8, 316, 15),
woosh.Token(woosh.OP, '=', 316, 16, 316, 17),
woosh.Token(woosh.STRING, '""', 316, 18, 316, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 20, 317, 0),
woosh.Token(woosh.NAME, 'if', 317, 8, 317, 10),
woosh.Token(woosh.NAME, 'reading', 317, 11, 317, 18),
woosh.Token(woosh.OP, ':', 317, 18, 317, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 19, 318, 0),
woosh.Token(woosh.INDENT, '            ', 318, 0, 318, 12),
woosh.Token(woosh.NAME, 'rawmode', 318, 12, 318, 19),
woosh.Token(woosh.OP, '+=', 318, 20, 318, 22),
woosh.Token(woosh.STRING, '"r"', 318, 23, 318, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 318, 26, 319, 0),
woosh.Token(woosh.DEDENT, '        ', 319, 0, 319, 8),
woosh.Token(woosh.NAME, 'if', 319, 8, 319, 10),
woosh.Token(woosh.NAME, 'writing', 319, 11, 319, 18),
woosh.Token(woosh.OP, ':', 319, 18, 319, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 319, 19, 320, 0),
woosh.Token(woosh.INDENT, '            ', 320, 0, 320, 12),
woosh.Token(woosh.NAME, 'rawmode', 320, 12, 320, 19),
woosh.Token(woosh.OP, '+=', 320, 20, 320, 22),
woosh.Token(woosh.STRING, '"w"', 320, 23, 320, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 320, 26, 321, 0),
woosh.Token(woosh.DEDENT, '        ', 321, 0, 321, 8),
woosh.Token(woosh.NAME, 'raw', 321, 8, 321, 11),
woosh.Token(woosh.OP, '=', 321, 12, 321, 13),
woosh.Token(woosh.NAME, 'SocketIO', 321, 14, 321, 22),
woosh.Token(woosh.OP, '(', 321, 22, 321, 23),
woosh.Token(woosh.NAME, 'self', 321, 23, 321, 27),
woosh.Token(woosh.OP, ',', 321, 27, 321, 28),
woosh.Token(woosh.NAME, 'rawmode', 321, 29, 321, 36),
woosh.Token(woosh.OP, ')', 321, 36, 321, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 321, 37, 322, 0),
woosh.Token(woosh.NAME, 'self', 322, 8, 322, 12),
woosh.Token(woosh.OP, '.', 322, 12, 322, 13),
woosh.Token(woosh.NAME, '_io_refs', 322, 13, 322, 21),
woosh.Token(woosh.OP, '+=', 322, 22, 322, 24),
woosh.Token(woosh.NUMBER, '1', 322, 25, 322, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 26, 323, 0),
woosh.Token(woosh.NAME, 'if', 323, 8, 323, 10),
woosh.Token(woosh.NAME, 'buffering', 323, 11, 323, 20),
woosh.Token(woosh.NAME, 'is', 323, 21, 323, 23),
woosh.Token(woosh.NAME, 'None', 323, 24, 323, 28),
woosh.Token(woosh.OP, ':', 323, 28, 323, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 29, 324, 0),
woosh.Token(woosh.INDENT, '            ', 324, 0, 324, 12),
woosh.Token(woosh.NAME, 'buffering', 324, 12, 324, 21),
woosh.Token(woosh.OP, '=', 324, 22, 324, 23),
woosh.Token(woosh.OP, '-', 324, 24, 324, 25),
woosh.Token(woosh.NUMBER, '1', 324, 25, 324, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 26, 325, 0),
woosh.Token(woosh.DEDENT, '        ', 325, 0, 325, 8),
woosh.Token(woosh.NAME, 'if', 325, 8, 325, 10),
woosh.Token(woosh.NAME, 'buffering', 325, 11, 325, 20),
woosh.Token(woosh.OP, '<', 325, 21, 325, 22),
woosh.Token(woosh.NUMBER, '0', 325, 23, 325, 24),
woosh.Token(woosh.OP, ':', 325, 24, 325, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 25, 326, 0),
woosh.Token(woosh.INDENT, '            ', 326, 0, 326, 12),
woosh.Token(woosh.NAME, 'buffering', 326, 12, 326, 21),
woosh.Token(woosh.OP, '=', 326, 22, 326, 23),
woosh.Token(woosh.NAME, 'io', 326, 24, 326, 26),
woosh.Token(woosh.OP, '.', 326, 26, 326, 27),
woosh.Token(woosh.NAME, 'DEFAULT_BUFFER_SIZE', 326, 27, 326, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 46, 327, 0),
woosh.Token(woosh.DEDENT, '        ', 327, 0, 327, 8),
woosh.Token(woosh.NAME, 'if', 327, 8, 327, 10),
woosh.Token(woosh.NAME, 'buffering', 327, 11, 327, 20),
woosh.Token(woosh.OP, '==', 327, 21, 327, 23),
woosh.Token(woosh.NUMBER, '0', 327, 24, 327, 25),
woosh.Token(woosh.OP, ':', 327, 25, 327, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 26, 328, 0),
woosh.Token(woosh.INDENT, '            ', 328, 0, 328, 12),
woosh.Token(woosh.NAME, 'if', 328, 12, 328, 14),
woosh.Token(woosh.NAME, 'not', 328, 15, 328, 18),
woosh.Token(woosh.NAME, 'binary', 328, 19, 328, 25),
woosh.Token(woosh.OP, ':', 328, 25, 328, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 328, 26, 329, 0),
woosh.Token(woosh.INDENT, '                ', 329, 0, 329, 16),
woosh.Token(woosh.NAME, 'raise', 329, 16, 329, 21),
woosh.Token(woosh.NAME, 'ValueError', 329, 22, 329, 32),
woosh.Token(woosh.OP, '(', 329, 32, 329, 33),
woosh.Token(woosh.STRING, '"unbuffered streams must be binary"', 329, 33, 329, 68),
woosh.Token(woosh.OP, ')', 329, 68, 329, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 329, 69, 330, 0),
woosh.Token(woosh.DEDENT, '            ', 330, 0, 330, 12),
woosh.Token(woosh.NAME, 'return', 330, 12, 330, 18),
woosh.Token(woosh.NAME, 'raw', 330, 19, 330, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 330, 22, 331, 0),
woosh.Token(woosh.DEDENT, '        ', 331, 0, 331, 8),
woosh.Token(woosh.NAME, 'if', 331, 8, 331, 10),
woosh.Token(woosh.NAME, 'reading', 331, 11, 331, 18),
woosh.Token(woosh.NAME, 'and', 331, 19, 331, 22),
woosh.Token(woosh.NAME, 'writing', 331, 23, 331, 30),
woosh.Token(woosh.OP, ':', 331, 30, 331, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 331, 31, 332, 0),
woosh.Token(woosh.INDENT, '            ', 332, 0, 332, 12),
woosh.Token(woosh.NAME, 'buffer', 332, 12, 332, 18),
woosh.Token(woosh.OP, '=', 332, 19, 332, 20),
woosh.Token(woosh.NAME, 'io', 332, 21, 332, 23),
woosh.Token(woosh.OP, '.', 332, 23, 332, 24),
woosh.Token(woosh.NAME, 'BufferedRWPair', 332, 24, 332, 38),
woosh.Token(woosh.OP, '(', 332, 38, 332, 39),
woosh.Token(woosh.NAME, 'raw', 332, 39, 332, 42),
woosh.Token(woosh.OP, ',', 332, 42, 332, 43),
woosh.Token(woosh.NAME, 'raw', 332, 44, 332, 47),
woosh.Token(woosh.OP, ',', 332, 47, 332, 48),
woosh.Token(woosh.NAME, 'buffering', 332, 49, 332, 58),
woosh.Token(woosh.OP, ')', 332, 58, 332, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 59, 333, 0),
woosh.Token(woosh.DEDENT, '        ', 333, 0, 333, 8),
woosh.Token(woosh.NAME, 'elif', 333, 8, 333, 12),
woosh.Token(woosh.NAME, 'reading', 333, 13, 333, 20),
woosh.Token(woosh.OP, ':', 333, 20, 333, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 333, 21, 334, 0),
woosh.Token(woosh.INDENT, '            ', 334, 0, 334, 12),
woosh.Token(woosh.NAME, 'buffer', 334, 12, 334, 18),
woosh.Token(woosh.OP, '=', 334, 19, 334, 20),
woosh.Token(woosh.NAME, 'io', 334, 21, 334, 23),
woosh.Token(woosh.OP, '.', 334, 23, 334, 24),
woosh.Token(woosh.NAME, 'BufferedReader', 334, 24, 334, 38),
woosh.Token(woosh.OP, '(', 334, 38, 334, 39),
woosh.Token(woosh.NAME, 'raw', 334, 39, 334, 42),
woosh.Token(woosh.OP, ',', 334, 42, 334, 43),
woosh.Token(woosh.NAME, 'buffering', 334, 44, 334, 53),
woosh.Token(woosh.OP, ')', 334, 53, 334, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 334, 54, 335, 0),
woosh.Token(woosh.DEDENT, '        ', 335, 0, 335, 8),
woosh.Token(woosh.NAME, 'else', 335, 8, 335, 12),
woosh.Token(woosh.OP, ':', 335, 12, 335, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 335, 13, 336, 0),
woosh.Token(woosh.INDENT, '            ', 336, 0, 336, 12),
woosh.Token(woosh.NAME, 'assert', 336, 12, 336, 18),
woosh.Token(woosh.NAME, 'writing', 336, 19, 336, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 26, 337, 0),
woosh.Token(woosh.NAME, 'buffer', 337, 12, 337, 18),
woosh.Token(woosh.OP, '=', 337, 19, 337, 20),
woosh.Token(woosh.NAME, 'io', 337, 21, 337, 23),
woosh.Token(woosh.OP, '.', 337, 23, 337, 24),
woosh.Token(woosh.NAME, 'BufferedWriter', 337, 24, 337, 38),
woosh.Token(woosh.OP, '(', 337, 38, 337, 39),
woosh.Token(woosh.NAME, 'raw', 337, 39, 337, 42),
woosh.Token(woosh.OP, ',', 337, 42, 337, 43),
woosh.Token(woosh.NAME, 'buffering', 337, 44, 337, 53),
woosh.Token(woosh.OP, ')', 337, 53, 337, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 337, 54, 338, 0),
woosh.Token(woosh.DEDENT, '        ', 338, 0, 338, 8),
woosh.Token(woosh.NAME, 'if', 338, 8, 338, 10),
woosh.Token(woosh.NAME, 'binary', 338, 11, 338, 17),
woosh.Token(woosh.OP, ':', 338, 17, 338, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 338, 18, 339, 0),
woosh.Token(woosh.INDENT, '            ', 339, 0, 339, 12),
woosh.Token(woosh.NAME, 'return', 339, 12, 339, 18),
woosh.Token(woosh.NAME, 'buffer', 339, 19, 339, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 339, 25, 340, 0),
woosh.Token(woosh.DEDENT, '        ', 340, 0, 340, 8),
woosh.Token(woosh.NAME, 'text', 340, 8, 340, 12),
woosh.Token(woosh.OP, '=', 340, 13, 340, 14),
woosh.Token(woosh.NAME, 'io', 340, 15, 340, 17),
woosh.Token(woosh.OP, '.', 340, 17, 340, 18),
woosh.Token(woosh.NAME, 'TextIOWrapper', 340, 18, 340, 31),
woosh.Token(woosh.OP, '(', 340, 31, 340, 32),
woosh.Token(woosh.NAME, 'buffer', 340, 32, 340, 38),
woosh.Token(woosh.OP, ',', 340, 38, 340, 39),
woosh.Token(woosh.NAME, 'encoding', 340, 40, 340, 48),
woosh.Token(woosh.OP, ',', 340, 48, 340, 49),
woosh.Token(woosh.NAME, 'errors', 340, 50, 340, 56),
woosh.Token(woosh.OP, ',', 340, 56, 340, 57),
woosh.Token(woosh.NAME, 'newline', 340, 58, 340, 65),
woosh.Token(woosh.OP, ')', 340, 65, 340, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 66, 341, 0),
woosh.Token(woosh.NAME, 'text', 341, 8, 341, 12),
woosh.Token(woosh.OP, '.', 341, 12, 341, 13),
woosh.Token(woosh.NAME, 'mode', 341, 13, 341, 17),
woosh.Token(woosh.OP, '=', 341, 18, 341, 19),
woosh.Token(woosh.NAME, 'mode', 341, 20, 341, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 24, 342, 0),
woosh.Token(woosh.NAME, 'return', 342, 8, 342, 14),
woosh.Token(woosh.NAME, 'text', 342, 15, 342, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 19, 343, 0),
woosh.Token(woosh.DEDENT, '    ', 344, 0, 344, 4),
woosh.Token(woosh.NAME, 'if', 344, 4, 344, 6),
woosh.Token(woosh.NAME, 'hasattr', 344, 7, 344, 14),
woosh.Token(woosh.OP, '(', 344, 14, 344, 15),
woosh.Token(woosh.NAME, 'os', 344, 15, 344, 17),
woosh.Token(woosh.OP, ',', 344, 17, 344, 18),
woosh.Token(woosh.STRING, "'sendfile'", 344, 19, 344, 29),
woosh.Token(woosh.OP, ')', 344, 29, 344, 30),
woosh.Token(woosh.OP, ':', 344, 30, 344, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 344, 31, 345, 0),
woosh.Token(woosh.INDENT, '        ', 346, 0, 346, 8),
woosh.Token(woosh.NAME, 'def', 346, 8, 346, 11),
woosh.Token(woosh.NAME, '_sendfile_use_sendfile', 346, 12, 346, 34),
woosh.Token(woosh.OP, '(', 346, 34, 346, 35),
woosh.Token(woosh.NAME, 'self', 346, 35, 346, 39),
woosh.Token(woosh.OP, ',', 346, 39, 346, 40),
woosh.Token(woosh.NAME, 'file', 346, 41, 346, 45),
woosh.Token(woosh.OP, ',', 346, 45, 346, 46),
woosh.Token(woosh.NAME, 'offset', 346, 47, 346, 53),
woosh.Token(woosh.OP, '=', 346, 53, 346, 54),
woosh.Token(woosh.NUMBER, '0', 346, 54, 346, 55),
woosh.Token(woosh.OP, ',', 346, 55, 346, 56),
woosh.Token(woosh.NAME, 'count', 346, 57, 346, 62),
woosh.Token(woosh.OP, '=', 346, 62, 346, 63),
woosh.Token(woosh.NAME, 'None', 346, 63, 346, 67),
woosh.Token(woosh.OP, ')', 346, 67, 346, 68),
woosh.Token(woosh.OP, ':', 346, 68, 346, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 69, 347, 0),
woosh.Token(woosh.INDENT, '            ', 347, 0, 347, 12),
woosh.Token(woosh.NAME, 'self', 347, 12, 347, 16),
woosh.Token(woosh.OP, '.', 347, 16, 347, 17),
woosh.Token(woosh.NAME, '_check_sendfile_params', 347, 17, 347, 39),
woosh.Token(woosh.OP, '(', 347, 39, 347, 40),
woosh.Token(woosh.NAME, 'file', 347, 40, 347, 44),
woosh.Token(woosh.OP, ',', 347, 44, 347, 45),
woosh.Token(woosh.NAME, 'offset', 347, 46, 347, 52),
woosh.Token(woosh.OP, ',', 347, 52, 347, 53),
woosh.Token(woosh.NAME, 'count', 347, 54, 347, 59),
woosh.Token(woosh.OP, ')', 347, 59, 347, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 60, 348, 0),
woosh.Token(woosh.NAME, 'sockno', 348, 12, 348, 18),
woosh.Token(woosh.OP, '=', 348, 19, 348, 20),
woosh.Token(woosh.NAME, 'self', 348, 21, 348, 25),
woosh.Token(woosh.OP, '.', 348, 25, 348, 26),
woosh.Token(woosh.NAME, 'fileno', 348, 26, 348, 32),
woosh.Token(woosh.OP, '(', 348, 32, 348, 33),
woosh.Token(woosh.OP, ')', 348, 33, 348, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 34, 349, 0),
woosh.Token(woosh.NAME, 'try', 349, 12, 349, 15),
woosh.Token(woosh.OP, ':', 349, 15, 349, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 16, 350, 0),
woosh.Token(woosh.INDENT, '                ', 350, 0, 350, 16),
woosh.Token(woosh.NAME, 'fileno', 350, 16, 350, 22),
woosh.Token(woosh.OP, '=', 350, 23, 350, 24),
woosh.Token(woosh.NAME, 'file', 350, 25, 350, 29),
woosh.Token(woosh.OP, '.', 350, 29, 350, 30),
woosh.Token(woosh.NAME, 'fileno', 350, 30, 350, 36),
woosh.Token(woosh.OP, '(', 350, 36, 350, 37),
woosh.Token(woosh.OP, ')', 350, 37, 350, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 38, 351, 0),
woosh.Token(woosh.DEDENT, '            ', 351, 0, 351, 12),
woosh.Token(woosh.NAME, 'except', 351, 12, 351, 18),
woosh.Token(woosh.OP, '(', 351, 19, 351, 20),
woosh.Token(woosh.NAME, 'AttributeError', 351, 20, 351, 34),
woosh.Token(woosh.OP, ',', 351, 34, 351, 35),
woosh.Token(woosh.NAME, 'io', 351, 36, 351, 38),
woosh.Token(woosh.OP, '.', 351, 38, 351, 39),
woosh.Token(woosh.NAME, 'UnsupportedOperation', 351, 39, 351, 59),
woosh.Token(woosh.OP, ')', 351, 59, 351, 60),
woosh.Token(woosh.NAME, 'as', 351, 61, 351, 63),
woosh.Token(woosh.NAME, 'err', 351, 64, 351, 67),
woosh.Token(woosh.OP, ':', 351, 67, 351, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 68, 352, 0),
woosh.Token(woosh.INDENT, '                ', 352, 0, 352, 16),
woosh.Token(woosh.NAME, 'raise', 352, 16, 352, 21),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 352, 22, 352, 39),
woosh.Token(woosh.OP, '(', 352, 39, 352, 40),
woosh.Token(woosh.NAME, 'err', 352, 40, 352, 43),
woosh.Token(woosh.OP, ')', 352, 43, 352, 44),
woosh.Token(woosh.COMMENT, '# not a regular file', 352, 46, 352, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 352, 66, 353, 0),
woosh.Token(woosh.DEDENT, '            ', 353, 0, 353, 12),
woosh.Token(woosh.NAME, 'try', 353, 12, 353, 15),
woosh.Token(woosh.OP, ':', 353, 15, 353, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 353, 16, 354, 0),
woosh.Token(woosh.INDENT, '                ', 354, 0, 354, 16),
woosh.Token(woosh.NAME, 'fsize', 354, 16, 354, 21),
woosh.Token(woosh.OP, '=', 354, 22, 354, 23),
woosh.Token(woosh.NAME, 'os', 354, 24, 354, 26),
woosh.Token(woosh.OP, '.', 354, 26, 354, 27),
woosh.Token(woosh.NAME, 'fstat', 354, 27, 354, 32),
woosh.Token(woosh.OP, '(', 354, 32, 354, 33),
woosh.Token(woosh.NAME, 'fileno', 354, 33, 354, 39),
woosh.Token(woosh.OP, ')', 354, 39, 354, 40),
woosh.Token(woosh.OP, '.', 354, 40, 354, 41),
woosh.Token(woosh.NAME, 'st_size', 354, 41, 354, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 354, 48, 355, 0),
woosh.Token(woosh.DEDENT, '            ', 355, 0, 355, 12),
woosh.Token(woosh.NAME, 'except', 355, 12, 355, 18),
woosh.Token(woosh.NAME, 'OSError', 355, 19, 355, 26),
woosh.Token(woosh.NAME, 'as', 355, 27, 355, 29),
woosh.Token(woosh.NAME, 'err', 355, 30, 355, 33),
woosh.Token(woosh.OP, ':', 355, 33, 355, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 355, 34, 356, 0),
woosh.Token(woosh.INDENT, '                ', 356, 0, 356, 16),
woosh.Token(woosh.NAME, 'raise', 356, 16, 356, 21),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 356, 22, 356, 39),
woosh.Token(woosh.OP, '(', 356, 39, 356, 40),
woosh.Token(woosh.NAME, 'err', 356, 40, 356, 43),
woosh.Token(woosh.OP, ')', 356, 43, 356, 44),
woosh.Token(woosh.COMMENT, '# not a regular file', 356, 46, 356, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 356, 66, 357, 0),
woosh.Token(woosh.DEDENT, '            ', 357, 0, 357, 12),
woosh.Token(woosh.NAME, 'if', 357, 12, 357, 14),
woosh.Token(woosh.NAME, 'not', 357, 15, 357, 18),
woosh.Token(woosh.NAME, 'fsize', 357, 19, 357, 24),
woosh.Token(woosh.OP, ':', 357, 24, 357, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 25, 358, 0),
woosh.Token(woosh.INDENT, '                ', 358, 0, 358, 16),
woosh.Token(woosh.NAME, 'return', 358, 16, 358, 22),
woosh.Token(woosh.NUMBER, '0', 358, 23, 358, 24),
woosh.Token(woosh.COMMENT, '# empty file', 358, 26, 358, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 38, 359, 0),
woosh.Token(woosh.COMMENT, '# Truncate to 1GiB to avoid OverflowError, see bpo-38319.', 359, 12, 359, 69),
woosh.Token(woosh.DEDENT, '            ', 360, 0, 360, 12),
woosh.Token(woosh.NAME, 'blocksize', 360, 12, 360, 21),
woosh.Token(woosh.OP, '=', 360, 22, 360, 23),
woosh.Token(woosh.NAME, 'min', 360, 24, 360, 27),
woosh.Token(woosh.OP, '(', 360, 27, 360, 28),
woosh.Token(woosh.NAME, 'count', 360, 28, 360, 33),
woosh.Token(woosh.NAME, 'or', 360, 34, 360, 36),
woosh.Token(woosh.NAME, 'fsize', 360, 37, 360, 42),
woosh.Token(woosh.OP, ',', 360, 42, 360, 43),
woosh.Token(woosh.NUMBER, '2', 360, 44, 360, 45),
woosh.Token(woosh.OP, '**', 360, 46, 360, 48),
woosh.Token(woosh.NUMBER, '30', 360, 49, 360, 51),
woosh.Token(woosh.OP, ')', 360, 51, 360, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 52, 361, 0),
woosh.Token(woosh.NAME, 'timeout', 361, 12, 361, 19),
woosh.Token(woosh.OP, '=', 361, 20, 361, 21),
woosh.Token(woosh.NAME, 'self', 361, 22, 361, 26),
woosh.Token(woosh.OP, '.', 361, 26, 361, 27),
woosh.Token(woosh.NAME, 'gettimeout', 361, 27, 361, 37),
woosh.Token(woosh.OP, '(', 361, 37, 361, 38),
woosh.Token(woosh.OP, ')', 361, 38, 361, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 39, 362, 0),
woosh.Token(woosh.NAME, 'if', 362, 12, 362, 14),
woosh.Token(woosh.NAME, 'timeout', 362, 15, 362, 22),
woosh.Token(woosh.OP, '==', 362, 23, 362, 25),
woosh.Token(woosh.NUMBER, '0', 362, 26, 362, 27),
woosh.Token(woosh.OP, ':', 362, 27, 362, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 362, 28, 363, 0),
woosh.Token(woosh.INDENT, '                ', 363, 0, 363, 16),
woosh.Token(woosh.NAME, 'raise', 363, 16, 363, 21),
woosh.Token(woosh.NAME, 'ValueError', 363, 22, 363, 32),
woosh.Token(woosh.OP, '(', 363, 32, 363, 33),
woosh.Token(woosh.STRING, '"non-blocking sockets are not supported"', 363, 33, 363, 73),
woosh.Token(woosh.OP, ')', 363, 73, 363, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 74, 364, 0),
woosh.Token(woosh.COMMENT, '# poll/select have the advantage of not requiring any', 364, 12, 364, 65),
woosh.Token(woosh.COMMENT, '# extra file descriptor, contrarily to epoll/kqueue', 365, 12, 365, 63),
woosh.Token(woosh.COMMENT, '# (also, they require a single syscall).', 366, 12, 366, 52),
woosh.Token(woosh.DEDENT, '            ', 367, 0, 367, 12),
woosh.Token(woosh.NAME, 'if', 367, 12, 367, 14),
woosh.Token(woosh.NAME, 'hasattr', 367, 15, 367, 22),
woosh.Token(woosh.OP, '(', 367, 22, 367, 23),
woosh.Token(woosh.NAME, 'selectors', 367, 23, 367, 32),
woosh.Token(woosh.OP, ',', 367, 32, 367, 33),
woosh.Token(woosh.STRING, "'PollSelector'", 367, 34, 367, 48),
woosh.Token(woosh.OP, ')', 367, 48, 367, 49),
woosh.Token(woosh.OP, ':', 367, 49, 367, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 50, 368, 0),
woosh.Token(woosh.INDENT, '                ', 368, 0, 368, 16),
woosh.Token(woosh.NAME, 'selector', 368, 16, 368, 24),
woosh.Token(woosh.OP, '=', 368, 25, 368, 26),
woosh.Token(woosh.NAME, 'selectors', 368, 27, 368, 36),
woosh.Token(woosh.OP, '.', 368, 36, 368, 37),
woosh.Token(woosh.NAME, 'PollSelector', 368, 37, 368, 49),
woosh.Token(woosh.OP, '(', 368, 49, 368, 50),
woosh.Token(woosh.OP, ')', 368, 50, 368, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 51, 369, 0),
woosh.Token(woosh.DEDENT, '            ', 369, 0, 369, 12),
woosh.Token(woosh.NAME, 'else', 369, 12, 369, 16),
woosh.Token(woosh.OP, ':', 369, 16, 369, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 17, 370, 0),
woosh.Token(woosh.INDENT, '                ', 370, 0, 370, 16),
woosh.Token(woosh.NAME, 'selector', 370, 16, 370, 24),
woosh.Token(woosh.OP, '=', 370, 25, 370, 26),
woosh.Token(woosh.NAME, 'selectors', 370, 27, 370, 36),
woosh.Token(woosh.OP, '.', 370, 36, 370, 37),
woosh.Token(woosh.NAME, 'SelectSelector', 370, 37, 370, 51),
woosh.Token(woosh.OP, '(', 370, 51, 370, 52),
woosh.Token(woosh.OP, ')', 370, 52, 370, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 53, 371, 0),
woosh.Token(woosh.DEDENT, '            ', 371, 0, 371, 12),
woosh.Token(woosh.NAME, 'selector', 371, 12, 371, 20),
woosh.Token(woosh.OP, '.', 371, 20, 371, 21),
woosh.Token(woosh.NAME, 'register', 371, 21, 371, 29),
woosh.Token(woosh.OP, '(', 371, 29, 371, 30),
woosh.Token(woosh.NAME, 'sockno', 371, 30, 371, 36),
woosh.Token(woosh.OP, ',', 371, 36, 371, 37),
woosh.Token(woosh.NAME, 'selectors', 371, 38, 371, 47),
woosh.Token(woosh.OP, '.', 371, 47, 371, 48),
woosh.Token(woosh.NAME, 'EVENT_WRITE', 371, 48, 371, 59),
woosh.Token(woosh.OP, ')', 371, 59, 371, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 371, 60, 372, 0),
woosh.Token(woosh.NAME, 'total_sent', 373, 12, 373, 22),
woosh.Token(woosh.OP, '=', 373, 23, 373, 24),
woosh.Token(woosh.NUMBER, '0', 373, 25, 373, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 26, 374, 0),
woosh.Token(woosh.COMMENT, '# localize variable access to minimize overhead', 374, 12, 374, 59),
woosh.Token(woosh.NAME, 'selector_select', 375, 12, 375, 27),
woosh.Token(woosh.OP, '=', 375, 28, 375, 29),
woosh.Token(woosh.NAME, 'selector', 375, 30, 375, 38),
woosh.Token(woosh.OP, '.', 375, 38, 375, 39),
woosh.Token(woosh.NAME, 'select', 375, 39, 375, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 45, 376, 0),
woosh.Token(woosh.NAME, 'os_sendfile', 376, 12, 376, 23),
woosh.Token(woosh.OP, '=', 376, 24, 376, 25),
woosh.Token(woosh.NAME, 'os', 376, 26, 376, 28),
woosh.Token(woosh.OP, '.', 376, 28, 376, 29),
woosh.Token(woosh.NAME, 'sendfile', 376, 29, 376, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 37, 377, 0),
woosh.Token(woosh.NAME, 'try', 377, 12, 377, 15),
woosh.Token(woosh.OP, ':', 377, 15, 377, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 16, 378, 0),
woosh.Token(woosh.INDENT, '                ', 378, 0, 378, 16),
woosh.Token(woosh.NAME, 'while', 378, 16, 378, 21),
woosh.Token(woosh.NAME, 'True', 378, 22, 378, 26),
woosh.Token(woosh.OP, ':', 378, 26, 378, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 27, 379, 0),
woosh.Token(woosh.INDENT, '                    ', 379, 0, 379, 20),
woosh.Token(woosh.NAME, 'if', 379, 20, 379, 22),
woosh.Token(woosh.NAME, 'timeout', 379, 23, 379, 30),
woosh.Token(woosh.NAME, 'and', 379, 31, 379, 34),
woosh.Token(woosh.NAME, 'not', 379, 35, 379, 38),
woosh.Token(woosh.NAME, 'selector_select', 379, 39, 379, 54),
woosh.Token(woosh.OP, '(', 379, 54, 379, 55),
woosh.Token(woosh.NAME, 'timeout', 379, 55, 379, 62),
woosh.Token(woosh.OP, ')', 379, 62, 379, 63),
woosh.Token(woosh.OP, ':', 379, 63, 379, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 64, 380, 0),
woosh.Token(woosh.INDENT, '                        ', 380, 0, 380, 24),
woosh.Token(woosh.NAME, 'raise', 380, 24, 380, 29),
woosh.Token(woosh.NAME, '_socket', 380, 30, 380, 37),
woosh.Token(woosh.OP, '.', 380, 37, 380, 38),
woosh.Token(woosh.NAME, 'timeout', 380, 38, 380, 45),
woosh.Token(woosh.OP, '(', 380, 45, 380, 46),
woosh.Token(woosh.STRING, "'timed out'", 380, 46, 380, 57),
woosh.Token(woosh.OP, ')', 380, 57, 380, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 58, 381, 0),
woosh.Token(woosh.DEDENT, '                    ', 381, 0, 381, 20),
woosh.Token(woosh.NAME, 'if', 381, 20, 381, 22),
woosh.Token(woosh.NAME, 'count', 381, 23, 381, 28),
woosh.Token(woosh.OP, ':', 381, 28, 381, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 29, 382, 0),
woosh.Token(woosh.INDENT, '                        ', 382, 0, 382, 24),
woosh.Token(woosh.NAME, 'blocksize', 382, 24, 382, 33),
woosh.Token(woosh.OP, '=', 382, 34, 382, 35),
woosh.Token(woosh.NAME, 'count', 382, 36, 382, 41),
woosh.Token(woosh.OP, '-', 382, 42, 382, 43),
woosh.Token(woosh.NAME, 'total_sent', 382, 44, 382, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 382, 54, 383, 0),
woosh.Token(woosh.NAME, 'if', 383, 24, 383, 26),
woosh.Token(woosh.NAME, 'blocksize', 383, 27, 383, 36),
woosh.Token(woosh.OP, '<=', 383, 37, 383, 39),
woosh.Token(woosh.NUMBER, '0', 383, 40, 383, 41),
woosh.Token(woosh.OP, ':', 383, 41, 383, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 383, 42, 384, 0),
woosh.Token(woosh.INDENT, '                            ', 384, 0, 384, 28),
woosh.Token(woosh.NAME, 'break', 384, 28, 384, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 33, 385, 0),
woosh.Token(woosh.DEDENT, '                    ', 385, 0, 385, 20),
woosh.Token(woosh.DEDENT, '', 385, 20, 385, 20),
woosh.Token(woosh.NAME, 'try', 385, 20, 385, 23),
woosh.Token(woosh.OP, ':', 385, 23, 385, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 24, 386, 0),
woosh.Token(woosh.INDENT, '                        ', 386, 0, 386, 24),
woosh.Token(woosh.NAME, 'sent', 386, 24, 386, 28),
woosh.Token(woosh.OP, '=', 386, 29, 386, 30),
woosh.Token(woosh.NAME, 'os_sendfile', 386, 31, 386, 42),
woosh.Token(woosh.OP, '(', 386, 42, 386, 43),
woosh.Token(woosh.NAME, 'sockno', 386, 43, 386, 49),
woosh.Token(woosh.OP, ',', 386, 49, 386, 50),
woosh.Token(woosh.NAME, 'fileno', 386, 51, 386, 57),
woosh.Token(woosh.OP, ',', 386, 57, 386, 58),
woosh.Token(woosh.NAME, 'offset', 386, 59, 386, 65),
woosh.Token(woosh.OP, ',', 386, 65, 386, 66),
woosh.Token(woosh.NAME, 'blocksize', 386, 67, 386, 76),
woosh.Token(woosh.OP, ')', 386, 76, 386, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 77, 387, 0),
woosh.Token(woosh.DEDENT, '                    ', 387, 0, 387, 20),
woosh.Token(woosh.NAME, 'except', 387, 20, 387, 26),
woosh.Token(woosh.NAME, 'BlockingIOError', 387, 27, 387, 42),
woosh.Token(woosh.OP, ':', 387, 42, 387, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 43, 388, 0),
woosh.Token(woosh.INDENT, '                        ', 388, 0, 388, 24),
woosh.Token(woosh.NAME, 'if', 388, 24, 388, 26),
woosh.Token(woosh.NAME, 'not', 388, 27, 388, 30),
woosh.Token(woosh.NAME, 'timeout', 388, 31, 388, 38),
woosh.Token(woosh.OP, ':', 388, 38, 388, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 388, 39, 389, 0),
woosh.Token(woosh.COMMENT, '# Block until the socket is ready to send some', 389, 28, 389, 74),
woosh.Token(woosh.COMMENT, '# data; avoids hogging CPU resources.', 390, 28, 390, 65),
woosh.Token(woosh.INDENT, '                            ', 391, 0, 391, 28),
woosh.Token(woosh.NAME, 'selector_select', 391, 28, 391, 43),
woosh.Token(woosh.OP, '(', 391, 43, 391, 44),
woosh.Token(woosh.OP, ')', 391, 44, 391, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 45, 392, 0),
woosh.Token(woosh.DEDENT, '                        ', 392, 0, 392, 24),
woosh.Token(woosh.NAME, 'continue', 392, 24, 392, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 392, 32, 393, 0),
woosh.Token(woosh.DEDENT, '                    ', 393, 0, 393, 20),
woosh.Token(woosh.NAME, 'except', 393, 20, 393, 26),
woosh.Token(woosh.NAME, 'OSError', 393, 27, 393, 34),
woosh.Token(woosh.NAME, 'as', 393, 35, 393, 37),
woosh.Token(woosh.NAME, 'err', 393, 38, 393, 41),
woosh.Token(woosh.OP, ':', 393, 41, 393, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 42, 394, 0),
woosh.Token(woosh.INDENT, '                        ', 394, 0, 394, 24),
woosh.Token(woosh.NAME, 'if', 394, 24, 394, 26),
woosh.Token(woosh.NAME, 'total_sent', 394, 27, 394, 37),
woosh.Token(woosh.OP, '==', 394, 38, 394, 40),
woosh.Token(woosh.NUMBER, '0', 394, 41, 394, 42),
woosh.Token(woosh.OP, ':', 394, 42, 394, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 43, 395, 0),
woosh.Token(woosh.COMMENT, '# We can get here for different reasons, the main', 395, 28, 395, 77),
woosh.Token(woosh.COMMENT, "# one being 'file' is not a regular mmap(2)-like", 396, 28, 396, 76),
woosh.Token(woosh.COMMENT, "# file, in which case we'll fall back on using", 397, 28, 397, 74),
woosh.Token(woosh.COMMENT, '# plain send().', 398, 28, 398, 43),
woosh.Token(woosh.INDENT, '                            ', 399, 0, 399, 28),
woosh.Token(woosh.NAME, 'raise', 399, 28, 399, 33),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 399, 34, 399, 51),
woosh.Token(woosh.OP, '(', 399, 51, 399, 52),
woosh.Token(woosh.NAME, 'err', 399, 52, 399, 55),
woosh.Token(woosh.OP, ')', 399, 55, 399, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 56, 400, 0),
woosh.Token(woosh.DEDENT, '                        ', 400, 0, 400, 24),
woosh.Token(woosh.NAME, 'raise', 400, 24, 400, 29),
woosh.Token(woosh.NAME, 'err', 400, 30, 400, 33),
woosh.Token(woosh.NAME, 'from', 400, 34, 400, 38),
woosh.Token(woosh.NAME, 'None', 400, 39, 400, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 43, 401, 0),
woosh.Token(woosh.DEDENT, '                    ', 401, 0, 401, 20),
woosh.Token(woosh.NAME, 'else', 401, 20, 401, 24),
woosh.Token(woosh.OP, ':', 401, 24, 401, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 401, 25, 402, 0),
woosh.Token(woosh.INDENT, '                        ', 402, 0, 402, 24),
woosh.Token(woosh.NAME, 'if', 402, 24, 402, 26),
woosh.Token(woosh.NAME, 'sent', 402, 27, 402, 31),
woosh.Token(woosh.OP, '==', 402, 32, 402, 34),
woosh.Token(woosh.NUMBER, '0', 402, 35, 402, 36),
woosh.Token(woosh.OP, ':', 402, 36, 402, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 402, 37, 403, 0),
woosh.Token(woosh.INDENT, '                            ', 403, 0, 403, 28),
woosh.Token(woosh.NAME, 'break', 403, 28, 403, 33),
woosh.Token(woosh.COMMENT, '# EOF', 403, 35, 403, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 403, 40, 404, 0),
woosh.Token(woosh.DEDENT, '                        ', 404, 0, 404, 24),
woosh.Token(woosh.NAME, 'offset', 404, 24, 404, 30),
woosh.Token(woosh.OP, '+=', 404, 31, 404, 33),
woosh.Token(woosh.NAME, 'sent', 404, 34, 404, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 38, 405, 0),
woosh.Token(woosh.NAME, 'total_sent', 405, 24, 405, 34),
woosh.Token(woosh.OP, '+=', 405, 35, 405, 37),
woosh.Token(woosh.NAME, 'sent', 405, 38, 405, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 42, 406, 0),
woosh.Token(woosh.DEDENT, '                ', 406, 0, 406, 16),
woosh.Token(woosh.DEDENT, '', 406, 16, 406, 16),
woosh.Token(woosh.NAME, 'return', 406, 16, 406, 22),
woosh.Token(woosh.NAME, 'total_sent', 406, 23, 406, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 406, 33, 407, 0),
woosh.Token(woosh.DEDENT, '            ', 407, 0, 407, 12),
woosh.Token(woosh.NAME, 'finally', 407, 12, 407, 19),
woosh.Token(woosh.OP, ':', 407, 19, 407, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 20, 408, 0),
woosh.Token(woosh.INDENT, '                ', 408, 0, 408, 16),
woosh.Token(woosh.NAME, 'if', 408, 16, 408, 18),
woosh.Token(woosh.NAME, 'total_sent', 408, 19, 408, 29),
woosh.Token(woosh.OP, '>', 408, 30, 408, 31),
woosh.Token(woosh.NUMBER, '0', 408, 32, 408, 33),
woosh.Token(woosh.NAME, 'and', 408, 34, 408, 37),
woosh.Token(woosh.NAME, 'hasattr', 408, 38, 408, 45),
woosh.Token(woosh.OP, '(', 408, 45, 408, 46),
woosh.Token(woosh.NAME, 'file', 408, 46, 408, 50),
woosh.Token(woosh.OP, ',', 408, 50, 408, 51),
woosh.Token(woosh.STRING, "'seek'", 408, 52, 408, 58),
woosh.Token(woosh.OP, ')', 408, 58, 408, 59),
woosh.Token(woosh.OP, ':', 408, 59, 408, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 60, 409, 0),
woosh.Token(woosh.INDENT, '                    ', 409, 0, 409, 20),
woosh.Token(woosh.NAME, 'file', 409, 20, 409, 24),
woosh.Token(woosh.OP, '.', 409, 24, 409, 25),
woosh.Token(woosh.NAME, 'seek', 409, 25, 409, 29),
woosh.Token(woosh.OP, '(', 409, 29, 409, 30),
woosh.Token(woosh.NAME, 'offset', 409, 30, 409, 36),
woosh.Token(woosh.OP, ')', 409, 36, 409, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 409, 37, 410, 0),
woosh.Token(woosh.DEDENT, '    ', 410, 0, 410, 4),
woosh.Token(woosh.DEDENT, '', 410, 4, 410, 4),
woosh.Token(woosh.DEDENT, '', 410, 4, 410, 4),
woosh.Token(woosh.DEDENT, '', 410, 4, 410, 4),
woosh.Token(woosh.NAME, 'else', 410, 4, 410, 8),
woosh.Token(woosh.OP, ':', 410, 8, 410, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 9, 411, 0),
woosh.Token(woosh.INDENT, '        ', 411, 0, 411, 8),
woosh.Token(woosh.NAME, 'def', 411, 8, 411, 11),
woosh.Token(woosh.NAME, '_sendfile_use_sendfile', 411, 12, 411, 34),
woosh.Token(woosh.OP, '(', 411, 34, 411, 35),
woosh.Token(woosh.NAME, 'self', 411, 35, 411, 39),
woosh.Token(woosh.OP, ',', 411, 39, 411, 40),
woosh.Token(woosh.NAME, 'file', 411, 41, 411, 45),
woosh.Token(woosh.OP, ',', 411, 45, 411, 46),
woosh.Token(woosh.NAME, 'offset', 411, 47, 411, 53),
woosh.Token(woosh.OP, '=', 411, 53, 411, 54),
woosh.Token(woosh.NUMBER, '0', 411, 54, 411, 55),
woosh.Token(woosh.OP, ',', 411, 55, 411, 56),
woosh.Token(woosh.NAME, 'count', 411, 57, 411, 62),
woosh.Token(woosh.OP, '=', 411, 62, 411, 63),
woosh.Token(woosh.NAME, 'None', 411, 63, 411, 67),
woosh.Token(woosh.OP, ')', 411, 67, 411, 68),
woosh.Token(woosh.OP, ':', 411, 68, 411, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 69, 412, 0),
woosh.Token(woosh.INDENT, '            ', 412, 0, 412, 12),
woosh.Token(woosh.NAME, 'raise', 412, 12, 412, 17),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 412, 18, 412, 35),
woosh.Token(woosh.OP, '(', 412, 35, 412, 36),
woosh.Token(woosh.STRING, '"os.sendfile() not available on this platform"', 413, 16, 413, 62),
woosh.Token(woosh.OP, ')', 413, 62, 413, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 63, 414, 0),
woosh.Token(woosh.DEDENT, '    ', 415, 0, 415, 4),
woosh.Token(woosh.DEDENT, '', 415, 4, 415, 4),
woosh.Token(woosh.NAME, 'def', 415, 4, 415, 7),
woosh.Token(woosh.NAME, '_sendfile_use_send', 415, 8, 415, 26),
woosh.Token(woosh.OP, '(', 415, 26, 415, 27),
woosh.Token(woosh.NAME, 'self', 415, 27, 415, 31),
woosh.Token(woosh.OP, ',', 415, 31, 415, 32),
woosh.Token(woosh.NAME, 'file', 415, 33, 415, 37),
woosh.Token(woosh.OP, ',', 415, 37, 415, 38),
woosh.Token(woosh.NAME, 'offset', 415, 39, 415, 45),
woosh.Token(woosh.OP, '=', 415, 45, 415, 46),
woosh.Token(woosh.NUMBER, '0', 415, 46, 415, 47),
woosh.Token(woosh.OP, ',', 415, 47, 415, 48),
woosh.Token(woosh.NAME, 'count', 415, 49, 415, 54),
woosh.Token(woosh.OP, '=', 415, 54, 415, 55),
woosh.Token(woosh.NAME, 'None', 415, 55, 415, 59),
woosh.Token(woosh.OP, ')', 415, 59, 415, 60),
woosh.Token(woosh.OP, ':', 415, 60, 415, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 415, 61, 416, 0),
woosh.Token(woosh.INDENT, '        ', 416, 0, 416, 8),
woosh.Token(woosh.NAME, 'self', 416, 8, 416, 12),
woosh.Token(woosh.OP, '.', 416, 12, 416, 13),
woosh.Token(woosh.NAME, '_check_sendfile_params', 416, 13, 416, 35),
woosh.Token(woosh.OP, '(', 416, 35, 416, 36),
woosh.Token(woosh.NAME, 'file', 416, 36, 416, 40),
woosh.Token(woosh.OP, ',', 416, 40, 416, 41),
woosh.Token(woosh.NAME, 'offset', 416, 42, 416, 48),
woosh.Token(woosh.OP, ',', 416, 48, 416, 49),
woosh.Token(woosh.NAME, 'count', 416, 50, 416, 55),
woosh.Token(woosh.OP, ')', 416, 55, 416, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 56, 417, 0),
woosh.Token(woosh.NAME, 'if', 417, 8, 417, 10),
woosh.Token(woosh.NAME, 'self', 417, 11, 417, 15),
woosh.Token(woosh.OP, '.', 417, 15, 417, 16),
woosh.Token(woosh.NAME, 'gettimeout', 417, 16, 417, 26),
woosh.Token(woosh.OP, '(', 417, 26, 417, 27),
woosh.Token(woosh.OP, ')', 417, 27, 417, 28),
woosh.Token(woosh.OP, '==', 417, 29, 417, 31),
woosh.Token(woosh.NUMBER, '0', 417, 32, 417, 33),
woosh.Token(woosh.OP, ':', 417, 33, 417, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 417, 34, 418, 0),
woosh.Token(woosh.INDENT, '            ', 418, 0, 418, 12),
woosh.Token(woosh.NAME, 'raise', 418, 12, 418, 17),
woosh.Token(woosh.NAME, 'ValueError', 418, 18, 418, 28),
woosh.Token(woosh.OP, '(', 418, 28, 418, 29),
woosh.Token(woosh.STRING, '"non-blocking sockets are not supported"', 418, 29, 418, 69),
woosh.Token(woosh.OP, ')', 418, 69, 418, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 418, 70, 419, 0),
woosh.Token(woosh.DEDENT, '        ', 419, 0, 419, 8),
woosh.Token(woosh.NAME, 'if', 419, 8, 419, 10),
woosh.Token(woosh.NAME, 'offset', 419, 11, 419, 17),
woosh.Token(woosh.OP, ':', 419, 17, 419, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 419, 18, 420, 0),
woosh.Token(woosh.INDENT, '            ', 420, 0, 420, 12),
woosh.Token(woosh.NAME, 'file', 420, 12, 420, 16),
woosh.Token(woosh.OP, '.', 420, 16, 420, 17),
woosh.Token(woosh.NAME, 'seek', 420, 17, 420, 21),
woosh.Token(woosh.OP, '(', 420, 21, 420, 22),
woosh.Token(woosh.NAME, 'offset', 420, 22, 420, 28),
woosh.Token(woosh.OP, ')', 420, 28, 420, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 29, 421, 0),
woosh.Token(woosh.DEDENT, '        ', 421, 0, 421, 8),
woosh.Token(woosh.NAME, 'blocksize', 421, 8, 421, 17),
woosh.Token(woosh.OP, '=', 421, 18, 421, 19),
woosh.Token(woosh.NAME, 'min', 421, 20, 421, 23),
woosh.Token(woosh.OP, '(', 421, 23, 421, 24),
woosh.Token(woosh.NAME, 'count', 421, 24, 421, 29),
woosh.Token(woosh.OP, ',', 421, 29, 421, 30),
woosh.Token(woosh.NUMBER, '8192', 421, 31, 421, 35),
woosh.Token(woosh.OP, ')', 421, 35, 421, 36),
woosh.Token(woosh.NAME, 'if', 421, 37, 421, 39),
woosh.Token(woosh.NAME, 'count', 421, 40, 421, 45),
woosh.Token(woosh.NAME, 'else', 421, 46, 421, 50),
woosh.Token(woosh.NUMBER, '8192', 421, 51, 421, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 55, 422, 0),
woosh.Token(woosh.NAME, 'total_sent', 422, 8, 422, 18),
woosh.Token(woosh.OP, '=', 422, 19, 422, 20),
woosh.Token(woosh.NUMBER, '0', 422, 21, 422, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 22, 423, 0),
woosh.Token(woosh.COMMENT, '# localize variable access to minimize overhead', 423, 8, 423, 55),
woosh.Token(woosh.NAME, 'file_read', 424, 8, 424, 17),
woosh.Token(woosh.OP, '=', 424, 18, 424, 19),
woosh.Token(woosh.NAME, 'file', 424, 20, 424, 24),
woosh.Token(woosh.OP, '.', 424, 24, 424, 25),
woosh.Token(woosh.NAME, 'read', 424, 25, 424, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 29, 425, 0),
woosh.Token(woosh.NAME, 'sock_send', 425, 8, 425, 17),
woosh.Token(woosh.OP, '=', 425, 18, 425, 19),
woosh.Token(woosh.NAME, 'self', 425, 20, 425, 24),
woosh.Token(woosh.OP, '.', 425, 24, 425, 25),
woosh.Token(woosh.NAME, 'send', 425, 25, 425, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 425, 29, 426, 0),
woosh.Token(woosh.NAME, 'try', 426, 8, 426, 11),
woosh.Token(woosh.OP, ':', 426, 11, 426, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 12, 427, 0),
woosh.Token(woosh.INDENT, '            ', 427, 0, 427, 12),
woosh.Token(woosh.NAME, 'while', 427, 12, 427, 17),
woosh.Token(woosh.NAME, 'True', 427, 18, 427, 22),
woosh.Token(woosh.OP, ':', 427, 22, 427, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 427, 23, 428, 0),
woosh.Token(woosh.INDENT, '                ', 428, 0, 428, 16),
woosh.Token(woosh.NAME, 'if', 428, 16, 428, 18),
woosh.Token(woosh.NAME, 'count', 428, 19, 428, 24),
woosh.Token(woosh.OP, ':', 428, 24, 428, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 428, 25, 429, 0),
woosh.Token(woosh.INDENT, '                    ', 429, 0, 429, 20),
woosh.Token(woosh.NAME, 'blocksize', 429, 20, 429, 29),
woosh.Token(woosh.OP, '=', 429, 30, 429, 31),
woosh.Token(woosh.NAME, 'min', 429, 32, 429, 35),
woosh.Token(woosh.OP, '(', 429, 35, 429, 36),
woosh.Token(woosh.NAME, 'count', 429, 36, 429, 41),
woosh.Token(woosh.OP, '-', 429, 42, 429, 43),
woosh.Token(woosh.NAME, 'total_sent', 429, 44, 429, 54),
woosh.Token(woosh.OP, ',', 429, 54, 429, 55),
woosh.Token(woosh.NAME, 'blocksize', 429, 56, 429, 65),
woosh.Token(woosh.OP, ')', 429, 65, 429, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 66, 430, 0),
woosh.Token(woosh.NAME, 'if', 430, 20, 430, 22),
woosh.Token(woosh.NAME, 'blocksize', 430, 23, 430, 32),
woosh.Token(woosh.OP, '<=', 430, 33, 430, 35),
woosh.Token(woosh.NUMBER, '0', 430, 36, 430, 37),
woosh.Token(woosh.OP, ':', 430, 37, 430, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 430, 38, 431, 0),
woosh.Token(woosh.INDENT, '                        ', 431, 0, 431, 24),
woosh.Token(woosh.NAME, 'break', 431, 24, 431, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 431, 29, 432, 0),
woosh.Token(woosh.DEDENT, '                ', 432, 0, 432, 16),
woosh.Token(woosh.DEDENT, '', 432, 16, 432, 16),
woosh.Token(woosh.NAME, 'data', 432, 16, 432, 20),
woosh.Token(woosh.OP, '=', 432, 21, 432, 22),
woosh.Token(woosh.NAME, 'memoryview', 432, 23, 432, 33),
woosh.Token(woosh.OP, '(', 432, 33, 432, 34),
woosh.Token(woosh.NAME, 'file_read', 432, 34, 432, 43),
woosh.Token(woosh.OP, '(', 432, 43, 432, 44),
woosh.Token(woosh.NAME, 'blocksize', 432, 44, 432, 53),
woosh.Token(woosh.OP, ')', 432, 53, 432, 54),
woosh.Token(woosh.OP, ')', 432, 54, 432, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 432, 55, 433, 0),
woosh.Token(woosh.NAME, 'if', 433, 16, 433, 18),
woosh.Token(woosh.NAME, 'not', 433, 19, 433, 22),
woosh.Token(woosh.NAME, 'data', 433, 23, 433, 27),
woosh.Token(woosh.OP, ':', 433, 27, 433, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 28, 434, 0),
woosh.Token(woosh.INDENT, '                    ', 434, 0, 434, 20),
woosh.Token(woosh.NAME, 'break', 434, 20, 434, 25),
woosh.Token(woosh.COMMENT, '# EOF', 434, 27, 434, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 434, 32, 435, 0),
woosh.Token(woosh.DEDENT, '                ', 435, 0, 435, 16),
woosh.Token(woosh.NAME, 'while', 435, 16, 435, 21),
woosh.Token(woosh.NAME, 'True', 435, 22, 435, 26),
woosh.Token(woosh.OP, ':', 435, 26, 435, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 435, 27, 436, 0),
woosh.Token(woosh.INDENT, '                    ', 436, 0, 436, 20),
woosh.Token(woosh.NAME, 'try', 436, 20, 436, 23),
woosh.Token(woosh.OP, ':', 436, 23, 436, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 24, 437, 0),
woosh.Token(woosh.INDENT, '                        ', 437, 0, 437, 24),
woosh.Token(woosh.NAME, 'sent', 437, 24, 437, 28),
woosh.Token(woosh.OP, '=', 437, 29, 437, 30),
woosh.Token(woosh.NAME, 'sock_send', 437, 31, 437, 40),
woosh.Token(woosh.OP, '(', 437, 40, 437, 41),
woosh.Token(woosh.NAME, 'data', 437, 41, 437, 45),
woosh.Token(woosh.OP, ')', 437, 45, 437, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 437, 46, 438, 0),
woosh.Token(woosh.DEDENT, '                    ', 438, 0, 438, 20),
woosh.Token(woosh.NAME, 'except', 438, 20, 438, 26),
woosh.Token(woosh.NAME, 'BlockingIOError', 438, 27, 438, 42),
woosh.Token(woosh.OP, ':', 438, 42, 438, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 438, 43, 439, 0),
woosh.Token(woosh.INDENT, '                        ', 439, 0, 439, 24),
woosh.Token(woosh.NAME, 'continue', 439, 24, 439, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 439, 32, 440, 0),
woosh.Token(woosh.DEDENT, '                    ', 440, 0, 440, 20),
woosh.Token(woosh.NAME, 'else', 440, 20, 440, 24),
woosh.Token(woosh.OP, ':', 440, 24, 440, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 440, 25, 441, 0),
woosh.Token(woosh.INDENT, '                        ', 441, 0, 441, 24),
woosh.Token(woosh.NAME, 'total_sent', 441, 24, 441, 34),
woosh.Token(woosh.OP, '+=', 441, 35, 441, 37),
woosh.Token(woosh.NAME, 'sent', 441, 38, 441, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 441, 42, 442, 0),
woosh.Token(woosh.NAME, 'if', 442, 24, 442, 26),
woosh.Token(woosh.NAME, 'sent', 442, 27, 442, 31),
woosh.Token(woosh.OP, '<', 442, 32, 442, 33),
woosh.Token(woosh.NAME, 'len', 442, 34, 442, 37),
woosh.Token(woosh.OP, '(', 442, 37, 442, 38),
woosh.Token(woosh.NAME, 'data', 442, 38, 442, 42),
woosh.Token(woosh.OP, ')', 442, 42, 442, 43),
woosh.Token(woosh.OP, ':', 442, 43, 442, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 442, 44, 443, 0),
woosh.Token(woosh.INDENT, '                            ', 443, 0, 443, 28),
woosh.Token(woosh.NAME, 'data', 443, 28, 443, 32),
woosh.Token(woosh.OP, '=', 443, 33, 443, 34),
woosh.Token(woosh.NAME, 'data', 443, 35, 443, 39),
woosh.Token(woosh.OP, '[', 443, 39, 443, 40),
woosh.Token(woosh.NAME, 'sent', 443, 40, 443, 44),
woosh.Token(woosh.OP, ':', 443, 44, 443, 45),
woosh.Token(woosh.OP, ']', 443, 45, 443, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 443, 46, 444, 0),
woosh.Token(woosh.DEDENT, '                        ', 444, 0, 444, 24),
woosh.Token(woosh.NAME, 'else', 444, 24, 444, 28),
woosh.Token(woosh.OP, ':', 444, 28, 444, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 444, 29, 445, 0),
woosh.Token(woosh.INDENT, '                            ', 445, 0, 445, 28),
woosh.Token(woosh.NAME, 'break', 445, 28, 445, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 445, 33, 446, 0),
woosh.Token(woosh.DEDENT, '            ', 446, 0, 446, 12),
woosh.Token(woosh.DEDENT, '', 446, 12, 446, 12),
woosh.Token(woosh.DEDENT, '', 446, 12, 446, 12),
woosh.Token(woosh.DEDENT, '', 446, 12, 446, 12),
woosh.Token(woosh.NAME, 'return', 446, 12, 446, 18),
woosh.Token(woosh.NAME, 'total_sent', 446, 19, 446, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 446, 29, 447, 0),
woosh.Token(woosh.DEDENT, '        ', 447, 0, 447, 8),
woosh.Token(woosh.NAME, 'finally', 447, 8, 447, 15),
woosh.Token(woosh.OP, ':', 447, 15, 447, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 447, 16, 448, 0),
woosh.Token(woosh.INDENT, '            ', 448, 0, 448, 12),
woosh.Token(woosh.NAME, 'if', 448, 12, 448, 14),
woosh.Token(woosh.NAME, 'total_sent', 448, 15, 448, 25),
woosh.Token(woosh.OP, '>', 448, 26, 448, 27),
woosh.Token(woosh.NUMBER, '0', 448, 28, 448, 29),
woosh.Token(woosh.NAME, 'and', 448, 30, 448, 33),
woosh.Token(woosh.NAME, 'hasattr', 448, 34, 448, 41),
woosh.Token(woosh.OP, '(', 448, 41, 448, 42),
woosh.Token(woosh.NAME, 'file', 448, 42, 448, 46),
woosh.Token(woosh.OP, ',', 448, 46, 448, 47),
woosh.Token(woosh.STRING, "'seek'", 448, 48, 448, 54),
woosh.Token(woosh.OP, ')', 448, 54, 448, 55),
woosh.Token(woosh.OP, ':', 448, 55, 448, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 448, 56, 449, 0),
woosh.Token(woosh.INDENT, '                ', 449, 0, 449, 16),
woosh.Token(woosh.NAME, 'file', 449, 16, 449, 20),
woosh.Token(woosh.OP, '.', 449, 20, 449, 21),
woosh.Token(woosh.NAME, 'seek', 449, 21, 449, 25),
woosh.Token(woosh.OP, '(', 449, 25, 449, 26),
woosh.Token(woosh.NAME, 'offset', 449, 26, 449, 32),
woosh.Token(woosh.OP, '+', 449, 33, 449, 34),
woosh.Token(woosh.NAME, 'total_sent', 449, 35, 449, 45),
woosh.Token(woosh.OP, ')', 449, 45, 449, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 449, 46, 450, 0),
woosh.Token(woosh.DEDENT, '    ', 451, 0, 451, 4),
woosh.Token(woosh.DEDENT, '', 451, 4, 451, 4),
woosh.Token(woosh.DEDENT, '', 451, 4, 451, 4),
woosh.Token(woosh.NAME, 'def', 451, 4, 451, 7),
woosh.Token(woosh.NAME, '_check_sendfile_params', 451, 8, 451, 30),
woosh.Token(woosh.OP, '(', 451, 30, 451, 31),
woosh.Token(woosh.NAME, 'self', 451, 31, 451, 35),
woosh.Token(woosh.OP, ',', 451, 35, 451, 36),
woosh.Token(woosh.NAME, 'file', 451, 37, 451, 41),
woosh.Token(woosh.OP, ',', 451, 41, 451, 42),
woosh.Token(woosh.NAME, 'offset', 451, 43, 451, 49),
woosh.Token(woosh.OP, ',', 451, 49, 451, 50),
woosh.Token(woosh.NAME, 'count', 451, 51, 451, 56),
woosh.Token(woosh.OP, ')', 451, 56, 451, 57),
woosh.Token(woosh.OP, ':', 451, 57, 451, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 451, 58, 452, 0),
woosh.Token(woosh.INDENT, '        ', 452, 0, 452, 8),
woosh.Token(woosh.NAME, 'if', 452, 8, 452, 10),
woosh.Token(woosh.STRING, "'b'", 452, 11, 452, 14),
woosh.Token(woosh.NAME, 'not', 452, 15, 452, 18),
woosh.Token(woosh.NAME, 'in', 452, 19, 452, 21),
woosh.Token(woosh.NAME, 'getattr', 452, 22, 452, 29),
woosh.Token(woosh.OP, '(', 452, 29, 452, 30),
woosh.Token(woosh.NAME, 'file', 452, 30, 452, 34),
woosh.Token(woosh.OP, ',', 452, 34, 452, 35),
woosh.Token(woosh.STRING, "'mode'", 452, 36, 452, 42),
woosh.Token(woosh.OP, ',', 452, 42, 452, 43),
woosh.Token(woosh.STRING, "'b'", 452, 44, 452, 47),
woosh.Token(woosh.OP, ')', 452, 47, 452, 48),
woosh.Token(woosh.OP, ':', 452, 48, 452, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 452, 49, 453, 0),
woosh.Token(woosh.INDENT, '            ', 453, 0, 453, 12),
woosh.Token(woosh.NAME, 'raise', 453, 12, 453, 17),
woosh.Token(woosh.NAME, 'ValueError', 453, 18, 453, 28),
woosh.Token(woosh.OP, '(', 453, 28, 453, 29),
woosh.Token(woosh.STRING, '"file should be opened in binary mode"', 453, 29, 453, 67),
woosh.Token(woosh.OP, ')', 453, 67, 453, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 453, 68, 454, 0),
woosh.Token(woosh.DEDENT, '        ', 454, 0, 454, 8),
woosh.Token(woosh.NAME, 'if', 454, 8, 454, 10),
woosh.Token(woosh.NAME, 'not', 454, 11, 454, 14),
woosh.Token(woosh.NAME, 'self', 454, 15, 454, 19),
woosh.Token(woosh.OP, '.', 454, 19, 454, 20),
woosh.Token(woosh.NAME, 'type', 454, 20, 454, 24),
woosh.Token(woosh.OP, '&', 454, 25, 454, 26),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 454, 27, 454, 38),
woosh.Token(woosh.OP, ':', 454, 38, 454, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 39, 455, 0),
woosh.Token(woosh.INDENT, '            ', 455, 0, 455, 12),
woosh.Token(woosh.NAME, 'raise', 455, 12, 455, 17),
woosh.Token(woosh.NAME, 'ValueError', 455, 18, 455, 28),
woosh.Token(woosh.OP, '(', 455, 28, 455, 29),
woosh.Token(woosh.STRING, '"only SOCK_STREAM type sockets are supported"', 455, 29, 455, 74),
woosh.Token(woosh.OP, ')', 455, 74, 455, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 455, 75, 456, 0),
woosh.Token(woosh.DEDENT, '        ', 456, 0, 456, 8),
woosh.Token(woosh.NAME, 'if', 456, 8, 456, 10),
woosh.Token(woosh.NAME, 'count', 456, 11, 456, 16),
woosh.Token(woosh.NAME, 'is', 456, 17, 456, 19),
woosh.Token(woosh.NAME, 'not', 456, 20, 456, 23),
woosh.Token(woosh.NAME, 'None', 456, 24, 456, 28),
woosh.Token(woosh.OP, ':', 456, 28, 456, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 456, 29, 457, 0),
woosh.Token(woosh.INDENT, '            ', 457, 0, 457, 12),
woosh.Token(woosh.NAME, 'if', 457, 12, 457, 14),
woosh.Token(woosh.NAME, 'not', 457, 15, 457, 18),
woosh.Token(woosh.NAME, 'isinstance', 457, 19, 457, 29),
woosh.Token(woosh.OP, '(', 457, 29, 457, 30),
woosh.Token(woosh.NAME, 'count', 457, 30, 457, 35),
woosh.Token(woosh.OP, ',', 457, 35, 457, 36),
woosh.Token(woosh.NAME, 'int', 457, 37, 457, 40),
woosh.Token(woosh.OP, ')', 457, 40, 457, 41),
woosh.Token(woosh.OP, ':', 457, 41, 457, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 457, 42, 458, 0),
woosh.Token(woosh.INDENT, '                ', 458, 0, 458, 16),
woosh.Token(woosh.NAME, 'raise', 458, 16, 458, 21),
woosh.Token(woosh.NAME, 'TypeError', 458, 22, 458, 31),
woosh.Token(woosh.OP, '(', 458, 31, 458, 32),
woosh.Token(woosh.STRING, '"count must be a positive integer (got {!r})"', 459, 20, 459, 65),
woosh.Token(woosh.OP, '.', 459, 65, 459, 66),
woosh.Token(woosh.NAME, 'format', 459, 66, 459, 72),
woosh.Token(woosh.OP, '(', 459, 72, 459, 73),
woosh.Token(woosh.NAME, 'count', 459, 73, 459, 78),
woosh.Token(woosh.OP, ')', 459, 78, 459, 79),
woosh.Token(woosh.OP, ')', 459, 79, 459, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 459, 80, 460, 0),
woosh.Token(woosh.DEDENT, '            ', 460, 0, 460, 12),
woosh.Token(woosh.NAME, 'if', 460, 12, 460, 14),
woosh.Token(woosh.NAME, 'count', 460, 15, 460, 20),
woosh.Token(woosh.OP, '<=', 460, 21, 460, 23),
woosh.Token(woosh.NUMBER, '0', 460, 24, 460, 25),
woosh.Token(woosh.OP, ':', 460, 25, 460, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 460, 26, 461, 0),
woosh.Token(woosh.INDENT, '                ', 461, 0, 461, 16),
woosh.Token(woosh.NAME, 'raise', 461, 16, 461, 21),
woosh.Token(woosh.NAME, 'ValueError', 461, 22, 461, 32),
woosh.Token(woosh.OP, '(', 461, 32, 461, 33),
woosh.Token(woosh.STRING, '"count must be a positive integer (got {!r})"', 462, 20, 462, 65),
woosh.Token(woosh.OP, '.', 462, 65, 462, 66),
woosh.Token(woosh.NAME, 'format', 462, 66, 462, 72),
woosh.Token(woosh.OP, '(', 462, 72, 462, 73),
woosh.Token(woosh.NAME, 'count', 462, 73, 462, 78),
woosh.Token(woosh.OP, ')', 462, 78, 462, 79),
woosh.Token(woosh.OP, ')', 462, 79, 462, 80),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 80, 463, 0),
woosh.Token(woosh.DEDENT, '    ', 464, 0, 464, 4),
woosh.Token(woosh.DEDENT, '', 464, 4, 464, 4),
woosh.Token(woosh.DEDENT, '', 464, 4, 464, 4),
woosh.Token(woosh.NAME, 'def', 464, 4, 464, 7),
woosh.Token(woosh.NAME, 'sendfile', 464, 8, 464, 16),
woosh.Token(woosh.OP, '(', 464, 16, 464, 17),
woosh.Token(woosh.NAME, 'self', 464, 17, 464, 21),
woosh.Token(woosh.OP, ',', 464, 21, 464, 22),
woosh.Token(woosh.NAME, 'file', 464, 23, 464, 27),
woosh.Token(woosh.OP, ',', 464, 27, 464, 28),
woosh.Token(woosh.NAME, 'offset', 464, 29, 464, 35),
woosh.Token(woosh.OP, '=', 464, 35, 464, 36),
woosh.Token(woosh.NUMBER, '0', 464, 36, 464, 37),
woosh.Token(woosh.OP, ',', 464, 37, 464, 38),
woosh.Token(woosh.NAME, 'count', 464, 39, 464, 44),
woosh.Token(woosh.OP, '=', 464, 44, 464, 45),
woosh.Token(woosh.NAME, 'None', 464, 45, 464, 49),
woosh.Token(woosh.OP, ')', 464, 49, 464, 50),
woosh.Token(woosh.OP, ':', 464, 50, 464, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 51, 465, 0),
woosh.Token(woosh.INDENT, '        ', 465, 0, 465, 8),
woosh.Token(woosh.STRING, '"""sendfile(file[, offset[, count]]) -> sent\r\n\r\n        Send a file until EOF is reached by using high-performance\r\n        os.sendfile() and return the total number of bytes which\r\n        were sent.\r\n        *file* must be a regular file object opened in binary mode.\r\n        If os.sendfile() is not available (e.g. Windows) or file is\r\n        not a regular file socket.send() will be used instead.\r\n        *offset* tells from where to start reading the file.\r\n        If specified, *count* is the total number of bytes to transmit\r\n        as opposed to sending the file until EOF is reached.\r\n        File position is updated on return or also in case of error in\r\n        which case file.tell() can be used to figure out the number of\r\n        bytes which were sent.\r\n        The socket must be of SOCK_STREAM type.\r\n        Non-blocking sockets are not supported.\r\n        """', 465, 8, 481, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 481, 11, 482, 0),
woosh.Token(woosh.NAME, 'try', 482, 8, 482, 11),
woosh.Token(woosh.OP, ':', 482, 11, 482, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 12, 483, 0),
woosh.Token(woosh.INDENT, '            ', 483, 0, 483, 12),
woosh.Token(woosh.NAME, 'return', 483, 12, 483, 18),
woosh.Token(woosh.NAME, 'self', 483, 19, 483, 23),
woosh.Token(woosh.OP, '.', 483, 23, 483, 24),
woosh.Token(woosh.NAME, '_sendfile_use_sendfile', 483, 24, 483, 46),
woosh.Token(woosh.OP, '(', 483, 46, 483, 47),
woosh.Token(woosh.NAME, 'file', 483, 47, 483, 51),
woosh.Token(woosh.OP, ',', 483, 51, 483, 52),
woosh.Token(woosh.NAME, 'offset', 483, 53, 483, 59),
woosh.Token(woosh.OP, ',', 483, 59, 483, 60),
woosh.Token(woosh.NAME, 'count', 483, 61, 483, 66),
woosh.Token(woosh.OP, ')', 483, 66, 483, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 67, 484, 0),
woosh.Token(woosh.DEDENT, '        ', 484, 0, 484, 8),
woosh.Token(woosh.NAME, 'except', 484, 8, 484, 14),
woosh.Token(woosh.NAME, '_GiveupOnSendfile', 484, 15, 484, 32),
woosh.Token(woosh.OP, ':', 484, 32, 484, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 33, 485, 0),
woosh.Token(woosh.INDENT, '            ', 485, 0, 485, 12),
woosh.Token(woosh.NAME, 'return', 485, 12, 485, 18),
woosh.Token(woosh.NAME, 'self', 485, 19, 485, 23),
woosh.Token(woosh.OP, '.', 485, 23, 485, 24),
woosh.Token(woosh.NAME, '_sendfile_use_send', 485, 24, 485, 42),
woosh.Token(woosh.OP, '(', 485, 42, 485, 43),
woosh.Token(woosh.NAME, 'file', 485, 43, 485, 47),
woosh.Token(woosh.OP, ',', 485, 47, 485, 48),
woosh.Token(woosh.NAME, 'offset', 485, 49, 485, 55),
woosh.Token(woosh.OP, ',', 485, 55, 485, 56),
woosh.Token(woosh.NAME, 'count', 485, 57, 485, 62),
woosh.Token(woosh.OP, ')', 485, 62, 485, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 63, 486, 0),
woosh.Token(woosh.DEDENT, '    ', 487, 0, 487, 4),
woosh.Token(woosh.DEDENT, '', 487, 4, 487, 4),
woosh.Token(woosh.NAME, 'def', 487, 4, 487, 7),
woosh.Token(woosh.NAME, '_decref_socketios', 487, 8, 487, 25),
woosh.Token(woosh.OP, '(', 487, 25, 487, 26),
woosh.Token(woosh.NAME, 'self', 487, 26, 487, 30),
woosh.Token(woosh.OP, ')', 487, 30, 487, 31),
woosh.Token(woosh.OP, ':', 487, 31, 487, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 32, 488, 0),
woosh.Token(woosh.INDENT, '        ', 488, 0, 488, 8),
woosh.Token(woosh.NAME, 'if', 488, 8, 488, 10),
woosh.Token(woosh.NAME, 'self', 488, 11, 488, 15),
woosh.Token(woosh.OP, '.', 488, 15, 488, 16),
woosh.Token(woosh.NAME, '_io_refs', 488, 16, 488, 24),
woosh.Token(woosh.OP, '>', 488, 25, 488, 26),
woosh.Token(woosh.NUMBER, '0', 488, 27, 488, 28),
woosh.Token(woosh.OP, ':', 488, 28, 488, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 488, 29, 489, 0),
woosh.Token(woosh.INDENT, '            ', 489, 0, 489, 12),
woosh.Token(woosh.NAME, 'self', 489, 12, 489, 16),
woosh.Token(woosh.OP, '.', 489, 16, 489, 17),
woosh.Token(woosh.NAME, '_io_refs', 489, 17, 489, 25),
woosh.Token(woosh.OP, '-=', 489, 26, 489, 28),
woosh.Token(woosh.NUMBER, '1', 489, 29, 489, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 30, 490, 0),
woosh.Token(woosh.DEDENT, '        ', 490, 0, 490, 8),
woosh.Token(woosh.NAME, 'if', 490, 8, 490, 10),
woosh.Token(woosh.NAME, 'self', 490, 11, 490, 15),
woosh.Token(woosh.OP, '.', 490, 15, 490, 16),
woosh.Token(woosh.NAME, '_closed', 490, 16, 490, 23),
woosh.Token(woosh.OP, ':', 490, 23, 490, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 24, 491, 0),
woosh.Token(woosh.INDENT, '            ', 491, 0, 491, 12),
woosh.Token(woosh.NAME, 'self', 491, 12, 491, 16),
woosh.Token(woosh.OP, '.', 491, 16, 491, 17),
woosh.Token(woosh.NAME, 'close', 491, 17, 491, 22),
woosh.Token(woosh.OP, '(', 491, 22, 491, 23),
woosh.Token(woosh.OP, ')', 491, 23, 491, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 24, 492, 0),
woosh.Token(woosh.DEDENT, '    ', 493, 0, 493, 4),
woosh.Token(woosh.DEDENT, '', 493, 4, 493, 4),
woosh.Token(woosh.NAME, 'def', 493, 4, 493, 7),
woosh.Token(woosh.NAME, '_real_close', 493, 8, 493, 19),
woosh.Token(woosh.OP, '(', 493, 19, 493, 20),
woosh.Token(woosh.NAME, 'self', 493, 20, 493, 24),
woosh.Token(woosh.OP, ',', 493, 24, 493, 25),
woosh.Token(woosh.NAME, '_ss', 493, 26, 493, 29),
woosh.Token(woosh.OP, '=', 493, 29, 493, 30),
woosh.Token(woosh.NAME, '_socket', 493, 30, 493, 37),
woosh.Token(woosh.OP, '.', 493, 37, 493, 38),
woosh.Token(woosh.NAME, 'socket', 493, 38, 493, 44),
woosh.Token(woosh.OP, ')', 493, 44, 493, 45),
woosh.Token(woosh.OP, ':', 493, 45, 493, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 493, 46, 494, 0),
woosh.Token(woosh.COMMENT, '# This function should not reference any globals. See issue #808164.', 494, 8, 494, 76),
woosh.Token(woosh.INDENT, '        ', 495, 0, 495, 8),
woosh.Token(woosh.NAME, '_ss', 495, 8, 495, 11),
woosh.Token(woosh.OP, '.', 495, 11, 495, 12),
woosh.Token(woosh.NAME, 'close', 495, 12, 495, 17),
woosh.Token(woosh.OP, '(', 495, 17, 495, 18),
woosh.Token(woosh.NAME, 'self', 495, 18, 495, 22),
woosh.Token(woosh.OP, ')', 495, 22, 495, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 495, 23, 496, 0),
woosh.Token(woosh.DEDENT, '    ', 497, 0, 497, 4),
woosh.Token(woosh.NAME, 'def', 497, 4, 497, 7),
woosh.Token(woosh.NAME, 'close', 497, 8, 497, 13),
woosh.Token(woosh.OP, '(', 497, 13, 497, 14),
woosh.Token(woosh.NAME, 'self', 497, 14, 497, 18),
woosh.Token(woosh.OP, ')', 497, 18, 497, 19),
woosh.Token(woosh.OP, ':', 497, 19, 497, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 20, 498, 0),
woosh.Token(woosh.COMMENT, '# This function should not reference any globals. See issue #808164.', 498, 8, 498, 76),
woosh.Token(woosh.INDENT, '        ', 499, 0, 499, 8),
woosh.Token(woosh.NAME, 'self', 499, 8, 499, 12),
woosh.Token(woosh.OP, '.', 499, 12, 499, 13),
woosh.Token(woosh.NAME, '_closed', 499, 13, 499, 20),
woosh.Token(woosh.OP, '=', 499, 21, 499, 22),
woosh.Token(woosh.NAME, 'True', 499, 23, 499, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 27, 500, 0),
woosh.Token(woosh.NAME, 'if', 500, 8, 500, 10),
woosh.Token(woosh.NAME, 'self', 500, 11, 500, 15),
woosh.Token(woosh.OP, '.', 500, 15, 500, 16),
woosh.Token(woosh.NAME, '_io_refs', 500, 16, 500, 24),
woosh.Token(woosh.OP, '<=', 500, 25, 500, 27),
woosh.Token(woosh.NUMBER, '0', 500, 28, 500, 29),
woosh.Token(woosh.OP, ':', 500, 29, 500, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 30, 501, 0),
woosh.Token(woosh.INDENT, '            ', 501, 0, 501, 12),
woosh.Token(woosh.NAME, 'self', 501, 12, 501, 16),
woosh.Token(woosh.OP, '.', 501, 16, 501, 17),
woosh.Token(woosh.NAME, '_real_close', 501, 17, 501, 28),
woosh.Token(woosh.OP, '(', 501, 28, 501, 29),
woosh.Token(woosh.OP, ')', 501, 29, 501, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 30, 502, 0),
woosh.Token(woosh.DEDENT, '    ', 503, 0, 503, 4),
woosh.Token(woosh.DEDENT, '', 503, 4, 503, 4),
woosh.Token(woosh.NAME, 'def', 503, 4, 503, 7),
woosh.Token(woosh.NAME, 'detach', 503, 8, 503, 14),
woosh.Token(woosh.OP, '(', 503, 14, 503, 15),
woosh.Token(woosh.NAME, 'self', 503, 15, 503, 19),
woosh.Token(woosh.OP, ')', 503, 19, 503, 20),
woosh.Token(woosh.OP, ':', 503, 20, 503, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 503, 21, 504, 0),
woosh.Token(woosh.INDENT, '        ', 504, 0, 504, 8),
woosh.Token(woosh.STRING, '"""detach() -> file descriptor\r\n\r\n        Close the socket object without closing the underlying file descriptor.\r\n        The object cannot be used after this call, but the file descriptor\r\n        can be reused for other purposes.  The file descriptor is returned.\r\n        """', 504, 8, 509, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 509, 11, 510, 0),
woosh.Token(woosh.NAME, 'self', 510, 8, 510, 12),
woosh.Token(woosh.OP, '.', 510, 12, 510, 13),
woosh.Token(woosh.NAME, '_closed', 510, 13, 510, 20),
woosh.Token(woosh.OP, '=', 510, 21, 510, 22),
woosh.Token(woosh.NAME, 'True', 510, 23, 510, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 510, 27, 511, 0),
woosh.Token(woosh.NAME, 'return', 511, 8, 511, 14),
woosh.Token(woosh.NAME, 'super', 511, 15, 511, 20),
woosh.Token(woosh.OP, '(', 511, 20, 511, 21),
woosh.Token(woosh.OP, ')', 511, 21, 511, 22),
woosh.Token(woosh.OP, '.', 511, 22, 511, 23),
woosh.Token(woosh.NAME, 'detach', 511, 23, 511, 29),
woosh.Token(woosh.OP, '(', 511, 29, 511, 30),
woosh.Token(woosh.OP, ')', 511, 30, 511, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 511, 31, 512, 0),
woosh.Token(woosh.DEDENT, '    ', 513, 0, 513, 4),
woosh.Token(woosh.OP, '@', 513, 4, 513, 5),
woosh.Token(woosh.NAME, 'property', 513, 5, 513, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 513, 13, 514, 0),
woosh.Token(woosh.NAME, 'def', 514, 4, 514, 7),
woosh.Token(woosh.NAME, 'family', 514, 8, 514, 14),
woosh.Token(woosh.OP, '(', 514, 14, 514, 15),
woosh.Token(woosh.NAME, 'self', 514, 15, 514, 19),
woosh.Token(woosh.OP, ')', 514, 19, 514, 20),
woosh.Token(woosh.OP, ':', 514, 20, 514, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 21, 515, 0),
woosh.Token(woosh.INDENT, '        ', 515, 0, 515, 8),
woosh.Token(woosh.STRING, '"""Read-only access to the address family for this socket.\r\n        """', 515, 8, 516, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 516, 11, 517, 0),
woosh.Token(woosh.NAME, 'return', 517, 8, 517, 14),
woosh.Token(woosh.NAME, '_intenum_converter', 517, 15, 517, 33),
woosh.Token(woosh.OP, '(', 517, 33, 517, 34),
woosh.Token(woosh.NAME, 'super', 517, 34, 517, 39),
woosh.Token(woosh.OP, '(', 517, 39, 517, 40),
woosh.Token(woosh.OP, ')', 517, 40, 517, 41),
woosh.Token(woosh.OP, '.', 517, 41, 517, 42),
woosh.Token(woosh.NAME, 'family', 517, 42, 517, 48),
woosh.Token(woosh.OP, ',', 517, 48, 517, 49),
woosh.Token(woosh.NAME, 'AddressFamily', 517, 50, 517, 63),
woosh.Token(woosh.OP, ')', 517, 63, 517, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 517, 64, 518, 0),
woosh.Token(woosh.DEDENT, '    ', 519, 0, 519, 4),
woosh.Token(woosh.OP, '@', 519, 4, 519, 5),
woosh.Token(woosh.NAME, 'property', 519, 5, 519, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 13, 520, 0),
woosh.Token(woosh.NAME, 'def', 520, 4, 520, 7),
woosh.Token(woosh.NAME, 'type', 520, 8, 520, 12),
woosh.Token(woosh.OP, '(', 520, 12, 520, 13),
woosh.Token(woosh.NAME, 'self', 520, 13, 520, 17),
woosh.Token(woosh.OP, ')', 520, 17, 520, 18),
woosh.Token(woosh.OP, ':', 520, 18, 520, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 520, 19, 521, 0),
woosh.Token(woosh.INDENT, '        ', 521, 0, 521, 8),
woosh.Token(woosh.STRING, '"""Read-only access to the socket type.\r\n        """', 521, 8, 522, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 11, 523, 0),
woosh.Token(woosh.NAME, 'return', 523, 8, 523, 14),
woosh.Token(woosh.NAME, '_intenum_converter', 523, 15, 523, 33),
woosh.Token(woosh.OP, '(', 523, 33, 523, 34),
woosh.Token(woosh.NAME, 'super', 523, 34, 523, 39),
woosh.Token(woosh.OP, '(', 523, 39, 523, 40),
woosh.Token(woosh.OP, ')', 523, 40, 523, 41),
woosh.Token(woosh.OP, '.', 523, 41, 523, 42),
woosh.Token(woosh.NAME, 'type', 523, 42, 523, 46),
woosh.Token(woosh.OP, ',', 523, 46, 523, 47),
woosh.Token(woosh.NAME, 'SocketKind', 523, 48, 523, 58),
woosh.Token(woosh.OP, ')', 523, 58, 523, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 523, 59, 524, 0),
woosh.Token(woosh.DEDENT, '    ', 525, 0, 525, 4),
woosh.Token(woosh.NAME, 'if', 525, 4, 525, 6),
woosh.Token(woosh.NAME, 'os', 525, 7, 525, 9),
woosh.Token(woosh.OP, '.', 525, 9, 525, 10),
woosh.Token(woosh.NAME, 'name', 525, 10, 525, 14),
woosh.Token(woosh.OP, '==', 525, 15, 525, 17),
woosh.Token(woosh.STRING, "'nt'", 525, 18, 525, 22),
woosh.Token(woosh.OP, ':', 525, 22, 525, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 525, 23, 526, 0),
woosh.Token(woosh.INDENT, '        ', 526, 0, 526, 8),
woosh.Token(woosh.NAME, 'def', 526, 8, 526, 11),
woosh.Token(woosh.NAME, 'get_inheritable', 526, 12, 526, 27),
woosh.Token(woosh.OP, '(', 526, 27, 526, 28),
woosh.Token(woosh.NAME, 'self', 526, 28, 526, 32),
woosh.Token(woosh.OP, ')', 526, 32, 526, 33),
woosh.Token(woosh.OP, ':', 526, 33, 526, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 34, 527, 0),
woosh.Token(woosh.INDENT, '            ', 527, 0, 527, 12),
woosh.Token(woosh.NAME, 'return', 527, 12, 527, 18),
woosh.Token(woosh.NAME, 'os', 527, 19, 527, 21),
woosh.Token(woosh.OP, '.', 527, 21, 527, 22),
woosh.Token(woosh.NAME, 'get_handle_inheritable', 527, 22, 527, 44),
woosh.Token(woosh.OP, '(', 527, 44, 527, 45),
woosh.Token(woosh.NAME, 'self', 527, 45, 527, 49),
woosh.Token(woosh.OP, '.', 527, 49, 527, 50),
woosh.Token(woosh.NAME, 'fileno', 527, 50, 527, 56),
woosh.Token(woosh.OP, '(', 527, 56, 527, 57),
woosh.Token(woosh.OP, ')', 527, 57, 527, 58),
woosh.Token(woosh.OP, ')', 527, 58, 527, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 527, 59, 528, 0),
woosh.Token(woosh.DEDENT, '        ', 528, 0, 528, 8),
woosh.Token(woosh.NAME, 'def', 528, 8, 528, 11),
woosh.Token(woosh.NAME, 'set_inheritable', 528, 12, 528, 27),
woosh.Token(woosh.OP, '(', 528, 27, 528, 28),
woosh.Token(woosh.NAME, 'self', 528, 28, 528, 32),
woosh.Token(woosh.OP, ',', 528, 32, 528, 33),
woosh.Token(woosh.NAME, 'inheritable', 528, 34, 528, 45),
woosh.Token(woosh.OP, ')', 528, 45, 528, 46),
woosh.Token(woosh.OP, ':', 528, 46, 528, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 47, 529, 0),
woosh.Token(woosh.INDENT, '            ', 529, 0, 529, 12),
woosh.Token(woosh.NAME, 'os', 529, 12, 529, 14),
woosh.Token(woosh.OP, '.', 529, 14, 529, 15),
woosh.Token(woosh.NAME, 'set_handle_inheritable', 529, 15, 529, 37),
woosh.Token(woosh.OP, '(', 529, 37, 529, 38),
woosh.Token(woosh.NAME, 'self', 529, 38, 529, 42),
woosh.Token(woosh.OP, '.', 529, 42, 529, 43),
woosh.Token(woosh.NAME, 'fileno', 529, 43, 529, 49),
woosh.Token(woosh.OP, '(', 529, 49, 529, 50),
woosh.Token(woosh.OP, ')', 529, 50, 529, 51),
woosh.Token(woosh.OP, ',', 529, 51, 529, 52),
woosh.Token(woosh.NAME, 'inheritable', 529, 53, 529, 64),
woosh.Token(woosh.OP, ')', 529, 64, 529, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 65, 530, 0),
woosh.Token(woosh.DEDENT, '    ', 530, 0, 530, 4),
woosh.Token(woosh.DEDENT, '', 530, 4, 530, 4),
woosh.Token(woosh.NAME, 'else', 530, 4, 530, 8),
woosh.Token(woosh.OP, ':', 530, 8, 530, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 530, 9, 531, 0),
woosh.Token(woosh.INDENT, '        ', 531, 0, 531, 8),
woosh.Token(woosh.NAME, 'def', 531, 8, 531, 11),
woosh.Token(woosh.NAME, 'get_inheritable', 531, 12, 531, 27),
woosh.Token(woosh.OP, '(', 531, 27, 531, 28),
woosh.Token(woosh.NAME, 'self', 531, 28, 531, 32),
woosh.Token(woosh.OP, ')', 531, 32, 531, 33),
woosh.Token(woosh.OP, ':', 531, 33, 531, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 531, 34, 532, 0),
woosh.Token(woosh.INDENT, '            ', 532, 0, 532, 12),
woosh.Token(woosh.NAME, 'return', 532, 12, 532, 18),
woosh.Token(woosh.NAME, 'os', 532, 19, 532, 21),
woosh.Token(woosh.OP, '.', 532, 21, 532, 22),
woosh.Token(woosh.NAME, 'get_inheritable', 532, 22, 532, 37),
woosh.Token(woosh.OP, '(', 532, 37, 532, 38),
woosh.Token(woosh.NAME, 'self', 532, 38, 532, 42),
woosh.Token(woosh.OP, '.', 532, 42, 532, 43),
woosh.Token(woosh.NAME, 'fileno', 532, 43, 532, 49),
woosh.Token(woosh.OP, '(', 532, 49, 532, 50),
woosh.Token(woosh.OP, ')', 532, 50, 532, 51),
woosh.Token(woosh.OP, ')', 532, 51, 532, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 52, 533, 0),
woosh.Token(woosh.DEDENT, '        ', 533, 0, 533, 8),
woosh.Token(woosh.NAME, 'def', 533, 8, 533, 11),
woosh.Token(woosh.NAME, 'set_inheritable', 533, 12, 533, 27),
woosh.Token(woosh.OP, '(', 533, 27, 533, 28),
woosh.Token(woosh.NAME, 'self', 533, 28, 533, 32),
woosh.Token(woosh.OP, ',', 533, 32, 533, 33),
woosh.Token(woosh.NAME, 'inheritable', 533, 34, 533, 45),
woosh.Token(woosh.OP, ')', 533, 45, 533, 46),
woosh.Token(woosh.OP, ':', 533, 46, 533, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 533, 47, 534, 0),
woosh.Token(woosh.INDENT, '            ', 534, 0, 534, 12),
woosh.Token(woosh.NAME, 'os', 534, 12, 534, 14),
woosh.Token(woosh.OP, '.', 534, 14, 534, 15),
woosh.Token(woosh.NAME, 'set_inheritable', 534, 15, 534, 30),
woosh.Token(woosh.OP, '(', 534, 30, 534, 31),
woosh.Token(woosh.NAME, 'self', 534, 31, 534, 35),
woosh.Token(woosh.OP, '.', 534, 35, 534, 36),
woosh.Token(woosh.NAME, 'fileno', 534, 36, 534, 42),
woosh.Token(woosh.OP, '(', 534, 42, 534, 43),
woosh.Token(woosh.OP, ')', 534, 43, 534, 44),
woosh.Token(woosh.OP, ',', 534, 44, 534, 45),
woosh.Token(woosh.NAME, 'inheritable', 534, 46, 534, 57),
woosh.Token(woosh.OP, ')', 534, 57, 534, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 534, 58, 535, 0),
woosh.Token(woosh.DEDENT, '    ', 535, 0, 535, 4),
woosh.Token(woosh.DEDENT, '', 535, 4, 535, 4),
woosh.Token(woosh.NAME, 'get_inheritable', 535, 4, 535, 19),
woosh.Token(woosh.OP, '.', 535, 19, 535, 20),
woosh.Token(woosh.NAME, '__doc__', 535, 20, 535, 27),
woosh.Token(woosh.OP, '=', 535, 28, 535, 29),
woosh.Token(woosh.STRING, '"Get the inheritable flag of the socket"', 535, 30, 535, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 70, 536, 0),
woosh.Token(woosh.NAME, 'set_inheritable', 536, 4, 536, 19),
woosh.Token(woosh.OP, '.', 536, 19, 536, 20),
woosh.Token(woosh.NAME, '__doc__', 536, 20, 536, 27),
woosh.Token(woosh.OP, '=', 536, 28, 536, 29),
woosh.Token(woosh.STRING, '"Set the inheritable flag of the socket"', 536, 30, 536, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 70, 537, 0),
woosh.Token(woosh.DEDENT, '', 538, 0, 538, 0),
woosh.Token(woosh.NAME, 'def', 538, 0, 538, 3),
woosh.Token(woosh.NAME, 'fromfd', 538, 4, 538, 10),
woosh.Token(woosh.OP, '(', 538, 10, 538, 11),
woosh.Token(woosh.NAME, 'fd', 538, 11, 538, 13),
woosh.Token(woosh.OP, ',', 538, 13, 538, 14),
woosh.Token(woosh.NAME, 'family', 538, 15, 538, 21),
woosh.Token(woosh.OP, ',', 538, 21, 538, 22),
woosh.Token(woosh.NAME, 'type', 538, 23, 538, 27),
woosh.Token(woosh.OP, ',', 538, 27, 538, 28),
woosh.Token(woosh.NAME, 'proto', 538, 29, 538, 34),
woosh.Token(woosh.OP, '=', 538, 34, 538, 35),
woosh.Token(woosh.NUMBER, '0', 538, 35, 538, 36),
woosh.Token(woosh.OP, ')', 538, 36, 538, 37),
woosh.Token(woosh.OP, ':', 538, 37, 538, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 538, 38, 539, 0),
woosh.Token(woosh.INDENT, '    ', 539, 0, 539, 4),
woosh.Token(woosh.STRING, '""" fromfd(fd, family, type[, proto]) -> socket object\r\n\r\n    Create a socket object from a duplicate of the given file\r\n    descriptor.  The remaining arguments are the same as for socket().\r\n    """', 539, 4, 543, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 7, 544, 0),
woosh.Token(woosh.NAME, 'nfd', 544, 4, 544, 7),
woosh.Token(woosh.OP, '=', 544, 8, 544, 9),
woosh.Token(woosh.NAME, 'dup', 544, 10, 544, 13),
woosh.Token(woosh.OP, '(', 544, 13, 544, 14),
woosh.Token(woosh.NAME, 'fd', 544, 14, 544, 16),
woosh.Token(woosh.OP, ')', 544, 16, 544, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 17, 545, 0),
woosh.Token(woosh.NAME, 'return', 545, 4, 545, 10),
woosh.Token(woosh.NAME, 'socket', 545, 11, 545, 17),
woosh.Token(woosh.OP, '(', 545, 17, 545, 18),
woosh.Token(woosh.NAME, 'family', 545, 18, 545, 24),
woosh.Token(woosh.OP, ',', 545, 24, 545, 25),
woosh.Token(woosh.NAME, 'type', 545, 26, 545, 30),
woosh.Token(woosh.OP, ',', 545, 30, 545, 31),
woosh.Token(woosh.NAME, 'proto', 545, 32, 545, 37),
woosh.Token(woosh.OP, ',', 545, 37, 545, 38),
woosh.Token(woosh.NAME, 'nfd', 545, 39, 545, 42),
woosh.Token(woosh.OP, ')', 545, 42, 545, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 43, 546, 0),
woosh.Token(woosh.DEDENT, '', 547, 0, 547, 0),
woosh.Token(woosh.NAME, 'if', 547, 0, 547, 2),
woosh.Token(woosh.NAME, 'hasattr', 547, 3, 547, 10),
woosh.Token(woosh.OP, '(', 547, 10, 547, 11),
woosh.Token(woosh.NAME, '_socket', 547, 11, 547, 18),
woosh.Token(woosh.OP, '.', 547, 18, 547, 19),
woosh.Token(woosh.NAME, 'socket', 547, 19, 547, 25),
woosh.Token(woosh.OP, ',', 547, 25, 547, 26),
woosh.Token(woosh.STRING, '"sendmsg"', 547, 27, 547, 36),
woosh.Token(woosh.OP, ')', 547, 36, 547, 37),
woosh.Token(woosh.OP, ':', 547, 37, 547, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 38, 548, 0),
woosh.Token(woosh.INDENT, '    ', 548, 0, 548, 4),
woosh.Token(woosh.NAME, 'import', 548, 4, 548, 10),
woosh.Token(woosh.NAME, 'array', 548, 11, 548, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 16, 549, 0),
woosh.Token(woosh.NAME, 'def', 550, 4, 550, 7),
woosh.Token(woosh.NAME, 'send_fds', 550, 8, 550, 16),
woosh.Token(woosh.OP, '(', 550, 16, 550, 17),
woosh.Token(woosh.NAME, 'sock', 550, 17, 550, 21),
woosh.Token(woosh.OP, ',', 550, 21, 550, 22),
woosh.Token(woosh.NAME, 'buffers', 550, 23, 550, 30),
woosh.Token(woosh.OP, ',', 550, 30, 550, 31),
woosh.Token(woosh.NAME, 'fds', 550, 32, 550, 35),
woosh.Token(woosh.OP, ',', 550, 35, 550, 36),
woosh.Token(woosh.NAME, 'flags', 550, 37, 550, 42),
woosh.Token(woosh.OP, '=', 550, 42, 550, 43),
woosh.Token(woosh.NUMBER, '0', 550, 43, 550, 44),
woosh.Token(woosh.OP, ',', 550, 44, 550, 45),
woosh.Token(woosh.NAME, 'address', 550, 46, 550, 53),
woosh.Token(woosh.OP, '=', 550, 53, 550, 54),
woosh.Token(woosh.NAME, 'None', 550, 54, 550, 58),
woosh.Token(woosh.OP, ')', 550, 58, 550, 59),
woosh.Token(woosh.OP, ':', 550, 59, 550, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 550, 60, 551, 0),
woosh.Token(woosh.INDENT, '        ', 551, 0, 551, 8),
woosh.Token(woosh.STRING, '""" send_fds(sock, buffers, fds[, flags[, address]]) -> integer\r\n\r\n        Send the list of file descriptors fds over an AF_UNIX socket.\r\n        """', 551, 8, 554, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 11, 555, 0),
woosh.Token(woosh.NAME, 'return', 555, 8, 555, 14),
woosh.Token(woosh.NAME, 'sock', 555, 15, 555, 19),
woosh.Token(woosh.OP, '.', 555, 19, 555, 20),
woosh.Token(woosh.NAME, 'sendmsg', 555, 20, 555, 27),
woosh.Token(woosh.OP, '(', 555, 27, 555, 28),
woosh.Token(woosh.NAME, 'buffers', 555, 28, 555, 35),
woosh.Token(woosh.OP, ',', 555, 35, 555, 36),
woosh.Token(woosh.OP, '[', 555, 37, 555, 38),
woosh.Token(woosh.OP, '(', 555, 38, 555, 39),
woosh.Token(woosh.NAME, '_socket', 555, 39, 555, 46),
woosh.Token(woosh.OP, '.', 555, 46, 555, 47),
woosh.Token(woosh.NAME, 'SOL_SOCKET', 555, 47, 555, 57),
woosh.Token(woosh.OP, ',', 555, 57, 555, 58),
woosh.Token(woosh.NAME, '_socket', 556, 12, 556, 19),
woosh.Token(woosh.OP, '.', 556, 19, 556, 20),
woosh.Token(woosh.NAME, 'SCM_RIGHTS', 556, 20, 556, 30),
woosh.Token(woosh.OP, ',', 556, 30, 556, 31),
woosh.Token(woosh.NAME, 'array', 556, 32, 556, 37),
woosh.Token(woosh.OP, '.', 556, 37, 556, 38),
woosh.Token(woosh.NAME, 'array', 556, 38, 556, 43),
woosh.Token(woosh.OP, '(', 556, 43, 556, 44),
woosh.Token(woosh.STRING, '"i"', 556, 44, 556, 47),
woosh.Token(woosh.OP, ',', 556, 47, 556, 48),
woosh.Token(woosh.NAME, 'fds', 556, 49, 556, 52),
woosh.Token(woosh.OP, ')', 556, 52, 556, 53),
woosh.Token(woosh.OP, ')', 556, 53, 556, 54),
woosh.Token(woosh.OP, ']', 556, 54, 556, 55),
woosh.Token(woosh.OP, ')', 556, 55, 556, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 56, 557, 0),
woosh.Token(woosh.DEDENT, '    ', 557, 0, 557, 4),
woosh.Token(woosh.NAME, '__all__', 557, 4, 557, 11),
woosh.Token(woosh.OP, '.', 557, 11, 557, 12),
woosh.Token(woosh.NAME, 'append', 557, 12, 557, 18),
woosh.Token(woosh.OP, '(', 557, 18, 557, 19),
woosh.Token(woosh.STRING, '"send_fds"', 557, 19, 557, 29),
woosh.Token(woosh.OP, ')', 557, 29, 557, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 30, 558, 0),
woosh.Token(woosh.DEDENT, '', 559, 0, 559, 0),
woosh.Token(woosh.NAME, 'if', 559, 0, 559, 2),
woosh.Token(woosh.NAME, 'hasattr', 559, 3, 559, 10),
woosh.Token(woosh.OP, '(', 559, 10, 559, 11),
woosh.Token(woosh.NAME, '_socket', 559, 11, 559, 18),
woosh.Token(woosh.OP, '.', 559, 18, 559, 19),
woosh.Token(woosh.NAME, 'socket', 559, 19, 559, 25),
woosh.Token(woosh.OP, ',', 559, 25, 559, 26),
woosh.Token(woosh.STRING, '"recvmsg"', 559, 27, 559, 36),
woosh.Token(woosh.OP, ')', 559, 36, 559, 37),
woosh.Token(woosh.OP, ':', 559, 37, 559, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 559, 38, 560, 0),
woosh.Token(woosh.INDENT, '    ', 560, 0, 560, 4),
woosh.Token(woosh.NAME, 'import', 560, 4, 560, 10),
woosh.Token(woosh.NAME, 'array', 560, 11, 560, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 560, 16, 561, 0),
woosh.Token(woosh.NAME, 'def', 562, 4, 562, 7),
woosh.Token(woosh.NAME, 'recv_fds', 562, 8, 562, 16),
woosh.Token(woosh.OP, '(', 562, 16, 562, 17),
woosh.Token(woosh.NAME, 'sock', 562, 17, 562, 21),
woosh.Token(woosh.OP, ',', 562, 21, 562, 22),
woosh.Token(woosh.NAME, 'bufsize', 562, 23, 562, 30),
woosh.Token(woosh.OP, ',', 562, 30, 562, 31),
woosh.Token(woosh.NAME, 'maxfds', 562, 32, 562, 38),
woosh.Token(woosh.OP, ',', 562, 38, 562, 39),
woosh.Token(woosh.NAME, 'flags', 562, 40, 562, 45),
woosh.Token(woosh.OP, '=', 562, 45, 562, 46),
woosh.Token(woosh.NUMBER, '0', 562, 46, 562, 47),
woosh.Token(woosh.OP, ')', 562, 47, 562, 48),
woosh.Token(woosh.OP, ':', 562, 48, 562, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 562, 49, 563, 0),
woosh.Token(woosh.INDENT, '        ', 563, 0, 563, 8),
woosh.Token(woosh.STRING, '""" recv_fds(sock, bufsize, maxfds[, flags]) -> (data, list of file\r\n        descriptors, msg_flags, address)\r\n\r\n        Receive up to maxfds file descriptors returning the message\r\n        data and a list containing the descriptors.\r\n        """', 563, 8, 568, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 11, 569, 0),
woosh.Token(woosh.COMMENT, '# Array of ints', 569, 8, 569, 23),
woosh.Token(woosh.NAME, 'fds', 570, 8, 570, 11),
woosh.Token(woosh.OP, '=', 570, 12, 570, 13),
woosh.Token(woosh.NAME, 'array', 570, 14, 570, 19),
woosh.Token(woosh.OP, '.', 570, 19, 570, 20),
woosh.Token(woosh.NAME, 'array', 570, 20, 570, 25),
woosh.Token(woosh.OP, '(', 570, 25, 570, 26),
woosh.Token(woosh.STRING, '"i"', 570, 26, 570, 29),
woosh.Token(woosh.OP, ')', 570, 29, 570, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 570, 30, 571, 0),
woosh.Token(woosh.NAME, 'msg', 571, 8, 571, 11),
woosh.Token(woosh.OP, ',', 571, 11, 571, 12),
woosh.Token(woosh.NAME, 'ancdata', 571, 13, 571, 20),
woosh.Token(woosh.OP, ',', 571, 20, 571, 21),
woosh.Token(woosh.NAME, 'flags', 571, 22, 571, 27),
woosh.Token(woosh.OP, ',', 571, 27, 571, 28),
woosh.Token(woosh.NAME, 'addr', 571, 29, 571, 33),
woosh.Token(woosh.OP, '=', 571, 34, 571, 35),
woosh.Token(woosh.NAME, 'sock', 571, 36, 571, 40),
woosh.Token(woosh.OP, '.', 571, 40, 571, 41),
woosh.Token(woosh.NAME, 'recvmsg', 571, 41, 571, 48),
woosh.Token(woosh.OP, '(', 571, 48, 571, 49),
woosh.Token(woosh.NAME, 'bufsize', 571, 49, 571, 56),
woosh.Token(woosh.OP, ',', 571, 56, 571, 57),
woosh.Token(woosh.NAME, '_socket', 572, 12, 572, 19),
woosh.Token(woosh.OP, '.', 572, 19, 572, 20),
woosh.Token(woosh.NAME, 'CMSG_LEN', 572, 20, 572, 28),
woosh.Token(woosh.OP, '(', 572, 28, 572, 29),
woosh.Token(woosh.NAME, 'maxfds', 572, 29, 572, 35),
woosh.Token(woosh.OP, '*', 572, 36, 572, 37),
woosh.Token(woosh.NAME, 'fds', 572, 38, 572, 41),
woosh.Token(woosh.OP, '.', 572, 41, 572, 42),
woosh.Token(woosh.NAME, 'itemsize', 572, 42, 572, 50),
woosh.Token(woosh.OP, ')', 572, 50, 572, 51),
woosh.Token(woosh.OP, ')', 572, 51, 572, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 572, 52, 573, 0),
woosh.Token(woosh.NAME, 'for', 573, 8, 573, 11),
woosh.Token(woosh.NAME, 'cmsg_level', 573, 12, 573, 22),
woosh.Token(woosh.OP, ',', 573, 22, 573, 23),
woosh.Token(woosh.NAME, 'cmsg_type', 573, 24, 573, 33),
woosh.Token(woosh.OP, ',', 573, 33, 573, 34),
woosh.Token(woosh.NAME, 'cmsg_data', 573, 35, 573, 44),
woosh.Token(woosh.NAME, 'in', 573, 45, 573, 47),
woosh.Token(woosh.NAME, 'ancdata', 573, 48, 573, 55),
woosh.Token(woosh.OP, ':', 573, 55, 573, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 573, 56, 574, 0),
woosh.Token(woosh.INDENT, '            ', 574, 0, 574, 12),
woosh.Token(woosh.NAME, 'if', 574, 12, 574, 14),
woosh.Token(woosh.OP, '(', 574, 15, 574, 16),
woosh.Token(woosh.NAME, 'cmsg_level', 574, 16, 574, 26),
woosh.Token(woosh.OP, '==', 574, 27, 574, 29),
woosh.Token(woosh.NAME, '_socket', 574, 30, 574, 37),
woosh.Token(woosh.OP, '.', 574, 37, 574, 38),
woosh.Token(woosh.NAME, 'SOL_SOCKET', 574, 38, 574, 48),
woosh.Token(woosh.NAME, 'and', 574, 49, 574, 52),
woosh.Token(woosh.NAME, 'cmsg_type', 574, 53, 574, 62),
woosh.Token(woosh.OP, '==', 574, 63, 574, 65),
woosh.Token(woosh.NAME, '_socket', 574, 66, 574, 73),
woosh.Token(woosh.OP, '.', 574, 73, 574, 74),
woosh.Token(woosh.NAME, 'SCM_RIGHTS', 574, 74, 574, 84),
woosh.Token(woosh.OP, ')', 574, 84, 574, 85),
woosh.Token(woosh.OP, ':', 574, 85, 574, 86),
woosh.Token(woosh.NEWLINE, '\r\n', 574, 86, 575, 0),
woosh.Token(woosh.INDENT, '                ', 575, 0, 575, 16),
woosh.Token(woosh.NAME, 'fds', 575, 16, 575, 19),
woosh.Token(woosh.OP, '.', 575, 19, 575, 20),
woosh.Token(woosh.NAME, 'frombytes', 575, 20, 575, 29),
woosh.Token(woosh.OP, '(', 575, 29, 575, 30),
woosh.Token(woosh.NAME, 'cmsg_data', 575, 30, 575, 39),
woosh.Token(woosh.OP, '[', 575, 39, 575, 40),
woosh.Token(woosh.OP, ':', 575, 40, 575, 41),
woosh.Token(woosh.NAME, 'len', 576, 24, 576, 27),
woosh.Token(woosh.OP, '(', 576, 27, 576, 28),
woosh.Token(woosh.NAME, 'cmsg_data', 576, 28, 576, 37),
woosh.Token(woosh.OP, ')', 576, 37, 576, 38),
woosh.Token(woosh.OP, '-', 576, 39, 576, 40),
woosh.Token(woosh.OP, '(', 576, 41, 576, 42),
woosh.Token(woosh.NAME, 'len', 576, 42, 576, 45),
woosh.Token(woosh.OP, '(', 576, 45, 576, 46),
woosh.Token(woosh.NAME, 'cmsg_data', 576, 46, 576, 55),
woosh.Token(woosh.OP, ')', 576, 55, 576, 56),
woosh.Token(woosh.OP, '%', 576, 57, 576, 58),
woosh.Token(woosh.NAME, 'fds', 576, 59, 576, 62),
woosh.Token(woosh.OP, '.', 576, 62, 576, 63),
woosh.Token(woosh.NAME, 'itemsize', 576, 63, 576, 71),
woosh.Token(woosh.OP, ')', 576, 71, 576, 72),
woosh.Token(woosh.OP, ']', 576, 72, 576, 73),
woosh.Token(woosh.OP, ')', 576, 73, 576, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 74, 577, 0),
woosh.Token(woosh.DEDENT, '        ', 578, 0, 578, 8),
woosh.Token(woosh.DEDENT, '', 578, 8, 578, 8),
woosh.Token(woosh.NAME, 'return', 578, 8, 578, 14),
woosh.Token(woosh.NAME, 'msg', 578, 15, 578, 18),
woosh.Token(woosh.OP, ',', 578, 18, 578, 19),
woosh.Token(woosh.NAME, 'list', 578, 20, 578, 24),
woosh.Token(woosh.OP, '(', 578, 24, 578, 25),
woosh.Token(woosh.NAME, 'fds', 578, 25, 578, 28),
woosh.Token(woosh.OP, ')', 578, 28, 578, 29),
woosh.Token(woosh.OP, ',', 578, 29, 578, 30),
woosh.Token(woosh.NAME, 'flags', 578, 31, 578, 36),
woosh.Token(woosh.OP, ',', 578, 36, 578, 37),
woosh.Token(woosh.NAME, 'addr', 578, 38, 578, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 578, 42, 579, 0),
woosh.Token(woosh.DEDENT, '    ', 579, 0, 579, 4),
woosh.Token(woosh.NAME, '__all__', 579, 4, 579, 11),
woosh.Token(woosh.OP, '.', 579, 11, 579, 12),
woosh.Token(woosh.NAME, 'append', 579, 12, 579, 18),
woosh.Token(woosh.OP, '(', 579, 18, 579, 19),
woosh.Token(woosh.STRING, '"recv_fds"', 579, 19, 579, 29),
woosh.Token(woosh.OP, ')', 579, 29, 579, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 579, 30, 580, 0),
woosh.Token(woosh.DEDENT, '', 581, 0, 581, 0),
woosh.Token(woosh.NAME, 'if', 581, 0, 581, 2),
woosh.Token(woosh.NAME, 'hasattr', 581, 3, 581, 10),
woosh.Token(woosh.OP, '(', 581, 10, 581, 11),
woosh.Token(woosh.NAME, '_socket', 581, 11, 581, 18),
woosh.Token(woosh.OP, '.', 581, 18, 581, 19),
woosh.Token(woosh.NAME, 'socket', 581, 19, 581, 25),
woosh.Token(woosh.OP, ',', 581, 25, 581, 26),
woosh.Token(woosh.STRING, '"share"', 581, 27, 581, 34),
woosh.Token(woosh.OP, ')', 581, 34, 581, 35),
woosh.Token(woosh.OP, ':', 581, 35, 581, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 36, 582, 0),
woosh.Token(woosh.INDENT, '    ', 582, 0, 582, 4),
woosh.Token(woosh.NAME, 'def', 582, 4, 582, 7),
woosh.Token(woosh.NAME, 'fromshare', 582, 8, 582, 17),
woosh.Token(woosh.OP, '(', 582, 17, 582, 18),
woosh.Token(woosh.NAME, 'info', 582, 18, 582, 22),
woosh.Token(woosh.OP, ')', 582, 22, 582, 23),
woosh.Token(woosh.OP, ':', 582, 23, 582, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 582, 24, 583, 0),
woosh.Token(woosh.INDENT, '        ', 583, 0, 583, 8),
woosh.Token(woosh.STRING, '""" fromshare(info) -> socket object\r\n\r\n        Create a socket object from the bytes object returned by\r\n        socket.share(pid).\r\n        """', 583, 8, 587, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 11, 588, 0),
woosh.Token(woosh.NAME, 'return', 588, 8, 588, 14),
woosh.Token(woosh.NAME, 'socket', 588, 15, 588, 21),
woosh.Token(woosh.OP, '(', 588, 21, 588, 22),
woosh.Token(woosh.NUMBER, '0', 588, 22, 588, 23),
woosh.Token(woosh.OP, ',', 588, 23, 588, 24),
woosh.Token(woosh.NUMBER, '0', 588, 25, 588, 26),
woosh.Token(woosh.OP, ',', 588, 26, 588, 27),
woosh.Token(woosh.NUMBER, '0', 588, 28, 588, 29),
woosh.Token(woosh.OP, ',', 588, 29, 588, 30),
woosh.Token(woosh.NAME, 'info', 588, 31, 588, 35),
woosh.Token(woosh.OP, ')', 588, 35, 588, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 588, 36, 589, 0),
woosh.Token(woosh.DEDENT, '    ', 589, 0, 589, 4),
woosh.Token(woosh.NAME, '__all__', 589, 4, 589, 11),
woosh.Token(woosh.OP, '.', 589, 11, 589, 12),
woosh.Token(woosh.NAME, 'append', 589, 12, 589, 18),
woosh.Token(woosh.OP, '(', 589, 18, 589, 19),
woosh.Token(woosh.STRING, '"fromshare"', 589, 19, 589, 30),
woosh.Token(woosh.OP, ')', 589, 30, 589, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 31, 590, 0),
woosh.Token(woosh.DEDENT, '', 591, 0, 591, 0),
woosh.Token(woosh.NAME, 'if', 591, 0, 591, 2),
woosh.Token(woosh.NAME, 'hasattr', 591, 3, 591, 10),
woosh.Token(woosh.OP, '(', 591, 10, 591, 11),
woosh.Token(woosh.NAME, '_socket', 591, 11, 591, 18),
woosh.Token(woosh.OP, ',', 591, 18, 591, 19),
woosh.Token(woosh.STRING, '"socketpair"', 591, 20, 591, 32),
woosh.Token(woosh.OP, ')', 591, 32, 591, 33),
woosh.Token(woosh.OP, ':', 591, 33, 591, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 34, 592, 0),
woosh.Token(woosh.INDENT, '    ', 593, 0, 593, 4),
woosh.Token(woosh.NAME, 'def', 593, 4, 593, 7),
woosh.Token(woosh.NAME, 'socketpair', 593, 8, 593, 18),
woosh.Token(woosh.OP, '(', 593, 18, 593, 19),
woosh.Token(woosh.NAME, 'family', 593, 19, 593, 25),
woosh.Token(woosh.OP, '=', 593, 25, 593, 26),
woosh.Token(woosh.NAME, 'None', 593, 26, 593, 30),
woosh.Token(woosh.OP, ',', 593, 30, 593, 31),
woosh.Token(woosh.NAME, 'type', 593, 32, 593, 36),
woosh.Token(woosh.OP, '=', 593, 36, 593, 37),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 593, 37, 593, 48),
woosh.Token(woosh.OP, ',', 593, 48, 593, 49),
woosh.Token(woosh.NAME, 'proto', 593, 50, 593, 55),
woosh.Token(woosh.OP, '=', 593, 55, 593, 56),
woosh.Token(woosh.NUMBER, '0', 593, 56, 593, 57),
woosh.Token(woosh.OP, ')', 593, 57, 593, 58),
woosh.Token(woosh.OP, ':', 593, 58, 593, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 593, 59, 594, 0),
woosh.Token(woosh.INDENT, '        ', 594, 0, 594, 8),
woosh.Token(woosh.STRING, '"""socketpair([family[, type[, proto]]]) -> (socket object, socket object)\r\n\r\n        Create a pair of socket objects from the sockets returned by the platform\r\n        socketpair() function.\r\n        The arguments are the same as for socket() except the default family is\r\n        AF_UNIX if defined on the platform; otherwise, the default is AF_INET.\r\n        """', 594, 8, 600, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 11, 601, 0),
woosh.Token(woosh.NAME, 'if', 601, 8, 601, 10),
woosh.Token(woosh.NAME, 'family', 601, 11, 601, 17),
woosh.Token(woosh.NAME, 'is', 601, 18, 601, 20),
woosh.Token(woosh.NAME, 'None', 601, 21, 601, 25),
woosh.Token(woosh.OP, ':', 601, 25, 601, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 26, 602, 0),
woosh.Token(woosh.INDENT, '            ', 602, 0, 602, 12),
woosh.Token(woosh.NAME, 'try', 602, 12, 602, 15),
woosh.Token(woosh.OP, ':', 602, 15, 602, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 16, 603, 0),
woosh.Token(woosh.INDENT, '                ', 603, 0, 603, 16),
woosh.Token(woosh.NAME, 'family', 603, 16, 603, 22),
woosh.Token(woosh.OP, '=', 603, 23, 603, 24),
woosh.Token(woosh.NAME, 'AF_UNIX', 603, 25, 603, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 32, 604, 0),
woosh.Token(woosh.DEDENT, '            ', 604, 0, 604, 12),
woosh.Token(woosh.NAME, 'except', 604, 12, 604, 18),
woosh.Token(woosh.NAME, 'NameError', 604, 19, 604, 28),
woosh.Token(woosh.OP, ':', 604, 28, 604, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 29, 605, 0),
woosh.Token(woosh.INDENT, '                ', 605, 0, 605, 16),
woosh.Token(woosh.NAME, 'family', 605, 16, 605, 22),
woosh.Token(woosh.OP, '=', 605, 23, 605, 24),
woosh.Token(woosh.NAME, 'AF_INET', 605, 25, 605, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 32, 606, 0),
woosh.Token(woosh.DEDENT, '        ', 606, 0, 606, 8),
woosh.Token(woosh.DEDENT, '', 606, 8, 606, 8),
woosh.Token(woosh.NAME, 'a', 606, 8, 606, 9),
woosh.Token(woosh.OP, ',', 606, 9, 606, 10),
woosh.Token(woosh.NAME, 'b', 606, 11, 606, 12),
woosh.Token(woosh.OP, '=', 606, 13, 606, 14),
woosh.Token(woosh.NAME, '_socket', 606, 15, 606, 22),
woosh.Token(woosh.OP, '.', 606, 22, 606, 23),
woosh.Token(woosh.NAME, 'socketpair', 606, 23, 606, 33),
woosh.Token(woosh.OP, '(', 606, 33, 606, 34),
woosh.Token(woosh.NAME, 'family', 606, 34, 606, 40),
woosh.Token(woosh.OP, ',', 606, 40, 606, 41),
woosh.Token(woosh.NAME, 'type', 606, 42, 606, 46),
woosh.Token(woosh.OP, ',', 606, 46, 606, 47),
woosh.Token(woosh.NAME, 'proto', 606, 48, 606, 53),
woosh.Token(woosh.OP, ')', 606, 53, 606, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 606, 54, 607, 0),
woosh.Token(woosh.NAME, 'a', 607, 8, 607, 9),
woosh.Token(woosh.OP, '=', 607, 10, 607, 11),
woosh.Token(woosh.NAME, 'socket', 607, 12, 607, 18),
woosh.Token(woosh.OP, '(', 607, 18, 607, 19),
woosh.Token(woosh.NAME, 'family', 607, 19, 607, 25),
woosh.Token(woosh.OP, ',', 607, 25, 607, 26),
woosh.Token(woosh.NAME, 'type', 607, 27, 607, 31),
woosh.Token(woosh.OP, ',', 607, 31, 607, 32),
woosh.Token(woosh.NAME, 'proto', 607, 33, 607, 38),
woosh.Token(woosh.OP, ',', 607, 38, 607, 39),
woosh.Token(woosh.NAME, 'a', 607, 40, 607, 41),
woosh.Token(woosh.OP, '.', 607, 41, 607, 42),
woosh.Token(woosh.NAME, 'detach', 607, 42, 607, 48),
woosh.Token(woosh.OP, '(', 607, 48, 607, 49),
woosh.Token(woosh.OP, ')', 607, 49, 607, 50),
woosh.Token(woosh.OP, ')', 607, 50, 607, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 51, 608, 0),
woosh.Token(woosh.NAME, 'b', 608, 8, 608, 9),
woosh.Token(woosh.OP, '=', 608, 10, 608, 11),
woosh.Token(woosh.NAME, 'socket', 608, 12, 608, 18),
woosh.Token(woosh.OP, '(', 608, 18, 608, 19),
woosh.Token(woosh.NAME, 'family', 608, 19, 608, 25),
woosh.Token(woosh.OP, ',', 608, 25, 608, 26),
woosh.Token(woosh.NAME, 'type', 608, 27, 608, 31),
woosh.Token(woosh.OP, ',', 608, 31, 608, 32),
woosh.Token(woosh.NAME, 'proto', 608, 33, 608, 38),
woosh.Token(woosh.OP, ',', 608, 38, 608, 39),
woosh.Token(woosh.NAME, 'b', 608, 40, 608, 41),
woosh.Token(woosh.OP, '.', 608, 41, 608, 42),
woosh.Token(woosh.NAME, 'detach', 608, 42, 608, 48),
woosh.Token(woosh.OP, '(', 608, 48, 608, 49),
woosh.Token(woosh.OP, ')', 608, 49, 608, 50),
woosh.Token(woosh.OP, ')', 608, 50, 608, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 51, 609, 0),
woosh.Token(woosh.NAME, 'return', 609, 8, 609, 14),
woosh.Token(woosh.NAME, 'a', 609, 15, 609, 16),
woosh.Token(woosh.OP, ',', 609, 16, 609, 17),
woosh.Token(woosh.NAME, 'b', 609, 18, 609, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 19, 610, 0),
woosh.Token(woosh.DEDENT, '', 611, 0, 611, 0),
woosh.Token(woosh.DEDENT, '', 611, 0, 611, 0),
woosh.Token(woosh.NAME, 'else', 611, 0, 611, 4),
woosh.Token(woosh.OP, ':', 611, 4, 611, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 5, 612, 0),
woosh.Token(woosh.COMMENT, '# Origin: https://gist.github.com/4325783, by Geert Jansen.  Public domain.', 613, 4, 613, 79),
woosh.Token(woosh.INDENT, '    ', 614, 0, 614, 4),
woosh.Token(woosh.NAME, 'def', 614, 4, 614, 7),
woosh.Token(woosh.NAME, 'socketpair', 614, 8, 614, 18),
woosh.Token(woosh.OP, '(', 614, 18, 614, 19),
woosh.Token(woosh.NAME, 'family', 614, 19, 614, 25),
woosh.Token(woosh.OP, '=', 614, 25, 614, 26),
woosh.Token(woosh.NAME, 'AF_INET', 614, 26, 614, 33),
woosh.Token(woosh.OP, ',', 614, 33, 614, 34),
woosh.Token(woosh.NAME, 'type', 614, 35, 614, 39),
woosh.Token(woosh.OP, '=', 614, 39, 614, 40),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 614, 40, 614, 51),
woosh.Token(woosh.OP, ',', 614, 51, 614, 52),
woosh.Token(woosh.NAME, 'proto', 614, 53, 614, 58),
woosh.Token(woosh.OP, '=', 614, 58, 614, 59),
woosh.Token(woosh.NUMBER, '0', 614, 59, 614, 60),
woosh.Token(woosh.OP, ')', 614, 60, 614, 61),
woosh.Token(woosh.OP, ':', 614, 61, 614, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 62, 615, 0),
woosh.Token(woosh.INDENT, '        ', 615, 0, 615, 8),
woosh.Token(woosh.NAME, 'if', 615, 8, 615, 10),
woosh.Token(woosh.NAME, 'family', 615, 11, 615, 17),
woosh.Token(woosh.OP, '==', 615, 18, 615, 20),
woosh.Token(woosh.NAME, 'AF_INET', 615, 21, 615, 28),
woosh.Token(woosh.OP, ':', 615, 28, 615, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 615, 29, 616, 0),
woosh.Token(woosh.INDENT, '            ', 616, 0, 616, 12),
woosh.Token(woosh.NAME, 'host', 616, 12, 616, 16),
woosh.Token(woosh.OP, '=', 616, 17, 616, 18),
woosh.Token(woosh.NAME, '_LOCALHOST', 616, 19, 616, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 616, 29, 617, 0),
woosh.Token(woosh.DEDENT, '        ', 617, 0, 617, 8),
woosh.Token(woosh.NAME, 'elif', 617, 8, 617, 12),
woosh.Token(woosh.NAME, 'family', 617, 13, 617, 19),
woosh.Token(woosh.OP, '==', 617, 20, 617, 22),
woosh.Token(woosh.NAME, 'AF_INET6', 617, 23, 617, 31),
woosh.Token(woosh.OP, ':', 617, 31, 617, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 617, 32, 618, 0),
woosh.Token(woosh.INDENT, '            ', 618, 0, 618, 12),
woosh.Token(woosh.NAME, 'host', 618, 12, 618, 16),
woosh.Token(woosh.OP, '=', 618, 17, 618, 18),
woosh.Token(woosh.NAME, '_LOCALHOST_V6', 618, 19, 618, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 618, 32, 619, 0),
woosh.Token(woosh.DEDENT, '        ', 619, 0, 619, 8),
woosh.Token(woosh.NAME, 'else', 619, 8, 619, 12),
woosh.Token(woosh.OP, ':', 619, 12, 619, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 13, 620, 0),
woosh.Token(woosh.INDENT, '            ', 620, 0, 620, 12),
woosh.Token(woosh.NAME, 'raise', 620, 12, 620, 17),
woosh.Token(woosh.NAME, 'ValueError', 620, 18, 620, 28),
woosh.Token(woosh.OP, '(', 620, 28, 620, 29),
woosh.Token(woosh.STRING, '"Only AF_INET and AF_INET6 socket address families "', 620, 29, 620, 81),
woosh.Token(woosh.STRING, '"are supported"', 621, 29, 621, 44),
woosh.Token(woosh.OP, ')', 621, 44, 621, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 45, 622, 0),
woosh.Token(woosh.DEDENT, '        ', 622, 0, 622, 8),
woosh.Token(woosh.NAME, 'if', 622, 8, 622, 10),
woosh.Token(woosh.NAME, 'type', 622, 11, 622, 15),
woosh.Token(woosh.OP, '!=', 622, 16, 622, 18),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 622, 19, 622, 30),
woosh.Token(woosh.OP, ':', 622, 30, 622, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 622, 31, 623, 0),
woosh.Token(woosh.INDENT, '            ', 623, 0, 623, 12),
woosh.Token(woosh.NAME, 'raise', 623, 12, 623, 17),
woosh.Token(woosh.NAME, 'ValueError', 623, 18, 623, 28),
woosh.Token(woosh.OP, '(', 623, 28, 623, 29),
woosh.Token(woosh.STRING, '"Only SOCK_STREAM socket type is supported"', 623, 29, 623, 72),
woosh.Token(woosh.OP, ')', 623, 72, 623, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 623, 73, 624, 0),
woosh.Token(woosh.DEDENT, '        ', 624, 0, 624, 8),
woosh.Token(woosh.NAME, 'if', 624, 8, 624, 10),
woosh.Token(woosh.NAME, 'proto', 624, 11, 624, 16),
woosh.Token(woosh.OP, '!=', 624, 17, 624, 19),
woosh.Token(woosh.NUMBER, '0', 624, 20, 624, 21),
woosh.Token(woosh.OP, ':', 624, 21, 624, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 22, 625, 0),
woosh.Token(woosh.INDENT, '            ', 625, 0, 625, 12),
woosh.Token(woosh.NAME, 'raise', 625, 12, 625, 17),
woosh.Token(woosh.NAME, 'ValueError', 625, 18, 625, 28),
woosh.Token(woosh.OP, '(', 625, 28, 625, 29),
woosh.Token(woosh.STRING, '"Only protocol zero is supported"', 625, 29, 625, 62),
woosh.Token(woosh.OP, ')', 625, 62, 625, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 63, 626, 0),
woosh.Token(woosh.COMMENT, '# We create a connected TCP socket. Note the trick with', 627, 8, 627, 63),
woosh.Token(woosh.COMMENT, '# setblocking(False) that prevents us from having to create a thread.', 628, 8, 628, 77),
woosh.Token(woosh.DEDENT, '        ', 629, 0, 629, 8),
woosh.Token(woosh.NAME, 'lsock', 629, 8, 629, 13),
woosh.Token(woosh.OP, '=', 629, 14, 629, 15),
woosh.Token(woosh.NAME, 'socket', 629, 16, 629, 22),
woosh.Token(woosh.OP, '(', 629, 22, 629, 23),
woosh.Token(woosh.NAME, 'family', 629, 23, 629, 29),
woosh.Token(woosh.OP, ',', 629, 29, 629, 30),
woosh.Token(woosh.NAME, 'type', 629, 31, 629, 35),
woosh.Token(woosh.OP, ',', 629, 35, 629, 36),
woosh.Token(woosh.NAME, 'proto', 629, 37, 629, 42),
woosh.Token(woosh.OP, ')', 629, 42, 629, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 43, 630, 0),
woosh.Token(woosh.NAME, 'try', 630, 8, 630, 11),
woosh.Token(woosh.OP, ':', 630, 11, 630, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 630, 12, 631, 0),
woosh.Token(woosh.INDENT, '            ', 631, 0, 631, 12),
woosh.Token(woosh.NAME, 'lsock', 631, 12, 631, 17),
woosh.Token(woosh.OP, '.', 631, 17, 631, 18),
woosh.Token(woosh.NAME, 'bind', 631, 18, 631, 22),
woosh.Token(woosh.OP, '(', 631, 22, 631, 23),
woosh.Token(woosh.OP, '(', 631, 23, 631, 24),
woosh.Token(woosh.NAME, 'host', 631, 24, 631, 28),
woosh.Token(woosh.OP, ',', 631, 28, 631, 29),
woosh.Token(woosh.NUMBER, '0', 631, 30, 631, 31),
woosh.Token(woosh.OP, ')', 631, 31, 631, 32),
woosh.Token(woosh.OP, ')', 631, 32, 631, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 631, 33, 632, 0),
woosh.Token(woosh.NAME, 'lsock', 632, 12, 632, 17),
woosh.Token(woosh.OP, '.', 632, 17, 632, 18),
woosh.Token(woosh.NAME, 'listen', 632, 18, 632, 24),
woosh.Token(woosh.OP, '(', 632, 24, 632, 25),
woosh.Token(woosh.OP, ')', 632, 25, 632, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 26, 633, 0),
woosh.Token(woosh.COMMENT, '# On IPv6, ignore flow_info and scope_id', 633, 12, 633, 52),
woosh.Token(woosh.NAME, 'addr', 634, 12, 634, 16),
woosh.Token(woosh.OP, ',', 634, 16, 634, 17),
woosh.Token(woosh.NAME, 'port', 634, 18, 634, 22),
woosh.Token(woosh.OP, '=', 634, 23, 634, 24),
woosh.Token(woosh.NAME, 'lsock', 634, 25, 634, 30),
woosh.Token(woosh.OP, '.', 634, 30, 634, 31),
woosh.Token(woosh.NAME, 'getsockname', 634, 31, 634, 42),
woosh.Token(woosh.OP, '(', 634, 42, 634, 43),
woosh.Token(woosh.OP, ')', 634, 43, 634, 44),
woosh.Token(woosh.OP, '[', 634, 44, 634, 45),
woosh.Token(woosh.OP, ':', 634, 45, 634, 46),
woosh.Token(woosh.NUMBER, '2', 634, 46, 634, 47),
woosh.Token(woosh.OP, ']', 634, 47, 634, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 48, 635, 0),
woosh.Token(woosh.NAME, 'csock', 635, 12, 635, 17),
woosh.Token(woosh.OP, '=', 635, 18, 635, 19),
woosh.Token(woosh.NAME, 'socket', 635, 20, 635, 26),
woosh.Token(woosh.OP, '(', 635, 26, 635, 27),
woosh.Token(woosh.NAME, 'family', 635, 27, 635, 33),
woosh.Token(woosh.OP, ',', 635, 33, 635, 34),
woosh.Token(woosh.NAME, 'type', 635, 35, 635, 39),
woosh.Token(woosh.OP, ',', 635, 39, 635, 40),
woosh.Token(woosh.NAME, 'proto', 635, 41, 635, 46),
woosh.Token(woosh.OP, ')', 635, 46, 635, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 635, 47, 636, 0),
woosh.Token(woosh.NAME, 'try', 636, 12, 636, 15),
woosh.Token(woosh.OP, ':', 636, 15, 636, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 636, 16, 637, 0),
woosh.Token(woosh.INDENT, '                ', 637, 0, 637, 16),
woosh.Token(woosh.NAME, 'csock', 637, 16, 637, 21),
woosh.Token(woosh.OP, '.', 637, 21, 637, 22),
woosh.Token(woosh.NAME, 'setblocking', 637, 22, 637, 33),
woosh.Token(woosh.OP, '(', 637, 33, 637, 34),
woosh.Token(woosh.NAME, 'False', 637, 34, 637, 39),
woosh.Token(woosh.OP, ')', 637, 39, 637, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 40, 638, 0),
woosh.Token(woosh.NAME, 'try', 638, 16, 638, 19),
woosh.Token(woosh.OP, ':', 638, 19, 638, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 20, 639, 0),
woosh.Token(woosh.INDENT, '                    ', 639, 0, 639, 20),
woosh.Token(woosh.NAME, 'csock', 639, 20, 639, 25),
woosh.Token(woosh.OP, '.', 639, 25, 639, 26),
woosh.Token(woosh.NAME, 'connect', 639, 26, 639, 33),
woosh.Token(woosh.OP, '(', 639, 33, 639, 34),
woosh.Token(woosh.OP, '(', 639, 34, 639, 35),
woosh.Token(woosh.NAME, 'addr', 639, 35, 639, 39),
woosh.Token(woosh.OP, ',', 639, 39, 639, 40),
woosh.Token(woosh.NAME, 'port', 639, 41, 639, 45),
woosh.Token(woosh.OP, ')', 639, 45, 639, 46),
woosh.Token(woosh.OP, ')', 639, 46, 639, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 47, 640, 0),
woosh.Token(woosh.DEDENT, '                ', 640, 0, 640, 16),
woosh.Token(woosh.NAME, 'except', 640, 16, 640, 22),
woosh.Token(woosh.OP, '(', 640, 23, 640, 24),
woosh.Token(woosh.NAME, 'BlockingIOError', 640, 24, 640, 39),
woosh.Token(woosh.OP, ',', 640, 39, 640, 40),
woosh.Token(woosh.NAME, 'InterruptedError', 640, 41, 640, 57),
woosh.Token(woosh.OP, ')', 640, 57, 640, 58),
woosh.Token(woosh.OP, ':', 640, 58, 640, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 640, 59, 641, 0),
woosh.Token(woosh.INDENT, '                    ', 641, 0, 641, 20),
woosh.Token(woosh.NAME, 'pass', 641, 20, 641, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 24, 642, 0),
woosh.Token(woosh.DEDENT, '                ', 642, 0, 642, 16),
woosh.Token(woosh.NAME, 'csock', 642, 16, 642, 21),
woosh.Token(woosh.OP, '.', 642, 21, 642, 22),
woosh.Token(woosh.NAME, 'setblocking', 642, 22, 642, 33),
woosh.Token(woosh.OP, '(', 642, 33, 642, 34),
woosh.Token(woosh.NAME, 'True', 642, 34, 642, 38),
woosh.Token(woosh.OP, ')', 642, 38, 642, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 39, 643, 0),
woosh.Token(woosh.NAME, 'ssock', 643, 16, 643, 21),
woosh.Token(woosh.OP, ',', 643, 21, 643, 22),
woosh.Token(woosh.NAME, '_', 643, 23, 643, 24),
woosh.Token(woosh.OP, '=', 643, 25, 643, 26),
woosh.Token(woosh.NAME, 'lsock', 643, 27, 643, 32),
woosh.Token(woosh.OP, '.', 643, 32, 643, 33),
woosh.Token(woosh.NAME, 'accept', 643, 33, 643, 39),
woosh.Token(woosh.OP, '(', 643, 39, 643, 40),
woosh.Token(woosh.OP, ')', 643, 40, 643, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 643, 41, 644, 0),
woosh.Token(woosh.DEDENT, '            ', 644, 0, 644, 12),
woosh.Token(woosh.NAME, 'except', 644, 12, 644, 18),
woosh.Token(woosh.OP, ':', 644, 18, 644, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 644, 19, 645, 0),
woosh.Token(woosh.INDENT, '                ', 645, 0, 645, 16),
woosh.Token(woosh.NAME, 'csock', 645, 16, 645, 21),
woosh.Token(woosh.OP, '.', 645, 21, 645, 22),
woosh.Token(woosh.NAME, 'close', 645, 22, 645, 27),
woosh.Token(woosh.OP, '(', 645, 27, 645, 28),
woosh.Token(woosh.OP, ')', 645, 28, 645, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 645, 29, 646, 0),
woosh.Token(woosh.NAME, 'raise', 646, 16, 646, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 646, 21, 647, 0),
woosh.Token(woosh.DEDENT, '        ', 647, 0, 647, 8),
woosh.Token(woosh.DEDENT, '', 647, 8, 647, 8),
woosh.Token(woosh.NAME, 'finally', 647, 8, 647, 15),
woosh.Token(woosh.OP, ':', 647, 15, 647, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 647, 16, 648, 0),
woosh.Token(woosh.INDENT, '            ', 648, 0, 648, 12),
woosh.Token(woosh.NAME, 'lsock', 648, 12, 648, 17),
woosh.Token(woosh.OP, '.', 648, 17, 648, 18),
woosh.Token(woosh.NAME, 'close', 648, 18, 648, 23),
woosh.Token(woosh.OP, '(', 648, 23, 648, 24),
woosh.Token(woosh.OP, ')', 648, 24, 648, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 648, 25, 649, 0),
woosh.Token(woosh.DEDENT, '        ', 649, 0, 649, 8),
woosh.Token(woosh.NAME, 'return', 649, 8, 649, 14),
woosh.Token(woosh.OP, '(', 649, 15, 649, 16),
woosh.Token(woosh.NAME, 'ssock', 649, 16, 649, 21),
woosh.Token(woosh.OP, ',', 649, 21, 649, 22),
woosh.Token(woosh.NAME, 'csock', 649, 23, 649, 28),
woosh.Token(woosh.OP, ')', 649, 28, 649, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 649, 29, 650, 0),
woosh.Token(woosh.DEDENT, '    ', 650, 0, 650, 4),
woosh.Token(woosh.NAME, '__all__', 650, 4, 650, 11),
woosh.Token(woosh.OP, '.', 650, 11, 650, 12),
woosh.Token(woosh.NAME, 'append', 650, 12, 650, 18),
woosh.Token(woosh.OP, '(', 650, 18, 650, 19),
woosh.Token(woosh.STRING, '"socketpair"', 650, 19, 650, 31),
woosh.Token(woosh.OP, ')', 650, 31, 650, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 650, 32, 651, 0),
woosh.Token(woosh.DEDENT, '', 652, 0, 652, 0),
woosh.Token(woosh.NAME, 'socketpair', 652, 0, 652, 10),
woosh.Token(woosh.OP, '.', 652, 10, 652, 11),
woosh.Token(woosh.NAME, '__doc__', 652, 11, 652, 18),
woosh.Token(woosh.OP, '=', 652, 19, 652, 20),
woosh.Token(woosh.STRING, '"""socketpair([family[, type[, proto]]]) -> (socket object, socket object)\r\nCreate a pair of socket objects from the sockets returned by the platform\r\nsocketpair() function.\r\nThe arguments are the same as for socket() except the default family is AF_UNIX\r\nif defined on the platform; otherwise, the default is AF_INET.\r\n"""', 652, 21, 657, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 657, 3, 658, 0),
woosh.Token(woosh.NAME, '_blocking_errnos', 659, 0, 659, 16),
woosh.Token(woosh.OP, '=', 659, 17, 659, 18),
woosh.Token(woosh.OP, '{', 659, 19, 659, 20),
woosh.Token(woosh.NAME, 'EAGAIN', 659, 21, 659, 27),
woosh.Token(woosh.OP, ',', 659, 27, 659, 28),
woosh.Token(woosh.NAME, 'EWOULDBLOCK', 659, 29, 659, 40),
woosh.Token(woosh.OP, '}', 659, 41, 659, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 42, 660, 0),
woosh.Token(woosh.NAME, 'class', 661, 0, 661, 5),
woosh.Token(woosh.NAME, 'SocketIO', 661, 6, 661, 14),
woosh.Token(woosh.OP, '(', 661, 14, 661, 15),
woosh.Token(woosh.NAME, 'io', 661, 15, 661, 17),
woosh.Token(woosh.OP, '.', 661, 17, 661, 18),
woosh.Token(woosh.NAME, 'RawIOBase', 661, 18, 661, 27),
woosh.Token(woosh.OP, ')', 661, 27, 661, 28),
woosh.Token(woosh.OP, ':', 661, 28, 661, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 29, 662, 0),
woosh.Token(woosh.INDENT, '    ', 663, 0, 663, 4),
woosh.Token(woosh.STRING, '"""Raw I/O implementation for stream sockets.\r\n\r\n    This class supports the makefile() method on sockets.  It provides\r\n    the raw I/O interface on top of a socket object.\r\n    """', 663, 4, 667, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 7, 668, 0),
woosh.Token(woosh.COMMENT, '# One might wonder why not let FileIO do the job instead.  There are two', 669, 4, 669, 76),
woosh.Token(woosh.COMMENT, '# main reasons why FileIO is not adapted:', 670, 4, 670, 45),
woosh.Token(woosh.COMMENT, "# - it wouldn't work under Windows (where you can't used read() and", 671, 4, 671, 71),
woosh.Token(woosh.COMMENT, '#   write() on a socket handle)', 672, 4, 672, 35),
woosh.Token(woosh.COMMENT, "# - it wouldn't work with socket timeouts (FileIO would ignore the", 673, 4, 673, 70),
woosh.Token(woosh.COMMENT, '#   timeout and consider the socket non-blocking)', 674, 4, 674, 53),
woosh.Token(woosh.COMMENT, '# XXX More docs', 676, 4, 676, 19),
woosh.Token(woosh.NAME, 'def', 678, 4, 678, 7),
woosh.Token(woosh.NAME, '__init__', 678, 8, 678, 16),
woosh.Token(woosh.OP, '(', 678, 16, 678, 17),
woosh.Token(woosh.NAME, 'self', 678, 17, 678, 21),
woosh.Token(woosh.OP, ',', 678, 21, 678, 22),
woosh.Token(woosh.NAME, 'sock', 678, 23, 678, 27),
woosh.Token(woosh.OP, ',', 678, 27, 678, 28),
woosh.Token(woosh.NAME, 'mode', 678, 29, 678, 33),
woosh.Token(woosh.OP, ')', 678, 33, 678, 34),
woosh.Token(woosh.OP, ':', 678, 34, 678, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 678, 35, 679, 0),
woosh.Token(woosh.INDENT, '        ', 679, 0, 679, 8),
woosh.Token(woosh.NAME, 'if', 679, 8, 679, 10),
woosh.Token(woosh.NAME, 'mode', 679, 11, 679, 15),
woosh.Token(woosh.NAME, 'not', 679, 16, 679, 19),
woosh.Token(woosh.NAME, 'in', 679, 20, 679, 22),
woosh.Token(woosh.OP, '(', 679, 23, 679, 24),
woosh.Token(woosh.STRING, '"r"', 679, 24, 679, 27),
woosh.Token(woosh.OP, ',', 679, 27, 679, 28),
woosh.Token(woosh.STRING, '"w"', 679, 29, 679, 32),
woosh.Token(woosh.OP, ',', 679, 32, 679, 33),
woosh.Token(woosh.STRING, '"rw"', 679, 34, 679, 38),
woosh.Token(woosh.OP, ',', 679, 38, 679, 39),
woosh.Token(woosh.STRING, '"rb"', 679, 40, 679, 44),
woosh.Token(woosh.OP, ',', 679, 44, 679, 45),
woosh.Token(woosh.STRING, '"wb"', 679, 46, 679, 50),
woosh.Token(woosh.OP, ',', 679, 50, 679, 51),
woosh.Token(woosh.STRING, '"rwb"', 679, 52, 679, 57),
woosh.Token(woosh.OP, ')', 679, 57, 679, 58),
woosh.Token(woosh.OP, ':', 679, 58, 679, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 59, 680, 0),
woosh.Token(woosh.INDENT, '            ', 680, 0, 680, 12),
woosh.Token(woosh.NAME, 'raise', 680, 12, 680, 17),
woosh.Token(woosh.NAME, 'ValueError', 680, 18, 680, 28),
woosh.Token(woosh.OP, '(', 680, 28, 680, 29),
woosh.Token(woosh.STRING, '"invalid mode: %r"', 680, 29, 680, 47),
woosh.Token(woosh.OP, '%', 680, 48, 680, 49),
woosh.Token(woosh.NAME, 'mode', 680, 50, 680, 54),
woosh.Token(woosh.OP, ')', 680, 54, 680, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 680, 55, 681, 0),
woosh.Token(woosh.DEDENT, '        ', 681, 0, 681, 8),
woosh.Token(woosh.NAME, 'io', 681, 8, 681, 10),
woosh.Token(woosh.OP, '.', 681, 10, 681, 11),
woosh.Token(woosh.NAME, 'RawIOBase', 681, 11, 681, 20),
woosh.Token(woosh.OP, '.', 681, 20, 681, 21),
woosh.Token(woosh.NAME, '__init__', 681, 21, 681, 29),
woosh.Token(woosh.OP, '(', 681, 29, 681, 30),
woosh.Token(woosh.NAME, 'self', 681, 30, 681, 34),
woosh.Token(woosh.OP, ')', 681, 34, 681, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 681, 35, 682, 0),
woosh.Token(woosh.NAME, 'self', 682, 8, 682, 12),
woosh.Token(woosh.OP, '.', 682, 12, 682, 13),
woosh.Token(woosh.NAME, '_sock', 682, 13, 682, 18),
woosh.Token(woosh.OP, '=', 682, 19, 682, 20),
woosh.Token(woosh.NAME, 'sock', 682, 21, 682, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 682, 25, 683, 0),
woosh.Token(woosh.NAME, 'if', 683, 8, 683, 10),
woosh.Token(woosh.STRING, '"b"', 683, 11, 683, 14),
woosh.Token(woosh.NAME, 'not', 683, 15, 683, 18),
woosh.Token(woosh.NAME, 'in', 683, 19, 683, 21),
woosh.Token(woosh.NAME, 'mode', 683, 22, 683, 26),
woosh.Token(woosh.OP, ':', 683, 26, 683, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 683, 27, 684, 0),
woosh.Token(woosh.INDENT, '            ', 684, 0, 684, 12),
woosh.Token(woosh.NAME, 'mode', 684, 12, 684, 16),
woosh.Token(woosh.OP, '+=', 684, 17, 684, 19),
woosh.Token(woosh.STRING, '"b"', 684, 20, 684, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 684, 23, 685, 0),
woosh.Token(woosh.DEDENT, '        ', 685, 0, 685, 8),
woosh.Token(woosh.NAME, 'self', 685, 8, 685, 12),
woosh.Token(woosh.OP, '.', 685, 12, 685, 13),
woosh.Token(woosh.NAME, '_mode', 685, 13, 685, 18),
woosh.Token(woosh.OP, '=', 685, 19, 685, 20),
woosh.Token(woosh.NAME, 'mode', 685, 21, 685, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 685, 25, 686, 0),
woosh.Token(woosh.NAME, 'self', 686, 8, 686, 12),
woosh.Token(woosh.OP, '.', 686, 12, 686, 13),
woosh.Token(woosh.NAME, '_reading', 686, 13, 686, 21),
woosh.Token(woosh.OP, '=', 686, 22, 686, 23),
woosh.Token(woosh.STRING, '"r"', 686, 24, 686, 27),
woosh.Token(woosh.NAME, 'in', 686, 28, 686, 30),
woosh.Token(woosh.NAME, 'mode', 686, 31, 686, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 686, 35, 687, 0),
woosh.Token(woosh.NAME, 'self', 687, 8, 687, 12),
woosh.Token(woosh.OP, '.', 687, 12, 687, 13),
woosh.Token(woosh.NAME, '_writing', 687, 13, 687, 21),
woosh.Token(woosh.OP, '=', 687, 22, 687, 23),
woosh.Token(woosh.STRING, '"w"', 687, 24, 687, 27),
woosh.Token(woosh.NAME, 'in', 687, 28, 687, 30),
woosh.Token(woosh.NAME, 'mode', 687, 31, 687, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 687, 35, 688, 0),
woosh.Token(woosh.NAME, 'self', 688, 8, 688, 12),
woosh.Token(woosh.OP, '.', 688, 12, 688, 13),
woosh.Token(woosh.NAME, '_timeout_occurred', 688, 13, 688, 30),
woosh.Token(woosh.OP, '=', 688, 31, 688, 32),
woosh.Token(woosh.NAME, 'False', 688, 33, 688, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 688, 38, 689, 0),
woosh.Token(woosh.DEDENT, '    ', 690, 0, 690, 4),
woosh.Token(woosh.NAME, 'def', 690, 4, 690, 7),
woosh.Token(woosh.NAME, 'readinto', 690, 8, 690, 16),
woosh.Token(woosh.OP, '(', 690, 16, 690, 17),
woosh.Token(woosh.NAME, 'self', 690, 17, 690, 21),
woosh.Token(woosh.OP, ',', 690, 21, 690, 22),
woosh.Token(woosh.NAME, 'b', 690, 23, 690, 24),
woosh.Token(woosh.OP, ')', 690, 24, 690, 25),
woosh.Token(woosh.OP, ':', 690, 25, 690, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 690, 26, 691, 0),
woosh.Token(woosh.INDENT, '        ', 691, 0, 691, 8),
woosh.Token(woosh.STRING, '"""Read up to len(b) bytes into the writable buffer *b* and return\r\n        the number of bytes read.  If the socket is non-blocking and no bytes\r\n        are available, None is returned.\r\n\r\n        If *b* is non-empty, a 0 return value indicates that the connection\r\n        was shutdown at the other end.\r\n        """', 691, 8, 697, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 697, 11, 698, 0),
woosh.Token(woosh.NAME, 'self', 698, 8, 698, 12),
woosh.Token(woosh.OP, '.', 698, 12, 698, 13),
woosh.Token(woosh.NAME, '_checkClosed', 698, 13, 698, 25),
woosh.Token(woosh.OP, '(', 698, 25, 698, 26),
woosh.Token(woosh.OP, ')', 698, 26, 698, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 698, 27, 699, 0),
woosh.Token(woosh.NAME, 'self', 699, 8, 699, 12),
woosh.Token(woosh.OP, '.', 699, 12, 699, 13),
woosh.Token(woosh.NAME, '_checkReadable', 699, 13, 699, 27),
woosh.Token(woosh.OP, '(', 699, 27, 699, 28),
woosh.Token(woosh.OP, ')', 699, 28, 699, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 29, 700, 0),
woosh.Token(woosh.NAME, 'if', 700, 8, 700, 10),
woosh.Token(woosh.NAME, 'self', 700, 11, 700, 15),
woosh.Token(woosh.OP, '.', 700, 15, 700, 16),
woosh.Token(woosh.NAME, '_timeout_occurred', 700, 16, 700, 33),
woosh.Token(woosh.OP, ':', 700, 33, 700, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 34, 701, 0),
woosh.Token(woosh.INDENT, '            ', 701, 0, 701, 12),
woosh.Token(woosh.NAME, 'raise', 701, 12, 701, 17),
woosh.Token(woosh.NAME, 'OSError', 701, 18, 701, 25),
woosh.Token(woosh.OP, '(', 701, 25, 701, 26),
woosh.Token(woosh.STRING, '"cannot read from timed out object"', 701, 26, 701, 61),
woosh.Token(woosh.OP, ')', 701, 61, 701, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 701, 62, 702, 0),
woosh.Token(woosh.DEDENT, '        ', 702, 0, 702, 8),
woosh.Token(woosh.NAME, 'while', 702, 8, 702, 13),
woosh.Token(woosh.NAME, 'True', 702, 14, 702, 18),
woosh.Token(woosh.OP, ':', 702, 18, 702, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 19, 703, 0),
woosh.Token(woosh.INDENT, '            ', 703, 0, 703, 12),
woosh.Token(woosh.NAME, 'try', 703, 12, 703, 15),
woosh.Token(woosh.OP, ':', 703, 15, 703, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 703, 16, 704, 0),
woosh.Token(woosh.INDENT, '                ', 704, 0, 704, 16),
woosh.Token(woosh.NAME, 'return', 704, 16, 704, 22),
woosh.Token(woosh.NAME, 'self', 704, 23, 704, 27),
woosh.Token(woosh.OP, '.', 704, 27, 704, 28),
woosh.Token(woosh.NAME, '_sock', 704, 28, 704, 33),
woosh.Token(woosh.OP, '.', 704, 33, 704, 34),
woosh.Token(woosh.NAME, 'recv_into', 704, 34, 704, 43),
woosh.Token(woosh.OP, '(', 704, 43, 704, 44),
woosh.Token(woosh.NAME, 'b', 704, 44, 704, 45),
woosh.Token(woosh.OP, ')', 704, 45, 704, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 704, 46, 705, 0),
woosh.Token(woosh.DEDENT, '            ', 705, 0, 705, 12),
woosh.Token(woosh.NAME, 'except', 705, 12, 705, 18),
woosh.Token(woosh.NAME, 'timeout', 705, 19, 705, 26),
woosh.Token(woosh.OP, ':', 705, 26, 705, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 705, 27, 706, 0),
woosh.Token(woosh.INDENT, '                ', 706, 0, 706, 16),
woosh.Token(woosh.NAME, 'self', 706, 16, 706, 20),
woosh.Token(woosh.OP, '.', 706, 20, 706, 21),
woosh.Token(woosh.NAME, '_timeout_occurred', 706, 21, 706, 38),
woosh.Token(woosh.OP, '=', 706, 39, 706, 40),
woosh.Token(woosh.NAME, 'True', 706, 41, 706, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 706, 45, 707, 0),
woosh.Token(woosh.NAME, 'raise', 707, 16, 707, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 707, 21, 708, 0),
woosh.Token(woosh.DEDENT, '            ', 708, 0, 708, 12),
woosh.Token(woosh.NAME, 'except', 708, 12, 708, 18),
woosh.Token(woosh.NAME, 'error', 708, 19, 708, 24),
woosh.Token(woosh.NAME, 'as', 708, 25, 708, 27),
woosh.Token(woosh.NAME, 'e', 708, 28, 708, 29),
woosh.Token(woosh.OP, ':', 708, 29, 708, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 708, 30, 709, 0),
woosh.Token(woosh.INDENT, '                ', 709, 0, 709, 16),
woosh.Token(woosh.NAME, 'if', 709, 16, 709, 18),
woosh.Token(woosh.NAME, 'e', 709, 19, 709, 20),
woosh.Token(woosh.OP, '.', 709, 20, 709, 21),
woosh.Token(woosh.NAME, 'args', 709, 21, 709, 25),
woosh.Token(woosh.OP, '[', 709, 25, 709, 26),
woosh.Token(woosh.NUMBER, '0', 709, 26, 709, 27),
woosh.Token(woosh.OP, ']', 709, 27, 709, 28),
woosh.Token(woosh.NAME, 'in', 709, 29, 709, 31),
woosh.Token(woosh.NAME, '_blocking_errnos', 709, 32, 709, 48),
woosh.Token(woosh.OP, ':', 709, 48, 709, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 709, 49, 710, 0),
woosh.Token(woosh.INDENT, '                    ', 710, 0, 710, 20),
woosh.Token(woosh.NAME, 'return', 710, 20, 710, 26),
woosh.Token(woosh.NAME, 'None', 710, 27, 710, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 710, 31, 711, 0),
woosh.Token(woosh.DEDENT, '                ', 711, 0, 711, 16),
woosh.Token(woosh.NAME, 'raise', 711, 16, 711, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 711, 21, 712, 0),
woosh.Token(woosh.DEDENT, '    ', 713, 0, 713, 4),
woosh.Token(woosh.DEDENT, '', 713, 4, 713, 4),
woosh.Token(woosh.DEDENT, '', 713, 4, 713, 4),
woosh.Token(woosh.NAME, 'def', 713, 4, 713, 7),
woosh.Token(woosh.NAME, 'write', 713, 8, 713, 13),
woosh.Token(woosh.OP, '(', 713, 13, 713, 14),
woosh.Token(woosh.NAME, 'self', 713, 14, 713, 18),
woosh.Token(woosh.OP, ',', 713, 18, 713, 19),
woosh.Token(woosh.NAME, 'b', 713, 20, 713, 21),
woosh.Token(woosh.OP, ')', 713, 21, 713, 22),
woosh.Token(woosh.OP, ':', 713, 22, 713, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 713, 23, 714, 0),
woosh.Token(woosh.INDENT, '        ', 714, 0, 714, 8),
woosh.Token(woosh.STRING, '"""Write the given bytes or bytearray object *b* to the socket\r\n        and return the number of bytes written.  This can be less than\r\n        len(b) if not all data could be written.  If the socket is\r\n        non-blocking and no bytes could be written None is returned.\r\n        """', 714, 8, 718, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 718, 11, 719, 0),
woosh.Token(woosh.NAME, 'self', 719, 8, 719, 12),
woosh.Token(woosh.OP, '.', 719, 12, 719, 13),
woosh.Token(woosh.NAME, '_checkClosed', 719, 13, 719, 25),
woosh.Token(woosh.OP, '(', 719, 25, 719, 26),
woosh.Token(woosh.OP, ')', 719, 26, 719, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 719, 27, 720, 0),
woosh.Token(woosh.NAME, 'self', 720, 8, 720, 12),
woosh.Token(woosh.OP, '.', 720, 12, 720, 13),
woosh.Token(woosh.NAME, '_checkWritable', 720, 13, 720, 27),
woosh.Token(woosh.OP, '(', 720, 27, 720, 28),
woosh.Token(woosh.OP, ')', 720, 28, 720, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 29, 721, 0),
woosh.Token(woosh.NAME, 'try', 721, 8, 721, 11),
woosh.Token(woosh.OP, ':', 721, 11, 721, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 12, 722, 0),
woosh.Token(woosh.INDENT, '            ', 722, 0, 722, 12),
woosh.Token(woosh.NAME, 'return', 722, 12, 722, 18),
woosh.Token(woosh.NAME, 'self', 722, 19, 722, 23),
woosh.Token(woosh.OP, '.', 722, 23, 722, 24),
woosh.Token(woosh.NAME, '_sock', 722, 24, 722, 29),
woosh.Token(woosh.OP, '.', 722, 29, 722, 30),
woosh.Token(woosh.NAME, 'send', 722, 30, 722, 34),
woosh.Token(woosh.OP, '(', 722, 34, 722, 35),
woosh.Token(woosh.NAME, 'b', 722, 35, 722, 36),
woosh.Token(woosh.OP, ')', 722, 36, 722, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 722, 37, 723, 0),
woosh.Token(woosh.DEDENT, '        ', 723, 0, 723, 8),
woosh.Token(woosh.NAME, 'except', 723, 8, 723, 14),
woosh.Token(woosh.NAME, 'error', 723, 15, 723, 20),
woosh.Token(woosh.NAME, 'as', 723, 21, 723, 23),
woosh.Token(woosh.NAME, 'e', 723, 24, 723, 25),
woosh.Token(woosh.OP, ':', 723, 25, 723, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 26, 724, 0),
woosh.Token(woosh.COMMENT, '# XXX what about EINTR?', 724, 12, 724, 35),
woosh.Token(woosh.INDENT, '            ', 725, 0, 725, 12),
woosh.Token(woosh.NAME, 'if', 725, 12, 725, 14),
woosh.Token(woosh.NAME, 'e', 725, 15, 725, 16),
woosh.Token(woosh.OP, '.', 725, 16, 725, 17),
woosh.Token(woosh.NAME, 'args', 725, 17, 725, 21),
woosh.Token(woosh.OP, '[', 725, 21, 725, 22),
woosh.Token(woosh.NUMBER, '0', 725, 22, 725, 23),
woosh.Token(woosh.OP, ']', 725, 23, 725, 24),
woosh.Token(woosh.NAME, 'in', 725, 25, 725, 27),
woosh.Token(woosh.NAME, '_blocking_errnos', 725, 28, 725, 44),
woosh.Token(woosh.OP, ':', 725, 44, 725, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 45, 726, 0),
woosh.Token(woosh.INDENT, '                ', 726, 0, 726, 16),
woosh.Token(woosh.NAME, 'return', 726, 16, 726, 22),
woosh.Token(woosh.NAME, 'None', 726, 23, 726, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 726, 27, 727, 0),
woosh.Token(woosh.DEDENT, '            ', 727, 0, 727, 12),
woosh.Token(woosh.NAME, 'raise', 727, 12, 727, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 727, 17, 728, 0),
woosh.Token(woosh.DEDENT, '    ', 729, 0, 729, 4),
woosh.Token(woosh.DEDENT, '', 729, 4, 729, 4),
woosh.Token(woosh.NAME, 'def', 729, 4, 729, 7),
woosh.Token(woosh.NAME, 'readable', 729, 8, 729, 16),
woosh.Token(woosh.OP, '(', 729, 16, 729, 17),
woosh.Token(woosh.NAME, 'self', 729, 17, 729, 21),
woosh.Token(woosh.OP, ')', 729, 21, 729, 22),
woosh.Token(woosh.OP, ':', 729, 22, 729, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 729, 23, 730, 0),
woosh.Token(woosh.INDENT, '        ', 730, 0, 730, 8),
woosh.Token(woosh.STRING, '"""True if the SocketIO is open for reading.\r\n        """', 730, 8, 731, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 731, 11, 732, 0),
woosh.Token(woosh.NAME, 'if', 732, 8, 732, 10),
woosh.Token(woosh.NAME, 'self', 732, 11, 732, 15),
woosh.Token(woosh.OP, '.', 732, 15, 732, 16),
woosh.Token(woosh.NAME, 'closed', 732, 16, 732, 22),
woosh.Token(woosh.OP, ':', 732, 22, 732, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 732, 23, 733, 0),
woosh.Token(woosh.INDENT, '            ', 733, 0, 733, 12),
woosh.Token(woosh.NAME, 'raise', 733, 12, 733, 17),
woosh.Token(woosh.NAME, 'ValueError', 733, 18, 733, 28),
woosh.Token(woosh.OP, '(', 733, 28, 733, 29),
woosh.Token(woosh.STRING, '"I/O operation on closed socket."', 733, 29, 733, 62),
woosh.Token(woosh.OP, ')', 733, 62, 733, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 733, 63, 734, 0),
woosh.Token(woosh.DEDENT, '        ', 734, 0, 734, 8),
woosh.Token(woosh.NAME, 'return', 734, 8, 734, 14),
woosh.Token(woosh.NAME, 'self', 734, 15, 734, 19),
woosh.Token(woosh.OP, '.', 734, 19, 734, 20),
woosh.Token(woosh.NAME, '_reading', 734, 20, 734, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 734, 28, 735, 0),
woosh.Token(woosh.DEDENT, '    ', 736, 0, 736, 4),
woosh.Token(woosh.NAME, 'def', 736, 4, 736, 7),
woosh.Token(woosh.NAME, 'writable', 736, 8, 736, 16),
woosh.Token(woosh.OP, '(', 736, 16, 736, 17),
woosh.Token(woosh.NAME, 'self', 736, 17, 736, 21),
woosh.Token(woosh.OP, ')', 736, 21, 736, 22),
woosh.Token(woosh.OP, ':', 736, 22, 736, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 736, 23, 737, 0),
woosh.Token(woosh.INDENT, '        ', 737, 0, 737, 8),
woosh.Token(woosh.STRING, '"""True if the SocketIO is open for writing.\r\n        """', 737, 8, 738, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 11, 739, 0),
woosh.Token(woosh.NAME, 'if', 739, 8, 739, 10),
woosh.Token(woosh.NAME, 'self', 739, 11, 739, 15),
woosh.Token(woosh.OP, '.', 739, 15, 739, 16),
woosh.Token(woosh.NAME, 'closed', 739, 16, 739, 22),
woosh.Token(woosh.OP, ':', 739, 22, 739, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 23, 740, 0),
woosh.Token(woosh.INDENT, '            ', 740, 0, 740, 12),
woosh.Token(woosh.NAME, 'raise', 740, 12, 740, 17),
woosh.Token(woosh.NAME, 'ValueError', 740, 18, 740, 28),
woosh.Token(woosh.OP, '(', 740, 28, 740, 29),
woosh.Token(woosh.STRING, '"I/O operation on closed socket."', 740, 29, 740, 62),
woosh.Token(woosh.OP, ')', 740, 62, 740, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 740, 63, 741, 0),
woosh.Token(woosh.DEDENT, '        ', 741, 0, 741, 8),
woosh.Token(woosh.NAME, 'return', 741, 8, 741, 14),
woosh.Token(woosh.NAME, 'self', 741, 15, 741, 19),
woosh.Token(woosh.OP, '.', 741, 19, 741, 20),
woosh.Token(woosh.NAME, '_writing', 741, 20, 741, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 28, 742, 0),
woosh.Token(woosh.DEDENT, '    ', 743, 0, 743, 4),
woosh.Token(woosh.NAME, 'def', 743, 4, 743, 7),
woosh.Token(woosh.NAME, 'seekable', 743, 8, 743, 16),
woosh.Token(woosh.OP, '(', 743, 16, 743, 17),
woosh.Token(woosh.NAME, 'self', 743, 17, 743, 21),
woosh.Token(woosh.OP, ')', 743, 21, 743, 22),
woosh.Token(woosh.OP, ':', 743, 22, 743, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 23, 744, 0),
woosh.Token(woosh.INDENT, '        ', 744, 0, 744, 8),
woosh.Token(woosh.STRING, '"""True if the SocketIO is open for seeking.\r\n        """', 744, 8, 745, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 745, 11, 746, 0),
woosh.Token(woosh.NAME, 'if', 746, 8, 746, 10),
woosh.Token(woosh.NAME, 'self', 746, 11, 746, 15),
woosh.Token(woosh.OP, '.', 746, 15, 746, 16),
woosh.Token(woosh.NAME, 'closed', 746, 16, 746, 22),
woosh.Token(woosh.OP, ':', 746, 22, 746, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 23, 747, 0),
woosh.Token(woosh.INDENT, '            ', 747, 0, 747, 12),
woosh.Token(woosh.NAME, 'raise', 747, 12, 747, 17),
woosh.Token(woosh.NAME, 'ValueError', 747, 18, 747, 28),
woosh.Token(woosh.OP, '(', 747, 28, 747, 29),
woosh.Token(woosh.STRING, '"I/O operation on closed socket."', 747, 29, 747, 62),
woosh.Token(woosh.OP, ')', 747, 62, 747, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 63, 748, 0),
woosh.Token(woosh.DEDENT, '        ', 748, 0, 748, 8),
woosh.Token(woosh.NAME, 'return', 748, 8, 748, 14),
woosh.Token(woosh.NAME, 'super', 748, 15, 748, 20),
woosh.Token(woosh.OP, '(', 748, 20, 748, 21),
woosh.Token(woosh.OP, ')', 748, 21, 748, 22),
woosh.Token(woosh.OP, '.', 748, 22, 748, 23),
woosh.Token(woosh.NAME, 'seekable', 748, 23, 748, 31),
woosh.Token(woosh.OP, '(', 748, 31, 748, 32),
woosh.Token(woosh.OP, ')', 748, 32, 748, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 33, 749, 0),
woosh.Token(woosh.DEDENT, '    ', 750, 0, 750, 4),
woosh.Token(woosh.NAME, 'def', 750, 4, 750, 7),
woosh.Token(woosh.NAME, 'fileno', 750, 8, 750, 14),
woosh.Token(woosh.OP, '(', 750, 14, 750, 15),
woosh.Token(woosh.NAME, 'self', 750, 15, 750, 19),
woosh.Token(woosh.OP, ')', 750, 19, 750, 20),
woosh.Token(woosh.OP, ':', 750, 20, 750, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 21, 751, 0),
woosh.Token(woosh.INDENT, '        ', 751, 0, 751, 8),
woosh.Token(woosh.STRING, '"""Return the file descriptor of the underlying socket.\r\n        """', 751, 8, 752, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 752, 11, 753, 0),
woosh.Token(woosh.NAME, 'self', 753, 8, 753, 12),
woosh.Token(woosh.OP, '.', 753, 12, 753, 13),
woosh.Token(woosh.NAME, '_checkClosed', 753, 13, 753, 25),
woosh.Token(woosh.OP, '(', 753, 25, 753, 26),
woosh.Token(woosh.OP, ')', 753, 26, 753, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 27, 754, 0),
woosh.Token(woosh.NAME, 'return', 754, 8, 754, 14),
woosh.Token(woosh.NAME, 'self', 754, 15, 754, 19),
woosh.Token(woosh.OP, '.', 754, 19, 754, 20),
woosh.Token(woosh.NAME, '_sock', 754, 20, 754, 25),
woosh.Token(woosh.OP, '.', 754, 25, 754, 26),
woosh.Token(woosh.NAME, 'fileno', 754, 26, 754, 32),
woosh.Token(woosh.OP, '(', 754, 32, 754, 33),
woosh.Token(woosh.OP, ')', 754, 33, 754, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 34, 755, 0),
woosh.Token(woosh.DEDENT, '    ', 756, 0, 756, 4),
woosh.Token(woosh.OP, '@', 756, 4, 756, 5),
woosh.Token(woosh.NAME, 'property', 756, 5, 756, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 13, 757, 0),
woosh.Token(woosh.NAME, 'def', 757, 4, 757, 7),
woosh.Token(woosh.NAME, 'name', 757, 8, 757, 12),
woosh.Token(woosh.OP, '(', 757, 12, 757, 13),
woosh.Token(woosh.NAME, 'self', 757, 13, 757, 17),
woosh.Token(woosh.OP, ')', 757, 17, 757, 18),
woosh.Token(woosh.OP, ':', 757, 18, 757, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 19, 758, 0),
woosh.Token(woosh.INDENT, '        ', 758, 0, 758, 8),
woosh.Token(woosh.NAME, 'if', 758, 8, 758, 10),
woosh.Token(woosh.NAME, 'not', 758, 11, 758, 14),
woosh.Token(woosh.NAME, 'self', 758, 15, 758, 19),
woosh.Token(woosh.OP, '.', 758, 19, 758, 20),
woosh.Token(woosh.NAME, 'closed', 758, 20, 758, 26),
woosh.Token(woosh.OP, ':', 758, 26, 758, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 758, 27, 759, 0),
woosh.Token(woosh.INDENT, '            ', 759, 0, 759, 12),
woosh.Token(woosh.NAME, 'return', 759, 12, 759, 18),
woosh.Token(woosh.NAME, 'self', 759, 19, 759, 23),
woosh.Token(woosh.OP, '.', 759, 23, 759, 24),
woosh.Token(woosh.NAME, 'fileno', 759, 24, 759, 30),
woosh.Token(woosh.OP, '(', 759, 30, 759, 31),
woosh.Token(woosh.OP, ')', 759, 31, 759, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 759, 32, 760, 0),
woosh.Token(woosh.DEDENT, '        ', 760, 0, 760, 8),
woosh.Token(woosh.NAME, 'else', 760, 8, 760, 12),
woosh.Token(woosh.OP, ':', 760, 12, 760, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 760, 13, 761, 0),
woosh.Token(woosh.INDENT, '            ', 761, 0, 761, 12),
woosh.Token(woosh.NAME, 'return', 761, 12, 761, 18),
woosh.Token(woosh.OP, '-', 761, 19, 761, 20),
woosh.Token(woosh.NUMBER, '1', 761, 20, 761, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 761, 21, 762, 0),
woosh.Token(woosh.DEDENT, '    ', 763, 0, 763, 4),
woosh.Token(woosh.DEDENT, '', 763, 4, 763, 4),
woosh.Token(woosh.OP, '@', 763, 4, 763, 5),
woosh.Token(woosh.NAME, 'property', 763, 5, 763, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 763, 13, 764, 0),
woosh.Token(woosh.NAME, 'def', 764, 4, 764, 7),
woosh.Token(woosh.NAME, 'mode', 764, 8, 764, 12),
woosh.Token(woosh.OP, '(', 764, 12, 764, 13),
woosh.Token(woosh.NAME, 'self', 764, 13, 764, 17),
woosh.Token(woosh.OP, ')', 764, 17, 764, 18),
woosh.Token(woosh.OP, ':', 764, 18, 764, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 764, 19, 765, 0),
woosh.Token(woosh.INDENT, '        ', 765, 0, 765, 8),
woosh.Token(woosh.NAME, 'return', 765, 8, 765, 14),
woosh.Token(woosh.NAME, 'self', 765, 15, 765, 19),
woosh.Token(woosh.OP, '.', 765, 19, 765, 20),
woosh.Token(woosh.NAME, '_mode', 765, 20, 765, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 765, 25, 766, 0),
woosh.Token(woosh.DEDENT, '    ', 767, 0, 767, 4),
woosh.Token(woosh.NAME, 'def', 767, 4, 767, 7),
woosh.Token(woosh.NAME, 'close', 767, 8, 767, 13),
woosh.Token(woosh.OP, '(', 767, 13, 767, 14),
woosh.Token(woosh.NAME, 'self', 767, 14, 767, 18),
woosh.Token(woosh.OP, ')', 767, 18, 767, 19),
woosh.Token(woosh.OP, ':', 767, 19, 767, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 767, 20, 768, 0),
woosh.Token(woosh.INDENT, '        ', 768, 0, 768, 8),
woosh.Token(woosh.STRING, '"""Close the SocketIO object.  This doesn\'t close the underlying\r\n        socket, except if all references to it have disappeared.\r\n        """', 768, 8, 770, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 770, 11, 771, 0),
woosh.Token(woosh.NAME, 'if', 771, 8, 771, 10),
woosh.Token(woosh.NAME, 'self', 771, 11, 771, 15),
woosh.Token(woosh.OP, '.', 771, 15, 771, 16),
woosh.Token(woosh.NAME, 'closed', 771, 16, 771, 22),
woosh.Token(woosh.OP, ':', 771, 22, 771, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 771, 23, 772, 0),
woosh.Token(woosh.INDENT, '            ', 772, 0, 772, 12),
woosh.Token(woosh.NAME, 'return', 772, 12, 772, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 772, 18, 773, 0),
woosh.Token(woosh.DEDENT, '        ', 773, 0, 773, 8),
woosh.Token(woosh.NAME, 'io', 773, 8, 773, 10),
woosh.Token(woosh.OP, '.', 773, 10, 773, 11),
woosh.Token(woosh.NAME, 'RawIOBase', 773, 11, 773, 20),
woosh.Token(woosh.OP, '.', 773, 20, 773, 21),
woosh.Token(woosh.NAME, 'close', 773, 21, 773, 26),
woosh.Token(woosh.OP, '(', 773, 26, 773, 27),
woosh.Token(woosh.NAME, 'self', 773, 27, 773, 31),
woosh.Token(woosh.OP, ')', 773, 31, 773, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 773, 32, 774, 0),
woosh.Token(woosh.NAME, 'self', 774, 8, 774, 12),
woosh.Token(woosh.OP, '.', 774, 12, 774, 13),
woosh.Token(woosh.NAME, '_sock', 774, 13, 774, 18),
woosh.Token(woosh.OP, '.', 774, 18, 774, 19),
woosh.Token(woosh.NAME, '_decref_socketios', 774, 19, 774, 36),
woosh.Token(woosh.OP, '(', 774, 36, 774, 37),
woosh.Token(woosh.OP, ')', 774, 37, 774, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 774, 38, 775, 0),
woosh.Token(woosh.NAME, 'self', 775, 8, 775, 12),
woosh.Token(woosh.OP, '.', 775, 12, 775, 13),
woosh.Token(woosh.NAME, '_sock', 775, 13, 775, 18),
woosh.Token(woosh.OP, '=', 775, 19, 775, 20),
woosh.Token(woosh.NAME, 'None', 775, 21, 775, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 775, 25, 776, 0),
woosh.Token(woosh.DEDENT, '', 778, 0, 778, 0),
woosh.Token(woosh.DEDENT, '', 778, 0, 778, 0),
woosh.Token(woosh.NAME, 'def', 778, 0, 778, 3),
woosh.Token(woosh.NAME, 'getfqdn', 778, 4, 778, 11),
woosh.Token(woosh.OP, '(', 778, 11, 778, 12),
woosh.Token(woosh.NAME, 'name', 778, 12, 778, 16),
woosh.Token(woosh.OP, '=', 778, 16, 778, 17),
woosh.Token(woosh.STRING, "''", 778, 17, 778, 19),
woosh.Token(woosh.OP, ')', 778, 19, 778, 20),
woosh.Token(woosh.OP, ':', 778, 20, 778, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 778, 21, 779, 0),
woosh.Token(woosh.INDENT, '    ', 779, 0, 779, 4),
woosh.Token(woosh.STRING, '"""Get fully qualified domain name from name.\r\n\r\n    An empty argument is interpreted as meaning the local host.\r\n\r\n    First the hostname returned by gethostbyaddr() is checked, then\r\n    possibly existing aliases. In case no FQDN is available, hostname\r\n    from gethostname() is returned.\r\n    """', 779, 4, 786, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 786, 7, 787, 0),
woosh.Token(woosh.NAME, 'name', 787, 4, 787, 8),
woosh.Token(woosh.OP, '=', 787, 9, 787, 10),
woosh.Token(woosh.NAME, 'name', 787, 11, 787, 15),
woosh.Token(woosh.OP, '.', 787, 15, 787, 16),
woosh.Token(woosh.NAME, 'strip', 787, 16, 787, 21),
woosh.Token(woosh.OP, '(', 787, 21, 787, 22),
woosh.Token(woosh.OP, ')', 787, 22, 787, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 23, 788, 0),
woosh.Token(woosh.NAME, 'if', 788, 4, 788, 6),
woosh.Token(woosh.NAME, 'not', 788, 7, 788, 10),
woosh.Token(woosh.NAME, 'name', 788, 11, 788, 15),
woosh.Token(woosh.NAME, 'or', 788, 16, 788, 18),
woosh.Token(woosh.NAME, 'name', 788, 19, 788, 23),
woosh.Token(woosh.OP, '==', 788, 24, 788, 26),
woosh.Token(woosh.STRING, "'0.0.0.0'", 788, 27, 788, 36),
woosh.Token(woosh.OP, ':', 788, 36, 788, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 788, 37, 789, 0),
woosh.Token(woosh.INDENT, '        ', 789, 0, 789, 8),
woosh.Token(woosh.NAME, 'name', 789, 8, 789, 12),
woosh.Token(woosh.OP, '=', 789, 13, 789, 14),
woosh.Token(woosh.NAME, 'gethostname', 789, 15, 789, 26),
woosh.Token(woosh.OP, '(', 789, 26, 789, 27),
woosh.Token(woosh.OP, ')', 789, 27, 789, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 789, 28, 790, 0),
woosh.Token(woosh.DEDENT, '    ', 790, 0, 790, 4),
woosh.Token(woosh.NAME, 'try', 790, 4, 790, 7),
woosh.Token(woosh.OP, ':', 790, 7, 790, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 8, 791, 0),
woosh.Token(woosh.INDENT, '        ', 791, 0, 791, 8),
woosh.Token(woosh.NAME, 'hostname', 791, 8, 791, 16),
woosh.Token(woosh.OP, ',', 791, 16, 791, 17),
woosh.Token(woosh.NAME, 'aliases', 791, 18, 791, 25),
woosh.Token(woosh.OP, ',', 791, 25, 791, 26),
woosh.Token(woosh.NAME, 'ipaddrs', 791, 27, 791, 34),
woosh.Token(woosh.OP, '=', 791, 35, 791, 36),
woosh.Token(woosh.NAME, 'gethostbyaddr', 791, 37, 791, 50),
woosh.Token(woosh.OP, '(', 791, 50, 791, 51),
woosh.Token(woosh.NAME, 'name', 791, 51, 791, 55),
woosh.Token(woosh.OP, ')', 791, 55, 791, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 791, 56, 792, 0),
woosh.Token(woosh.DEDENT, '    ', 792, 0, 792, 4),
woosh.Token(woosh.NAME, 'except', 792, 4, 792, 10),
woosh.Token(woosh.NAME, 'error', 792, 11, 792, 16),
woosh.Token(woosh.OP, ':', 792, 16, 792, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 17, 793, 0),
woosh.Token(woosh.INDENT, '        ', 793, 0, 793, 8),
woosh.Token(woosh.NAME, 'pass', 793, 8, 793, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 793, 12, 794, 0),
woosh.Token(woosh.DEDENT, '    ', 794, 0, 794, 4),
woosh.Token(woosh.NAME, 'else', 794, 4, 794, 8),
woosh.Token(woosh.OP, ':', 794, 8, 794, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 794, 9, 795, 0),
woosh.Token(woosh.INDENT, '        ', 795, 0, 795, 8),
woosh.Token(woosh.NAME, 'aliases', 795, 8, 795, 15),
woosh.Token(woosh.OP, '.', 795, 15, 795, 16),
woosh.Token(woosh.NAME, 'insert', 795, 16, 795, 22),
woosh.Token(woosh.OP, '(', 795, 22, 795, 23),
woosh.Token(woosh.NUMBER, '0', 795, 23, 795, 24),
woosh.Token(woosh.OP, ',', 795, 24, 795, 25),
woosh.Token(woosh.NAME, 'hostname', 795, 26, 795, 34),
woosh.Token(woosh.OP, ')', 795, 34, 795, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 795, 35, 796, 0),
woosh.Token(woosh.NAME, 'for', 796, 8, 796, 11),
woosh.Token(woosh.NAME, 'name', 796, 12, 796, 16),
woosh.Token(woosh.NAME, 'in', 796, 17, 796, 19),
woosh.Token(woosh.NAME, 'aliases', 796, 20, 796, 27),
woosh.Token(woosh.OP, ':', 796, 27, 796, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 28, 797, 0),
woosh.Token(woosh.INDENT, '            ', 797, 0, 797, 12),
woosh.Token(woosh.NAME, 'if', 797, 12, 797, 14),
woosh.Token(woosh.STRING, "'.'", 797, 15, 797, 18),
woosh.Token(woosh.NAME, 'in', 797, 19, 797, 21),
woosh.Token(woosh.NAME, 'name', 797, 22, 797, 26),
woosh.Token(woosh.OP, ':', 797, 26, 797, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 27, 798, 0),
woosh.Token(woosh.INDENT, '                ', 798, 0, 798, 16),
woosh.Token(woosh.NAME, 'break', 798, 16, 798, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 21, 799, 0),
woosh.Token(woosh.DEDENT, '        ', 799, 0, 799, 8),
woosh.Token(woosh.DEDENT, '', 799, 8, 799, 8),
woosh.Token(woosh.NAME, 'else', 799, 8, 799, 12),
woosh.Token(woosh.OP, ':', 799, 12, 799, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 799, 13, 800, 0),
woosh.Token(woosh.INDENT, '            ', 800, 0, 800, 12),
woosh.Token(woosh.NAME, 'name', 800, 12, 800, 16),
woosh.Token(woosh.OP, '=', 800, 17, 800, 18),
woosh.Token(woosh.NAME, 'hostname', 800, 19, 800, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 27, 801, 0),
woosh.Token(woosh.DEDENT, '    ', 801, 0, 801, 4),
woosh.Token(woosh.DEDENT, '', 801, 4, 801, 4),
woosh.Token(woosh.NAME, 'return', 801, 4, 801, 10),
woosh.Token(woosh.NAME, 'name', 801, 11, 801, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 801, 15, 802, 0),
woosh.Token(woosh.DEDENT, '', 804, 0, 804, 0),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 804, 0, 804, 23),
woosh.Token(woosh.OP, '=', 804, 24, 804, 25),
woosh.Token(woosh.NAME, 'object', 804, 26, 804, 32),
woosh.Token(woosh.OP, '(', 804, 32, 804, 33),
woosh.Token(woosh.OP, ')', 804, 33, 804, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 804, 34, 805, 0),
woosh.Token(woosh.NAME, 'def', 806, 0, 806, 3),
woosh.Token(woosh.NAME, 'create_connection', 806, 4, 806, 21),
woosh.Token(woosh.OP, '(', 806, 21, 806, 22),
woosh.Token(woosh.NAME, 'address', 806, 22, 806, 29),
woosh.Token(woosh.OP, ',', 806, 29, 806, 30),
woosh.Token(woosh.NAME, 'timeout', 806, 31, 806, 38),
woosh.Token(woosh.OP, '=', 806, 38, 806, 39),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 806, 39, 806, 62),
woosh.Token(woosh.OP, ',', 806, 62, 806, 63),
woosh.Token(woosh.NAME, 'source_address', 807, 22, 807, 36),
woosh.Token(woosh.OP, '=', 807, 36, 807, 37),
woosh.Token(woosh.NAME, 'None', 807, 37, 807, 41),
woosh.Token(woosh.OP, ')', 807, 41, 807, 42),
woosh.Token(woosh.OP, ':', 807, 42, 807, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 43, 808, 0),
woosh.Token(woosh.INDENT, '    ', 808, 0, 808, 4),
woosh.Token(woosh.STRING, '"""Connect to *address* and return the socket object.\r\n\r\n    Convenience function.  Connect to *address* (a 2-tuple ``(host,\r\n    port)``) and return the socket object.  Passing the optional\r\n    *timeout* parameter will set the timeout on the socket instance\r\n    before attempting to connect.  If no *timeout* is supplied, the\r\n    global default timeout setting returned by :func:`getdefaulttimeout`\r\n    is used.  If *source_address* is set it must be a tuple of (host, port)\r\n    for the socket to bind as a source address before making the connection.\r\n    A host of \'\' or port 0 tells the OS to use the default.\r\n    """', 808, 4, 818, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 818, 7, 819, 0),
woosh.Token(woosh.NAME, 'host', 820, 4, 820, 8),
woosh.Token(woosh.OP, ',', 820, 8, 820, 9),
woosh.Token(woosh.NAME, 'port', 820, 10, 820, 14),
woosh.Token(woosh.OP, '=', 820, 15, 820, 16),
woosh.Token(woosh.NAME, 'address', 820, 17, 820, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 820, 24, 821, 0),
woosh.Token(woosh.NAME, 'err', 821, 4, 821, 7),
woosh.Token(woosh.OP, '=', 821, 8, 821, 9),
woosh.Token(woosh.NAME, 'None', 821, 10, 821, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 821, 14, 822, 0),
woosh.Token(woosh.NAME, 'for', 822, 4, 822, 7),
woosh.Token(woosh.NAME, 'res', 822, 8, 822, 11),
woosh.Token(woosh.NAME, 'in', 822, 12, 822, 14),
woosh.Token(woosh.NAME, 'getaddrinfo', 822, 15, 822, 26),
woosh.Token(woosh.OP, '(', 822, 26, 822, 27),
woosh.Token(woosh.NAME, 'host', 822, 27, 822, 31),
woosh.Token(woosh.OP, ',', 822, 31, 822, 32),
woosh.Token(woosh.NAME, 'port', 822, 33, 822, 37),
woosh.Token(woosh.OP, ',', 822, 37, 822, 38),
woosh.Token(woosh.NUMBER, '0', 822, 39, 822, 40),
woosh.Token(woosh.OP, ',', 822, 40, 822, 41),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 822, 42, 822, 53),
woosh.Token(woosh.OP, ')', 822, 53, 822, 54),
woosh.Token(woosh.OP, ':', 822, 54, 822, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 55, 823, 0),
woosh.Token(woosh.INDENT, '        ', 823, 0, 823, 8),
woosh.Token(woosh.NAME, 'af', 823, 8, 823, 10),
woosh.Token(woosh.OP, ',', 823, 10, 823, 11),
woosh.Token(woosh.NAME, 'socktype', 823, 12, 823, 20),
woosh.Token(woosh.OP, ',', 823, 20, 823, 21),
woosh.Token(woosh.NAME, 'proto', 823, 22, 823, 27),
woosh.Token(woosh.OP, ',', 823, 27, 823, 28),
woosh.Token(woosh.NAME, 'canonname', 823, 29, 823, 38),
woosh.Token(woosh.OP, ',', 823, 38, 823, 39),
woosh.Token(woosh.NAME, 'sa', 823, 40, 823, 42),
woosh.Token(woosh.OP, '=', 823, 43, 823, 44),
woosh.Token(woosh.NAME, 'res', 823, 45, 823, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 823, 48, 824, 0),
woosh.Token(woosh.NAME, 'sock', 824, 8, 824, 12),
woosh.Token(woosh.OP, '=', 824, 13, 824, 14),
woosh.Token(woosh.NAME, 'None', 824, 15, 824, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 19, 825, 0),
woosh.Token(woosh.NAME, 'try', 825, 8, 825, 11),
woosh.Token(woosh.OP, ':', 825, 11, 825, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 825, 12, 826, 0),
woosh.Token(woosh.INDENT, '            ', 826, 0, 826, 12),
woosh.Token(woosh.NAME, 'sock', 826, 12, 826, 16),
woosh.Token(woosh.OP, '=', 826, 17, 826, 18),
woosh.Token(woosh.NAME, 'socket', 826, 19, 826, 25),
woosh.Token(woosh.OP, '(', 826, 25, 826, 26),
woosh.Token(woosh.NAME, 'af', 826, 26, 826, 28),
woosh.Token(woosh.OP, ',', 826, 28, 826, 29),
woosh.Token(woosh.NAME, 'socktype', 826, 30, 826, 38),
woosh.Token(woosh.OP, ',', 826, 38, 826, 39),
woosh.Token(woosh.NAME, 'proto', 826, 40, 826, 45),
woosh.Token(woosh.OP, ')', 826, 45, 826, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 826, 46, 827, 0),
woosh.Token(woosh.NAME, 'if', 827, 12, 827, 14),
woosh.Token(woosh.NAME, 'timeout', 827, 15, 827, 22),
woosh.Token(woosh.NAME, 'is', 827, 23, 827, 25),
woosh.Token(woosh.NAME, 'not', 827, 26, 827, 29),
woosh.Token(woosh.NAME, '_GLOBAL_DEFAULT_TIMEOUT', 827, 30, 827, 53),
woosh.Token(woosh.OP, ':', 827, 53, 827, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 827, 54, 828, 0),
woosh.Token(woosh.INDENT, '                ', 828, 0, 828, 16),
woosh.Token(woosh.NAME, 'sock', 828, 16, 828, 20),
woosh.Token(woosh.OP, '.', 828, 20, 828, 21),
woosh.Token(woosh.NAME, 'settimeout', 828, 21, 828, 31),
woosh.Token(woosh.OP, '(', 828, 31, 828, 32),
woosh.Token(woosh.NAME, 'timeout', 828, 32, 828, 39),
woosh.Token(woosh.OP, ')', 828, 39, 828, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 828, 40, 829, 0),
woosh.Token(woosh.DEDENT, '            ', 829, 0, 829, 12),
woosh.Token(woosh.NAME, 'if', 829, 12, 829, 14),
woosh.Token(woosh.NAME, 'source_address', 829, 15, 829, 29),
woosh.Token(woosh.OP, ':', 829, 29, 829, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 829, 30, 830, 0),
woosh.Token(woosh.INDENT, '                ', 830, 0, 830, 16),
woosh.Token(woosh.NAME, 'sock', 830, 16, 830, 20),
woosh.Token(woosh.OP, '.', 830, 20, 830, 21),
woosh.Token(woosh.NAME, 'bind', 830, 21, 830, 25),
woosh.Token(woosh.OP, '(', 830, 25, 830, 26),
woosh.Token(woosh.NAME, 'source_address', 830, 26, 830, 40),
woosh.Token(woosh.OP, ')', 830, 40, 830, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 830, 41, 831, 0),
woosh.Token(woosh.DEDENT, '            ', 831, 0, 831, 12),
woosh.Token(woosh.NAME, 'sock', 831, 12, 831, 16),
woosh.Token(woosh.OP, '.', 831, 16, 831, 17),
woosh.Token(woosh.NAME, 'connect', 831, 17, 831, 24),
woosh.Token(woosh.OP, '(', 831, 24, 831, 25),
woosh.Token(woosh.NAME, 'sa', 831, 25, 831, 27),
woosh.Token(woosh.OP, ')', 831, 27, 831, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 831, 28, 832, 0),
woosh.Token(woosh.COMMENT, '# Break explicitly a reference cycle', 832, 12, 832, 48),
woosh.Token(woosh.NAME, 'err', 833, 12, 833, 15),
woosh.Token(woosh.OP, '=', 833, 16, 833, 17),
woosh.Token(woosh.NAME, 'None', 833, 18, 833, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 833, 22, 834, 0),
woosh.Token(woosh.NAME, 'return', 834, 12, 834, 18),
woosh.Token(woosh.NAME, 'sock', 834, 19, 834, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 834, 23, 835, 0),
woosh.Token(woosh.DEDENT, '        ', 836, 0, 836, 8),
woosh.Token(woosh.NAME, 'except', 836, 8, 836, 14),
woosh.Token(woosh.NAME, 'error', 836, 15, 836, 20),
woosh.Token(woosh.NAME, 'as', 836, 21, 836, 23),
woosh.Token(woosh.NAME, '_', 836, 24, 836, 25),
woosh.Token(woosh.OP, ':', 836, 25, 836, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 836, 26, 837, 0),
woosh.Token(woosh.INDENT, '            ', 837, 0, 837, 12),
woosh.Token(woosh.NAME, 'err', 837, 12, 837, 15),
woosh.Token(woosh.OP, '=', 837, 16, 837, 17),
woosh.Token(woosh.NAME, '_', 837, 18, 837, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 837, 19, 838, 0),
woosh.Token(woosh.NAME, 'if', 838, 12, 838, 14),
woosh.Token(woosh.NAME, 'sock', 838, 15, 838, 19),
woosh.Token(woosh.NAME, 'is', 838, 20, 838, 22),
woosh.Token(woosh.NAME, 'not', 838, 23, 838, 26),
woosh.Token(woosh.NAME, 'None', 838, 27, 838, 31),
woosh.Token(woosh.OP, ':', 838, 31, 838, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 838, 32, 839, 0),
woosh.Token(woosh.INDENT, '                ', 839, 0, 839, 16),
woosh.Token(woosh.NAME, 'sock', 839, 16, 839, 20),
woosh.Token(woosh.OP, '.', 839, 20, 839, 21),
woosh.Token(woosh.NAME, 'close', 839, 21, 839, 26),
woosh.Token(woosh.OP, '(', 839, 26, 839, 27),
woosh.Token(woosh.OP, ')', 839, 27, 839, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 839, 28, 840, 0),
woosh.Token(woosh.DEDENT, '    ', 841, 0, 841, 4),
woosh.Token(woosh.DEDENT, '', 841, 4, 841, 4),
woosh.Token(woosh.DEDENT, '', 841, 4, 841, 4),
woosh.Token(woosh.NAME, 'if', 841, 4, 841, 6),
woosh.Token(woosh.NAME, 'err', 841, 7, 841, 10),
woosh.Token(woosh.NAME, 'is', 841, 11, 841, 13),
woosh.Token(woosh.NAME, 'not', 841, 14, 841, 17),
woosh.Token(woosh.NAME, 'None', 841, 18, 841, 22),
woosh.Token(woosh.OP, ':', 841, 22, 841, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 23, 842, 0),
woosh.Token(woosh.INDENT, '        ', 842, 0, 842, 8),
woosh.Token(woosh.NAME, 'try', 842, 8, 842, 11),
woosh.Token(woosh.OP, ':', 842, 11, 842, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 12, 843, 0),
woosh.Token(woosh.INDENT, '            ', 843, 0, 843, 12),
woosh.Token(woosh.NAME, 'raise', 843, 12, 843, 17),
woosh.Token(woosh.NAME, 'err', 843, 18, 843, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 21, 844, 0),
woosh.Token(woosh.DEDENT, '        ', 844, 0, 844, 8),
woosh.Token(woosh.NAME, 'finally', 844, 8, 844, 15),
woosh.Token(woosh.OP, ':', 844, 15, 844, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 844, 16, 845, 0),
woosh.Token(woosh.COMMENT, '# Break explicitly a reference cycle', 845, 12, 845, 48),
woosh.Token(woosh.INDENT, '            ', 846, 0, 846, 12),
woosh.Token(woosh.NAME, 'err', 846, 12, 846, 15),
woosh.Token(woosh.OP, '=', 846, 16, 846, 17),
woosh.Token(woosh.NAME, 'None', 846, 18, 846, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 846, 22, 847, 0),
woosh.Token(woosh.DEDENT, '    ', 847, 0, 847, 4),
woosh.Token(woosh.DEDENT, '', 847, 4, 847, 4),
woosh.Token(woosh.NAME, 'else', 847, 4, 847, 8),
woosh.Token(woosh.OP, ':', 847, 8, 847, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 847, 9, 848, 0),
woosh.Token(woosh.INDENT, '        ', 848, 0, 848, 8),
woosh.Token(woosh.NAME, 'raise', 848, 8, 848, 13),
woosh.Token(woosh.NAME, 'error', 848, 14, 848, 19),
woosh.Token(woosh.OP, '(', 848, 19, 848, 20),
woosh.Token(woosh.STRING, '"getaddrinfo returns an empty list"', 848, 20, 848, 55),
woosh.Token(woosh.OP, ')', 848, 55, 848, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 56, 849, 0),
woosh.Token(woosh.DEDENT, '', 851, 0, 851, 0),
woosh.Token(woosh.DEDENT, '', 851, 0, 851, 0),
woosh.Token(woosh.NAME, 'def', 851, 0, 851, 3),
woosh.Token(woosh.NAME, 'has_dualstack_ipv6', 851, 4, 851, 22),
woosh.Token(woosh.OP, '(', 851, 22, 851, 23),
woosh.Token(woosh.OP, ')', 851, 23, 851, 24),
woosh.Token(woosh.OP, ':', 851, 24, 851, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 851, 25, 852, 0),
woosh.Token(woosh.INDENT, '    ', 852, 0, 852, 4),
woosh.Token(woosh.STRING, '"""Return True if the platform supports creating a SOCK_STREAM socket\r\n    which can handle both AF_INET and AF_INET6 (IPv4 / IPv6) connections.\r\n    """', 852, 4, 854, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 7, 855, 0),
woosh.Token(woosh.NAME, 'if', 855, 4, 855, 6),
woosh.Token(woosh.NAME, 'not', 855, 7, 855, 10),
woosh.Token(woosh.NAME, 'has_ipv6', 855, 11, 855, 19),
woosh.Token(woosh.NAME, 'or', 856, 12, 856, 14),
woosh.Token(woosh.NAME, 'not', 856, 15, 856, 18),
woosh.Token(woosh.NAME, 'hasattr', 856, 19, 856, 26),
woosh.Token(woosh.OP, '(', 856, 26, 856, 27),
woosh.Token(woosh.NAME, '_socket', 856, 27, 856, 34),
woosh.Token(woosh.OP, ',', 856, 34, 856, 35),
woosh.Token(woosh.STRING, "'IPPROTO_IPV6'", 856, 36, 856, 50),
woosh.Token(woosh.OP, ')', 856, 50, 856, 51),
woosh.Token(woosh.NAME, 'or', 857, 12, 857, 14),
woosh.Token(woosh.NAME, 'not', 857, 15, 857, 18),
woosh.Token(woosh.NAME, 'hasattr', 857, 19, 857, 26),
woosh.Token(woosh.OP, '(', 857, 26, 857, 27),
woosh.Token(woosh.NAME, '_socket', 857, 27, 857, 34),
woosh.Token(woosh.OP, ',', 857, 34, 857, 35),
woosh.Token(woosh.STRING, "'IPV6_V6ONLY'", 857, 36, 857, 49),
woosh.Token(woosh.OP, ')', 857, 49, 857, 50),
woosh.Token(woosh.OP, ':', 857, 50, 857, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 51, 858, 0),
woosh.Token(woosh.INDENT, '        ', 858, 0, 858, 8),
woosh.Token(woosh.NAME, 'return', 858, 8, 858, 14),
woosh.Token(woosh.NAME, 'False', 858, 15, 858, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 20, 859, 0),
woosh.Token(woosh.DEDENT, '    ', 859, 0, 859, 4),
woosh.Token(woosh.NAME, 'try', 859, 4, 859, 7),
woosh.Token(woosh.OP, ':', 859, 7, 859, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 8, 860, 0),
woosh.Token(woosh.INDENT, '        ', 860, 0, 860, 8),
woosh.Token(woosh.NAME, 'with', 860, 8, 860, 12),
woosh.Token(woosh.NAME, 'socket', 860, 13, 860, 19),
woosh.Token(woosh.OP, '(', 860, 19, 860, 20),
woosh.Token(woosh.NAME, 'AF_INET6', 860, 20, 860, 28),
woosh.Token(woosh.OP, ',', 860, 28, 860, 29),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 860, 30, 860, 41),
woosh.Token(woosh.OP, ')', 860, 41, 860, 42),
woosh.Token(woosh.NAME, 'as', 860, 43, 860, 45),
woosh.Token(woosh.NAME, 'sock', 860, 46, 860, 50),
woosh.Token(woosh.OP, ':', 860, 50, 860, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 860, 51, 861, 0),
woosh.Token(woosh.INDENT, '            ', 861, 0, 861, 12),
woosh.Token(woosh.NAME, 'sock', 861, 12, 861, 16),
woosh.Token(woosh.OP, '.', 861, 16, 861, 17),
woosh.Token(woosh.NAME, 'setsockopt', 861, 17, 861, 27),
woosh.Token(woosh.OP, '(', 861, 27, 861, 28),
woosh.Token(woosh.NAME, 'IPPROTO_IPV6', 861, 28, 861, 40),
woosh.Token(woosh.OP, ',', 861, 40, 861, 41),
woosh.Token(woosh.NAME, 'IPV6_V6ONLY', 861, 42, 861, 53),
woosh.Token(woosh.OP, ',', 861, 53, 861, 54),
woosh.Token(woosh.NUMBER, '0', 861, 55, 861, 56),
woosh.Token(woosh.OP, ')', 861, 56, 861, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 57, 862, 0),
woosh.Token(woosh.NAME, 'return', 862, 12, 862, 18),
woosh.Token(woosh.NAME, 'True', 862, 19, 862, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 862, 23, 863, 0),
woosh.Token(woosh.DEDENT, '    ', 863, 0, 863, 4),
woosh.Token(woosh.DEDENT, '', 863, 4, 863, 4),
woosh.Token(woosh.NAME, 'except', 863, 4, 863, 10),
woosh.Token(woosh.NAME, 'error', 863, 11, 863, 16),
woosh.Token(woosh.OP, ':', 863, 16, 863, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 863, 17, 864, 0),
woosh.Token(woosh.INDENT, '        ', 864, 0, 864, 8),
woosh.Token(woosh.NAME, 'return', 864, 8, 864, 14),
woosh.Token(woosh.NAME, 'False', 864, 15, 864, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 864, 20, 865, 0),
woosh.Token(woosh.DEDENT, '', 867, 0, 867, 0),
woosh.Token(woosh.DEDENT, '', 867, 0, 867, 0),
woosh.Token(woosh.NAME, 'def', 867, 0, 867, 3),
woosh.Token(woosh.NAME, 'create_server', 867, 4, 867, 17),
woosh.Token(woosh.OP, '(', 867, 17, 867, 18),
woosh.Token(woosh.NAME, 'address', 867, 18, 867, 25),
woosh.Token(woosh.OP, ',', 867, 25, 867, 26),
woosh.Token(woosh.OP, '*', 867, 27, 867, 28),
woosh.Token(woosh.OP, ',', 867, 28, 867, 29),
woosh.Token(woosh.NAME, 'family', 867, 30, 867, 36),
woosh.Token(woosh.OP, '=', 867, 36, 867, 37),
woosh.Token(woosh.NAME, 'AF_INET', 867, 37, 867, 44),
woosh.Token(woosh.OP, ',', 867, 44, 867, 45),
woosh.Token(woosh.NAME, 'backlog', 867, 46, 867, 53),
woosh.Token(woosh.OP, '=', 867, 53, 867, 54),
woosh.Token(woosh.NAME, 'None', 867, 54, 867, 58),
woosh.Token(woosh.OP, ',', 867, 58, 867, 59),
woosh.Token(woosh.NAME, 'reuse_port', 867, 60, 867, 70),
woosh.Token(woosh.OP, '=', 867, 70, 867, 71),
woosh.Token(woosh.NAME, 'False', 867, 71, 867, 76),
woosh.Token(woosh.OP, ',', 867, 76, 867, 77),
woosh.Token(woosh.NAME, 'dualstack_ipv6', 868, 18, 868, 32),
woosh.Token(woosh.OP, '=', 868, 32, 868, 33),
woosh.Token(woosh.NAME, 'False', 868, 33, 868, 38),
woosh.Token(woosh.OP, ')', 868, 38, 868, 39),
woosh.Token(woosh.OP, ':', 868, 39, 868, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 868, 40, 869, 0),
woosh.Token(woosh.INDENT, '    ', 869, 0, 869, 4),
woosh.Token(woosh.STRING, '"""Convenience function which creates a SOCK_STREAM type socket\r\n    bound to *address* (a 2-tuple (host, port)) and return the socket\r\n    object.\r\n\r\n    *family* should be either AF_INET or AF_INET6.\r\n    *backlog* is the queue size passed to socket.listen().\r\n    *reuse_port* dictates whether to use the SO_REUSEPORT socket option.\r\n    *dualstack_ipv6*: if true and the platform supports it, it will\r\n    create an AF_INET6 socket able to accept both IPv4 or IPv6\r\n    connections. When false it will explicitly disable this option on\r\n    platforms that enable it by default (e.g. Linux).\r\n\r\n    >>> with create_server((\'\', 8000)) as server:\r\n    ...     while True:\r\n    ...         conn, addr = server.accept()\r\n    ...         # handle new connection\r\n    """', 869, 4, 885, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 885, 7, 886, 0),
woosh.Token(woosh.NAME, 'if', 886, 4, 886, 6),
woosh.Token(woosh.NAME, 'reuse_port', 886, 7, 886, 17),
woosh.Token(woosh.NAME, 'and', 886, 18, 886, 21),
woosh.Token(woosh.NAME, 'not', 886, 22, 886, 25),
woosh.Token(woosh.NAME, 'hasattr', 886, 26, 886, 33),
woosh.Token(woosh.OP, '(', 886, 33, 886, 34),
woosh.Token(woosh.NAME, '_socket', 886, 34, 886, 41),
woosh.Token(woosh.OP, ',', 886, 41, 886, 42),
woosh.Token(woosh.STRING, '"SO_REUSEPORT"', 886, 43, 886, 57),
woosh.Token(woosh.OP, ')', 886, 57, 886, 58),
woosh.Token(woosh.OP, ':', 886, 58, 886, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 59, 887, 0),
woosh.Token(woosh.INDENT, '        ', 887, 0, 887, 8),
woosh.Token(woosh.NAME, 'raise', 887, 8, 887, 13),
woosh.Token(woosh.NAME, 'ValueError', 887, 14, 887, 24),
woosh.Token(woosh.OP, '(', 887, 24, 887, 25),
woosh.Token(woosh.STRING, '"SO_REUSEPORT not supported on this platform"', 887, 25, 887, 70),
woosh.Token(woosh.OP, ')', 887, 70, 887, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 887, 71, 888, 0),
woosh.Token(woosh.DEDENT, '    ', 888, 0, 888, 4),
woosh.Token(woosh.NAME, 'if', 888, 4, 888, 6),
woosh.Token(woosh.NAME, 'dualstack_ipv6', 888, 7, 888, 21),
woosh.Token(woosh.OP, ':', 888, 21, 888, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 888, 22, 889, 0),
woosh.Token(woosh.INDENT, '        ', 889, 0, 889, 8),
woosh.Token(woosh.NAME, 'if', 889, 8, 889, 10),
woosh.Token(woosh.NAME, 'not', 889, 11, 889, 14),
woosh.Token(woosh.NAME, 'has_dualstack_ipv6', 889, 15, 889, 33),
woosh.Token(woosh.OP, '(', 889, 33, 889, 34),
woosh.Token(woosh.OP, ')', 889, 34, 889, 35),
woosh.Token(woosh.OP, ':', 889, 35, 889, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 36, 890, 0),
woosh.Token(woosh.INDENT, '            ', 890, 0, 890, 12),
woosh.Token(woosh.NAME, 'raise', 890, 12, 890, 17),
woosh.Token(woosh.NAME, 'ValueError', 890, 18, 890, 28),
woosh.Token(woosh.OP, '(', 890, 28, 890, 29),
woosh.Token(woosh.STRING, '"dualstack_ipv6 not supported on this platform"', 890, 29, 890, 76),
woosh.Token(woosh.OP, ')', 890, 76, 890, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 890, 77, 891, 0),
woosh.Token(woosh.DEDENT, '        ', 891, 0, 891, 8),
woosh.Token(woosh.NAME, 'if', 891, 8, 891, 10),
woosh.Token(woosh.NAME, 'family', 891, 11, 891, 17),
woosh.Token(woosh.OP, '!=', 891, 18, 891, 20),
woosh.Token(woosh.NAME, 'AF_INET6', 891, 21, 891, 29),
woosh.Token(woosh.OP, ':', 891, 29, 891, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 30, 892, 0),
woosh.Token(woosh.INDENT, '            ', 892, 0, 892, 12),
woosh.Token(woosh.NAME, 'raise', 892, 12, 892, 17),
woosh.Token(woosh.NAME, 'ValueError', 892, 18, 892, 28),
woosh.Token(woosh.OP, '(', 892, 28, 892, 29),
woosh.Token(woosh.STRING, '"dualstack_ipv6 requires AF_INET6 family"', 892, 29, 892, 70),
woosh.Token(woosh.OP, ')', 892, 70, 892, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 71, 893, 0),
woosh.Token(woosh.DEDENT, '    ', 893, 0, 893, 4),
woosh.Token(woosh.DEDENT, '', 893, 4, 893, 4),
woosh.Token(woosh.NAME, 'sock', 893, 4, 893, 8),
woosh.Token(woosh.OP, '=', 893, 9, 893, 10),
woosh.Token(woosh.NAME, 'socket', 893, 11, 893, 17),
woosh.Token(woosh.OP, '(', 893, 17, 893, 18),
woosh.Token(woosh.NAME, 'family', 893, 18, 893, 24),
woosh.Token(woosh.OP, ',', 893, 24, 893, 25),
woosh.Token(woosh.NAME, 'SOCK_STREAM', 893, 26, 893, 37),
woosh.Token(woosh.OP, ')', 893, 37, 893, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 38, 894, 0),
woosh.Token(woosh.NAME, 'try', 894, 4, 894, 7),
woosh.Token(woosh.OP, ':', 894, 7, 894, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 894, 8, 895, 0),
woosh.Token(woosh.COMMENT, "# Note about Windows. We don't set SO_REUSEADDR because:", 895, 8, 895, 64),
woosh.Token(woosh.COMMENT, "# 1) It's unnecessary: bind() will succeed even in case of a", 896, 8, 896, 68),
woosh.Token(woosh.COMMENT, '# previous closed socket on the same address and still in', 897, 8, 897, 65),
woosh.Token(woosh.COMMENT, '# TIME_WAIT state.', 898, 8, 898, 26),
woosh.Token(woosh.COMMENT, '# 2) If set, another socket is free to bind() on the same', 899, 8, 899, 65),
woosh.Token(woosh.COMMENT, '# address, effectively preventing this one from accepting', 900, 8, 900, 65),
woosh.Token(woosh.COMMENT, '# connections. Also, it may set the process in a state where', 901, 8, 901, 68),
woosh.Token(woosh.COMMENT, "# it'll no longer respond to any signals or graceful kills.", 902, 8, 902, 67),
woosh.Token(woosh.COMMENT, '# See: msdn2.microsoft.com/en-us/library/ms740621(VS.85).aspx', 903, 8, 903, 69),
woosh.Token(woosh.INDENT, '        ', 904, 0, 904, 8),
woosh.Token(woosh.NAME, 'if', 904, 8, 904, 10),
woosh.Token(woosh.NAME, 'os', 904, 11, 904, 13),
woosh.Token(woosh.OP, '.', 904, 13, 904, 14),
woosh.Token(woosh.NAME, 'name', 904, 14, 904, 18),
woosh.Token(woosh.NAME, 'not', 904, 19, 904, 22),
woosh.Token(woosh.NAME, 'in', 904, 23, 904, 25),
woosh.Token(woosh.OP, '(', 904, 26, 904, 27),
woosh.Token(woosh.STRING, "'nt'", 904, 27, 904, 31),
woosh.Token(woosh.OP, ',', 904, 31, 904, 32),
woosh.Token(woosh.STRING, "'cygwin'", 904, 33, 904, 41),
woosh.Token(woosh.OP, ')', 904, 41, 904, 42),
woosh.Token(woosh.NAME, 'and', 904, 43, 904, 46),
woosh.Token(woosh.NAME, 'hasattr', 905, 16, 905, 23),
woosh.Token(woosh.OP, '(', 905, 23, 905, 24),
woosh.Token(woosh.NAME, '_socket', 905, 24, 905, 31),
woosh.Token(woosh.OP, ',', 905, 31, 905, 32),
woosh.Token(woosh.STRING, "'SO_REUSEADDR'", 905, 33, 905, 47),
woosh.Token(woosh.OP, ')', 905, 47, 905, 48),
woosh.Token(woosh.OP, ':', 905, 48, 905, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 905, 49, 906, 0),
woosh.Token(woosh.INDENT, '            ', 906, 0, 906, 12),
woosh.Token(woosh.NAME, 'try', 906, 12, 906, 15),
woosh.Token(woosh.OP, ':', 906, 15, 906, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 906, 16, 907, 0),
woosh.Token(woosh.INDENT, '                ', 907, 0, 907, 16),
woosh.Token(woosh.NAME, 'sock', 907, 16, 907, 20),
woosh.Token(woosh.OP, '.', 907, 20, 907, 21),
woosh.Token(woosh.NAME, 'setsockopt', 907, 21, 907, 31),
woosh.Token(woosh.OP, '(', 907, 31, 907, 32),
woosh.Token(woosh.NAME, 'SOL_SOCKET', 907, 32, 907, 42),
woosh.Token(woosh.OP, ',', 907, 42, 907, 43),
woosh.Token(woosh.NAME, 'SO_REUSEADDR', 907, 44, 907, 56),
woosh.Token(woosh.OP, ',', 907, 56, 907, 57),
woosh.Token(woosh.NUMBER, '1', 907, 58, 907, 59),
woosh.Token(woosh.OP, ')', 907, 59, 907, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 907, 60, 908, 0),
woosh.Token(woosh.DEDENT, '            ', 908, 0, 908, 12),
woosh.Token(woosh.NAME, 'except', 908, 12, 908, 18),
woosh.Token(woosh.NAME, 'error', 908, 19, 908, 24),
woosh.Token(woosh.OP, ':', 908, 24, 908, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 908, 25, 909, 0),
woosh.Token(woosh.COMMENT, '# Fail later on bind(), for platforms which may not', 909, 16, 909, 67),
woosh.Token(woosh.COMMENT, '# support this option.', 910, 16, 910, 38),
woosh.Token(woosh.INDENT, '                ', 911, 0, 911, 16),
woosh.Token(woosh.NAME, 'pass', 911, 16, 911, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 20, 912, 0),
woosh.Token(woosh.DEDENT, '        ', 912, 0, 912, 8),
woosh.Token(woosh.DEDENT, '', 912, 8, 912, 8),
woosh.Token(woosh.NAME, 'if', 912, 8, 912, 10),
woosh.Token(woosh.NAME, 'reuse_port', 912, 11, 912, 21),
woosh.Token(woosh.OP, ':', 912, 21, 912, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 22, 913, 0),
woosh.Token(woosh.INDENT, '            ', 913, 0, 913, 12),
woosh.Token(woosh.NAME, 'sock', 913, 12, 913, 16),
woosh.Token(woosh.OP, '.', 913, 16, 913, 17),
woosh.Token(woosh.NAME, 'setsockopt', 913, 17, 913, 27),
woosh.Token(woosh.OP, '(', 913, 27, 913, 28),
woosh.Token(woosh.NAME, 'SOL_SOCKET', 913, 28, 913, 38),
woosh.Token(woosh.OP, ',', 913, 38, 913, 39),
woosh.Token(woosh.NAME, 'SO_REUSEPORT', 913, 40, 913, 52),
woosh.Token(woosh.OP, ',', 913, 52, 913, 53),
woosh.Token(woosh.NUMBER, '1', 913, 54, 913, 55),
woosh.Token(woosh.OP, ')', 913, 55, 913, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 913, 56, 914, 0),
woosh.Token(woosh.DEDENT, '        ', 914, 0, 914, 8),
woosh.Token(woosh.NAME, 'if', 914, 8, 914, 10),
woosh.Token(woosh.NAME, 'has_ipv6', 914, 11, 914, 19),
woosh.Token(woosh.NAME, 'and', 914, 20, 914, 23),
woosh.Token(woosh.NAME, 'family', 914, 24, 914, 30),
woosh.Token(woosh.OP, '==', 914, 31, 914, 33),
woosh.Token(woosh.NAME, 'AF_INET6', 914, 34, 914, 42),
woosh.Token(woosh.OP, ':', 914, 42, 914, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 914, 43, 915, 0),
woosh.Token(woosh.INDENT, '            ', 915, 0, 915, 12),
woosh.Token(woosh.NAME, 'if', 915, 12, 915, 14),
woosh.Token(woosh.NAME, 'dualstack_ipv6', 915, 15, 915, 29),
woosh.Token(woosh.OP, ':', 915, 29, 915, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 915, 30, 916, 0),
woosh.Token(woosh.INDENT, '                ', 916, 0, 916, 16),
woosh.Token(woosh.NAME, 'sock', 916, 16, 916, 20),
woosh.Token(woosh.OP, '.', 916, 20, 916, 21),
woosh.Token(woosh.NAME, 'setsockopt', 916, 21, 916, 31),
woosh.Token(woosh.OP, '(', 916, 31, 916, 32),
woosh.Token(woosh.NAME, 'IPPROTO_IPV6', 916, 32, 916, 44),
woosh.Token(woosh.OP, ',', 916, 44, 916, 45),
woosh.Token(woosh.NAME, 'IPV6_V6ONLY', 916, 46, 916, 57),
woosh.Token(woosh.OP, ',', 916, 57, 916, 58),
woosh.Token(woosh.NUMBER, '0', 916, 59, 916, 60),
woosh.Token(woosh.OP, ')', 916, 60, 916, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 916, 61, 917, 0),
woosh.Token(woosh.DEDENT, '            ', 917, 0, 917, 12),
woosh.Token(woosh.NAME, 'elif', 917, 12, 917, 16),
woosh.Token(woosh.NAME, 'hasattr', 917, 17, 917, 24),
woosh.Token(woosh.OP, '(', 917, 24, 917, 25),
woosh.Token(woosh.NAME, '_socket', 917, 25, 917, 32),
woosh.Token(woosh.OP, ',', 917, 32, 917, 33),
woosh.Token(woosh.STRING, '"IPV6_V6ONLY"', 917, 34, 917, 47),
woosh.Token(woosh.OP, ')', 917, 47, 917, 48),
woosh.Token(woosh.NAME, 'and', 917, 49, 917, 52),
woosh.Token(woosh.NAME, 'hasattr', 918, 20, 918, 27),
woosh.Token(woosh.OP, '(', 918, 27, 918, 28),
woosh.Token(woosh.NAME, '_socket', 918, 28, 918, 35),
woosh.Token(woosh.OP, ',', 918, 35, 918, 36),
woosh.Token(woosh.STRING, '"IPPROTO_IPV6"', 918, 37, 918, 51),
woosh.Token(woosh.OP, ')', 918, 51, 918, 52),
woosh.Token(woosh.OP, ':', 918, 52, 918, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 918, 53, 919, 0),
woosh.Token(woosh.INDENT, '                ', 919, 0, 919, 16),
woosh.Token(woosh.NAME, 'sock', 919, 16, 919, 20),
woosh.Token(woosh.OP, '.', 919, 20, 919, 21),
woosh.Token(woosh.NAME, 'setsockopt', 919, 21, 919, 31),
woosh.Token(woosh.OP, '(', 919, 31, 919, 32),
woosh.Token(woosh.NAME, 'IPPROTO_IPV6', 919, 32, 919, 44),
woosh.Token(woosh.OP, ',', 919, 44, 919, 45),
woosh.Token(woosh.NAME, 'IPV6_V6ONLY', 919, 46, 919, 57),
woosh.Token(woosh.OP, ',', 919, 57, 919, 58),
woosh.Token(woosh.NUMBER, '1', 919, 59, 919, 60),
woosh.Token(woosh.OP, ')', 919, 60, 919, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 919, 61, 920, 0),
woosh.Token(woosh.DEDENT, '        ', 920, 0, 920, 8),
woosh.Token(woosh.DEDENT, '', 920, 8, 920, 8),
woosh.Token(woosh.NAME, 'try', 920, 8, 920, 11),
woosh.Token(woosh.OP, ':', 920, 11, 920, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 920, 12, 921, 0),
woosh.Token(woosh.INDENT, '            ', 921, 0, 921, 12),
woosh.Token(woosh.NAME, 'sock', 921, 12, 921, 16),
woosh.Token(woosh.OP, '.', 921, 16, 921, 17),
woosh.Token(woosh.NAME, 'bind', 921, 17, 921, 21),
woosh.Token(woosh.OP, '(', 921, 21, 921, 22),
woosh.Token(woosh.NAME, 'address', 921, 22, 921, 29),
woosh.Token(woosh.OP, ')', 921, 29, 921, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 921, 30, 922, 0),
woosh.Token(woosh.DEDENT, '        ', 922, 0, 922, 8),
woosh.Token(woosh.NAME, 'except', 922, 8, 922, 14),
woosh.Token(woosh.NAME, 'error', 922, 15, 922, 20),
woosh.Token(woosh.NAME, 'as', 922, 21, 922, 23),
woosh.Token(woosh.NAME, 'err', 922, 24, 922, 27),
woosh.Token(woosh.OP, ':', 922, 27, 922, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 922, 28, 923, 0),
woosh.Token(woosh.INDENT, '            ', 923, 0, 923, 12),
woosh.Token(woosh.NAME, 'msg', 923, 12, 923, 15),
woosh.Token(woosh.OP, '=', 923, 16, 923, 17),
woosh.Token(woosh.STRING, "'%s (while attempting to bind on address %r)'", 923, 18, 923, 63),
woosh.Token(woosh.OP, '%', 923, 64, 923, 65),
woosh.Token(woosh.OP, '(', 924, 16, 924, 17),
woosh.Token(woosh.NAME, 'err', 924, 17, 924, 20),
woosh.Token(woosh.OP, '.', 924, 20, 924, 21),
woosh.Token(woosh.NAME, 'strerror', 924, 21, 924, 29),
woosh.Token(woosh.OP, ',', 924, 29, 924, 30),
woosh.Token(woosh.NAME, 'address', 924, 31, 924, 38),
woosh.Token(woosh.OP, ')', 924, 38, 924, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 924, 39, 925, 0),
woosh.Token(woosh.NAME, 'raise', 925, 12, 925, 17),
woosh.Token(woosh.NAME, 'error', 925, 18, 925, 23),
woosh.Token(woosh.OP, '(', 925, 23, 925, 24),
woosh.Token(woosh.NAME, 'err', 925, 24, 925, 27),
woosh.Token(woosh.OP, '.', 925, 27, 925, 28),
woosh.Token(woosh.NAME, 'errno', 925, 28, 925, 33),
woosh.Token(woosh.OP, ',', 925, 33, 925, 34),
woosh.Token(woosh.NAME, 'msg', 925, 35, 925, 38),
woosh.Token(woosh.OP, ')', 925, 38, 925, 39),
woosh.Token(woosh.NAME, 'from', 925, 40, 925, 44),
woosh.Token(woosh.NAME, 'None', 925, 45, 925, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 49, 926, 0),
woosh.Token(woosh.DEDENT, '        ', 926, 0, 926, 8),
woosh.Token(woosh.NAME, 'if', 926, 8, 926, 10),
woosh.Token(woosh.NAME, 'backlog', 926, 11, 926, 18),
woosh.Token(woosh.NAME, 'is', 926, 19, 926, 21),
woosh.Token(woosh.NAME, 'None', 926, 22, 926, 26),
woosh.Token(woosh.OP, ':', 926, 26, 926, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 926, 27, 927, 0),
woosh.Token(woosh.INDENT, '            ', 927, 0, 927, 12),
woosh.Token(woosh.NAME, 'sock', 927, 12, 927, 16),
woosh.Token(woosh.OP, '.', 927, 16, 927, 17),
woosh.Token(woosh.NAME, 'listen', 927, 17, 927, 23),
woosh.Token(woosh.OP, '(', 927, 23, 927, 24),
woosh.Token(woosh.OP, ')', 927, 24, 927, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 25, 928, 0),
woosh.Token(woosh.DEDENT, '        ', 928, 0, 928, 8),
woosh.Token(woosh.NAME, 'else', 928, 8, 928, 12),
woosh.Token(woosh.OP, ':', 928, 12, 928, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 928, 13, 929, 0),
woosh.Token(woosh.INDENT, '            ', 929, 0, 929, 12),
woosh.Token(woosh.NAME, 'sock', 929, 12, 929, 16),
woosh.Token(woosh.OP, '.', 929, 16, 929, 17),
woosh.Token(woosh.NAME, 'listen', 929, 17, 929, 23),
woosh.Token(woosh.OP, '(', 929, 23, 929, 24),
woosh.Token(woosh.NAME, 'backlog', 929, 24, 929, 31),
woosh.Token(woosh.OP, ')', 929, 31, 929, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 929, 32, 930, 0),
woosh.Token(woosh.DEDENT, '        ', 930, 0, 930, 8),
woosh.Token(woosh.NAME, 'return', 930, 8, 930, 14),
woosh.Token(woosh.NAME, 'sock', 930, 15, 930, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 930, 19, 931, 0),
woosh.Token(woosh.DEDENT, '    ', 931, 0, 931, 4),
woosh.Token(woosh.NAME, 'except', 931, 4, 931, 10),
woosh.Token(woosh.NAME, 'error', 931, 11, 931, 16),
woosh.Token(woosh.OP, ':', 931, 16, 931, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 931, 17, 932, 0),
woosh.Token(woosh.INDENT, '        ', 932, 0, 932, 8),
woosh.Token(woosh.NAME, 'sock', 932, 8, 932, 12),
woosh.Token(woosh.OP, '.', 932, 12, 932, 13),
woosh.Token(woosh.NAME, 'close', 932, 13, 932, 18),
woosh.Token(woosh.OP, '(', 932, 18, 932, 19),
woosh.Token(woosh.OP, ')', 932, 19, 932, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 20, 933, 0),
woosh.Token(woosh.NAME, 'raise', 933, 8, 933, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 933, 13, 934, 0),
woosh.Token(woosh.DEDENT, '', 936, 0, 936, 0),
woosh.Token(woosh.DEDENT, '', 936, 0, 936, 0),
woosh.Token(woosh.NAME, 'def', 936, 0, 936, 3),
woosh.Token(woosh.NAME, 'getaddrinfo', 936, 4, 936, 15),
woosh.Token(woosh.OP, '(', 936, 15, 936, 16),
woosh.Token(woosh.NAME, 'host', 936, 16, 936, 20),
woosh.Token(woosh.OP, ',', 936, 20, 936, 21),
woosh.Token(woosh.NAME, 'port', 936, 22, 936, 26),
woosh.Token(woosh.OP, ',', 936, 26, 936, 27),
woosh.Token(woosh.NAME, 'family', 936, 28, 936, 34),
woosh.Token(woosh.OP, '=', 936, 34, 936, 35),
woosh.Token(woosh.NUMBER, '0', 936, 35, 936, 36),
woosh.Token(woosh.OP, ',', 936, 36, 936, 37),
woosh.Token(woosh.NAME, 'type', 936, 38, 936, 42),
woosh.Token(woosh.OP, '=', 936, 42, 936, 43),
woosh.Token(woosh.NUMBER, '0', 936, 43, 936, 44),
woosh.Token(woosh.OP, ',', 936, 44, 936, 45),
woosh.Token(woosh.NAME, 'proto', 936, 46, 936, 51),
woosh.Token(woosh.OP, '=', 936, 51, 936, 52),
woosh.Token(woosh.NUMBER, '0', 936, 52, 936, 53),
woosh.Token(woosh.OP, ',', 936, 53, 936, 54),
woosh.Token(woosh.NAME, 'flags', 936, 55, 936, 60),
woosh.Token(woosh.OP, '=', 936, 60, 936, 61),
woosh.Token(woosh.NUMBER, '0', 936, 61, 936, 62),
woosh.Token(woosh.OP, ')', 936, 62, 936, 63),
woosh.Token(woosh.OP, ':', 936, 63, 936, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 936, 64, 937, 0),
woosh.Token(woosh.INDENT, '    ', 937, 0, 937, 4),
woosh.Token(woosh.STRING, '"""Resolve host and port into list of address info entries.\r\n\r\n    Translate the host/port argument into a sequence of 5-tuples that contain\r\n    all the necessary arguments for creating a socket connected to that service.\r\n    host is a domain name, a string representation of an IPv4/v6 address or\r\n    None. port is a string service name such as \'http\', a numeric port number or\r\n    None. By passing None as the value of host and port, you can pass NULL to\r\n    the underlying C API.\r\n\r\n    The family, type and proto arguments can be optionally specified in order to\r\n    narrow the list of addresses returned. Passing zero as a value for each of\r\n    these arguments selects the full range of results.\r\n    """', 937, 4, 949, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 949, 7, 950, 0),
woosh.Token(woosh.COMMENT, '# We override this function since we want to translate the numeric family', 950, 4, 950, 77),
woosh.Token(woosh.COMMENT, '# and socket type values to enum constants.', 951, 4, 951, 47),
woosh.Token(woosh.NAME, 'addrlist', 952, 4, 952, 12),
woosh.Token(woosh.OP, '=', 952, 13, 952, 14),
woosh.Token(woosh.OP, '[', 952, 15, 952, 16),
woosh.Token(woosh.OP, ']', 952, 16, 952, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 952, 17, 953, 0),
woosh.Token(woosh.NAME, 'for', 953, 4, 953, 7),
woosh.Token(woosh.NAME, 'res', 953, 8, 953, 11),
woosh.Token(woosh.NAME, 'in', 953, 12, 953, 14),
woosh.Token(woosh.NAME, '_socket', 953, 15, 953, 22),
woosh.Token(woosh.OP, '.', 953, 22, 953, 23),
woosh.Token(woosh.NAME, 'getaddrinfo', 953, 23, 953, 34),
woosh.Token(woosh.OP, '(', 953, 34, 953, 35),
woosh.Token(woosh.NAME, 'host', 953, 35, 953, 39),
woosh.Token(woosh.OP, ',', 953, 39, 953, 40),
woosh.Token(woosh.NAME, 'port', 953, 41, 953, 45),
woosh.Token(woosh.OP, ',', 953, 45, 953, 46),
woosh.Token(woosh.NAME, 'family', 953, 47, 953, 53),
woosh.Token(woosh.OP, ',', 953, 53, 953, 54),
woosh.Token(woosh.NAME, 'type', 953, 55, 953, 59),
woosh.Token(woosh.OP, ',', 953, 59, 953, 60),
woosh.Token(woosh.NAME, 'proto', 953, 61, 953, 66),
woosh.Token(woosh.OP, ',', 953, 66, 953, 67),
woosh.Token(woosh.NAME, 'flags', 953, 68, 953, 73),
woosh.Token(woosh.OP, ')', 953, 73, 953, 74),
woosh.Token(woosh.OP, ':', 953, 74, 953, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 75, 954, 0),
woosh.Token(woosh.INDENT, '        ', 954, 0, 954, 8),
woosh.Token(woosh.NAME, 'af', 954, 8, 954, 10),
woosh.Token(woosh.OP, ',', 954, 10, 954, 11),
woosh.Token(woosh.NAME, 'socktype', 954, 12, 954, 20),
woosh.Token(woosh.OP, ',', 954, 20, 954, 21),
woosh.Token(woosh.NAME, 'proto', 954, 22, 954, 27),
woosh.Token(woosh.OP, ',', 954, 27, 954, 28),
woosh.Token(woosh.NAME, 'canonname', 954, 29, 954, 38),
woosh.Token(woosh.OP, ',', 954, 38, 954, 39),
woosh.Token(woosh.NAME, 'sa', 954, 40, 954, 42),
woosh.Token(woosh.OP, '=', 954, 43, 954, 44),
woosh.Token(woosh.NAME, 'res', 954, 45, 954, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 954, 48, 955, 0),
woosh.Token(woosh.NAME, 'addrlist', 955, 8, 955, 16),
woosh.Token(woosh.OP, '.', 955, 16, 955, 17),
woosh.Token(woosh.NAME, 'append', 955, 17, 955, 23),
woosh.Token(woosh.OP, '(', 955, 23, 955, 24),
woosh.Token(woosh.OP, '(', 955, 24, 955, 25),
woosh.Token(woosh.NAME, '_intenum_converter', 955, 25, 955, 43),
woosh.Token(woosh.OP, '(', 955, 43, 955, 44),
woosh.Token(woosh.NAME, 'af', 955, 44, 955, 46),
woosh.Token(woosh.OP, ',', 955, 46, 955, 47),
woosh.Token(woosh.NAME, 'AddressFamily', 955, 48, 955, 61),
woosh.Token(woosh.OP, ')', 955, 61, 955, 62),
woosh.Token(woosh.OP, ',', 955, 62, 955, 63),
woosh.Token(woosh.NAME, '_intenum_converter', 956, 25, 956, 43),
woosh.Token(woosh.OP, '(', 956, 43, 956, 44),
woosh.Token(woosh.NAME, 'socktype', 956, 44, 956, 52),
woosh.Token(woosh.OP, ',', 956, 52, 956, 53),
woosh.Token(woosh.NAME, 'SocketKind', 956, 54, 956, 64),
woosh.Token(woosh.OP, ')', 956, 64, 956, 65),
woosh.Token(woosh.OP, ',', 956, 65, 956, 66),
woosh.Token(woosh.NAME, 'proto', 957, 25, 957, 30),
woosh.Token(woosh.OP, ',', 957, 30, 957, 31),
woosh.Token(woosh.NAME, 'canonname', 957, 32, 957, 41),
woosh.Token(woosh.OP, ',', 957, 41, 957, 42),
woosh.Token(woosh.NAME, 'sa', 957, 43, 957, 45),
woosh.Token(woosh.OP, ')', 957, 45, 957, 46),
woosh.Token(woosh.OP, ')', 957, 46, 957, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 957, 47, 958, 0),
woosh.Token(woosh.DEDENT, '    ', 958, 0, 958, 4),
woosh.Token(woosh.NAME, 'return', 958, 4, 958, 10),
woosh.Token(woosh.NAME, 'addrlist', 958, 11, 958, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 19, 959, 0),
woosh.Token(woosh.DEDENT, '', 959, 0, 959, 0),
woosh.Token(woosh.EOF, '', 959, 0, 959, 0),
]
