
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/configparser.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""Configuration file parser.\r\n\r\nA configuration file consists of sections, lead by a "[section]" header,\r\nand followed by "name: value" entries, with continuations and such in\r\nthe style of RFC 822.\r\n\r\nIntrinsic defaults can be specified by passing them into the\r\nConfigParser constructor as a dictionary.\r\n\r\nclass:\r\n\r\nConfigParser -- responsible for parsing a list of\r\n                    configuration files, and managing the parsed database.\r\n\r\n    methods:\r\n\r\n    __init__(defaults=None, dict_type=_default_dict, allow_no_value=False,\r\n             delimiters=(\'=\', \':\'), comment_prefixes=(\'#\', \';\'),\r\n             inline_comment_prefixes=None, strict=True,\r\n             empty_lines_in_values=True, default_section=\'DEFAULT\',\r\n             interpolation=<unset>, converters=<unset>):\r\n        Create the parser. When `defaults\' is given, it is initialized into the\r\n        dictionary or intrinsic defaults. The keys must be strings, the values\r\n        must be appropriate for %()s string interpolation.\r\n\r\n        When `dict_type\' is given, it will be used to create the dictionary\r\n        objects for the list of sections, for the options within a section, and\r\n        for the default values.\r\n\r\n        When `delimiters\' is given, it will be used as the set of substrings\r\n        that divide keys from values.\r\n\r\n        When `comment_prefixes\' is given, it will be used as the set of\r\n        substrings that prefix comments in empty lines. Comments can be\r\n        indented.\r\n\r\n        When `inline_comment_prefixes\' is given, it will be used as the set of\r\n        substrings that prefix comments in non-empty lines.\r\n\r\n        When `strict` is True, the parser won\'t allow for any section or option\r\n        duplicates while reading from a single source (file, string or\r\n        dictionary). Default is True.\r\n\r\n        When `empty_lines_in_values\' is False (default: True), each empty line\r\n        marks the end of an option. Otherwise, internal empty lines of\r\n        a multiline option are kept as part of the value.\r\n\r\n        When `allow_no_value\' is True (default: False), options without\r\n        values are accepted; the value presented for these is None.\r\n\r\n        When `default_section\' is given, the name of the special section is\r\n        named accordingly. By default it is called ``"DEFAULT"`` but this can\r\n        be customized to point to any other valid section name. Its current\r\n        value can be retrieved using the ``parser_instance.default_section``\r\n        attribute and may be modified at runtime.\r\n\r\n        When `interpolation` is given, it should be an Interpolation subclass\r\n        instance. It will be used as the handler for option value\r\n        pre-processing when using getters. RawConfigParser objects don\'t do\r\n        any sort of interpolation, whereas ConfigParser uses an instance of\r\n        BasicInterpolation. The library also provides a ``zc.buildbot``\r\n        inspired ExtendedInterpolation implementation.\r\n\r\n        When `converters` is given, it should be a dictionary where each key\r\n        represents the name of a type converter and each value is a callable\r\n        implementing the conversion from string to the desired datatype. Every\r\n        converter gets its corresponding get*() method on the parser object and\r\n        section proxies.\r\n\r\n    sections()\r\n        Return all the configuration section names, sans DEFAULT.\r\n\r\n    has_section(section)\r\n        Return whether the given section exists.\r\n\r\n    has_option(section, option)\r\n        Return whether the given option exists in the given section.\r\n\r\n    options(section)\r\n        Return list of configuration options for the named section.\r\n\r\n    read(filenames, encoding=None)\r\n        Read and parse the iterable of named configuration files, given by\r\n        name.  A single filename is also allowed.  Non-existing files\r\n        are ignored.  Return list of successfully read files.\r\n\r\n    read_file(f, filename=None)\r\n        Read and parse one configuration file, given as a file object.\r\n        The filename defaults to f.name; it is only used in error\r\n        messages (if f has no `name\' attribute, the string `<???>\' is used).\r\n\r\n    read_string(string)\r\n        Read configuration from a given string.\r\n\r\n    read_dict(dictionary)\r\n        Read configuration from a dictionary. Keys are section names,\r\n        values are dictionaries with keys and values that should be present\r\n        in the section. If the used dictionary type preserves order, sections\r\n        and their keys will be added in order. Values are automatically\r\n        converted to strings.\r\n\r\n    get(section, option, raw=False, vars=None, fallback=_UNSET)\r\n        Return a string value for the named option.  All % interpolations are\r\n        expanded in the return values, based on the defaults passed into the\r\n        constructor and the DEFAULT section.  Additional substitutions may be\r\n        provided using the `vars\' argument, which must be a dictionary whose\r\n        contents override any pre-existing defaults. If `option\' is a key in\r\n        `vars\', the value from `vars\' is used.\r\n\r\n    getint(section, options, raw=False, vars=None, fallback=_UNSET)\r\n        Like get(), but convert value to an integer.\r\n\r\n    getfloat(section, options, raw=False, vars=None, fallback=_UNSET)\r\n        Like get(), but convert value to a float.\r\n\r\n    getboolean(section, options, raw=False, vars=None, fallback=_UNSET)\r\n        Like get(), but convert value to a boolean (currently case\r\n        insensitively defined as 0, false, no, off for False, and 1, true,\r\n        yes, on for True).  Returns False or True.\r\n\r\n    items(section=_UNSET, raw=False, vars=None)\r\n        If section is given, return a list of tuples with (name, value) for\r\n        each option in the section. Otherwise, return a list of tuples with\r\n        (section_name, section_proxy) for each section, including DEFAULTSECT.\r\n\r\n    remove_section(section)\r\n        Remove the given file section and all its options.\r\n\r\n    remove_option(section, option)\r\n        Remove the given option from the given section.\r\n\r\n    set(section, option, value)\r\n        Set the given option.\r\n\r\n    write(fp, space_around_delimiters=True)\r\n        Write the configuration state in .ini format. If\r\n        `space_around_delimiters\' is True (the default), delimiters\r\n        between keys and values are surrounded by spaces.\r\n"""', 1, 0, 139, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 3, 140, 0),
woosh.Token(woosh.NAME, 'from', 141, 0, 141, 4),
woosh.Token(woosh.NAME, 'collections', 141, 5, 141, 16),
woosh.Token(woosh.OP, '.', 141, 16, 141, 17),
woosh.Token(woosh.NAME, 'abc', 141, 17, 141, 20),
woosh.Token(woosh.NAME, 'import', 141, 21, 141, 27),
woosh.Token(woosh.NAME, 'MutableMapping', 141, 28, 141, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 42, 142, 0),
woosh.Token(woosh.NAME, 'from', 142, 0, 142, 4),
woosh.Token(woosh.NAME, 'collections', 142, 5, 142, 16),
woosh.Token(woosh.NAME, 'import', 142, 17, 142, 23),
woosh.Token(woosh.NAME, 'ChainMap', 142, 24, 142, 32),
woosh.Token(woosh.NAME, 'as', 142, 33, 142, 35),
woosh.Token(woosh.NAME, '_ChainMap', 142, 36, 142, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 45, 143, 0),
woosh.Token(woosh.NAME, 'import', 143, 0, 143, 6),
woosh.Token(woosh.NAME, 'functools', 143, 7, 143, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 16, 144, 0),
woosh.Token(woosh.NAME, 'import', 144, 0, 144, 6),
woosh.Token(woosh.NAME, 'io', 144, 7, 144, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 9, 145, 0),
woosh.Token(woosh.NAME, 'import', 145, 0, 145, 6),
woosh.Token(woosh.NAME, 'itertools', 145, 7, 145, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 16, 146, 0),
woosh.Token(woosh.NAME, 'import', 146, 0, 146, 6),
woosh.Token(woosh.NAME, 'os', 146, 7, 146, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 9, 147, 0),
woosh.Token(woosh.NAME, 'import', 147, 0, 147, 6),
woosh.Token(woosh.NAME, 're', 147, 7, 147, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 9, 148, 0),
woosh.Token(woosh.NAME, 'import', 148, 0, 148, 6),
woosh.Token(woosh.NAME, 'sys', 148, 7, 148, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 10, 149, 0),
woosh.Token(woosh.NAME, 'import', 149, 0, 149, 6),
woosh.Token(woosh.NAME, 'warnings', 149, 7, 149, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 15, 150, 0),
woosh.Token(woosh.NAME, '__all__', 151, 0, 151, 7),
woosh.Token(woosh.OP, '=', 151, 8, 151, 9),
woosh.Token(woosh.OP, '[', 151, 10, 151, 11),
woosh.Token(woosh.STRING, '"NoSectionError"', 151, 11, 151, 27),
woosh.Token(woosh.OP, ',', 151, 27, 151, 28),
woosh.Token(woosh.STRING, '"DuplicateOptionError"', 151, 29, 151, 51),
woosh.Token(woosh.OP, ',', 151, 51, 151, 52),
woosh.Token(woosh.STRING, '"DuplicateSectionError"', 151, 53, 151, 76),
woosh.Token(woosh.OP, ',', 151, 76, 151, 77),
woosh.Token(woosh.STRING, '"NoOptionError"', 152, 11, 152, 26),
woosh.Token(woosh.OP, ',', 152, 26, 152, 27),
woosh.Token(woosh.STRING, '"InterpolationError"', 152, 28, 152, 48),
woosh.Token(woosh.OP, ',', 152, 48, 152, 49),
woosh.Token(woosh.STRING, '"InterpolationDepthError"', 152, 50, 152, 75),
woosh.Token(woosh.OP, ',', 152, 75, 152, 76),
woosh.Token(woosh.STRING, '"InterpolationMissingOptionError"', 153, 11, 153, 44),
woosh.Token(woosh.OP, ',', 153, 44, 153, 45),
woosh.Token(woosh.STRING, '"InterpolationSyntaxError"', 153, 46, 153, 72),
woosh.Token(woosh.OP, ',', 153, 72, 153, 73),
woosh.Token(woosh.STRING, '"ParsingError"', 154, 11, 154, 25),
woosh.Token(woosh.OP, ',', 154, 25, 154, 26),
woosh.Token(woosh.STRING, '"MissingSectionHeaderError"', 154, 27, 154, 54),
woosh.Token(woosh.OP, ',', 154, 54, 154, 55),
woosh.Token(woosh.STRING, '"ConfigParser"', 155, 11, 155, 25),
woosh.Token(woosh.OP, ',', 155, 25, 155, 26),
woosh.Token(woosh.STRING, '"SafeConfigParser"', 155, 27, 155, 45),
woosh.Token(woosh.OP, ',', 155, 45, 155, 46),
woosh.Token(woosh.STRING, '"RawConfigParser"', 155, 47, 155, 64),
woosh.Token(woosh.OP, ',', 155, 64, 155, 65),
woosh.Token(woosh.STRING, '"Interpolation"', 156, 11, 156, 26),
woosh.Token(woosh.OP, ',', 156, 26, 156, 27),
woosh.Token(woosh.STRING, '"BasicInterpolation"', 156, 28, 156, 48),
woosh.Token(woosh.OP, ',', 156, 48, 156, 49),
woosh.Token(woosh.STRING, '"ExtendedInterpolation"', 156, 51, 156, 74),
woosh.Token(woosh.OP, ',', 156, 74, 156, 75),
woosh.Token(woosh.STRING, '"LegacyInterpolation"', 157, 11, 157, 32),
woosh.Token(woosh.OP, ',', 157, 32, 157, 33),
woosh.Token(woosh.STRING, '"SectionProxy"', 157, 34, 157, 48),
woosh.Token(woosh.OP, ',', 157, 48, 157, 49),
woosh.Token(woosh.STRING, '"ConverterMapping"', 157, 50, 157, 68),
woosh.Token(woosh.OP, ',', 157, 68, 157, 69),
woosh.Token(woosh.STRING, '"DEFAULTSECT"', 158, 11, 158, 24),
woosh.Token(woosh.OP, ',', 158, 24, 158, 25),
woosh.Token(woosh.STRING, '"MAX_INTERPOLATION_DEPTH"', 158, 26, 158, 51),
woosh.Token(woosh.OP, ']', 158, 51, 158, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 52, 159, 0),
woosh.Token(woosh.NAME, '_default_dict', 160, 0, 160, 13),
woosh.Token(woosh.OP, '=', 160, 14, 160, 15),
woosh.Token(woosh.NAME, 'dict', 160, 16, 160, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 20, 161, 0),
woosh.Token(woosh.NAME, 'DEFAULTSECT', 161, 0, 161, 11),
woosh.Token(woosh.OP, '=', 161, 12, 161, 13),
woosh.Token(woosh.STRING, '"DEFAULT"', 161, 14, 161, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 161, 23, 162, 0),
woosh.Token(woosh.NAME, 'MAX_INTERPOLATION_DEPTH', 163, 0, 163, 23),
woosh.Token(woosh.OP, '=', 163, 24, 163, 25),
woosh.Token(woosh.NUMBER, '10', 163, 26, 163, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 163, 28, 164, 0),
woosh.Token(woosh.COMMENT, '# exception classes', 167, 0, 167, 19),
woosh.Token(woosh.NAME, 'class', 168, 0, 168, 5),
woosh.Token(woosh.NAME, 'Error', 168, 6, 168, 11),
woosh.Token(woosh.OP, '(', 168, 11, 168, 12),
woosh.Token(woosh.NAME, 'Exception', 168, 12, 168, 21),
woosh.Token(woosh.OP, ')', 168, 21, 168, 22),
woosh.Token(woosh.OP, ':', 168, 22, 168, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 168, 23, 169, 0),
woosh.Token(woosh.INDENT, '    ', 169, 0, 169, 4),
woosh.Token(woosh.STRING, '"""Base class for ConfigParser exceptions."""', 169, 4, 169, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 169, 49, 170, 0),
woosh.Token(woosh.NAME, 'def', 171, 4, 171, 7),
woosh.Token(woosh.NAME, '__init__', 171, 8, 171, 16),
woosh.Token(woosh.OP, '(', 171, 16, 171, 17),
woosh.Token(woosh.NAME, 'self', 171, 17, 171, 21),
woosh.Token(woosh.OP, ',', 171, 21, 171, 22),
woosh.Token(woosh.NAME, 'msg', 171, 23, 171, 26),
woosh.Token(woosh.OP, '=', 171, 26, 171, 27),
woosh.Token(woosh.STRING, "''", 171, 27, 171, 29),
woosh.Token(woosh.OP, ')', 171, 29, 171, 30),
woosh.Token(woosh.OP, ':', 171, 30, 171, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 31, 172, 0),
woosh.Token(woosh.INDENT, '        ', 172, 0, 172, 8),
woosh.Token(woosh.NAME, 'self', 172, 8, 172, 12),
woosh.Token(woosh.OP, '.', 172, 12, 172, 13),
woosh.Token(woosh.NAME, 'message', 172, 13, 172, 20),
woosh.Token(woosh.OP, '=', 172, 21, 172, 22),
woosh.Token(woosh.NAME, 'msg', 172, 23, 172, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 26, 173, 0),
woosh.Token(woosh.NAME, 'Exception', 173, 8, 173, 17),
woosh.Token(woosh.OP, '.', 173, 17, 173, 18),
woosh.Token(woosh.NAME, '__init__', 173, 18, 173, 26),
woosh.Token(woosh.OP, '(', 173, 26, 173, 27),
woosh.Token(woosh.NAME, 'self', 173, 27, 173, 31),
woosh.Token(woosh.OP, ',', 173, 31, 173, 32),
woosh.Token(woosh.NAME, 'msg', 173, 33, 173, 36),
woosh.Token(woosh.OP, ')', 173, 36, 173, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 37, 174, 0),
woosh.Token(woosh.DEDENT, '    ', 175, 0, 175, 4),
woosh.Token(woosh.NAME, 'def', 175, 4, 175, 7),
woosh.Token(woosh.NAME, '__repr__', 175, 8, 175, 16),
woosh.Token(woosh.OP, '(', 175, 16, 175, 17),
woosh.Token(woosh.NAME, 'self', 175, 17, 175, 21),
woosh.Token(woosh.OP, ')', 175, 21, 175, 22),
woosh.Token(woosh.OP, ':', 175, 22, 175, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 23, 176, 0),
woosh.Token(woosh.INDENT, '        ', 176, 0, 176, 8),
woosh.Token(woosh.NAME, 'return', 176, 8, 176, 14),
woosh.Token(woosh.NAME, 'self', 176, 15, 176, 19),
woosh.Token(woosh.OP, '.', 176, 19, 176, 20),
woosh.Token(woosh.NAME, 'message', 176, 20, 176, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 27, 177, 0),
woosh.Token(woosh.DEDENT, '    ', 178, 0, 178, 4),
woosh.Token(woosh.NAME, '__str__', 178, 4, 178, 11),
woosh.Token(woosh.OP, '=', 178, 12, 178, 13),
woosh.Token(woosh.NAME, '__repr__', 178, 14, 178, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 178, 22, 179, 0),
woosh.Token(woosh.DEDENT, '', 181, 0, 181, 0),
woosh.Token(woosh.NAME, 'class', 181, 0, 181, 5),
woosh.Token(woosh.NAME, 'NoSectionError', 181, 6, 181, 20),
woosh.Token(woosh.OP, '(', 181, 20, 181, 21),
woosh.Token(woosh.NAME, 'Error', 181, 21, 181, 26),
woosh.Token(woosh.OP, ')', 181, 26, 181, 27),
woosh.Token(woosh.OP, ':', 181, 27, 181, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 181, 28, 182, 0),
woosh.Token(woosh.INDENT, '    ', 182, 0, 182, 4),
woosh.Token(woosh.STRING, '"""Raised when no section matches a requested option."""', 182, 4, 182, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 182, 60, 183, 0),
woosh.Token(woosh.NAME, 'def', 184, 4, 184, 7),
woosh.Token(woosh.NAME, '__init__', 184, 8, 184, 16),
woosh.Token(woosh.OP, '(', 184, 16, 184, 17),
woosh.Token(woosh.NAME, 'self', 184, 17, 184, 21),
woosh.Token(woosh.OP, ',', 184, 21, 184, 22),
woosh.Token(woosh.NAME, 'section', 184, 23, 184, 30),
woosh.Token(woosh.OP, ')', 184, 30, 184, 31),
woosh.Token(woosh.OP, ':', 184, 31, 184, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 184, 32, 185, 0),
woosh.Token(woosh.INDENT, '        ', 185, 0, 185, 8),
woosh.Token(woosh.NAME, 'Error', 185, 8, 185, 13),
woosh.Token(woosh.OP, '.', 185, 13, 185, 14),
woosh.Token(woosh.NAME, '__init__', 185, 14, 185, 22),
woosh.Token(woosh.OP, '(', 185, 22, 185, 23),
woosh.Token(woosh.NAME, 'self', 185, 23, 185, 27),
woosh.Token(woosh.OP, ',', 185, 27, 185, 28),
woosh.Token(woosh.STRING, "'No section: %r'", 185, 29, 185, 45),
woosh.Token(woosh.OP, '%', 185, 46, 185, 47),
woosh.Token(woosh.OP, '(', 185, 48, 185, 49),
woosh.Token(woosh.NAME, 'section', 185, 49, 185, 56),
woosh.Token(woosh.OP, ',', 185, 56, 185, 57),
woosh.Token(woosh.OP, ')', 185, 57, 185, 58),
woosh.Token(woosh.OP, ')', 185, 58, 185, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 185, 59, 186, 0),
woosh.Token(woosh.NAME, 'self', 186, 8, 186, 12),
woosh.Token(woosh.OP, '.', 186, 12, 186, 13),
woosh.Token(woosh.NAME, 'section', 186, 13, 186, 20),
woosh.Token(woosh.OP, '=', 186, 21, 186, 22),
woosh.Token(woosh.NAME, 'section', 186, 23, 186, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 186, 30, 187, 0),
woosh.Token(woosh.NAME, 'self', 187, 8, 187, 12),
woosh.Token(woosh.OP, '.', 187, 12, 187, 13),
woosh.Token(woosh.NAME, 'args', 187, 13, 187, 17),
woosh.Token(woosh.OP, '=', 187, 18, 187, 19),
woosh.Token(woosh.OP, '(', 187, 20, 187, 21),
woosh.Token(woosh.NAME, 'section', 187, 21, 187, 28),
woosh.Token(woosh.OP, ',', 187, 28, 187, 29),
woosh.Token(woosh.OP, ')', 187, 30, 187, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 187, 31, 188, 0),
woosh.Token(woosh.DEDENT, '', 190, 0, 190, 0),
woosh.Token(woosh.DEDENT, '', 190, 0, 190, 0),
woosh.Token(woosh.NAME, 'class', 190, 0, 190, 5),
woosh.Token(woosh.NAME, 'DuplicateSectionError', 190, 6, 190, 27),
woosh.Token(woosh.OP, '(', 190, 27, 190, 28),
woosh.Token(woosh.NAME, 'Error', 190, 28, 190, 33),
woosh.Token(woosh.OP, ')', 190, 33, 190, 34),
woosh.Token(woosh.OP, ':', 190, 34, 190, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 190, 35, 191, 0),
woosh.Token(woosh.INDENT, '    ', 191, 0, 191, 4),
woosh.Token(woosh.STRING, '"""Raised when a section is repeated in an input source.\r\n\r\n    Possible repetitions that raise this exception are: multiple creation\r\n    using the API or in strict parsers when a section is found more than once\r\n    in a single input file, string or dictionary.\r\n    """', 191, 4, 196, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 196, 7, 197, 0),
woosh.Token(woosh.NAME, 'def', 198, 4, 198, 7),
woosh.Token(woosh.NAME, '__init__', 198, 8, 198, 16),
woosh.Token(woosh.OP, '(', 198, 16, 198, 17),
woosh.Token(woosh.NAME, 'self', 198, 17, 198, 21),
woosh.Token(woosh.OP, ',', 198, 21, 198, 22),
woosh.Token(woosh.NAME, 'section', 198, 23, 198, 30),
woosh.Token(woosh.OP, ',', 198, 30, 198, 31),
woosh.Token(woosh.NAME, 'source', 198, 32, 198, 38),
woosh.Token(woosh.OP, '=', 198, 38, 198, 39),
woosh.Token(woosh.NAME, 'None', 198, 39, 198, 43),
woosh.Token(woosh.OP, ',', 198, 43, 198, 44),
woosh.Token(woosh.NAME, 'lineno', 198, 45, 198, 51),
woosh.Token(woosh.OP, '=', 198, 51, 198, 52),
woosh.Token(woosh.NAME, 'None', 198, 52, 198, 56),
woosh.Token(woosh.OP, ')', 198, 56, 198, 57),
woosh.Token(woosh.OP, ':', 198, 57, 198, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 198, 58, 199, 0),
woosh.Token(woosh.INDENT, '        ', 199, 0, 199, 8),
woosh.Token(woosh.NAME, 'msg', 199, 8, 199, 11),
woosh.Token(woosh.OP, '=', 199, 12, 199, 13),
woosh.Token(woosh.OP, '[', 199, 14, 199, 15),
woosh.Token(woosh.NAME, 'repr', 199, 15, 199, 19),
woosh.Token(woosh.OP, '(', 199, 19, 199, 20),
woosh.Token(woosh.NAME, 'section', 199, 20, 199, 27),
woosh.Token(woosh.OP, ')', 199, 27, 199, 28),
woosh.Token(woosh.OP, ',', 199, 28, 199, 29),
woosh.Token(woosh.STRING, '" already exists"', 199, 30, 199, 47),
woosh.Token(woosh.OP, ']', 199, 47, 199, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 199, 48, 200, 0),
woosh.Token(woosh.NAME, 'if', 200, 8, 200, 10),
woosh.Token(woosh.NAME, 'source', 200, 11, 200, 17),
woosh.Token(woosh.NAME, 'is', 200, 18, 200, 20),
woosh.Token(woosh.NAME, 'not', 200, 21, 200, 24),
woosh.Token(woosh.NAME, 'None', 200, 25, 200, 29),
woosh.Token(woosh.OP, ':', 200, 29, 200, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 200, 30, 201, 0),
woosh.Token(woosh.INDENT, '            ', 201, 0, 201, 12),
woosh.Token(woosh.NAME, 'message', 201, 12, 201, 19),
woosh.Token(woosh.OP, '=', 201, 20, 201, 21),
woosh.Token(woosh.OP, '[', 201, 22, 201, 23),
woosh.Token(woosh.STRING, '"While reading from "', 201, 23, 201, 44),
woosh.Token(woosh.OP, ',', 201, 44, 201, 45),
woosh.Token(woosh.NAME, 'repr', 201, 46, 201, 50),
woosh.Token(woosh.OP, '(', 201, 50, 201, 51),
woosh.Token(woosh.NAME, 'source', 201, 51, 201, 57),
woosh.Token(woosh.OP, ')', 201, 57, 201, 58),
woosh.Token(woosh.OP, ']', 201, 58, 201, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 201, 59, 202, 0),
woosh.Token(woosh.NAME, 'if', 202, 12, 202, 14),
woosh.Token(woosh.NAME, 'lineno', 202, 15, 202, 21),
woosh.Token(woosh.NAME, 'is', 202, 22, 202, 24),
woosh.Token(woosh.NAME, 'not', 202, 25, 202, 28),
woosh.Token(woosh.NAME, 'None', 202, 29, 202, 33),
woosh.Token(woosh.OP, ':', 202, 33, 202, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 202, 34, 203, 0),
woosh.Token(woosh.INDENT, '                ', 203, 0, 203, 16),
woosh.Token(woosh.NAME, 'message', 203, 16, 203, 23),
woosh.Token(woosh.OP, '.', 203, 23, 203, 24),
woosh.Token(woosh.NAME, 'append', 203, 24, 203, 30),
woosh.Token(woosh.OP, '(', 203, 30, 203, 31),
woosh.Token(woosh.STRING, '" [line {0:2d}]"', 203, 31, 203, 47),
woosh.Token(woosh.OP, '.', 203, 47, 203, 48),
woosh.Token(woosh.NAME, 'format', 203, 48, 203, 54),
woosh.Token(woosh.OP, '(', 203, 54, 203, 55),
woosh.Token(woosh.NAME, 'lineno', 203, 55, 203, 61),
woosh.Token(woosh.OP, ')', 203, 61, 203, 62),
woosh.Token(woosh.OP, ')', 203, 62, 203, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 203, 63, 204, 0),
woosh.Token(woosh.DEDENT, '            ', 204, 0, 204, 12),
woosh.Token(woosh.NAME, 'message', 204, 12, 204, 19),
woosh.Token(woosh.OP, '.', 204, 19, 204, 20),
woosh.Token(woosh.NAME, 'append', 204, 20, 204, 26),
woosh.Token(woosh.OP, '(', 204, 26, 204, 27),
woosh.Token(woosh.STRING, '": section "', 204, 27, 204, 39),
woosh.Token(woosh.OP, ')', 204, 39, 204, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 40, 205, 0),
woosh.Token(woosh.NAME, 'message', 205, 12, 205, 19),
woosh.Token(woosh.OP, '.', 205, 19, 205, 20),
woosh.Token(woosh.NAME, 'extend', 205, 20, 205, 26),
woosh.Token(woosh.OP, '(', 205, 26, 205, 27),
woosh.Token(woosh.NAME, 'msg', 205, 27, 205, 30),
woosh.Token(woosh.OP, ')', 205, 30, 205, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 31, 206, 0),
woosh.Token(woosh.NAME, 'msg', 206, 12, 206, 15),
woosh.Token(woosh.OP, '=', 206, 16, 206, 17),
woosh.Token(woosh.NAME, 'message', 206, 18, 206, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 25, 207, 0),
woosh.Token(woosh.DEDENT, '        ', 207, 0, 207, 8),
woosh.Token(woosh.NAME, 'else', 207, 8, 207, 12),
woosh.Token(woosh.OP, ':', 207, 12, 207, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 207, 13, 208, 0),
woosh.Token(woosh.INDENT, '            ', 208, 0, 208, 12),
woosh.Token(woosh.NAME, 'msg', 208, 12, 208, 15),
woosh.Token(woosh.OP, '.', 208, 15, 208, 16),
woosh.Token(woosh.NAME, 'insert', 208, 16, 208, 22),
woosh.Token(woosh.OP, '(', 208, 22, 208, 23),
woosh.Token(woosh.NUMBER, '0', 208, 23, 208, 24),
woosh.Token(woosh.OP, ',', 208, 24, 208, 25),
woosh.Token(woosh.STRING, '"Section "', 208, 26, 208, 36),
woosh.Token(woosh.OP, ')', 208, 36, 208, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 37, 209, 0),
woosh.Token(woosh.DEDENT, '        ', 209, 0, 209, 8),
woosh.Token(woosh.NAME, 'Error', 209, 8, 209, 13),
woosh.Token(woosh.OP, '.', 209, 13, 209, 14),
woosh.Token(woosh.NAME, '__init__', 209, 14, 209, 22),
woosh.Token(woosh.OP, '(', 209, 22, 209, 23),
woosh.Token(woosh.NAME, 'self', 209, 23, 209, 27),
woosh.Token(woosh.OP, ',', 209, 27, 209, 28),
woosh.Token(woosh.STRING, '""', 209, 29, 209, 31),
woosh.Token(woosh.OP, '.', 209, 31, 209, 32),
woosh.Token(woosh.NAME, 'join', 209, 32, 209, 36),
woosh.Token(woosh.OP, '(', 209, 36, 209, 37),
woosh.Token(woosh.NAME, 'msg', 209, 37, 209, 40),
woosh.Token(woosh.OP, ')', 209, 40, 209, 41),
woosh.Token(woosh.OP, ')', 209, 41, 209, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 209, 42, 210, 0),
woosh.Token(woosh.NAME, 'self', 210, 8, 210, 12),
woosh.Token(woosh.OP, '.', 210, 12, 210, 13),
woosh.Token(woosh.NAME, 'section', 210, 13, 210, 20),
woosh.Token(woosh.OP, '=', 210, 21, 210, 22),
woosh.Token(woosh.NAME, 'section', 210, 23, 210, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 210, 30, 211, 0),
woosh.Token(woosh.NAME, 'self', 211, 8, 211, 12),
woosh.Token(woosh.OP, '.', 211, 12, 211, 13),
woosh.Token(woosh.NAME, 'source', 211, 13, 211, 19),
woosh.Token(woosh.OP, '=', 211, 20, 211, 21),
woosh.Token(woosh.NAME, 'source', 211, 22, 211, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 211, 28, 212, 0),
woosh.Token(woosh.NAME, 'self', 212, 8, 212, 12),
woosh.Token(woosh.OP, '.', 212, 12, 212, 13),
woosh.Token(woosh.NAME, 'lineno', 212, 13, 212, 19),
woosh.Token(woosh.OP, '=', 212, 20, 212, 21),
woosh.Token(woosh.NAME, 'lineno', 212, 22, 212, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 212, 28, 213, 0),
woosh.Token(woosh.NAME, 'self', 213, 8, 213, 12),
woosh.Token(woosh.OP, '.', 213, 12, 213, 13),
woosh.Token(woosh.NAME, 'args', 213, 13, 213, 17),
woosh.Token(woosh.OP, '=', 213, 18, 213, 19),
woosh.Token(woosh.OP, '(', 213, 20, 213, 21),
woosh.Token(woosh.NAME, 'section', 213, 21, 213, 28),
woosh.Token(woosh.OP, ',', 213, 28, 213, 29),
woosh.Token(woosh.NAME, 'source', 213, 30, 213, 36),
woosh.Token(woosh.OP, ',', 213, 36, 213, 37),
woosh.Token(woosh.NAME, 'lineno', 213, 38, 213, 44),
woosh.Token(woosh.OP, ')', 213, 44, 213, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 213, 45, 214, 0),
woosh.Token(woosh.DEDENT, '', 216, 0, 216, 0),
woosh.Token(woosh.DEDENT, '', 216, 0, 216, 0),
woosh.Token(woosh.NAME, 'class', 216, 0, 216, 5),
woosh.Token(woosh.NAME, 'DuplicateOptionError', 216, 6, 216, 26),
woosh.Token(woosh.OP, '(', 216, 26, 216, 27),
woosh.Token(woosh.NAME, 'Error', 216, 27, 216, 32),
woosh.Token(woosh.OP, ')', 216, 32, 216, 33),
woosh.Token(woosh.OP, ':', 216, 33, 216, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 34, 217, 0),
woosh.Token(woosh.INDENT, '    ', 217, 0, 217, 4),
woosh.Token(woosh.STRING, '"""Raised by strict parsers when an option is repeated in an input source.\r\n\r\n    Current implementation raises this exception only when an option is found\r\n    more than once in a single file, string or dictionary.\r\n    """', 217, 4, 221, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 7, 222, 0),
woosh.Token(woosh.NAME, 'def', 223, 4, 223, 7),
woosh.Token(woosh.NAME, '__init__', 223, 8, 223, 16),
woosh.Token(woosh.OP, '(', 223, 16, 223, 17),
woosh.Token(woosh.NAME, 'self', 223, 17, 223, 21),
woosh.Token(woosh.OP, ',', 223, 21, 223, 22),
woosh.Token(woosh.NAME, 'section', 223, 23, 223, 30),
woosh.Token(woosh.OP, ',', 223, 30, 223, 31),
woosh.Token(woosh.NAME, 'option', 223, 32, 223, 38),
woosh.Token(woosh.OP, ',', 223, 38, 223, 39),
woosh.Token(woosh.NAME, 'source', 223, 40, 223, 46),
woosh.Token(woosh.OP, '=', 223, 46, 223, 47),
woosh.Token(woosh.NAME, 'None', 223, 47, 223, 51),
woosh.Token(woosh.OP, ',', 223, 51, 223, 52),
woosh.Token(woosh.NAME, 'lineno', 223, 53, 223, 59),
woosh.Token(woosh.OP, '=', 223, 59, 223, 60),
woosh.Token(woosh.NAME, 'None', 223, 60, 223, 64),
woosh.Token(woosh.OP, ')', 223, 64, 223, 65),
woosh.Token(woosh.OP, ':', 223, 65, 223, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 66, 224, 0),
woosh.Token(woosh.INDENT, '        ', 224, 0, 224, 8),
woosh.Token(woosh.NAME, 'msg', 224, 8, 224, 11),
woosh.Token(woosh.OP, '=', 224, 12, 224, 13),
woosh.Token(woosh.OP, '[', 224, 14, 224, 15),
woosh.Token(woosh.NAME, 'repr', 224, 15, 224, 19),
woosh.Token(woosh.OP, '(', 224, 19, 224, 20),
woosh.Token(woosh.NAME, 'option', 224, 20, 224, 26),
woosh.Token(woosh.OP, ')', 224, 26, 224, 27),
woosh.Token(woosh.OP, ',', 224, 27, 224, 28),
woosh.Token(woosh.STRING, '" in section "', 224, 29, 224, 43),
woosh.Token(woosh.OP, ',', 224, 43, 224, 44),
woosh.Token(woosh.NAME, 'repr', 224, 45, 224, 49),
woosh.Token(woosh.OP, '(', 224, 49, 224, 50),
woosh.Token(woosh.NAME, 'section', 224, 50, 224, 57),
woosh.Token(woosh.OP, ')', 224, 57, 224, 58),
woosh.Token(woosh.OP, ',', 224, 58, 224, 59),
woosh.Token(woosh.STRING, '" already exists"', 225, 15, 225, 32),
woosh.Token(woosh.OP, ']', 225, 32, 225, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 33, 226, 0),
woosh.Token(woosh.NAME, 'if', 226, 8, 226, 10),
woosh.Token(woosh.NAME, 'source', 226, 11, 226, 17),
woosh.Token(woosh.NAME, 'is', 226, 18, 226, 20),
woosh.Token(woosh.NAME, 'not', 226, 21, 226, 24),
woosh.Token(woosh.NAME, 'None', 226, 25, 226, 29),
woosh.Token(woosh.OP, ':', 226, 29, 226, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 30, 227, 0),
woosh.Token(woosh.INDENT, '            ', 227, 0, 227, 12),
woosh.Token(woosh.NAME, 'message', 227, 12, 227, 19),
woosh.Token(woosh.OP, '=', 227, 20, 227, 21),
woosh.Token(woosh.OP, '[', 227, 22, 227, 23),
woosh.Token(woosh.STRING, '"While reading from "', 227, 23, 227, 44),
woosh.Token(woosh.OP, ',', 227, 44, 227, 45),
woosh.Token(woosh.NAME, 'repr', 227, 46, 227, 50),
woosh.Token(woosh.OP, '(', 227, 50, 227, 51),
woosh.Token(woosh.NAME, 'source', 227, 51, 227, 57),
woosh.Token(woosh.OP, ')', 227, 57, 227, 58),
woosh.Token(woosh.OP, ']', 227, 58, 227, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 59, 228, 0),
woosh.Token(woosh.NAME, 'if', 228, 12, 228, 14),
woosh.Token(woosh.NAME, 'lineno', 228, 15, 228, 21),
woosh.Token(woosh.NAME, 'is', 228, 22, 228, 24),
woosh.Token(woosh.NAME, 'not', 228, 25, 228, 28),
woosh.Token(woosh.NAME, 'None', 228, 29, 228, 33),
woosh.Token(woosh.OP, ':', 228, 33, 228, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 34, 229, 0),
woosh.Token(woosh.INDENT, '                ', 229, 0, 229, 16),
woosh.Token(woosh.NAME, 'message', 229, 16, 229, 23),
woosh.Token(woosh.OP, '.', 229, 23, 229, 24),
woosh.Token(woosh.NAME, 'append', 229, 24, 229, 30),
woosh.Token(woosh.OP, '(', 229, 30, 229, 31),
woosh.Token(woosh.STRING, '" [line {0:2d}]"', 229, 31, 229, 47),
woosh.Token(woosh.OP, '.', 229, 47, 229, 48),
woosh.Token(woosh.NAME, 'format', 229, 48, 229, 54),
woosh.Token(woosh.OP, '(', 229, 54, 229, 55),
woosh.Token(woosh.NAME, 'lineno', 229, 55, 229, 61),
woosh.Token(woosh.OP, ')', 229, 61, 229, 62),
woosh.Token(woosh.OP, ')', 229, 62, 229, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 63, 230, 0),
woosh.Token(woosh.DEDENT, '            ', 230, 0, 230, 12),
woosh.Token(woosh.NAME, 'message', 230, 12, 230, 19),
woosh.Token(woosh.OP, '.', 230, 19, 230, 20),
woosh.Token(woosh.NAME, 'append', 230, 20, 230, 26),
woosh.Token(woosh.OP, '(', 230, 26, 230, 27),
woosh.Token(woosh.STRING, '": option "', 230, 27, 230, 38),
woosh.Token(woosh.OP, ')', 230, 38, 230, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 230, 39, 231, 0),
woosh.Token(woosh.NAME, 'message', 231, 12, 231, 19),
woosh.Token(woosh.OP, '.', 231, 19, 231, 20),
woosh.Token(woosh.NAME, 'extend', 231, 20, 231, 26),
woosh.Token(woosh.OP, '(', 231, 26, 231, 27),
woosh.Token(woosh.NAME, 'msg', 231, 27, 231, 30),
woosh.Token(woosh.OP, ')', 231, 30, 231, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 31, 232, 0),
woosh.Token(woosh.NAME, 'msg', 232, 12, 232, 15),
woosh.Token(woosh.OP, '=', 232, 16, 232, 17),
woosh.Token(woosh.NAME, 'message', 232, 18, 232, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 232, 25, 233, 0),
woosh.Token(woosh.DEDENT, '        ', 233, 0, 233, 8),
woosh.Token(woosh.NAME, 'else', 233, 8, 233, 12),
woosh.Token(woosh.OP, ':', 233, 12, 233, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 233, 13, 234, 0),
woosh.Token(woosh.INDENT, '            ', 234, 0, 234, 12),
woosh.Token(woosh.NAME, 'msg', 234, 12, 234, 15),
woosh.Token(woosh.OP, '.', 234, 15, 234, 16),
woosh.Token(woosh.NAME, 'insert', 234, 16, 234, 22),
woosh.Token(woosh.OP, '(', 234, 22, 234, 23),
woosh.Token(woosh.NUMBER, '0', 234, 23, 234, 24),
woosh.Token(woosh.OP, ',', 234, 24, 234, 25),
woosh.Token(woosh.STRING, '"Option "', 234, 26, 234, 35),
woosh.Token(woosh.OP, ')', 234, 35, 234, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 234, 36, 235, 0),
woosh.Token(woosh.DEDENT, '        ', 235, 0, 235, 8),
woosh.Token(woosh.NAME, 'Error', 235, 8, 235, 13),
woosh.Token(woosh.OP, '.', 235, 13, 235, 14),
woosh.Token(woosh.NAME, '__init__', 235, 14, 235, 22),
woosh.Token(woosh.OP, '(', 235, 22, 235, 23),
woosh.Token(woosh.NAME, 'self', 235, 23, 235, 27),
woosh.Token(woosh.OP, ',', 235, 27, 235, 28),
woosh.Token(woosh.STRING, '""', 235, 29, 235, 31),
woosh.Token(woosh.OP, '.', 235, 31, 235, 32),
woosh.Token(woosh.NAME, 'join', 235, 32, 235, 36),
woosh.Token(woosh.OP, '(', 235, 36, 235, 37),
woosh.Token(woosh.NAME, 'msg', 235, 37, 235, 40),
woosh.Token(woosh.OP, ')', 235, 40, 235, 41),
woosh.Token(woosh.OP, ')', 235, 41, 235, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 235, 42, 236, 0),
woosh.Token(woosh.NAME, 'self', 236, 8, 236, 12),
woosh.Token(woosh.OP, '.', 236, 12, 236, 13),
woosh.Token(woosh.NAME, 'section', 236, 13, 236, 20),
woosh.Token(woosh.OP, '=', 236, 21, 236, 22),
woosh.Token(woosh.NAME, 'section', 236, 23, 236, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 236, 30, 237, 0),
woosh.Token(woosh.NAME, 'self', 237, 8, 237, 12),
woosh.Token(woosh.OP, '.', 237, 12, 237, 13),
woosh.Token(woosh.NAME, 'option', 237, 13, 237, 19),
woosh.Token(woosh.OP, '=', 237, 20, 237, 21),
woosh.Token(woosh.NAME, 'option', 237, 22, 237, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 237, 28, 238, 0),
woosh.Token(woosh.NAME, 'self', 238, 8, 238, 12),
woosh.Token(woosh.OP, '.', 238, 12, 238, 13),
woosh.Token(woosh.NAME, 'source', 238, 13, 238, 19),
woosh.Token(woosh.OP, '=', 238, 20, 238, 21),
woosh.Token(woosh.NAME, 'source', 238, 22, 238, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 28, 239, 0),
woosh.Token(woosh.NAME, 'self', 239, 8, 239, 12),
woosh.Token(woosh.OP, '.', 239, 12, 239, 13),
woosh.Token(woosh.NAME, 'lineno', 239, 13, 239, 19),
woosh.Token(woosh.OP, '=', 239, 20, 239, 21),
woosh.Token(woosh.NAME, 'lineno', 239, 22, 239, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 239, 28, 240, 0),
woosh.Token(woosh.NAME, 'self', 240, 8, 240, 12),
woosh.Token(woosh.OP, '.', 240, 12, 240, 13),
woosh.Token(woosh.NAME, 'args', 240, 13, 240, 17),
woosh.Token(woosh.OP, '=', 240, 18, 240, 19),
woosh.Token(woosh.OP, '(', 240, 20, 240, 21),
woosh.Token(woosh.NAME, 'section', 240, 21, 240, 28),
woosh.Token(woosh.OP, ',', 240, 28, 240, 29),
woosh.Token(woosh.NAME, 'option', 240, 30, 240, 36),
woosh.Token(woosh.OP, ',', 240, 36, 240, 37),
woosh.Token(woosh.NAME, 'source', 240, 38, 240, 44),
woosh.Token(woosh.OP, ',', 240, 44, 240, 45),
woosh.Token(woosh.NAME, 'lineno', 240, 46, 240, 52),
woosh.Token(woosh.OP, ')', 240, 52, 240, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 240, 53, 241, 0),
woosh.Token(woosh.DEDENT, '', 243, 0, 243, 0),
woosh.Token(woosh.DEDENT, '', 243, 0, 243, 0),
woosh.Token(woosh.NAME, 'class', 243, 0, 243, 5),
woosh.Token(woosh.NAME, 'NoOptionError', 243, 6, 243, 19),
woosh.Token(woosh.OP, '(', 243, 19, 243, 20),
woosh.Token(woosh.NAME, 'Error', 243, 20, 243, 25),
woosh.Token(woosh.OP, ')', 243, 25, 243, 26),
woosh.Token(woosh.OP, ':', 243, 26, 243, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 243, 27, 244, 0),
woosh.Token(woosh.INDENT, '    ', 244, 0, 244, 4),
woosh.Token(woosh.STRING, '"""A requested option was not found."""', 244, 4, 244, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 43, 245, 0),
woosh.Token(woosh.NAME, 'def', 246, 4, 246, 7),
woosh.Token(woosh.NAME, '__init__', 246, 8, 246, 16),
woosh.Token(woosh.OP, '(', 246, 16, 246, 17),
woosh.Token(woosh.NAME, 'self', 246, 17, 246, 21),
woosh.Token(woosh.OP, ',', 246, 21, 246, 22),
woosh.Token(woosh.NAME, 'option', 246, 23, 246, 29),
woosh.Token(woosh.OP, ',', 246, 29, 246, 30),
woosh.Token(woosh.NAME, 'section', 246, 31, 246, 38),
woosh.Token(woosh.OP, ')', 246, 38, 246, 39),
woosh.Token(woosh.OP, ':', 246, 39, 246, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 40, 247, 0),
woosh.Token(woosh.INDENT, '        ', 247, 0, 247, 8),
woosh.Token(woosh.NAME, 'Error', 247, 8, 247, 13),
woosh.Token(woosh.OP, '.', 247, 13, 247, 14),
woosh.Token(woosh.NAME, '__init__', 247, 14, 247, 22),
woosh.Token(woosh.OP, '(', 247, 22, 247, 23),
woosh.Token(woosh.NAME, 'self', 247, 23, 247, 27),
woosh.Token(woosh.OP, ',', 247, 27, 247, 28),
woosh.Token(woosh.STRING, '"No option %r in section: %r"', 247, 29, 247, 58),
woosh.Token(woosh.OP, '%', 247, 59, 247, 60),
woosh.Token(woosh.OP, '(', 248, 23, 248, 24),
woosh.Token(woosh.NAME, 'option', 248, 24, 248, 30),
woosh.Token(woosh.OP, ',', 248, 30, 248, 31),
woosh.Token(woosh.NAME, 'section', 248, 32, 248, 39),
woosh.Token(woosh.OP, ')', 248, 39, 248, 40),
woosh.Token(woosh.OP, ')', 248, 40, 248, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 41, 249, 0),
woosh.Token(woosh.NAME, 'self', 249, 8, 249, 12),
woosh.Token(woosh.OP, '.', 249, 12, 249, 13),
woosh.Token(woosh.NAME, 'option', 249, 13, 249, 19),
woosh.Token(woosh.OP, '=', 249, 20, 249, 21),
woosh.Token(woosh.NAME, 'option', 249, 22, 249, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 28, 250, 0),
woosh.Token(woosh.NAME, 'self', 250, 8, 250, 12),
woosh.Token(woosh.OP, '.', 250, 12, 250, 13),
woosh.Token(woosh.NAME, 'section', 250, 13, 250, 20),
woosh.Token(woosh.OP, '=', 250, 21, 250, 22),
woosh.Token(woosh.NAME, 'section', 250, 23, 250, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 30, 251, 0),
woosh.Token(woosh.NAME, 'self', 251, 8, 251, 12),
woosh.Token(woosh.OP, '.', 251, 12, 251, 13),
woosh.Token(woosh.NAME, 'args', 251, 13, 251, 17),
woosh.Token(woosh.OP, '=', 251, 18, 251, 19),
woosh.Token(woosh.OP, '(', 251, 20, 251, 21),
woosh.Token(woosh.NAME, 'option', 251, 21, 251, 27),
woosh.Token(woosh.OP, ',', 251, 27, 251, 28),
woosh.Token(woosh.NAME, 'section', 251, 29, 251, 36),
woosh.Token(woosh.OP, ')', 251, 36, 251, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 37, 252, 0),
woosh.Token(woosh.DEDENT, '', 254, 0, 254, 0),
woosh.Token(woosh.DEDENT, '', 254, 0, 254, 0),
woosh.Token(woosh.NAME, 'class', 254, 0, 254, 5),
woosh.Token(woosh.NAME, 'InterpolationError', 254, 6, 254, 24),
woosh.Token(woosh.OP, '(', 254, 24, 254, 25),
woosh.Token(woosh.NAME, 'Error', 254, 25, 254, 30),
woosh.Token(woosh.OP, ')', 254, 30, 254, 31),
woosh.Token(woosh.OP, ':', 254, 31, 254, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 32, 255, 0),
woosh.Token(woosh.INDENT, '    ', 255, 0, 255, 4),
woosh.Token(woosh.STRING, '"""Base class for interpolation-related exceptions."""', 255, 4, 255, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 255, 58, 256, 0),
woosh.Token(woosh.NAME, 'def', 257, 4, 257, 7),
woosh.Token(woosh.NAME, '__init__', 257, 8, 257, 16),
woosh.Token(woosh.OP, '(', 257, 16, 257, 17),
woosh.Token(woosh.NAME, 'self', 257, 17, 257, 21),
woosh.Token(woosh.OP, ',', 257, 21, 257, 22),
woosh.Token(woosh.NAME, 'option', 257, 23, 257, 29),
woosh.Token(woosh.OP, ',', 257, 29, 257, 30),
woosh.Token(woosh.NAME, 'section', 257, 31, 257, 38),
woosh.Token(woosh.OP, ',', 257, 38, 257, 39),
woosh.Token(woosh.NAME, 'msg', 257, 40, 257, 43),
woosh.Token(woosh.OP, ')', 257, 43, 257, 44),
woosh.Token(woosh.OP, ':', 257, 44, 257, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 45, 258, 0),
woosh.Token(woosh.INDENT, '        ', 258, 0, 258, 8),
woosh.Token(woosh.NAME, 'Error', 258, 8, 258, 13),
woosh.Token(woosh.OP, '.', 258, 13, 258, 14),
woosh.Token(woosh.NAME, '__init__', 258, 14, 258, 22),
woosh.Token(woosh.OP, '(', 258, 22, 258, 23),
woosh.Token(woosh.NAME, 'self', 258, 23, 258, 27),
woosh.Token(woosh.OP, ',', 258, 27, 258, 28),
woosh.Token(woosh.NAME, 'msg', 258, 29, 258, 32),
woosh.Token(woosh.OP, ')', 258, 32, 258, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 33, 259, 0),
woosh.Token(woosh.NAME, 'self', 259, 8, 259, 12),
woosh.Token(woosh.OP, '.', 259, 12, 259, 13),
woosh.Token(woosh.NAME, 'option', 259, 13, 259, 19),
woosh.Token(woosh.OP, '=', 259, 20, 259, 21),
woosh.Token(woosh.NAME, 'option', 259, 22, 259, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 28, 260, 0),
woosh.Token(woosh.NAME, 'self', 260, 8, 260, 12),
woosh.Token(woosh.OP, '.', 260, 12, 260, 13),
woosh.Token(woosh.NAME, 'section', 260, 13, 260, 20),
woosh.Token(woosh.OP, '=', 260, 21, 260, 22),
woosh.Token(woosh.NAME, 'section', 260, 23, 260, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 260, 30, 261, 0),
woosh.Token(woosh.NAME, 'self', 261, 8, 261, 12),
woosh.Token(woosh.OP, '.', 261, 12, 261, 13),
woosh.Token(woosh.NAME, 'args', 261, 13, 261, 17),
woosh.Token(woosh.OP, '=', 261, 18, 261, 19),
woosh.Token(woosh.OP, '(', 261, 20, 261, 21),
woosh.Token(woosh.NAME, 'option', 261, 21, 261, 27),
woosh.Token(woosh.OP, ',', 261, 27, 261, 28),
woosh.Token(woosh.NAME, 'section', 261, 29, 261, 36),
woosh.Token(woosh.OP, ',', 261, 36, 261, 37),
woosh.Token(woosh.NAME, 'msg', 261, 38, 261, 41),
woosh.Token(woosh.OP, ')', 261, 41, 261, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 42, 262, 0),
woosh.Token(woosh.DEDENT, '', 264, 0, 264, 0),
woosh.Token(woosh.DEDENT, '', 264, 0, 264, 0),
woosh.Token(woosh.NAME, 'class', 264, 0, 264, 5),
woosh.Token(woosh.NAME, 'InterpolationMissingOptionError', 264, 6, 264, 37),
woosh.Token(woosh.OP, '(', 264, 37, 264, 38),
woosh.Token(woosh.NAME, 'InterpolationError', 264, 38, 264, 56),
woosh.Token(woosh.OP, ')', 264, 56, 264, 57),
woosh.Token(woosh.OP, ':', 264, 57, 264, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 264, 58, 265, 0),
woosh.Token(woosh.INDENT, '    ', 265, 0, 265, 4),
woosh.Token(woosh.STRING, '"""A string substitution required a setting which was not available."""', 265, 4, 265, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 75, 266, 0),
woosh.Token(woosh.NAME, 'def', 267, 4, 267, 7),
woosh.Token(woosh.NAME, '__init__', 267, 8, 267, 16),
woosh.Token(woosh.OP, '(', 267, 16, 267, 17),
woosh.Token(woosh.NAME, 'self', 267, 17, 267, 21),
woosh.Token(woosh.OP, ',', 267, 21, 267, 22),
woosh.Token(woosh.NAME, 'option', 267, 23, 267, 29),
woosh.Token(woosh.OP, ',', 267, 29, 267, 30),
woosh.Token(woosh.NAME, 'section', 267, 31, 267, 38),
woosh.Token(woosh.OP, ',', 267, 38, 267, 39),
woosh.Token(woosh.NAME, 'rawval', 267, 40, 267, 46),
woosh.Token(woosh.OP, ',', 267, 46, 267, 47),
woosh.Token(woosh.NAME, 'reference', 267, 48, 267, 57),
woosh.Token(woosh.OP, ')', 267, 57, 267, 58),
woosh.Token(woosh.OP, ':', 267, 58, 267, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 59, 268, 0),
woosh.Token(woosh.INDENT, '        ', 268, 0, 268, 8),
woosh.Token(woosh.NAME, 'msg', 268, 8, 268, 11),
woosh.Token(woosh.OP, '=', 268, 12, 268, 13),
woosh.Token(woosh.OP, '(', 268, 14, 268, 15),
woosh.Token(woosh.STRING, '"Bad value substitution: option {!r} in section {!r} contains "', 268, 15, 268, 78),
woosh.Token(woosh.STRING, '"an interpolation key {!r} which is not a valid option name. "', 269, 15, 269, 77),
woosh.Token(woosh.STRING, '"Raw value: {!r}"', 270, 15, 270, 32),
woosh.Token(woosh.OP, '.', 270, 32, 270, 33),
woosh.Token(woosh.NAME, 'format', 270, 33, 270, 39),
woosh.Token(woosh.OP, '(', 270, 39, 270, 40),
woosh.Token(woosh.NAME, 'option', 270, 40, 270, 46),
woosh.Token(woosh.OP, ',', 270, 46, 270, 47),
woosh.Token(woosh.NAME, 'section', 270, 48, 270, 55),
woosh.Token(woosh.OP, ',', 270, 55, 270, 56),
woosh.Token(woosh.NAME, 'reference', 270, 57, 270, 66),
woosh.Token(woosh.OP, ',', 270, 66, 270, 67),
woosh.Token(woosh.NAME, 'rawval', 270, 68, 270, 74),
woosh.Token(woosh.OP, ')', 270, 74, 270, 75),
woosh.Token(woosh.OP, ')', 270, 75, 270, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 76, 271, 0),
woosh.Token(woosh.NAME, 'InterpolationError', 271, 8, 271, 26),
woosh.Token(woosh.OP, '.', 271, 26, 271, 27),
woosh.Token(woosh.NAME, '__init__', 271, 27, 271, 35),
woosh.Token(woosh.OP, '(', 271, 35, 271, 36),
woosh.Token(woosh.NAME, 'self', 271, 36, 271, 40),
woosh.Token(woosh.OP, ',', 271, 40, 271, 41),
woosh.Token(woosh.NAME, 'option', 271, 42, 271, 48),
woosh.Token(woosh.OP, ',', 271, 48, 271, 49),
woosh.Token(woosh.NAME, 'section', 271, 50, 271, 57),
woosh.Token(woosh.OP, ',', 271, 57, 271, 58),
woosh.Token(woosh.NAME, 'msg', 271, 59, 271, 62),
woosh.Token(woosh.OP, ')', 271, 62, 271, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 271, 63, 272, 0),
woosh.Token(woosh.NAME, 'self', 272, 8, 272, 12),
woosh.Token(woosh.OP, '.', 272, 12, 272, 13),
woosh.Token(woosh.NAME, 'reference', 272, 13, 272, 22),
woosh.Token(woosh.OP, '=', 272, 23, 272, 24),
woosh.Token(woosh.NAME, 'reference', 272, 25, 272, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 34, 273, 0),
woosh.Token(woosh.NAME, 'self', 273, 8, 273, 12),
woosh.Token(woosh.OP, '.', 273, 12, 273, 13),
woosh.Token(woosh.NAME, 'args', 273, 13, 273, 17),
woosh.Token(woosh.OP, '=', 273, 18, 273, 19),
woosh.Token(woosh.OP, '(', 273, 20, 273, 21),
woosh.Token(woosh.NAME, 'option', 273, 21, 273, 27),
woosh.Token(woosh.OP, ',', 273, 27, 273, 28),
woosh.Token(woosh.NAME, 'section', 273, 29, 273, 36),
woosh.Token(woosh.OP, ',', 273, 36, 273, 37),
woosh.Token(woosh.NAME, 'rawval', 273, 38, 273, 44),
woosh.Token(woosh.OP, ',', 273, 44, 273, 45),
woosh.Token(woosh.NAME, 'reference', 273, 46, 273, 55),
woosh.Token(woosh.OP, ')', 273, 55, 273, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 273, 56, 274, 0),
woosh.Token(woosh.DEDENT, '', 276, 0, 276, 0),
woosh.Token(woosh.DEDENT, '', 276, 0, 276, 0),
woosh.Token(woosh.NAME, 'class', 276, 0, 276, 5),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 276, 6, 276, 30),
woosh.Token(woosh.OP, '(', 276, 30, 276, 31),
woosh.Token(woosh.NAME, 'InterpolationError', 276, 31, 276, 49),
woosh.Token(woosh.OP, ')', 276, 49, 276, 50),
woosh.Token(woosh.OP, ':', 276, 50, 276, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 276, 51, 277, 0),
woosh.Token(woosh.INDENT, '    ', 277, 0, 277, 4),
woosh.Token(woosh.STRING, '"""Raised when the source text contains invalid syntax.\r\n\r\n    Current implementation raises this exception when the source text into\r\n    which substitutions are made does not conform to the required syntax.\r\n    """', 277, 4, 281, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 281, 7, 282, 0),
woosh.Token(woosh.DEDENT, '', 284, 0, 284, 0),
woosh.Token(woosh.NAME, 'class', 284, 0, 284, 5),
woosh.Token(woosh.NAME, 'InterpolationDepthError', 284, 6, 284, 29),
woosh.Token(woosh.OP, '(', 284, 29, 284, 30),
woosh.Token(woosh.NAME, 'InterpolationError', 284, 30, 284, 48),
woosh.Token(woosh.OP, ')', 284, 48, 284, 49),
woosh.Token(woosh.OP, ':', 284, 49, 284, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 284, 50, 285, 0),
woosh.Token(woosh.INDENT, '    ', 285, 0, 285, 4),
woosh.Token(woosh.STRING, '"""Raised when substitutions are nested too deeply."""', 285, 4, 285, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 285, 58, 286, 0),
woosh.Token(woosh.NAME, 'def', 287, 4, 287, 7),
woosh.Token(woosh.NAME, '__init__', 287, 8, 287, 16),
woosh.Token(woosh.OP, '(', 287, 16, 287, 17),
woosh.Token(woosh.NAME, 'self', 287, 17, 287, 21),
woosh.Token(woosh.OP, ',', 287, 21, 287, 22),
woosh.Token(woosh.NAME, 'option', 287, 23, 287, 29),
woosh.Token(woosh.OP, ',', 287, 29, 287, 30),
woosh.Token(woosh.NAME, 'section', 287, 31, 287, 38),
woosh.Token(woosh.OP, ',', 287, 38, 287, 39),
woosh.Token(woosh.NAME, 'rawval', 287, 40, 287, 46),
woosh.Token(woosh.OP, ')', 287, 46, 287, 47),
woosh.Token(woosh.OP, ':', 287, 47, 287, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 287, 48, 288, 0),
woosh.Token(woosh.INDENT, '        ', 288, 0, 288, 8),
woosh.Token(woosh.NAME, 'msg', 288, 8, 288, 11),
woosh.Token(woosh.OP, '=', 288, 12, 288, 13),
woosh.Token(woosh.OP, '(', 288, 14, 288, 15),
woosh.Token(woosh.STRING, '"Recursion limit exceeded in value substitution: option {!r} "', 288, 15, 288, 77),
woosh.Token(woosh.STRING, '"in section {!r} contains an interpolation key which "', 289, 15, 289, 69),
woosh.Token(woosh.STRING, '"cannot be substituted in {} steps. Raw value: {!r}"', 290, 15, 290, 67),
woosh.Token(woosh.STRING, '""', 291, 15, 291, 17),
woosh.Token(woosh.OP, '.', 291, 17, 291, 18),
woosh.Token(woosh.NAME, 'format', 291, 18, 291, 24),
woosh.Token(woosh.OP, '(', 291, 24, 291, 25),
woosh.Token(woosh.NAME, 'option', 291, 25, 291, 31),
woosh.Token(woosh.OP, ',', 291, 31, 291, 32),
woosh.Token(woosh.NAME, 'section', 291, 33, 291, 40),
woosh.Token(woosh.OP, ',', 291, 40, 291, 41),
woosh.Token(woosh.NAME, 'MAX_INTERPOLATION_DEPTH', 291, 42, 291, 65),
woosh.Token(woosh.OP, ',', 291, 65, 291, 66),
woosh.Token(woosh.NAME, 'rawval', 292, 25, 292, 31),
woosh.Token(woosh.OP, ')', 292, 31, 292, 32),
woosh.Token(woosh.OP, ')', 292, 32, 292, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 33, 293, 0),
woosh.Token(woosh.NAME, 'InterpolationError', 293, 8, 293, 26),
woosh.Token(woosh.OP, '.', 293, 26, 293, 27),
woosh.Token(woosh.NAME, '__init__', 293, 27, 293, 35),
woosh.Token(woosh.OP, '(', 293, 35, 293, 36),
woosh.Token(woosh.NAME, 'self', 293, 36, 293, 40),
woosh.Token(woosh.OP, ',', 293, 40, 293, 41),
woosh.Token(woosh.NAME, 'option', 293, 42, 293, 48),
woosh.Token(woosh.OP, ',', 293, 48, 293, 49),
woosh.Token(woosh.NAME, 'section', 293, 50, 293, 57),
woosh.Token(woosh.OP, ',', 293, 57, 293, 58),
woosh.Token(woosh.NAME, 'msg', 293, 59, 293, 62),
woosh.Token(woosh.OP, ')', 293, 62, 293, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 293, 63, 294, 0),
woosh.Token(woosh.NAME, 'self', 294, 8, 294, 12),
woosh.Token(woosh.OP, '.', 294, 12, 294, 13),
woosh.Token(woosh.NAME, 'args', 294, 13, 294, 17),
woosh.Token(woosh.OP, '=', 294, 18, 294, 19),
woosh.Token(woosh.OP, '(', 294, 20, 294, 21),
woosh.Token(woosh.NAME, 'option', 294, 21, 294, 27),
woosh.Token(woosh.OP, ',', 294, 27, 294, 28),
woosh.Token(woosh.NAME, 'section', 294, 29, 294, 36),
woosh.Token(woosh.OP, ',', 294, 36, 294, 37),
woosh.Token(woosh.NAME, 'rawval', 294, 38, 294, 44),
woosh.Token(woosh.OP, ')', 294, 44, 294, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 294, 45, 295, 0),
woosh.Token(woosh.DEDENT, '', 297, 0, 297, 0),
woosh.Token(woosh.DEDENT, '', 297, 0, 297, 0),
woosh.Token(woosh.NAME, 'class', 297, 0, 297, 5),
woosh.Token(woosh.NAME, 'ParsingError', 297, 6, 297, 18),
woosh.Token(woosh.OP, '(', 297, 18, 297, 19),
woosh.Token(woosh.NAME, 'Error', 297, 19, 297, 24),
woosh.Token(woosh.OP, ')', 297, 24, 297, 25),
woosh.Token(woosh.OP, ':', 297, 25, 297, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 297, 26, 298, 0),
woosh.Token(woosh.INDENT, '    ', 298, 0, 298, 4),
woosh.Token(woosh.STRING, '"""Raised when a configuration file does not follow legal syntax."""', 298, 4, 298, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 298, 72, 299, 0),
woosh.Token(woosh.NAME, 'def', 300, 4, 300, 7),
woosh.Token(woosh.NAME, '__init__', 300, 8, 300, 16),
woosh.Token(woosh.OP, '(', 300, 16, 300, 17),
woosh.Token(woosh.NAME, 'self', 300, 17, 300, 21),
woosh.Token(woosh.OP, ',', 300, 21, 300, 22),
woosh.Token(woosh.NAME, 'source', 300, 23, 300, 29),
woosh.Token(woosh.OP, '=', 300, 29, 300, 30),
woosh.Token(woosh.NAME, 'None', 300, 30, 300, 34),
woosh.Token(woosh.OP, ',', 300, 34, 300, 35),
woosh.Token(woosh.NAME, 'filename', 300, 36, 300, 44),
woosh.Token(woosh.OP, '=', 300, 44, 300, 45),
woosh.Token(woosh.NAME, 'None', 300, 45, 300, 49),
woosh.Token(woosh.OP, ')', 300, 49, 300, 50),
woosh.Token(woosh.OP, ':', 300, 50, 300, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 300, 51, 301, 0),
woosh.Token(woosh.COMMENT, "# Exactly one of `source'/`filename' arguments has to be given.", 301, 8, 301, 71),
woosh.Token(woosh.COMMENT, "# `filename' kept for compatibility.", 302, 8, 302, 44),
woosh.Token(woosh.INDENT, '        ', 303, 0, 303, 8),
woosh.Token(woosh.NAME, 'if', 303, 8, 303, 10),
woosh.Token(woosh.NAME, 'filename', 303, 11, 303, 19),
woosh.Token(woosh.NAME, 'and', 303, 20, 303, 23),
woosh.Token(woosh.NAME, 'source', 303, 24, 303, 30),
woosh.Token(woosh.OP, ':', 303, 30, 303, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 303, 31, 304, 0),
woosh.Token(woosh.INDENT, '            ', 304, 0, 304, 12),
woosh.Token(woosh.NAME, 'raise', 304, 12, 304, 17),
woosh.Token(woosh.NAME, 'ValueError', 304, 18, 304, 28),
woosh.Token(woosh.OP, '(', 304, 28, 304, 29),
woosh.Token(woosh.STRING, '"Cannot specify both `filename\' and `source\'. "', 304, 29, 304, 76),
woosh.Token(woosh.STRING, '"Use `source\'."', 305, 29, 305, 44),
woosh.Token(woosh.OP, ')', 305, 44, 305, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 305, 45, 306, 0),
woosh.Token(woosh.DEDENT, '        ', 306, 0, 306, 8),
woosh.Token(woosh.NAME, 'elif', 306, 8, 306, 12),
woosh.Token(woosh.NAME, 'not', 306, 13, 306, 16),
woosh.Token(woosh.NAME, 'filename', 306, 17, 306, 25),
woosh.Token(woosh.NAME, 'and', 306, 26, 306, 29),
woosh.Token(woosh.NAME, 'not', 306, 30, 306, 33),
woosh.Token(woosh.NAME, 'source', 306, 34, 306, 40),
woosh.Token(woosh.OP, ':', 306, 40, 306, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 306, 41, 307, 0),
woosh.Token(woosh.INDENT, '            ', 307, 0, 307, 12),
woosh.Token(woosh.NAME, 'raise', 307, 12, 307, 17),
woosh.Token(woosh.NAME, 'ValueError', 307, 18, 307, 28),
woosh.Token(woosh.OP, '(', 307, 28, 307, 29),
woosh.Token(woosh.STRING, '"Required argument `source\' not given."', 307, 29, 307, 68),
woosh.Token(woosh.OP, ')', 307, 68, 307, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 307, 69, 308, 0),
woosh.Token(woosh.DEDENT, '        ', 308, 0, 308, 8),
woosh.Token(woosh.NAME, 'elif', 308, 8, 308, 12),
woosh.Token(woosh.NAME, 'filename', 308, 13, 308, 21),
woosh.Token(woosh.OP, ':', 308, 21, 308, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 22, 309, 0),
woosh.Token(woosh.INDENT, '            ', 309, 0, 309, 12),
woosh.Token(woosh.NAME, 'source', 309, 12, 309, 18),
woosh.Token(woosh.OP, '=', 309, 19, 309, 20),
woosh.Token(woosh.NAME, 'filename', 309, 21, 309, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 309, 29, 310, 0),
woosh.Token(woosh.DEDENT, '        ', 310, 0, 310, 8),
woosh.Token(woosh.NAME, 'Error', 310, 8, 310, 13),
woosh.Token(woosh.OP, '.', 310, 13, 310, 14),
woosh.Token(woosh.NAME, '__init__', 310, 14, 310, 22),
woosh.Token(woosh.OP, '(', 310, 22, 310, 23),
woosh.Token(woosh.NAME, 'self', 310, 23, 310, 27),
woosh.Token(woosh.OP, ',', 310, 27, 310, 28),
woosh.Token(woosh.STRING, "'Source contains parsing errors: %r'", 310, 29, 310, 65),
woosh.Token(woosh.OP, '%', 310, 66, 310, 67),
woosh.Token(woosh.NAME, 'source', 310, 68, 310, 74),
woosh.Token(woosh.OP, ')', 310, 74, 310, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 75, 311, 0),
woosh.Token(woosh.NAME, 'self', 311, 8, 311, 12),
woosh.Token(woosh.OP, '.', 311, 12, 311, 13),
woosh.Token(woosh.NAME, 'source', 311, 13, 311, 19),
woosh.Token(woosh.OP, '=', 311, 20, 311, 21),
woosh.Token(woosh.NAME, 'source', 311, 22, 311, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 311, 28, 312, 0),
woosh.Token(woosh.NAME, 'self', 312, 8, 312, 12),
woosh.Token(woosh.OP, '.', 312, 12, 312, 13),
woosh.Token(woosh.NAME, 'errors', 312, 13, 312, 19),
woosh.Token(woosh.OP, '=', 312, 20, 312, 21),
woosh.Token(woosh.OP, '[', 312, 22, 312, 23),
woosh.Token(woosh.OP, ']', 312, 23, 312, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 24, 313, 0),
woosh.Token(woosh.NAME, 'self', 313, 8, 313, 12),
woosh.Token(woosh.OP, '.', 313, 12, 313, 13),
woosh.Token(woosh.NAME, 'args', 313, 13, 313, 17),
woosh.Token(woosh.OP, '=', 313, 18, 313, 19),
woosh.Token(woosh.OP, '(', 313, 20, 313, 21),
woosh.Token(woosh.NAME, 'source', 313, 21, 313, 27),
woosh.Token(woosh.OP, ',', 313, 27, 313, 28),
woosh.Token(woosh.OP, ')', 313, 29, 313, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 313, 30, 314, 0),
woosh.Token(woosh.DEDENT, '    ', 315, 0, 315, 4),
woosh.Token(woosh.OP, '@', 315, 4, 315, 5),
woosh.Token(woosh.NAME, 'property', 315, 5, 315, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 315, 13, 316, 0),
woosh.Token(woosh.NAME, 'def', 316, 4, 316, 7),
woosh.Token(woosh.NAME, 'filename', 316, 8, 316, 16),
woosh.Token(woosh.OP, '(', 316, 16, 316, 17),
woosh.Token(woosh.NAME, 'self', 316, 17, 316, 21),
woosh.Token(woosh.OP, ')', 316, 21, 316, 22),
woosh.Token(woosh.OP, ':', 316, 22, 316, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 316, 23, 317, 0),
woosh.Token(woosh.INDENT, '        ', 317, 0, 317, 8),
woosh.Token(woosh.STRING, '"""Deprecated, use `source\'."""', 317, 8, 317, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 317, 39, 318, 0),
woosh.Token(woosh.NAME, 'warnings', 318, 8, 318, 16),
woosh.Token(woosh.OP, '.', 318, 16, 318, 17),
woosh.Token(woosh.NAME, 'warn', 318, 17, 318, 21),
woosh.Token(woosh.OP, '(', 318, 21, 318, 22),
woosh.Token(woosh.STRING, '"The \'filename\' attribute will be removed in future versions.  "', 319, 12, 319, 76),
woosh.Token(woosh.STRING, '"Use \'source\' instead."', 320, 12, 320, 35),
woosh.Token(woosh.OP, ',', 320, 35, 320, 36),
woosh.Token(woosh.NAME, 'DeprecationWarning', 321, 12, 321, 30),
woosh.Token(woosh.OP, ',', 321, 30, 321, 31),
woosh.Token(woosh.NAME, 'stacklevel', 321, 32, 321, 42),
woosh.Token(woosh.OP, '=', 321, 42, 321, 43),
woosh.Token(woosh.NUMBER, '2', 321, 43, 321, 44),
woosh.Token(woosh.OP, ')', 322, 8, 322, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 322, 9, 323, 0),
woosh.Token(woosh.NAME, 'return', 323, 8, 323, 14),
woosh.Token(woosh.NAME, 'self', 323, 15, 323, 19),
woosh.Token(woosh.OP, '.', 323, 19, 323, 20),
woosh.Token(woosh.NAME, 'source', 323, 20, 323, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 26, 324, 0),
woosh.Token(woosh.DEDENT, '    ', 325, 0, 325, 4),
woosh.Token(woosh.OP, '@', 325, 4, 325, 5),
woosh.Token(woosh.NAME, 'filename', 325, 5, 325, 13),
woosh.Token(woosh.OP, '.', 325, 13, 325, 14),
woosh.Token(woosh.NAME, 'setter', 325, 14, 325, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 20, 326, 0),
woosh.Token(woosh.NAME, 'def', 326, 4, 326, 7),
woosh.Token(woosh.NAME, 'filename', 326, 8, 326, 16),
woosh.Token(woosh.OP, '(', 326, 16, 326, 17),
woosh.Token(woosh.NAME, 'self', 326, 17, 326, 21),
woosh.Token(woosh.OP, ',', 326, 21, 326, 22),
woosh.Token(woosh.NAME, 'value', 326, 23, 326, 28),
woosh.Token(woosh.OP, ')', 326, 28, 326, 29),
woosh.Token(woosh.OP, ':', 326, 29, 326, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 30, 327, 0),
woosh.Token(woosh.INDENT, '        ', 327, 0, 327, 8),
woosh.Token(woosh.STRING, '"""Deprecated, user `source\'."""', 327, 8, 327, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 327, 40, 328, 0),
woosh.Token(woosh.NAME, 'warnings', 328, 8, 328, 16),
woosh.Token(woosh.OP, '.', 328, 16, 328, 17),
woosh.Token(woosh.NAME, 'warn', 328, 17, 328, 21),
woosh.Token(woosh.OP, '(', 328, 21, 328, 22),
woosh.Token(woosh.STRING, '"The \'filename\' attribute will be removed in future versions.  "', 329, 12, 329, 76),
woosh.Token(woosh.STRING, '"Use \'source\' instead."', 330, 12, 330, 35),
woosh.Token(woosh.OP, ',', 330, 35, 330, 36),
woosh.Token(woosh.NAME, 'DeprecationWarning', 331, 12, 331, 30),
woosh.Token(woosh.OP, ',', 331, 30, 331, 31),
woosh.Token(woosh.NAME, 'stacklevel', 331, 32, 331, 42),
woosh.Token(woosh.OP, '=', 331, 42, 331, 43),
woosh.Token(woosh.NUMBER, '2', 331, 43, 331, 44),
woosh.Token(woosh.OP, ')', 332, 8, 332, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 332, 9, 333, 0),
woosh.Token(woosh.NAME, 'self', 333, 8, 333, 12),
woosh.Token(woosh.OP, '.', 333, 12, 333, 13),
woosh.Token(woosh.NAME, 'source', 333, 13, 333, 19),
woosh.Token(woosh.OP, '=', 333, 20, 333, 21),
woosh.Token(woosh.NAME, 'value', 333, 22, 333, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 333, 27, 334, 0),
woosh.Token(woosh.DEDENT, '    ', 335, 0, 335, 4),
woosh.Token(woosh.NAME, 'def', 335, 4, 335, 7),
woosh.Token(woosh.NAME, 'append', 335, 8, 335, 14),
woosh.Token(woosh.OP, '(', 335, 14, 335, 15),
woosh.Token(woosh.NAME, 'self', 335, 15, 335, 19),
woosh.Token(woosh.OP, ',', 335, 19, 335, 20),
woosh.Token(woosh.NAME, 'lineno', 335, 21, 335, 27),
woosh.Token(woosh.OP, ',', 335, 27, 335, 28),
woosh.Token(woosh.NAME, 'line', 335, 29, 335, 33),
woosh.Token(woosh.OP, ')', 335, 33, 335, 34),
woosh.Token(woosh.OP, ':', 335, 34, 335, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 335, 35, 336, 0),
woosh.Token(woosh.INDENT, '        ', 336, 0, 336, 8),
woosh.Token(woosh.NAME, 'self', 336, 8, 336, 12),
woosh.Token(woosh.OP, '.', 336, 12, 336, 13),
woosh.Token(woosh.NAME, 'errors', 336, 13, 336, 19),
woosh.Token(woosh.OP, '.', 336, 19, 336, 20),
woosh.Token(woosh.NAME, 'append', 336, 20, 336, 26),
woosh.Token(woosh.OP, '(', 336, 26, 336, 27),
woosh.Token(woosh.OP, '(', 336, 27, 336, 28),
woosh.Token(woosh.NAME, 'lineno', 336, 28, 336, 34),
woosh.Token(woosh.OP, ',', 336, 34, 336, 35),
woosh.Token(woosh.NAME, 'line', 336, 36, 336, 40),
woosh.Token(woosh.OP, ')', 336, 40, 336, 41),
woosh.Token(woosh.OP, ')', 336, 41, 336, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 336, 42, 337, 0),
woosh.Token(woosh.NAME, 'self', 337, 8, 337, 12),
woosh.Token(woosh.OP, '.', 337, 12, 337, 13),
woosh.Token(woosh.NAME, 'message', 337, 13, 337, 20),
woosh.Token(woosh.OP, '+=', 337, 21, 337, 23),
woosh.Token(woosh.STRING, "'\\n\\t[line %2d]: %s'", 337, 24, 337, 44),
woosh.Token(woosh.OP, '%', 337, 45, 337, 46),
woosh.Token(woosh.OP, '(', 337, 47, 337, 48),
woosh.Token(woosh.NAME, 'lineno', 337, 48, 337, 54),
woosh.Token(woosh.OP, ',', 337, 54, 337, 55),
woosh.Token(woosh.NAME, 'line', 337, 56, 337, 60),
woosh.Token(woosh.OP, ')', 337, 60, 337, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 337, 61, 338, 0),
woosh.Token(woosh.DEDENT, '', 340, 0, 340, 0),
woosh.Token(woosh.DEDENT, '', 340, 0, 340, 0),
woosh.Token(woosh.NAME, 'class', 340, 0, 340, 5),
woosh.Token(woosh.NAME, 'MissingSectionHeaderError', 340, 6, 340, 31),
woosh.Token(woosh.OP, '(', 340, 31, 340, 32),
woosh.Token(woosh.NAME, 'ParsingError', 340, 32, 340, 44),
woosh.Token(woosh.OP, ')', 340, 44, 340, 45),
woosh.Token(woosh.OP, ':', 340, 45, 340, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 46, 341, 0),
woosh.Token(woosh.INDENT, '    ', 341, 0, 341, 4),
woosh.Token(woosh.STRING, '"""Raised when a key-value pair is found before any section header."""', 341, 4, 341, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 74, 342, 0),
woosh.Token(woosh.NAME, 'def', 343, 4, 343, 7),
woosh.Token(woosh.NAME, '__init__', 343, 8, 343, 16),
woosh.Token(woosh.OP, '(', 343, 16, 343, 17),
woosh.Token(woosh.NAME, 'self', 343, 17, 343, 21),
woosh.Token(woosh.OP, ',', 343, 21, 343, 22),
woosh.Token(woosh.NAME, 'filename', 343, 23, 343, 31),
woosh.Token(woosh.OP, ',', 343, 31, 343, 32),
woosh.Token(woosh.NAME, 'lineno', 343, 33, 343, 39),
woosh.Token(woosh.OP, ',', 343, 39, 343, 40),
woosh.Token(woosh.NAME, 'line', 343, 41, 343, 45),
woosh.Token(woosh.OP, ')', 343, 45, 343, 46),
woosh.Token(woosh.OP, ':', 343, 46, 343, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 343, 47, 344, 0),
woosh.Token(woosh.INDENT, '        ', 344, 0, 344, 8),
woosh.Token(woosh.NAME, 'Error', 344, 8, 344, 13),
woosh.Token(woosh.OP, '.', 344, 13, 344, 14),
woosh.Token(woosh.NAME, '__init__', 344, 14, 344, 22),
woosh.Token(woosh.OP, '(', 344, 22, 344, 23),
woosh.Token(woosh.NAME, 'self', 345, 12, 345, 16),
woosh.Token(woosh.OP, ',', 345, 16, 345, 17),
woosh.Token(woosh.STRING, "'File contains no section headers.\\nfile: %r, line: %d\\n%r'", 346, 12, 346, 71),
woosh.Token(woosh.OP, '%', 346, 72, 346, 73),
woosh.Token(woosh.OP, '(', 347, 12, 347, 13),
woosh.Token(woosh.NAME, 'filename', 347, 13, 347, 21),
woosh.Token(woosh.OP, ',', 347, 21, 347, 22),
woosh.Token(woosh.NAME, 'lineno', 347, 23, 347, 29),
woosh.Token(woosh.OP, ',', 347, 29, 347, 30),
woosh.Token(woosh.NAME, 'line', 347, 31, 347, 35),
woosh.Token(woosh.OP, ')', 347, 35, 347, 36),
woosh.Token(woosh.OP, ')', 347, 36, 347, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 37, 348, 0),
woosh.Token(woosh.NAME, 'self', 348, 8, 348, 12),
woosh.Token(woosh.OP, '.', 348, 12, 348, 13),
woosh.Token(woosh.NAME, 'source', 348, 13, 348, 19),
woosh.Token(woosh.OP, '=', 348, 20, 348, 21),
woosh.Token(woosh.NAME, 'filename', 348, 22, 348, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 30, 349, 0),
woosh.Token(woosh.NAME, 'self', 349, 8, 349, 12),
woosh.Token(woosh.OP, '.', 349, 12, 349, 13),
woosh.Token(woosh.NAME, 'lineno', 349, 13, 349, 19),
woosh.Token(woosh.OP, '=', 349, 20, 349, 21),
woosh.Token(woosh.NAME, 'lineno', 349, 22, 349, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 349, 28, 350, 0),
woosh.Token(woosh.NAME, 'self', 350, 8, 350, 12),
woosh.Token(woosh.OP, '.', 350, 12, 350, 13),
woosh.Token(woosh.NAME, 'line', 350, 13, 350, 17),
woosh.Token(woosh.OP, '=', 350, 18, 350, 19),
woosh.Token(woosh.NAME, 'line', 350, 20, 350, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 24, 351, 0),
woosh.Token(woosh.NAME, 'self', 351, 8, 351, 12),
woosh.Token(woosh.OP, '.', 351, 12, 351, 13),
woosh.Token(woosh.NAME, 'args', 351, 13, 351, 17),
woosh.Token(woosh.OP, '=', 351, 18, 351, 19),
woosh.Token(woosh.OP, '(', 351, 20, 351, 21),
woosh.Token(woosh.NAME, 'filename', 351, 21, 351, 29),
woosh.Token(woosh.OP, ',', 351, 29, 351, 30),
woosh.Token(woosh.NAME, 'lineno', 351, 31, 351, 37),
woosh.Token(woosh.OP, ',', 351, 37, 351, 38),
woosh.Token(woosh.NAME, 'line', 351, 39, 351, 43),
woosh.Token(woosh.OP, ')', 351, 43, 351, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 44, 352, 0),
woosh.Token(woosh.COMMENT, '# Used in parser getters to indicate the default behaviour when a specific', 354, 0, 354, 74),
woosh.Token(woosh.COMMENT, "# option is not found it to raise an exception. Created to enable `None' as", 355, 0, 355, 75),
woosh.Token(woosh.COMMENT, '# a valid fallback value.', 356, 0, 356, 25),
woosh.Token(woosh.DEDENT, '', 357, 0, 357, 0),
woosh.Token(woosh.DEDENT, '', 357, 0, 357, 0),
woosh.Token(woosh.NAME, '_UNSET', 357, 0, 357, 6),
woosh.Token(woosh.OP, '=', 357, 7, 357, 8),
woosh.Token(woosh.NAME, 'object', 357, 9, 357, 15),
woosh.Token(woosh.OP, '(', 357, 15, 357, 16),
woosh.Token(woosh.OP, ')', 357, 16, 357, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 17, 358, 0),
woosh.Token(woosh.NAME, 'class', 360, 0, 360, 5),
woosh.Token(woosh.NAME, 'Interpolation', 360, 6, 360, 19),
woosh.Token(woosh.OP, ':', 360, 19, 360, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 20, 361, 0),
woosh.Token(woosh.INDENT, '    ', 361, 0, 361, 4),
woosh.Token(woosh.STRING, '"""Dummy interpolation that passes the value through with no changes."""', 361, 4, 361, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 361, 76, 362, 0),
woosh.Token(woosh.NAME, 'def', 363, 4, 363, 7),
woosh.Token(woosh.NAME, 'before_get', 363, 8, 363, 18),
woosh.Token(woosh.OP, '(', 363, 18, 363, 19),
woosh.Token(woosh.NAME, 'self', 363, 19, 363, 23),
woosh.Token(woosh.OP, ',', 363, 23, 363, 24),
woosh.Token(woosh.NAME, 'parser', 363, 25, 363, 31),
woosh.Token(woosh.OP, ',', 363, 31, 363, 32),
woosh.Token(woosh.NAME, 'section', 363, 33, 363, 40),
woosh.Token(woosh.OP, ',', 363, 40, 363, 41),
woosh.Token(woosh.NAME, 'option', 363, 42, 363, 48),
woosh.Token(woosh.OP, ',', 363, 48, 363, 49),
woosh.Token(woosh.NAME, 'value', 363, 50, 363, 55),
woosh.Token(woosh.OP, ',', 363, 55, 363, 56),
woosh.Token(woosh.NAME, 'defaults', 363, 57, 363, 65),
woosh.Token(woosh.OP, ')', 363, 65, 363, 66),
woosh.Token(woosh.OP, ':', 363, 66, 363, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 67, 364, 0),
woosh.Token(woosh.INDENT, '        ', 364, 0, 364, 8),
woosh.Token(woosh.NAME, 'return', 364, 8, 364, 14),
woosh.Token(woosh.NAME, 'value', 364, 15, 364, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 20, 365, 0),
woosh.Token(woosh.DEDENT, '    ', 366, 0, 366, 4),
woosh.Token(woosh.NAME, 'def', 366, 4, 366, 7),
woosh.Token(woosh.NAME, 'before_set', 366, 8, 366, 18),
woosh.Token(woosh.OP, '(', 366, 18, 366, 19),
woosh.Token(woosh.NAME, 'self', 366, 19, 366, 23),
woosh.Token(woosh.OP, ',', 366, 23, 366, 24),
woosh.Token(woosh.NAME, 'parser', 366, 25, 366, 31),
woosh.Token(woosh.OP, ',', 366, 31, 366, 32),
woosh.Token(woosh.NAME, 'section', 366, 33, 366, 40),
woosh.Token(woosh.OP, ',', 366, 40, 366, 41),
woosh.Token(woosh.NAME, 'option', 366, 42, 366, 48),
woosh.Token(woosh.OP, ',', 366, 48, 366, 49),
woosh.Token(woosh.NAME, 'value', 366, 50, 366, 55),
woosh.Token(woosh.OP, ')', 366, 55, 366, 56),
woosh.Token(woosh.OP, ':', 366, 56, 366, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 57, 367, 0),
woosh.Token(woosh.INDENT, '        ', 367, 0, 367, 8),
woosh.Token(woosh.NAME, 'return', 367, 8, 367, 14),
woosh.Token(woosh.NAME, 'value', 367, 15, 367, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 20, 368, 0),
woosh.Token(woosh.DEDENT, '    ', 369, 0, 369, 4),
woosh.Token(woosh.NAME, 'def', 369, 4, 369, 7),
woosh.Token(woosh.NAME, 'before_read', 369, 8, 369, 19),
woosh.Token(woosh.OP, '(', 369, 19, 369, 20),
woosh.Token(woosh.NAME, 'self', 369, 20, 369, 24),
woosh.Token(woosh.OP, ',', 369, 24, 369, 25),
woosh.Token(woosh.NAME, 'parser', 369, 26, 369, 32),
woosh.Token(woosh.OP, ',', 369, 32, 369, 33),
woosh.Token(woosh.NAME, 'section', 369, 34, 369, 41),
woosh.Token(woosh.OP, ',', 369, 41, 369, 42),
woosh.Token(woosh.NAME, 'option', 369, 43, 369, 49),
woosh.Token(woosh.OP, ',', 369, 49, 369, 50),
woosh.Token(woosh.NAME, 'value', 369, 51, 369, 56),
woosh.Token(woosh.OP, ')', 369, 56, 369, 57),
woosh.Token(woosh.OP, ':', 369, 57, 369, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 369, 58, 370, 0),
woosh.Token(woosh.INDENT, '        ', 370, 0, 370, 8),
woosh.Token(woosh.NAME, 'return', 370, 8, 370, 14),
woosh.Token(woosh.NAME, 'value', 370, 15, 370, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 20, 371, 0),
woosh.Token(woosh.DEDENT, '    ', 372, 0, 372, 4),
woosh.Token(woosh.NAME, 'def', 372, 4, 372, 7),
woosh.Token(woosh.NAME, 'before_write', 372, 8, 372, 20),
woosh.Token(woosh.OP, '(', 372, 20, 372, 21),
woosh.Token(woosh.NAME, 'self', 372, 21, 372, 25),
woosh.Token(woosh.OP, ',', 372, 25, 372, 26),
woosh.Token(woosh.NAME, 'parser', 372, 27, 372, 33),
woosh.Token(woosh.OP, ',', 372, 33, 372, 34),
woosh.Token(woosh.NAME, 'section', 372, 35, 372, 42),
woosh.Token(woosh.OP, ',', 372, 42, 372, 43),
woosh.Token(woosh.NAME, 'option', 372, 44, 372, 50),
woosh.Token(woosh.OP, ',', 372, 50, 372, 51),
woosh.Token(woosh.NAME, 'value', 372, 52, 372, 57),
woosh.Token(woosh.OP, ')', 372, 57, 372, 58),
woosh.Token(woosh.OP, ':', 372, 58, 372, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 372, 59, 373, 0),
woosh.Token(woosh.INDENT, '        ', 373, 0, 373, 8),
woosh.Token(woosh.NAME, 'return', 373, 8, 373, 14),
woosh.Token(woosh.NAME, 'value', 373, 15, 373, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 20, 374, 0),
woosh.Token(woosh.DEDENT, '', 376, 0, 376, 0),
woosh.Token(woosh.DEDENT, '', 376, 0, 376, 0),
woosh.Token(woosh.NAME, 'class', 376, 0, 376, 5),
woosh.Token(woosh.NAME, 'BasicInterpolation', 376, 6, 376, 24),
woosh.Token(woosh.OP, '(', 376, 24, 376, 25),
woosh.Token(woosh.NAME, 'Interpolation', 376, 25, 376, 38),
woosh.Token(woosh.OP, ')', 376, 38, 376, 39),
woosh.Token(woosh.OP, ':', 376, 39, 376, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 40, 377, 0),
woosh.Token(woosh.INDENT, '    ', 377, 0, 377, 4),
woosh.Token(woosh.STRING, '"""Interpolation as implemented in the classic ConfigParser.\r\n\r\n    The option values can contain format strings which refer to other values in\r\n    the same section, or values in the special default section.\r\n\r\n    For example:\r\n\r\n        something: %(dir)s/whatever\r\n\r\n    would resolve the "%(dir)s" to the value of dir.  All reference\r\n    expansions are done late, on demand. If a user needs to use a bare % in\r\n    a configuration file, she can escape it by writing %%. Other % usage\r\n    is considered a user error and raises `InterpolationSyntaxError\'."""', 377, 4, 389, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 389, 72, 390, 0),
woosh.Token(woosh.NAME, '_KEYCRE', 391, 4, 391, 11),
woosh.Token(woosh.OP, '=', 391, 12, 391, 13),
woosh.Token(woosh.NAME, 're', 391, 14, 391, 16),
woosh.Token(woosh.OP, '.', 391, 16, 391, 17),
woosh.Token(woosh.NAME, 'compile', 391, 17, 391, 24),
woosh.Token(woosh.OP, '(', 391, 24, 391, 25),
woosh.Token(woosh.STRING, 'r"%\\(([^)]+)\\)s"', 391, 25, 391, 41),
woosh.Token(woosh.OP, ')', 391, 41, 391, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 391, 42, 392, 0),
woosh.Token(woosh.NAME, 'def', 393, 4, 393, 7),
woosh.Token(woosh.NAME, 'before_get', 393, 8, 393, 18),
woosh.Token(woosh.OP, '(', 393, 18, 393, 19),
woosh.Token(woosh.NAME, 'self', 393, 19, 393, 23),
woosh.Token(woosh.OP, ',', 393, 23, 393, 24),
woosh.Token(woosh.NAME, 'parser', 393, 25, 393, 31),
woosh.Token(woosh.OP, ',', 393, 31, 393, 32),
woosh.Token(woosh.NAME, 'section', 393, 33, 393, 40),
woosh.Token(woosh.OP, ',', 393, 40, 393, 41),
woosh.Token(woosh.NAME, 'option', 393, 42, 393, 48),
woosh.Token(woosh.OP, ',', 393, 48, 393, 49),
woosh.Token(woosh.NAME, 'value', 393, 50, 393, 55),
woosh.Token(woosh.OP, ',', 393, 55, 393, 56),
woosh.Token(woosh.NAME, 'defaults', 393, 57, 393, 65),
woosh.Token(woosh.OP, ')', 393, 65, 393, 66),
woosh.Token(woosh.OP, ':', 393, 66, 393, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 393, 67, 394, 0),
woosh.Token(woosh.INDENT, '        ', 394, 0, 394, 8),
woosh.Token(woosh.NAME, 'L', 394, 8, 394, 9),
woosh.Token(woosh.OP, '=', 394, 10, 394, 11),
woosh.Token(woosh.OP, '[', 394, 12, 394, 13),
woosh.Token(woosh.OP, ']', 394, 13, 394, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 394, 14, 395, 0),
woosh.Token(woosh.NAME, 'self', 395, 8, 395, 12),
woosh.Token(woosh.OP, '.', 395, 12, 395, 13),
woosh.Token(woosh.NAME, '_interpolate_some', 395, 13, 395, 30),
woosh.Token(woosh.OP, '(', 395, 30, 395, 31),
woosh.Token(woosh.NAME, 'parser', 395, 31, 395, 37),
woosh.Token(woosh.OP, ',', 395, 37, 395, 38),
woosh.Token(woosh.NAME, 'option', 395, 39, 395, 45),
woosh.Token(woosh.OP, ',', 395, 45, 395, 46),
woosh.Token(woosh.NAME, 'L', 395, 47, 395, 48),
woosh.Token(woosh.OP, ',', 395, 48, 395, 49),
woosh.Token(woosh.NAME, 'value', 395, 50, 395, 55),
woosh.Token(woosh.OP, ',', 395, 55, 395, 56),
woosh.Token(woosh.NAME, 'section', 395, 57, 395, 64),
woosh.Token(woosh.OP, ',', 395, 64, 395, 65),
woosh.Token(woosh.NAME, 'defaults', 395, 66, 395, 74),
woosh.Token(woosh.OP, ',', 395, 74, 395, 75),
woosh.Token(woosh.NUMBER, '1', 395, 76, 395, 77),
woosh.Token(woosh.OP, ')', 395, 77, 395, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 395, 78, 396, 0),
woosh.Token(woosh.NAME, 'return', 396, 8, 396, 14),
woosh.Token(woosh.STRING, "''", 396, 15, 396, 17),
woosh.Token(woosh.OP, '.', 396, 17, 396, 18),
woosh.Token(woosh.NAME, 'join', 396, 18, 396, 22),
woosh.Token(woosh.OP, '(', 396, 22, 396, 23),
woosh.Token(woosh.NAME, 'L', 396, 23, 396, 24),
woosh.Token(woosh.OP, ')', 396, 24, 396, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 396, 25, 397, 0),
woosh.Token(woosh.DEDENT, '    ', 398, 0, 398, 4),
woosh.Token(woosh.NAME, 'def', 398, 4, 398, 7),
woosh.Token(woosh.NAME, 'before_set', 398, 8, 398, 18),
woosh.Token(woosh.OP, '(', 398, 18, 398, 19),
woosh.Token(woosh.NAME, 'self', 398, 19, 398, 23),
woosh.Token(woosh.OP, ',', 398, 23, 398, 24),
woosh.Token(woosh.NAME, 'parser', 398, 25, 398, 31),
woosh.Token(woosh.OP, ',', 398, 31, 398, 32),
woosh.Token(woosh.NAME, 'section', 398, 33, 398, 40),
woosh.Token(woosh.OP, ',', 398, 40, 398, 41),
woosh.Token(woosh.NAME, 'option', 398, 42, 398, 48),
woosh.Token(woosh.OP, ',', 398, 48, 398, 49),
woosh.Token(woosh.NAME, 'value', 398, 50, 398, 55),
woosh.Token(woosh.OP, ')', 398, 55, 398, 56),
woosh.Token(woosh.OP, ':', 398, 56, 398, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 398, 57, 399, 0),
woosh.Token(woosh.INDENT, '        ', 399, 0, 399, 8),
woosh.Token(woosh.NAME, 'tmp_value', 399, 8, 399, 17),
woosh.Token(woosh.OP, '=', 399, 18, 399, 19),
woosh.Token(woosh.NAME, 'value', 399, 20, 399, 25),
woosh.Token(woosh.OP, '.', 399, 25, 399, 26),
woosh.Token(woosh.NAME, 'replace', 399, 26, 399, 33),
woosh.Token(woosh.OP, '(', 399, 33, 399, 34),
woosh.Token(woosh.STRING, "'%%'", 399, 34, 399, 38),
woosh.Token(woosh.OP, ',', 399, 38, 399, 39),
woosh.Token(woosh.STRING, "''", 399, 40, 399, 42),
woosh.Token(woosh.OP, ')', 399, 42, 399, 43),
woosh.Token(woosh.COMMENT, '# escaped percent signs', 399, 44, 399, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 399, 67, 400, 0),
woosh.Token(woosh.NAME, 'tmp_value', 400, 8, 400, 17),
woosh.Token(woosh.OP, '=', 400, 18, 400, 19),
woosh.Token(woosh.NAME, 'self', 400, 20, 400, 24),
woosh.Token(woosh.OP, '.', 400, 24, 400, 25),
woosh.Token(woosh.NAME, '_KEYCRE', 400, 25, 400, 32),
woosh.Token(woosh.OP, '.', 400, 32, 400, 33),
woosh.Token(woosh.NAME, 'sub', 400, 33, 400, 36),
woosh.Token(woosh.OP, '(', 400, 36, 400, 37),
woosh.Token(woosh.STRING, "''", 400, 37, 400, 39),
woosh.Token(woosh.OP, ',', 400, 39, 400, 40),
woosh.Token(woosh.NAME, 'tmp_value', 400, 41, 400, 50),
woosh.Token(woosh.OP, ')', 400, 50, 400, 51),
woosh.Token(woosh.COMMENT, '# valid syntax', 400, 52, 400, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 400, 66, 401, 0),
woosh.Token(woosh.NAME, 'if', 401, 8, 401, 10),
woosh.Token(woosh.STRING, "'%'", 401, 11, 401, 14),
woosh.Token(woosh.NAME, 'in', 401, 15, 401, 17),
woosh.Token(woosh.NAME, 'tmp_value', 401, 18, 401, 27),
woosh.Token(woosh.OP, ':', 401, 27, 401, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 401, 28, 402, 0),
woosh.Token(woosh.INDENT, '            ', 402, 0, 402, 12),
woosh.Token(woosh.NAME, 'raise', 402, 12, 402, 17),
woosh.Token(woosh.NAME, 'ValueError', 402, 18, 402, 28),
woosh.Token(woosh.OP, '(', 402, 28, 402, 29),
woosh.Token(woosh.STRING, '"invalid interpolation syntax in %r at "', 402, 29, 402, 69),
woosh.Token(woosh.STRING, '"position %d"', 403, 29, 403, 42),
woosh.Token(woosh.OP, '%', 403, 43, 403, 44),
woosh.Token(woosh.OP, '(', 403, 45, 403, 46),
woosh.Token(woosh.NAME, 'value', 403, 46, 403, 51),
woosh.Token(woosh.OP, ',', 403, 51, 403, 52),
woosh.Token(woosh.NAME, 'tmp_value', 403, 53, 403, 62),
woosh.Token(woosh.OP, '.', 403, 62, 403, 63),
woosh.Token(woosh.NAME, 'find', 403, 63, 403, 67),
woosh.Token(woosh.OP, '(', 403, 67, 403, 68),
woosh.Token(woosh.STRING, "'%'", 403, 68, 403, 71),
woosh.Token(woosh.OP, ')', 403, 71, 403, 72),
woosh.Token(woosh.OP, ')', 403, 72, 403, 73),
woosh.Token(woosh.OP, ')', 403, 73, 403, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 403, 74, 404, 0),
woosh.Token(woosh.DEDENT, '        ', 404, 0, 404, 8),
woosh.Token(woosh.NAME, 'return', 404, 8, 404, 14),
woosh.Token(woosh.NAME, 'value', 404, 15, 404, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 404, 20, 405, 0),
woosh.Token(woosh.DEDENT, '    ', 406, 0, 406, 4),
woosh.Token(woosh.NAME, 'def', 406, 4, 406, 7),
woosh.Token(woosh.NAME, '_interpolate_some', 406, 8, 406, 25),
woosh.Token(woosh.OP, '(', 406, 25, 406, 26),
woosh.Token(woosh.NAME, 'self', 406, 26, 406, 30),
woosh.Token(woosh.OP, ',', 406, 30, 406, 31),
woosh.Token(woosh.NAME, 'parser', 406, 32, 406, 38),
woosh.Token(woosh.OP, ',', 406, 38, 406, 39),
woosh.Token(woosh.NAME, 'option', 406, 40, 406, 46),
woosh.Token(woosh.OP, ',', 406, 46, 406, 47),
woosh.Token(woosh.NAME, 'accum', 406, 48, 406, 53),
woosh.Token(woosh.OP, ',', 406, 53, 406, 54),
woosh.Token(woosh.NAME, 'rest', 406, 55, 406, 59),
woosh.Token(woosh.OP, ',', 406, 59, 406, 60),
woosh.Token(woosh.NAME, 'section', 406, 61, 406, 68),
woosh.Token(woosh.OP, ',', 406, 68, 406, 69),
woosh.Token(woosh.NAME, 'map', 406, 70, 406, 73),
woosh.Token(woosh.OP, ',', 406, 73, 406, 74),
woosh.Token(woosh.NAME, 'depth', 407, 26, 407, 31),
woosh.Token(woosh.OP, ')', 407, 31, 407, 32),
woosh.Token(woosh.OP, ':', 407, 32, 407, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 407, 33, 408, 0),
woosh.Token(woosh.INDENT, '        ', 408, 0, 408, 8),
woosh.Token(woosh.NAME, 'rawval', 408, 8, 408, 14),
woosh.Token(woosh.OP, '=', 408, 15, 408, 16),
woosh.Token(woosh.NAME, 'parser', 408, 17, 408, 23),
woosh.Token(woosh.OP, '.', 408, 23, 408, 24),
woosh.Token(woosh.NAME, 'get', 408, 24, 408, 27),
woosh.Token(woosh.OP, '(', 408, 27, 408, 28),
woosh.Token(woosh.NAME, 'section', 408, 28, 408, 35),
woosh.Token(woosh.OP, ',', 408, 35, 408, 36),
woosh.Token(woosh.NAME, 'option', 408, 37, 408, 43),
woosh.Token(woosh.OP, ',', 408, 43, 408, 44),
woosh.Token(woosh.NAME, 'raw', 408, 45, 408, 48),
woosh.Token(woosh.OP, '=', 408, 48, 408, 49),
woosh.Token(woosh.NAME, 'True', 408, 49, 408, 53),
woosh.Token(woosh.OP, ',', 408, 53, 408, 54),
woosh.Token(woosh.NAME, 'fallback', 408, 55, 408, 63),
woosh.Token(woosh.OP, '=', 408, 63, 408, 64),
woosh.Token(woosh.NAME, 'rest', 408, 64, 408, 68),
woosh.Token(woosh.OP, ')', 408, 68, 408, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 408, 69, 409, 0),
woosh.Token(woosh.NAME, 'if', 409, 8, 409, 10),
woosh.Token(woosh.NAME, 'depth', 409, 11, 409, 16),
woosh.Token(woosh.OP, '>', 409, 17, 409, 18),
woosh.Token(woosh.NAME, 'MAX_INTERPOLATION_DEPTH', 409, 19, 409, 42),
woosh.Token(woosh.OP, ':', 409, 42, 409, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 409, 43, 410, 0),
woosh.Token(woosh.INDENT, '            ', 410, 0, 410, 12),
woosh.Token(woosh.NAME, 'raise', 410, 12, 410, 17),
woosh.Token(woosh.NAME, 'InterpolationDepthError', 410, 18, 410, 41),
woosh.Token(woosh.OP, '(', 410, 41, 410, 42),
woosh.Token(woosh.NAME, 'option', 410, 42, 410, 48),
woosh.Token(woosh.OP, ',', 410, 48, 410, 49),
woosh.Token(woosh.NAME, 'section', 410, 50, 410, 57),
woosh.Token(woosh.OP, ',', 410, 57, 410, 58),
woosh.Token(woosh.NAME, 'rawval', 410, 59, 410, 65),
woosh.Token(woosh.OP, ')', 410, 65, 410, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 410, 66, 411, 0),
woosh.Token(woosh.DEDENT, '        ', 411, 0, 411, 8),
woosh.Token(woosh.NAME, 'while', 411, 8, 411, 13),
woosh.Token(woosh.NAME, 'rest', 411, 14, 411, 18),
woosh.Token(woosh.OP, ':', 411, 18, 411, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 411, 19, 412, 0),
woosh.Token(woosh.INDENT, '            ', 412, 0, 412, 12),
woosh.Token(woosh.NAME, 'p', 412, 12, 412, 13),
woosh.Token(woosh.OP, '=', 412, 14, 412, 15),
woosh.Token(woosh.NAME, 'rest', 412, 16, 412, 20),
woosh.Token(woosh.OP, '.', 412, 20, 412, 21),
woosh.Token(woosh.NAME, 'find', 412, 21, 412, 25),
woosh.Token(woosh.OP, '(', 412, 25, 412, 26),
woosh.Token(woosh.STRING, '"%"', 412, 26, 412, 29),
woosh.Token(woosh.OP, ')', 412, 29, 412, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 412, 30, 413, 0),
woosh.Token(woosh.NAME, 'if', 413, 12, 413, 14),
woosh.Token(woosh.NAME, 'p', 413, 15, 413, 16),
woosh.Token(woosh.OP, '<', 413, 17, 413, 18),
woosh.Token(woosh.NUMBER, '0', 413, 19, 413, 20),
woosh.Token(woosh.OP, ':', 413, 20, 413, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 413, 21, 414, 0),
woosh.Token(woosh.INDENT, '                ', 414, 0, 414, 16),
woosh.Token(woosh.NAME, 'accum', 414, 16, 414, 21),
woosh.Token(woosh.OP, '.', 414, 21, 414, 22),
woosh.Token(woosh.NAME, 'append', 414, 22, 414, 28),
woosh.Token(woosh.OP, '(', 414, 28, 414, 29),
woosh.Token(woosh.NAME, 'rest', 414, 29, 414, 33),
woosh.Token(woosh.OP, ')', 414, 33, 414, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 414, 34, 415, 0),
woosh.Token(woosh.NAME, 'return', 415, 16, 415, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 415, 22, 416, 0),
woosh.Token(woosh.DEDENT, '            ', 416, 0, 416, 12),
woosh.Token(woosh.NAME, 'if', 416, 12, 416, 14),
woosh.Token(woosh.NAME, 'p', 416, 15, 416, 16),
woosh.Token(woosh.OP, '>', 416, 17, 416, 18),
woosh.Token(woosh.NUMBER, '0', 416, 19, 416, 20),
woosh.Token(woosh.OP, ':', 416, 20, 416, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 416, 21, 417, 0),
woosh.Token(woosh.INDENT, '                ', 417, 0, 417, 16),
woosh.Token(woosh.NAME, 'accum', 417, 16, 417, 21),
woosh.Token(woosh.OP, '.', 417, 21, 417, 22),
woosh.Token(woosh.NAME, 'append', 417, 22, 417, 28),
woosh.Token(woosh.OP, '(', 417, 28, 417, 29),
woosh.Token(woosh.NAME, 'rest', 417, 29, 417, 33),
woosh.Token(woosh.OP, '[', 417, 33, 417, 34),
woosh.Token(woosh.OP, ':', 417, 34, 417, 35),
woosh.Token(woosh.NAME, 'p', 417, 35, 417, 36),
woosh.Token(woosh.OP, ']', 417, 36, 417, 37),
woosh.Token(woosh.OP, ')', 417, 37, 417, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 417, 38, 418, 0),
woosh.Token(woosh.NAME, 'rest', 418, 16, 418, 20),
woosh.Token(woosh.OP, '=', 418, 21, 418, 22),
woosh.Token(woosh.NAME, 'rest', 418, 23, 418, 27),
woosh.Token(woosh.OP, '[', 418, 27, 418, 28),
woosh.Token(woosh.NAME, 'p', 418, 28, 418, 29),
woosh.Token(woosh.OP, ':', 418, 29, 418, 30),
woosh.Token(woosh.OP, ']', 418, 30, 418, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 418, 31, 419, 0),
woosh.Token(woosh.COMMENT, '# p is no longer used', 419, 12, 419, 33),
woosh.Token(woosh.DEDENT, '            ', 420, 0, 420, 12),
woosh.Token(woosh.NAME, 'c', 420, 12, 420, 13),
woosh.Token(woosh.OP, '=', 420, 14, 420, 15),
woosh.Token(woosh.NAME, 'rest', 420, 16, 420, 20),
woosh.Token(woosh.OP, '[', 420, 20, 420, 21),
woosh.Token(woosh.NUMBER, '1', 420, 21, 420, 22),
woosh.Token(woosh.OP, ':', 420, 22, 420, 23),
woosh.Token(woosh.NUMBER, '2', 420, 23, 420, 24),
woosh.Token(woosh.OP, ']', 420, 24, 420, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 420, 25, 421, 0),
woosh.Token(woosh.NAME, 'if', 421, 12, 421, 14),
woosh.Token(woosh.NAME, 'c', 421, 15, 421, 16),
woosh.Token(woosh.OP, '==', 421, 17, 421, 19),
woosh.Token(woosh.STRING, '"%"', 421, 20, 421, 23),
woosh.Token(woosh.OP, ':', 421, 23, 421, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 421, 24, 422, 0),
woosh.Token(woosh.INDENT, '                ', 422, 0, 422, 16),
woosh.Token(woosh.NAME, 'accum', 422, 16, 422, 21),
woosh.Token(woosh.OP, '.', 422, 21, 422, 22),
woosh.Token(woosh.NAME, 'append', 422, 22, 422, 28),
woosh.Token(woosh.OP, '(', 422, 28, 422, 29),
woosh.Token(woosh.STRING, '"%"', 422, 29, 422, 32),
woosh.Token(woosh.OP, ')', 422, 32, 422, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 422, 33, 423, 0),
woosh.Token(woosh.NAME, 'rest', 423, 16, 423, 20),
woosh.Token(woosh.OP, '=', 423, 21, 423, 22),
woosh.Token(woosh.NAME, 'rest', 423, 23, 423, 27),
woosh.Token(woosh.OP, '[', 423, 27, 423, 28),
woosh.Token(woosh.NUMBER, '2', 423, 28, 423, 29),
woosh.Token(woosh.OP, ':', 423, 29, 423, 30),
woosh.Token(woosh.OP, ']', 423, 30, 423, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 423, 31, 424, 0),
woosh.Token(woosh.DEDENT, '            ', 424, 0, 424, 12),
woosh.Token(woosh.NAME, 'elif', 424, 12, 424, 16),
woosh.Token(woosh.NAME, 'c', 424, 17, 424, 18),
woosh.Token(woosh.OP, '==', 424, 19, 424, 21),
woosh.Token(woosh.STRING, '"("', 424, 22, 424, 25),
woosh.Token(woosh.OP, ':', 424, 25, 424, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 424, 26, 425, 0),
woosh.Token(woosh.INDENT, '                ', 425, 0, 425, 16),
woosh.Token(woosh.NAME, 'm', 425, 16, 425, 17),
woosh.Token(woosh.OP, '=', 425, 18, 425, 19),
woosh.Token(woosh.NAME, 'self', 425, 20, 425, 24),
woosh.Token(woosh.OP, '.', 425, 24, 425, 25),
woosh.Token(woosh.NAME, '_KEYCRE', 425, 25, 425, 32),
woosh.Token(woosh.OP, '.', 425, 32, 425, 33),
woosh.Token(woosh.NAME, 'match', 425, 33, 425, 38),
woosh.Token(woosh.OP, '(', 425, 38, 425, 39),
woosh.Token(woosh.NAME, 'rest', 425, 39, 425, 43),
woosh.Token(woosh.OP, ')', 425, 43, 425, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 425, 44, 426, 0),
woosh.Token(woosh.NAME, 'if', 426, 16, 426, 18),
woosh.Token(woosh.NAME, 'm', 426, 19, 426, 20),
woosh.Token(woosh.NAME, 'is', 426, 21, 426, 23),
woosh.Token(woosh.NAME, 'None', 426, 24, 426, 28),
woosh.Token(woosh.OP, ':', 426, 28, 426, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 426, 29, 427, 0),
woosh.Token(woosh.INDENT, '                    ', 427, 0, 427, 20),
woosh.Token(woosh.NAME, 'raise', 427, 20, 427, 25),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 427, 26, 427, 50),
woosh.Token(woosh.OP, '(', 427, 50, 427, 51),
woosh.Token(woosh.NAME, 'option', 427, 51, 427, 57),
woosh.Token(woosh.OP, ',', 427, 57, 427, 58),
woosh.Token(woosh.NAME, 'section', 427, 59, 427, 66),
woosh.Token(woosh.OP, ',', 427, 66, 427, 67),
woosh.Token(woosh.STRING, '"bad interpolation variable reference %r"', 428, 24, 428, 65),
woosh.Token(woosh.OP, '%', 428, 66, 428, 67),
woosh.Token(woosh.NAME, 'rest', 428, 68, 428, 72),
woosh.Token(woosh.OP, ')', 428, 72, 428, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 428, 73, 429, 0),
woosh.Token(woosh.DEDENT, '                ', 429, 0, 429, 16),
woosh.Token(woosh.NAME, 'var', 429, 16, 429, 19),
woosh.Token(woosh.OP, '=', 429, 20, 429, 21),
woosh.Token(woosh.NAME, 'parser', 429, 22, 429, 28),
woosh.Token(woosh.OP, '.', 429, 28, 429, 29),
woosh.Token(woosh.NAME, 'optionxform', 429, 29, 429, 40),
woosh.Token(woosh.OP, '(', 429, 40, 429, 41),
woosh.Token(woosh.NAME, 'm', 429, 41, 429, 42),
woosh.Token(woosh.OP, '.', 429, 42, 429, 43),
woosh.Token(woosh.NAME, 'group', 429, 43, 429, 48),
woosh.Token(woosh.OP, '(', 429, 48, 429, 49),
woosh.Token(woosh.NUMBER, '1', 429, 49, 429, 50),
woosh.Token(woosh.OP, ')', 429, 50, 429, 51),
woosh.Token(woosh.OP, ')', 429, 51, 429, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 429, 52, 430, 0),
woosh.Token(woosh.NAME, 'rest', 430, 16, 430, 20),
woosh.Token(woosh.OP, '=', 430, 21, 430, 22),
woosh.Token(woosh.NAME, 'rest', 430, 23, 430, 27),
woosh.Token(woosh.OP, '[', 430, 27, 430, 28),
woosh.Token(woosh.NAME, 'm', 430, 28, 430, 29),
woosh.Token(woosh.OP, '.', 430, 29, 430, 30),
woosh.Token(woosh.NAME, 'end', 430, 30, 430, 33),
woosh.Token(woosh.OP, '(', 430, 33, 430, 34),
woosh.Token(woosh.OP, ')', 430, 34, 430, 35),
woosh.Token(woosh.OP, ':', 430, 35, 430, 36),
woosh.Token(woosh.OP, ']', 430, 36, 430, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 430, 37, 431, 0),
woosh.Token(woosh.NAME, 'try', 431, 16, 431, 19),
woosh.Token(woosh.OP, ':', 431, 19, 431, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 431, 20, 432, 0),
woosh.Token(woosh.INDENT, '                    ', 432, 0, 432, 20),
woosh.Token(woosh.NAME, 'v', 432, 20, 432, 21),
woosh.Token(woosh.OP, '=', 432, 22, 432, 23),
woosh.Token(woosh.NAME, 'map', 432, 24, 432, 27),
woosh.Token(woosh.OP, '[', 432, 27, 432, 28),
woosh.Token(woosh.NAME, 'var', 432, 28, 432, 31),
woosh.Token(woosh.OP, ']', 432, 31, 432, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 432, 32, 433, 0),
woosh.Token(woosh.DEDENT, '                ', 433, 0, 433, 16),
woosh.Token(woosh.NAME, 'except', 433, 16, 433, 22),
woosh.Token(woosh.NAME, 'KeyError', 433, 23, 433, 31),
woosh.Token(woosh.OP, ':', 433, 31, 433, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 433, 32, 434, 0),
woosh.Token(woosh.INDENT, '                    ', 434, 0, 434, 20),
woosh.Token(woosh.NAME, 'raise', 434, 20, 434, 25),
woosh.Token(woosh.NAME, 'InterpolationMissingOptionError', 434, 26, 434, 57),
woosh.Token(woosh.OP, '(', 434, 57, 434, 58),
woosh.Token(woosh.NAME, 'option', 435, 24, 435, 30),
woosh.Token(woosh.OP, ',', 435, 30, 435, 31),
woosh.Token(woosh.NAME, 'section', 435, 32, 435, 39),
woosh.Token(woosh.OP, ',', 435, 39, 435, 40),
woosh.Token(woosh.NAME, 'rawval', 435, 41, 435, 47),
woosh.Token(woosh.OP, ',', 435, 47, 435, 48),
woosh.Token(woosh.NAME, 'var', 435, 49, 435, 52),
woosh.Token(woosh.OP, ')', 435, 52, 435, 53),
woosh.Token(woosh.NAME, 'from', 435, 54, 435, 58),
woosh.Token(woosh.NAME, 'None', 435, 59, 435, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 435, 63, 436, 0),
woosh.Token(woosh.DEDENT, '                ', 436, 0, 436, 16),
woosh.Token(woosh.NAME, 'if', 436, 16, 436, 18),
woosh.Token(woosh.STRING, '"%"', 436, 19, 436, 22),
woosh.Token(woosh.NAME, 'in', 436, 23, 436, 25),
woosh.Token(woosh.NAME, 'v', 436, 26, 436, 27),
woosh.Token(woosh.OP, ':', 436, 27, 436, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 436, 28, 437, 0),
woosh.Token(woosh.INDENT, '                    ', 437, 0, 437, 20),
woosh.Token(woosh.NAME, 'self', 437, 20, 437, 24),
woosh.Token(woosh.OP, '.', 437, 24, 437, 25),
woosh.Token(woosh.NAME, '_interpolate_some', 437, 25, 437, 42),
woosh.Token(woosh.OP, '(', 437, 42, 437, 43),
woosh.Token(woosh.NAME, 'parser', 437, 43, 437, 49),
woosh.Token(woosh.OP, ',', 437, 49, 437, 50),
woosh.Token(woosh.NAME, 'option', 437, 51, 437, 57),
woosh.Token(woosh.OP, ',', 437, 57, 437, 58),
woosh.Token(woosh.NAME, 'accum', 437, 59, 437, 64),
woosh.Token(woosh.OP, ',', 437, 64, 437, 65),
woosh.Token(woosh.NAME, 'v', 437, 66, 437, 67),
woosh.Token(woosh.OP, ',', 437, 67, 437, 68),
woosh.Token(woosh.NAME, 'section', 438, 43, 438, 50),
woosh.Token(woosh.OP, ',', 438, 50, 438, 51),
woosh.Token(woosh.NAME, 'map', 438, 52, 438, 55),
woosh.Token(woosh.OP, ',', 438, 55, 438, 56),
woosh.Token(woosh.NAME, 'depth', 438, 57, 438, 62),
woosh.Token(woosh.OP, '+', 438, 63, 438, 64),
woosh.Token(woosh.NUMBER, '1', 438, 65, 438, 66),
woosh.Token(woosh.OP, ')', 438, 66, 438, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 438, 67, 439, 0),
woosh.Token(woosh.DEDENT, '                ', 439, 0, 439, 16),
woosh.Token(woosh.NAME, 'else', 439, 16, 439, 20),
woosh.Token(woosh.OP, ':', 439, 20, 439, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 439, 21, 440, 0),
woosh.Token(woosh.INDENT, '                    ', 440, 0, 440, 20),
woosh.Token(woosh.NAME, 'accum', 440, 20, 440, 25),
woosh.Token(woosh.OP, '.', 440, 25, 440, 26),
woosh.Token(woosh.NAME, 'append', 440, 26, 440, 32),
woosh.Token(woosh.OP, '(', 440, 32, 440, 33),
woosh.Token(woosh.NAME, 'v', 440, 33, 440, 34),
woosh.Token(woosh.OP, ')', 440, 34, 440, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 440, 35, 441, 0),
woosh.Token(woosh.DEDENT, '            ', 441, 0, 441, 12),
woosh.Token(woosh.DEDENT, '', 441, 12, 441, 12),
woosh.Token(woosh.NAME, 'else', 441, 12, 441, 16),
woosh.Token(woosh.OP, ':', 441, 16, 441, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 441, 17, 442, 0),
woosh.Token(woosh.INDENT, '                ', 442, 0, 442, 16),
woosh.Token(woosh.NAME, 'raise', 442, 16, 442, 21),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 442, 22, 442, 46),
woosh.Token(woosh.OP, '(', 442, 46, 442, 47),
woosh.Token(woosh.NAME, 'option', 443, 20, 443, 26),
woosh.Token(woosh.OP, ',', 443, 26, 443, 27),
woosh.Token(woosh.NAME, 'section', 443, 28, 443, 35),
woosh.Token(woosh.OP, ',', 443, 35, 443, 36),
woosh.Token(woosh.STRING, '"\'%%\' must be followed by \'%%\' or \'(\', "', 444, 20, 444, 60),
woosh.Token(woosh.STRING, '"found: %r"', 445, 20, 445, 31),
woosh.Token(woosh.OP, '%', 445, 32, 445, 33),
woosh.Token(woosh.OP, '(', 445, 34, 445, 35),
woosh.Token(woosh.NAME, 'rest', 445, 35, 445, 39),
woosh.Token(woosh.OP, ',', 445, 39, 445, 40),
woosh.Token(woosh.OP, ')', 445, 40, 445, 41),
woosh.Token(woosh.OP, ')', 445, 41, 445, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 445, 42, 446, 0),
woosh.Token(woosh.DEDENT, '', 448, 0, 448, 0),
woosh.Token(woosh.DEDENT, '', 448, 0, 448, 0),
woosh.Token(woosh.DEDENT, '', 448, 0, 448, 0),
woosh.Token(woosh.DEDENT, '', 448, 0, 448, 0),
woosh.Token(woosh.NAME, 'class', 448, 0, 448, 5),
woosh.Token(woosh.NAME, 'ExtendedInterpolation', 448, 6, 448, 27),
woosh.Token(woosh.OP, '(', 448, 27, 448, 28),
woosh.Token(woosh.NAME, 'Interpolation', 448, 28, 448, 41),
woosh.Token(woosh.OP, ')', 448, 41, 448, 42),
woosh.Token(woosh.OP, ':', 448, 42, 448, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 448, 43, 449, 0),
woosh.Token(woosh.INDENT, '    ', 449, 0, 449, 4),
woosh.Token(woosh.STRING, '"""Advanced variant of interpolation, supports the syntax used by\r\n    `zc.buildout\'. Enables interpolation between sections."""', 449, 4, 450, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 450, 61, 451, 0),
woosh.Token(woosh.NAME, '_KEYCRE', 452, 4, 452, 11),
woosh.Token(woosh.OP, '=', 452, 12, 452, 13),
woosh.Token(woosh.NAME, 're', 452, 14, 452, 16),
woosh.Token(woosh.OP, '.', 452, 16, 452, 17),
woosh.Token(woosh.NAME, 'compile', 452, 17, 452, 24),
woosh.Token(woosh.OP, '(', 452, 24, 452, 25),
woosh.Token(woosh.STRING, 'r"\\$\\{([^}]+)\\}"', 452, 25, 452, 41),
woosh.Token(woosh.OP, ')', 452, 41, 452, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 452, 42, 453, 0),
woosh.Token(woosh.NAME, 'def', 454, 4, 454, 7),
woosh.Token(woosh.NAME, 'before_get', 454, 8, 454, 18),
woosh.Token(woosh.OP, '(', 454, 18, 454, 19),
woosh.Token(woosh.NAME, 'self', 454, 19, 454, 23),
woosh.Token(woosh.OP, ',', 454, 23, 454, 24),
woosh.Token(woosh.NAME, 'parser', 454, 25, 454, 31),
woosh.Token(woosh.OP, ',', 454, 31, 454, 32),
woosh.Token(woosh.NAME, 'section', 454, 33, 454, 40),
woosh.Token(woosh.OP, ',', 454, 40, 454, 41),
woosh.Token(woosh.NAME, 'option', 454, 42, 454, 48),
woosh.Token(woosh.OP, ',', 454, 48, 454, 49),
woosh.Token(woosh.NAME, 'value', 454, 50, 454, 55),
woosh.Token(woosh.OP, ',', 454, 55, 454, 56),
woosh.Token(woosh.NAME, 'defaults', 454, 57, 454, 65),
woosh.Token(woosh.OP, ')', 454, 65, 454, 66),
woosh.Token(woosh.OP, ':', 454, 66, 454, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 454, 67, 455, 0),
woosh.Token(woosh.INDENT, '        ', 455, 0, 455, 8),
woosh.Token(woosh.NAME, 'L', 455, 8, 455, 9),
woosh.Token(woosh.OP, '=', 455, 10, 455, 11),
woosh.Token(woosh.OP, '[', 455, 12, 455, 13),
woosh.Token(woosh.OP, ']', 455, 13, 455, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 455, 14, 456, 0),
woosh.Token(woosh.NAME, 'self', 456, 8, 456, 12),
woosh.Token(woosh.OP, '.', 456, 12, 456, 13),
woosh.Token(woosh.NAME, '_interpolate_some', 456, 13, 456, 30),
woosh.Token(woosh.OP, '(', 456, 30, 456, 31),
woosh.Token(woosh.NAME, 'parser', 456, 31, 456, 37),
woosh.Token(woosh.OP, ',', 456, 37, 456, 38),
woosh.Token(woosh.NAME, 'option', 456, 39, 456, 45),
woosh.Token(woosh.OP, ',', 456, 45, 456, 46),
woosh.Token(woosh.NAME, 'L', 456, 47, 456, 48),
woosh.Token(woosh.OP, ',', 456, 48, 456, 49),
woosh.Token(woosh.NAME, 'value', 456, 50, 456, 55),
woosh.Token(woosh.OP, ',', 456, 55, 456, 56),
woosh.Token(woosh.NAME, 'section', 456, 57, 456, 64),
woosh.Token(woosh.OP, ',', 456, 64, 456, 65),
woosh.Token(woosh.NAME, 'defaults', 456, 66, 456, 74),
woosh.Token(woosh.OP, ',', 456, 74, 456, 75),
woosh.Token(woosh.NUMBER, '1', 456, 76, 456, 77),
woosh.Token(woosh.OP, ')', 456, 77, 456, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 456, 78, 457, 0),
woosh.Token(woosh.NAME, 'return', 457, 8, 457, 14),
woosh.Token(woosh.STRING, "''", 457, 15, 457, 17),
woosh.Token(woosh.OP, '.', 457, 17, 457, 18),
woosh.Token(woosh.NAME, 'join', 457, 18, 457, 22),
woosh.Token(woosh.OP, '(', 457, 22, 457, 23),
woosh.Token(woosh.NAME, 'L', 457, 23, 457, 24),
woosh.Token(woosh.OP, ')', 457, 24, 457, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 457, 25, 458, 0),
woosh.Token(woosh.DEDENT, '    ', 459, 0, 459, 4),
woosh.Token(woosh.NAME, 'def', 459, 4, 459, 7),
woosh.Token(woosh.NAME, 'before_set', 459, 8, 459, 18),
woosh.Token(woosh.OP, '(', 459, 18, 459, 19),
woosh.Token(woosh.NAME, 'self', 459, 19, 459, 23),
woosh.Token(woosh.OP, ',', 459, 23, 459, 24),
woosh.Token(woosh.NAME, 'parser', 459, 25, 459, 31),
woosh.Token(woosh.OP, ',', 459, 31, 459, 32),
woosh.Token(woosh.NAME, 'section', 459, 33, 459, 40),
woosh.Token(woosh.OP, ',', 459, 40, 459, 41),
woosh.Token(woosh.NAME, 'option', 459, 42, 459, 48),
woosh.Token(woosh.OP, ',', 459, 48, 459, 49),
woosh.Token(woosh.NAME, 'value', 459, 50, 459, 55),
woosh.Token(woosh.OP, ')', 459, 55, 459, 56),
woosh.Token(woosh.OP, ':', 459, 56, 459, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 459, 57, 460, 0),
woosh.Token(woosh.INDENT, '        ', 460, 0, 460, 8),
woosh.Token(woosh.NAME, 'tmp_value', 460, 8, 460, 17),
woosh.Token(woosh.OP, '=', 460, 18, 460, 19),
woosh.Token(woosh.NAME, 'value', 460, 20, 460, 25),
woosh.Token(woosh.OP, '.', 460, 25, 460, 26),
woosh.Token(woosh.NAME, 'replace', 460, 26, 460, 33),
woosh.Token(woosh.OP, '(', 460, 33, 460, 34),
woosh.Token(woosh.STRING, "'$$'", 460, 34, 460, 38),
woosh.Token(woosh.OP, ',', 460, 38, 460, 39),
woosh.Token(woosh.STRING, "''", 460, 40, 460, 42),
woosh.Token(woosh.OP, ')', 460, 42, 460, 43),
woosh.Token(woosh.COMMENT, '# escaped dollar signs', 460, 44, 460, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 460, 66, 461, 0),
woosh.Token(woosh.NAME, 'tmp_value', 461, 8, 461, 17),
woosh.Token(woosh.OP, '=', 461, 18, 461, 19),
woosh.Token(woosh.NAME, 'self', 461, 20, 461, 24),
woosh.Token(woosh.OP, '.', 461, 24, 461, 25),
woosh.Token(woosh.NAME, '_KEYCRE', 461, 25, 461, 32),
woosh.Token(woosh.OP, '.', 461, 32, 461, 33),
woosh.Token(woosh.NAME, 'sub', 461, 33, 461, 36),
woosh.Token(woosh.OP, '(', 461, 36, 461, 37),
woosh.Token(woosh.STRING, "''", 461, 37, 461, 39),
woosh.Token(woosh.OP, ',', 461, 39, 461, 40),
woosh.Token(woosh.NAME, 'tmp_value', 461, 41, 461, 50),
woosh.Token(woosh.OP, ')', 461, 50, 461, 51),
woosh.Token(woosh.COMMENT, '# valid syntax', 461, 52, 461, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 461, 66, 462, 0),
woosh.Token(woosh.NAME, 'if', 462, 8, 462, 10),
woosh.Token(woosh.STRING, "'$'", 462, 11, 462, 14),
woosh.Token(woosh.NAME, 'in', 462, 15, 462, 17),
woosh.Token(woosh.NAME, 'tmp_value', 462, 18, 462, 27),
woosh.Token(woosh.OP, ':', 462, 27, 462, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 462, 28, 463, 0),
woosh.Token(woosh.INDENT, '            ', 463, 0, 463, 12),
woosh.Token(woosh.NAME, 'raise', 463, 12, 463, 17),
woosh.Token(woosh.NAME, 'ValueError', 463, 18, 463, 28),
woosh.Token(woosh.OP, '(', 463, 28, 463, 29),
woosh.Token(woosh.STRING, '"invalid interpolation syntax in %r at "', 463, 29, 463, 69),
woosh.Token(woosh.STRING, '"position %d"', 464, 29, 464, 42),
woosh.Token(woosh.OP, '%', 464, 43, 464, 44),
woosh.Token(woosh.OP, '(', 464, 45, 464, 46),
woosh.Token(woosh.NAME, 'value', 464, 46, 464, 51),
woosh.Token(woosh.OP, ',', 464, 51, 464, 52),
woosh.Token(woosh.NAME, 'tmp_value', 464, 53, 464, 62),
woosh.Token(woosh.OP, '.', 464, 62, 464, 63),
woosh.Token(woosh.NAME, 'find', 464, 63, 464, 67),
woosh.Token(woosh.OP, '(', 464, 67, 464, 68),
woosh.Token(woosh.STRING, "'$'", 464, 68, 464, 71),
woosh.Token(woosh.OP, ')', 464, 71, 464, 72),
woosh.Token(woosh.OP, ')', 464, 72, 464, 73),
woosh.Token(woosh.OP, ')', 464, 73, 464, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 464, 74, 465, 0),
woosh.Token(woosh.DEDENT, '        ', 465, 0, 465, 8),
woosh.Token(woosh.NAME, 'return', 465, 8, 465, 14),
woosh.Token(woosh.NAME, 'value', 465, 15, 465, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 465, 20, 466, 0),
woosh.Token(woosh.DEDENT, '    ', 467, 0, 467, 4),
woosh.Token(woosh.NAME, 'def', 467, 4, 467, 7),
woosh.Token(woosh.NAME, '_interpolate_some', 467, 8, 467, 25),
woosh.Token(woosh.OP, '(', 467, 25, 467, 26),
woosh.Token(woosh.NAME, 'self', 467, 26, 467, 30),
woosh.Token(woosh.OP, ',', 467, 30, 467, 31),
woosh.Token(woosh.NAME, 'parser', 467, 32, 467, 38),
woosh.Token(woosh.OP, ',', 467, 38, 467, 39),
woosh.Token(woosh.NAME, 'option', 467, 40, 467, 46),
woosh.Token(woosh.OP, ',', 467, 46, 467, 47),
woosh.Token(woosh.NAME, 'accum', 467, 48, 467, 53),
woosh.Token(woosh.OP, ',', 467, 53, 467, 54),
woosh.Token(woosh.NAME, 'rest', 467, 55, 467, 59),
woosh.Token(woosh.OP, ',', 467, 59, 467, 60),
woosh.Token(woosh.NAME, 'section', 467, 61, 467, 68),
woosh.Token(woosh.OP, ',', 467, 68, 467, 69),
woosh.Token(woosh.NAME, 'map', 467, 70, 467, 73),
woosh.Token(woosh.OP, ',', 467, 73, 467, 74),
woosh.Token(woosh.NAME, 'depth', 468, 26, 468, 31),
woosh.Token(woosh.OP, ')', 468, 31, 468, 32),
woosh.Token(woosh.OP, ':', 468, 32, 468, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 468, 33, 469, 0),
woosh.Token(woosh.INDENT, '        ', 469, 0, 469, 8),
woosh.Token(woosh.NAME, 'rawval', 469, 8, 469, 14),
woosh.Token(woosh.OP, '=', 469, 15, 469, 16),
woosh.Token(woosh.NAME, 'parser', 469, 17, 469, 23),
woosh.Token(woosh.OP, '.', 469, 23, 469, 24),
woosh.Token(woosh.NAME, 'get', 469, 24, 469, 27),
woosh.Token(woosh.OP, '(', 469, 27, 469, 28),
woosh.Token(woosh.NAME, 'section', 469, 28, 469, 35),
woosh.Token(woosh.OP, ',', 469, 35, 469, 36),
woosh.Token(woosh.NAME, 'option', 469, 37, 469, 43),
woosh.Token(woosh.OP, ',', 469, 43, 469, 44),
woosh.Token(woosh.NAME, 'raw', 469, 45, 469, 48),
woosh.Token(woosh.OP, '=', 469, 48, 469, 49),
woosh.Token(woosh.NAME, 'True', 469, 49, 469, 53),
woosh.Token(woosh.OP, ',', 469, 53, 469, 54),
woosh.Token(woosh.NAME, 'fallback', 469, 55, 469, 63),
woosh.Token(woosh.OP, '=', 469, 63, 469, 64),
woosh.Token(woosh.NAME, 'rest', 469, 64, 469, 68),
woosh.Token(woosh.OP, ')', 469, 68, 469, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 469, 69, 470, 0),
woosh.Token(woosh.NAME, 'if', 470, 8, 470, 10),
woosh.Token(woosh.NAME, 'depth', 470, 11, 470, 16),
woosh.Token(woosh.OP, '>', 470, 17, 470, 18),
woosh.Token(woosh.NAME, 'MAX_INTERPOLATION_DEPTH', 470, 19, 470, 42),
woosh.Token(woosh.OP, ':', 470, 42, 470, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 470, 43, 471, 0),
woosh.Token(woosh.INDENT, '            ', 471, 0, 471, 12),
woosh.Token(woosh.NAME, 'raise', 471, 12, 471, 17),
woosh.Token(woosh.NAME, 'InterpolationDepthError', 471, 18, 471, 41),
woosh.Token(woosh.OP, '(', 471, 41, 471, 42),
woosh.Token(woosh.NAME, 'option', 471, 42, 471, 48),
woosh.Token(woosh.OP, ',', 471, 48, 471, 49),
woosh.Token(woosh.NAME, 'section', 471, 50, 471, 57),
woosh.Token(woosh.OP, ',', 471, 57, 471, 58),
woosh.Token(woosh.NAME, 'rawval', 471, 59, 471, 65),
woosh.Token(woosh.OP, ')', 471, 65, 471, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 471, 66, 472, 0),
woosh.Token(woosh.DEDENT, '        ', 472, 0, 472, 8),
woosh.Token(woosh.NAME, 'while', 472, 8, 472, 13),
woosh.Token(woosh.NAME, 'rest', 472, 14, 472, 18),
woosh.Token(woosh.OP, ':', 472, 18, 472, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 472, 19, 473, 0),
woosh.Token(woosh.INDENT, '            ', 473, 0, 473, 12),
woosh.Token(woosh.NAME, 'p', 473, 12, 473, 13),
woosh.Token(woosh.OP, '=', 473, 14, 473, 15),
woosh.Token(woosh.NAME, 'rest', 473, 16, 473, 20),
woosh.Token(woosh.OP, '.', 473, 20, 473, 21),
woosh.Token(woosh.NAME, 'find', 473, 21, 473, 25),
woosh.Token(woosh.OP, '(', 473, 25, 473, 26),
woosh.Token(woosh.STRING, '"$"', 473, 26, 473, 29),
woosh.Token(woosh.OP, ')', 473, 29, 473, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 473, 30, 474, 0),
woosh.Token(woosh.NAME, 'if', 474, 12, 474, 14),
woosh.Token(woosh.NAME, 'p', 474, 15, 474, 16),
woosh.Token(woosh.OP, '<', 474, 17, 474, 18),
woosh.Token(woosh.NUMBER, '0', 474, 19, 474, 20),
woosh.Token(woosh.OP, ':', 474, 20, 474, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 474, 21, 475, 0),
woosh.Token(woosh.INDENT, '                ', 475, 0, 475, 16),
woosh.Token(woosh.NAME, 'accum', 475, 16, 475, 21),
woosh.Token(woosh.OP, '.', 475, 21, 475, 22),
woosh.Token(woosh.NAME, 'append', 475, 22, 475, 28),
woosh.Token(woosh.OP, '(', 475, 28, 475, 29),
woosh.Token(woosh.NAME, 'rest', 475, 29, 475, 33),
woosh.Token(woosh.OP, ')', 475, 33, 475, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 475, 34, 476, 0),
woosh.Token(woosh.NAME, 'return', 476, 16, 476, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 476, 22, 477, 0),
woosh.Token(woosh.DEDENT, '            ', 477, 0, 477, 12),
woosh.Token(woosh.NAME, 'if', 477, 12, 477, 14),
woosh.Token(woosh.NAME, 'p', 477, 15, 477, 16),
woosh.Token(woosh.OP, '>', 477, 17, 477, 18),
woosh.Token(woosh.NUMBER, '0', 477, 19, 477, 20),
woosh.Token(woosh.OP, ':', 477, 20, 477, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 477, 21, 478, 0),
woosh.Token(woosh.INDENT, '                ', 478, 0, 478, 16),
woosh.Token(woosh.NAME, 'accum', 478, 16, 478, 21),
woosh.Token(woosh.OP, '.', 478, 21, 478, 22),
woosh.Token(woosh.NAME, 'append', 478, 22, 478, 28),
woosh.Token(woosh.OP, '(', 478, 28, 478, 29),
woosh.Token(woosh.NAME, 'rest', 478, 29, 478, 33),
woosh.Token(woosh.OP, '[', 478, 33, 478, 34),
woosh.Token(woosh.OP, ':', 478, 34, 478, 35),
woosh.Token(woosh.NAME, 'p', 478, 35, 478, 36),
woosh.Token(woosh.OP, ']', 478, 36, 478, 37),
woosh.Token(woosh.OP, ')', 478, 37, 478, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 478, 38, 479, 0),
woosh.Token(woosh.NAME, 'rest', 479, 16, 479, 20),
woosh.Token(woosh.OP, '=', 479, 21, 479, 22),
woosh.Token(woosh.NAME, 'rest', 479, 23, 479, 27),
woosh.Token(woosh.OP, '[', 479, 27, 479, 28),
woosh.Token(woosh.NAME, 'p', 479, 28, 479, 29),
woosh.Token(woosh.OP, ':', 479, 29, 479, 30),
woosh.Token(woosh.OP, ']', 479, 30, 479, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 479, 31, 480, 0),
woosh.Token(woosh.COMMENT, '# p is no longer used', 480, 12, 480, 33),
woosh.Token(woosh.DEDENT, '            ', 481, 0, 481, 12),
woosh.Token(woosh.NAME, 'c', 481, 12, 481, 13),
woosh.Token(woosh.OP, '=', 481, 14, 481, 15),
woosh.Token(woosh.NAME, 'rest', 481, 16, 481, 20),
woosh.Token(woosh.OP, '[', 481, 20, 481, 21),
woosh.Token(woosh.NUMBER, '1', 481, 21, 481, 22),
woosh.Token(woosh.OP, ':', 481, 22, 481, 23),
woosh.Token(woosh.NUMBER, '2', 481, 23, 481, 24),
woosh.Token(woosh.OP, ']', 481, 24, 481, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 481, 25, 482, 0),
woosh.Token(woosh.NAME, 'if', 482, 12, 482, 14),
woosh.Token(woosh.NAME, 'c', 482, 15, 482, 16),
woosh.Token(woosh.OP, '==', 482, 17, 482, 19),
woosh.Token(woosh.STRING, '"$"', 482, 20, 482, 23),
woosh.Token(woosh.OP, ':', 482, 23, 482, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 482, 24, 483, 0),
woosh.Token(woosh.INDENT, '                ', 483, 0, 483, 16),
woosh.Token(woosh.NAME, 'accum', 483, 16, 483, 21),
woosh.Token(woosh.OP, '.', 483, 21, 483, 22),
woosh.Token(woosh.NAME, 'append', 483, 22, 483, 28),
woosh.Token(woosh.OP, '(', 483, 28, 483, 29),
woosh.Token(woosh.STRING, '"$"', 483, 29, 483, 32),
woosh.Token(woosh.OP, ')', 483, 32, 483, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 483, 33, 484, 0),
woosh.Token(woosh.NAME, 'rest', 484, 16, 484, 20),
woosh.Token(woosh.OP, '=', 484, 21, 484, 22),
woosh.Token(woosh.NAME, 'rest', 484, 23, 484, 27),
woosh.Token(woosh.OP, '[', 484, 27, 484, 28),
woosh.Token(woosh.NUMBER, '2', 484, 28, 484, 29),
woosh.Token(woosh.OP, ':', 484, 29, 484, 30),
woosh.Token(woosh.OP, ']', 484, 30, 484, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 484, 31, 485, 0),
woosh.Token(woosh.DEDENT, '            ', 485, 0, 485, 12),
woosh.Token(woosh.NAME, 'elif', 485, 12, 485, 16),
woosh.Token(woosh.NAME, 'c', 485, 17, 485, 18),
woosh.Token(woosh.OP, '==', 485, 19, 485, 21),
woosh.Token(woosh.STRING, '"{"', 485, 22, 485, 25),
woosh.Token(woosh.OP, ':', 485, 25, 485, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 485, 26, 486, 0),
woosh.Token(woosh.INDENT, '                ', 486, 0, 486, 16),
woosh.Token(woosh.NAME, 'm', 486, 16, 486, 17),
woosh.Token(woosh.OP, '=', 486, 18, 486, 19),
woosh.Token(woosh.NAME, 'self', 486, 20, 486, 24),
woosh.Token(woosh.OP, '.', 486, 24, 486, 25),
woosh.Token(woosh.NAME, '_KEYCRE', 486, 25, 486, 32),
woosh.Token(woosh.OP, '.', 486, 32, 486, 33),
woosh.Token(woosh.NAME, 'match', 486, 33, 486, 38),
woosh.Token(woosh.OP, '(', 486, 38, 486, 39),
woosh.Token(woosh.NAME, 'rest', 486, 39, 486, 43),
woosh.Token(woosh.OP, ')', 486, 43, 486, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 486, 44, 487, 0),
woosh.Token(woosh.NAME, 'if', 487, 16, 487, 18),
woosh.Token(woosh.NAME, 'm', 487, 19, 487, 20),
woosh.Token(woosh.NAME, 'is', 487, 21, 487, 23),
woosh.Token(woosh.NAME, 'None', 487, 24, 487, 28),
woosh.Token(woosh.OP, ':', 487, 28, 487, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 487, 29, 488, 0),
woosh.Token(woosh.INDENT, '                    ', 488, 0, 488, 20),
woosh.Token(woosh.NAME, 'raise', 488, 20, 488, 25),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 488, 26, 488, 50),
woosh.Token(woosh.OP, '(', 488, 50, 488, 51),
woosh.Token(woosh.NAME, 'option', 488, 51, 488, 57),
woosh.Token(woosh.OP, ',', 488, 57, 488, 58),
woosh.Token(woosh.NAME, 'section', 488, 59, 488, 66),
woosh.Token(woosh.OP, ',', 488, 66, 488, 67),
woosh.Token(woosh.STRING, '"bad interpolation variable reference %r"', 489, 24, 489, 65),
woosh.Token(woosh.OP, '%', 489, 66, 489, 67),
woosh.Token(woosh.NAME, 'rest', 489, 68, 489, 72),
woosh.Token(woosh.OP, ')', 489, 72, 489, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 489, 73, 490, 0),
woosh.Token(woosh.DEDENT, '                ', 490, 0, 490, 16),
woosh.Token(woosh.NAME, 'path', 490, 16, 490, 20),
woosh.Token(woosh.OP, '=', 490, 21, 490, 22),
woosh.Token(woosh.NAME, 'm', 490, 23, 490, 24),
woosh.Token(woosh.OP, '.', 490, 24, 490, 25),
woosh.Token(woosh.NAME, 'group', 490, 25, 490, 30),
woosh.Token(woosh.OP, '(', 490, 30, 490, 31),
woosh.Token(woosh.NUMBER, '1', 490, 31, 490, 32),
woosh.Token(woosh.OP, ')', 490, 32, 490, 33),
woosh.Token(woosh.OP, '.', 490, 33, 490, 34),
woosh.Token(woosh.NAME, 'split', 490, 34, 490, 39),
woosh.Token(woosh.OP, '(', 490, 39, 490, 40),
woosh.Token(woosh.STRING, "':'", 490, 40, 490, 43),
woosh.Token(woosh.OP, ')', 490, 43, 490, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 490, 44, 491, 0),
woosh.Token(woosh.NAME, 'rest', 491, 16, 491, 20),
woosh.Token(woosh.OP, '=', 491, 21, 491, 22),
woosh.Token(woosh.NAME, 'rest', 491, 23, 491, 27),
woosh.Token(woosh.OP, '[', 491, 27, 491, 28),
woosh.Token(woosh.NAME, 'm', 491, 28, 491, 29),
woosh.Token(woosh.OP, '.', 491, 29, 491, 30),
woosh.Token(woosh.NAME, 'end', 491, 30, 491, 33),
woosh.Token(woosh.OP, '(', 491, 33, 491, 34),
woosh.Token(woosh.OP, ')', 491, 34, 491, 35),
woosh.Token(woosh.OP, ':', 491, 35, 491, 36),
woosh.Token(woosh.OP, ']', 491, 36, 491, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 491, 37, 492, 0),
woosh.Token(woosh.NAME, 'sect', 492, 16, 492, 20),
woosh.Token(woosh.OP, '=', 492, 21, 492, 22),
woosh.Token(woosh.NAME, 'section', 492, 23, 492, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 492, 30, 493, 0),
woosh.Token(woosh.NAME, 'opt', 493, 16, 493, 19),
woosh.Token(woosh.OP, '=', 493, 20, 493, 21),
woosh.Token(woosh.NAME, 'option', 493, 22, 493, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 493, 28, 494, 0),
woosh.Token(woosh.NAME, 'try', 494, 16, 494, 19),
woosh.Token(woosh.OP, ':', 494, 19, 494, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 494, 20, 495, 0),
woosh.Token(woosh.INDENT, '                    ', 495, 0, 495, 20),
woosh.Token(woosh.NAME, 'if', 495, 20, 495, 22),
woosh.Token(woosh.NAME, 'len', 495, 23, 495, 26),
woosh.Token(woosh.OP, '(', 495, 26, 495, 27),
woosh.Token(woosh.NAME, 'path', 495, 27, 495, 31),
woosh.Token(woosh.OP, ')', 495, 31, 495, 32),
woosh.Token(woosh.OP, '==', 495, 33, 495, 35),
woosh.Token(woosh.NUMBER, '1', 495, 36, 495, 37),
woosh.Token(woosh.OP, ':', 495, 37, 495, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 495, 38, 496, 0),
woosh.Token(woosh.INDENT, '                        ', 496, 0, 496, 24),
woosh.Token(woosh.NAME, 'opt', 496, 24, 496, 27),
woosh.Token(woosh.OP, '=', 496, 28, 496, 29),
woosh.Token(woosh.NAME, 'parser', 496, 30, 496, 36),
woosh.Token(woosh.OP, '.', 496, 36, 496, 37),
woosh.Token(woosh.NAME, 'optionxform', 496, 37, 496, 48),
woosh.Token(woosh.OP, '(', 496, 48, 496, 49),
woosh.Token(woosh.NAME, 'path', 496, 49, 496, 53),
woosh.Token(woosh.OP, '[', 496, 53, 496, 54),
woosh.Token(woosh.NUMBER, '0', 496, 54, 496, 55),
woosh.Token(woosh.OP, ']', 496, 55, 496, 56),
woosh.Token(woosh.OP, ')', 496, 56, 496, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 496, 57, 497, 0),
woosh.Token(woosh.NAME, 'v', 497, 24, 497, 25),
woosh.Token(woosh.OP, '=', 497, 26, 497, 27),
woosh.Token(woosh.NAME, 'map', 497, 28, 497, 31),
woosh.Token(woosh.OP, '[', 497, 31, 497, 32),
woosh.Token(woosh.NAME, 'opt', 497, 32, 497, 35),
woosh.Token(woosh.OP, ']', 497, 35, 497, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 497, 36, 498, 0),
woosh.Token(woosh.DEDENT, '                    ', 498, 0, 498, 20),
woosh.Token(woosh.NAME, 'elif', 498, 20, 498, 24),
woosh.Token(woosh.NAME, 'len', 498, 25, 498, 28),
woosh.Token(woosh.OP, '(', 498, 28, 498, 29),
woosh.Token(woosh.NAME, 'path', 498, 29, 498, 33),
woosh.Token(woosh.OP, ')', 498, 33, 498, 34),
woosh.Token(woosh.OP, '==', 498, 35, 498, 37),
woosh.Token(woosh.NUMBER, '2', 498, 38, 498, 39),
woosh.Token(woosh.OP, ':', 498, 39, 498, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 498, 40, 499, 0),
woosh.Token(woosh.INDENT, '                        ', 499, 0, 499, 24),
woosh.Token(woosh.NAME, 'sect', 499, 24, 499, 28),
woosh.Token(woosh.OP, '=', 499, 29, 499, 30),
woosh.Token(woosh.NAME, 'path', 499, 31, 499, 35),
woosh.Token(woosh.OP, '[', 499, 35, 499, 36),
woosh.Token(woosh.NUMBER, '0', 499, 36, 499, 37),
woosh.Token(woosh.OP, ']', 499, 37, 499, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 499, 38, 500, 0),
woosh.Token(woosh.NAME, 'opt', 500, 24, 500, 27),
woosh.Token(woosh.OP, '=', 500, 28, 500, 29),
woosh.Token(woosh.NAME, 'parser', 500, 30, 500, 36),
woosh.Token(woosh.OP, '.', 500, 36, 500, 37),
woosh.Token(woosh.NAME, 'optionxform', 500, 37, 500, 48),
woosh.Token(woosh.OP, '(', 500, 48, 500, 49),
woosh.Token(woosh.NAME, 'path', 500, 49, 500, 53),
woosh.Token(woosh.OP, '[', 500, 53, 500, 54),
woosh.Token(woosh.NUMBER, '1', 500, 54, 500, 55),
woosh.Token(woosh.OP, ']', 500, 55, 500, 56),
woosh.Token(woosh.OP, ')', 500, 56, 500, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 500, 57, 501, 0),
woosh.Token(woosh.NAME, 'v', 501, 24, 501, 25),
woosh.Token(woosh.OP, '=', 501, 26, 501, 27),
woosh.Token(woosh.NAME, 'parser', 501, 28, 501, 34),
woosh.Token(woosh.OP, '.', 501, 34, 501, 35),
woosh.Token(woosh.NAME, 'get', 501, 35, 501, 38),
woosh.Token(woosh.OP, '(', 501, 38, 501, 39),
woosh.Token(woosh.NAME, 'sect', 501, 39, 501, 43),
woosh.Token(woosh.OP, ',', 501, 43, 501, 44),
woosh.Token(woosh.NAME, 'opt', 501, 45, 501, 48),
woosh.Token(woosh.OP, ',', 501, 48, 501, 49),
woosh.Token(woosh.NAME, 'raw', 501, 50, 501, 53),
woosh.Token(woosh.OP, '=', 501, 53, 501, 54),
woosh.Token(woosh.NAME, 'True', 501, 54, 501, 58),
woosh.Token(woosh.OP, ')', 501, 58, 501, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 501, 59, 502, 0),
woosh.Token(woosh.DEDENT, '                    ', 502, 0, 502, 20),
woosh.Token(woosh.NAME, 'else', 502, 20, 502, 24),
woosh.Token(woosh.OP, ':', 502, 24, 502, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 502, 25, 503, 0),
woosh.Token(woosh.INDENT, '                        ', 503, 0, 503, 24),
woosh.Token(woosh.NAME, 'raise', 503, 24, 503, 29),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 503, 30, 503, 54),
woosh.Token(woosh.OP, '(', 503, 54, 503, 55),
woosh.Token(woosh.NAME, 'option', 504, 28, 504, 34),
woosh.Token(woosh.OP, ',', 504, 34, 504, 35),
woosh.Token(woosh.NAME, 'section', 504, 36, 504, 43),
woosh.Token(woosh.OP, ',', 504, 43, 504, 44),
woosh.Token(woosh.STRING, '"More than one \':\' found: %r"', 505, 28, 505, 57),
woosh.Token(woosh.OP, '%', 505, 58, 505, 59),
woosh.Token(woosh.OP, '(', 505, 60, 505, 61),
woosh.Token(woosh.NAME, 'rest', 505, 61, 505, 65),
woosh.Token(woosh.OP, ',', 505, 65, 505, 66),
woosh.Token(woosh.OP, ')', 505, 66, 505, 67),
woosh.Token(woosh.OP, ')', 505, 67, 505, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 505, 68, 506, 0),
woosh.Token(woosh.DEDENT, '                ', 506, 0, 506, 16),
woosh.Token(woosh.DEDENT, '', 506, 16, 506, 16),
woosh.Token(woosh.NAME, 'except', 506, 16, 506, 22),
woosh.Token(woosh.OP, '(', 506, 23, 506, 24),
woosh.Token(woosh.NAME, 'KeyError', 506, 24, 506, 32),
woosh.Token(woosh.OP, ',', 506, 32, 506, 33),
woosh.Token(woosh.NAME, 'NoSectionError', 506, 34, 506, 48),
woosh.Token(woosh.OP, ',', 506, 48, 506, 49),
woosh.Token(woosh.NAME, 'NoOptionError', 506, 50, 506, 63),
woosh.Token(woosh.OP, ')', 506, 63, 506, 64),
woosh.Token(woosh.OP, ':', 506, 64, 506, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 506, 65, 507, 0),
woosh.Token(woosh.INDENT, '                    ', 507, 0, 507, 20),
woosh.Token(woosh.NAME, 'raise', 507, 20, 507, 25),
woosh.Token(woosh.NAME, 'InterpolationMissingOptionError', 507, 26, 507, 57),
woosh.Token(woosh.OP, '(', 507, 57, 507, 58),
woosh.Token(woosh.NAME, 'option', 508, 24, 508, 30),
woosh.Token(woosh.OP, ',', 508, 30, 508, 31),
woosh.Token(woosh.NAME, 'section', 508, 32, 508, 39),
woosh.Token(woosh.OP, ',', 508, 39, 508, 40),
woosh.Token(woosh.NAME, 'rawval', 508, 41, 508, 47),
woosh.Token(woosh.OP, ',', 508, 47, 508, 48),
woosh.Token(woosh.STRING, '":"', 508, 49, 508, 52),
woosh.Token(woosh.OP, '.', 508, 52, 508, 53),
woosh.Token(woosh.NAME, 'join', 508, 53, 508, 57),
woosh.Token(woosh.OP, '(', 508, 57, 508, 58),
woosh.Token(woosh.NAME, 'path', 508, 58, 508, 62),
woosh.Token(woosh.OP, ')', 508, 62, 508, 63),
woosh.Token(woosh.OP, ')', 508, 63, 508, 64),
woosh.Token(woosh.NAME, 'from', 508, 65, 508, 69),
woosh.Token(woosh.NAME, 'None', 508, 70, 508, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 508, 74, 509, 0),
woosh.Token(woosh.DEDENT, '                ', 509, 0, 509, 16),
woosh.Token(woosh.NAME, 'if', 509, 16, 509, 18),
woosh.Token(woosh.STRING, '"$"', 509, 19, 509, 22),
woosh.Token(woosh.NAME, 'in', 509, 23, 509, 25),
woosh.Token(woosh.NAME, 'v', 509, 26, 509, 27),
woosh.Token(woosh.OP, ':', 509, 27, 509, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 509, 28, 510, 0),
woosh.Token(woosh.INDENT, '                    ', 510, 0, 510, 20),
woosh.Token(woosh.NAME, 'self', 510, 20, 510, 24),
woosh.Token(woosh.OP, '.', 510, 24, 510, 25),
woosh.Token(woosh.NAME, '_interpolate_some', 510, 25, 510, 42),
woosh.Token(woosh.OP, '(', 510, 42, 510, 43),
woosh.Token(woosh.NAME, 'parser', 510, 43, 510, 49),
woosh.Token(woosh.OP, ',', 510, 49, 510, 50),
woosh.Token(woosh.NAME, 'opt', 510, 51, 510, 54),
woosh.Token(woosh.OP, ',', 510, 54, 510, 55),
woosh.Token(woosh.NAME, 'accum', 510, 56, 510, 61),
woosh.Token(woosh.OP, ',', 510, 61, 510, 62),
woosh.Token(woosh.NAME, 'v', 510, 63, 510, 64),
woosh.Token(woosh.OP, ',', 510, 64, 510, 65),
woosh.Token(woosh.NAME, 'sect', 510, 66, 510, 70),
woosh.Token(woosh.OP, ',', 510, 70, 510, 71),
woosh.Token(woosh.NAME, 'dict', 511, 43, 511, 47),
woosh.Token(woosh.OP, '(', 511, 47, 511, 48),
woosh.Token(woosh.NAME, 'parser', 511, 48, 511, 54),
woosh.Token(woosh.OP, '.', 511, 54, 511, 55),
woosh.Token(woosh.NAME, 'items', 511, 55, 511, 60),
woosh.Token(woosh.OP, '(', 511, 60, 511, 61),
woosh.Token(woosh.NAME, 'sect', 511, 61, 511, 65),
woosh.Token(woosh.OP, ',', 511, 65, 511, 66),
woosh.Token(woosh.NAME, 'raw', 511, 67, 511, 70),
woosh.Token(woosh.OP, '=', 511, 70, 511, 71),
woosh.Token(woosh.NAME, 'True', 511, 71, 511, 75),
woosh.Token(woosh.OP, ')', 511, 75, 511, 76),
woosh.Token(woosh.OP, ')', 511, 76, 511, 77),
woosh.Token(woosh.OP, ',', 511, 77, 511, 78),
woosh.Token(woosh.NAME, 'depth', 512, 43, 512, 48),
woosh.Token(woosh.OP, '+', 512, 49, 512, 50),
woosh.Token(woosh.NUMBER, '1', 512, 51, 512, 52),
woosh.Token(woosh.OP, ')', 512, 52, 512, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 512, 53, 513, 0),
woosh.Token(woosh.DEDENT, '                ', 513, 0, 513, 16),
woosh.Token(woosh.NAME, 'else', 513, 16, 513, 20),
woosh.Token(woosh.OP, ':', 513, 20, 513, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 513, 21, 514, 0),
woosh.Token(woosh.INDENT, '                    ', 514, 0, 514, 20),
woosh.Token(woosh.NAME, 'accum', 514, 20, 514, 25),
woosh.Token(woosh.OP, '.', 514, 25, 514, 26),
woosh.Token(woosh.NAME, 'append', 514, 26, 514, 32),
woosh.Token(woosh.OP, '(', 514, 32, 514, 33),
woosh.Token(woosh.NAME, 'v', 514, 33, 514, 34),
woosh.Token(woosh.OP, ')', 514, 34, 514, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 514, 35, 515, 0),
woosh.Token(woosh.DEDENT, '            ', 515, 0, 515, 12),
woosh.Token(woosh.DEDENT, '', 515, 12, 515, 12),
woosh.Token(woosh.NAME, 'else', 515, 12, 515, 16),
woosh.Token(woosh.OP, ':', 515, 16, 515, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 515, 17, 516, 0),
woosh.Token(woosh.INDENT, '                ', 516, 0, 516, 16),
woosh.Token(woosh.NAME, 'raise', 516, 16, 516, 21),
woosh.Token(woosh.NAME, 'InterpolationSyntaxError', 516, 22, 516, 46),
woosh.Token(woosh.OP, '(', 516, 46, 516, 47),
woosh.Token(woosh.NAME, 'option', 517, 20, 517, 26),
woosh.Token(woosh.OP, ',', 517, 26, 517, 27),
woosh.Token(woosh.NAME, 'section', 517, 28, 517, 35),
woosh.Token(woosh.OP, ',', 517, 35, 517, 36),
woosh.Token(woosh.STRING, '"\'$\' must be followed by \'$\' or \'{\', "', 518, 20, 518, 58),
woosh.Token(woosh.STRING, '"found: %r"', 519, 20, 519, 31),
woosh.Token(woosh.OP, '%', 519, 32, 519, 33),
woosh.Token(woosh.OP, '(', 519, 34, 519, 35),
woosh.Token(woosh.NAME, 'rest', 519, 35, 519, 39),
woosh.Token(woosh.OP, ',', 519, 39, 519, 40),
woosh.Token(woosh.OP, ')', 519, 40, 519, 41),
woosh.Token(woosh.OP, ')', 519, 41, 519, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 519, 42, 520, 0),
woosh.Token(woosh.DEDENT, '', 522, 0, 522, 0),
woosh.Token(woosh.DEDENT, '', 522, 0, 522, 0),
woosh.Token(woosh.DEDENT, '', 522, 0, 522, 0),
woosh.Token(woosh.DEDENT, '', 522, 0, 522, 0),
woosh.Token(woosh.NAME, 'class', 522, 0, 522, 5),
woosh.Token(woosh.NAME, 'LegacyInterpolation', 522, 6, 522, 25),
woosh.Token(woosh.OP, '(', 522, 25, 522, 26),
woosh.Token(woosh.NAME, 'Interpolation', 522, 26, 522, 39),
woosh.Token(woosh.OP, ')', 522, 39, 522, 40),
woosh.Token(woosh.OP, ':', 522, 40, 522, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 522, 41, 523, 0),
woosh.Token(woosh.INDENT, '    ', 523, 0, 523, 4),
woosh.Token(woosh.STRING, '"""Deprecated interpolation used in old versions of ConfigParser.\r\n    Use BasicInterpolation or ExtendedInterpolation instead."""', 523, 4, 524, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 524, 63, 525, 0),
woosh.Token(woosh.NAME, '_KEYCRE', 526, 4, 526, 11),
woosh.Token(woosh.OP, '=', 526, 12, 526, 13),
woosh.Token(woosh.NAME, 're', 526, 14, 526, 16),
woosh.Token(woosh.OP, '.', 526, 16, 526, 17),
woosh.Token(woosh.NAME, 'compile', 526, 17, 526, 24),
woosh.Token(woosh.OP, '(', 526, 24, 526, 25),
woosh.Token(woosh.STRING, 'r"%\\(([^)]*)\\)s|."', 526, 25, 526, 43),
woosh.Token(woosh.OP, ')', 526, 43, 526, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 526, 44, 527, 0),
woosh.Token(woosh.NAME, 'def', 528, 4, 528, 7),
woosh.Token(woosh.NAME, 'before_get', 528, 8, 528, 18),
woosh.Token(woosh.OP, '(', 528, 18, 528, 19),
woosh.Token(woosh.NAME, 'self', 528, 19, 528, 23),
woosh.Token(woosh.OP, ',', 528, 23, 528, 24),
woosh.Token(woosh.NAME, 'parser', 528, 25, 528, 31),
woosh.Token(woosh.OP, ',', 528, 31, 528, 32),
woosh.Token(woosh.NAME, 'section', 528, 33, 528, 40),
woosh.Token(woosh.OP, ',', 528, 40, 528, 41),
woosh.Token(woosh.NAME, 'option', 528, 42, 528, 48),
woosh.Token(woosh.OP, ',', 528, 48, 528, 49),
woosh.Token(woosh.NAME, 'value', 528, 50, 528, 55),
woosh.Token(woosh.OP, ',', 528, 55, 528, 56),
woosh.Token(woosh.NAME, 'vars', 528, 57, 528, 61),
woosh.Token(woosh.OP, ')', 528, 61, 528, 62),
woosh.Token(woosh.OP, ':', 528, 62, 528, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 528, 63, 529, 0),
woosh.Token(woosh.INDENT, '        ', 529, 0, 529, 8),
woosh.Token(woosh.NAME, 'rawval', 529, 8, 529, 14),
woosh.Token(woosh.OP, '=', 529, 15, 529, 16),
woosh.Token(woosh.NAME, 'value', 529, 17, 529, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 529, 22, 530, 0),
woosh.Token(woosh.NAME, 'depth', 530, 8, 530, 13),
woosh.Token(woosh.OP, '=', 530, 14, 530, 15),
woosh.Token(woosh.NAME, 'MAX_INTERPOLATION_DEPTH', 530, 16, 530, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 530, 39, 531, 0),
woosh.Token(woosh.NAME, 'while', 531, 8, 531, 13),
woosh.Token(woosh.NAME, 'depth', 531, 14, 531, 19),
woosh.Token(woosh.OP, ':', 531, 19, 531, 20),
woosh.Token(woosh.COMMENT, "# Loop through this until it's done", 531, 40, 531, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 531, 75, 532, 0),
woosh.Token(woosh.INDENT, '            ', 532, 0, 532, 12),
woosh.Token(woosh.NAME, 'depth', 532, 12, 532, 17),
woosh.Token(woosh.OP, '-=', 532, 18, 532, 20),
woosh.Token(woosh.NUMBER, '1', 532, 21, 532, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 532, 22, 533, 0),
woosh.Token(woosh.NAME, 'if', 533, 12, 533, 14),
woosh.Token(woosh.NAME, 'value', 533, 15, 533, 20),
woosh.Token(woosh.NAME, 'and', 533, 21, 533, 24),
woosh.Token(woosh.STRING, '"%("', 533, 25, 533, 29),
woosh.Token(woosh.NAME, 'in', 533, 30, 533, 32),
woosh.Token(woosh.NAME, 'value', 533, 33, 533, 38),
woosh.Token(woosh.OP, ':', 533, 38, 533, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 533, 39, 534, 0),
woosh.Token(woosh.INDENT, '                ', 534, 0, 534, 16),
woosh.Token(woosh.NAME, 'replace', 534, 16, 534, 23),
woosh.Token(woosh.OP, '=', 534, 24, 534, 25),
woosh.Token(woosh.NAME, 'functools', 534, 26, 534, 35),
woosh.Token(woosh.OP, '.', 534, 35, 534, 36),
woosh.Token(woosh.NAME, 'partial', 534, 36, 534, 43),
woosh.Token(woosh.OP, '(', 534, 43, 534, 44),
woosh.Token(woosh.NAME, 'self', 534, 44, 534, 48),
woosh.Token(woosh.OP, '.', 534, 48, 534, 49),
woosh.Token(woosh.NAME, '_interpolation_replace', 534, 49, 534, 71),
woosh.Token(woosh.OP, ',', 534, 71, 534, 72),
woosh.Token(woosh.NAME, 'parser', 535, 44, 535, 50),
woosh.Token(woosh.OP, '=', 535, 50, 535, 51),
woosh.Token(woosh.NAME, 'parser', 535, 51, 535, 57),
woosh.Token(woosh.OP, ')', 535, 57, 535, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 535, 58, 536, 0),
woosh.Token(woosh.NAME, 'value', 536, 16, 536, 21),
woosh.Token(woosh.OP, '=', 536, 22, 536, 23),
woosh.Token(woosh.NAME, 'self', 536, 24, 536, 28),
woosh.Token(woosh.OP, '.', 536, 28, 536, 29),
woosh.Token(woosh.NAME, '_KEYCRE', 536, 29, 536, 36),
woosh.Token(woosh.OP, '.', 536, 36, 536, 37),
woosh.Token(woosh.NAME, 'sub', 536, 37, 536, 40),
woosh.Token(woosh.OP, '(', 536, 40, 536, 41),
woosh.Token(woosh.NAME, 'replace', 536, 41, 536, 48),
woosh.Token(woosh.OP, ',', 536, 48, 536, 49),
woosh.Token(woosh.NAME, 'value', 536, 50, 536, 55),
woosh.Token(woosh.OP, ')', 536, 55, 536, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 536, 56, 537, 0),
woosh.Token(woosh.NAME, 'try', 537, 16, 537, 19),
woosh.Token(woosh.OP, ':', 537, 19, 537, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 537, 20, 538, 0),
woosh.Token(woosh.INDENT, '                    ', 538, 0, 538, 20),
woosh.Token(woosh.NAME, 'value', 538, 20, 538, 25),
woosh.Token(woosh.OP, '=', 538, 26, 538, 27),
woosh.Token(woosh.NAME, 'value', 538, 28, 538, 33),
woosh.Token(woosh.OP, '%', 538, 34, 538, 35),
woosh.Token(woosh.NAME, 'vars', 538, 36, 538, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 538, 40, 539, 0),
woosh.Token(woosh.DEDENT, '                ', 539, 0, 539, 16),
woosh.Token(woosh.NAME, 'except', 539, 16, 539, 22),
woosh.Token(woosh.NAME, 'KeyError', 539, 23, 539, 31),
woosh.Token(woosh.NAME, 'as', 539, 32, 539, 34),
woosh.Token(woosh.NAME, 'e', 539, 35, 539, 36),
woosh.Token(woosh.OP, ':', 539, 36, 539, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 539, 37, 540, 0),
woosh.Token(woosh.INDENT, '                    ', 540, 0, 540, 20),
woosh.Token(woosh.NAME, 'raise', 540, 20, 540, 25),
woosh.Token(woosh.NAME, 'InterpolationMissingOptionError', 540, 26, 540, 57),
woosh.Token(woosh.OP, '(', 540, 57, 540, 58),
woosh.Token(woosh.NAME, 'option', 541, 24, 541, 30),
woosh.Token(woosh.OP, ',', 541, 30, 541, 31),
woosh.Token(woosh.NAME, 'section', 541, 32, 541, 39),
woosh.Token(woosh.OP, ',', 541, 39, 541, 40),
woosh.Token(woosh.NAME, 'rawval', 541, 41, 541, 47),
woosh.Token(woosh.OP, ',', 541, 47, 541, 48),
woosh.Token(woosh.NAME, 'e', 541, 49, 541, 50),
woosh.Token(woosh.OP, '.', 541, 50, 541, 51),
woosh.Token(woosh.NAME, 'args', 541, 51, 541, 55),
woosh.Token(woosh.OP, '[', 541, 55, 541, 56),
woosh.Token(woosh.NUMBER, '0', 541, 56, 541, 57),
woosh.Token(woosh.OP, ']', 541, 57, 541, 58),
woosh.Token(woosh.OP, ')', 541, 58, 541, 59),
woosh.Token(woosh.NAME, 'from', 541, 60, 541, 64),
woosh.Token(woosh.NAME, 'None', 541, 65, 541, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 541, 69, 542, 0),
woosh.Token(woosh.DEDENT, '            ', 542, 0, 542, 12),
woosh.Token(woosh.DEDENT, '', 542, 12, 542, 12),
woosh.Token(woosh.NAME, 'else', 542, 12, 542, 16),
woosh.Token(woosh.OP, ':', 542, 16, 542, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 542, 17, 543, 0),
woosh.Token(woosh.INDENT, '                ', 543, 0, 543, 16),
woosh.Token(woosh.NAME, 'break', 543, 16, 543, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 543, 21, 544, 0),
woosh.Token(woosh.DEDENT, '        ', 544, 0, 544, 8),
woosh.Token(woosh.DEDENT, '', 544, 8, 544, 8),
woosh.Token(woosh.NAME, 'if', 544, 8, 544, 10),
woosh.Token(woosh.NAME, 'value', 544, 11, 544, 16),
woosh.Token(woosh.NAME, 'and', 544, 17, 544, 20),
woosh.Token(woosh.STRING, '"%("', 544, 21, 544, 25),
woosh.Token(woosh.NAME, 'in', 544, 26, 544, 28),
woosh.Token(woosh.NAME, 'value', 544, 29, 544, 34),
woosh.Token(woosh.OP, ':', 544, 34, 544, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 544, 35, 545, 0),
woosh.Token(woosh.INDENT, '            ', 545, 0, 545, 12),
woosh.Token(woosh.NAME, 'raise', 545, 12, 545, 17),
woosh.Token(woosh.NAME, 'InterpolationDepthError', 545, 18, 545, 41),
woosh.Token(woosh.OP, '(', 545, 41, 545, 42),
woosh.Token(woosh.NAME, 'option', 545, 42, 545, 48),
woosh.Token(woosh.OP, ',', 545, 48, 545, 49),
woosh.Token(woosh.NAME, 'section', 545, 50, 545, 57),
woosh.Token(woosh.OP, ',', 545, 57, 545, 58),
woosh.Token(woosh.NAME, 'rawval', 545, 59, 545, 65),
woosh.Token(woosh.OP, ')', 545, 65, 545, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 545, 66, 546, 0),
woosh.Token(woosh.DEDENT, '        ', 546, 0, 546, 8),
woosh.Token(woosh.NAME, 'return', 546, 8, 546, 14),
woosh.Token(woosh.NAME, 'value', 546, 15, 546, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 546, 20, 547, 0),
woosh.Token(woosh.DEDENT, '    ', 548, 0, 548, 4),
woosh.Token(woosh.NAME, 'def', 548, 4, 548, 7),
woosh.Token(woosh.NAME, 'before_set', 548, 8, 548, 18),
woosh.Token(woosh.OP, '(', 548, 18, 548, 19),
woosh.Token(woosh.NAME, 'self', 548, 19, 548, 23),
woosh.Token(woosh.OP, ',', 548, 23, 548, 24),
woosh.Token(woosh.NAME, 'parser', 548, 25, 548, 31),
woosh.Token(woosh.OP, ',', 548, 31, 548, 32),
woosh.Token(woosh.NAME, 'section', 548, 33, 548, 40),
woosh.Token(woosh.OP, ',', 548, 40, 548, 41),
woosh.Token(woosh.NAME, 'option', 548, 42, 548, 48),
woosh.Token(woosh.OP, ',', 548, 48, 548, 49),
woosh.Token(woosh.NAME, 'value', 548, 50, 548, 55),
woosh.Token(woosh.OP, ')', 548, 55, 548, 56),
woosh.Token(woosh.OP, ':', 548, 56, 548, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 548, 57, 549, 0),
woosh.Token(woosh.INDENT, '        ', 549, 0, 549, 8),
woosh.Token(woosh.NAME, 'return', 549, 8, 549, 14),
woosh.Token(woosh.NAME, 'value', 549, 15, 549, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 549, 20, 550, 0),
woosh.Token(woosh.DEDENT, '    ', 551, 0, 551, 4),
woosh.Token(woosh.OP, '@', 551, 4, 551, 5),
woosh.Token(woosh.NAME, 'staticmethod', 551, 5, 551, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 551, 17, 552, 0),
woosh.Token(woosh.NAME, 'def', 552, 4, 552, 7),
woosh.Token(woosh.NAME, '_interpolation_replace', 552, 8, 552, 30),
woosh.Token(woosh.OP, '(', 552, 30, 552, 31),
woosh.Token(woosh.NAME, 'match', 552, 31, 552, 36),
woosh.Token(woosh.OP, ',', 552, 36, 552, 37),
woosh.Token(woosh.NAME, 'parser', 552, 38, 552, 44),
woosh.Token(woosh.OP, ')', 552, 44, 552, 45),
woosh.Token(woosh.OP, ':', 552, 45, 552, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 552, 46, 553, 0),
woosh.Token(woosh.INDENT, '        ', 553, 0, 553, 8),
woosh.Token(woosh.NAME, 's', 553, 8, 553, 9),
woosh.Token(woosh.OP, '=', 553, 10, 553, 11),
woosh.Token(woosh.NAME, 'match', 553, 12, 553, 17),
woosh.Token(woosh.OP, '.', 553, 17, 553, 18),
woosh.Token(woosh.NAME, 'group', 553, 18, 553, 23),
woosh.Token(woosh.OP, '(', 553, 23, 553, 24),
woosh.Token(woosh.NUMBER, '1', 553, 24, 553, 25),
woosh.Token(woosh.OP, ')', 553, 25, 553, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 553, 26, 554, 0),
woosh.Token(woosh.NAME, 'if', 554, 8, 554, 10),
woosh.Token(woosh.NAME, 's', 554, 11, 554, 12),
woosh.Token(woosh.NAME, 'is', 554, 13, 554, 15),
woosh.Token(woosh.NAME, 'None', 554, 16, 554, 20),
woosh.Token(woosh.OP, ':', 554, 20, 554, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 554, 21, 555, 0),
woosh.Token(woosh.INDENT, '            ', 555, 0, 555, 12),
woosh.Token(woosh.NAME, 'return', 555, 12, 555, 18),
woosh.Token(woosh.NAME, 'match', 555, 19, 555, 24),
woosh.Token(woosh.OP, '.', 555, 24, 555, 25),
woosh.Token(woosh.NAME, 'group', 555, 25, 555, 30),
woosh.Token(woosh.OP, '(', 555, 30, 555, 31),
woosh.Token(woosh.OP, ')', 555, 31, 555, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 555, 32, 556, 0),
woosh.Token(woosh.DEDENT, '        ', 556, 0, 556, 8),
woosh.Token(woosh.NAME, 'else', 556, 8, 556, 12),
woosh.Token(woosh.OP, ':', 556, 12, 556, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 556, 13, 557, 0),
woosh.Token(woosh.INDENT, '            ', 557, 0, 557, 12),
woosh.Token(woosh.NAME, 'return', 557, 12, 557, 18),
woosh.Token(woosh.STRING, '"%%(%s)s"', 557, 19, 557, 28),
woosh.Token(woosh.OP, '%', 557, 29, 557, 30),
woosh.Token(woosh.NAME, 'parser', 557, 31, 557, 37),
woosh.Token(woosh.OP, '.', 557, 37, 557, 38),
woosh.Token(woosh.NAME, 'optionxform', 557, 38, 557, 49),
woosh.Token(woosh.OP, '(', 557, 49, 557, 50),
woosh.Token(woosh.NAME, 's', 557, 50, 557, 51),
woosh.Token(woosh.OP, ')', 557, 51, 557, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 557, 52, 558, 0),
woosh.Token(woosh.DEDENT, '', 560, 0, 560, 0),
woosh.Token(woosh.DEDENT, '', 560, 0, 560, 0),
woosh.Token(woosh.DEDENT, '', 560, 0, 560, 0),
woosh.Token(woosh.NAME, 'class', 560, 0, 560, 5),
woosh.Token(woosh.NAME, 'RawConfigParser', 560, 6, 560, 21),
woosh.Token(woosh.OP, '(', 560, 21, 560, 22),
woosh.Token(woosh.NAME, 'MutableMapping', 560, 22, 560, 36),
woosh.Token(woosh.OP, ')', 560, 36, 560, 37),
woosh.Token(woosh.OP, ':', 560, 37, 560, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 560, 38, 561, 0),
woosh.Token(woosh.INDENT, '    ', 561, 0, 561, 4),
woosh.Token(woosh.STRING, '"""ConfigParser that does not do interpolation."""', 561, 4, 561, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 561, 54, 562, 0),
woosh.Token(woosh.COMMENT, '# Regular expressions for parsing section headers and options', 563, 4, 563, 65),
woosh.Token(woosh.NAME, '_SECT_TMPL', 564, 4, 564, 14),
woosh.Token(woosh.OP, '=', 564, 15, 564, 16),
woosh.Token(woosh.STRING, 'r"""\r\n        \\[                                 # [\r\n        (?P<header>[^]]+)                  # very permissive!\r\n        \\]                                 # ]\r\n        """', 564, 17, 568, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 11, 569, 0),
woosh.Token(woosh.NAME, '_OPT_TMPL', 569, 4, 569, 13),
woosh.Token(woosh.OP, '=', 569, 14, 569, 15),
woosh.Token(woosh.STRING, 'r"""\r\n        (?P<option>.*?)                    # very permissive!\r\n        \\s*(?P<vi>{delim})\\s*              # any number of space/tab,\r\n                                           # followed by any of the\r\n                                           # allowed delimiters,\r\n                                           # followed by any space/tab\r\n        (?P<value>.*)$                     # everything up to eol\r\n        """', 569, 16, 576, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 576, 11, 577, 0),
woosh.Token(woosh.NAME, '_OPT_NV_TMPL', 577, 4, 577, 16),
woosh.Token(woosh.OP, '=', 577, 17, 577, 18),
woosh.Token(woosh.STRING, 'r"""\r\n        (?P<option>.*?)                    # very permissive!\r\n        \\s*(?:                             # any number of space/tab,\r\n        (?P<vi>{delim})\\s*                 # optionally followed by\r\n                                           # any of the allowed\r\n                                           # delimiters, followed by any\r\n                                           # space/tab\r\n        (?P<value>.*))?$                   # everything up to eol\r\n        """', 577, 19, 585, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 11, 586, 0),
woosh.Token(woosh.COMMENT, '# Interpolation algorithm to be used if the user does not specify another', 586, 4, 586, 77),
woosh.Token(woosh.NAME, '_DEFAULT_INTERPOLATION', 587, 4, 587, 26),
woosh.Token(woosh.OP, '=', 587, 27, 587, 28),
woosh.Token(woosh.NAME, 'Interpolation', 587, 29, 587, 42),
woosh.Token(woosh.OP, '(', 587, 42, 587, 43),
woosh.Token(woosh.OP, ')', 587, 43, 587, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 587, 44, 588, 0),
woosh.Token(woosh.COMMENT, '# Compiled regular expression for matching sections', 588, 4, 588, 55),
woosh.Token(woosh.NAME, 'SECTCRE', 589, 4, 589, 11),
woosh.Token(woosh.OP, '=', 589, 12, 589, 13),
woosh.Token(woosh.NAME, 're', 589, 14, 589, 16),
woosh.Token(woosh.OP, '.', 589, 16, 589, 17),
woosh.Token(woosh.NAME, 'compile', 589, 17, 589, 24),
woosh.Token(woosh.OP, '(', 589, 24, 589, 25),
woosh.Token(woosh.NAME, '_SECT_TMPL', 589, 25, 589, 35),
woosh.Token(woosh.OP, ',', 589, 35, 589, 36),
woosh.Token(woosh.NAME, 're', 589, 37, 589, 39),
woosh.Token(woosh.OP, '.', 589, 39, 589, 40),
woosh.Token(woosh.NAME, 'VERBOSE', 589, 40, 589, 47),
woosh.Token(woosh.OP, ')', 589, 47, 589, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 589, 48, 590, 0),
woosh.Token(woosh.COMMENT, '# Compiled regular expression for matching options with typical separators', 590, 4, 590, 78),
woosh.Token(woosh.NAME, 'OPTCRE', 591, 4, 591, 10),
woosh.Token(woosh.OP, '=', 591, 11, 591, 12),
woosh.Token(woosh.NAME, 're', 591, 13, 591, 15),
woosh.Token(woosh.OP, '.', 591, 15, 591, 16),
woosh.Token(woosh.NAME, 'compile', 591, 16, 591, 23),
woosh.Token(woosh.OP, '(', 591, 23, 591, 24),
woosh.Token(woosh.NAME, '_OPT_TMPL', 591, 24, 591, 33),
woosh.Token(woosh.OP, '.', 591, 33, 591, 34),
woosh.Token(woosh.NAME, 'format', 591, 34, 591, 40),
woosh.Token(woosh.OP, '(', 591, 40, 591, 41),
woosh.Token(woosh.NAME, 'delim', 591, 41, 591, 46),
woosh.Token(woosh.OP, '=', 591, 46, 591, 47),
woosh.Token(woosh.STRING, '"=|:"', 591, 47, 591, 52),
woosh.Token(woosh.OP, ')', 591, 52, 591, 53),
woosh.Token(woosh.OP, ',', 591, 53, 591, 54),
woosh.Token(woosh.NAME, 're', 591, 55, 591, 57),
woosh.Token(woosh.OP, '.', 591, 57, 591, 58),
woosh.Token(woosh.NAME, 'VERBOSE', 591, 58, 591, 65),
woosh.Token(woosh.OP, ')', 591, 65, 591, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 66, 592, 0),
woosh.Token(woosh.COMMENT, '# Compiled regular expression for matching options with optional values', 592, 4, 592, 75),
woosh.Token(woosh.COMMENT, '# delimited using typical separators', 593, 4, 593, 40),
woosh.Token(woosh.NAME, 'OPTCRE_NV', 594, 4, 594, 13),
woosh.Token(woosh.OP, '=', 594, 14, 594, 15),
woosh.Token(woosh.NAME, 're', 594, 16, 594, 18),
woosh.Token(woosh.OP, '.', 594, 18, 594, 19),
woosh.Token(woosh.NAME, 'compile', 594, 19, 594, 26),
woosh.Token(woosh.OP, '(', 594, 26, 594, 27),
woosh.Token(woosh.NAME, '_OPT_NV_TMPL', 594, 27, 594, 39),
woosh.Token(woosh.OP, '.', 594, 39, 594, 40),
woosh.Token(woosh.NAME, 'format', 594, 40, 594, 46),
woosh.Token(woosh.OP, '(', 594, 46, 594, 47),
woosh.Token(woosh.NAME, 'delim', 594, 47, 594, 52),
woosh.Token(woosh.OP, '=', 594, 52, 594, 53),
woosh.Token(woosh.STRING, '"=|:"', 594, 53, 594, 58),
woosh.Token(woosh.OP, ')', 594, 58, 594, 59),
woosh.Token(woosh.OP, ',', 594, 59, 594, 60),
woosh.Token(woosh.NAME, 're', 594, 61, 594, 63),
woosh.Token(woosh.OP, '.', 594, 63, 594, 64),
woosh.Token(woosh.NAME, 'VERBOSE', 594, 64, 594, 71),
woosh.Token(woosh.OP, ')', 594, 71, 594, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 72, 595, 0),
woosh.Token(woosh.COMMENT, '# Compiled regular expression for matching leading whitespace in a line', 595, 4, 595, 75),
woosh.Token(woosh.NAME, 'NONSPACECRE', 596, 4, 596, 15),
woosh.Token(woosh.OP, '=', 596, 16, 596, 17),
woosh.Token(woosh.NAME, 're', 596, 18, 596, 20),
woosh.Token(woosh.OP, '.', 596, 20, 596, 21),
woosh.Token(woosh.NAME, 'compile', 596, 21, 596, 28),
woosh.Token(woosh.OP, '(', 596, 28, 596, 29),
woosh.Token(woosh.STRING, 'r"\\S"', 596, 29, 596, 34),
woosh.Token(woosh.OP, ')', 596, 34, 596, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 35, 597, 0),
woosh.Token(woosh.COMMENT, '# Possible boolean values in the configuration.', 597, 4, 597, 51),
woosh.Token(woosh.NAME, 'BOOLEAN_STATES', 598, 4, 598, 18),
woosh.Token(woosh.OP, '=', 598, 19, 598, 20),
woosh.Token(woosh.OP, '{', 598, 21, 598, 22),
woosh.Token(woosh.STRING, "'1'", 598, 22, 598, 25),
woosh.Token(woosh.OP, ':', 598, 25, 598, 26),
woosh.Token(woosh.NAME, 'True', 598, 27, 598, 31),
woosh.Token(woosh.OP, ',', 598, 31, 598, 32),
woosh.Token(woosh.STRING, "'yes'", 598, 33, 598, 38),
woosh.Token(woosh.OP, ':', 598, 38, 598, 39),
woosh.Token(woosh.NAME, 'True', 598, 40, 598, 44),
woosh.Token(woosh.OP, ',', 598, 44, 598, 45),
woosh.Token(woosh.STRING, "'true'", 598, 46, 598, 52),
woosh.Token(woosh.OP, ':', 598, 52, 598, 53),
woosh.Token(woosh.NAME, 'True', 598, 54, 598, 58),
woosh.Token(woosh.OP, ',', 598, 58, 598, 59),
woosh.Token(woosh.STRING, "'on'", 598, 60, 598, 64),
woosh.Token(woosh.OP, ':', 598, 64, 598, 65),
woosh.Token(woosh.NAME, 'True', 598, 66, 598, 70),
woosh.Token(woosh.OP, ',', 598, 70, 598, 71),
woosh.Token(woosh.STRING, "'0'", 599, 22, 599, 25),
woosh.Token(woosh.OP, ':', 599, 25, 599, 26),
woosh.Token(woosh.NAME, 'False', 599, 27, 599, 32),
woosh.Token(woosh.OP, ',', 599, 32, 599, 33),
woosh.Token(woosh.STRING, "'no'", 599, 34, 599, 38),
woosh.Token(woosh.OP, ':', 599, 38, 599, 39),
woosh.Token(woosh.NAME, 'False', 599, 40, 599, 45),
woosh.Token(woosh.OP, ',', 599, 45, 599, 46),
woosh.Token(woosh.STRING, "'false'", 599, 47, 599, 54),
woosh.Token(woosh.OP, ':', 599, 54, 599, 55),
woosh.Token(woosh.NAME, 'False', 599, 56, 599, 61),
woosh.Token(woosh.OP, ',', 599, 61, 599, 62),
woosh.Token(woosh.STRING, "'off'", 599, 63, 599, 68),
woosh.Token(woosh.OP, ':', 599, 68, 599, 69),
woosh.Token(woosh.NAME, 'False', 599, 70, 599, 75),
woosh.Token(woosh.OP, '}', 599, 75, 599, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 76, 600, 0),
woosh.Token(woosh.NAME, 'def', 601, 4, 601, 7),
woosh.Token(woosh.NAME, '__init__', 601, 8, 601, 16),
woosh.Token(woosh.OP, '(', 601, 16, 601, 17),
woosh.Token(woosh.NAME, 'self', 601, 17, 601, 21),
woosh.Token(woosh.OP, ',', 601, 21, 601, 22),
woosh.Token(woosh.NAME, 'defaults', 601, 23, 601, 31),
woosh.Token(woosh.OP, '=', 601, 31, 601, 32),
woosh.Token(woosh.NAME, 'None', 601, 32, 601, 36),
woosh.Token(woosh.OP, ',', 601, 36, 601, 37),
woosh.Token(woosh.NAME, 'dict_type', 601, 38, 601, 47),
woosh.Token(woosh.OP, '=', 601, 47, 601, 48),
woosh.Token(woosh.NAME, '_default_dict', 601, 48, 601, 61),
woosh.Token(woosh.OP, ',', 601, 61, 601, 62),
woosh.Token(woosh.NAME, 'allow_no_value', 602, 17, 602, 31),
woosh.Token(woosh.OP, '=', 602, 31, 602, 32),
woosh.Token(woosh.NAME, 'False', 602, 32, 602, 37),
woosh.Token(woosh.OP, ',', 602, 37, 602, 38),
woosh.Token(woosh.OP, '*', 602, 39, 602, 40),
woosh.Token(woosh.OP, ',', 602, 40, 602, 41),
woosh.Token(woosh.NAME, 'delimiters', 602, 42, 602, 52),
woosh.Token(woosh.OP, '=', 602, 52, 602, 53),
woosh.Token(woosh.OP, '(', 602, 53, 602, 54),
woosh.Token(woosh.STRING, "'='", 602, 54, 602, 57),
woosh.Token(woosh.OP, ',', 602, 57, 602, 58),
woosh.Token(woosh.STRING, "':'", 602, 59, 602, 62),
woosh.Token(woosh.OP, ')', 602, 62, 602, 63),
woosh.Token(woosh.OP, ',', 602, 63, 602, 64),
woosh.Token(woosh.NAME, 'comment_prefixes', 603, 17, 603, 33),
woosh.Token(woosh.OP, '=', 603, 33, 603, 34),
woosh.Token(woosh.OP, '(', 603, 34, 603, 35),
woosh.Token(woosh.STRING, "'#'", 603, 35, 603, 38),
woosh.Token(woosh.OP, ',', 603, 38, 603, 39),
woosh.Token(woosh.STRING, "';'", 603, 40, 603, 43),
woosh.Token(woosh.OP, ')', 603, 43, 603, 44),
woosh.Token(woosh.OP, ',', 603, 44, 603, 45),
woosh.Token(woosh.NAME, 'inline_comment_prefixes', 603, 46, 603, 69),
woosh.Token(woosh.OP, '=', 603, 69, 603, 70),
woosh.Token(woosh.NAME, 'None', 603, 70, 603, 74),
woosh.Token(woosh.OP, ',', 603, 74, 603, 75),
woosh.Token(woosh.NAME, 'strict', 604, 17, 604, 23),
woosh.Token(woosh.OP, '=', 604, 23, 604, 24),
woosh.Token(woosh.NAME, 'True', 604, 24, 604, 28),
woosh.Token(woosh.OP, ',', 604, 28, 604, 29),
woosh.Token(woosh.NAME, 'empty_lines_in_values', 604, 30, 604, 51),
woosh.Token(woosh.OP, '=', 604, 51, 604, 52),
woosh.Token(woosh.NAME, 'True', 604, 52, 604, 56),
woosh.Token(woosh.OP, ',', 604, 56, 604, 57),
woosh.Token(woosh.NAME, 'default_section', 605, 17, 605, 32),
woosh.Token(woosh.OP, '=', 605, 32, 605, 33),
woosh.Token(woosh.NAME, 'DEFAULTSECT', 605, 33, 605, 44),
woosh.Token(woosh.OP, ',', 605, 44, 605, 45),
woosh.Token(woosh.NAME, 'interpolation', 606, 17, 606, 30),
woosh.Token(woosh.OP, '=', 606, 30, 606, 31),
woosh.Token(woosh.NAME, '_UNSET', 606, 31, 606, 37),
woosh.Token(woosh.OP, ',', 606, 37, 606, 38),
woosh.Token(woosh.NAME, 'converters', 606, 39, 606, 49),
woosh.Token(woosh.OP, '=', 606, 49, 606, 50),
woosh.Token(woosh.NAME, '_UNSET', 606, 50, 606, 56),
woosh.Token(woosh.OP, ')', 606, 56, 606, 57),
woosh.Token(woosh.OP, ':', 606, 57, 606, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 606, 58, 607, 0),
woosh.Token(woosh.INDENT, '        ', 608, 0, 608, 8),
woosh.Token(woosh.NAME, 'self', 608, 8, 608, 12),
woosh.Token(woosh.OP, '.', 608, 12, 608, 13),
woosh.Token(woosh.NAME, '_dict', 608, 13, 608, 18),
woosh.Token(woosh.OP, '=', 608, 19, 608, 20),
woosh.Token(woosh.NAME, 'dict_type', 608, 21, 608, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 30, 609, 0),
woosh.Token(woosh.NAME, 'self', 609, 8, 609, 12),
woosh.Token(woosh.OP, '.', 609, 12, 609, 13),
woosh.Token(woosh.NAME, '_sections', 609, 13, 609, 22),
woosh.Token(woosh.OP, '=', 609, 23, 609, 24),
woosh.Token(woosh.NAME, 'self', 609, 25, 609, 29),
woosh.Token(woosh.OP, '.', 609, 29, 609, 30),
woosh.Token(woosh.NAME, '_dict', 609, 30, 609, 35),
woosh.Token(woosh.OP, '(', 609, 35, 609, 36),
woosh.Token(woosh.OP, ')', 609, 36, 609, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 37, 610, 0),
woosh.Token(woosh.NAME, 'self', 610, 8, 610, 12),
woosh.Token(woosh.OP, '.', 610, 12, 610, 13),
woosh.Token(woosh.NAME, '_defaults', 610, 13, 610, 22),
woosh.Token(woosh.OP, '=', 610, 23, 610, 24),
woosh.Token(woosh.NAME, 'self', 610, 25, 610, 29),
woosh.Token(woosh.OP, '.', 610, 29, 610, 30),
woosh.Token(woosh.NAME, '_dict', 610, 30, 610, 35),
woosh.Token(woosh.OP, '(', 610, 35, 610, 36),
woosh.Token(woosh.OP, ')', 610, 36, 610, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 610, 37, 611, 0),
woosh.Token(woosh.NAME, 'self', 611, 8, 611, 12),
woosh.Token(woosh.OP, '.', 611, 12, 611, 13),
woosh.Token(woosh.NAME, '_converters', 611, 13, 611, 24),
woosh.Token(woosh.OP, '=', 611, 25, 611, 26),
woosh.Token(woosh.NAME, 'ConverterMapping', 611, 27, 611, 43),
woosh.Token(woosh.OP, '(', 611, 43, 611, 44),
woosh.Token(woosh.NAME, 'self', 611, 44, 611, 48),
woosh.Token(woosh.OP, ')', 611, 48, 611, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 49, 612, 0),
woosh.Token(woosh.NAME, 'self', 612, 8, 612, 12),
woosh.Token(woosh.OP, '.', 612, 12, 612, 13),
woosh.Token(woosh.NAME, '_proxies', 612, 13, 612, 21),
woosh.Token(woosh.OP, '=', 612, 22, 612, 23),
woosh.Token(woosh.NAME, 'self', 612, 24, 612, 28),
woosh.Token(woosh.OP, '.', 612, 28, 612, 29),
woosh.Token(woosh.NAME, '_dict', 612, 29, 612, 34),
woosh.Token(woosh.OP, '(', 612, 34, 612, 35),
woosh.Token(woosh.OP, ')', 612, 35, 612, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 612, 36, 613, 0),
woosh.Token(woosh.NAME, 'self', 613, 8, 613, 12),
woosh.Token(woosh.OP, '.', 613, 12, 613, 13),
woosh.Token(woosh.NAME, '_proxies', 613, 13, 613, 21),
woosh.Token(woosh.OP, '[', 613, 21, 613, 22),
woosh.Token(woosh.NAME, 'default_section', 613, 22, 613, 37),
woosh.Token(woosh.OP, ']', 613, 37, 613, 38),
woosh.Token(woosh.OP, '=', 613, 39, 613, 40),
woosh.Token(woosh.NAME, 'SectionProxy', 613, 41, 613, 53),
woosh.Token(woosh.OP, '(', 613, 53, 613, 54),
woosh.Token(woosh.NAME, 'self', 613, 54, 613, 58),
woosh.Token(woosh.OP, ',', 613, 58, 613, 59),
woosh.Token(woosh.NAME, 'default_section', 613, 60, 613, 75),
woosh.Token(woosh.OP, ')', 613, 75, 613, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 613, 76, 614, 0),
woosh.Token(woosh.NAME, 'self', 614, 8, 614, 12),
woosh.Token(woosh.OP, '.', 614, 12, 614, 13),
woosh.Token(woosh.NAME, '_delimiters', 614, 13, 614, 24),
woosh.Token(woosh.OP, '=', 614, 25, 614, 26),
woosh.Token(woosh.NAME, 'tuple', 614, 27, 614, 32),
woosh.Token(woosh.OP, '(', 614, 32, 614, 33),
woosh.Token(woosh.NAME, 'delimiters', 614, 33, 614, 43),
woosh.Token(woosh.OP, ')', 614, 43, 614, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 44, 615, 0),
woosh.Token(woosh.NAME, 'if', 615, 8, 615, 10),
woosh.Token(woosh.NAME, 'delimiters', 615, 11, 615, 21),
woosh.Token(woosh.OP, '==', 615, 22, 615, 24),
woosh.Token(woosh.OP, '(', 615, 25, 615, 26),
woosh.Token(woosh.STRING, "'='", 615, 26, 615, 29),
woosh.Token(woosh.OP, ',', 615, 29, 615, 30),
woosh.Token(woosh.STRING, "':'", 615, 31, 615, 34),
woosh.Token(woosh.OP, ')', 615, 34, 615, 35),
woosh.Token(woosh.OP, ':', 615, 35, 615, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 615, 36, 616, 0),
woosh.Token(woosh.INDENT, '            ', 616, 0, 616, 12),
woosh.Token(woosh.NAME, 'self', 616, 12, 616, 16),
woosh.Token(woosh.OP, '.', 616, 16, 616, 17),
woosh.Token(woosh.NAME, '_optcre', 616, 17, 616, 24),
woosh.Token(woosh.OP, '=', 616, 25, 616, 26),
woosh.Token(woosh.NAME, 'self', 616, 27, 616, 31),
woosh.Token(woosh.OP, '.', 616, 31, 616, 32),
woosh.Token(woosh.NAME, 'OPTCRE_NV', 616, 32, 616, 41),
woosh.Token(woosh.NAME, 'if', 616, 42, 616, 44),
woosh.Token(woosh.NAME, 'allow_no_value', 616, 45, 616, 59),
woosh.Token(woosh.NAME, 'else', 616, 60, 616, 64),
woosh.Token(woosh.NAME, 'self', 616, 65, 616, 69),
woosh.Token(woosh.OP, '.', 616, 69, 616, 70),
woosh.Token(woosh.NAME, 'OPTCRE', 616, 70, 616, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 616, 76, 617, 0),
woosh.Token(woosh.DEDENT, '        ', 617, 0, 617, 8),
woosh.Token(woosh.NAME, 'else', 617, 8, 617, 12),
woosh.Token(woosh.OP, ':', 617, 12, 617, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 617, 13, 618, 0),
woosh.Token(woosh.INDENT, '            ', 618, 0, 618, 12),
woosh.Token(woosh.NAME, 'd', 618, 12, 618, 13),
woosh.Token(woosh.OP, '=', 618, 14, 618, 15),
woosh.Token(woosh.STRING, '"|"', 618, 16, 618, 19),
woosh.Token(woosh.OP, '.', 618, 19, 618, 20),
woosh.Token(woosh.NAME, 'join', 618, 20, 618, 24),
woosh.Token(woosh.OP, '(', 618, 24, 618, 25),
woosh.Token(woosh.NAME, 're', 618, 25, 618, 27),
woosh.Token(woosh.OP, '.', 618, 27, 618, 28),
woosh.Token(woosh.NAME, 'escape', 618, 28, 618, 34),
woosh.Token(woosh.OP, '(', 618, 34, 618, 35),
woosh.Token(woosh.NAME, 'd', 618, 35, 618, 36),
woosh.Token(woosh.OP, ')', 618, 36, 618, 37),
woosh.Token(woosh.NAME, 'for', 618, 38, 618, 41),
woosh.Token(woosh.NAME, 'd', 618, 42, 618, 43),
woosh.Token(woosh.NAME, 'in', 618, 44, 618, 46),
woosh.Token(woosh.NAME, 'delimiters', 618, 47, 618, 57),
woosh.Token(woosh.OP, ')', 618, 57, 618, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 618, 58, 619, 0),
woosh.Token(woosh.NAME, 'if', 619, 12, 619, 14),
woosh.Token(woosh.NAME, 'allow_no_value', 619, 15, 619, 29),
woosh.Token(woosh.OP, ':', 619, 29, 619, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 619, 30, 620, 0),
woosh.Token(woosh.INDENT, '                ', 620, 0, 620, 16),
woosh.Token(woosh.NAME, 'self', 620, 16, 620, 20),
woosh.Token(woosh.OP, '.', 620, 20, 620, 21),
woosh.Token(woosh.NAME, '_optcre', 620, 21, 620, 28),
woosh.Token(woosh.OP, '=', 620, 29, 620, 30),
woosh.Token(woosh.NAME, 're', 620, 31, 620, 33),
woosh.Token(woosh.OP, '.', 620, 33, 620, 34),
woosh.Token(woosh.NAME, 'compile', 620, 34, 620, 41),
woosh.Token(woosh.OP, '(', 620, 41, 620, 42),
woosh.Token(woosh.NAME, 'self', 620, 42, 620, 46),
woosh.Token(woosh.OP, '.', 620, 46, 620, 47),
woosh.Token(woosh.NAME, '_OPT_NV_TMPL', 620, 47, 620, 59),
woosh.Token(woosh.OP, '.', 620, 59, 620, 60),
woosh.Token(woosh.NAME, 'format', 620, 60, 620, 66),
woosh.Token(woosh.OP, '(', 620, 66, 620, 67),
woosh.Token(woosh.NAME, 'delim', 620, 67, 620, 72),
woosh.Token(woosh.OP, '=', 620, 72, 620, 73),
woosh.Token(woosh.NAME, 'd', 620, 73, 620, 74),
woosh.Token(woosh.OP, ')', 620, 74, 620, 75),
woosh.Token(woosh.OP, ',', 620, 75, 620, 76),
woosh.Token(woosh.NAME, 're', 621, 42, 621, 44),
woosh.Token(woosh.OP, '.', 621, 44, 621, 45),
woosh.Token(woosh.NAME, 'VERBOSE', 621, 45, 621, 52),
woosh.Token(woosh.OP, ')', 621, 52, 621, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 621, 53, 622, 0),
woosh.Token(woosh.DEDENT, '            ', 622, 0, 622, 12),
woosh.Token(woosh.NAME, 'else', 622, 12, 622, 16),
woosh.Token(woosh.OP, ':', 622, 16, 622, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 622, 17, 623, 0),
woosh.Token(woosh.INDENT, '                ', 623, 0, 623, 16),
woosh.Token(woosh.NAME, 'self', 623, 16, 623, 20),
woosh.Token(woosh.OP, '.', 623, 20, 623, 21),
woosh.Token(woosh.NAME, '_optcre', 623, 21, 623, 28),
woosh.Token(woosh.OP, '=', 623, 29, 623, 30),
woosh.Token(woosh.NAME, 're', 623, 31, 623, 33),
woosh.Token(woosh.OP, '.', 623, 33, 623, 34),
woosh.Token(woosh.NAME, 'compile', 623, 34, 623, 41),
woosh.Token(woosh.OP, '(', 623, 41, 623, 42),
woosh.Token(woosh.NAME, 'self', 623, 42, 623, 46),
woosh.Token(woosh.OP, '.', 623, 46, 623, 47),
woosh.Token(woosh.NAME, '_OPT_TMPL', 623, 47, 623, 56),
woosh.Token(woosh.OP, '.', 623, 56, 623, 57),
woosh.Token(woosh.NAME, 'format', 623, 57, 623, 63),
woosh.Token(woosh.OP, '(', 623, 63, 623, 64),
woosh.Token(woosh.NAME, 'delim', 623, 64, 623, 69),
woosh.Token(woosh.OP, '=', 623, 69, 623, 70),
woosh.Token(woosh.NAME, 'd', 623, 70, 623, 71),
woosh.Token(woosh.OP, ')', 623, 71, 623, 72),
woosh.Token(woosh.OP, ',', 623, 72, 623, 73),
woosh.Token(woosh.NAME, 're', 624, 42, 624, 44),
woosh.Token(woosh.OP, '.', 624, 44, 624, 45),
woosh.Token(woosh.NAME, 'VERBOSE', 624, 45, 624, 52),
woosh.Token(woosh.OP, ')', 624, 52, 624, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 624, 53, 625, 0),
woosh.Token(woosh.DEDENT, '        ', 625, 0, 625, 8),
woosh.Token(woosh.DEDENT, '', 625, 8, 625, 8),
woosh.Token(woosh.NAME, 'self', 625, 8, 625, 12),
woosh.Token(woosh.OP, '.', 625, 12, 625, 13),
woosh.Token(woosh.NAME, '_comment_prefixes', 625, 13, 625, 30),
woosh.Token(woosh.OP, '=', 625, 31, 625, 32),
woosh.Token(woosh.NAME, 'tuple', 625, 33, 625, 38),
woosh.Token(woosh.OP, '(', 625, 38, 625, 39),
woosh.Token(woosh.NAME, 'comment_prefixes', 625, 39, 625, 55),
woosh.Token(woosh.NAME, 'or', 625, 56, 625, 58),
woosh.Token(woosh.OP, '(', 625, 59, 625, 60),
woosh.Token(woosh.OP, ')', 625, 60, 625, 61),
woosh.Token(woosh.OP, ')', 625, 61, 625, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 625, 62, 626, 0),
woosh.Token(woosh.NAME, 'self', 626, 8, 626, 12),
woosh.Token(woosh.OP, '.', 626, 12, 626, 13),
woosh.Token(woosh.NAME, '_inline_comment_prefixes', 626, 13, 626, 37),
woosh.Token(woosh.OP, '=', 626, 38, 626, 39),
woosh.Token(woosh.NAME, 'tuple', 626, 40, 626, 45),
woosh.Token(woosh.OP, '(', 626, 45, 626, 46),
woosh.Token(woosh.NAME, 'inline_comment_prefixes', 626, 46, 626, 69),
woosh.Token(woosh.NAME, 'or', 626, 70, 626, 72),
woosh.Token(woosh.OP, '(', 626, 73, 626, 74),
woosh.Token(woosh.OP, ')', 626, 74, 626, 75),
woosh.Token(woosh.OP, ')', 626, 75, 626, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 626, 76, 627, 0),
woosh.Token(woosh.NAME, 'self', 627, 8, 627, 12),
woosh.Token(woosh.OP, '.', 627, 12, 627, 13),
woosh.Token(woosh.NAME, '_strict', 627, 13, 627, 20),
woosh.Token(woosh.OP, '=', 627, 21, 627, 22),
woosh.Token(woosh.NAME, 'strict', 627, 23, 627, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 627, 29, 628, 0),
woosh.Token(woosh.NAME, 'self', 628, 8, 628, 12),
woosh.Token(woosh.OP, '.', 628, 12, 628, 13),
woosh.Token(woosh.NAME, '_allow_no_value', 628, 13, 628, 28),
woosh.Token(woosh.OP, '=', 628, 29, 628, 30),
woosh.Token(woosh.NAME, 'allow_no_value', 628, 31, 628, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 628, 45, 629, 0),
woosh.Token(woosh.NAME, 'self', 629, 8, 629, 12),
woosh.Token(woosh.OP, '.', 629, 12, 629, 13),
woosh.Token(woosh.NAME, '_empty_lines_in_values', 629, 13, 629, 35),
woosh.Token(woosh.OP, '=', 629, 36, 629, 37),
woosh.Token(woosh.NAME, 'empty_lines_in_values', 629, 38, 629, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 629, 59, 630, 0),
woosh.Token(woosh.NAME, 'self', 630, 8, 630, 12),
woosh.Token(woosh.OP, '.', 630, 12, 630, 13),
woosh.Token(woosh.NAME, 'default_section', 630, 13, 630, 28),
woosh.Token(woosh.OP, '=', 630, 28, 630, 29),
woosh.Token(woosh.NAME, 'default_section', 630, 29, 630, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 630, 44, 631, 0),
woosh.Token(woosh.NAME, 'self', 631, 8, 631, 12),
woosh.Token(woosh.OP, '.', 631, 12, 631, 13),
woosh.Token(woosh.NAME, '_interpolation', 631, 13, 631, 27),
woosh.Token(woosh.OP, '=', 631, 28, 631, 29),
woosh.Token(woosh.NAME, 'interpolation', 631, 30, 631, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 631, 43, 632, 0),
woosh.Token(woosh.NAME, 'if', 632, 8, 632, 10),
woosh.Token(woosh.NAME, 'self', 632, 11, 632, 15),
woosh.Token(woosh.OP, '.', 632, 15, 632, 16),
woosh.Token(woosh.NAME, '_interpolation', 632, 16, 632, 30),
woosh.Token(woosh.NAME, 'is', 632, 31, 632, 33),
woosh.Token(woosh.NAME, '_UNSET', 632, 34, 632, 40),
woosh.Token(woosh.OP, ':', 632, 40, 632, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 632, 41, 633, 0),
woosh.Token(woosh.INDENT, '            ', 633, 0, 633, 12),
woosh.Token(woosh.NAME, 'self', 633, 12, 633, 16),
woosh.Token(woosh.OP, '.', 633, 16, 633, 17),
woosh.Token(woosh.NAME, '_interpolation', 633, 17, 633, 31),
woosh.Token(woosh.OP, '=', 633, 32, 633, 33),
woosh.Token(woosh.NAME, 'self', 633, 34, 633, 38),
woosh.Token(woosh.OP, '.', 633, 38, 633, 39),
woosh.Token(woosh.NAME, '_DEFAULT_INTERPOLATION', 633, 39, 633, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 633, 61, 634, 0),
woosh.Token(woosh.DEDENT, '        ', 634, 0, 634, 8),
woosh.Token(woosh.NAME, 'if', 634, 8, 634, 10),
woosh.Token(woosh.NAME, 'self', 634, 11, 634, 15),
woosh.Token(woosh.OP, '.', 634, 15, 634, 16),
woosh.Token(woosh.NAME, '_interpolation', 634, 16, 634, 30),
woosh.Token(woosh.NAME, 'is', 634, 31, 634, 33),
woosh.Token(woosh.NAME, 'None', 634, 34, 634, 38),
woosh.Token(woosh.OP, ':', 634, 38, 634, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 634, 39, 635, 0),
woosh.Token(woosh.INDENT, '            ', 635, 0, 635, 12),
woosh.Token(woosh.NAME, 'self', 635, 12, 635, 16),
woosh.Token(woosh.OP, '.', 635, 16, 635, 17),
woosh.Token(woosh.NAME, '_interpolation', 635, 17, 635, 31),
woosh.Token(woosh.OP, '=', 635, 32, 635, 33),
woosh.Token(woosh.NAME, 'Interpolation', 635, 34, 635, 47),
woosh.Token(woosh.OP, '(', 635, 47, 635, 48),
woosh.Token(woosh.OP, ')', 635, 48, 635, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 635, 49, 636, 0),
woosh.Token(woosh.DEDENT, '        ', 636, 0, 636, 8),
woosh.Token(woosh.NAME, 'if', 636, 8, 636, 10),
woosh.Token(woosh.NAME, 'converters', 636, 11, 636, 21),
woosh.Token(woosh.NAME, 'is', 636, 22, 636, 24),
woosh.Token(woosh.NAME, 'not', 636, 25, 636, 28),
woosh.Token(woosh.NAME, '_UNSET', 636, 29, 636, 35),
woosh.Token(woosh.OP, ':', 636, 35, 636, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 636, 36, 637, 0),
woosh.Token(woosh.INDENT, '            ', 637, 0, 637, 12),
woosh.Token(woosh.NAME, 'self', 637, 12, 637, 16),
woosh.Token(woosh.OP, '.', 637, 16, 637, 17),
woosh.Token(woosh.NAME, '_converters', 637, 17, 637, 28),
woosh.Token(woosh.OP, '.', 637, 28, 637, 29),
woosh.Token(woosh.NAME, 'update', 637, 29, 637, 35),
woosh.Token(woosh.OP, '(', 637, 35, 637, 36),
woosh.Token(woosh.NAME, 'converters', 637, 36, 637, 46),
woosh.Token(woosh.OP, ')', 637, 46, 637, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 637, 47, 638, 0),
woosh.Token(woosh.DEDENT, '        ', 638, 0, 638, 8),
woosh.Token(woosh.NAME, 'if', 638, 8, 638, 10),
woosh.Token(woosh.NAME, 'defaults', 638, 11, 638, 19),
woosh.Token(woosh.OP, ':', 638, 19, 638, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 638, 20, 639, 0),
woosh.Token(woosh.INDENT, '            ', 639, 0, 639, 12),
woosh.Token(woosh.NAME, 'self', 639, 12, 639, 16),
woosh.Token(woosh.OP, '.', 639, 16, 639, 17),
woosh.Token(woosh.NAME, '_read_defaults', 639, 17, 639, 31),
woosh.Token(woosh.OP, '(', 639, 31, 639, 32),
woosh.Token(woosh.NAME, 'defaults', 639, 32, 639, 40),
woosh.Token(woosh.OP, ')', 639, 40, 639, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 639, 41, 640, 0),
woosh.Token(woosh.DEDENT, '    ', 641, 0, 641, 4),
woosh.Token(woosh.DEDENT, '', 641, 4, 641, 4),
woosh.Token(woosh.NAME, 'def', 641, 4, 641, 7),
woosh.Token(woosh.NAME, 'defaults', 641, 8, 641, 16),
woosh.Token(woosh.OP, '(', 641, 16, 641, 17),
woosh.Token(woosh.NAME, 'self', 641, 17, 641, 21),
woosh.Token(woosh.OP, ')', 641, 21, 641, 22),
woosh.Token(woosh.OP, ':', 641, 22, 641, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 641, 23, 642, 0),
woosh.Token(woosh.INDENT, '        ', 642, 0, 642, 8),
woosh.Token(woosh.NAME, 'return', 642, 8, 642, 14),
woosh.Token(woosh.NAME, 'self', 642, 15, 642, 19),
woosh.Token(woosh.OP, '.', 642, 19, 642, 20),
woosh.Token(woosh.NAME, '_defaults', 642, 20, 642, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 642, 29, 643, 0),
woosh.Token(woosh.DEDENT, '    ', 644, 0, 644, 4),
woosh.Token(woosh.NAME, 'def', 644, 4, 644, 7),
woosh.Token(woosh.NAME, 'sections', 644, 8, 644, 16),
woosh.Token(woosh.OP, '(', 644, 16, 644, 17),
woosh.Token(woosh.NAME, 'self', 644, 17, 644, 21),
woosh.Token(woosh.OP, ')', 644, 21, 644, 22),
woosh.Token(woosh.OP, ':', 644, 22, 644, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 644, 23, 645, 0),
woosh.Token(woosh.INDENT, '        ', 645, 0, 645, 8),
woosh.Token(woosh.STRING, '"""Return a list of section names, excluding [DEFAULT]"""', 645, 8, 645, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 645, 65, 646, 0),
woosh.Token(woosh.COMMENT, '# self._sections will never have [DEFAULT] in it', 646, 8, 646, 56),
woosh.Token(woosh.NAME, 'return', 647, 8, 647, 14),
woosh.Token(woosh.NAME, 'list', 647, 15, 647, 19),
woosh.Token(woosh.OP, '(', 647, 19, 647, 20),
woosh.Token(woosh.NAME, 'self', 647, 20, 647, 24),
woosh.Token(woosh.OP, '.', 647, 24, 647, 25),
woosh.Token(woosh.NAME, '_sections', 647, 25, 647, 34),
woosh.Token(woosh.OP, '.', 647, 34, 647, 35),
woosh.Token(woosh.NAME, 'keys', 647, 35, 647, 39),
woosh.Token(woosh.OP, '(', 647, 39, 647, 40),
woosh.Token(woosh.OP, ')', 647, 40, 647, 41),
woosh.Token(woosh.OP, ')', 647, 41, 647, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 647, 42, 648, 0),
woosh.Token(woosh.DEDENT, '    ', 649, 0, 649, 4),
woosh.Token(woosh.NAME, 'def', 649, 4, 649, 7),
woosh.Token(woosh.NAME, 'add_section', 649, 8, 649, 19),
woosh.Token(woosh.OP, '(', 649, 19, 649, 20),
woosh.Token(woosh.NAME, 'self', 649, 20, 649, 24),
woosh.Token(woosh.OP, ',', 649, 24, 649, 25),
woosh.Token(woosh.NAME, 'section', 649, 26, 649, 33),
woosh.Token(woosh.OP, ')', 649, 33, 649, 34),
woosh.Token(woosh.OP, ':', 649, 34, 649, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 649, 35, 650, 0),
woosh.Token(woosh.INDENT, '        ', 650, 0, 650, 8),
woosh.Token(woosh.STRING, '"""Create a new section in the configuration.\r\n\r\n        Raise DuplicateSectionError if a section by the specified name\r\n        already exists. Raise ValueError if name is DEFAULT.\r\n        """', 650, 8, 654, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 654, 11, 655, 0),
woosh.Token(woosh.NAME, 'if', 655, 8, 655, 10),
woosh.Token(woosh.NAME, 'section', 655, 11, 655, 18),
woosh.Token(woosh.OP, '==', 655, 19, 655, 21),
woosh.Token(woosh.NAME, 'self', 655, 22, 655, 26),
woosh.Token(woosh.OP, '.', 655, 26, 655, 27),
woosh.Token(woosh.NAME, 'default_section', 655, 27, 655, 42),
woosh.Token(woosh.OP, ':', 655, 42, 655, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 655, 43, 656, 0),
woosh.Token(woosh.INDENT, '            ', 656, 0, 656, 12),
woosh.Token(woosh.NAME, 'raise', 656, 12, 656, 17),
woosh.Token(woosh.NAME, 'ValueError', 656, 18, 656, 28),
woosh.Token(woosh.OP, '(', 656, 28, 656, 29),
woosh.Token(woosh.STRING, "'Invalid section name: %r'", 656, 29, 656, 55),
woosh.Token(woosh.OP, '%', 656, 56, 656, 57),
woosh.Token(woosh.NAME, 'section', 656, 58, 656, 65),
woosh.Token(woosh.OP, ')', 656, 65, 656, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 656, 66, 657, 0),
woosh.Token(woosh.DEDENT, '        ', 658, 0, 658, 8),
woosh.Token(woosh.NAME, 'if', 658, 8, 658, 10),
woosh.Token(woosh.NAME, 'section', 658, 11, 658, 18),
woosh.Token(woosh.NAME, 'in', 658, 19, 658, 21),
woosh.Token(woosh.NAME, 'self', 658, 22, 658, 26),
woosh.Token(woosh.OP, '.', 658, 26, 658, 27),
woosh.Token(woosh.NAME, '_sections', 658, 27, 658, 36),
woosh.Token(woosh.OP, ':', 658, 36, 658, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 658, 37, 659, 0),
woosh.Token(woosh.INDENT, '            ', 659, 0, 659, 12),
woosh.Token(woosh.NAME, 'raise', 659, 12, 659, 17),
woosh.Token(woosh.NAME, 'DuplicateSectionError', 659, 18, 659, 39),
woosh.Token(woosh.OP, '(', 659, 39, 659, 40),
woosh.Token(woosh.NAME, 'section', 659, 40, 659, 47),
woosh.Token(woosh.OP, ')', 659, 47, 659, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 659, 48, 660, 0),
woosh.Token(woosh.DEDENT, '        ', 660, 0, 660, 8),
woosh.Token(woosh.NAME, 'self', 660, 8, 660, 12),
woosh.Token(woosh.OP, '.', 660, 12, 660, 13),
woosh.Token(woosh.NAME, '_sections', 660, 13, 660, 22),
woosh.Token(woosh.OP, '[', 660, 22, 660, 23),
woosh.Token(woosh.NAME, 'section', 660, 23, 660, 30),
woosh.Token(woosh.OP, ']', 660, 30, 660, 31),
woosh.Token(woosh.OP, '=', 660, 32, 660, 33),
woosh.Token(woosh.NAME, 'self', 660, 34, 660, 38),
woosh.Token(woosh.OP, '.', 660, 38, 660, 39),
woosh.Token(woosh.NAME, '_dict', 660, 39, 660, 44),
woosh.Token(woosh.OP, '(', 660, 44, 660, 45),
woosh.Token(woosh.OP, ')', 660, 45, 660, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 660, 46, 661, 0),
woosh.Token(woosh.NAME, 'self', 661, 8, 661, 12),
woosh.Token(woosh.OP, '.', 661, 12, 661, 13),
woosh.Token(woosh.NAME, '_proxies', 661, 13, 661, 21),
woosh.Token(woosh.OP, '[', 661, 21, 661, 22),
woosh.Token(woosh.NAME, 'section', 661, 22, 661, 29),
woosh.Token(woosh.OP, ']', 661, 29, 661, 30),
woosh.Token(woosh.OP, '=', 661, 31, 661, 32),
woosh.Token(woosh.NAME, 'SectionProxy', 661, 33, 661, 45),
woosh.Token(woosh.OP, '(', 661, 45, 661, 46),
woosh.Token(woosh.NAME, 'self', 661, 46, 661, 50),
woosh.Token(woosh.OP, ',', 661, 50, 661, 51),
woosh.Token(woosh.NAME, 'section', 661, 52, 661, 59),
woosh.Token(woosh.OP, ')', 661, 59, 661, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 661, 60, 662, 0),
woosh.Token(woosh.DEDENT, '    ', 663, 0, 663, 4),
woosh.Token(woosh.NAME, 'def', 663, 4, 663, 7),
woosh.Token(woosh.NAME, 'has_section', 663, 8, 663, 19),
woosh.Token(woosh.OP, '(', 663, 19, 663, 20),
woosh.Token(woosh.NAME, 'self', 663, 20, 663, 24),
woosh.Token(woosh.OP, ',', 663, 24, 663, 25),
woosh.Token(woosh.NAME, 'section', 663, 26, 663, 33),
woosh.Token(woosh.OP, ')', 663, 33, 663, 34),
woosh.Token(woosh.OP, ':', 663, 34, 663, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 663, 35, 664, 0),
woosh.Token(woosh.INDENT, '        ', 664, 0, 664, 8),
woosh.Token(woosh.STRING, '"""Indicate whether the named section is present in the configuration.\r\n\r\n        The DEFAULT section is not acknowledged.\r\n        """', 664, 8, 667, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 667, 11, 668, 0),
woosh.Token(woosh.NAME, 'return', 668, 8, 668, 14),
woosh.Token(woosh.NAME, 'section', 668, 15, 668, 22),
woosh.Token(woosh.NAME, 'in', 668, 23, 668, 25),
woosh.Token(woosh.NAME, 'self', 668, 26, 668, 30),
woosh.Token(woosh.OP, '.', 668, 30, 668, 31),
woosh.Token(woosh.NAME, '_sections', 668, 31, 668, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 668, 40, 669, 0),
woosh.Token(woosh.DEDENT, '    ', 670, 0, 670, 4),
woosh.Token(woosh.NAME, 'def', 670, 4, 670, 7),
woosh.Token(woosh.NAME, 'options', 670, 8, 670, 15),
woosh.Token(woosh.OP, '(', 670, 15, 670, 16),
woosh.Token(woosh.NAME, 'self', 670, 16, 670, 20),
woosh.Token(woosh.OP, ',', 670, 20, 670, 21),
woosh.Token(woosh.NAME, 'section', 670, 22, 670, 29),
woosh.Token(woosh.OP, ')', 670, 29, 670, 30),
woosh.Token(woosh.OP, ':', 670, 30, 670, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 670, 31, 671, 0),
woosh.Token(woosh.INDENT, '        ', 671, 0, 671, 8),
woosh.Token(woosh.STRING, '"""Return a list of option names for the given section name."""', 671, 8, 671, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 671, 71, 672, 0),
woosh.Token(woosh.NAME, 'try', 672, 8, 672, 11),
woosh.Token(woosh.OP, ':', 672, 11, 672, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 672, 12, 673, 0),
woosh.Token(woosh.INDENT, '            ', 673, 0, 673, 12),
woosh.Token(woosh.NAME, 'opts', 673, 12, 673, 16),
woosh.Token(woosh.OP, '=', 673, 17, 673, 18),
woosh.Token(woosh.NAME, 'self', 673, 19, 673, 23),
woosh.Token(woosh.OP, '.', 673, 23, 673, 24),
woosh.Token(woosh.NAME, '_sections', 673, 24, 673, 33),
woosh.Token(woosh.OP, '[', 673, 33, 673, 34),
woosh.Token(woosh.NAME, 'section', 673, 34, 673, 41),
woosh.Token(woosh.OP, ']', 673, 41, 673, 42),
woosh.Token(woosh.OP, '.', 673, 42, 673, 43),
woosh.Token(woosh.NAME, 'copy', 673, 43, 673, 47),
woosh.Token(woosh.OP, '(', 673, 47, 673, 48),
woosh.Token(woosh.OP, ')', 673, 48, 673, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 673, 49, 674, 0),
woosh.Token(woosh.DEDENT, '        ', 674, 0, 674, 8),
woosh.Token(woosh.NAME, 'except', 674, 8, 674, 14),
woosh.Token(woosh.NAME, 'KeyError', 674, 15, 674, 23),
woosh.Token(woosh.OP, ':', 674, 23, 674, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 674, 24, 675, 0),
woosh.Token(woosh.INDENT, '            ', 675, 0, 675, 12),
woosh.Token(woosh.NAME, 'raise', 675, 12, 675, 17),
woosh.Token(woosh.NAME, 'NoSectionError', 675, 18, 675, 32),
woosh.Token(woosh.OP, '(', 675, 32, 675, 33),
woosh.Token(woosh.NAME, 'section', 675, 33, 675, 40),
woosh.Token(woosh.OP, ')', 675, 40, 675, 41),
woosh.Token(woosh.NAME, 'from', 675, 42, 675, 46),
woosh.Token(woosh.NAME, 'None', 675, 47, 675, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 675, 51, 676, 0),
woosh.Token(woosh.DEDENT, '        ', 676, 0, 676, 8),
woosh.Token(woosh.NAME, 'opts', 676, 8, 676, 12),
woosh.Token(woosh.OP, '.', 676, 12, 676, 13),
woosh.Token(woosh.NAME, 'update', 676, 13, 676, 19),
woosh.Token(woosh.OP, '(', 676, 19, 676, 20),
woosh.Token(woosh.NAME, 'self', 676, 20, 676, 24),
woosh.Token(woosh.OP, '.', 676, 24, 676, 25),
woosh.Token(woosh.NAME, '_defaults', 676, 25, 676, 34),
woosh.Token(woosh.OP, ')', 676, 34, 676, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 676, 35, 677, 0),
woosh.Token(woosh.NAME, 'return', 677, 8, 677, 14),
woosh.Token(woosh.NAME, 'list', 677, 15, 677, 19),
woosh.Token(woosh.OP, '(', 677, 19, 677, 20),
woosh.Token(woosh.NAME, 'opts', 677, 20, 677, 24),
woosh.Token(woosh.OP, '.', 677, 24, 677, 25),
woosh.Token(woosh.NAME, 'keys', 677, 25, 677, 29),
woosh.Token(woosh.OP, '(', 677, 29, 677, 30),
woosh.Token(woosh.OP, ')', 677, 30, 677, 31),
woosh.Token(woosh.OP, ')', 677, 31, 677, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 677, 32, 678, 0),
woosh.Token(woosh.DEDENT, '    ', 679, 0, 679, 4),
woosh.Token(woosh.NAME, 'def', 679, 4, 679, 7),
woosh.Token(woosh.NAME, 'read', 679, 8, 679, 12),
woosh.Token(woosh.OP, '(', 679, 12, 679, 13),
woosh.Token(woosh.NAME, 'self', 679, 13, 679, 17),
woosh.Token(woosh.OP, ',', 679, 17, 679, 18),
woosh.Token(woosh.NAME, 'filenames', 679, 19, 679, 28),
woosh.Token(woosh.OP, ',', 679, 28, 679, 29),
woosh.Token(woosh.NAME, 'encoding', 679, 30, 679, 38),
woosh.Token(woosh.OP, '=', 679, 38, 679, 39),
woosh.Token(woosh.NAME, 'None', 679, 39, 679, 43),
woosh.Token(woosh.OP, ')', 679, 43, 679, 44),
woosh.Token(woosh.OP, ':', 679, 44, 679, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 679, 45, 680, 0),
woosh.Token(woosh.INDENT, '        ', 680, 0, 680, 8),
woosh.Token(woosh.STRING, '"""Read and parse a filename or an iterable of filenames.\r\n\r\n        Files that cannot be opened are silently ignored; this is\r\n        designed so that you can specify an iterable of potential\r\n        configuration file locations (e.g. current directory, user\'s\r\n        home directory, systemwide directory), and all existing\r\n        configuration files in the iterable will be read.  A single\r\n        filename may also be given.\r\n\r\n        Return list of successfully read files.\r\n        """', 680, 8, 690, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 690, 11, 691, 0),
woosh.Token(woosh.NAME, 'if', 691, 8, 691, 10),
woosh.Token(woosh.NAME, 'isinstance', 691, 11, 691, 21),
woosh.Token(woosh.OP, '(', 691, 21, 691, 22),
woosh.Token(woosh.NAME, 'filenames', 691, 22, 691, 31),
woosh.Token(woosh.OP, ',', 691, 31, 691, 32),
woosh.Token(woosh.OP, '(', 691, 33, 691, 34),
woosh.Token(woosh.NAME, 'str', 691, 34, 691, 37),
woosh.Token(woosh.OP, ',', 691, 37, 691, 38),
woosh.Token(woosh.NAME, 'bytes', 691, 39, 691, 44),
woosh.Token(woosh.OP, ',', 691, 44, 691, 45),
woosh.Token(woosh.NAME, 'os', 691, 46, 691, 48),
woosh.Token(woosh.OP, '.', 691, 48, 691, 49),
woosh.Token(woosh.NAME, 'PathLike', 691, 49, 691, 57),
woosh.Token(woosh.OP, ')', 691, 57, 691, 58),
woosh.Token(woosh.OP, ')', 691, 58, 691, 59),
woosh.Token(woosh.OP, ':', 691, 59, 691, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 691, 60, 692, 0),
woosh.Token(woosh.INDENT, '            ', 692, 0, 692, 12),
woosh.Token(woosh.NAME, 'filenames', 692, 12, 692, 21),
woosh.Token(woosh.OP, '=', 692, 22, 692, 23),
woosh.Token(woosh.OP, '[', 692, 24, 692, 25),
woosh.Token(woosh.NAME, 'filenames', 692, 25, 692, 34),
woosh.Token(woosh.OP, ']', 692, 34, 692, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 692, 35, 693, 0),
woosh.Token(woosh.DEDENT, '        ', 693, 0, 693, 8),
woosh.Token(woosh.NAME, 'read_ok', 693, 8, 693, 15),
woosh.Token(woosh.OP, '=', 693, 16, 693, 17),
woosh.Token(woosh.OP, '[', 693, 18, 693, 19),
woosh.Token(woosh.OP, ']', 693, 19, 693, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 693, 20, 694, 0),
woosh.Token(woosh.NAME, 'for', 694, 8, 694, 11),
woosh.Token(woosh.NAME, 'filename', 694, 12, 694, 20),
woosh.Token(woosh.NAME, 'in', 694, 21, 694, 23),
woosh.Token(woosh.NAME, 'filenames', 694, 24, 694, 33),
woosh.Token(woosh.OP, ':', 694, 33, 694, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 694, 34, 695, 0),
woosh.Token(woosh.INDENT, '            ', 695, 0, 695, 12),
woosh.Token(woosh.NAME, 'try', 695, 12, 695, 15),
woosh.Token(woosh.OP, ':', 695, 15, 695, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 695, 16, 696, 0),
woosh.Token(woosh.INDENT, '                ', 696, 0, 696, 16),
woosh.Token(woosh.NAME, 'with', 696, 16, 696, 20),
woosh.Token(woosh.NAME, 'open', 696, 21, 696, 25),
woosh.Token(woosh.OP, '(', 696, 25, 696, 26),
woosh.Token(woosh.NAME, 'filename', 696, 26, 696, 34),
woosh.Token(woosh.OP, ',', 696, 34, 696, 35),
woosh.Token(woosh.NAME, 'encoding', 696, 36, 696, 44),
woosh.Token(woosh.OP, '=', 696, 44, 696, 45),
woosh.Token(woosh.NAME, 'encoding', 696, 45, 696, 53),
woosh.Token(woosh.OP, ')', 696, 53, 696, 54),
woosh.Token(woosh.NAME, 'as', 696, 55, 696, 57),
woosh.Token(woosh.NAME, 'fp', 696, 58, 696, 60),
woosh.Token(woosh.OP, ':', 696, 60, 696, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 696, 61, 697, 0),
woosh.Token(woosh.INDENT, '                    ', 697, 0, 697, 20),
woosh.Token(woosh.NAME, 'self', 697, 20, 697, 24),
woosh.Token(woosh.OP, '.', 697, 24, 697, 25),
woosh.Token(woosh.NAME, '_read', 697, 25, 697, 30),
woosh.Token(woosh.OP, '(', 697, 30, 697, 31),
woosh.Token(woosh.NAME, 'fp', 697, 31, 697, 33),
woosh.Token(woosh.OP, ',', 697, 33, 697, 34),
woosh.Token(woosh.NAME, 'filename', 697, 35, 697, 43),
woosh.Token(woosh.OP, ')', 697, 43, 697, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 697, 44, 698, 0),
woosh.Token(woosh.DEDENT, '            ', 698, 0, 698, 12),
woosh.Token(woosh.DEDENT, '', 698, 12, 698, 12),
woosh.Token(woosh.NAME, 'except', 698, 12, 698, 18),
woosh.Token(woosh.NAME, 'OSError', 698, 19, 698, 26),
woosh.Token(woosh.OP, ':', 698, 26, 698, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 698, 27, 699, 0),
woosh.Token(woosh.INDENT, '                ', 699, 0, 699, 16),
woosh.Token(woosh.NAME, 'continue', 699, 16, 699, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 699, 24, 700, 0),
woosh.Token(woosh.DEDENT, '            ', 700, 0, 700, 12),
woosh.Token(woosh.NAME, 'if', 700, 12, 700, 14),
woosh.Token(woosh.NAME, 'isinstance', 700, 15, 700, 25),
woosh.Token(woosh.OP, '(', 700, 25, 700, 26),
woosh.Token(woosh.NAME, 'filename', 700, 26, 700, 34),
woosh.Token(woosh.OP, ',', 700, 34, 700, 35),
woosh.Token(woosh.NAME, 'os', 700, 36, 700, 38),
woosh.Token(woosh.OP, '.', 700, 38, 700, 39),
woosh.Token(woosh.NAME, 'PathLike', 700, 39, 700, 47),
woosh.Token(woosh.OP, ')', 700, 47, 700, 48),
woosh.Token(woosh.OP, ':', 700, 48, 700, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 700, 49, 701, 0),
woosh.Token(woosh.INDENT, '                ', 701, 0, 701, 16),
woosh.Token(woosh.NAME, 'filename', 701, 16, 701, 24),
woosh.Token(woosh.OP, '=', 701, 25, 701, 26),
woosh.Token(woosh.NAME, 'os', 701, 27, 701, 29),
woosh.Token(woosh.OP, '.', 701, 29, 701, 30),
woosh.Token(woosh.NAME, 'fspath', 701, 30, 701, 36),
woosh.Token(woosh.OP, '(', 701, 36, 701, 37),
woosh.Token(woosh.NAME, 'filename', 701, 37, 701, 45),
woosh.Token(woosh.OP, ')', 701, 45, 701, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 701, 46, 702, 0),
woosh.Token(woosh.DEDENT, '            ', 702, 0, 702, 12),
woosh.Token(woosh.NAME, 'read_ok', 702, 12, 702, 19),
woosh.Token(woosh.OP, '.', 702, 19, 702, 20),
woosh.Token(woosh.NAME, 'append', 702, 20, 702, 26),
woosh.Token(woosh.OP, '(', 702, 26, 702, 27),
woosh.Token(woosh.NAME, 'filename', 702, 27, 702, 35),
woosh.Token(woosh.OP, ')', 702, 35, 702, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 702, 36, 703, 0),
woosh.Token(woosh.DEDENT, '        ', 703, 0, 703, 8),
woosh.Token(woosh.NAME, 'return', 703, 8, 703, 14),
woosh.Token(woosh.NAME, 'read_ok', 703, 15, 703, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 703, 22, 704, 0),
woosh.Token(woosh.DEDENT, '    ', 705, 0, 705, 4),
woosh.Token(woosh.NAME, 'def', 705, 4, 705, 7),
woosh.Token(woosh.NAME, 'read_file', 705, 8, 705, 17),
woosh.Token(woosh.OP, '(', 705, 17, 705, 18),
woosh.Token(woosh.NAME, 'self', 705, 18, 705, 22),
woosh.Token(woosh.OP, ',', 705, 22, 705, 23),
woosh.Token(woosh.NAME, 'f', 705, 24, 705, 25),
woosh.Token(woosh.OP, ',', 705, 25, 705, 26),
woosh.Token(woosh.NAME, 'source', 705, 27, 705, 33),
woosh.Token(woosh.OP, '=', 705, 33, 705, 34),
woosh.Token(woosh.NAME, 'None', 705, 34, 705, 38),
woosh.Token(woosh.OP, ')', 705, 38, 705, 39),
woosh.Token(woosh.OP, ':', 705, 39, 705, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 705, 40, 706, 0),
woosh.Token(woosh.INDENT, '        ', 706, 0, 706, 8),
woosh.Token(woosh.STRING, '"""Like read() but the argument must be a file-like object.\r\n\r\n        The `f\' argument must be iterable, returning one line at a time.\r\n        Optional second argument is the `source\' specifying the name of the\r\n        file being read. If not given, it is taken from f.name. If `f\' has no\r\n        `name\' attribute, `<???>\' is used.\r\n        """', 706, 8, 712, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 712, 11, 713, 0),
woosh.Token(woosh.NAME, 'if', 713, 8, 713, 10),
woosh.Token(woosh.NAME, 'source', 713, 11, 713, 17),
woosh.Token(woosh.NAME, 'is', 713, 18, 713, 20),
woosh.Token(woosh.NAME, 'None', 713, 21, 713, 25),
woosh.Token(woosh.OP, ':', 713, 25, 713, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 713, 26, 714, 0),
woosh.Token(woosh.INDENT, '            ', 714, 0, 714, 12),
woosh.Token(woosh.NAME, 'try', 714, 12, 714, 15),
woosh.Token(woosh.OP, ':', 714, 15, 714, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 714, 16, 715, 0),
woosh.Token(woosh.INDENT, '                ', 715, 0, 715, 16),
woosh.Token(woosh.NAME, 'source', 715, 16, 715, 22),
woosh.Token(woosh.OP, '=', 715, 23, 715, 24),
woosh.Token(woosh.NAME, 'f', 715, 25, 715, 26),
woosh.Token(woosh.OP, '.', 715, 26, 715, 27),
woosh.Token(woosh.NAME, 'name', 715, 27, 715, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 715, 31, 716, 0),
woosh.Token(woosh.DEDENT, '            ', 716, 0, 716, 12),
woosh.Token(woosh.NAME, 'except', 716, 12, 716, 18),
woosh.Token(woosh.NAME, 'AttributeError', 716, 19, 716, 33),
woosh.Token(woosh.OP, ':', 716, 33, 716, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 716, 34, 717, 0),
woosh.Token(woosh.INDENT, '                ', 717, 0, 717, 16),
woosh.Token(woosh.NAME, 'source', 717, 16, 717, 22),
woosh.Token(woosh.OP, '=', 717, 23, 717, 24),
woosh.Token(woosh.STRING, "'<???>'", 717, 25, 717, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 717, 32, 718, 0),
woosh.Token(woosh.DEDENT, '        ', 718, 0, 718, 8),
woosh.Token(woosh.DEDENT, '', 718, 8, 718, 8),
woosh.Token(woosh.NAME, 'self', 718, 8, 718, 12),
woosh.Token(woosh.OP, '.', 718, 12, 718, 13),
woosh.Token(woosh.NAME, '_read', 718, 13, 718, 18),
woosh.Token(woosh.OP, '(', 718, 18, 718, 19),
woosh.Token(woosh.NAME, 'f', 718, 19, 718, 20),
woosh.Token(woosh.OP, ',', 718, 20, 718, 21),
woosh.Token(woosh.NAME, 'source', 718, 22, 718, 28),
woosh.Token(woosh.OP, ')', 718, 28, 718, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 718, 29, 719, 0),
woosh.Token(woosh.DEDENT, '    ', 720, 0, 720, 4),
woosh.Token(woosh.NAME, 'def', 720, 4, 720, 7),
woosh.Token(woosh.NAME, 'read_string', 720, 8, 720, 19),
woosh.Token(woosh.OP, '(', 720, 19, 720, 20),
woosh.Token(woosh.NAME, 'self', 720, 20, 720, 24),
woosh.Token(woosh.OP, ',', 720, 24, 720, 25),
woosh.Token(woosh.NAME, 'string', 720, 26, 720, 32),
woosh.Token(woosh.OP, ',', 720, 32, 720, 33),
woosh.Token(woosh.NAME, 'source', 720, 34, 720, 40),
woosh.Token(woosh.OP, '=', 720, 40, 720, 41),
woosh.Token(woosh.STRING, "'<string>'", 720, 41, 720, 51),
woosh.Token(woosh.OP, ')', 720, 51, 720, 52),
woosh.Token(woosh.OP, ':', 720, 52, 720, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 720, 53, 721, 0),
woosh.Token(woosh.INDENT, '        ', 721, 0, 721, 8),
woosh.Token(woosh.STRING, '"""Read configuration from a given string."""', 721, 8, 721, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 721, 53, 722, 0),
woosh.Token(woosh.NAME, 'sfile', 722, 8, 722, 13),
woosh.Token(woosh.OP, '=', 722, 14, 722, 15),
woosh.Token(woosh.NAME, 'io', 722, 16, 722, 18),
woosh.Token(woosh.OP, '.', 722, 18, 722, 19),
woosh.Token(woosh.NAME, 'StringIO', 722, 19, 722, 27),
woosh.Token(woosh.OP, '(', 722, 27, 722, 28),
woosh.Token(woosh.NAME, 'string', 722, 28, 722, 34),
woosh.Token(woosh.OP, ')', 722, 34, 722, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 722, 35, 723, 0),
woosh.Token(woosh.NAME, 'self', 723, 8, 723, 12),
woosh.Token(woosh.OP, '.', 723, 12, 723, 13),
woosh.Token(woosh.NAME, 'read_file', 723, 13, 723, 22),
woosh.Token(woosh.OP, '(', 723, 22, 723, 23),
woosh.Token(woosh.NAME, 'sfile', 723, 23, 723, 28),
woosh.Token(woosh.OP, ',', 723, 28, 723, 29),
woosh.Token(woosh.NAME, 'source', 723, 30, 723, 36),
woosh.Token(woosh.OP, ')', 723, 36, 723, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 723, 37, 724, 0),
woosh.Token(woosh.DEDENT, '    ', 725, 0, 725, 4),
woosh.Token(woosh.NAME, 'def', 725, 4, 725, 7),
woosh.Token(woosh.NAME, 'read_dict', 725, 8, 725, 17),
woosh.Token(woosh.OP, '(', 725, 17, 725, 18),
woosh.Token(woosh.NAME, 'self', 725, 18, 725, 22),
woosh.Token(woosh.OP, ',', 725, 22, 725, 23),
woosh.Token(woosh.NAME, 'dictionary', 725, 24, 725, 34),
woosh.Token(woosh.OP, ',', 725, 34, 725, 35),
woosh.Token(woosh.NAME, 'source', 725, 36, 725, 42),
woosh.Token(woosh.OP, '=', 725, 42, 725, 43),
woosh.Token(woosh.STRING, "'<dict>'", 725, 43, 725, 51),
woosh.Token(woosh.OP, ')', 725, 51, 725, 52),
woosh.Token(woosh.OP, ':', 725, 52, 725, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 725, 53, 726, 0),
woosh.Token(woosh.INDENT, '        ', 726, 0, 726, 8),
woosh.Token(woosh.STRING, '"""Read configuration from a dictionary.\r\n\r\n        Keys are section names, values are dictionaries with keys and values\r\n        that should be present in the section. If the used dictionary type\r\n        preserves order, sections and their keys will be added in order.\r\n\r\n        All types held in the dictionary are converted to strings during\r\n        reading, including section names, option names and keys.\r\n\r\n        Optional second argument is the `source\' specifying the name of the\r\n        dictionary being read.\r\n        """', 726, 8, 737, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 737, 11, 738, 0),
woosh.Token(woosh.NAME, 'elements_added', 738, 8, 738, 22),
woosh.Token(woosh.OP, '=', 738, 23, 738, 24),
woosh.Token(woosh.NAME, 'set', 738, 25, 738, 28),
woosh.Token(woosh.OP, '(', 738, 28, 738, 29),
woosh.Token(woosh.OP, ')', 738, 29, 738, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 738, 30, 739, 0),
woosh.Token(woosh.NAME, 'for', 739, 8, 739, 11),
woosh.Token(woosh.NAME, 'section', 739, 12, 739, 19),
woosh.Token(woosh.OP, ',', 739, 19, 739, 20),
woosh.Token(woosh.NAME, 'keys', 739, 21, 739, 25),
woosh.Token(woosh.NAME, 'in', 739, 26, 739, 28),
woosh.Token(woosh.NAME, 'dictionary', 739, 29, 739, 39),
woosh.Token(woosh.OP, '.', 739, 39, 739, 40),
woosh.Token(woosh.NAME, 'items', 739, 40, 739, 45),
woosh.Token(woosh.OP, '(', 739, 45, 739, 46),
woosh.Token(woosh.OP, ')', 739, 46, 739, 47),
woosh.Token(woosh.OP, ':', 739, 47, 739, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 739, 48, 740, 0),
woosh.Token(woosh.INDENT, '            ', 740, 0, 740, 12),
woosh.Token(woosh.NAME, 'section', 740, 12, 740, 19),
woosh.Token(woosh.OP, '=', 740, 20, 740, 21),
woosh.Token(woosh.NAME, 'str', 740, 22, 740, 25),
woosh.Token(woosh.OP, '(', 740, 25, 740, 26),
woosh.Token(woosh.NAME, 'section', 740, 26, 740, 33),
woosh.Token(woosh.OP, ')', 740, 33, 740, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 740, 34, 741, 0),
woosh.Token(woosh.NAME, 'try', 741, 12, 741, 15),
woosh.Token(woosh.OP, ':', 741, 15, 741, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 741, 16, 742, 0),
woosh.Token(woosh.INDENT, '                ', 742, 0, 742, 16),
woosh.Token(woosh.NAME, 'self', 742, 16, 742, 20),
woosh.Token(woosh.OP, '.', 742, 20, 742, 21),
woosh.Token(woosh.NAME, 'add_section', 742, 21, 742, 32),
woosh.Token(woosh.OP, '(', 742, 32, 742, 33),
woosh.Token(woosh.NAME, 'section', 742, 33, 742, 40),
woosh.Token(woosh.OP, ')', 742, 40, 742, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 742, 41, 743, 0),
woosh.Token(woosh.DEDENT, '            ', 743, 0, 743, 12),
woosh.Token(woosh.NAME, 'except', 743, 12, 743, 18),
woosh.Token(woosh.OP, '(', 743, 19, 743, 20),
woosh.Token(woosh.NAME, 'DuplicateSectionError', 743, 20, 743, 41),
woosh.Token(woosh.OP, ',', 743, 41, 743, 42),
woosh.Token(woosh.NAME, 'ValueError', 743, 43, 743, 53),
woosh.Token(woosh.OP, ')', 743, 53, 743, 54),
woosh.Token(woosh.OP, ':', 743, 54, 743, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 743, 55, 744, 0),
woosh.Token(woosh.INDENT, '                ', 744, 0, 744, 16),
woosh.Token(woosh.NAME, 'if', 744, 16, 744, 18),
woosh.Token(woosh.NAME, 'self', 744, 19, 744, 23),
woosh.Token(woosh.OP, '.', 744, 23, 744, 24),
woosh.Token(woosh.NAME, '_strict', 744, 24, 744, 31),
woosh.Token(woosh.NAME, 'and', 744, 32, 744, 35),
woosh.Token(woosh.NAME, 'section', 744, 36, 744, 43),
woosh.Token(woosh.NAME, 'in', 744, 44, 744, 46),
woosh.Token(woosh.NAME, 'elements_added', 744, 47, 744, 61),
woosh.Token(woosh.OP, ':', 744, 61, 744, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 744, 62, 745, 0),
woosh.Token(woosh.INDENT, '                    ', 745, 0, 745, 20),
woosh.Token(woosh.NAME, 'raise', 745, 20, 745, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 745, 25, 746, 0),
woosh.Token(woosh.DEDENT, '            ', 746, 0, 746, 12),
woosh.Token(woosh.DEDENT, '', 746, 12, 746, 12),
woosh.Token(woosh.NAME, 'elements_added', 746, 12, 746, 26),
woosh.Token(woosh.OP, '.', 746, 26, 746, 27),
woosh.Token(woosh.NAME, 'add', 746, 27, 746, 30),
woosh.Token(woosh.OP, '(', 746, 30, 746, 31),
woosh.Token(woosh.NAME, 'section', 746, 31, 746, 38),
woosh.Token(woosh.OP, ')', 746, 38, 746, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 746, 39, 747, 0),
woosh.Token(woosh.NAME, 'for', 747, 12, 747, 15),
woosh.Token(woosh.NAME, 'key', 747, 16, 747, 19),
woosh.Token(woosh.OP, ',', 747, 19, 747, 20),
woosh.Token(woosh.NAME, 'value', 747, 21, 747, 26),
woosh.Token(woosh.NAME, 'in', 747, 27, 747, 29),
woosh.Token(woosh.NAME, 'keys', 747, 30, 747, 34),
woosh.Token(woosh.OP, '.', 747, 34, 747, 35),
woosh.Token(woosh.NAME, 'items', 747, 35, 747, 40),
woosh.Token(woosh.OP, '(', 747, 40, 747, 41),
woosh.Token(woosh.OP, ')', 747, 41, 747, 42),
woosh.Token(woosh.OP, ':', 747, 42, 747, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 747, 43, 748, 0),
woosh.Token(woosh.INDENT, '                ', 748, 0, 748, 16),
woosh.Token(woosh.NAME, 'key', 748, 16, 748, 19),
woosh.Token(woosh.OP, '=', 748, 20, 748, 21),
woosh.Token(woosh.NAME, 'self', 748, 22, 748, 26),
woosh.Token(woosh.OP, '.', 748, 26, 748, 27),
woosh.Token(woosh.NAME, 'optionxform', 748, 27, 748, 38),
woosh.Token(woosh.OP, '(', 748, 38, 748, 39),
woosh.Token(woosh.NAME, 'str', 748, 39, 748, 42),
woosh.Token(woosh.OP, '(', 748, 42, 748, 43),
woosh.Token(woosh.NAME, 'key', 748, 43, 748, 46),
woosh.Token(woosh.OP, ')', 748, 46, 748, 47),
woosh.Token(woosh.OP, ')', 748, 47, 748, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 748, 48, 749, 0),
woosh.Token(woosh.NAME, 'if', 749, 16, 749, 18),
woosh.Token(woosh.NAME, 'value', 749, 19, 749, 24),
woosh.Token(woosh.NAME, 'is', 749, 25, 749, 27),
woosh.Token(woosh.NAME, 'not', 749, 28, 749, 31),
woosh.Token(woosh.NAME, 'None', 749, 32, 749, 36),
woosh.Token(woosh.OP, ':', 749, 36, 749, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 749, 37, 750, 0),
woosh.Token(woosh.INDENT, '                    ', 750, 0, 750, 20),
woosh.Token(woosh.NAME, 'value', 750, 20, 750, 25),
woosh.Token(woosh.OP, '=', 750, 26, 750, 27),
woosh.Token(woosh.NAME, 'str', 750, 28, 750, 31),
woosh.Token(woosh.OP, '(', 750, 31, 750, 32),
woosh.Token(woosh.NAME, 'value', 750, 32, 750, 37),
woosh.Token(woosh.OP, ')', 750, 37, 750, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 750, 38, 751, 0),
woosh.Token(woosh.DEDENT, '                ', 751, 0, 751, 16),
woosh.Token(woosh.NAME, 'if', 751, 16, 751, 18),
woosh.Token(woosh.NAME, 'self', 751, 19, 751, 23),
woosh.Token(woosh.OP, '.', 751, 23, 751, 24),
woosh.Token(woosh.NAME, '_strict', 751, 24, 751, 31),
woosh.Token(woosh.NAME, 'and', 751, 32, 751, 35),
woosh.Token(woosh.OP, '(', 751, 36, 751, 37),
woosh.Token(woosh.NAME, 'section', 751, 37, 751, 44),
woosh.Token(woosh.OP, ',', 751, 44, 751, 45),
woosh.Token(woosh.NAME, 'key', 751, 46, 751, 49),
woosh.Token(woosh.OP, ')', 751, 49, 751, 50),
woosh.Token(woosh.NAME, 'in', 751, 51, 751, 53),
woosh.Token(woosh.NAME, 'elements_added', 751, 54, 751, 68),
woosh.Token(woosh.OP, ':', 751, 68, 751, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 751, 69, 752, 0),
woosh.Token(woosh.INDENT, '                    ', 752, 0, 752, 20),
woosh.Token(woosh.NAME, 'raise', 752, 20, 752, 25),
woosh.Token(woosh.NAME, 'DuplicateOptionError', 752, 26, 752, 46),
woosh.Token(woosh.OP, '(', 752, 46, 752, 47),
woosh.Token(woosh.NAME, 'section', 752, 47, 752, 54),
woosh.Token(woosh.OP, ',', 752, 54, 752, 55),
woosh.Token(woosh.NAME, 'key', 752, 56, 752, 59),
woosh.Token(woosh.OP, ',', 752, 59, 752, 60),
woosh.Token(woosh.NAME, 'source', 752, 61, 752, 67),
woosh.Token(woosh.OP, ')', 752, 67, 752, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 752, 68, 753, 0),
woosh.Token(woosh.DEDENT, '                ', 753, 0, 753, 16),
woosh.Token(woosh.NAME, 'elements_added', 753, 16, 753, 30),
woosh.Token(woosh.OP, '.', 753, 30, 753, 31),
woosh.Token(woosh.NAME, 'add', 753, 31, 753, 34),
woosh.Token(woosh.OP, '(', 753, 34, 753, 35),
woosh.Token(woosh.OP, '(', 753, 35, 753, 36),
woosh.Token(woosh.NAME, 'section', 753, 36, 753, 43),
woosh.Token(woosh.OP, ',', 753, 43, 753, 44),
woosh.Token(woosh.NAME, 'key', 753, 45, 753, 48),
woosh.Token(woosh.OP, ')', 753, 48, 753, 49),
woosh.Token(woosh.OP, ')', 753, 49, 753, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 753, 50, 754, 0),
woosh.Token(woosh.NAME, 'self', 754, 16, 754, 20),
woosh.Token(woosh.OP, '.', 754, 20, 754, 21),
woosh.Token(woosh.NAME, 'set', 754, 21, 754, 24),
woosh.Token(woosh.OP, '(', 754, 24, 754, 25),
woosh.Token(woosh.NAME, 'section', 754, 25, 754, 32),
woosh.Token(woosh.OP, ',', 754, 32, 754, 33),
woosh.Token(woosh.NAME, 'key', 754, 34, 754, 37),
woosh.Token(woosh.OP, ',', 754, 37, 754, 38),
woosh.Token(woosh.NAME, 'value', 754, 39, 754, 44),
woosh.Token(woosh.OP, ')', 754, 44, 754, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 754, 45, 755, 0),
woosh.Token(woosh.DEDENT, '    ', 756, 0, 756, 4),
woosh.Token(woosh.DEDENT, '', 756, 4, 756, 4),
woosh.Token(woosh.DEDENT, '', 756, 4, 756, 4),
woosh.Token(woosh.NAME, 'def', 756, 4, 756, 7),
woosh.Token(woosh.NAME, 'readfp', 756, 8, 756, 14),
woosh.Token(woosh.OP, '(', 756, 14, 756, 15),
woosh.Token(woosh.NAME, 'self', 756, 15, 756, 19),
woosh.Token(woosh.OP, ',', 756, 19, 756, 20),
woosh.Token(woosh.NAME, 'fp', 756, 21, 756, 23),
woosh.Token(woosh.OP, ',', 756, 23, 756, 24),
woosh.Token(woosh.NAME, 'filename', 756, 25, 756, 33),
woosh.Token(woosh.OP, '=', 756, 33, 756, 34),
woosh.Token(woosh.NAME, 'None', 756, 34, 756, 38),
woosh.Token(woosh.OP, ')', 756, 38, 756, 39),
woosh.Token(woosh.OP, ':', 756, 39, 756, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 756, 40, 757, 0),
woosh.Token(woosh.INDENT, '        ', 757, 0, 757, 8),
woosh.Token(woosh.STRING, '"""Deprecated, use read_file instead."""', 757, 8, 757, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 757, 48, 758, 0),
woosh.Token(woosh.NAME, 'warnings', 758, 8, 758, 16),
woosh.Token(woosh.OP, '.', 758, 16, 758, 17),
woosh.Token(woosh.NAME, 'warn', 758, 17, 758, 21),
woosh.Token(woosh.OP, '(', 758, 21, 758, 22),
woosh.Token(woosh.STRING, '"This method will be removed in future versions.  "', 759, 12, 759, 63),
woosh.Token(woosh.STRING, '"Use \'parser.read_file()\' instead."', 760, 12, 760, 47),
woosh.Token(woosh.OP, ',', 760, 47, 760, 48),
woosh.Token(woosh.NAME, 'DeprecationWarning', 761, 12, 761, 30),
woosh.Token(woosh.OP, ',', 761, 30, 761, 31),
woosh.Token(woosh.NAME, 'stacklevel', 761, 32, 761, 42),
woosh.Token(woosh.OP, '=', 761, 42, 761, 43),
woosh.Token(woosh.NUMBER, '2', 761, 43, 761, 44),
woosh.Token(woosh.OP, ')', 762, 8, 762, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 762, 9, 763, 0),
woosh.Token(woosh.NAME, 'self', 763, 8, 763, 12),
woosh.Token(woosh.OP, '.', 763, 12, 763, 13),
woosh.Token(woosh.NAME, 'read_file', 763, 13, 763, 22),
woosh.Token(woosh.OP, '(', 763, 22, 763, 23),
woosh.Token(woosh.NAME, 'fp', 763, 23, 763, 25),
woosh.Token(woosh.OP, ',', 763, 25, 763, 26),
woosh.Token(woosh.NAME, 'source', 763, 27, 763, 33),
woosh.Token(woosh.OP, '=', 763, 33, 763, 34),
woosh.Token(woosh.NAME, 'filename', 763, 34, 763, 42),
woosh.Token(woosh.OP, ')', 763, 42, 763, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 763, 43, 764, 0),
woosh.Token(woosh.DEDENT, '    ', 765, 0, 765, 4),
woosh.Token(woosh.NAME, 'def', 765, 4, 765, 7),
woosh.Token(woosh.NAME, 'get', 765, 8, 765, 11),
woosh.Token(woosh.OP, '(', 765, 11, 765, 12),
woosh.Token(woosh.NAME, 'self', 765, 12, 765, 16),
woosh.Token(woosh.OP, ',', 765, 16, 765, 17),
woosh.Token(woosh.NAME, 'section', 765, 18, 765, 25),
woosh.Token(woosh.OP, ',', 765, 25, 765, 26),
woosh.Token(woosh.NAME, 'option', 765, 27, 765, 33),
woosh.Token(woosh.OP, ',', 765, 33, 765, 34),
woosh.Token(woosh.OP, '*', 765, 35, 765, 36),
woosh.Token(woosh.OP, ',', 765, 36, 765, 37),
woosh.Token(woosh.NAME, 'raw', 765, 38, 765, 41),
woosh.Token(woosh.OP, '=', 765, 41, 765, 42),
woosh.Token(woosh.NAME, 'False', 765, 42, 765, 47),
woosh.Token(woosh.OP, ',', 765, 47, 765, 48),
woosh.Token(woosh.NAME, 'vars', 765, 49, 765, 53),
woosh.Token(woosh.OP, '=', 765, 53, 765, 54),
woosh.Token(woosh.NAME, 'None', 765, 54, 765, 58),
woosh.Token(woosh.OP, ',', 765, 58, 765, 59),
woosh.Token(woosh.NAME, 'fallback', 765, 60, 765, 68),
woosh.Token(woosh.OP, '=', 765, 68, 765, 69),
woosh.Token(woosh.NAME, '_UNSET', 765, 69, 765, 75),
woosh.Token(woosh.OP, ')', 765, 75, 765, 76),
woosh.Token(woosh.OP, ':', 765, 76, 765, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 765, 77, 766, 0),
woosh.Token(woosh.INDENT, '        ', 766, 0, 766, 8),
woosh.Token(woosh.STRING, '"""Get an option value for a given section.\r\n\r\n        If `vars\' is provided, it must be a dictionary. The option is looked up\r\n        in `vars\' (if provided), `section\', and in `DEFAULTSECT\' in that order.\r\n        If the key is not found and `fallback\' is provided, it is used as\r\n        a fallback value. `None\' can be provided as a `fallback\' value.\r\n\r\n        If interpolation is enabled and the optional argument `raw\' is False,\r\n        all interpolations are expanded in the return values.\r\n\r\n        Arguments `raw\', `vars\', and `fallback\' are keyword only.\r\n\r\n        The section DEFAULT is special.\r\n        """', 766, 8, 779, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 779, 11, 780, 0),
woosh.Token(woosh.NAME, 'try', 780, 8, 780, 11),
woosh.Token(woosh.OP, ':', 780, 11, 780, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 780, 12, 781, 0),
woosh.Token(woosh.INDENT, '            ', 781, 0, 781, 12),
woosh.Token(woosh.NAME, 'd', 781, 12, 781, 13),
woosh.Token(woosh.OP, '=', 781, 14, 781, 15),
woosh.Token(woosh.NAME, 'self', 781, 16, 781, 20),
woosh.Token(woosh.OP, '.', 781, 20, 781, 21),
woosh.Token(woosh.NAME, '_unify_values', 781, 21, 781, 34),
woosh.Token(woosh.OP, '(', 781, 34, 781, 35),
woosh.Token(woosh.NAME, 'section', 781, 35, 781, 42),
woosh.Token(woosh.OP, ',', 781, 42, 781, 43),
woosh.Token(woosh.NAME, 'vars', 781, 44, 781, 48),
woosh.Token(woosh.OP, ')', 781, 48, 781, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 781, 49, 782, 0),
woosh.Token(woosh.DEDENT, '        ', 782, 0, 782, 8),
woosh.Token(woosh.NAME, 'except', 782, 8, 782, 14),
woosh.Token(woosh.NAME, 'NoSectionError', 782, 15, 782, 29),
woosh.Token(woosh.OP, ':', 782, 29, 782, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 782, 30, 783, 0),
woosh.Token(woosh.INDENT, '            ', 783, 0, 783, 12),
woosh.Token(woosh.NAME, 'if', 783, 12, 783, 14),
woosh.Token(woosh.NAME, 'fallback', 783, 15, 783, 23),
woosh.Token(woosh.NAME, 'is', 783, 24, 783, 26),
woosh.Token(woosh.NAME, '_UNSET', 783, 27, 783, 33),
woosh.Token(woosh.OP, ':', 783, 33, 783, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 783, 34, 784, 0),
woosh.Token(woosh.INDENT, '                ', 784, 0, 784, 16),
woosh.Token(woosh.NAME, 'raise', 784, 16, 784, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 784, 21, 785, 0),
woosh.Token(woosh.DEDENT, '            ', 785, 0, 785, 12),
woosh.Token(woosh.NAME, 'else', 785, 12, 785, 16),
woosh.Token(woosh.OP, ':', 785, 16, 785, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 785, 17, 786, 0),
woosh.Token(woosh.INDENT, '                ', 786, 0, 786, 16),
woosh.Token(woosh.NAME, 'return', 786, 16, 786, 22),
woosh.Token(woosh.NAME, 'fallback', 786, 23, 786, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 786, 31, 787, 0),
woosh.Token(woosh.DEDENT, '        ', 787, 0, 787, 8),
woosh.Token(woosh.DEDENT, '', 787, 8, 787, 8),
woosh.Token(woosh.NAME, 'option', 787, 8, 787, 14),
woosh.Token(woosh.OP, '=', 787, 15, 787, 16),
woosh.Token(woosh.NAME, 'self', 787, 17, 787, 21),
woosh.Token(woosh.OP, '.', 787, 21, 787, 22),
woosh.Token(woosh.NAME, 'optionxform', 787, 22, 787, 33),
woosh.Token(woosh.OP, '(', 787, 33, 787, 34),
woosh.Token(woosh.NAME, 'option', 787, 34, 787, 40),
woosh.Token(woosh.OP, ')', 787, 40, 787, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 787, 41, 788, 0),
woosh.Token(woosh.NAME, 'try', 788, 8, 788, 11),
woosh.Token(woosh.OP, ':', 788, 11, 788, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 788, 12, 789, 0),
woosh.Token(woosh.INDENT, '            ', 789, 0, 789, 12),
woosh.Token(woosh.NAME, 'value', 789, 12, 789, 17),
woosh.Token(woosh.OP, '=', 789, 18, 789, 19),
woosh.Token(woosh.NAME, 'd', 789, 20, 789, 21),
woosh.Token(woosh.OP, '[', 789, 21, 789, 22),
woosh.Token(woosh.NAME, 'option', 789, 22, 789, 28),
woosh.Token(woosh.OP, ']', 789, 28, 789, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 789, 29, 790, 0),
woosh.Token(woosh.DEDENT, '        ', 790, 0, 790, 8),
woosh.Token(woosh.NAME, 'except', 790, 8, 790, 14),
woosh.Token(woosh.NAME, 'KeyError', 790, 15, 790, 23),
woosh.Token(woosh.OP, ':', 790, 23, 790, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 790, 24, 791, 0),
woosh.Token(woosh.INDENT, '            ', 791, 0, 791, 12),
woosh.Token(woosh.NAME, 'if', 791, 12, 791, 14),
woosh.Token(woosh.NAME, 'fallback', 791, 15, 791, 23),
woosh.Token(woosh.NAME, 'is', 791, 24, 791, 26),
woosh.Token(woosh.NAME, '_UNSET', 791, 27, 791, 33),
woosh.Token(woosh.OP, ':', 791, 33, 791, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 791, 34, 792, 0),
woosh.Token(woosh.INDENT, '                ', 792, 0, 792, 16),
woosh.Token(woosh.NAME, 'raise', 792, 16, 792, 21),
woosh.Token(woosh.NAME, 'NoOptionError', 792, 22, 792, 35),
woosh.Token(woosh.OP, '(', 792, 35, 792, 36),
woosh.Token(woosh.NAME, 'option', 792, 36, 792, 42),
woosh.Token(woosh.OP, ',', 792, 42, 792, 43),
woosh.Token(woosh.NAME, 'section', 792, 44, 792, 51),
woosh.Token(woosh.OP, ')', 792, 51, 792, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 792, 52, 793, 0),
woosh.Token(woosh.DEDENT, '            ', 793, 0, 793, 12),
woosh.Token(woosh.NAME, 'else', 793, 12, 793, 16),
woosh.Token(woosh.OP, ':', 793, 16, 793, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 793, 17, 794, 0),
woosh.Token(woosh.INDENT, '                ', 794, 0, 794, 16),
woosh.Token(woosh.NAME, 'return', 794, 16, 794, 22),
woosh.Token(woosh.NAME, 'fallback', 794, 23, 794, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 794, 31, 795, 0),
woosh.Token(woosh.DEDENT, '        ', 796, 0, 796, 8),
woosh.Token(woosh.DEDENT, '', 796, 8, 796, 8),
woosh.Token(woosh.NAME, 'if', 796, 8, 796, 10),
woosh.Token(woosh.NAME, 'raw', 796, 11, 796, 14),
woosh.Token(woosh.NAME, 'or', 796, 15, 796, 17),
woosh.Token(woosh.NAME, 'value', 796, 18, 796, 23),
woosh.Token(woosh.NAME, 'is', 796, 24, 796, 26),
woosh.Token(woosh.NAME, 'None', 796, 27, 796, 31),
woosh.Token(woosh.OP, ':', 796, 31, 796, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 796, 32, 797, 0),
woosh.Token(woosh.INDENT, '            ', 797, 0, 797, 12),
woosh.Token(woosh.NAME, 'return', 797, 12, 797, 18),
woosh.Token(woosh.NAME, 'value', 797, 19, 797, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 797, 24, 798, 0),
woosh.Token(woosh.DEDENT, '        ', 798, 0, 798, 8),
woosh.Token(woosh.NAME, 'else', 798, 8, 798, 12),
woosh.Token(woosh.OP, ':', 798, 12, 798, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 798, 13, 799, 0),
woosh.Token(woosh.INDENT, '            ', 799, 0, 799, 12),
woosh.Token(woosh.NAME, 'return', 799, 12, 799, 18),
woosh.Token(woosh.NAME, 'self', 799, 19, 799, 23),
woosh.Token(woosh.OP, '.', 799, 23, 799, 24),
woosh.Token(woosh.NAME, '_interpolation', 799, 24, 799, 38),
woosh.Token(woosh.OP, '.', 799, 38, 799, 39),
woosh.Token(woosh.NAME, 'before_get', 799, 39, 799, 49),
woosh.Token(woosh.OP, '(', 799, 49, 799, 50),
woosh.Token(woosh.NAME, 'self', 799, 50, 799, 54),
woosh.Token(woosh.OP, ',', 799, 54, 799, 55),
woosh.Token(woosh.NAME, 'section', 799, 56, 799, 63),
woosh.Token(woosh.OP, ',', 799, 63, 799, 64),
woosh.Token(woosh.NAME, 'option', 799, 65, 799, 71),
woosh.Token(woosh.OP, ',', 799, 71, 799, 72),
woosh.Token(woosh.NAME, 'value', 799, 73, 799, 78),
woosh.Token(woosh.OP, ',', 799, 78, 799, 79),
woosh.Token(woosh.NAME, 'd', 800, 50, 800, 51),
woosh.Token(woosh.OP, ')', 800, 51, 800, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 800, 52, 801, 0),
woosh.Token(woosh.DEDENT, '    ', 802, 0, 802, 4),
woosh.Token(woosh.DEDENT, '', 802, 4, 802, 4),
woosh.Token(woosh.NAME, 'def', 802, 4, 802, 7),
woosh.Token(woosh.NAME, '_get', 802, 8, 802, 12),
woosh.Token(woosh.OP, '(', 802, 12, 802, 13),
woosh.Token(woosh.NAME, 'self', 802, 13, 802, 17),
woosh.Token(woosh.OP, ',', 802, 17, 802, 18),
woosh.Token(woosh.NAME, 'section', 802, 19, 802, 26),
woosh.Token(woosh.OP, ',', 802, 26, 802, 27),
woosh.Token(woosh.NAME, 'conv', 802, 28, 802, 32),
woosh.Token(woosh.OP, ',', 802, 32, 802, 33),
woosh.Token(woosh.NAME, 'option', 802, 34, 802, 40),
woosh.Token(woosh.OP, ',', 802, 40, 802, 41),
woosh.Token(woosh.OP, '**', 802, 42, 802, 44),
woosh.Token(woosh.NAME, 'kwargs', 802, 44, 802, 50),
woosh.Token(woosh.OP, ')', 802, 50, 802, 51),
woosh.Token(woosh.OP, ':', 802, 51, 802, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 802, 52, 803, 0),
woosh.Token(woosh.INDENT, '        ', 803, 0, 803, 8),
woosh.Token(woosh.NAME, 'return', 803, 8, 803, 14),
woosh.Token(woosh.NAME, 'conv', 803, 15, 803, 19),
woosh.Token(woosh.OP, '(', 803, 19, 803, 20),
woosh.Token(woosh.NAME, 'self', 803, 20, 803, 24),
woosh.Token(woosh.OP, '.', 803, 24, 803, 25),
woosh.Token(woosh.NAME, 'get', 803, 25, 803, 28),
woosh.Token(woosh.OP, '(', 803, 28, 803, 29),
woosh.Token(woosh.NAME, 'section', 803, 29, 803, 36),
woosh.Token(woosh.OP, ',', 803, 36, 803, 37),
woosh.Token(woosh.NAME, 'option', 803, 38, 803, 44),
woosh.Token(woosh.OP, ',', 803, 44, 803, 45),
woosh.Token(woosh.OP, '**', 803, 46, 803, 48),
woosh.Token(woosh.NAME, 'kwargs', 803, 48, 803, 54),
woosh.Token(woosh.OP, ')', 803, 54, 803, 55),
woosh.Token(woosh.OP, ')', 803, 55, 803, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 803, 56, 804, 0),
woosh.Token(woosh.DEDENT, '    ', 805, 0, 805, 4),
woosh.Token(woosh.NAME, 'def', 805, 4, 805, 7),
woosh.Token(woosh.NAME, '_get_conv', 805, 8, 805, 17),
woosh.Token(woosh.OP, '(', 805, 17, 805, 18),
woosh.Token(woosh.NAME, 'self', 805, 18, 805, 22),
woosh.Token(woosh.OP, ',', 805, 22, 805, 23),
woosh.Token(woosh.NAME, 'section', 805, 24, 805, 31),
woosh.Token(woosh.OP, ',', 805, 31, 805, 32),
woosh.Token(woosh.NAME, 'option', 805, 33, 805, 39),
woosh.Token(woosh.OP, ',', 805, 39, 805, 40),
woosh.Token(woosh.NAME, 'conv', 805, 41, 805, 45),
woosh.Token(woosh.OP, ',', 805, 45, 805, 46),
woosh.Token(woosh.OP, '*', 805, 47, 805, 48),
woosh.Token(woosh.OP, ',', 805, 48, 805, 49),
woosh.Token(woosh.NAME, 'raw', 805, 50, 805, 53),
woosh.Token(woosh.OP, '=', 805, 53, 805, 54),
woosh.Token(woosh.NAME, 'False', 805, 54, 805, 59),
woosh.Token(woosh.OP, ',', 805, 59, 805, 60),
woosh.Token(woosh.NAME, 'vars', 805, 61, 805, 65),
woosh.Token(woosh.OP, '=', 805, 65, 805, 66),
woosh.Token(woosh.NAME, 'None', 805, 66, 805, 70),
woosh.Token(woosh.OP, ',', 805, 70, 805, 71),
woosh.Token(woosh.NAME, 'fallback', 806, 18, 806, 26),
woosh.Token(woosh.OP, '=', 806, 26, 806, 27),
woosh.Token(woosh.NAME, '_UNSET', 806, 27, 806, 33),
woosh.Token(woosh.OP, ',', 806, 33, 806, 34),
woosh.Token(woosh.OP, '**', 806, 35, 806, 37),
woosh.Token(woosh.NAME, 'kwargs', 806, 37, 806, 43),
woosh.Token(woosh.OP, ')', 806, 43, 806, 44),
woosh.Token(woosh.OP, ':', 806, 44, 806, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 806, 45, 807, 0),
woosh.Token(woosh.INDENT, '        ', 807, 0, 807, 8),
woosh.Token(woosh.NAME, 'try', 807, 8, 807, 11),
woosh.Token(woosh.OP, ':', 807, 11, 807, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 807, 12, 808, 0),
woosh.Token(woosh.INDENT, '            ', 808, 0, 808, 12),
woosh.Token(woosh.NAME, 'return', 808, 12, 808, 18),
woosh.Token(woosh.NAME, 'self', 808, 19, 808, 23),
woosh.Token(woosh.OP, '.', 808, 23, 808, 24),
woosh.Token(woosh.NAME, '_get', 808, 24, 808, 28),
woosh.Token(woosh.OP, '(', 808, 28, 808, 29),
woosh.Token(woosh.NAME, 'section', 808, 29, 808, 36),
woosh.Token(woosh.OP, ',', 808, 36, 808, 37),
woosh.Token(woosh.NAME, 'conv', 808, 38, 808, 42),
woosh.Token(woosh.OP, ',', 808, 42, 808, 43),
woosh.Token(woosh.NAME, 'option', 808, 44, 808, 50),
woosh.Token(woosh.OP, ',', 808, 50, 808, 51),
woosh.Token(woosh.NAME, 'raw', 808, 52, 808, 55),
woosh.Token(woosh.OP, '=', 808, 55, 808, 56),
woosh.Token(woosh.NAME, 'raw', 808, 56, 808, 59),
woosh.Token(woosh.OP, ',', 808, 59, 808, 60),
woosh.Token(woosh.NAME, 'vars', 808, 61, 808, 65),
woosh.Token(woosh.OP, '=', 808, 65, 808, 66),
woosh.Token(woosh.NAME, 'vars', 808, 66, 808, 70),
woosh.Token(woosh.OP, ',', 808, 70, 808, 71),
woosh.Token(woosh.OP, '**', 809, 29, 809, 31),
woosh.Token(woosh.NAME, 'kwargs', 809, 31, 809, 37),
woosh.Token(woosh.OP, ')', 809, 37, 809, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 809, 38, 810, 0),
woosh.Token(woosh.DEDENT, '        ', 810, 0, 810, 8),
woosh.Token(woosh.NAME, 'except', 810, 8, 810, 14),
woosh.Token(woosh.OP, '(', 810, 15, 810, 16),
woosh.Token(woosh.NAME, 'NoSectionError', 810, 16, 810, 30),
woosh.Token(woosh.OP, ',', 810, 30, 810, 31),
woosh.Token(woosh.NAME, 'NoOptionError', 810, 32, 810, 45),
woosh.Token(woosh.OP, ')', 810, 45, 810, 46),
woosh.Token(woosh.OP, ':', 810, 46, 810, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 810, 47, 811, 0),
woosh.Token(woosh.INDENT, '            ', 811, 0, 811, 12),
woosh.Token(woosh.NAME, 'if', 811, 12, 811, 14),
woosh.Token(woosh.NAME, 'fallback', 811, 15, 811, 23),
woosh.Token(woosh.NAME, 'is', 811, 24, 811, 26),
woosh.Token(woosh.NAME, '_UNSET', 811, 27, 811, 33),
woosh.Token(woosh.OP, ':', 811, 33, 811, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 811, 34, 812, 0),
woosh.Token(woosh.INDENT, '                ', 812, 0, 812, 16),
woosh.Token(woosh.NAME, 'raise', 812, 16, 812, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 812, 21, 813, 0),
woosh.Token(woosh.DEDENT, '            ', 813, 0, 813, 12),
woosh.Token(woosh.NAME, 'return', 813, 12, 813, 18),
woosh.Token(woosh.NAME, 'fallback', 813, 19, 813, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 813, 27, 814, 0),
woosh.Token(woosh.COMMENT, '# getint, getfloat and getboolean provided directly for backwards compat', 815, 4, 815, 76),
woosh.Token(woosh.DEDENT, '    ', 816, 0, 816, 4),
woosh.Token(woosh.DEDENT, '', 816, 4, 816, 4),
woosh.Token(woosh.NAME, 'def', 816, 4, 816, 7),
woosh.Token(woosh.NAME, 'getint', 816, 8, 816, 14),
woosh.Token(woosh.OP, '(', 816, 14, 816, 15),
woosh.Token(woosh.NAME, 'self', 816, 15, 816, 19),
woosh.Token(woosh.OP, ',', 816, 19, 816, 20),
woosh.Token(woosh.NAME, 'section', 816, 21, 816, 28),
woosh.Token(woosh.OP, ',', 816, 28, 816, 29),
woosh.Token(woosh.NAME, 'option', 816, 30, 816, 36),
woosh.Token(woosh.OP, ',', 816, 36, 816, 37),
woosh.Token(woosh.OP, '*', 816, 38, 816, 39),
woosh.Token(woosh.OP, ',', 816, 39, 816, 40),
woosh.Token(woosh.NAME, 'raw', 816, 41, 816, 44),
woosh.Token(woosh.OP, '=', 816, 44, 816, 45),
woosh.Token(woosh.NAME, 'False', 816, 45, 816, 50),
woosh.Token(woosh.OP, ',', 816, 50, 816, 51),
woosh.Token(woosh.NAME, 'vars', 816, 52, 816, 56),
woosh.Token(woosh.OP, '=', 816, 56, 816, 57),
woosh.Token(woosh.NAME, 'None', 816, 57, 816, 61),
woosh.Token(woosh.OP, ',', 816, 61, 816, 62),
woosh.Token(woosh.NAME, 'fallback', 817, 15, 817, 23),
woosh.Token(woosh.OP, '=', 817, 23, 817, 24),
woosh.Token(woosh.NAME, '_UNSET', 817, 24, 817, 30),
woosh.Token(woosh.OP, ',', 817, 30, 817, 31),
woosh.Token(woosh.OP, '**', 817, 32, 817, 34),
woosh.Token(woosh.NAME, 'kwargs', 817, 34, 817, 40),
woosh.Token(woosh.OP, ')', 817, 40, 817, 41),
woosh.Token(woosh.OP, ':', 817, 41, 817, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 817, 42, 818, 0),
woosh.Token(woosh.INDENT, '        ', 818, 0, 818, 8),
woosh.Token(woosh.NAME, 'return', 818, 8, 818, 14),
woosh.Token(woosh.NAME, 'self', 818, 15, 818, 19),
woosh.Token(woosh.OP, '.', 818, 19, 818, 20),
woosh.Token(woosh.NAME, '_get_conv', 818, 20, 818, 29),
woosh.Token(woosh.OP, '(', 818, 29, 818, 30),
woosh.Token(woosh.NAME, 'section', 818, 30, 818, 37),
woosh.Token(woosh.OP, ',', 818, 37, 818, 38),
woosh.Token(woosh.NAME, 'option', 818, 39, 818, 45),
woosh.Token(woosh.OP, ',', 818, 45, 818, 46),
woosh.Token(woosh.NAME, 'int', 818, 47, 818, 50),
woosh.Token(woosh.OP, ',', 818, 50, 818, 51),
woosh.Token(woosh.NAME, 'raw', 818, 52, 818, 55),
woosh.Token(woosh.OP, '=', 818, 55, 818, 56),
woosh.Token(woosh.NAME, 'raw', 818, 56, 818, 59),
woosh.Token(woosh.OP, ',', 818, 59, 818, 60),
woosh.Token(woosh.NAME, 'vars', 818, 61, 818, 65),
woosh.Token(woosh.OP, '=', 818, 65, 818, 66),
woosh.Token(woosh.NAME, 'vars', 818, 66, 818, 70),
woosh.Token(woosh.OP, ',', 818, 70, 818, 71),
woosh.Token(woosh.NAME, 'fallback', 819, 30, 819, 38),
woosh.Token(woosh.OP, '=', 819, 38, 819, 39),
woosh.Token(woosh.NAME, 'fallback', 819, 39, 819, 47),
woosh.Token(woosh.OP, ',', 819, 47, 819, 48),
woosh.Token(woosh.OP, '**', 819, 49, 819, 51),
woosh.Token(woosh.NAME, 'kwargs', 819, 51, 819, 57),
woosh.Token(woosh.OP, ')', 819, 57, 819, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 819, 58, 820, 0),
woosh.Token(woosh.DEDENT, '    ', 821, 0, 821, 4),
woosh.Token(woosh.NAME, 'def', 821, 4, 821, 7),
woosh.Token(woosh.NAME, 'getfloat', 821, 8, 821, 16),
woosh.Token(woosh.OP, '(', 821, 16, 821, 17),
woosh.Token(woosh.NAME, 'self', 821, 17, 821, 21),
woosh.Token(woosh.OP, ',', 821, 21, 821, 22),
woosh.Token(woosh.NAME, 'section', 821, 23, 821, 30),
woosh.Token(woosh.OP, ',', 821, 30, 821, 31),
woosh.Token(woosh.NAME, 'option', 821, 32, 821, 38),
woosh.Token(woosh.OP, ',', 821, 38, 821, 39),
woosh.Token(woosh.OP, '*', 821, 40, 821, 41),
woosh.Token(woosh.OP, ',', 821, 41, 821, 42),
woosh.Token(woosh.NAME, 'raw', 821, 43, 821, 46),
woosh.Token(woosh.OP, '=', 821, 46, 821, 47),
woosh.Token(woosh.NAME, 'False', 821, 47, 821, 52),
woosh.Token(woosh.OP, ',', 821, 52, 821, 53),
woosh.Token(woosh.NAME, 'vars', 821, 54, 821, 58),
woosh.Token(woosh.OP, '=', 821, 58, 821, 59),
woosh.Token(woosh.NAME, 'None', 821, 59, 821, 63),
woosh.Token(woosh.OP, ',', 821, 63, 821, 64),
woosh.Token(woosh.NAME, 'fallback', 822, 17, 822, 25),
woosh.Token(woosh.OP, '=', 822, 25, 822, 26),
woosh.Token(woosh.NAME, '_UNSET', 822, 26, 822, 32),
woosh.Token(woosh.OP, ',', 822, 32, 822, 33),
woosh.Token(woosh.OP, '**', 822, 34, 822, 36),
woosh.Token(woosh.NAME, 'kwargs', 822, 36, 822, 42),
woosh.Token(woosh.OP, ')', 822, 42, 822, 43),
woosh.Token(woosh.OP, ':', 822, 43, 822, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 822, 44, 823, 0),
woosh.Token(woosh.INDENT, '        ', 823, 0, 823, 8),
woosh.Token(woosh.NAME, 'return', 823, 8, 823, 14),
woosh.Token(woosh.NAME, 'self', 823, 15, 823, 19),
woosh.Token(woosh.OP, '.', 823, 19, 823, 20),
woosh.Token(woosh.NAME, '_get_conv', 823, 20, 823, 29),
woosh.Token(woosh.OP, '(', 823, 29, 823, 30),
woosh.Token(woosh.NAME, 'section', 823, 30, 823, 37),
woosh.Token(woosh.OP, ',', 823, 37, 823, 38),
woosh.Token(woosh.NAME, 'option', 823, 39, 823, 45),
woosh.Token(woosh.OP, ',', 823, 45, 823, 46),
woosh.Token(woosh.NAME, 'float', 823, 47, 823, 52),
woosh.Token(woosh.OP, ',', 823, 52, 823, 53),
woosh.Token(woosh.NAME, 'raw', 823, 54, 823, 57),
woosh.Token(woosh.OP, '=', 823, 57, 823, 58),
woosh.Token(woosh.NAME, 'raw', 823, 58, 823, 61),
woosh.Token(woosh.OP, ',', 823, 61, 823, 62),
woosh.Token(woosh.NAME, 'vars', 823, 63, 823, 67),
woosh.Token(woosh.OP, '=', 823, 67, 823, 68),
woosh.Token(woosh.NAME, 'vars', 823, 68, 823, 72),
woosh.Token(woosh.OP, ',', 823, 72, 823, 73),
woosh.Token(woosh.NAME, 'fallback', 824, 30, 824, 38),
woosh.Token(woosh.OP, '=', 824, 38, 824, 39),
woosh.Token(woosh.NAME, 'fallback', 824, 39, 824, 47),
woosh.Token(woosh.OP, ',', 824, 47, 824, 48),
woosh.Token(woosh.OP, '**', 824, 49, 824, 51),
woosh.Token(woosh.NAME, 'kwargs', 824, 51, 824, 57),
woosh.Token(woosh.OP, ')', 824, 57, 824, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 824, 58, 825, 0),
woosh.Token(woosh.DEDENT, '    ', 826, 0, 826, 4),
woosh.Token(woosh.NAME, 'def', 826, 4, 826, 7),
woosh.Token(woosh.NAME, 'getboolean', 826, 8, 826, 18),
woosh.Token(woosh.OP, '(', 826, 18, 826, 19),
woosh.Token(woosh.NAME, 'self', 826, 19, 826, 23),
woosh.Token(woosh.OP, ',', 826, 23, 826, 24),
woosh.Token(woosh.NAME, 'section', 826, 25, 826, 32),
woosh.Token(woosh.OP, ',', 826, 32, 826, 33),
woosh.Token(woosh.NAME, 'option', 826, 34, 826, 40),
woosh.Token(woosh.OP, ',', 826, 40, 826, 41),
woosh.Token(woosh.OP, '*', 826, 42, 826, 43),
woosh.Token(woosh.OP, ',', 826, 43, 826, 44),
woosh.Token(woosh.NAME, 'raw', 826, 45, 826, 48),
woosh.Token(woosh.OP, '=', 826, 48, 826, 49),
woosh.Token(woosh.NAME, 'False', 826, 49, 826, 54),
woosh.Token(woosh.OP, ',', 826, 54, 826, 55),
woosh.Token(woosh.NAME, 'vars', 826, 56, 826, 60),
woosh.Token(woosh.OP, '=', 826, 60, 826, 61),
woosh.Token(woosh.NAME, 'None', 826, 61, 826, 65),
woosh.Token(woosh.OP, ',', 826, 65, 826, 66),
woosh.Token(woosh.NAME, 'fallback', 827, 19, 827, 27),
woosh.Token(woosh.OP, '=', 827, 27, 827, 28),
woosh.Token(woosh.NAME, '_UNSET', 827, 28, 827, 34),
woosh.Token(woosh.OP, ',', 827, 34, 827, 35),
woosh.Token(woosh.OP, '**', 827, 36, 827, 38),
woosh.Token(woosh.NAME, 'kwargs', 827, 38, 827, 44),
woosh.Token(woosh.OP, ')', 827, 44, 827, 45),
woosh.Token(woosh.OP, ':', 827, 45, 827, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 827, 46, 828, 0),
woosh.Token(woosh.INDENT, '        ', 828, 0, 828, 8),
woosh.Token(woosh.NAME, 'return', 828, 8, 828, 14),
woosh.Token(woosh.NAME, 'self', 828, 15, 828, 19),
woosh.Token(woosh.OP, '.', 828, 19, 828, 20),
woosh.Token(woosh.NAME, '_get_conv', 828, 20, 828, 29),
woosh.Token(woosh.OP, '(', 828, 29, 828, 30),
woosh.Token(woosh.NAME, 'section', 828, 30, 828, 37),
woosh.Token(woosh.OP, ',', 828, 37, 828, 38),
woosh.Token(woosh.NAME, 'option', 828, 39, 828, 45),
woosh.Token(woosh.OP, ',', 828, 45, 828, 46),
woosh.Token(woosh.NAME, 'self', 828, 47, 828, 51),
woosh.Token(woosh.OP, '.', 828, 51, 828, 52),
woosh.Token(woosh.NAME, '_convert_to_boolean', 828, 52, 828, 71),
woosh.Token(woosh.OP, ',', 828, 71, 828, 72),
woosh.Token(woosh.NAME, 'raw', 829, 30, 829, 33),
woosh.Token(woosh.OP, '=', 829, 33, 829, 34),
woosh.Token(woosh.NAME, 'raw', 829, 34, 829, 37),
woosh.Token(woosh.OP, ',', 829, 37, 829, 38),
woosh.Token(woosh.NAME, 'vars', 829, 39, 829, 43),
woosh.Token(woosh.OP, '=', 829, 43, 829, 44),
woosh.Token(woosh.NAME, 'vars', 829, 44, 829, 48),
woosh.Token(woosh.OP, ',', 829, 48, 829, 49),
woosh.Token(woosh.NAME, 'fallback', 829, 50, 829, 58),
woosh.Token(woosh.OP, '=', 829, 58, 829, 59),
woosh.Token(woosh.NAME, 'fallback', 829, 59, 829, 67),
woosh.Token(woosh.OP, ',', 829, 67, 829, 68),
woosh.Token(woosh.OP, '**', 829, 69, 829, 71),
woosh.Token(woosh.NAME, 'kwargs', 829, 71, 829, 77),
woosh.Token(woosh.OP, ')', 829, 77, 829, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 829, 78, 830, 0),
woosh.Token(woosh.DEDENT, '    ', 831, 0, 831, 4),
woosh.Token(woosh.NAME, 'def', 831, 4, 831, 7),
woosh.Token(woosh.NAME, 'items', 831, 8, 831, 13),
woosh.Token(woosh.OP, '(', 831, 13, 831, 14),
woosh.Token(woosh.NAME, 'self', 831, 14, 831, 18),
woosh.Token(woosh.OP, ',', 831, 18, 831, 19),
woosh.Token(woosh.NAME, 'section', 831, 20, 831, 27),
woosh.Token(woosh.OP, '=', 831, 27, 831, 28),
woosh.Token(woosh.NAME, '_UNSET', 831, 28, 831, 34),
woosh.Token(woosh.OP, ',', 831, 34, 831, 35),
woosh.Token(woosh.NAME, 'raw', 831, 36, 831, 39),
woosh.Token(woosh.OP, '=', 831, 39, 831, 40),
woosh.Token(woosh.NAME, 'False', 831, 40, 831, 45),
woosh.Token(woosh.OP, ',', 831, 45, 831, 46),
woosh.Token(woosh.NAME, 'vars', 831, 47, 831, 51),
woosh.Token(woosh.OP, '=', 831, 51, 831, 52),
woosh.Token(woosh.NAME, 'None', 831, 52, 831, 56),
woosh.Token(woosh.OP, ')', 831, 56, 831, 57),
woosh.Token(woosh.OP, ':', 831, 57, 831, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 831, 58, 832, 0),
woosh.Token(woosh.INDENT, '        ', 832, 0, 832, 8),
woosh.Token(woosh.STRING, '"""Return a list of (name, value) tuples for each option in a section.\r\n\r\n        All % interpolations are expanded in the return values, based on the\r\n        defaults passed into the constructor, unless the optional argument\r\n        `raw\' is true.  Additional substitutions may be provided using the\r\n        `vars\' argument, which must be a dictionary whose contents overrides\r\n        any pre-existing defaults.\r\n\r\n        The section DEFAULT is special.\r\n        """', 832, 8, 841, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 841, 11, 842, 0),
woosh.Token(woosh.NAME, 'if', 842, 8, 842, 10),
woosh.Token(woosh.NAME, 'section', 842, 11, 842, 18),
woosh.Token(woosh.NAME, 'is', 842, 19, 842, 21),
woosh.Token(woosh.NAME, '_UNSET', 842, 22, 842, 28),
woosh.Token(woosh.OP, ':', 842, 28, 842, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 842, 29, 843, 0),
woosh.Token(woosh.INDENT, '            ', 843, 0, 843, 12),
woosh.Token(woosh.NAME, 'return', 843, 12, 843, 18),
woosh.Token(woosh.NAME, 'super', 843, 19, 843, 24),
woosh.Token(woosh.OP, '(', 843, 24, 843, 25),
woosh.Token(woosh.OP, ')', 843, 25, 843, 26),
woosh.Token(woosh.OP, '.', 843, 26, 843, 27),
woosh.Token(woosh.NAME, 'items', 843, 27, 843, 32),
woosh.Token(woosh.OP, '(', 843, 32, 843, 33),
woosh.Token(woosh.OP, ')', 843, 33, 843, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 843, 34, 844, 0),
woosh.Token(woosh.DEDENT, '        ', 844, 0, 844, 8),
woosh.Token(woosh.NAME, 'd', 844, 8, 844, 9),
woosh.Token(woosh.OP, '=', 844, 10, 844, 11),
woosh.Token(woosh.NAME, 'self', 844, 12, 844, 16),
woosh.Token(woosh.OP, '.', 844, 16, 844, 17),
woosh.Token(woosh.NAME, '_defaults', 844, 17, 844, 26),
woosh.Token(woosh.OP, '.', 844, 26, 844, 27),
woosh.Token(woosh.NAME, 'copy', 844, 27, 844, 31),
woosh.Token(woosh.OP, '(', 844, 31, 844, 32),
woosh.Token(woosh.OP, ')', 844, 32, 844, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 844, 33, 845, 0),
woosh.Token(woosh.NAME, 'try', 845, 8, 845, 11),
woosh.Token(woosh.OP, ':', 845, 11, 845, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 845, 12, 846, 0),
woosh.Token(woosh.INDENT, '            ', 846, 0, 846, 12),
woosh.Token(woosh.NAME, 'd', 846, 12, 846, 13),
woosh.Token(woosh.OP, '.', 846, 13, 846, 14),
woosh.Token(woosh.NAME, 'update', 846, 14, 846, 20),
woosh.Token(woosh.OP, '(', 846, 20, 846, 21),
woosh.Token(woosh.NAME, 'self', 846, 21, 846, 25),
woosh.Token(woosh.OP, '.', 846, 25, 846, 26),
woosh.Token(woosh.NAME, '_sections', 846, 26, 846, 35),
woosh.Token(woosh.OP, '[', 846, 35, 846, 36),
woosh.Token(woosh.NAME, 'section', 846, 36, 846, 43),
woosh.Token(woosh.OP, ']', 846, 43, 846, 44),
woosh.Token(woosh.OP, ')', 846, 44, 846, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 846, 45, 847, 0),
woosh.Token(woosh.DEDENT, '        ', 847, 0, 847, 8),
woosh.Token(woosh.NAME, 'except', 847, 8, 847, 14),
woosh.Token(woosh.NAME, 'KeyError', 847, 15, 847, 23),
woosh.Token(woosh.OP, ':', 847, 23, 847, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 847, 24, 848, 0),
woosh.Token(woosh.INDENT, '            ', 848, 0, 848, 12),
woosh.Token(woosh.NAME, 'if', 848, 12, 848, 14),
woosh.Token(woosh.NAME, 'section', 848, 15, 848, 22),
woosh.Token(woosh.OP, '!=', 848, 23, 848, 25),
woosh.Token(woosh.NAME, 'self', 848, 26, 848, 30),
woosh.Token(woosh.OP, '.', 848, 30, 848, 31),
woosh.Token(woosh.NAME, 'default_section', 848, 31, 848, 46),
woosh.Token(woosh.OP, ':', 848, 46, 848, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 848, 47, 849, 0),
woosh.Token(woosh.INDENT, '                ', 849, 0, 849, 16),
woosh.Token(woosh.NAME, 'raise', 849, 16, 849, 21),
woosh.Token(woosh.NAME, 'NoSectionError', 849, 22, 849, 36),
woosh.Token(woosh.OP, '(', 849, 36, 849, 37),
woosh.Token(woosh.NAME, 'section', 849, 37, 849, 44),
woosh.Token(woosh.OP, ')', 849, 44, 849, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 849, 45, 850, 0),
woosh.Token(woosh.DEDENT, '        ', 850, 0, 850, 8),
woosh.Token(woosh.DEDENT, '', 850, 8, 850, 8),
woosh.Token(woosh.NAME, 'orig_keys', 850, 8, 850, 17),
woosh.Token(woosh.OP, '=', 850, 18, 850, 19),
woosh.Token(woosh.NAME, 'list', 850, 20, 850, 24),
woosh.Token(woosh.OP, '(', 850, 24, 850, 25),
woosh.Token(woosh.NAME, 'd', 850, 25, 850, 26),
woosh.Token(woosh.OP, '.', 850, 26, 850, 27),
woosh.Token(woosh.NAME, 'keys', 850, 27, 850, 31),
woosh.Token(woosh.OP, '(', 850, 31, 850, 32),
woosh.Token(woosh.OP, ')', 850, 32, 850, 33),
woosh.Token(woosh.OP, ')', 850, 33, 850, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 850, 34, 851, 0),
woosh.Token(woosh.COMMENT, '# Update with the entry specific variables', 851, 8, 851, 50),
woosh.Token(woosh.NAME, 'if', 852, 8, 852, 10),
woosh.Token(woosh.NAME, 'vars', 852, 11, 852, 15),
woosh.Token(woosh.OP, ':', 852, 15, 852, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 852, 16, 853, 0),
woosh.Token(woosh.INDENT, '            ', 853, 0, 853, 12),
woosh.Token(woosh.NAME, 'for', 853, 12, 853, 15),
woosh.Token(woosh.NAME, 'key', 853, 16, 853, 19),
woosh.Token(woosh.OP, ',', 853, 19, 853, 20),
woosh.Token(woosh.NAME, 'value', 853, 21, 853, 26),
woosh.Token(woosh.NAME, 'in', 853, 27, 853, 29),
woosh.Token(woosh.NAME, 'vars', 853, 30, 853, 34),
woosh.Token(woosh.OP, '.', 853, 34, 853, 35),
woosh.Token(woosh.NAME, 'items', 853, 35, 853, 40),
woosh.Token(woosh.OP, '(', 853, 40, 853, 41),
woosh.Token(woosh.OP, ')', 853, 41, 853, 42),
woosh.Token(woosh.OP, ':', 853, 42, 853, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 853, 43, 854, 0),
woosh.Token(woosh.INDENT, '                ', 854, 0, 854, 16),
woosh.Token(woosh.NAME, 'd', 854, 16, 854, 17),
woosh.Token(woosh.OP, '[', 854, 17, 854, 18),
woosh.Token(woosh.NAME, 'self', 854, 18, 854, 22),
woosh.Token(woosh.OP, '.', 854, 22, 854, 23),
woosh.Token(woosh.NAME, 'optionxform', 854, 23, 854, 34),
woosh.Token(woosh.OP, '(', 854, 34, 854, 35),
woosh.Token(woosh.NAME, 'key', 854, 35, 854, 38),
woosh.Token(woosh.OP, ')', 854, 38, 854, 39),
woosh.Token(woosh.OP, ']', 854, 39, 854, 40),
woosh.Token(woosh.OP, '=', 854, 41, 854, 42),
woosh.Token(woosh.NAME, 'value', 854, 43, 854, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 854, 48, 855, 0),
woosh.Token(woosh.DEDENT, '        ', 855, 0, 855, 8),
woosh.Token(woosh.DEDENT, '', 855, 8, 855, 8),
woosh.Token(woosh.NAME, 'value_getter', 855, 8, 855, 20),
woosh.Token(woosh.OP, '=', 855, 21, 855, 22),
woosh.Token(woosh.NAME, 'lambda', 855, 23, 855, 29),
woosh.Token(woosh.NAME, 'option', 855, 30, 855, 36),
woosh.Token(woosh.OP, ':', 855, 36, 855, 37),
woosh.Token(woosh.NAME, 'self', 855, 38, 855, 42),
woosh.Token(woosh.OP, '.', 855, 42, 855, 43),
woosh.Token(woosh.NAME, '_interpolation', 855, 43, 855, 57),
woosh.Token(woosh.OP, '.', 855, 57, 855, 58),
woosh.Token(woosh.NAME, 'before_get', 855, 58, 855, 68),
woosh.Token(woosh.OP, '(', 855, 68, 855, 69),
woosh.Token(woosh.NAME, 'self', 855, 69, 855, 73),
woosh.Token(woosh.OP, ',', 855, 73, 855, 74),
woosh.Token(woosh.NAME, 'section', 856, 12, 856, 19),
woosh.Token(woosh.OP, ',', 856, 19, 856, 20),
woosh.Token(woosh.NAME, 'option', 856, 21, 856, 27),
woosh.Token(woosh.OP, ',', 856, 27, 856, 28),
woosh.Token(woosh.NAME, 'd', 856, 29, 856, 30),
woosh.Token(woosh.OP, '[', 856, 30, 856, 31),
woosh.Token(woosh.NAME, 'option', 856, 31, 856, 37),
woosh.Token(woosh.OP, ']', 856, 37, 856, 38),
woosh.Token(woosh.OP, ',', 856, 38, 856, 39),
woosh.Token(woosh.NAME, 'd', 856, 40, 856, 41),
woosh.Token(woosh.OP, ')', 856, 41, 856, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 856, 42, 857, 0),
woosh.Token(woosh.NAME, 'if', 857, 8, 857, 10),
woosh.Token(woosh.NAME, 'raw', 857, 11, 857, 14),
woosh.Token(woosh.OP, ':', 857, 14, 857, 15),
woosh.Token(woosh.NEWLINE, '\r\n', 857, 15, 858, 0),
woosh.Token(woosh.INDENT, '            ', 858, 0, 858, 12),
woosh.Token(woosh.NAME, 'value_getter', 858, 12, 858, 24),
woosh.Token(woosh.OP, '=', 858, 25, 858, 26),
woosh.Token(woosh.NAME, 'lambda', 858, 27, 858, 33),
woosh.Token(woosh.NAME, 'option', 858, 34, 858, 40),
woosh.Token(woosh.OP, ':', 858, 40, 858, 41),
woosh.Token(woosh.NAME, 'd', 858, 42, 858, 43),
woosh.Token(woosh.OP, '[', 858, 43, 858, 44),
woosh.Token(woosh.NAME, 'option', 858, 44, 858, 50),
woosh.Token(woosh.OP, ']', 858, 50, 858, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 858, 51, 859, 0),
woosh.Token(woosh.DEDENT, '        ', 859, 0, 859, 8),
woosh.Token(woosh.NAME, 'return', 859, 8, 859, 14),
woosh.Token(woosh.OP, '[', 859, 15, 859, 16),
woosh.Token(woosh.OP, '(', 859, 16, 859, 17),
woosh.Token(woosh.NAME, 'option', 859, 17, 859, 23),
woosh.Token(woosh.OP, ',', 859, 23, 859, 24),
woosh.Token(woosh.NAME, 'value_getter', 859, 25, 859, 37),
woosh.Token(woosh.OP, '(', 859, 37, 859, 38),
woosh.Token(woosh.NAME, 'option', 859, 38, 859, 44),
woosh.Token(woosh.OP, ')', 859, 44, 859, 45),
woosh.Token(woosh.OP, ')', 859, 45, 859, 46),
woosh.Token(woosh.NAME, 'for', 859, 47, 859, 50),
woosh.Token(woosh.NAME, 'option', 859, 51, 859, 57),
woosh.Token(woosh.NAME, 'in', 859, 58, 859, 60),
woosh.Token(woosh.NAME, 'orig_keys', 859, 61, 859, 70),
woosh.Token(woosh.OP, ']', 859, 70, 859, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 859, 71, 860, 0),
woosh.Token(woosh.DEDENT, '    ', 861, 0, 861, 4),
woosh.Token(woosh.NAME, 'def', 861, 4, 861, 7),
woosh.Token(woosh.NAME, 'popitem', 861, 8, 861, 15),
woosh.Token(woosh.OP, '(', 861, 15, 861, 16),
woosh.Token(woosh.NAME, 'self', 861, 16, 861, 20),
woosh.Token(woosh.OP, ')', 861, 20, 861, 21),
woosh.Token(woosh.OP, ':', 861, 21, 861, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 861, 22, 862, 0),
woosh.Token(woosh.INDENT, '        ', 862, 0, 862, 8),
woosh.Token(woosh.STRING, '"""Remove a section from the parser and return it as\r\n        a (section_name, section_proxy) tuple. If no section is present, raise\r\n        KeyError.\r\n\r\n        The section DEFAULT is never returned because it cannot be removed.\r\n        """', 862, 8, 867, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 867, 11, 868, 0),
woosh.Token(woosh.NAME, 'for', 868, 8, 868, 11),
woosh.Token(woosh.NAME, 'key', 868, 12, 868, 15),
woosh.Token(woosh.NAME, 'in', 868, 16, 868, 18),
woosh.Token(woosh.NAME, 'self', 868, 19, 868, 23),
woosh.Token(woosh.OP, '.', 868, 23, 868, 24),
woosh.Token(woosh.NAME, 'sections', 868, 24, 868, 32),
woosh.Token(woosh.OP, '(', 868, 32, 868, 33),
woosh.Token(woosh.OP, ')', 868, 33, 868, 34),
woosh.Token(woosh.OP, ':', 868, 34, 868, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 868, 35, 869, 0),
woosh.Token(woosh.INDENT, '            ', 869, 0, 869, 12),
woosh.Token(woosh.NAME, 'value', 869, 12, 869, 17),
woosh.Token(woosh.OP, '=', 869, 18, 869, 19),
woosh.Token(woosh.NAME, 'self', 869, 20, 869, 24),
woosh.Token(woosh.OP, '[', 869, 24, 869, 25),
woosh.Token(woosh.NAME, 'key', 869, 25, 869, 28),
woosh.Token(woosh.OP, ']', 869, 28, 869, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 869, 29, 870, 0),
woosh.Token(woosh.NAME, 'del', 870, 12, 870, 15),
woosh.Token(woosh.NAME, 'self', 870, 16, 870, 20),
woosh.Token(woosh.OP, '[', 870, 20, 870, 21),
woosh.Token(woosh.NAME, 'key', 870, 21, 870, 24),
woosh.Token(woosh.OP, ']', 870, 24, 870, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 870, 25, 871, 0),
woosh.Token(woosh.NAME, 'return', 871, 12, 871, 18),
woosh.Token(woosh.NAME, 'key', 871, 19, 871, 22),
woosh.Token(woosh.OP, ',', 871, 22, 871, 23),
woosh.Token(woosh.NAME, 'value', 871, 24, 871, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 871, 29, 872, 0),
woosh.Token(woosh.DEDENT, '        ', 872, 0, 872, 8),
woosh.Token(woosh.NAME, 'raise', 872, 8, 872, 13),
woosh.Token(woosh.NAME, 'KeyError', 872, 14, 872, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 872, 22, 873, 0),
woosh.Token(woosh.DEDENT, '    ', 874, 0, 874, 4),
woosh.Token(woosh.NAME, 'def', 874, 4, 874, 7),
woosh.Token(woosh.NAME, 'optionxform', 874, 8, 874, 19),
woosh.Token(woosh.OP, '(', 874, 19, 874, 20),
woosh.Token(woosh.NAME, 'self', 874, 20, 874, 24),
woosh.Token(woosh.OP, ',', 874, 24, 874, 25),
woosh.Token(woosh.NAME, 'optionstr', 874, 26, 874, 35),
woosh.Token(woosh.OP, ')', 874, 35, 874, 36),
woosh.Token(woosh.OP, ':', 874, 36, 874, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 874, 37, 875, 0),
woosh.Token(woosh.INDENT, '        ', 875, 0, 875, 8),
woosh.Token(woosh.NAME, 'return', 875, 8, 875, 14),
woosh.Token(woosh.NAME, 'optionstr', 875, 15, 875, 24),
woosh.Token(woosh.OP, '.', 875, 24, 875, 25),
woosh.Token(woosh.NAME, 'lower', 875, 25, 875, 30),
woosh.Token(woosh.OP, '(', 875, 30, 875, 31),
woosh.Token(woosh.OP, ')', 875, 31, 875, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 875, 32, 876, 0),
woosh.Token(woosh.DEDENT, '    ', 877, 0, 877, 4),
woosh.Token(woosh.NAME, 'def', 877, 4, 877, 7),
woosh.Token(woosh.NAME, 'has_option', 877, 8, 877, 18),
woosh.Token(woosh.OP, '(', 877, 18, 877, 19),
woosh.Token(woosh.NAME, 'self', 877, 19, 877, 23),
woosh.Token(woosh.OP, ',', 877, 23, 877, 24),
woosh.Token(woosh.NAME, 'section', 877, 25, 877, 32),
woosh.Token(woosh.OP, ',', 877, 32, 877, 33),
woosh.Token(woosh.NAME, 'option', 877, 34, 877, 40),
woosh.Token(woosh.OP, ')', 877, 40, 877, 41),
woosh.Token(woosh.OP, ':', 877, 41, 877, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 877, 42, 878, 0),
woosh.Token(woosh.INDENT, '        ', 878, 0, 878, 8),
woosh.Token(woosh.STRING, '"""Check for the existence of a given option in a given section.\r\n        If the specified `section\' is None or an empty string, DEFAULT is\r\n        assumed. If the specified `section\' does not exist, returns False."""', 878, 8, 880, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 880, 77, 881, 0),
woosh.Token(woosh.NAME, 'if', 881, 8, 881, 10),
woosh.Token(woosh.NAME, 'not', 881, 11, 881, 14),
woosh.Token(woosh.NAME, 'section', 881, 15, 881, 22),
woosh.Token(woosh.NAME, 'or', 881, 23, 881, 25),
woosh.Token(woosh.NAME, 'section', 881, 26, 881, 33),
woosh.Token(woosh.OP, '==', 881, 34, 881, 36),
woosh.Token(woosh.NAME, 'self', 881, 37, 881, 41),
woosh.Token(woosh.OP, '.', 881, 41, 881, 42),
woosh.Token(woosh.NAME, 'default_section', 881, 42, 881, 57),
woosh.Token(woosh.OP, ':', 881, 57, 881, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 881, 58, 882, 0),
woosh.Token(woosh.INDENT, '            ', 882, 0, 882, 12),
woosh.Token(woosh.NAME, 'option', 882, 12, 882, 18),
woosh.Token(woosh.OP, '=', 882, 19, 882, 20),
woosh.Token(woosh.NAME, 'self', 882, 21, 882, 25),
woosh.Token(woosh.OP, '.', 882, 25, 882, 26),
woosh.Token(woosh.NAME, 'optionxform', 882, 26, 882, 37),
woosh.Token(woosh.OP, '(', 882, 37, 882, 38),
woosh.Token(woosh.NAME, 'option', 882, 38, 882, 44),
woosh.Token(woosh.OP, ')', 882, 44, 882, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 882, 45, 883, 0),
woosh.Token(woosh.NAME, 'return', 883, 12, 883, 18),
woosh.Token(woosh.NAME, 'option', 883, 19, 883, 25),
woosh.Token(woosh.NAME, 'in', 883, 26, 883, 28),
woosh.Token(woosh.NAME, 'self', 883, 29, 883, 33),
woosh.Token(woosh.OP, '.', 883, 33, 883, 34),
woosh.Token(woosh.NAME, '_defaults', 883, 34, 883, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 883, 43, 884, 0),
woosh.Token(woosh.DEDENT, '        ', 884, 0, 884, 8),
woosh.Token(woosh.NAME, 'elif', 884, 8, 884, 12),
woosh.Token(woosh.NAME, 'section', 884, 13, 884, 20),
woosh.Token(woosh.NAME, 'not', 884, 21, 884, 24),
woosh.Token(woosh.NAME, 'in', 884, 25, 884, 27),
woosh.Token(woosh.NAME, 'self', 884, 28, 884, 32),
woosh.Token(woosh.OP, '.', 884, 32, 884, 33),
woosh.Token(woosh.NAME, '_sections', 884, 33, 884, 42),
woosh.Token(woosh.OP, ':', 884, 42, 884, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 884, 43, 885, 0),
woosh.Token(woosh.INDENT, '            ', 885, 0, 885, 12),
woosh.Token(woosh.NAME, 'return', 885, 12, 885, 18),
woosh.Token(woosh.NAME, 'False', 885, 19, 885, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 885, 24, 886, 0),
woosh.Token(woosh.DEDENT, '        ', 886, 0, 886, 8),
woosh.Token(woosh.NAME, 'else', 886, 8, 886, 12),
woosh.Token(woosh.OP, ':', 886, 12, 886, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 886, 13, 887, 0),
woosh.Token(woosh.INDENT, '            ', 887, 0, 887, 12),
woosh.Token(woosh.NAME, 'option', 887, 12, 887, 18),
woosh.Token(woosh.OP, '=', 887, 19, 887, 20),
woosh.Token(woosh.NAME, 'self', 887, 21, 887, 25),
woosh.Token(woosh.OP, '.', 887, 25, 887, 26),
woosh.Token(woosh.NAME, 'optionxform', 887, 26, 887, 37),
woosh.Token(woosh.OP, '(', 887, 37, 887, 38),
woosh.Token(woosh.NAME, 'option', 887, 38, 887, 44),
woosh.Token(woosh.OP, ')', 887, 44, 887, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 887, 45, 888, 0),
woosh.Token(woosh.NAME, 'return', 888, 12, 888, 18),
woosh.Token(woosh.OP, '(', 888, 19, 888, 20),
woosh.Token(woosh.NAME, 'option', 888, 20, 888, 26),
woosh.Token(woosh.NAME, 'in', 888, 27, 888, 29),
woosh.Token(woosh.NAME, 'self', 888, 30, 888, 34),
woosh.Token(woosh.OP, '.', 888, 34, 888, 35),
woosh.Token(woosh.NAME, '_sections', 888, 35, 888, 44),
woosh.Token(woosh.OP, '[', 888, 44, 888, 45),
woosh.Token(woosh.NAME, 'section', 888, 45, 888, 52),
woosh.Token(woosh.OP, ']', 888, 52, 888, 53),
woosh.Token(woosh.NAME, 'or', 889, 20, 889, 22),
woosh.Token(woosh.NAME, 'option', 889, 23, 889, 29),
woosh.Token(woosh.NAME, 'in', 889, 30, 889, 32),
woosh.Token(woosh.NAME, 'self', 889, 33, 889, 37),
woosh.Token(woosh.OP, '.', 889, 37, 889, 38),
woosh.Token(woosh.NAME, '_defaults', 889, 38, 889, 47),
woosh.Token(woosh.OP, ')', 889, 47, 889, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 889, 48, 890, 0),
woosh.Token(woosh.DEDENT, '    ', 891, 0, 891, 4),
woosh.Token(woosh.DEDENT, '', 891, 4, 891, 4),
woosh.Token(woosh.NAME, 'def', 891, 4, 891, 7),
woosh.Token(woosh.NAME, 'set', 891, 8, 891, 11),
woosh.Token(woosh.OP, '(', 891, 11, 891, 12),
woosh.Token(woosh.NAME, 'self', 891, 12, 891, 16),
woosh.Token(woosh.OP, ',', 891, 16, 891, 17),
woosh.Token(woosh.NAME, 'section', 891, 18, 891, 25),
woosh.Token(woosh.OP, ',', 891, 25, 891, 26),
woosh.Token(woosh.NAME, 'option', 891, 27, 891, 33),
woosh.Token(woosh.OP, ',', 891, 33, 891, 34),
woosh.Token(woosh.NAME, 'value', 891, 35, 891, 40),
woosh.Token(woosh.OP, '=', 891, 40, 891, 41),
woosh.Token(woosh.NAME, 'None', 891, 41, 891, 45),
woosh.Token(woosh.OP, ')', 891, 45, 891, 46),
woosh.Token(woosh.OP, ':', 891, 46, 891, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 891, 47, 892, 0),
woosh.Token(woosh.INDENT, '        ', 892, 0, 892, 8),
woosh.Token(woosh.STRING, '"""Set an option."""', 892, 8, 892, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 892, 28, 893, 0),
woosh.Token(woosh.NAME, 'if', 893, 8, 893, 10),
woosh.Token(woosh.NAME, 'value', 893, 11, 893, 16),
woosh.Token(woosh.OP, ':', 893, 16, 893, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 893, 17, 894, 0),
woosh.Token(woosh.INDENT, '            ', 894, 0, 894, 12),
woosh.Token(woosh.NAME, 'value', 894, 12, 894, 17),
woosh.Token(woosh.OP, '=', 894, 18, 894, 19),
woosh.Token(woosh.NAME, 'self', 894, 20, 894, 24),
woosh.Token(woosh.OP, '.', 894, 24, 894, 25),
woosh.Token(woosh.NAME, '_interpolation', 894, 25, 894, 39),
woosh.Token(woosh.OP, '.', 894, 39, 894, 40),
woosh.Token(woosh.NAME, 'before_set', 894, 40, 894, 50),
woosh.Token(woosh.OP, '(', 894, 50, 894, 51),
woosh.Token(woosh.NAME, 'self', 894, 51, 894, 55),
woosh.Token(woosh.OP, ',', 894, 55, 894, 56),
woosh.Token(woosh.NAME, 'section', 894, 57, 894, 64),
woosh.Token(woosh.OP, ',', 894, 64, 894, 65),
woosh.Token(woosh.NAME, 'option', 894, 66, 894, 72),
woosh.Token(woosh.OP, ',', 894, 72, 894, 73),
woosh.Token(woosh.NAME, 'value', 895, 51, 895, 56),
woosh.Token(woosh.OP, ')', 895, 56, 895, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 895, 57, 896, 0),
woosh.Token(woosh.DEDENT, '        ', 896, 0, 896, 8),
woosh.Token(woosh.NAME, 'if', 896, 8, 896, 10),
woosh.Token(woosh.NAME, 'not', 896, 11, 896, 14),
woosh.Token(woosh.NAME, 'section', 896, 15, 896, 22),
woosh.Token(woosh.NAME, 'or', 896, 23, 896, 25),
woosh.Token(woosh.NAME, 'section', 896, 26, 896, 33),
woosh.Token(woosh.OP, '==', 896, 34, 896, 36),
woosh.Token(woosh.NAME, 'self', 896, 37, 896, 41),
woosh.Token(woosh.OP, '.', 896, 41, 896, 42),
woosh.Token(woosh.NAME, 'default_section', 896, 42, 896, 57),
woosh.Token(woosh.OP, ':', 896, 57, 896, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 896, 58, 897, 0),
woosh.Token(woosh.INDENT, '            ', 897, 0, 897, 12),
woosh.Token(woosh.NAME, 'sectdict', 897, 12, 897, 20),
woosh.Token(woosh.OP, '=', 897, 21, 897, 22),
woosh.Token(woosh.NAME, 'self', 897, 23, 897, 27),
woosh.Token(woosh.OP, '.', 897, 27, 897, 28),
woosh.Token(woosh.NAME, '_defaults', 897, 28, 897, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 897, 37, 898, 0),
woosh.Token(woosh.DEDENT, '        ', 898, 0, 898, 8),
woosh.Token(woosh.NAME, 'else', 898, 8, 898, 12),
woosh.Token(woosh.OP, ':', 898, 12, 898, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 898, 13, 899, 0),
woosh.Token(woosh.INDENT, '            ', 899, 0, 899, 12),
woosh.Token(woosh.NAME, 'try', 899, 12, 899, 15),
woosh.Token(woosh.OP, ':', 899, 15, 899, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 899, 16, 900, 0),
woosh.Token(woosh.INDENT, '                ', 900, 0, 900, 16),
woosh.Token(woosh.NAME, 'sectdict', 900, 16, 900, 24),
woosh.Token(woosh.OP, '=', 900, 25, 900, 26),
woosh.Token(woosh.NAME, 'self', 900, 27, 900, 31),
woosh.Token(woosh.OP, '.', 900, 31, 900, 32),
woosh.Token(woosh.NAME, '_sections', 900, 32, 900, 41),
woosh.Token(woosh.OP, '[', 900, 41, 900, 42),
woosh.Token(woosh.NAME, 'section', 900, 42, 900, 49),
woosh.Token(woosh.OP, ']', 900, 49, 900, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 900, 50, 901, 0),
woosh.Token(woosh.DEDENT, '            ', 901, 0, 901, 12),
woosh.Token(woosh.NAME, 'except', 901, 12, 901, 18),
woosh.Token(woosh.NAME, 'KeyError', 901, 19, 901, 27),
woosh.Token(woosh.OP, ':', 901, 27, 901, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 901, 28, 902, 0),
woosh.Token(woosh.INDENT, '                ', 902, 0, 902, 16),
woosh.Token(woosh.NAME, 'raise', 902, 16, 902, 21),
woosh.Token(woosh.NAME, 'NoSectionError', 902, 22, 902, 36),
woosh.Token(woosh.OP, '(', 902, 36, 902, 37),
woosh.Token(woosh.NAME, 'section', 902, 37, 902, 44),
woosh.Token(woosh.OP, ')', 902, 44, 902, 45),
woosh.Token(woosh.NAME, 'from', 902, 46, 902, 50),
woosh.Token(woosh.NAME, 'None', 902, 51, 902, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 902, 55, 903, 0),
woosh.Token(woosh.DEDENT, '        ', 903, 0, 903, 8),
woosh.Token(woosh.DEDENT, '', 903, 8, 903, 8),
woosh.Token(woosh.NAME, 'sectdict', 903, 8, 903, 16),
woosh.Token(woosh.OP, '[', 903, 16, 903, 17),
woosh.Token(woosh.NAME, 'self', 903, 17, 903, 21),
woosh.Token(woosh.OP, '.', 903, 21, 903, 22),
woosh.Token(woosh.NAME, 'optionxform', 903, 22, 903, 33),
woosh.Token(woosh.OP, '(', 903, 33, 903, 34),
woosh.Token(woosh.NAME, 'option', 903, 34, 903, 40),
woosh.Token(woosh.OP, ')', 903, 40, 903, 41),
woosh.Token(woosh.OP, ']', 903, 41, 903, 42),
woosh.Token(woosh.OP, '=', 903, 43, 903, 44),
woosh.Token(woosh.NAME, 'value', 903, 45, 903, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 903, 50, 904, 0),
woosh.Token(woosh.DEDENT, '    ', 905, 0, 905, 4),
woosh.Token(woosh.NAME, 'def', 905, 4, 905, 7),
woosh.Token(woosh.NAME, 'write', 905, 8, 905, 13),
woosh.Token(woosh.OP, '(', 905, 13, 905, 14),
woosh.Token(woosh.NAME, 'self', 905, 14, 905, 18),
woosh.Token(woosh.OP, ',', 905, 18, 905, 19),
woosh.Token(woosh.NAME, 'fp', 905, 20, 905, 22),
woosh.Token(woosh.OP, ',', 905, 22, 905, 23),
woosh.Token(woosh.NAME, 'space_around_delimiters', 905, 24, 905, 47),
woosh.Token(woosh.OP, '=', 905, 47, 905, 48),
woosh.Token(woosh.NAME, 'True', 905, 48, 905, 52),
woosh.Token(woosh.OP, ')', 905, 52, 905, 53),
woosh.Token(woosh.OP, ':', 905, 53, 905, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 905, 54, 906, 0),
woosh.Token(woosh.INDENT, '        ', 906, 0, 906, 8),
woosh.Token(woosh.STRING, '"""Write an .ini-format representation of the configuration state.\r\n\r\n        If `space_around_delimiters\' is True (the default), delimiters\r\n        between keys and values are surrounded by spaces.\r\n        """', 906, 8, 910, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 910, 11, 911, 0),
woosh.Token(woosh.NAME, 'if', 911, 8, 911, 10),
woosh.Token(woosh.NAME, 'space_around_delimiters', 911, 11, 911, 34),
woosh.Token(woosh.OP, ':', 911, 34, 911, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 911, 35, 912, 0),
woosh.Token(woosh.INDENT, '            ', 912, 0, 912, 12),
woosh.Token(woosh.NAME, 'd', 912, 12, 912, 13),
woosh.Token(woosh.OP, '=', 912, 14, 912, 15),
woosh.Token(woosh.STRING, '" {} "', 912, 16, 912, 22),
woosh.Token(woosh.OP, '.', 912, 22, 912, 23),
woosh.Token(woosh.NAME, 'format', 912, 23, 912, 29),
woosh.Token(woosh.OP, '(', 912, 29, 912, 30),
woosh.Token(woosh.NAME, 'self', 912, 30, 912, 34),
woosh.Token(woosh.OP, '.', 912, 34, 912, 35),
woosh.Token(woosh.NAME, '_delimiters', 912, 35, 912, 46),
woosh.Token(woosh.OP, '[', 912, 46, 912, 47),
woosh.Token(woosh.NUMBER, '0', 912, 47, 912, 48),
woosh.Token(woosh.OP, ']', 912, 48, 912, 49),
woosh.Token(woosh.OP, ')', 912, 49, 912, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 912, 50, 913, 0),
woosh.Token(woosh.DEDENT, '        ', 913, 0, 913, 8),
woosh.Token(woosh.NAME, 'else', 913, 8, 913, 12),
woosh.Token(woosh.OP, ':', 913, 12, 913, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 913, 13, 914, 0),
woosh.Token(woosh.INDENT, '            ', 914, 0, 914, 12),
woosh.Token(woosh.NAME, 'd', 914, 12, 914, 13),
woosh.Token(woosh.OP, '=', 914, 14, 914, 15),
woosh.Token(woosh.NAME, 'self', 914, 16, 914, 20),
woosh.Token(woosh.OP, '.', 914, 20, 914, 21),
woosh.Token(woosh.NAME, '_delimiters', 914, 21, 914, 32),
woosh.Token(woosh.OP, '[', 914, 32, 914, 33),
woosh.Token(woosh.NUMBER, '0', 914, 33, 914, 34),
woosh.Token(woosh.OP, ']', 914, 34, 914, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 914, 35, 915, 0),
woosh.Token(woosh.DEDENT, '        ', 915, 0, 915, 8),
woosh.Token(woosh.NAME, 'if', 915, 8, 915, 10),
woosh.Token(woosh.NAME, 'self', 915, 11, 915, 15),
woosh.Token(woosh.OP, '.', 915, 15, 915, 16),
woosh.Token(woosh.NAME, '_defaults', 915, 16, 915, 25),
woosh.Token(woosh.OP, ':', 915, 25, 915, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 915, 26, 916, 0),
woosh.Token(woosh.INDENT, '            ', 916, 0, 916, 12),
woosh.Token(woosh.NAME, 'self', 916, 12, 916, 16),
woosh.Token(woosh.OP, '.', 916, 16, 916, 17),
woosh.Token(woosh.NAME, '_write_section', 916, 17, 916, 31),
woosh.Token(woosh.OP, '(', 916, 31, 916, 32),
woosh.Token(woosh.NAME, 'fp', 916, 32, 916, 34),
woosh.Token(woosh.OP, ',', 916, 34, 916, 35),
woosh.Token(woosh.NAME, 'self', 916, 36, 916, 40),
woosh.Token(woosh.OP, '.', 916, 40, 916, 41),
woosh.Token(woosh.NAME, 'default_section', 916, 41, 916, 56),
woosh.Token(woosh.OP, ',', 916, 56, 916, 57),
woosh.Token(woosh.NAME, 'self', 917, 36, 917, 40),
woosh.Token(woosh.OP, '.', 917, 40, 917, 41),
woosh.Token(woosh.NAME, '_defaults', 917, 41, 917, 50),
woosh.Token(woosh.OP, '.', 917, 50, 917, 51),
woosh.Token(woosh.NAME, 'items', 917, 51, 917, 56),
woosh.Token(woosh.OP, '(', 917, 56, 917, 57),
woosh.Token(woosh.OP, ')', 917, 57, 917, 58),
woosh.Token(woosh.OP, ',', 917, 58, 917, 59),
woosh.Token(woosh.NAME, 'd', 917, 60, 917, 61),
woosh.Token(woosh.OP, ')', 917, 61, 917, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 917, 62, 918, 0),
woosh.Token(woosh.DEDENT, '        ', 918, 0, 918, 8),
woosh.Token(woosh.NAME, 'for', 918, 8, 918, 11),
woosh.Token(woosh.NAME, 'section', 918, 12, 918, 19),
woosh.Token(woosh.NAME, 'in', 918, 20, 918, 22),
woosh.Token(woosh.NAME, 'self', 918, 23, 918, 27),
woosh.Token(woosh.OP, '.', 918, 27, 918, 28),
woosh.Token(woosh.NAME, '_sections', 918, 28, 918, 37),
woosh.Token(woosh.OP, ':', 918, 37, 918, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 918, 38, 919, 0),
woosh.Token(woosh.INDENT, '            ', 919, 0, 919, 12),
woosh.Token(woosh.NAME, 'self', 919, 12, 919, 16),
woosh.Token(woosh.OP, '.', 919, 16, 919, 17),
woosh.Token(woosh.NAME, '_write_section', 919, 17, 919, 31),
woosh.Token(woosh.OP, '(', 919, 31, 919, 32),
woosh.Token(woosh.NAME, 'fp', 919, 32, 919, 34),
woosh.Token(woosh.OP, ',', 919, 34, 919, 35),
woosh.Token(woosh.NAME, 'section', 919, 36, 919, 43),
woosh.Token(woosh.OP, ',', 919, 43, 919, 44),
woosh.Token(woosh.NAME, 'self', 920, 32, 920, 36),
woosh.Token(woosh.OP, '.', 920, 36, 920, 37),
woosh.Token(woosh.NAME, '_sections', 920, 37, 920, 46),
woosh.Token(woosh.OP, '[', 920, 46, 920, 47),
woosh.Token(woosh.NAME, 'section', 920, 47, 920, 54),
woosh.Token(woosh.OP, ']', 920, 54, 920, 55),
woosh.Token(woosh.OP, '.', 920, 55, 920, 56),
woosh.Token(woosh.NAME, 'items', 920, 56, 920, 61),
woosh.Token(woosh.OP, '(', 920, 61, 920, 62),
woosh.Token(woosh.OP, ')', 920, 62, 920, 63),
woosh.Token(woosh.OP, ',', 920, 63, 920, 64),
woosh.Token(woosh.NAME, 'd', 920, 65, 920, 66),
woosh.Token(woosh.OP, ')', 920, 66, 920, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 920, 67, 921, 0),
woosh.Token(woosh.DEDENT, '    ', 922, 0, 922, 4),
woosh.Token(woosh.DEDENT, '', 922, 4, 922, 4),
woosh.Token(woosh.NAME, 'def', 922, 4, 922, 7),
woosh.Token(woosh.NAME, '_write_section', 922, 8, 922, 22),
woosh.Token(woosh.OP, '(', 922, 22, 922, 23),
woosh.Token(woosh.NAME, 'self', 922, 23, 922, 27),
woosh.Token(woosh.OP, ',', 922, 27, 922, 28),
woosh.Token(woosh.NAME, 'fp', 922, 29, 922, 31),
woosh.Token(woosh.OP, ',', 922, 31, 922, 32),
woosh.Token(woosh.NAME, 'section_name', 922, 33, 922, 45),
woosh.Token(woosh.OP, ',', 922, 45, 922, 46),
woosh.Token(woosh.NAME, 'section_items', 922, 47, 922, 60),
woosh.Token(woosh.OP, ',', 922, 60, 922, 61),
woosh.Token(woosh.NAME, 'delimiter', 922, 62, 922, 71),
woosh.Token(woosh.OP, ')', 922, 71, 922, 72),
woosh.Token(woosh.OP, ':', 922, 72, 922, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 922, 73, 923, 0),
woosh.Token(woosh.INDENT, '        ', 923, 0, 923, 8),
woosh.Token(woosh.STRING, '"""Write a single section to the specified `fp\'."""', 923, 8, 923, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 923, 59, 924, 0),
woosh.Token(woosh.NAME, 'fp', 924, 8, 924, 10),
woosh.Token(woosh.OP, '.', 924, 10, 924, 11),
woosh.Token(woosh.NAME, 'write', 924, 11, 924, 16),
woosh.Token(woosh.OP, '(', 924, 16, 924, 17),
woosh.Token(woosh.STRING, '"[{}]\\n"', 924, 17, 924, 25),
woosh.Token(woosh.OP, '.', 924, 25, 924, 26),
woosh.Token(woosh.NAME, 'format', 924, 26, 924, 32),
woosh.Token(woosh.OP, '(', 924, 32, 924, 33),
woosh.Token(woosh.NAME, 'section_name', 924, 33, 924, 45),
woosh.Token(woosh.OP, ')', 924, 45, 924, 46),
woosh.Token(woosh.OP, ')', 924, 46, 924, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 924, 47, 925, 0),
woosh.Token(woosh.NAME, 'for', 925, 8, 925, 11),
woosh.Token(woosh.NAME, 'key', 925, 12, 925, 15),
woosh.Token(woosh.OP, ',', 925, 15, 925, 16),
woosh.Token(woosh.NAME, 'value', 925, 17, 925, 22),
woosh.Token(woosh.NAME, 'in', 925, 23, 925, 25),
woosh.Token(woosh.NAME, 'section_items', 925, 26, 925, 39),
woosh.Token(woosh.OP, ':', 925, 39, 925, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 925, 40, 926, 0),
woosh.Token(woosh.INDENT, '            ', 926, 0, 926, 12),
woosh.Token(woosh.NAME, 'value', 926, 12, 926, 17),
woosh.Token(woosh.OP, '=', 926, 18, 926, 19),
woosh.Token(woosh.NAME, 'self', 926, 20, 926, 24),
woosh.Token(woosh.OP, '.', 926, 24, 926, 25),
woosh.Token(woosh.NAME, '_interpolation', 926, 25, 926, 39),
woosh.Token(woosh.OP, '.', 926, 39, 926, 40),
woosh.Token(woosh.NAME, 'before_write', 926, 40, 926, 52),
woosh.Token(woosh.OP, '(', 926, 52, 926, 53),
woosh.Token(woosh.NAME, 'self', 926, 53, 926, 57),
woosh.Token(woosh.OP, ',', 926, 57, 926, 58),
woosh.Token(woosh.NAME, 'section_name', 926, 59, 926, 71),
woosh.Token(woosh.OP, ',', 926, 71, 926, 72),
woosh.Token(woosh.NAME, 'key', 926, 73, 926, 76),
woosh.Token(woosh.OP, ',', 926, 76, 926, 77),
woosh.Token(woosh.NAME, 'value', 927, 53, 927, 58),
woosh.Token(woosh.OP, ')', 927, 58, 927, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 927, 59, 928, 0),
woosh.Token(woosh.NAME, 'if', 928, 12, 928, 14),
woosh.Token(woosh.NAME, 'value', 928, 15, 928, 20),
woosh.Token(woosh.NAME, 'is', 928, 21, 928, 23),
woosh.Token(woosh.NAME, 'not', 928, 24, 928, 27),
woosh.Token(woosh.NAME, 'None', 928, 28, 928, 32),
woosh.Token(woosh.NAME, 'or', 928, 33, 928, 35),
woosh.Token(woosh.NAME, 'not', 928, 36, 928, 39),
woosh.Token(woosh.NAME, 'self', 928, 40, 928, 44),
woosh.Token(woosh.OP, '.', 928, 44, 928, 45),
woosh.Token(woosh.NAME, '_allow_no_value', 928, 45, 928, 60),
woosh.Token(woosh.OP, ':', 928, 60, 928, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 928, 61, 929, 0),
woosh.Token(woosh.INDENT, '                ', 929, 0, 929, 16),
woosh.Token(woosh.NAME, 'value', 929, 16, 929, 21),
woosh.Token(woosh.OP, '=', 929, 22, 929, 23),
woosh.Token(woosh.NAME, 'delimiter', 929, 24, 929, 33),
woosh.Token(woosh.OP, '+', 929, 34, 929, 35),
woosh.Token(woosh.NAME, 'str', 929, 36, 929, 39),
woosh.Token(woosh.OP, '(', 929, 39, 929, 40),
woosh.Token(woosh.NAME, 'value', 929, 40, 929, 45),
woosh.Token(woosh.OP, ')', 929, 45, 929, 46),
woosh.Token(woosh.OP, '.', 929, 46, 929, 47),
woosh.Token(woosh.NAME, 'replace', 929, 47, 929, 54),
woosh.Token(woosh.OP, '(', 929, 54, 929, 55),
woosh.Token(woosh.STRING, "'\\n'", 929, 55, 929, 59),
woosh.Token(woosh.OP, ',', 929, 59, 929, 60),
woosh.Token(woosh.STRING, "'\\n\\t'", 929, 61, 929, 67),
woosh.Token(woosh.OP, ')', 929, 67, 929, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 929, 68, 930, 0),
woosh.Token(woosh.DEDENT, '            ', 930, 0, 930, 12),
woosh.Token(woosh.NAME, 'else', 930, 12, 930, 16),
woosh.Token(woosh.OP, ':', 930, 16, 930, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 930, 17, 931, 0),
woosh.Token(woosh.INDENT, '                ', 931, 0, 931, 16),
woosh.Token(woosh.NAME, 'value', 931, 16, 931, 21),
woosh.Token(woosh.OP, '=', 931, 22, 931, 23),
woosh.Token(woosh.STRING, '""', 931, 24, 931, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 931, 26, 932, 0),
woosh.Token(woosh.DEDENT, '            ', 932, 0, 932, 12),
woosh.Token(woosh.NAME, 'fp', 932, 12, 932, 14),
woosh.Token(woosh.OP, '.', 932, 14, 932, 15),
woosh.Token(woosh.NAME, 'write', 932, 15, 932, 20),
woosh.Token(woosh.OP, '(', 932, 20, 932, 21),
woosh.Token(woosh.STRING, '"{}{}\\n"', 932, 21, 932, 29),
woosh.Token(woosh.OP, '.', 932, 29, 932, 30),
woosh.Token(woosh.NAME, 'format', 932, 30, 932, 36),
woosh.Token(woosh.OP, '(', 932, 36, 932, 37),
woosh.Token(woosh.NAME, 'key', 932, 37, 932, 40),
woosh.Token(woosh.OP, ',', 932, 40, 932, 41),
woosh.Token(woosh.NAME, 'value', 932, 42, 932, 47),
woosh.Token(woosh.OP, ')', 932, 47, 932, 48),
woosh.Token(woosh.OP, ')', 932, 48, 932, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 932, 49, 933, 0),
woosh.Token(woosh.DEDENT, '        ', 933, 0, 933, 8),
woosh.Token(woosh.NAME, 'fp', 933, 8, 933, 10),
woosh.Token(woosh.OP, '.', 933, 10, 933, 11),
woosh.Token(woosh.NAME, 'write', 933, 11, 933, 16),
woosh.Token(woosh.OP, '(', 933, 16, 933, 17),
woosh.Token(woosh.STRING, '"\\n"', 933, 17, 933, 21),
woosh.Token(woosh.OP, ')', 933, 21, 933, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 933, 22, 934, 0),
woosh.Token(woosh.DEDENT, '    ', 935, 0, 935, 4),
woosh.Token(woosh.NAME, 'def', 935, 4, 935, 7),
woosh.Token(woosh.NAME, 'remove_option', 935, 8, 935, 21),
woosh.Token(woosh.OP, '(', 935, 21, 935, 22),
woosh.Token(woosh.NAME, 'self', 935, 22, 935, 26),
woosh.Token(woosh.OP, ',', 935, 26, 935, 27),
woosh.Token(woosh.NAME, 'section', 935, 28, 935, 35),
woosh.Token(woosh.OP, ',', 935, 35, 935, 36),
woosh.Token(woosh.NAME, 'option', 935, 37, 935, 43),
woosh.Token(woosh.OP, ')', 935, 43, 935, 44),
woosh.Token(woosh.OP, ':', 935, 44, 935, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 935, 45, 936, 0),
woosh.Token(woosh.INDENT, '        ', 936, 0, 936, 8),
woosh.Token(woosh.STRING, '"""Remove an option."""', 936, 8, 936, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 936, 31, 937, 0),
woosh.Token(woosh.NAME, 'if', 937, 8, 937, 10),
woosh.Token(woosh.NAME, 'not', 937, 11, 937, 14),
woosh.Token(woosh.NAME, 'section', 937, 15, 937, 22),
woosh.Token(woosh.NAME, 'or', 937, 23, 937, 25),
woosh.Token(woosh.NAME, 'section', 937, 26, 937, 33),
woosh.Token(woosh.OP, '==', 937, 34, 937, 36),
woosh.Token(woosh.NAME, 'self', 937, 37, 937, 41),
woosh.Token(woosh.OP, '.', 937, 41, 937, 42),
woosh.Token(woosh.NAME, 'default_section', 937, 42, 937, 57),
woosh.Token(woosh.OP, ':', 937, 57, 937, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 937, 58, 938, 0),
woosh.Token(woosh.INDENT, '            ', 938, 0, 938, 12),
woosh.Token(woosh.NAME, 'sectdict', 938, 12, 938, 20),
woosh.Token(woosh.OP, '=', 938, 21, 938, 22),
woosh.Token(woosh.NAME, 'self', 938, 23, 938, 27),
woosh.Token(woosh.OP, '.', 938, 27, 938, 28),
woosh.Token(woosh.NAME, '_defaults', 938, 28, 938, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 938, 37, 939, 0),
woosh.Token(woosh.DEDENT, '        ', 939, 0, 939, 8),
woosh.Token(woosh.NAME, 'else', 939, 8, 939, 12),
woosh.Token(woosh.OP, ':', 939, 12, 939, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 939, 13, 940, 0),
woosh.Token(woosh.INDENT, '            ', 940, 0, 940, 12),
woosh.Token(woosh.NAME, 'try', 940, 12, 940, 15),
woosh.Token(woosh.OP, ':', 940, 15, 940, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 940, 16, 941, 0),
woosh.Token(woosh.INDENT, '                ', 941, 0, 941, 16),
woosh.Token(woosh.NAME, 'sectdict', 941, 16, 941, 24),
woosh.Token(woosh.OP, '=', 941, 25, 941, 26),
woosh.Token(woosh.NAME, 'self', 941, 27, 941, 31),
woosh.Token(woosh.OP, '.', 941, 31, 941, 32),
woosh.Token(woosh.NAME, '_sections', 941, 32, 941, 41),
woosh.Token(woosh.OP, '[', 941, 41, 941, 42),
woosh.Token(woosh.NAME, 'section', 941, 42, 941, 49),
woosh.Token(woosh.OP, ']', 941, 49, 941, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 941, 50, 942, 0),
woosh.Token(woosh.DEDENT, '            ', 942, 0, 942, 12),
woosh.Token(woosh.NAME, 'except', 942, 12, 942, 18),
woosh.Token(woosh.NAME, 'KeyError', 942, 19, 942, 27),
woosh.Token(woosh.OP, ':', 942, 27, 942, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 942, 28, 943, 0),
woosh.Token(woosh.INDENT, '                ', 943, 0, 943, 16),
woosh.Token(woosh.NAME, 'raise', 943, 16, 943, 21),
woosh.Token(woosh.NAME, 'NoSectionError', 943, 22, 943, 36),
woosh.Token(woosh.OP, '(', 943, 36, 943, 37),
woosh.Token(woosh.NAME, 'section', 943, 37, 943, 44),
woosh.Token(woosh.OP, ')', 943, 44, 943, 45),
woosh.Token(woosh.NAME, 'from', 943, 46, 943, 50),
woosh.Token(woosh.NAME, 'None', 943, 51, 943, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 943, 55, 944, 0),
woosh.Token(woosh.DEDENT, '        ', 944, 0, 944, 8),
woosh.Token(woosh.DEDENT, '', 944, 8, 944, 8),
woosh.Token(woosh.NAME, 'option', 944, 8, 944, 14),
woosh.Token(woosh.OP, '=', 944, 15, 944, 16),
woosh.Token(woosh.NAME, 'self', 944, 17, 944, 21),
woosh.Token(woosh.OP, '.', 944, 21, 944, 22),
woosh.Token(woosh.NAME, 'optionxform', 944, 22, 944, 33),
woosh.Token(woosh.OP, '(', 944, 33, 944, 34),
woosh.Token(woosh.NAME, 'option', 944, 34, 944, 40),
woosh.Token(woosh.OP, ')', 944, 40, 944, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 944, 41, 945, 0),
woosh.Token(woosh.NAME, 'existed', 945, 8, 945, 15),
woosh.Token(woosh.OP, '=', 945, 16, 945, 17),
woosh.Token(woosh.NAME, 'option', 945, 18, 945, 24),
woosh.Token(woosh.NAME, 'in', 945, 25, 945, 27),
woosh.Token(woosh.NAME, 'sectdict', 945, 28, 945, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 945, 36, 946, 0),
woosh.Token(woosh.NAME, 'if', 946, 8, 946, 10),
woosh.Token(woosh.NAME, 'existed', 946, 11, 946, 18),
woosh.Token(woosh.OP, ':', 946, 18, 946, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 946, 19, 947, 0),
woosh.Token(woosh.INDENT, '            ', 947, 0, 947, 12),
woosh.Token(woosh.NAME, 'del', 947, 12, 947, 15),
woosh.Token(woosh.NAME, 'sectdict', 947, 16, 947, 24),
woosh.Token(woosh.OP, '[', 947, 24, 947, 25),
woosh.Token(woosh.NAME, 'option', 947, 25, 947, 31),
woosh.Token(woosh.OP, ']', 947, 31, 947, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 947, 32, 948, 0),
woosh.Token(woosh.DEDENT, '        ', 948, 0, 948, 8),
woosh.Token(woosh.NAME, 'return', 948, 8, 948, 14),
woosh.Token(woosh.NAME, 'existed', 948, 15, 948, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 948, 22, 949, 0),
woosh.Token(woosh.DEDENT, '    ', 950, 0, 950, 4),
woosh.Token(woosh.NAME, 'def', 950, 4, 950, 7),
woosh.Token(woosh.NAME, 'remove_section', 950, 8, 950, 22),
woosh.Token(woosh.OP, '(', 950, 22, 950, 23),
woosh.Token(woosh.NAME, 'self', 950, 23, 950, 27),
woosh.Token(woosh.OP, ',', 950, 27, 950, 28),
woosh.Token(woosh.NAME, 'section', 950, 29, 950, 36),
woosh.Token(woosh.OP, ')', 950, 36, 950, 37),
woosh.Token(woosh.OP, ':', 950, 37, 950, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 950, 38, 951, 0),
woosh.Token(woosh.INDENT, '        ', 951, 0, 951, 8),
woosh.Token(woosh.STRING, '"""Remove a file section."""', 951, 8, 951, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 951, 36, 952, 0),
woosh.Token(woosh.NAME, 'existed', 952, 8, 952, 15),
woosh.Token(woosh.OP, '=', 952, 16, 952, 17),
woosh.Token(woosh.NAME, 'section', 952, 18, 952, 25),
woosh.Token(woosh.NAME, 'in', 952, 26, 952, 28),
woosh.Token(woosh.NAME, 'self', 952, 29, 952, 33),
woosh.Token(woosh.OP, '.', 952, 33, 952, 34),
woosh.Token(woosh.NAME, '_sections', 952, 34, 952, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 952, 43, 953, 0),
woosh.Token(woosh.NAME, 'if', 953, 8, 953, 10),
woosh.Token(woosh.NAME, 'existed', 953, 11, 953, 18),
woosh.Token(woosh.OP, ':', 953, 18, 953, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 953, 19, 954, 0),
woosh.Token(woosh.INDENT, '            ', 954, 0, 954, 12),
woosh.Token(woosh.NAME, 'del', 954, 12, 954, 15),
woosh.Token(woosh.NAME, 'self', 954, 16, 954, 20),
woosh.Token(woosh.OP, '.', 954, 20, 954, 21),
woosh.Token(woosh.NAME, '_sections', 954, 21, 954, 30),
woosh.Token(woosh.OP, '[', 954, 30, 954, 31),
woosh.Token(woosh.NAME, 'section', 954, 31, 954, 38),
woosh.Token(woosh.OP, ']', 954, 38, 954, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 954, 39, 955, 0),
woosh.Token(woosh.NAME, 'del', 955, 12, 955, 15),
woosh.Token(woosh.NAME, 'self', 955, 16, 955, 20),
woosh.Token(woosh.OP, '.', 955, 20, 955, 21),
woosh.Token(woosh.NAME, '_proxies', 955, 21, 955, 29),
woosh.Token(woosh.OP, '[', 955, 29, 955, 30),
woosh.Token(woosh.NAME, 'section', 955, 30, 955, 37),
woosh.Token(woosh.OP, ']', 955, 37, 955, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 955, 38, 956, 0),
woosh.Token(woosh.DEDENT, '        ', 956, 0, 956, 8),
woosh.Token(woosh.NAME, 'return', 956, 8, 956, 14),
woosh.Token(woosh.NAME, 'existed', 956, 15, 956, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 956, 22, 957, 0),
woosh.Token(woosh.DEDENT, '    ', 958, 0, 958, 4),
woosh.Token(woosh.NAME, 'def', 958, 4, 958, 7),
woosh.Token(woosh.NAME, '__getitem__', 958, 8, 958, 19),
woosh.Token(woosh.OP, '(', 958, 19, 958, 20),
woosh.Token(woosh.NAME, 'self', 958, 20, 958, 24),
woosh.Token(woosh.OP, ',', 958, 24, 958, 25),
woosh.Token(woosh.NAME, 'key', 958, 26, 958, 29),
woosh.Token(woosh.OP, ')', 958, 29, 958, 30),
woosh.Token(woosh.OP, ':', 958, 30, 958, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 958, 31, 959, 0),
woosh.Token(woosh.INDENT, '        ', 959, 0, 959, 8),
woosh.Token(woosh.NAME, 'if', 959, 8, 959, 10),
woosh.Token(woosh.NAME, 'key', 959, 11, 959, 14),
woosh.Token(woosh.OP, '!=', 959, 15, 959, 17),
woosh.Token(woosh.NAME, 'self', 959, 18, 959, 22),
woosh.Token(woosh.OP, '.', 959, 22, 959, 23),
woosh.Token(woosh.NAME, 'default_section', 959, 23, 959, 38),
woosh.Token(woosh.NAME, 'and', 959, 39, 959, 42),
woosh.Token(woosh.NAME, 'not', 959, 43, 959, 46),
woosh.Token(woosh.NAME, 'self', 959, 47, 959, 51),
woosh.Token(woosh.OP, '.', 959, 51, 959, 52),
woosh.Token(woosh.NAME, 'has_section', 959, 52, 959, 63),
woosh.Token(woosh.OP, '(', 959, 63, 959, 64),
woosh.Token(woosh.NAME, 'key', 959, 64, 959, 67),
woosh.Token(woosh.OP, ')', 959, 67, 959, 68),
woosh.Token(woosh.OP, ':', 959, 68, 959, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 959, 69, 960, 0),
woosh.Token(woosh.INDENT, '            ', 960, 0, 960, 12),
woosh.Token(woosh.NAME, 'raise', 960, 12, 960, 17),
woosh.Token(woosh.NAME, 'KeyError', 960, 18, 960, 26),
woosh.Token(woosh.OP, '(', 960, 26, 960, 27),
woosh.Token(woosh.NAME, 'key', 960, 27, 960, 30),
woosh.Token(woosh.OP, ')', 960, 30, 960, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 960, 31, 961, 0),
woosh.Token(woosh.DEDENT, '        ', 961, 0, 961, 8),
woosh.Token(woosh.NAME, 'return', 961, 8, 961, 14),
woosh.Token(woosh.NAME, 'self', 961, 15, 961, 19),
woosh.Token(woosh.OP, '.', 961, 19, 961, 20),
woosh.Token(woosh.NAME, '_proxies', 961, 20, 961, 28),
woosh.Token(woosh.OP, '[', 961, 28, 961, 29),
woosh.Token(woosh.NAME, 'key', 961, 29, 961, 32),
woosh.Token(woosh.OP, ']', 961, 32, 961, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 961, 33, 962, 0),
woosh.Token(woosh.DEDENT, '    ', 963, 0, 963, 4),
woosh.Token(woosh.NAME, 'def', 963, 4, 963, 7),
woosh.Token(woosh.NAME, '__setitem__', 963, 8, 963, 19),
woosh.Token(woosh.OP, '(', 963, 19, 963, 20),
woosh.Token(woosh.NAME, 'self', 963, 20, 963, 24),
woosh.Token(woosh.OP, ',', 963, 24, 963, 25),
woosh.Token(woosh.NAME, 'key', 963, 26, 963, 29),
woosh.Token(woosh.OP, ',', 963, 29, 963, 30),
woosh.Token(woosh.NAME, 'value', 963, 31, 963, 36),
woosh.Token(woosh.OP, ')', 963, 36, 963, 37),
woosh.Token(woosh.OP, ':', 963, 37, 963, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 963, 38, 964, 0),
woosh.Token(woosh.COMMENT, '# To conform with the mapping protocol, overwrites existing values in', 964, 8, 964, 77),
woosh.Token(woosh.COMMENT, '# the section.', 965, 8, 965, 22),
woosh.Token(woosh.INDENT, '        ', 966, 0, 966, 8),
woosh.Token(woosh.NAME, 'if', 966, 8, 966, 10),
woosh.Token(woosh.NAME, 'key', 966, 11, 966, 14),
woosh.Token(woosh.NAME, 'in', 966, 15, 966, 17),
woosh.Token(woosh.NAME, 'self', 966, 18, 966, 22),
woosh.Token(woosh.NAME, 'and', 966, 23, 966, 26),
woosh.Token(woosh.NAME, 'self', 966, 27, 966, 31),
woosh.Token(woosh.OP, '[', 966, 31, 966, 32),
woosh.Token(woosh.NAME, 'key', 966, 32, 966, 35),
woosh.Token(woosh.OP, ']', 966, 35, 966, 36),
woosh.Token(woosh.NAME, 'is', 966, 37, 966, 39),
woosh.Token(woosh.NAME, 'value', 966, 40, 966, 45),
woosh.Token(woosh.OP, ':', 966, 45, 966, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 966, 46, 967, 0),
woosh.Token(woosh.INDENT, '            ', 967, 0, 967, 12),
woosh.Token(woosh.NAME, 'return', 967, 12, 967, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 967, 18, 968, 0),
woosh.Token(woosh.COMMENT, '# XXX this is not atomic if read_dict fails at any point. Then again,', 968, 8, 968, 77),
woosh.Token(woosh.COMMENT, '# no update method in configparser is atomic in this implementation.', 969, 8, 969, 76),
woosh.Token(woosh.DEDENT, '        ', 970, 0, 970, 8),
woosh.Token(woosh.NAME, 'if', 970, 8, 970, 10),
woosh.Token(woosh.NAME, 'key', 970, 11, 970, 14),
woosh.Token(woosh.OP, '==', 970, 15, 970, 17),
woosh.Token(woosh.NAME, 'self', 970, 18, 970, 22),
woosh.Token(woosh.OP, '.', 970, 22, 970, 23),
woosh.Token(woosh.NAME, 'default_section', 970, 23, 970, 38),
woosh.Token(woosh.OP, ':', 970, 38, 970, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 970, 39, 971, 0),
woosh.Token(woosh.INDENT, '            ', 971, 0, 971, 12),
woosh.Token(woosh.NAME, 'self', 971, 12, 971, 16),
woosh.Token(woosh.OP, '.', 971, 16, 971, 17),
woosh.Token(woosh.NAME, '_defaults', 971, 17, 971, 26),
woosh.Token(woosh.OP, '.', 971, 26, 971, 27),
woosh.Token(woosh.NAME, 'clear', 971, 27, 971, 32),
woosh.Token(woosh.OP, '(', 971, 32, 971, 33),
woosh.Token(woosh.OP, ')', 971, 33, 971, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 971, 34, 972, 0),
woosh.Token(woosh.DEDENT, '        ', 972, 0, 972, 8),
woosh.Token(woosh.NAME, 'elif', 972, 8, 972, 12),
woosh.Token(woosh.NAME, 'key', 972, 13, 972, 16),
woosh.Token(woosh.NAME, 'in', 972, 17, 972, 19),
woosh.Token(woosh.NAME, 'self', 972, 20, 972, 24),
woosh.Token(woosh.OP, '.', 972, 24, 972, 25),
woosh.Token(woosh.NAME, '_sections', 972, 25, 972, 34),
woosh.Token(woosh.OP, ':', 972, 34, 972, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 972, 35, 973, 0),
woosh.Token(woosh.INDENT, '            ', 973, 0, 973, 12),
woosh.Token(woosh.NAME, 'self', 973, 12, 973, 16),
woosh.Token(woosh.OP, '.', 973, 16, 973, 17),
woosh.Token(woosh.NAME, '_sections', 973, 17, 973, 26),
woosh.Token(woosh.OP, '[', 973, 26, 973, 27),
woosh.Token(woosh.NAME, 'key', 973, 27, 973, 30),
woosh.Token(woosh.OP, ']', 973, 30, 973, 31),
woosh.Token(woosh.OP, '.', 973, 31, 973, 32),
woosh.Token(woosh.NAME, 'clear', 973, 32, 973, 37),
woosh.Token(woosh.OP, '(', 973, 37, 973, 38),
woosh.Token(woosh.OP, ')', 973, 38, 973, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 973, 39, 974, 0),
woosh.Token(woosh.DEDENT, '        ', 974, 0, 974, 8),
woosh.Token(woosh.NAME, 'self', 974, 8, 974, 12),
woosh.Token(woosh.OP, '.', 974, 12, 974, 13),
woosh.Token(woosh.NAME, 'read_dict', 974, 13, 974, 22),
woosh.Token(woosh.OP, '(', 974, 22, 974, 23),
woosh.Token(woosh.OP, '{', 974, 23, 974, 24),
woosh.Token(woosh.NAME, 'key', 974, 24, 974, 27),
woosh.Token(woosh.OP, ':', 974, 27, 974, 28),
woosh.Token(woosh.NAME, 'value', 974, 29, 974, 34),
woosh.Token(woosh.OP, '}', 974, 34, 974, 35),
woosh.Token(woosh.OP, ')', 974, 35, 974, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 974, 36, 975, 0),
woosh.Token(woosh.DEDENT, '    ', 976, 0, 976, 4),
woosh.Token(woosh.NAME, 'def', 976, 4, 976, 7),
woosh.Token(woosh.NAME, '__delitem__', 976, 8, 976, 19),
woosh.Token(woosh.OP, '(', 976, 19, 976, 20),
woosh.Token(woosh.NAME, 'self', 976, 20, 976, 24),
woosh.Token(woosh.OP, ',', 976, 24, 976, 25),
woosh.Token(woosh.NAME, 'key', 976, 26, 976, 29),
woosh.Token(woosh.OP, ')', 976, 29, 976, 30),
woosh.Token(woosh.OP, ':', 976, 30, 976, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 976, 31, 977, 0),
woosh.Token(woosh.INDENT, '        ', 977, 0, 977, 8),
woosh.Token(woosh.NAME, 'if', 977, 8, 977, 10),
woosh.Token(woosh.NAME, 'key', 977, 11, 977, 14),
woosh.Token(woosh.OP, '==', 977, 15, 977, 17),
woosh.Token(woosh.NAME, 'self', 977, 18, 977, 22),
woosh.Token(woosh.OP, '.', 977, 22, 977, 23),
woosh.Token(woosh.NAME, 'default_section', 977, 23, 977, 38),
woosh.Token(woosh.OP, ':', 977, 38, 977, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 977, 39, 978, 0),
woosh.Token(woosh.INDENT, '            ', 978, 0, 978, 12),
woosh.Token(woosh.NAME, 'raise', 978, 12, 978, 17),
woosh.Token(woosh.NAME, 'ValueError', 978, 18, 978, 28),
woosh.Token(woosh.OP, '(', 978, 28, 978, 29),
woosh.Token(woosh.STRING, '"Cannot remove the default section."', 978, 29, 978, 65),
woosh.Token(woosh.OP, ')', 978, 65, 978, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 978, 66, 979, 0),
woosh.Token(woosh.DEDENT, '        ', 979, 0, 979, 8),
woosh.Token(woosh.NAME, 'if', 979, 8, 979, 10),
woosh.Token(woosh.NAME, 'not', 979, 11, 979, 14),
woosh.Token(woosh.NAME, 'self', 979, 15, 979, 19),
woosh.Token(woosh.OP, '.', 979, 19, 979, 20),
woosh.Token(woosh.NAME, 'has_section', 979, 20, 979, 31),
woosh.Token(woosh.OP, '(', 979, 31, 979, 32),
woosh.Token(woosh.NAME, 'key', 979, 32, 979, 35),
woosh.Token(woosh.OP, ')', 979, 35, 979, 36),
woosh.Token(woosh.OP, ':', 979, 36, 979, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 979, 37, 980, 0),
woosh.Token(woosh.INDENT, '            ', 980, 0, 980, 12),
woosh.Token(woosh.NAME, 'raise', 980, 12, 980, 17),
woosh.Token(woosh.NAME, 'KeyError', 980, 18, 980, 26),
woosh.Token(woosh.OP, '(', 980, 26, 980, 27),
woosh.Token(woosh.NAME, 'key', 980, 27, 980, 30),
woosh.Token(woosh.OP, ')', 980, 30, 980, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 980, 31, 981, 0),
woosh.Token(woosh.DEDENT, '        ', 981, 0, 981, 8),
woosh.Token(woosh.NAME, 'self', 981, 8, 981, 12),
woosh.Token(woosh.OP, '.', 981, 12, 981, 13),
woosh.Token(woosh.NAME, 'remove_section', 981, 13, 981, 27),
woosh.Token(woosh.OP, '(', 981, 27, 981, 28),
woosh.Token(woosh.NAME, 'key', 981, 28, 981, 31),
woosh.Token(woosh.OP, ')', 981, 31, 981, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 981, 32, 982, 0),
woosh.Token(woosh.DEDENT, '    ', 983, 0, 983, 4),
woosh.Token(woosh.NAME, 'def', 983, 4, 983, 7),
woosh.Token(woosh.NAME, '__contains__', 983, 8, 983, 20),
woosh.Token(woosh.OP, '(', 983, 20, 983, 21),
woosh.Token(woosh.NAME, 'self', 983, 21, 983, 25),
woosh.Token(woosh.OP, ',', 983, 25, 983, 26),
woosh.Token(woosh.NAME, 'key', 983, 27, 983, 30),
woosh.Token(woosh.OP, ')', 983, 30, 983, 31),
woosh.Token(woosh.OP, ':', 983, 31, 983, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 983, 32, 984, 0),
woosh.Token(woosh.INDENT, '        ', 984, 0, 984, 8),
woosh.Token(woosh.NAME, 'return', 984, 8, 984, 14),
woosh.Token(woosh.NAME, 'key', 984, 15, 984, 18),
woosh.Token(woosh.OP, '==', 984, 19, 984, 21),
woosh.Token(woosh.NAME, 'self', 984, 22, 984, 26),
woosh.Token(woosh.OP, '.', 984, 26, 984, 27),
woosh.Token(woosh.NAME, 'default_section', 984, 27, 984, 42),
woosh.Token(woosh.NAME, 'or', 984, 43, 984, 45),
woosh.Token(woosh.NAME, 'self', 984, 46, 984, 50),
woosh.Token(woosh.OP, '.', 984, 50, 984, 51),
woosh.Token(woosh.NAME, 'has_section', 984, 51, 984, 62),
woosh.Token(woosh.OP, '(', 984, 62, 984, 63),
woosh.Token(woosh.NAME, 'key', 984, 63, 984, 66),
woosh.Token(woosh.OP, ')', 984, 66, 984, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 984, 67, 985, 0),
woosh.Token(woosh.DEDENT, '    ', 986, 0, 986, 4),
woosh.Token(woosh.NAME, 'def', 986, 4, 986, 7),
woosh.Token(woosh.NAME, '__len__', 986, 8, 986, 15),
woosh.Token(woosh.OP, '(', 986, 15, 986, 16),
woosh.Token(woosh.NAME, 'self', 986, 16, 986, 20),
woosh.Token(woosh.OP, ')', 986, 20, 986, 21),
woosh.Token(woosh.OP, ':', 986, 21, 986, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 986, 22, 987, 0),
woosh.Token(woosh.INDENT, '        ', 987, 0, 987, 8),
woosh.Token(woosh.NAME, 'return', 987, 8, 987, 14),
woosh.Token(woosh.NAME, 'len', 987, 15, 987, 18),
woosh.Token(woosh.OP, '(', 987, 18, 987, 19),
woosh.Token(woosh.NAME, 'self', 987, 19, 987, 23),
woosh.Token(woosh.OP, '.', 987, 23, 987, 24),
woosh.Token(woosh.NAME, '_sections', 987, 24, 987, 33),
woosh.Token(woosh.OP, ')', 987, 33, 987, 34),
woosh.Token(woosh.OP, '+', 987, 35, 987, 36),
woosh.Token(woosh.NUMBER, '1', 987, 37, 987, 38),
woosh.Token(woosh.COMMENT, '# the default section', 987, 39, 987, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 987, 60, 988, 0),
woosh.Token(woosh.DEDENT, '    ', 989, 0, 989, 4),
woosh.Token(woosh.NAME, 'def', 989, 4, 989, 7),
woosh.Token(woosh.NAME, '__iter__', 989, 8, 989, 16),
woosh.Token(woosh.OP, '(', 989, 16, 989, 17),
woosh.Token(woosh.NAME, 'self', 989, 17, 989, 21),
woosh.Token(woosh.OP, ')', 989, 21, 989, 22),
woosh.Token(woosh.OP, ':', 989, 22, 989, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 989, 23, 990, 0),
woosh.Token(woosh.COMMENT, '# XXX does it break when underlying container state changed?', 990, 8, 990, 68),
woosh.Token(woosh.INDENT, '        ', 991, 0, 991, 8),
woosh.Token(woosh.NAME, 'return', 991, 8, 991, 14),
woosh.Token(woosh.NAME, 'itertools', 991, 15, 991, 24),
woosh.Token(woosh.OP, '.', 991, 24, 991, 25),
woosh.Token(woosh.NAME, 'chain', 991, 25, 991, 30),
woosh.Token(woosh.OP, '(', 991, 30, 991, 31),
woosh.Token(woosh.OP, '(', 991, 31, 991, 32),
woosh.Token(woosh.NAME, 'self', 991, 32, 991, 36),
woosh.Token(woosh.OP, '.', 991, 36, 991, 37),
woosh.Token(woosh.NAME, 'default_section', 991, 37, 991, 52),
woosh.Token(woosh.OP, ',', 991, 52, 991, 53),
woosh.Token(woosh.OP, ')', 991, 53, 991, 54),
woosh.Token(woosh.OP, ',', 991, 54, 991, 55),
woosh.Token(woosh.NAME, 'self', 991, 56, 991, 60),
woosh.Token(woosh.OP, '.', 991, 60, 991, 61),
woosh.Token(woosh.NAME, '_sections', 991, 61, 991, 70),
woosh.Token(woosh.OP, '.', 991, 70, 991, 71),
woosh.Token(woosh.NAME, 'keys', 991, 71, 991, 75),
woosh.Token(woosh.OP, '(', 991, 75, 991, 76),
woosh.Token(woosh.OP, ')', 991, 76, 991, 77),
woosh.Token(woosh.OP, ')', 991, 77, 991, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 991, 78, 992, 0),
woosh.Token(woosh.DEDENT, '    ', 993, 0, 993, 4),
woosh.Token(woosh.NAME, 'def', 993, 4, 993, 7),
woosh.Token(woosh.NAME, '_read', 993, 8, 993, 13),
woosh.Token(woosh.OP, '(', 993, 13, 993, 14),
woosh.Token(woosh.NAME, 'self', 993, 14, 993, 18),
woosh.Token(woosh.OP, ',', 993, 18, 993, 19),
woosh.Token(woosh.NAME, 'fp', 993, 20, 993, 22),
woosh.Token(woosh.OP, ',', 993, 22, 993, 23),
woosh.Token(woosh.NAME, 'fpname', 993, 24, 993, 30),
woosh.Token(woosh.OP, ')', 993, 30, 993, 31),
woosh.Token(woosh.OP, ':', 993, 31, 993, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 993, 32, 994, 0),
woosh.Token(woosh.INDENT, '        ', 994, 0, 994, 8),
woosh.Token(woosh.STRING, '"""Parse a sectioned configuration file.\r\n\r\n        Each section in a configuration file contains a header, indicated by\r\n        a name in square brackets (`[]\'), plus key/value options, indicated by\r\n        `name\' and `value\' delimited with a specific substring (`=\' or `:\' by\r\n        default).\r\n\r\n        Values can span multiple lines, as long as they are indented deeper\r\n        than the first line of the value. Depending on the parser\'s mode, blank\r\n        lines may be treated as parts of multiline values or ignored.\r\n\r\n        Configuration files may include comments, prefixed by specific\r\n        characters (`#\' and `;\' by default). Comments may appear on their own\r\n        in an otherwise empty line or may be entered in lines holding values or\r\n        section names.\r\n        """', 994, 8, 1009, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1009, 11, 1010, 0),
woosh.Token(woosh.NAME, 'elements_added', 1010, 8, 1010, 22),
woosh.Token(woosh.OP, '=', 1010, 23, 1010, 24),
woosh.Token(woosh.NAME, 'set', 1010, 25, 1010, 28),
woosh.Token(woosh.OP, '(', 1010, 28, 1010, 29),
woosh.Token(woosh.OP, ')', 1010, 29, 1010, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1010, 30, 1011, 0),
woosh.Token(woosh.NAME, 'cursect', 1011, 8, 1011, 15),
woosh.Token(woosh.OP, '=', 1011, 16, 1011, 17),
woosh.Token(woosh.NAME, 'None', 1011, 18, 1011, 22),
woosh.Token(woosh.COMMENT, '# None, or a dictionary', 1011, 46, 1011, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1011, 69, 1012, 0),
woosh.Token(woosh.NAME, 'sectname', 1012, 8, 1012, 16),
woosh.Token(woosh.OP, '=', 1012, 17, 1012, 18),
woosh.Token(woosh.NAME, 'None', 1012, 19, 1012, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1012, 23, 1013, 0),
woosh.Token(woosh.NAME, 'optname', 1013, 8, 1013, 15),
woosh.Token(woosh.OP, '=', 1013, 16, 1013, 17),
woosh.Token(woosh.NAME, 'None', 1013, 18, 1013, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1013, 22, 1014, 0),
woosh.Token(woosh.NAME, 'lineno', 1014, 8, 1014, 14),
woosh.Token(woosh.OP, '=', 1014, 15, 1014, 16),
woosh.Token(woosh.NUMBER, '0', 1014, 17, 1014, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1014, 18, 1015, 0),
woosh.Token(woosh.NAME, 'indent_level', 1015, 8, 1015, 20),
woosh.Token(woosh.OP, '=', 1015, 21, 1015, 22),
woosh.Token(woosh.NUMBER, '0', 1015, 23, 1015, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1015, 24, 1016, 0),
woosh.Token(woosh.NAME, 'e', 1016, 8, 1016, 9),
woosh.Token(woosh.OP, '=', 1016, 10, 1016, 11),
woosh.Token(woosh.NAME, 'None', 1016, 12, 1016, 16),
woosh.Token(woosh.COMMENT, '# None, or an exception', 1016, 46, 1016, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 1016, 69, 1017, 0),
woosh.Token(woosh.NAME, 'for', 1017, 8, 1017, 11),
woosh.Token(woosh.NAME, 'lineno', 1017, 12, 1017, 18),
woosh.Token(woosh.OP, ',', 1017, 18, 1017, 19),
woosh.Token(woosh.NAME, 'line', 1017, 20, 1017, 24),
woosh.Token(woosh.NAME, 'in', 1017, 25, 1017, 27),
woosh.Token(woosh.NAME, 'enumerate', 1017, 28, 1017, 37),
woosh.Token(woosh.OP, '(', 1017, 37, 1017, 38),
woosh.Token(woosh.NAME, 'fp', 1017, 38, 1017, 40),
woosh.Token(woosh.OP, ',', 1017, 40, 1017, 41),
woosh.Token(woosh.NAME, 'start', 1017, 42, 1017, 47),
woosh.Token(woosh.OP, '=', 1017, 47, 1017, 48),
woosh.Token(woosh.NUMBER, '1', 1017, 48, 1017, 49),
woosh.Token(woosh.OP, ')', 1017, 49, 1017, 50),
woosh.Token(woosh.OP, ':', 1017, 50, 1017, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1017, 51, 1018, 0),
woosh.Token(woosh.INDENT, '            ', 1018, 0, 1018, 12),
woosh.Token(woosh.NAME, 'comment_start', 1018, 12, 1018, 25),
woosh.Token(woosh.OP, '=', 1018, 26, 1018, 27),
woosh.Token(woosh.NAME, 'sys', 1018, 28, 1018, 31),
woosh.Token(woosh.OP, '.', 1018, 31, 1018, 32),
woosh.Token(woosh.NAME, 'maxsize', 1018, 32, 1018, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1018, 39, 1019, 0),
woosh.Token(woosh.COMMENT, '# strip inline comments', 1019, 12, 1019, 35),
woosh.Token(woosh.NAME, 'inline_prefixes', 1020, 12, 1020, 27),
woosh.Token(woosh.OP, '=', 1020, 28, 1020, 29),
woosh.Token(woosh.OP, '{', 1020, 30, 1020, 31),
woosh.Token(woosh.NAME, 'p', 1020, 31, 1020, 32),
woosh.Token(woosh.OP, ':', 1020, 32, 1020, 33),
woosh.Token(woosh.OP, '-', 1020, 34, 1020, 35),
woosh.Token(woosh.NUMBER, '1', 1020, 35, 1020, 36),
woosh.Token(woosh.NAME, 'for', 1020, 37, 1020, 40),
woosh.Token(woosh.NAME, 'p', 1020, 41, 1020, 42),
woosh.Token(woosh.NAME, 'in', 1020, 43, 1020, 45),
woosh.Token(woosh.NAME, 'self', 1020, 46, 1020, 50),
woosh.Token(woosh.OP, '.', 1020, 50, 1020, 51),
woosh.Token(woosh.NAME, '_inline_comment_prefixes', 1020, 51, 1020, 75),
woosh.Token(woosh.OP, '}', 1020, 75, 1020, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1020, 76, 1021, 0),
woosh.Token(woosh.NAME, 'while', 1021, 12, 1021, 17),
woosh.Token(woosh.NAME, 'comment_start', 1021, 18, 1021, 31),
woosh.Token(woosh.OP, '==', 1021, 32, 1021, 34),
woosh.Token(woosh.NAME, 'sys', 1021, 35, 1021, 38),
woosh.Token(woosh.OP, '.', 1021, 38, 1021, 39),
woosh.Token(woosh.NAME, 'maxsize', 1021, 39, 1021, 46),
woosh.Token(woosh.NAME, 'and', 1021, 47, 1021, 50),
woosh.Token(woosh.NAME, 'inline_prefixes', 1021, 51, 1021, 66),
woosh.Token(woosh.OP, ':', 1021, 66, 1021, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1021, 67, 1022, 0),
woosh.Token(woosh.INDENT, '                ', 1022, 0, 1022, 16),
woosh.Token(woosh.NAME, 'next_prefixes', 1022, 16, 1022, 29),
woosh.Token(woosh.OP, '=', 1022, 30, 1022, 31),
woosh.Token(woosh.OP, '{', 1022, 32, 1022, 33),
woosh.Token(woosh.OP, '}', 1022, 33, 1022, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1022, 34, 1023, 0),
woosh.Token(woosh.NAME, 'for', 1023, 16, 1023, 19),
woosh.Token(woosh.NAME, 'prefix', 1023, 20, 1023, 26),
woosh.Token(woosh.OP, ',', 1023, 26, 1023, 27),
woosh.Token(woosh.NAME, 'index', 1023, 28, 1023, 33),
woosh.Token(woosh.NAME, 'in', 1023, 34, 1023, 36),
woosh.Token(woosh.NAME, 'inline_prefixes', 1023, 37, 1023, 52),
woosh.Token(woosh.OP, '.', 1023, 52, 1023, 53),
woosh.Token(woosh.NAME, 'items', 1023, 53, 1023, 58),
woosh.Token(woosh.OP, '(', 1023, 58, 1023, 59),
woosh.Token(woosh.OP, ')', 1023, 59, 1023, 60),
woosh.Token(woosh.OP, ':', 1023, 60, 1023, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1023, 61, 1024, 0),
woosh.Token(woosh.INDENT, '                    ', 1024, 0, 1024, 20),
woosh.Token(woosh.NAME, 'index', 1024, 20, 1024, 25),
woosh.Token(woosh.OP, '=', 1024, 26, 1024, 27),
woosh.Token(woosh.NAME, 'line', 1024, 28, 1024, 32),
woosh.Token(woosh.OP, '.', 1024, 32, 1024, 33),
woosh.Token(woosh.NAME, 'find', 1024, 33, 1024, 37),
woosh.Token(woosh.OP, '(', 1024, 37, 1024, 38),
woosh.Token(woosh.NAME, 'prefix', 1024, 38, 1024, 44),
woosh.Token(woosh.OP, ',', 1024, 44, 1024, 45),
woosh.Token(woosh.NAME, 'index', 1024, 46, 1024, 51),
woosh.Token(woosh.OP, '+', 1024, 51, 1024, 52),
woosh.Token(woosh.NUMBER, '1', 1024, 52, 1024, 53),
woosh.Token(woosh.OP, ')', 1024, 53, 1024, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1024, 54, 1025, 0),
woosh.Token(woosh.NAME, 'if', 1025, 20, 1025, 22),
woosh.Token(woosh.NAME, 'index', 1025, 23, 1025, 28),
woosh.Token(woosh.OP, '==', 1025, 29, 1025, 31),
woosh.Token(woosh.OP, '-', 1025, 32, 1025, 33),
woosh.Token(woosh.NUMBER, '1', 1025, 33, 1025, 34),
woosh.Token(woosh.OP, ':', 1025, 34, 1025, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1025, 35, 1026, 0),
woosh.Token(woosh.INDENT, '                        ', 1026, 0, 1026, 24),
woosh.Token(woosh.NAME, 'continue', 1026, 24, 1026, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1026, 32, 1027, 0),
woosh.Token(woosh.DEDENT, '                    ', 1027, 0, 1027, 20),
woosh.Token(woosh.NAME, 'next_prefixes', 1027, 20, 1027, 33),
woosh.Token(woosh.OP, '[', 1027, 33, 1027, 34),
woosh.Token(woosh.NAME, 'prefix', 1027, 34, 1027, 40),
woosh.Token(woosh.OP, ']', 1027, 40, 1027, 41),
woosh.Token(woosh.OP, '=', 1027, 42, 1027, 43),
woosh.Token(woosh.NAME, 'index', 1027, 44, 1027, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1027, 49, 1028, 0),
woosh.Token(woosh.NAME, 'if', 1028, 20, 1028, 22),
woosh.Token(woosh.NAME, 'index', 1028, 23, 1028, 28),
woosh.Token(woosh.OP, '==', 1028, 29, 1028, 31),
woosh.Token(woosh.NUMBER, '0', 1028, 32, 1028, 33),
woosh.Token(woosh.NAME, 'or', 1028, 34, 1028, 36),
woosh.Token(woosh.OP, '(', 1028, 37, 1028, 38),
woosh.Token(woosh.NAME, 'index', 1028, 38, 1028, 43),
woosh.Token(woosh.OP, '>', 1028, 44, 1028, 45),
woosh.Token(woosh.NUMBER, '0', 1028, 46, 1028, 47),
woosh.Token(woosh.NAME, 'and', 1028, 48, 1028, 51),
woosh.Token(woosh.NAME, 'line', 1028, 52, 1028, 56),
woosh.Token(woosh.OP, '[', 1028, 56, 1028, 57),
woosh.Token(woosh.NAME, 'index', 1028, 57, 1028, 62),
woosh.Token(woosh.OP, '-', 1028, 62, 1028, 63),
woosh.Token(woosh.NUMBER, '1', 1028, 63, 1028, 64),
woosh.Token(woosh.OP, ']', 1028, 64, 1028, 65),
woosh.Token(woosh.OP, '.', 1028, 65, 1028, 66),
woosh.Token(woosh.NAME, 'isspace', 1028, 66, 1028, 73),
woosh.Token(woosh.OP, '(', 1028, 73, 1028, 74),
woosh.Token(woosh.OP, ')', 1028, 74, 1028, 75),
woosh.Token(woosh.OP, ')', 1028, 75, 1028, 76),
woosh.Token(woosh.OP, ':', 1028, 76, 1028, 77),
woosh.Token(woosh.NEWLINE, '\r\n', 1028, 77, 1029, 0),
woosh.Token(woosh.INDENT, '                        ', 1029, 0, 1029, 24),
woosh.Token(woosh.NAME, 'comment_start', 1029, 24, 1029, 37),
woosh.Token(woosh.OP, '=', 1029, 38, 1029, 39),
woosh.Token(woosh.NAME, 'min', 1029, 40, 1029, 43),
woosh.Token(woosh.OP, '(', 1029, 43, 1029, 44),
woosh.Token(woosh.NAME, 'comment_start', 1029, 44, 1029, 57),
woosh.Token(woosh.OP, ',', 1029, 57, 1029, 58),
woosh.Token(woosh.NAME, 'index', 1029, 59, 1029, 64),
woosh.Token(woosh.OP, ')', 1029, 64, 1029, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 1029, 65, 1030, 0),
woosh.Token(woosh.DEDENT, '                ', 1030, 0, 1030, 16),
woosh.Token(woosh.DEDENT, '', 1030, 16, 1030, 16),
woosh.Token(woosh.NAME, 'inline_prefixes', 1030, 16, 1030, 31),
woosh.Token(woosh.OP, '=', 1030, 32, 1030, 33),
woosh.Token(woosh.NAME, 'next_prefixes', 1030, 34, 1030, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1030, 47, 1031, 0),
woosh.Token(woosh.COMMENT, '# strip full line comments', 1031, 12, 1031, 38),
woosh.Token(woosh.DEDENT, '            ', 1032, 0, 1032, 12),
woosh.Token(woosh.NAME, 'for', 1032, 12, 1032, 15),
woosh.Token(woosh.NAME, 'prefix', 1032, 16, 1032, 22),
woosh.Token(woosh.NAME, 'in', 1032, 23, 1032, 25),
woosh.Token(woosh.NAME, 'self', 1032, 26, 1032, 30),
woosh.Token(woosh.OP, '.', 1032, 30, 1032, 31),
woosh.Token(woosh.NAME, '_comment_prefixes', 1032, 31, 1032, 48),
woosh.Token(woosh.OP, ':', 1032, 48, 1032, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1032, 49, 1033, 0),
woosh.Token(woosh.INDENT, '                ', 1033, 0, 1033, 16),
woosh.Token(woosh.NAME, 'if', 1033, 16, 1033, 18),
woosh.Token(woosh.NAME, 'line', 1033, 19, 1033, 23),
woosh.Token(woosh.OP, '.', 1033, 23, 1033, 24),
woosh.Token(woosh.NAME, 'strip', 1033, 24, 1033, 29),
woosh.Token(woosh.OP, '(', 1033, 29, 1033, 30),
woosh.Token(woosh.OP, ')', 1033, 30, 1033, 31),
woosh.Token(woosh.OP, '.', 1033, 31, 1033, 32),
woosh.Token(woosh.NAME, 'startswith', 1033, 32, 1033, 42),
woosh.Token(woosh.OP, '(', 1033, 42, 1033, 43),
woosh.Token(woosh.NAME, 'prefix', 1033, 43, 1033, 49),
woosh.Token(woosh.OP, ')', 1033, 49, 1033, 50),
woosh.Token(woosh.OP, ':', 1033, 50, 1033, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1033, 51, 1034, 0),
woosh.Token(woosh.INDENT, '                    ', 1034, 0, 1034, 20),
woosh.Token(woosh.NAME, 'comment_start', 1034, 20, 1034, 33),
woosh.Token(woosh.OP, '=', 1034, 34, 1034, 35),
woosh.Token(woosh.NUMBER, '0', 1034, 36, 1034, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1034, 37, 1035, 0),
woosh.Token(woosh.NAME, 'break', 1035, 20, 1035, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1035, 25, 1036, 0),
woosh.Token(woosh.DEDENT, '            ', 1036, 0, 1036, 12),
woosh.Token(woosh.DEDENT, '', 1036, 12, 1036, 12),
woosh.Token(woosh.NAME, 'if', 1036, 12, 1036, 14),
woosh.Token(woosh.NAME, 'comment_start', 1036, 15, 1036, 28),
woosh.Token(woosh.OP, '==', 1036, 29, 1036, 31),
woosh.Token(woosh.NAME, 'sys', 1036, 32, 1036, 35),
woosh.Token(woosh.OP, '.', 1036, 35, 1036, 36),
woosh.Token(woosh.NAME, 'maxsize', 1036, 36, 1036, 43),
woosh.Token(woosh.OP, ':', 1036, 43, 1036, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1036, 44, 1037, 0),
woosh.Token(woosh.INDENT, '                ', 1037, 0, 1037, 16),
woosh.Token(woosh.NAME, 'comment_start', 1037, 16, 1037, 29),
woosh.Token(woosh.OP, '=', 1037, 30, 1037, 31),
woosh.Token(woosh.NAME, 'None', 1037, 32, 1037, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1037, 36, 1038, 0),
woosh.Token(woosh.DEDENT, '            ', 1038, 0, 1038, 12),
woosh.Token(woosh.NAME, 'value', 1038, 12, 1038, 17),
woosh.Token(woosh.OP, '=', 1038, 18, 1038, 19),
woosh.Token(woosh.NAME, 'line', 1038, 20, 1038, 24),
woosh.Token(woosh.OP, '[', 1038, 24, 1038, 25),
woosh.Token(woosh.OP, ':', 1038, 25, 1038, 26),
woosh.Token(woosh.NAME, 'comment_start', 1038, 26, 1038, 39),
woosh.Token(woosh.OP, ']', 1038, 39, 1038, 40),
woosh.Token(woosh.OP, '.', 1038, 40, 1038, 41),
woosh.Token(woosh.NAME, 'strip', 1038, 41, 1038, 46),
woosh.Token(woosh.OP, '(', 1038, 46, 1038, 47),
woosh.Token(woosh.OP, ')', 1038, 47, 1038, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1038, 48, 1039, 0),
woosh.Token(woosh.NAME, 'if', 1039, 12, 1039, 14),
woosh.Token(woosh.NAME, 'not', 1039, 15, 1039, 18),
woosh.Token(woosh.NAME, 'value', 1039, 19, 1039, 24),
woosh.Token(woosh.OP, ':', 1039, 24, 1039, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1039, 25, 1040, 0),
woosh.Token(woosh.INDENT, '                ', 1040, 0, 1040, 16),
woosh.Token(woosh.NAME, 'if', 1040, 16, 1040, 18),
woosh.Token(woosh.NAME, 'self', 1040, 19, 1040, 23),
woosh.Token(woosh.OP, '.', 1040, 23, 1040, 24),
woosh.Token(woosh.NAME, '_empty_lines_in_values', 1040, 24, 1040, 46),
woosh.Token(woosh.OP, ':', 1040, 46, 1040, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1040, 47, 1041, 0),
woosh.Token(woosh.COMMENT, '# add empty line to the value, but only if there was no', 1041, 20, 1041, 75),
woosh.Token(woosh.COMMENT, '# comment on the line', 1042, 20, 1042, 41),
woosh.Token(woosh.INDENT, '                    ', 1043, 0, 1043, 20),
woosh.Token(woosh.NAME, 'if', 1043, 20, 1043, 22),
woosh.Token(woosh.OP, '(', 1043, 23, 1043, 24),
woosh.Token(woosh.NAME, 'comment_start', 1043, 24, 1043, 37),
woosh.Token(woosh.NAME, 'is', 1043, 38, 1043, 40),
woosh.Token(woosh.NAME, 'None', 1043, 41, 1043, 45),
woosh.Token(woosh.NAME, 'and', 1043, 46, 1043, 49),
woosh.Token(woosh.NAME, 'cursect', 1044, 24, 1044, 31),
woosh.Token(woosh.NAME, 'is', 1044, 32, 1044, 34),
woosh.Token(woosh.NAME, 'not', 1044, 35, 1044, 38),
woosh.Token(woosh.NAME, 'None', 1044, 39, 1044, 43),
woosh.Token(woosh.NAME, 'and', 1044, 44, 1044, 47),
woosh.Token(woosh.NAME, 'optname', 1045, 24, 1045, 31),
woosh.Token(woosh.NAME, 'and', 1045, 32, 1045, 35),
woosh.Token(woosh.NAME, 'cursect', 1046, 24, 1046, 31),
woosh.Token(woosh.OP, '[', 1046, 31, 1046, 32),
woosh.Token(woosh.NAME, 'optname', 1046, 32, 1046, 39),
woosh.Token(woosh.OP, ']', 1046, 39, 1046, 40),
woosh.Token(woosh.NAME, 'is', 1046, 41, 1046, 43),
woosh.Token(woosh.NAME, 'not', 1046, 44, 1046, 47),
woosh.Token(woosh.NAME, 'None', 1046, 48, 1046, 52),
woosh.Token(woosh.OP, ')', 1046, 52, 1046, 53),
woosh.Token(woosh.OP, ':', 1046, 53, 1046, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1046, 54, 1047, 0),
woosh.Token(woosh.INDENT, '                        ', 1047, 0, 1047, 24),
woosh.Token(woosh.NAME, 'cursect', 1047, 24, 1047, 31),
woosh.Token(woosh.OP, '[', 1047, 31, 1047, 32),
woosh.Token(woosh.NAME, 'optname', 1047, 32, 1047, 39),
woosh.Token(woosh.OP, ']', 1047, 39, 1047, 40),
woosh.Token(woosh.OP, '.', 1047, 40, 1047, 41),
woosh.Token(woosh.NAME, 'append', 1047, 41, 1047, 47),
woosh.Token(woosh.OP, '(', 1047, 47, 1047, 48),
woosh.Token(woosh.STRING, "''", 1047, 48, 1047, 50),
woosh.Token(woosh.OP, ')', 1047, 50, 1047, 51),
woosh.Token(woosh.COMMENT, '# newlines added at join', 1047, 52, 1047, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1047, 76, 1048, 0),
woosh.Token(woosh.DEDENT, '                ', 1048, 0, 1048, 16),
woosh.Token(woosh.DEDENT, '', 1048, 16, 1048, 16),
woosh.Token(woosh.NAME, 'else', 1048, 16, 1048, 20),
woosh.Token(woosh.OP, ':', 1048, 20, 1048, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1048, 21, 1049, 0),
woosh.Token(woosh.COMMENT, '# empty line marks end of value', 1049, 20, 1049, 51),
woosh.Token(woosh.INDENT, '                    ', 1050, 0, 1050, 20),
woosh.Token(woosh.NAME, 'indent_level', 1050, 20, 1050, 32),
woosh.Token(woosh.OP, '=', 1050, 33, 1050, 34),
woosh.Token(woosh.NAME, 'sys', 1050, 35, 1050, 38),
woosh.Token(woosh.OP, '.', 1050, 38, 1050, 39),
woosh.Token(woosh.NAME, 'maxsize', 1050, 39, 1050, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1050, 46, 1051, 0),
woosh.Token(woosh.DEDENT, '                ', 1051, 0, 1051, 16),
woosh.Token(woosh.NAME, 'continue', 1051, 16, 1051, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1051, 24, 1052, 0),
woosh.Token(woosh.COMMENT, '# continuation line?', 1052, 12, 1052, 32),
woosh.Token(woosh.DEDENT, '            ', 1053, 0, 1053, 12),
woosh.Token(woosh.NAME, 'first_nonspace', 1053, 12, 1053, 26),
woosh.Token(woosh.OP, '=', 1053, 27, 1053, 28),
woosh.Token(woosh.NAME, 'self', 1053, 29, 1053, 33),
woosh.Token(woosh.OP, '.', 1053, 33, 1053, 34),
woosh.Token(woosh.NAME, 'NONSPACECRE', 1053, 34, 1053, 45),
woosh.Token(woosh.OP, '.', 1053, 45, 1053, 46),
woosh.Token(woosh.NAME, 'search', 1053, 46, 1053, 52),
woosh.Token(woosh.OP, '(', 1053, 52, 1053, 53),
woosh.Token(woosh.NAME, 'line', 1053, 53, 1053, 57),
woosh.Token(woosh.OP, ')', 1053, 57, 1053, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1053, 58, 1054, 0),
woosh.Token(woosh.NAME, 'cur_indent_level', 1054, 12, 1054, 28),
woosh.Token(woosh.OP, '=', 1054, 29, 1054, 30),
woosh.Token(woosh.NAME, 'first_nonspace', 1054, 31, 1054, 45),
woosh.Token(woosh.OP, '.', 1054, 45, 1054, 46),
woosh.Token(woosh.NAME, 'start', 1054, 46, 1054, 51),
woosh.Token(woosh.OP, '(', 1054, 51, 1054, 52),
woosh.Token(woosh.OP, ')', 1054, 52, 1054, 53),
woosh.Token(woosh.NAME, 'if', 1054, 54, 1054, 56),
woosh.Token(woosh.NAME, 'first_nonspace', 1054, 57, 1054, 71),
woosh.Token(woosh.NAME, 'else', 1054, 72, 1054, 76),
woosh.Token(woosh.NUMBER, '0', 1054, 77, 1054, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1054, 78, 1055, 0),
woosh.Token(woosh.NAME, 'if', 1055, 12, 1055, 14),
woosh.Token(woosh.OP, '(', 1055, 15, 1055, 16),
woosh.Token(woosh.NAME, 'cursect', 1055, 16, 1055, 23),
woosh.Token(woosh.NAME, 'is', 1055, 24, 1055, 26),
woosh.Token(woosh.NAME, 'not', 1055, 27, 1055, 30),
woosh.Token(woosh.NAME, 'None', 1055, 31, 1055, 35),
woosh.Token(woosh.NAME, 'and', 1055, 36, 1055, 39),
woosh.Token(woosh.NAME, 'optname', 1055, 40, 1055, 47),
woosh.Token(woosh.NAME, 'and', 1055, 48, 1055, 51),
woosh.Token(woosh.NAME, 'cur_indent_level', 1056, 16, 1056, 32),
woosh.Token(woosh.OP, '>', 1056, 33, 1056, 34),
woosh.Token(woosh.NAME, 'indent_level', 1056, 35, 1056, 47),
woosh.Token(woosh.OP, ')', 1056, 47, 1056, 48),
woosh.Token(woosh.OP, ':', 1056, 48, 1056, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1056, 49, 1057, 0),
woosh.Token(woosh.INDENT, '                ', 1057, 0, 1057, 16),
woosh.Token(woosh.NAME, 'cursect', 1057, 16, 1057, 23),
woosh.Token(woosh.OP, '[', 1057, 23, 1057, 24),
woosh.Token(woosh.NAME, 'optname', 1057, 24, 1057, 31),
woosh.Token(woosh.OP, ']', 1057, 31, 1057, 32),
woosh.Token(woosh.OP, '.', 1057, 32, 1057, 33),
woosh.Token(woosh.NAME, 'append', 1057, 33, 1057, 39),
woosh.Token(woosh.OP, '(', 1057, 39, 1057, 40),
woosh.Token(woosh.NAME, 'value', 1057, 40, 1057, 45),
woosh.Token(woosh.OP, ')', 1057, 45, 1057, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1057, 46, 1058, 0),
woosh.Token(woosh.COMMENT, '# a section header or option header?', 1058, 12, 1058, 48),
woosh.Token(woosh.DEDENT, '            ', 1059, 0, 1059, 12),
woosh.Token(woosh.NAME, 'else', 1059, 12, 1059, 16),
woosh.Token(woosh.OP, ':', 1059, 16, 1059, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 1059, 17, 1060, 0),
woosh.Token(woosh.INDENT, '                ', 1060, 0, 1060, 16),
woosh.Token(woosh.NAME, 'indent_level', 1060, 16, 1060, 28),
woosh.Token(woosh.OP, '=', 1060, 29, 1060, 30),
woosh.Token(woosh.NAME, 'cur_indent_level', 1060, 31, 1060, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1060, 47, 1061, 0),
woosh.Token(woosh.COMMENT, '# is it a section header?', 1061, 16, 1061, 41),
woosh.Token(woosh.NAME, 'mo', 1062, 16, 1062, 18),
woosh.Token(woosh.OP, '=', 1062, 19, 1062, 20),
woosh.Token(woosh.NAME, 'self', 1062, 21, 1062, 25),
woosh.Token(woosh.OP, '.', 1062, 25, 1062, 26),
woosh.Token(woosh.NAME, 'SECTCRE', 1062, 26, 1062, 33),
woosh.Token(woosh.OP, '.', 1062, 33, 1062, 34),
woosh.Token(woosh.NAME, 'match', 1062, 34, 1062, 39),
woosh.Token(woosh.OP, '(', 1062, 39, 1062, 40),
woosh.Token(woosh.NAME, 'value', 1062, 40, 1062, 45),
woosh.Token(woosh.OP, ')', 1062, 45, 1062, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1062, 46, 1063, 0),
woosh.Token(woosh.NAME, 'if', 1063, 16, 1063, 18),
woosh.Token(woosh.NAME, 'mo', 1063, 19, 1063, 21),
woosh.Token(woosh.OP, ':', 1063, 21, 1063, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1063, 22, 1064, 0),
woosh.Token(woosh.INDENT, '                    ', 1064, 0, 1064, 20),
woosh.Token(woosh.NAME, 'sectname', 1064, 20, 1064, 28),
woosh.Token(woosh.OP, '=', 1064, 29, 1064, 30),
woosh.Token(woosh.NAME, 'mo', 1064, 31, 1064, 33),
woosh.Token(woosh.OP, '.', 1064, 33, 1064, 34),
woosh.Token(woosh.NAME, 'group', 1064, 34, 1064, 39),
woosh.Token(woosh.OP, '(', 1064, 39, 1064, 40),
woosh.Token(woosh.STRING, "'header'", 1064, 40, 1064, 48),
woosh.Token(woosh.OP, ')', 1064, 48, 1064, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1064, 49, 1065, 0),
woosh.Token(woosh.NAME, 'if', 1065, 20, 1065, 22),
woosh.Token(woosh.NAME, 'sectname', 1065, 23, 1065, 31),
woosh.Token(woosh.NAME, 'in', 1065, 32, 1065, 34),
woosh.Token(woosh.NAME, 'self', 1065, 35, 1065, 39),
woosh.Token(woosh.OP, '.', 1065, 39, 1065, 40),
woosh.Token(woosh.NAME, '_sections', 1065, 40, 1065, 49),
woosh.Token(woosh.OP, ':', 1065, 49, 1065, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1065, 50, 1066, 0),
woosh.Token(woosh.INDENT, '                        ', 1066, 0, 1066, 24),
woosh.Token(woosh.NAME, 'if', 1066, 24, 1066, 26),
woosh.Token(woosh.NAME, 'self', 1066, 27, 1066, 31),
woosh.Token(woosh.OP, '.', 1066, 31, 1066, 32),
woosh.Token(woosh.NAME, '_strict', 1066, 32, 1066, 39),
woosh.Token(woosh.NAME, 'and', 1066, 40, 1066, 43),
woosh.Token(woosh.NAME, 'sectname', 1066, 44, 1066, 52),
woosh.Token(woosh.NAME, 'in', 1066, 53, 1066, 55),
woosh.Token(woosh.NAME, 'elements_added', 1066, 56, 1066, 70),
woosh.Token(woosh.OP, ':', 1066, 70, 1066, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1066, 71, 1067, 0),
woosh.Token(woosh.INDENT, '                            ', 1067, 0, 1067, 28),
woosh.Token(woosh.NAME, 'raise', 1067, 28, 1067, 33),
woosh.Token(woosh.NAME, 'DuplicateSectionError', 1067, 34, 1067, 55),
woosh.Token(woosh.OP, '(', 1067, 55, 1067, 56),
woosh.Token(woosh.NAME, 'sectname', 1067, 56, 1067, 64),
woosh.Token(woosh.OP, ',', 1067, 64, 1067, 65),
woosh.Token(woosh.NAME, 'fpname', 1067, 66, 1067, 72),
woosh.Token(woosh.OP, ',', 1067, 72, 1067, 73),
woosh.Token(woosh.NAME, 'lineno', 1068, 56, 1068, 62),
woosh.Token(woosh.OP, ')', 1068, 62, 1068, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1068, 63, 1069, 0),
woosh.Token(woosh.DEDENT, '                        ', 1069, 0, 1069, 24),
woosh.Token(woosh.NAME, 'cursect', 1069, 24, 1069, 31),
woosh.Token(woosh.OP, '=', 1069, 32, 1069, 33),
woosh.Token(woosh.NAME, 'self', 1069, 34, 1069, 38),
woosh.Token(woosh.OP, '.', 1069, 38, 1069, 39),
woosh.Token(woosh.NAME, '_sections', 1069, 39, 1069, 48),
woosh.Token(woosh.OP, '[', 1069, 48, 1069, 49),
woosh.Token(woosh.NAME, 'sectname', 1069, 49, 1069, 57),
woosh.Token(woosh.OP, ']', 1069, 57, 1069, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1069, 58, 1070, 0),
woosh.Token(woosh.NAME, 'elements_added', 1070, 24, 1070, 38),
woosh.Token(woosh.OP, '.', 1070, 38, 1070, 39),
woosh.Token(woosh.NAME, 'add', 1070, 39, 1070, 42),
woosh.Token(woosh.OP, '(', 1070, 42, 1070, 43),
woosh.Token(woosh.NAME, 'sectname', 1070, 43, 1070, 51),
woosh.Token(woosh.OP, ')', 1070, 51, 1070, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1070, 52, 1071, 0),
woosh.Token(woosh.DEDENT, '                    ', 1071, 0, 1071, 20),
woosh.Token(woosh.NAME, 'elif', 1071, 20, 1071, 24),
woosh.Token(woosh.NAME, 'sectname', 1071, 25, 1071, 33),
woosh.Token(woosh.OP, '==', 1071, 34, 1071, 36),
woosh.Token(woosh.NAME, 'self', 1071, 37, 1071, 41),
woosh.Token(woosh.OP, '.', 1071, 41, 1071, 42),
woosh.Token(woosh.NAME, 'default_section', 1071, 42, 1071, 57),
woosh.Token(woosh.OP, ':', 1071, 57, 1071, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1071, 58, 1072, 0),
woosh.Token(woosh.INDENT, '                        ', 1072, 0, 1072, 24),
woosh.Token(woosh.NAME, 'cursect', 1072, 24, 1072, 31),
woosh.Token(woosh.OP, '=', 1072, 32, 1072, 33),
woosh.Token(woosh.NAME, 'self', 1072, 34, 1072, 38),
woosh.Token(woosh.OP, '.', 1072, 38, 1072, 39),
woosh.Token(woosh.NAME, '_defaults', 1072, 39, 1072, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1072, 48, 1073, 0),
woosh.Token(woosh.DEDENT, '                    ', 1073, 0, 1073, 20),
woosh.Token(woosh.NAME, 'else', 1073, 20, 1073, 24),
woosh.Token(woosh.OP, ':', 1073, 24, 1073, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1073, 25, 1074, 0),
woosh.Token(woosh.INDENT, '                        ', 1074, 0, 1074, 24),
woosh.Token(woosh.NAME, 'cursect', 1074, 24, 1074, 31),
woosh.Token(woosh.OP, '=', 1074, 32, 1074, 33),
woosh.Token(woosh.NAME, 'self', 1074, 34, 1074, 38),
woosh.Token(woosh.OP, '.', 1074, 38, 1074, 39),
woosh.Token(woosh.NAME, '_dict', 1074, 39, 1074, 44),
woosh.Token(woosh.OP, '(', 1074, 44, 1074, 45),
woosh.Token(woosh.OP, ')', 1074, 45, 1074, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1074, 46, 1075, 0),
woosh.Token(woosh.NAME, 'self', 1075, 24, 1075, 28),
woosh.Token(woosh.OP, '.', 1075, 28, 1075, 29),
woosh.Token(woosh.NAME, '_sections', 1075, 29, 1075, 38),
woosh.Token(woosh.OP, '[', 1075, 38, 1075, 39),
woosh.Token(woosh.NAME, 'sectname', 1075, 39, 1075, 47),
woosh.Token(woosh.OP, ']', 1075, 47, 1075, 48),
woosh.Token(woosh.OP, '=', 1075, 49, 1075, 50),
woosh.Token(woosh.NAME, 'cursect', 1075, 51, 1075, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1075, 58, 1076, 0),
woosh.Token(woosh.NAME, 'self', 1076, 24, 1076, 28),
woosh.Token(woosh.OP, '.', 1076, 28, 1076, 29),
woosh.Token(woosh.NAME, '_proxies', 1076, 29, 1076, 37),
woosh.Token(woosh.OP, '[', 1076, 37, 1076, 38),
woosh.Token(woosh.NAME, 'sectname', 1076, 38, 1076, 46),
woosh.Token(woosh.OP, ']', 1076, 46, 1076, 47),
woosh.Token(woosh.OP, '=', 1076, 48, 1076, 49),
woosh.Token(woosh.NAME, 'SectionProxy', 1076, 50, 1076, 62),
woosh.Token(woosh.OP, '(', 1076, 62, 1076, 63),
woosh.Token(woosh.NAME, 'self', 1076, 63, 1076, 67),
woosh.Token(woosh.OP, ',', 1076, 67, 1076, 68),
woosh.Token(woosh.NAME, 'sectname', 1076, 69, 1076, 77),
woosh.Token(woosh.OP, ')', 1076, 77, 1076, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1076, 78, 1077, 0),
woosh.Token(woosh.NAME, 'elements_added', 1077, 24, 1077, 38),
woosh.Token(woosh.OP, '.', 1077, 38, 1077, 39),
woosh.Token(woosh.NAME, 'add', 1077, 39, 1077, 42),
woosh.Token(woosh.OP, '(', 1077, 42, 1077, 43),
woosh.Token(woosh.NAME, 'sectname', 1077, 43, 1077, 51),
woosh.Token(woosh.OP, ')', 1077, 51, 1077, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1077, 52, 1078, 0),
woosh.Token(woosh.COMMENT, "# So sections can't start with a continuation line", 1078, 20, 1078, 70),
woosh.Token(woosh.DEDENT, '                    ', 1079, 0, 1079, 20),
woosh.Token(woosh.NAME, 'optname', 1079, 20, 1079, 27),
woosh.Token(woosh.OP, '=', 1079, 28, 1079, 29),
woosh.Token(woosh.NAME, 'None', 1079, 30, 1079, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1079, 34, 1080, 0),
woosh.Token(woosh.COMMENT, '# no section header in the file?', 1080, 16, 1080, 48),
woosh.Token(woosh.DEDENT, '                ', 1081, 0, 1081, 16),
woosh.Token(woosh.NAME, 'elif', 1081, 16, 1081, 20),
woosh.Token(woosh.NAME, 'cursect', 1081, 21, 1081, 28),
woosh.Token(woosh.NAME, 'is', 1081, 29, 1081, 31),
woosh.Token(woosh.NAME, 'None', 1081, 32, 1081, 36),
woosh.Token(woosh.OP, ':', 1081, 36, 1081, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1081, 37, 1082, 0),
woosh.Token(woosh.INDENT, '                    ', 1082, 0, 1082, 20),
woosh.Token(woosh.NAME, 'raise', 1082, 20, 1082, 25),
woosh.Token(woosh.NAME, 'MissingSectionHeaderError', 1082, 26, 1082, 51),
woosh.Token(woosh.OP, '(', 1082, 51, 1082, 52),
woosh.Token(woosh.NAME, 'fpname', 1082, 52, 1082, 58),
woosh.Token(woosh.OP, ',', 1082, 58, 1082, 59),
woosh.Token(woosh.NAME, 'lineno', 1082, 60, 1082, 66),
woosh.Token(woosh.OP, ',', 1082, 66, 1082, 67),
woosh.Token(woosh.NAME, 'line', 1082, 68, 1082, 72),
woosh.Token(woosh.OP, ')', 1082, 72, 1082, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1082, 73, 1083, 0),
woosh.Token(woosh.COMMENT, '# an option line?', 1083, 16, 1083, 33),
woosh.Token(woosh.DEDENT, '                ', 1084, 0, 1084, 16),
woosh.Token(woosh.NAME, 'else', 1084, 16, 1084, 20),
woosh.Token(woosh.OP, ':', 1084, 20, 1084, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1084, 21, 1085, 0),
woosh.Token(woosh.INDENT, '                    ', 1085, 0, 1085, 20),
woosh.Token(woosh.NAME, 'mo', 1085, 20, 1085, 22),
woosh.Token(woosh.OP, '=', 1085, 23, 1085, 24),
woosh.Token(woosh.NAME, 'self', 1085, 25, 1085, 29),
woosh.Token(woosh.OP, '.', 1085, 29, 1085, 30),
woosh.Token(woosh.NAME, '_optcre', 1085, 30, 1085, 37),
woosh.Token(woosh.OP, '.', 1085, 37, 1085, 38),
woosh.Token(woosh.NAME, 'match', 1085, 38, 1085, 43),
woosh.Token(woosh.OP, '(', 1085, 43, 1085, 44),
woosh.Token(woosh.NAME, 'value', 1085, 44, 1085, 49),
woosh.Token(woosh.OP, ')', 1085, 49, 1085, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1085, 50, 1086, 0),
woosh.Token(woosh.NAME, 'if', 1086, 20, 1086, 22),
woosh.Token(woosh.NAME, 'mo', 1086, 23, 1086, 25),
woosh.Token(woosh.OP, ':', 1086, 25, 1086, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 1086, 26, 1087, 0),
woosh.Token(woosh.INDENT, '                        ', 1087, 0, 1087, 24),
woosh.Token(woosh.NAME, 'optname', 1087, 24, 1087, 31),
woosh.Token(woosh.OP, ',', 1087, 31, 1087, 32),
woosh.Token(woosh.NAME, 'vi', 1087, 33, 1087, 35),
woosh.Token(woosh.OP, ',', 1087, 35, 1087, 36),
woosh.Token(woosh.NAME, 'optval', 1087, 37, 1087, 43),
woosh.Token(woosh.OP, '=', 1087, 44, 1087, 45),
woosh.Token(woosh.NAME, 'mo', 1087, 46, 1087, 48),
woosh.Token(woosh.OP, '.', 1087, 48, 1087, 49),
woosh.Token(woosh.NAME, 'group', 1087, 49, 1087, 54),
woosh.Token(woosh.OP, '(', 1087, 54, 1087, 55),
woosh.Token(woosh.STRING, "'option'", 1087, 55, 1087, 63),
woosh.Token(woosh.OP, ',', 1087, 63, 1087, 64),
woosh.Token(woosh.STRING, "'vi'", 1087, 65, 1087, 69),
woosh.Token(woosh.OP, ',', 1087, 69, 1087, 70),
woosh.Token(woosh.STRING, "'value'", 1087, 71, 1087, 78),
woosh.Token(woosh.OP, ')', 1087, 78, 1087, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 1087, 79, 1088, 0),
woosh.Token(woosh.NAME, 'if', 1088, 24, 1088, 26),
woosh.Token(woosh.NAME, 'not', 1088, 27, 1088, 30),
woosh.Token(woosh.NAME, 'optname', 1088, 31, 1088, 38),
woosh.Token(woosh.OP, ':', 1088, 38, 1088, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1088, 39, 1089, 0),
woosh.Token(woosh.INDENT, '                            ', 1089, 0, 1089, 28),
woosh.Token(woosh.NAME, 'e', 1089, 28, 1089, 29),
woosh.Token(woosh.OP, '=', 1089, 30, 1089, 31),
woosh.Token(woosh.NAME, 'self', 1089, 32, 1089, 36),
woosh.Token(woosh.OP, '.', 1089, 36, 1089, 37),
woosh.Token(woosh.NAME, '_handle_error', 1089, 37, 1089, 50),
woosh.Token(woosh.OP, '(', 1089, 50, 1089, 51),
woosh.Token(woosh.NAME, 'e', 1089, 51, 1089, 52),
woosh.Token(woosh.OP, ',', 1089, 52, 1089, 53),
woosh.Token(woosh.NAME, 'fpname', 1089, 54, 1089, 60),
woosh.Token(woosh.OP, ',', 1089, 60, 1089, 61),
woosh.Token(woosh.NAME, 'lineno', 1089, 62, 1089, 68),
woosh.Token(woosh.OP, ',', 1089, 68, 1089, 69),
woosh.Token(woosh.NAME, 'line', 1089, 70, 1089, 74),
woosh.Token(woosh.OP, ')', 1089, 74, 1089, 75),
woosh.Token(woosh.NEWLINE, '\r\n', 1089, 75, 1090, 0),
woosh.Token(woosh.DEDENT, '                        ', 1090, 0, 1090, 24),
woosh.Token(woosh.NAME, 'optname', 1090, 24, 1090, 31),
woosh.Token(woosh.OP, '=', 1090, 32, 1090, 33),
woosh.Token(woosh.NAME, 'self', 1090, 34, 1090, 38),
woosh.Token(woosh.OP, '.', 1090, 38, 1090, 39),
woosh.Token(woosh.NAME, 'optionxform', 1090, 39, 1090, 50),
woosh.Token(woosh.OP, '(', 1090, 50, 1090, 51),
woosh.Token(woosh.NAME, 'optname', 1090, 51, 1090, 58),
woosh.Token(woosh.OP, '.', 1090, 58, 1090, 59),
woosh.Token(woosh.NAME, 'rstrip', 1090, 59, 1090, 65),
woosh.Token(woosh.OP, '(', 1090, 65, 1090, 66),
woosh.Token(woosh.OP, ')', 1090, 66, 1090, 67),
woosh.Token(woosh.OP, ')', 1090, 67, 1090, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1090, 68, 1091, 0),
woosh.Token(woosh.NAME, 'if', 1091, 24, 1091, 26),
woosh.Token(woosh.OP, '(', 1091, 27, 1091, 28),
woosh.Token(woosh.NAME, 'self', 1091, 28, 1091, 32),
woosh.Token(woosh.OP, '.', 1091, 32, 1091, 33),
woosh.Token(woosh.NAME, '_strict', 1091, 33, 1091, 40),
woosh.Token(woosh.NAME, 'and', 1091, 41, 1091, 44),
woosh.Token(woosh.OP, '(', 1092, 28, 1092, 29),
woosh.Token(woosh.NAME, 'sectname', 1092, 29, 1092, 37),
woosh.Token(woosh.OP, ',', 1092, 37, 1092, 38),
woosh.Token(woosh.NAME, 'optname', 1092, 39, 1092, 46),
woosh.Token(woosh.OP, ')', 1092, 46, 1092, 47),
woosh.Token(woosh.NAME, 'in', 1092, 48, 1092, 50),
woosh.Token(woosh.NAME, 'elements_added', 1092, 51, 1092, 65),
woosh.Token(woosh.OP, ')', 1092, 65, 1092, 66),
woosh.Token(woosh.OP, ':', 1092, 66, 1092, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1092, 67, 1093, 0),
woosh.Token(woosh.INDENT, '                            ', 1093, 0, 1093, 28),
woosh.Token(woosh.NAME, 'raise', 1093, 28, 1093, 33),
woosh.Token(woosh.NAME, 'DuplicateOptionError', 1093, 34, 1093, 54),
woosh.Token(woosh.OP, '(', 1093, 54, 1093, 55),
woosh.Token(woosh.NAME, 'sectname', 1093, 55, 1093, 63),
woosh.Token(woosh.OP, ',', 1093, 63, 1093, 64),
woosh.Token(woosh.NAME, 'optname', 1093, 65, 1093, 72),
woosh.Token(woosh.OP, ',', 1093, 72, 1093, 73),
woosh.Token(woosh.NAME, 'fpname', 1094, 55, 1094, 61),
woosh.Token(woosh.OP, ',', 1094, 61, 1094, 62),
woosh.Token(woosh.NAME, 'lineno', 1094, 63, 1094, 69),
woosh.Token(woosh.OP, ')', 1094, 69, 1094, 70),
woosh.Token(woosh.NEWLINE, '\r\n', 1094, 70, 1095, 0),
woosh.Token(woosh.DEDENT, '                        ', 1095, 0, 1095, 24),
woosh.Token(woosh.NAME, 'elements_added', 1095, 24, 1095, 38),
woosh.Token(woosh.OP, '.', 1095, 38, 1095, 39),
woosh.Token(woosh.NAME, 'add', 1095, 39, 1095, 42),
woosh.Token(woosh.OP, '(', 1095, 42, 1095, 43),
woosh.Token(woosh.OP, '(', 1095, 43, 1095, 44),
woosh.Token(woosh.NAME, 'sectname', 1095, 44, 1095, 52),
woosh.Token(woosh.OP, ',', 1095, 52, 1095, 53),
woosh.Token(woosh.NAME, 'optname', 1095, 54, 1095, 61),
woosh.Token(woosh.OP, ')', 1095, 61, 1095, 62),
woosh.Token(woosh.OP, ')', 1095, 62, 1095, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 1095, 63, 1096, 0),
woosh.Token(woosh.COMMENT, '# This check is fine because the OPTCRE cannot', 1096, 24, 1096, 70),
woosh.Token(woosh.COMMENT, '# match if it would set optval to None', 1097, 24, 1097, 62),
woosh.Token(woosh.NAME, 'if', 1098, 24, 1098, 26),
woosh.Token(woosh.NAME, 'optval', 1098, 27, 1098, 33),
woosh.Token(woosh.NAME, 'is', 1098, 34, 1098, 36),
woosh.Token(woosh.NAME, 'not', 1098, 37, 1098, 40),
woosh.Token(woosh.NAME, 'None', 1098, 41, 1098, 45),
woosh.Token(woosh.OP, ':', 1098, 45, 1098, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 1098, 46, 1099, 0),
woosh.Token(woosh.INDENT, '                            ', 1099, 0, 1099, 28),
woosh.Token(woosh.NAME, 'optval', 1099, 28, 1099, 34),
woosh.Token(woosh.OP, '=', 1099, 35, 1099, 36),
woosh.Token(woosh.NAME, 'optval', 1099, 37, 1099, 43),
woosh.Token(woosh.OP, '.', 1099, 43, 1099, 44),
woosh.Token(woosh.NAME, 'strip', 1099, 44, 1099, 49),
woosh.Token(woosh.OP, '(', 1099, 49, 1099, 50),
woosh.Token(woosh.OP, ')', 1099, 50, 1099, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1099, 51, 1100, 0),
woosh.Token(woosh.NAME, 'cursect', 1100, 28, 1100, 35),
woosh.Token(woosh.OP, '[', 1100, 35, 1100, 36),
woosh.Token(woosh.NAME, 'optname', 1100, 36, 1100, 43),
woosh.Token(woosh.OP, ']', 1100, 43, 1100, 44),
woosh.Token(woosh.OP, '=', 1100, 45, 1100, 46),
woosh.Token(woosh.OP, '[', 1100, 47, 1100, 48),
woosh.Token(woosh.NAME, 'optval', 1100, 48, 1100, 54),
woosh.Token(woosh.OP, ']', 1100, 54, 1100, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1100, 55, 1101, 0),
woosh.Token(woosh.DEDENT, '                        ', 1101, 0, 1101, 24),
woosh.Token(woosh.NAME, 'else', 1101, 24, 1101, 28),
woosh.Token(woosh.OP, ':', 1101, 28, 1101, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1101, 29, 1102, 0),
woosh.Token(woosh.COMMENT, '# valueless option handling', 1102, 28, 1102, 55),
woosh.Token(woosh.INDENT, '                            ', 1103, 0, 1103, 28),
woosh.Token(woosh.NAME, 'cursect', 1103, 28, 1103, 35),
woosh.Token(woosh.OP, '[', 1103, 35, 1103, 36),
woosh.Token(woosh.NAME, 'optname', 1103, 36, 1103, 43),
woosh.Token(woosh.OP, ']', 1103, 43, 1103, 44),
woosh.Token(woosh.OP, '=', 1103, 45, 1103, 46),
woosh.Token(woosh.NAME, 'None', 1103, 47, 1103, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1103, 51, 1104, 0),
woosh.Token(woosh.DEDENT, '                    ', 1104, 0, 1104, 20),
woosh.Token(woosh.DEDENT, '', 1104, 20, 1104, 20),
woosh.Token(woosh.NAME, 'else', 1104, 20, 1104, 24),
woosh.Token(woosh.OP, ':', 1104, 24, 1104, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1104, 25, 1105, 0),
woosh.Token(woosh.COMMENT, '# a non-fatal parsing error occurred. set up the', 1105, 24, 1105, 72),
woosh.Token(woosh.COMMENT, '# exception but keep going. the exception will be', 1106, 24, 1106, 73),
woosh.Token(woosh.COMMENT, '# raised at the end of the file and will contain a', 1107, 24, 1107, 74),
woosh.Token(woosh.COMMENT, '# list of all bogus lines', 1108, 24, 1108, 49),
woosh.Token(woosh.INDENT, '                        ', 1109, 0, 1109, 24),
woosh.Token(woosh.NAME, 'e', 1109, 24, 1109, 25),
woosh.Token(woosh.OP, '=', 1109, 26, 1109, 27),
woosh.Token(woosh.NAME, 'self', 1109, 28, 1109, 32),
woosh.Token(woosh.OP, '.', 1109, 32, 1109, 33),
woosh.Token(woosh.NAME, '_handle_error', 1109, 33, 1109, 46),
woosh.Token(woosh.OP, '(', 1109, 46, 1109, 47),
woosh.Token(woosh.NAME, 'e', 1109, 47, 1109, 48),
woosh.Token(woosh.OP, ',', 1109, 48, 1109, 49),
woosh.Token(woosh.NAME, 'fpname', 1109, 50, 1109, 56),
woosh.Token(woosh.OP, ',', 1109, 56, 1109, 57),
woosh.Token(woosh.NAME, 'lineno', 1109, 58, 1109, 64),
woosh.Token(woosh.OP, ',', 1109, 64, 1109, 65),
woosh.Token(woosh.NAME, 'line', 1109, 66, 1109, 70),
woosh.Token(woosh.OP, ')', 1109, 70, 1109, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1109, 71, 1110, 0),
woosh.Token(woosh.DEDENT, '        ', 1110, 0, 1110, 8),
woosh.Token(woosh.DEDENT, '', 1110, 8, 1110, 8),
woosh.Token(woosh.DEDENT, '', 1110, 8, 1110, 8),
woosh.Token(woosh.DEDENT, '', 1110, 8, 1110, 8),
woosh.Token(woosh.NAME, 'self', 1110, 8, 1110, 12),
woosh.Token(woosh.OP, '.', 1110, 12, 1110, 13),
woosh.Token(woosh.NAME, '_join_multiline_values', 1110, 13, 1110, 35),
woosh.Token(woosh.OP, '(', 1110, 35, 1110, 36),
woosh.Token(woosh.OP, ')', 1110, 36, 1110, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1110, 37, 1111, 0),
woosh.Token(woosh.COMMENT, '# if any parsing errors occurred, raise an exception', 1111, 8, 1111, 60),
woosh.Token(woosh.NAME, 'if', 1112, 8, 1112, 10),
woosh.Token(woosh.NAME, 'e', 1112, 11, 1112, 12),
woosh.Token(woosh.OP, ':', 1112, 12, 1112, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1112, 13, 1113, 0),
woosh.Token(woosh.INDENT, '            ', 1113, 0, 1113, 12),
woosh.Token(woosh.NAME, 'raise', 1113, 12, 1113, 17),
woosh.Token(woosh.NAME, 'e', 1113, 18, 1113, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1113, 19, 1114, 0),
woosh.Token(woosh.DEDENT, '    ', 1115, 0, 1115, 4),
woosh.Token(woosh.DEDENT, '', 1115, 4, 1115, 4),
woosh.Token(woosh.NAME, 'def', 1115, 4, 1115, 7),
woosh.Token(woosh.NAME, '_join_multiline_values', 1115, 8, 1115, 30),
woosh.Token(woosh.OP, '(', 1115, 30, 1115, 31),
woosh.Token(woosh.NAME, 'self', 1115, 31, 1115, 35),
woosh.Token(woosh.OP, ')', 1115, 35, 1115, 36),
woosh.Token(woosh.OP, ':', 1115, 36, 1115, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1115, 37, 1116, 0),
woosh.Token(woosh.INDENT, '        ', 1116, 0, 1116, 8),
woosh.Token(woosh.NAME, 'defaults', 1116, 8, 1116, 16),
woosh.Token(woosh.OP, '=', 1116, 17, 1116, 18),
woosh.Token(woosh.NAME, 'self', 1116, 19, 1116, 23),
woosh.Token(woosh.OP, '.', 1116, 23, 1116, 24),
woosh.Token(woosh.NAME, 'default_section', 1116, 24, 1116, 39),
woosh.Token(woosh.OP, ',', 1116, 39, 1116, 40),
woosh.Token(woosh.NAME, 'self', 1116, 41, 1116, 45),
woosh.Token(woosh.OP, '.', 1116, 45, 1116, 46),
woosh.Token(woosh.NAME, '_defaults', 1116, 46, 1116, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1116, 55, 1117, 0),
woosh.Token(woosh.NAME, 'all_sections', 1117, 8, 1117, 20),
woosh.Token(woosh.OP, '=', 1117, 21, 1117, 22),
woosh.Token(woosh.NAME, 'itertools', 1117, 23, 1117, 32),
woosh.Token(woosh.OP, '.', 1117, 32, 1117, 33),
woosh.Token(woosh.NAME, 'chain', 1117, 33, 1117, 38),
woosh.Token(woosh.OP, '(', 1117, 38, 1117, 39),
woosh.Token(woosh.OP, '(', 1117, 39, 1117, 40),
woosh.Token(woosh.NAME, 'defaults', 1117, 40, 1117, 48),
woosh.Token(woosh.OP, ',', 1117, 48, 1117, 49),
woosh.Token(woosh.OP, ')', 1117, 49, 1117, 50),
woosh.Token(woosh.OP, ',', 1117, 50, 1117, 51),
woosh.Token(woosh.NAME, 'self', 1118, 39, 1118, 43),
woosh.Token(woosh.OP, '.', 1118, 43, 1118, 44),
woosh.Token(woosh.NAME, '_sections', 1118, 44, 1118, 53),
woosh.Token(woosh.OP, '.', 1118, 53, 1118, 54),
woosh.Token(woosh.NAME, 'items', 1118, 54, 1118, 59),
woosh.Token(woosh.OP, '(', 1118, 59, 1118, 60),
woosh.Token(woosh.OP, ')', 1118, 60, 1118, 61),
woosh.Token(woosh.OP, ')', 1118, 61, 1118, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1118, 62, 1119, 0),
woosh.Token(woosh.NAME, 'for', 1119, 8, 1119, 11),
woosh.Token(woosh.NAME, 'section', 1119, 12, 1119, 19),
woosh.Token(woosh.OP, ',', 1119, 19, 1119, 20),
woosh.Token(woosh.NAME, 'options', 1119, 21, 1119, 28),
woosh.Token(woosh.NAME, 'in', 1119, 29, 1119, 31),
woosh.Token(woosh.NAME, 'all_sections', 1119, 32, 1119, 44),
woosh.Token(woosh.OP, ':', 1119, 44, 1119, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1119, 45, 1120, 0),
woosh.Token(woosh.INDENT, '            ', 1120, 0, 1120, 12),
woosh.Token(woosh.NAME, 'for', 1120, 12, 1120, 15),
woosh.Token(woosh.NAME, 'name', 1120, 16, 1120, 20),
woosh.Token(woosh.OP, ',', 1120, 20, 1120, 21),
woosh.Token(woosh.NAME, 'val', 1120, 22, 1120, 25),
woosh.Token(woosh.NAME, 'in', 1120, 26, 1120, 28),
woosh.Token(woosh.NAME, 'options', 1120, 29, 1120, 36),
woosh.Token(woosh.OP, '.', 1120, 36, 1120, 37),
woosh.Token(woosh.NAME, 'items', 1120, 37, 1120, 42),
woosh.Token(woosh.OP, '(', 1120, 42, 1120, 43),
woosh.Token(woosh.OP, ')', 1120, 43, 1120, 44),
woosh.Token(woosh.OP, ':', 1120, 44, 1120, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1120, 45, 1121, 0),
woosh.Token(woosh.INDENT, '                ', 1121, 0, 1121, 16),
woosh.Token(woosh.NAME, 'if', 1121, 16, 1121, 18),
woosh.Token(woosh.NAME, 'isinstance', 1121, 19, 1121, 29),
woosh.Token(woosh.OP, '(', 1121, 29, 1121, 30),
woosh.Token(woosh.NAME, 'val', 1121, 30, 1121, 33),
woosh.Token(woosh.OP, ',', 1121, 33, 1121, 34),
woosh.Token(woosh.NAME, 'list', 1121, 35, 1121, 39),
woosh.Token(woosh.OP, ')', 1121, 39, 1121, 40),
woosh.Token(woosh.OP, ':', 1121, 40, 1121, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1121, 41, 1122, 0),
woosh.Token(woosh.INDENT, '                    ', 1122, 0, 1122, 20),
woosh.Token(woosh.NAME, 'val', 1122, 20, 1122, 23),
woosh.Token(woosh.OP, '=', 1122, 24, 1122, 25),
woosh.Token(woosh.STRING, "'\\n'", 1122, 26, 1122, 30),
woosh.Token(woosh.OP, '.', 1122, 30, 1122, 31),
woosh.Token(woosh.NAME, 'join', 1122, 31, 1122, 35),
woosh.Token(woosh.OP, '(', 1122, 35, 1122, 36),
woosh.Token(woosh.NAME, 'val', 1122, 36, 1122, 39),
woosh.Token(woosh.OP, ')', 1122, 39, 1122, 40),
woosh.Token(woosh.OP, '.', 1122, 40, 1122, 41),
woosh.Token(woosh.NAME, 'rstrip', 1122, 41, 1122, 47),
woosh.Token(woosh.OP, '(', 1122, 47, 1122, 48),
woosh.Token(woosh.OP, ')', 1122, 48, 1122, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1122, 49, 1123, 0),
woosh.Token(woosh.DEDENT, '                ', 1123, 0, 1123, 16),
woosh.Token(woosh.NAME, 'options', 1123, 16, 1123, 23),
woosh.Token(woosh.OP, '[', 1123, 23, 1123, 24),
woosh.Token(woosh.NAME, 'name', 1123, 24, 1123, 28),
woosh.Token(woosh.OP, ']', 1123, 28, 1123, 29),
woosh.Token(woosh.OP, '=', 1123, 30, 1123, 31),
woosh.Token(woosh.NAME, 'self', 1123, 32, 1123, 36),
woosh.Token(woosh.OP, '.', 1123, 36, 1123, 37),
woosh.Token(woosh.NAME, '_interpolation', 1123, 37, 1123, 51),
woosh.Token(woosh.OP, '.', 1123, 51, 1123, 52),
woosh.Token(woosh.NAME, 'before_read', 1123, 52, 1123, 63),
woosh.Token(woosh.OP, '(', 1123, 63, 1123, 64),
woosh.Token(woosh.NAME, 'self', 1123, 64, 1123, 68),
woosh.Token(woosh.OP, ',', 1123, 68, 1123, 69),
woosh.Token(woosh.NAME, 'section', 1124, 64, 1124, 71),
woosh.Token(woosh.OP, ',', 1124, 71, 1124, 72),
woosh.Token(woosh.NAME, 'name', 1125, 64, 1125, 68),
woosh.Token(woosh.OP, ',', 1125, 68, 1125, 69),
woosh.Token(woosh.NAME, 'val', 1125, 70, 1125, 73),
woosh.Token(woosh.OP, ')', 1125, 73, 1125, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 1125, 74, 1126, 0),
woosh.Token(woosh.DEDENT, '    ', 1127, 0, 1127, 4),
woosh.Token(woosh.DEDENT, '', 1127, 4, 1127, 4),
woosh.Token(woosh.DEDENT, '', 1127, 4, 1127, 4),
woosh.Token(woosh.NAME, 'def', 1127, 4, 1127, 7),
woosh.Token(woosh.NAME, '_read_defaults', 1127, 8, 1127, 22),
woosh.Token(woosh.OP, '(', 1127, 22, 1127, 23),
woosh.Token(woosh.NAME, 'self', 1127, 23, 1127, 27),
woosh.Token(woosh.OP, ',', 1127, 27, 1127, 28),
woosh.Token(woosh.NAME, 'defaults', 1127, 29, 1127, 37),
woosh.Token(woosh.OP, ')', 1127, 37, 1127, 38),
woosh.Token(woosh.OP, ':', 1127, 38, 1127, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1127, 39, 1128, 0),
woosh.Token(woosh.INDENT, '        ', 1128, 0, 1128, 8),
woosh.Token(woosh.STRING, '"""Read the defaults passed in the initializer.\r\n        Note: values can be non-string."""', 1128, 8, 1129, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1129, 42, 1130, 0),
woosh.Token(woosh.NAME, 'for', 1130, 8, 1130, 11),
woosh.Token(woosh.NAME, 'key', 1130, 12, 1130, 15),
woosh.Token(woosh.OP, ',', 1130, 15, 1130, 16),
woosh.Token(woosh.NAME, 'value', 1130, 17, 1130, 22),
woosh.Token(woosh.NAME, 'in', 1130, 23, 1130, 25),
woosh.Token(woosh.NAME, 'defaults', 1130, 26, 1130, 34),
woosh.Token(woosh.OP, '.', 1130, 34, 1130, 35),
woosh.Token(woosh.NAME, 'items', 1130, 35, 1130, 40),
woosh.Token(woosh.OP, '(', 1130, 40, 1130, 41),
woosh.Token(woosh.OP, ')', 1130, 41, 1130, 42),
woosh.Token(woosh.OP, ':', 1130, 42, 1130, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1130, 43, 1131, 0),
woosh.Token(woosh.INDENT, '            ', 1131, 0, 1131, 12),
woosh.Token(woosh.NAME, 'self', 1131, 12, 1131, 16),
woosh.Token(woosh.OP, '.', 1131, 16, 1131, 17),
woosh.Token(woosh.NAME, '_defaults', 1131, 17, 1131, 26),
woosh.Token(woosh.OP, '[', 1131, 26, 1131, 27),
woosh.Token(woosh.NAME, 'self', 1131, 27, 1131, 31),
woosh.Token(woosh.OP, '.', 1131, 31, 1131, 32),
woosh.Token(woosh.NAME, 'optionxform', 1131, 32, 1131, 43),
woosh.Token(woosh.OP, '(', 1131, 43, 1131, 44),
woosh.Token(woosh.NAME, 'key', 1131, 44, 1131, 47),
woosh.Token(woosh.OP, ')', 1131, 47, 1131, 48),
woosh.Token(woosh.OP, ']', 1131, 48, 1131, 49),
woosh.Token(woosh.OP, '=', 1131, 50, 1131, 51),
woosh.Token(woosh.NAME, 'value', 1131, 52, 1131, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1131, 57, 1132, 0),
woosh.Token(woosh.DEDENT, '    ', 1133, 0, 1133, 4),
woosh.Token(woosh.DEDENT, '', 1133, 4, 1133, 4),
woosh.Token(woosh.NAME, 'def', 1133, 4, 1133, 7),
woosh.Token(woosh.NAME, '_handle_error', 1133, 8, 1133, 21),
woosh.Token(woosh.OP, '(', 1133, 21, 1133, 22),
woosh.Token(woosh.NAME, 'self', 1133, 22, 1133, 26),
woosh.Token(woosh.OP, ',', 1133, 26, 1133, 27),
woosh.Token(woosh.NAME, 'exc', 1133, 28, 1133, 31),
woosh.Token(woosh.OP, ',', 1133, 31, 1133, 32),
woosh.Token(woosh.NAME, 'fpname', 1133, 33, 1133, 39),
woosh.Token(woosh.OP, ',', 1133, 39, 1133, 40),
woosh.Token(woosh.NAME, 'lineno', 1133, 41, 1133, 47),
woosh.Token(woosh.OP, ',', 1133, 47, 1133, 48),
woosh.Token(woosh.NAME, 'line', 1133, 49, 1133, 53),
woosh.Token(woosh.OP, ')', 1133, 53, 1133, 54),
woosh.Token(woosh.OP, ':', 1133, 54, 1133, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1133, 55, 1134, 0),
woosh.Token(woosh.INDENT, '        ', 1134, 0, 1134, 8),
woosh.Token(woosh.NAME, 'if', 1134, 8, 1134, 10),
woosh.Token(woosh.NAME, 'not', 1134, 11, 1134, 14),
woosh.Token(woosh.NAME, 'exc', 1134, 15, 1134, 18),
woosh.Token(woosh.OP, ':', 1134, 18, 1134, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1134, 19, 1135, 0),
woosh.Token(woosh.INDENT, '            ', 1135, 0, 1135, 12),
woosh.Token(woosh.NAME, 'exc', 1135, 12, 1135, 15),
woosh.Token(woosh.OP, '=', 1135, 16, 1135, 17),
woosh.Token(woosh.NAME, 'ParsingError', 1135, 18, 1135, 30),
woosh.Token(woosh.OP, '(', 1135, 30, 1135, 31),
woosh.Token(woosh.NAME, 'fpname', 1135, 31, 1135, 37),
woosh.Token(woosh.OP, ')', 1135, 37, 1135, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1135, 38, 1136, 0),
woosh.Token(woosh.DEDENT, '        ', 1136, 0, 1136, 8),
woosh.Token(woosh.NAME, 'exc', 1136, 8, 1136, 11),
woosh.Token(woosh.OP, '.', 1136, 11, 1136, 12),
woosh.Token(woosh.NAME, 'append', 1136, 12, 1136, 18),
woosh.Token(woosh.OP, '(', 1136, 18, 1136, 19),
woosh.Token(woosh.NAME, 'lineno', 1136, 19, 1136, 25),
woosh.Token(woosh.OP, ',', 1136, 25, 1136, 26),
woosh.Token(woosh.NAME, 'repr', 1136, 27, 1136, 31),
woosh.Token(woosh.OP, '(', 1136, 31, 1136, 32),
woosh.Token(woosh.NAME, 'line', 1136, 32, 1136, 36),
woosh.Token(woosh.OP, ')', 1136, 36, 1136, 37),
woosh.Token(woosh.OP, ')', 1136, 37, 1136, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1136, 38, 1137, 0),
woosh.Token(woosh.NAME, 'return', 1137, 8, 1137, 14),
woosh.Token(woosh.NAME, 'exc', 1137, 15, 1137, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 1137, 18, 1138, 0),
woosh.Token(woosh.DEDENT, '    ', 1139, 0, 1139, 4),
woosh.Token(woosh.NAME, 'def', 1139, 4, 1139, 7),
woosh.Token(woosh.NAME, '_unify_values', 1139, 8, 1139, 21),
woosh.Token(woosh.OP, '(', 1139, 21, 1139, 22),
woosh.Token(woosh.NAME, 'self', 1139, 22, 1139, 26),
woosh.Token(woosh.OP, ',', 1139, 26, 1139, 27),
woosh.Token(woosh.NAME, 'section', 1139, 28, 1139, 35),
woosh.Token(woosh.OP, ',', 1139, 35, 1139, 36),
woosh.Token(woosh.NAME, 'vars', 1139, 37, 1139, 41),
woosh.Token(woosh.OP, ')', 1139, 41, 1139, 42),
woosh.Token(woosh.OP, ':', 1139, 42, 1139, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1139, 43, 1140, 0),
woosh.Token(woosh.INDENT, '        ', 1140, 0, 1140, 8),
woosh.Token(woosh.STRING, '"""Create a sequence of lookups with \'vars\' taking priority over\r\n        the \'section\' which takes priority over the DEFAULTSECT.\r\n\r\n        """', 1140, 8, 1143, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1143, 11, 1144, 0),
woosh.Token(woosh.NAME, 'sectiondict', 1144, 8, 1144, 19),
woosh.Token(woosh.OP, '=', 1144, 20, 1144, 21),
woosh.Token(woosh.OP, '{', 1144, 22, 1144, 23),
woosh.Token(woosh.OP, '}', 1144, 23, 1144, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1144, 24, 1145, 0),
woosh.Token(woosh.NAME, 'try', 1145, 8, 1145, 11),
woosh.Token(woosh.OP, ':', 1145, 11, 1145, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1145, 12, 1146, 0),
woosh.Token(woosh.INDENT, '            ', 1146, 0, 1146, 12),
woosh.Token(woosh.NAME, 'sectiondict', 1146, 12, 1146, 23),
woosh.Token(woosh.OP, '=', 1146, 24, 1146, 25),
woosh.Token(woosh.NAME, 'self', 1146, 26, 1146, 30),
woosh.Token(woosh.OP, '.', 1146, 30, 1146, 31),
woosh.Token(woosh.NAME, '_sections', 1146, 31, 1146, 40),
woosh.Token(woosh.OP, '[', 1146, 40, 1146, 41),
woosh.Token(woosh.NAME, 'section', 1146, 41, 1146, 48),
woosh.Token(woosh.OP, ']', 1146, 48, 1146, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1146, 49, 1147, 0),
woosh.Token(woosh.DEDENT, '        ', 1147, 0, 1147, 8),
woosh.Token(woosh.NAME, 'except', 1147, 8, 1147, 14),
woosh.Token(woosh.NAME, 'KeyError', 1147, 15, 1147, 23),
woosh.Token(woosh.OP, ':', 1147, 23, 1147, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1147, 24, 1148, 0),
woosh.Token(woosh.INDENT, '            ', 1148, 0, 1148, 12),
woosh.Token(woosh.NAME, 'if', 1148, 12, 1148, 14),
woosh.Token(woosh.NAME, 'section', 1148, 15, 1148, 22),
woosh.Token(woosh.OP, '!=', 1148, 23, 1148, 25),
woosh.Token(woosh.NAME, 'self', 1148, 26, 1148, 30),
woosh.Token(woosh.OP, '.', 1148, 30, 1148, 31),
woosh.Token(woosh.NAME, 'default_section', 1148, 31, 1148, 46),
woosh.Token(woosh.OP, ':', 1148, 46, 1148, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1148, 47, 1149, 0),
woosh.Token(woosh.INDENT, '                ', 1149, 0, 1149, 16),
woosh.Token(woosh.NAME, 'raise', 1149, 16, 1149, 21),
woosh.Token(woosh.NAME, 'NoSectionError', 1149, 22, 1149, 36),
woosh.Token(woosh.OP, '(', 1149, 36, 1149, 37),
woosh.Token(woosh.NAME, 'section', 1149, 37, 1149, 44),
woosh.Token(woosh.OP, ')', 1149, 44, 1149, 45),
woosh.Token(woosh.NAME, 'from', 1149, 46, 1149, 50),
woosh.Token(woosh.NAME, 'None', 1149, 51, 1149, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1149, 55, 1150, 0),
woosh.Token(woosh.COMMENT, '# Update with the entry specific variables', 1150, 8, 1150, 50),
woosh.Token(woosh.DEDENT, '        ', 1151, 0, 1151, 8),
woosh.Token(woosh.DEDENT, '', 1151, 8, 1151, 8),
woosh.Token(woosh.NAME, 'vardict', 1151, 8, 1151, 15),
woosh.Token(woosh.OP, '=', 1151, 16, 1151, 17),
woosh.Token(woosh.OP, '{', 1151, 18, 1151, 19),
woosh.Token(woosh.OP, '}', 1151, 19, 1151, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1151, 20, 1152, 0),
woosh.Token(woosh.NAME, 'if', 1152, 8, 1152, 10),
woosh.Token(woosh.NAME, 'vars', 1152, 11, 1152, 15),
woosh.Token(woosh.OP, ':', 1152, 15, 1152, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1152, 16, 1153, 0),
woosh.Token(woosh.INDENT, '            ', 1153, 0, 1153, 12),
woosh.Token(woosh.NAME, 'for', 1153, 12, 1153, 15),
woosh.Token(woosh.NAME, 'key', 1153, 16, 1153, 19),
woosh.Token(woosh.OP, ',', 1153, 19, 1153, 20),
woosh.Token(woosh.NAME, 'value', 1153, 21, 1153, 26),
woosh.Token(woosh.NAME, 'in', 1153, 27, 1153, 29),
woosh.Token(woosh.NAME, 'vars', 1153, 30, 1153, 34),
woosh.Token(woosh.OP, '.', 1153, 34, 1153, 35),
woosh.Token(woosh.NAME, 'items', 1153, 35, 1153, 40),
woosh.Token(woosh.OP, '(', 1153, 40, 1153, 41),
woosh.Token(woosh.OP, ')', 1153, 41, 1153, 42),
woosh.Token(woosh.OP, ':', 1153, 42, 1153, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1153, 43, 1154, 0),
woosh.Token(woosh.INDENT, '                ', 1154, 0, 1154, 16),
woosh.Token(woosh.NAME, 'if', 1154, 16, 1154, 18),
woosh.Token(woosh.NAME, 'value', 1154, 19, 1154, 24),
woosh.Token(woosh.NAME, 'is', 1154, 25, 1154, 27),
woosh.Token(woosh.NAME, 'not', 1154, 28, 1154, 31),
woosh.Token(woosh.NAME, 'None', 1154, 32, 1154, 36),
woosh.Token(woosh.OP, ':', 1154, 36, 1154, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1154, 37, 1155, 0),
woosh.Token(woosh.INDENT, '                    ', 1155, 0, 1155, 20),
woosh.Token(woosh.NAME, 'value', 1155, 20, 1155, 25),
woosh.Token(woosh.OP, '=', 1155, 26, 1155, 27),
woosh.Token(woosh.NAME, 'str', 1155, 28, 1155, 31),
woosh.Token(woosh.OP, '(', 1155, 31, 1155, 32),
woosh.Token(woosh.NAME, 'value', 1155, 32, 1155, 37),
woosh.Token(woosh.OP, ')', 1155, 37, 1155, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1155, 38, 1156, 0),
woosh.Token(woosh.DEDENT, '                ', 1156, 0, 1156, 16),
woosh.Token(woosh.NAME, 'vardict', 1156, 16, 1156, 23),
woosh.Token(woosh.OP, '[', 1156, 23, 1156, 24),
woosh.Token(woosh.NAME, 'self', 1156, 24, 1156, 28),
woosh.Token(woosh.OP, '.', 1156, 28, 1156, 29),
woosh.Token(woosh.NAME, 'optionxform', 1156, 29, 1156, 40),
woosh.Token(woosh.OP, '(', 1156, 40, 1156, 41),
woosh.Token(woosh.NAME, 'key', 1156, 41, 1156, 44),
woosh.Token(woosh.OP, ')', 1156, 44, 1156, 45),
woosh.Token(woosh.OP, ']', 1156, 45, 1156, 46),
woosh.Token(woosh.OP, '=', 1156, 47, 1156, 48),
woosh.Token(woosh.NAME, 'value', 1156, 49, 1156, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1156, 54, 1157, 0),
woosh.Token(woosh.DEDENT, '        ', 1157, 0, 1157, 8),
woosh.Token(woosh.DEDENT, '', 1157, 8, 1157, 8),
woosh.Token(woosh.NAME, 'return', 1157, 8, 1157, 14),
woosh.Token(woosh.NAME, '_ChainMap', 1157, 15, 1157, 24),
woosh.Token(woosh.OP, '(', 1157, 24, 1157, 25),
woosh.Token(woosh.NAME, 'vardict', 1157, 25, 1157, 32),
woosh.Token(woosh.OP, ',', 1157, 32, 1157, 33),
woosh.Token(woosh.NAME, 'sectiondict', 1157, 34, 1157, 45),
woosh.Token(woosh.OP, ',', 1157, 45, 1157, 46),
woosh.Token(woosh.NAME, 'self', 1157, 47, 1157, 51),
woosh.Token(woosh.OP, '.', 1157, 51, 1157, 52),
woosh.Token(woosh.NAME, '_defaults', 1157, 52, 1157, 61),
woosh.Token(woosh.OP, ')', 1157, 61, 1157, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1157, 62, 1158, 0),
woosh.Token(woosh.DEDENT, '    ', 1159, 0, 1159, 4),
woosh.Token(woosh.NAME, 'def', 1159, 4, 1159, 7),
woosh.Token(woosh.NAME, '_convert_to_boolean', 1159, 8, 1159, 27),
woosh.Token(woosh.OP, '(', 1159, 27, 1159, 28),
woosh.Token(woosh.NAME, 'self', 1159, 28, 1159, 32),
woosh.Token(woosh.OP, ',', 1159, 32, 1159, 33),
woosh.Token(woosh.NAME, 'value', 1159, 34, 1159, 39),
woosh.Token(woosh.OP, ')', 1159, 39, 1159, 40),
woosh.Token(woosh.OP, ':', 1159, 40, 1159, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1159, 41, 1160, 0),
woosh.Token(woosh.INDENT, '        ', 1160, 0, 1160, 8),
woosh.Token(woosh.STRING, '"""Return a boolean value translating from other types if necessary.\r\n        """', 1160, 8, 1161, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1161, 11, 1162, 0),
woosh.Token(woosh.NAME, 'if', 1162, 8, 1162, 10),
woosh.Token(woosh.NAME, 'value', 1162, 11, 1162, 16),
woosh.Token(woosh.OP, '.', 1162, 16, 1162, 17),
woosh.Token(woosh.NAME, 'lower', 1162, 17, 1162, 22),
woosh.Token(woosh.OP, '(', 1162, 22, 1162, 23),
woosh.Token(woosh.OP, ')', 1162, 23, 1162, 24),
woosh.Token(woosh.NAME, 'not', 1162, 25, 1162, 28),
woosh.Token(woosh.NAME, 'in', 1162, 29, 1162, 31),
woosh.Token(woosh.NAME, 'self', 1162, 32, 1162, 36),
woosh.Token(woosh.OP, '.', 1162, 36, 1162, 37),
woosh.Token(woosh.NAME, 'BOOLEAN_STATES', 1162, 37, 1162, 51),
woosh.Token(woosh.OP, ':', 1162, 51, 1162, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1162, 52, 1163, 0),
woosh.Token(woosh.INDENT, '            ', 1163, 0, 1163, 12),
woosh.Token(woosh.NAME, 'raise', 1163, 12, 1163, 17),
woosh.Token(woosh.NAME, 'ValueError', 1163, 18, 1163, 28),
woosh.Token(woosh.OP, '(', 1163, 28, 1163, 29),
woosh.Token(woosh.STRING, "'Not a boolean: %s'", 1163, 29, 1163, 48),
woosh.Token(woosh.OP, '%', 1163, 49, 1163, 50),
woosh.Token(woosh.NAME, 'value', 1163, 51, 1163, 56),
woosh.Token(woosh.OP, ')', 1163, 56, 1163, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 1163, 57, 1164, 0),
woosh.Token(woosh.DEDENT, '        ', 1164, 0, 1164, 8),
woosh.Token(woosh.NAME, 'return', 1164, 8, 1164, 14),
woosh.Token(woosh.NAME, 'self', 1164, 15, 1164, 19),
woosh.Token(woosh.OP, '.', 1164, 19, 1164, 20),
woosh.Token(woosh.NAME, 'BOOLEAN_STATES', 1164, 20, 1164, 34),
woosh.Token(woosh.OP, '[', 1164, 34, 1164, 35),
woosh.Token(woosh.NAME, 'value', 1164, 35, 1164, 40),
woosh.Token(woosh.OP, '.', 1164, 40, 1164, 41),
woosh.Token(woosh.NAME, 'lower', 1164, 41, 1164, 46),
woosh.Token(woosh.OP, '(', 1164, 46, 1164, 47),
woosh.Token(woosh.OP, ')', 1164, 47, 1164, 48),
woosh.Token(woosh.OP, ']', 1164, 48, 1164, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1164, 49, 1165, 0),
woosh.Token(woosh.DEDENT, '    ', 1166, 0, 1166, 4),
woosh.Token(woosh.NAME, 'def', 1166, 4, 1166, 7),
woosh.Token(woosh.NAME, '_validate_value_types', 1166, 8, 1166, 29),
woosh.Token(woosh.OP, '(', 1166, 29, 1166, 30),
woosh.Token(woosh.NAME, 'self', 1166, 30, 1166, 34),
woosh.Token(woosh.OP, ',', 1166, 34, 1166, 35),
woosh.Token(woosh.OP, '*', 1166, 36, 1166, 37),
woosh.Token(woosh.OP, ',', 1166, 37, 1166, 38),
woosh.Token(woosh.NAME, 'section', 1166, 39, 1166, 46),
woosh.Token(woosh.OP, '=', 1166, 46, 1166, 47),
woosh.Token(woosh.STRING, '""', 1166, 47, 1166, 49),
woosh.Token(woosh.OP, ',', 1166, 49, 1166, 50),
woosh.Token(woosh.NAME, 'option', 1166, 51, 1166, 57),
woosh.Token(woosh.OP, '=', 1166, 57, 1166, 58),
woosh.Token(woosh.STRING, '""', 1166, 58, 1166, 60),
woosh.Token(woosh.OP, ',', 1166, 60, 1166, 61),
woosh.Token(woosh.NAME, 'value', 1166, 62, 1166, 67),
woosh.Token(woosh.OP, '=', 1166, 67, 1166, 68),
woosh.Token(woosh.STRING, '""', 1166, 68, 1166, 70),
woosh.Token(woosh.OP, ')', 1166, 70, 1166, 71),
woosh.Token(woosh.OP, ':', 1166, 71, 1166, 72),
woosh.Token(woosh.NEWLINE, '\r\n', 1166, 72, 1167, 0),
woosh.Token(woosh.INDENT, '        ', 1167, 0, 1167, 8),
woosh.Token(woosh.STRING, '"""Raises a TypeError for non-string values.\r\n\r\n        The only legal non-string value if we allow valueless\r\n        options is None, so we need to check if the value is a\r\n        string if:\r\n        - we do not allow valueless options, or\r\n        - we allow valueless options but the value is not None\r\n\r\n        For compatibility reasons this method is not used in classic set()\r\n        for RawConfigParsers. It is invoked in every case for mapping protocol\r\n        access and in ConfigParser.set().\r\n        """', 1167, 8, 1178, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1178, 11, 1179, 0),
woosh.Token(woosh.NAME, 'if', 1179, 8, 1179, 10),
woosh.Token(woosh.NAME, 'not', 1179, 11, 1179, 14),
woosh.Token(woosh.NAME, 'isinstance', 1179, 15, 1179, 25),
woosh.Token(woosh.OP, '(', 1179, 25, 1179, 26),
woosh.Token(woosh.NAME, 'section', 1179, 26, 1179, 33),
woosh.Token(woosh.OP, ',', 1179, 33, 1179, 34),
woosh.Token(woosh.NAME, 'str', 1179, 35, 1179, 38),
woosh.Token(woosh.OP, ')', 1179, 38, 1179, 39),
woosh.Token(woosh.OP, ':', 1179, 39, 1179, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1179, 40, 1180, 0),
woosh.Token(woosh.INDENT, '            ', 1180, 0, 1180, 12),
woosh.Token(woosh.NAME, 'raise', 1180, 12, 1180, 17),
woosh.Token(woosh.NAME, 'TypeError', 1180, 18, 1180, 27),
woosh.Token(woosh.OP, '(', 1180, 27, 1180, 28),
woosh.Token(woosh.STRING, '"section names must be strings"', 1180, 28, 1180, 59),
woosh.Token(woosh.OP, ')', 1180, 59, 1180, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1180, 60, 1181, 0),
woosh.Token(woosh.DEDENT, '        ', 1181, 0, 1181, 8),
woosh.Token(woosh.NAME, 'if', 1181, 8, 1181, 10),
woosh.Token(woosh.NAME, 'not', 1181, 11, 1181, 14),
woosh.Token(woosh.NAME, 'isinstance', 1181, 15, 1181, 25),
woosh.Token(woosh.OP, '(', 1181, 25, 1181, 26),
woosh.Token(woosh.NAME, 'option', 1181, 26, 1181, 32),
woosh.Token(woosh.OP, ',', 1181, 32, 1181, 33),
woosh.Token(woosh.NAME, 'str', 1181, 34, 1181, 37),
woosh.Token(woosh.OP, ')', 1181, 37, 1181, 38),
woosh.Token(woosh.OP, ':', 1181, 38, 1181, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1181, 39, 1182, 0),
woosh.Token(woosh.INDENT, '            ', 1182, 0, 1182, 12),
woosh.Token(woosh.NAME, 'raise', 1182, 12, 1182, 17),
woosh.Token(woosh.NAME, 'TypeError', 1182, 18, 1182, 27),
woosh.Token(woosh.OP, '(', 1182, 27, 1182, 28),
woosh.Token(woosh.STRING, '"option keys must be strings"', 1182, 28, 1182, 57),
woosh.Token(woosh.OP, ')', 1182, 57, 1182, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 1182, 58, 1183, 0),
woosh.Token(woosh.DEDENT, '        ', 1183, 0, 1183, 8),
woosh.Token(woosh.NAME, 'if', 1183, 8, 1183, 10),
woosh.Token(woosh.NAME, 'not', 1183, 11, 1183, 14),
woosh.Token(woosh.NAME, 'self', 1183, 15, 1183, 19),
woosh.Token(woosh.OP, '.', 1183, 19, 1183, 20),
woosh.Token(woosh.NAME, '_allow_no_value', 1183, 20, 1183, 35),
woosh.Token(woosh.NAME, 'or', 1183, 36, 1183, 38),
woosh.Token(woosh.NAME, 'value', 1183, 39, 1183, 44),
woosh.Token(woosh.OP, ':', 1183, 44, 1183, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1183, 45, 1184, 0),
woosh.Token(woosh.INDENT, '            ', 1184, 0, 1184, 12),
woosh.Token(woosh.NAME, 'if', 1184, 12, 1184, 14),
woosh.Token(woosh.NAME, 'not', 1184, 15, 1184, 18),
woosh.Token(woosh.NAME, 'isinstance', 1184, 19, 1184, 29),
woosh.Token(woosh.OP, '(', 1184, 29, 1184, 30),
woosh.Token(woosh.NAME, 'value', 1184, 30, 1184, 35),
woosh.Token(woosh.OP, ',', 1184, 35, 1184, 36),
woosh.Token(woosh.NAME, 'str', 1184, 37, 1184, 40),
woosh.Token(woosh.OP, ')', 1184, 40, 1184, 41),
woosh.Token(woosh.OP, ':', 1184, 41, 1184, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1184, 42, 1185, 0),
woosh.Token(woosh.INDENT, '                ', 1185, 0, 1185, 16),
woosh.Token(woosh.NAME, 'raise', 1185, 16, 1185, 21),
woosh.Token(woosh.NAME, 'TypeError', 1185, 22, 1185, 31),
woosh.Token(woosh.OP, '(', 1185, 31, 1185, 32),
woosh.Token(woosh.STRING, '"option values must be strings"', 1185, 32, 1185, 63),
woosh.Token(woosh.OP, ')', 1185, 63, 1185, 64),
woosh.Token(woosh.NEWLINE, '\r\n', 1185, 64, 1186, 0),
woosh.Token(woosh.DEDENT, '    ', 1187, 0, 1187, 4),
woosh.Token(woosh.DEDENT, '', 1187, 4, 1187, 4),
woosh.Token(woosh.DEDENT, '', 1187, 4, 1187, 4),
woosh.Token(woosh.OP, '@', 1187, 4, 1187, 5),
woosh.Token(woosh.NAME, 'property', 1187, 5, 1187, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1187, 13, 1188, 0),
woosh.Token(woosh.NAME, 'def', 1188, 4, 1188, 7),
woosh.Token(woosh.NAME, 'converters', 1188, 8, 1188, 18),
woosh.Token(woosh.OP, '(', 1188, 18, 1188, 19),
woosh.Token(woosh.NAME, 'self', 1188, 19, 1188, 23),
woosh.Token(woosh.OP, ')', 1188, 23, 1188, 24),
woosh.Token(woosh.OP, ':', 1188, 24, 1188, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1188, 25, 1189, 0),
woosh.Token(woosh.INDENT, '        ', 1189, 0, 1189, 8),
woosh.Token(woosh.NAME, 'return', 1189, 8, 1189, 14),
woosh.Token(woosh.NAME, 'self', 1189, 15, 1189, 19),
woosh.Token(woosh.OP, '.', 1189, 19, 1189, 20),
woosh.Token(woosh.NAME, '_converters', 1189, 20, 1189, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1189, 31, 1190, 0),
woosh.Token(woosh.DEDENT, '', 1192, 0, 1192, 0),
woosh.Token(woosh.DEDENT, '', 1192, 0, 1192, 0),
woosh.Token(woosh.NAME, 'class', 1192, 0, 1192, 5),
woosh.Token(woosh.NAME, 'ConfigParser', 1192, 6, 1192, 18),
woosh.Token(woosh.OP, '(', 1192, 18, 1192, 19),
woosh.Token(woosh.NAME, 'RawConfigParser', 1192, 19, 1192, 34),
woosh.Token(woosh.OP, ')', 1192, 34, 1192, 35),
woosh.Token(woosh.OP, ':', 1192, 35, 1192, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1192, 36, 1193, 0),
woosh.Token(woosh.INDENT, '    ', 1193, 0, 1193, 4),
woosh.Token(woosh.STRING, '"""ConfigParser implementing interpolation."""', 1193, 4, 1193, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 1193, 50, 1194, 0),
woosh.Token(woosh.NAME, '_DEFAULT_INTERPOLATION', 1195, 4, 1195, 26),
woosh.Token(woosh.OP, '=', 1195, 27, 1195, 28),
woosh.Token(woosh.NAME, 'BasicInterpolation', 1195, 29, 1195, 47),
woosh.Token(woosh.OP, '(', 1195, 47, 1195, 48),
woosh.Token(woosh.OP, ')', 1195, 48, 1195, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1195, 49, 1196, 0),
woosh.Token(woosh.NAME, 'def', 1197, 4, 1197, 7),
woosh.Token(woosh.NAME, 'set', 1197, 8, 1197, 11),
woosh.Token(woosh.OP, '(', 1197, 11, 1197, 12),
woosh.Token(woosh.NAME, 'self', 1197, 12, 1197, 16),
woosh.Token(woosh.OP, ',', 1197, 16, 1197, 17),
woosh.Token(woosh.NAME, 'section', 1197, 18, 1197, 25),
woosh.Token(woosh.OP, ',', 1197, 25, 1197, 26),
woosh.Token(woosh.NAME, 'option', 1197, 27, 1197, 33),
woosh.Token(woosh.OP, ',', 1197, 33, 1197, 34),
woosh.Token(woosh.NAME, 'value', 1197, 35, 1197, 40),
woosh.Token(woosh.OP, '=', 1197, 40, 1197, 41),
woosh.Token(woosh.NAME, 'None', 1197, 41, 1197, 45),
woosh.Token(woosh.OP, ')', 1197, 45, 1197, 46),
woosh.Token(woosh.OP, ':', 1197, 46, 1197, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 1197, 47, 1198, 0),
woosh.Token(woosh.INDENT, '        ', 1198, 0, 1198, 8),
woosh.Token(woosh.STRING, '"""Set an option.  Extends RawConfigParser.set by validating type and\r\n        interpolation syntax on the value."""', 1198, 8, 1199, 45),
woosh.Token(woosh.NEWLINE, '\r\n', 1199, 45, 1200, 0),
woosh.Token(woosh.NAME, 'self', 1200, 8, 1200, 12),
woosh.Token(woosh.OP, '.', 1200, 12, 1200, 13),
woosh.Token(woosh.NAME, '_validate_value_types', 1200, 13, 1200, 34),
woosh.Token(woosh.OP, '(', 1200, 34, 1200, 35),
woosh.Token(woosh.NAME, 'option', 1200, 35, 1200, 41),
woosh.Token(woosh.OP, '=', 1200, 41, 1200, 42),
woosh.Token(woosh.NAME, 'option', 1200, 42, 1200, 48),
woosh.Token(woosh.OP, ',', 1200, 48, 1200, 49),
woosh.Token(woosh.NAME, 'value', 1200, 50, 1200, 55),
woosh.Token(woosh.OP, '=', 1200, 55, 1200, 56),
woosh.Token(woosh.NAME, 'value', 1200, 56, 1200, 61),
woosh.Token(woosh.OP, ')', 1200, 61, 1200, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 1200, 62, 1201, 0),
woosh.Token(woosh.NAME, 'super', 1201, 8, 1201, 13),
woosh.Token(woosh.OP, '(', 1201, 13, 1201, 14),
woosh.Token(woosh.OP, ')', 1201, 14, 1201, 15),
woosh.Token(woosh.OP, '.', 1201, 15, 1201, 16),
woosh.Token(woosh.NAME, 'set', 1201, 16, 1201, 19),
woosh.Token(woosh.OP, '(', 1201, 19, 1201, 20),
woosh.Token(woosh.NAME, 'section', 1201, 20, 1201, 27),
woosh.Token(woosh.OP, ',', 1201, 27, 1201, 28),
woosh.Token(woosh.NAME, 'option', 1201, 29, 1201, 35),
woosh.Token(woosh.OP, ',', 1201, 35, 1201, 36),
woosh.Token(woosh.NAME, 'value', 1201, 37, 1201, 42),
woosh.Token(woosh.OP, ')', 1201, 42, 1201, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1201, 43, 1202, 0),
woosh.Token(woosh.DEDENT, '    ', 1203, 0, 1203, 4),
woosh.Token(woosh.NAME, 'def', 1203, 4, 1203, 7),
woosh.Token(woosh.NAME, 'add_section', 1203, 8, 1203, 19),
woosh.Token(woosh.OP, '(', 1203, 19, 1203, 20),
woosh.Token(woosh.NAME, 'self', 1203, 20, 1203, 24),
woosh.Token(woosh.OP, ',', 1203, 24, 1203, 25),
woosh.Token(woosh.NAME, 'section', 1203, 26, 1203, 33),
woosh.Token(woosh.OP, ')', 1203, 33, 1203, 34),
woosh.Token(woosh.OP, ':', 1203, 34, 1203, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1203, 35, 1204, 0),
woosh.Token(woosh.INDENT, '        ', 1204, 0, 1204, 8),
woosh.Token(woosh.STRING, '"""Create a new section in the configuration.  Extends\r\n        RawConfigParser.add_section by validating if the section name is\r\n        a string."""', 1204, 8, 1206, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 1206, 20, 1207, 0),
woosh.Token(woosh.NAME, 'self', 1207, 8, 1207, 12),
woosh.Token(woosh.OP, '.', 1207, 12, 1207, 13),
woosh.Token(woosh.NAME, '_validate_value_types', 1207, 13, 1207, 34),
woosh.Token(woosh.OP, '(', 1207, 34, 1207, 35),
woosh.Token(woosh.NAME, 'section', 1207, 35, 1207, 42),
woosh.Token(woosh.OP, '=', 1207, 42, 1207, 43),
woosh.Token(woosh.NAME, 'section', 1207, 43, 1207, 50),
woosh.Token(woosh.OP, ')', 1207, 50, 1207, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1207, 51, 1208, 0),
woosh.Token(woosh.NAME, 'super', 1208, 8, 1208, 13),
woosh.Token(woosh.OP, '(', 1208, 13, 1208, 14),
woosh.Token(woosh.OP, ')', 1208, 14, 1208, 15),
woosh.Token(woosh.OP, '.', 1208, 15, 1208, 16),
woosh.Token(woosh.NAME, 'add_section', 1208, 16, 1208, 27),
woosh.Token(woosh.OP, '(', 1208, 27, 1208, 28),
woosh.Token(woosh.NAME, 'section', 1208, 28, 1208, 35),
woosh.Token(woosh.OP, ')', 1208, 35, 1208, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1208, 36, 1209, 0),
woosh.Token(woosh.DEDENT, '    ', 1210, 0, 1210, 4),
woosh.Token(woosh.NAME, 'def', 1210, 4, 1210, 7),
woosh.Token(woosh.NAME, '_read_defaults', 1210, 8, 1210, 22),
woosh.Token(woosh.OP, '(', 1210, 22, 1210, 23),
woosh.Token(woosh.NAME, 'self', 1210, 23, 1210, 27),
woosh.Token(woosh.OP, ',', 1210, 27, 1210, 28),
woosh.Token(woosh.NAME, 'defaults', 1210, 29, 1210, 37),
woosh.Token(woosh.OP, ')', 1210, 37, 1210, 38),
woosh.Token(woosh.OP, ':', 1210, 38, 1210, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1210, 39, 1211, 0),
woosh.Token(woosh.INDENT, '        ', 1211, 0, 1211, 8),
woosh.Token(woosh.STRING, '"""Reads the defaults passed in the initializer, implicitly converting\r\n        values to strings like the rest of the API.\r\n\r\n        Does not perform interpolation for backwards compatibility.\r\n        """', 1211, 8, 1215, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1215, 11, 1216, 0),
woosh.Token(woosh.NAME, 'try', 1216, 8, 1216, 11),
woosh.Token(woosh.OP, ':', 1216, 11, 1216, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1216, 12, 1217, 0),
woosh.Token(woosh.INDENT, '            ', 1217, 0, 1217, 12),
woosh.Token(woosh.NAME, 'hold_interpolation', 1217, 12, 1217, 30),
woosh.Token(woosh.OP, '=', 1217, 31, 1217, 32),
woosh.Token(woosh.NAME, 'self', 1217, 33, 1217, 37),
woosh.Token(woosh.OP, '.', 1217, 37, 1217, 38),
woosh.Token(woosh.NAME, '_interpolation', 1217, 38, 1217, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1217, 52, 1218, 0),
woosh.Token(woosh.NAME, 'self', 1218, 12, 1218, 16),
woosh.Token(woosh.OP, '.', 1218, 16, 1218, 17),
woosh.Token(woosh.NAME, '_interpolation', 1218, 17, 1218, 31),
woosh.Token(woosh.OP, '=', 1218, 32, 1218, 33),
woosh.Token(woosh.NAME, 'Interpolation', 1218, 34, 1218, 47),
woosh.Token(woosh.OP, '(', 1218, 47, 1218, 48),
woosh.Token(woosh.OP, ')', 1218, 48, 1218, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1218, 49, 1219, 0),
woosh.Token(woosh.NAME, 'self', 1219, 12, 1219, 16),
woosh.Token(woosh.OP, '.', 1219, 16, 1219, 17),
woosh.Token(woosh.NAME, 'read_dict', 1219, 17, 1219, 26),
woosh.Token(woosh.OP, '(', 1219, 26, 1219, 27),
woosh.Token(woosh.OP, '{', 1219, 27, 1219, 28),
woosh.Token(woosh.NAME, 'self', 1219, 28, 1219, 32),
woosh.Token(woosh.OP, '.', 1219, 32, 1219, 33),
woosh.Token(woosh.NAME, 'default_section', 1219, 33, 1219, 48),
woosh.Token(woosh.OP, ':', 1219, 48, 1219, 49),
woosh.Token(woosh.NAME, 'defaults', 1219, 50, 1219, 58),
woosh.Token(woosh.OP, '}', 1219, 58, 1219, 59),
woosh.Token(woosh.OP, ')', 1219, 59, 1219, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 1219, 60, 1220, 0),
woosh.Token(woosh.DEDENT, '        ', 1220, 0, 1220, 8),
woosh.Token(woosh.NAME, 'finally', 1220, 8, 1220, 15),
woosh.Token(woosh.OP, ':', 1220, 15, 1220, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1220, 16, 1221, 0),
woosh.Token(woosh.INDENT, '            ', 1221, 0, 1221, 12),
woosh.Token(woosh.NAME, 'self', 1221, 12, 1221, 16),
woosh.Token(woosh.OP, '.', 1221, 16, 1221, 17),
woosh.Token(woosh.NAME, '_interpolation', 1221, 17, 1221, 31),
woosh.Token(woosh.OP, '=', 1221, 32, 1221, 33),
woosh.Token(woosh.NAME, 'hold_interpolation', 1221, 34, 1221, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 1221, 52, 1222, 0),
woosh.Token(woosh.DEDENT, '', 1224, 0, 1224, 0),
woosh.Token(woosh.DEDENT, '', 1224, 0, 1224, 0),
woosh.Token(woosh.DEDENT, '', 1224, 0, 1224, 0),
woosh.Token(woosh.NAME, 'class', 1224, 0, 1224, 5),
woosh.Token(woosh.NAME, 'SafeConfigParser', 1224, 6, 1224, 22),
woosh.Token(woosh.OP, '(', 1224, 22, 1224, 23),
woosh.Token(woosh.NAME, 'ConfigParser', 1224, 23, 1224, 35),
woosh.Token(woosh.OP, ')', 1224, 35, 1224, 36),
woosh.Token(woosh.OP, ':', 1224, 36, 1224, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1224, 37, 1225, 0),
woosh.Token(woosh.INDENT, '    ', 1225, 0, 1225, 4),
woosh.Token(woosh.STRING, '"""ConfigParser alias for backwards compatibility purposes."""', 1225, 4, 1225, 66),
woosh.Token(woosh.NEWLINE, '\r\n', 1225, 66, 1226, 0),
woosh.Token(woosh.NAME, 'def', 1227, 4, 1227, 7),
woosh.Token(woosh.NAME, '__init__', 1227, 8, 1227, 16),
woosh.Token(woosh.OP, '(', 1227, 16, 1227, 17),
woosh.Token(woosh.NAME, 'self', 1227, 17, 1227, 21),
woosh.Token(woosh.OP, ',', 1227, 21, 1227, 22),
woosh.Token(woosh.OP, '*', 1227, 23, 1227, 24),
woosh.Token(woosh.NAME, 'args', 1227, 24, 1227, 28),
woosh.Token(woosh.OP, ',', 1227, 28, 1227, 29),
woosh.Token(woosh.OP, '**', 1227, 30, 1227, 32),
woosh.Token(woosh.NAME, 'kwargs', 1227, 32, 1227, 38),
woosh.Token(woosh.OP, ')', 1227, 38, 1227, 39),
woosh.Token(woosh.OP, ':', 1227, 39, 1227, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1227, 40, 1228, 0),
woosh.Token(woosh.INDENT, '        ', 1228, 0, 1228, 8),
woosh.Token(woosh.NAME, 'super', 1228, 8, 1228, 13),
woosh.Token(woosh.OP, '(', 1228, 13, 1228, 14),
woosh.Token(woosh.OP, ')', 1228, 14, 1228, 15),
woosh.Token(woosh.OP, '.', 1228, 15, 1228, 16),
woosh.Token(woosh.NAME, '__init__', 1228, 16, 1228, 24),
woosh.Token(woosh.OP, '(', 1228, 24, 1228, 25),
woosh.Token(woosh.OP, '*', 1228, 25, 1228, 26),
woosh.Token(woosh.NAME, 'args', 1228, 26, 1228, 30),
woosh.Token(woosh.OP, ',', 1228, 30, 1228, 31),
woosh.Token(woosh.OP, '**', 1228, 32, 1228, 34),
woosh.Token(woosh.NAME, 'kwargs', 1228, 34, 1228, 40),
woosh.Token(woosh.OP, ')', 1228, 40, 1228, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1228, 41, 1229, 0),
woosh.Token(woosh.NAME, 'warnings', 1229, 8, 1229, 16),
woosh.Token(woosh.OP, '.', 1229, 16, 1229, 17),
woosh.Token(woosh.NAME, 'warn', 1229, 17, 1229, 21),
woosh.Token(woosh.OP, '(', 1229, 21, 1229, 22),
woosh.Token(woosh.STRING, '"The SafeConfigParser class has been renamed to ConfigParser "', 1230, 12, 1230, 74),
woosh.Token(woosh.STRING, '"in Python 3.2. This alias will be removed in future versions."', 1231, 12, 1231, 75),
woosh.Token(woosh.STRING, '" Use ConfigParser directly instead."', 1232, 12, 1232, 49),
woosh.Token(woosh.OP, ',', 1232, 49, 1232, 50),
woosh.Token(woosh.NAME, 'DeprecationWarning', 1233, 12, 1233, 30),
woosh.Token(woosh.OP, ',', 1233, 30, 1233, 31),
woosh.Token(woosh.NAME, 'stacklevel', 1233, 32, 1233, 42),
woosh.Token(woosh.OP, '=', 1233, 42, 1233, 43),
woosh.Token(woosh.NUMBER, '2', 1233, 43, 1233, 44),
woosh.Token(woosh.OP, ')', 1234, 8, 1234, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 1234, 9, 1235, 0),
woosh.Token(woosh.DEDENT, '', 1237, 0, 1237, 0),
woosh.Token(woosh.DEDENT, '', 1237, 0, 1237, 0),
woosh.Token(woosh.NAME, 'class', 1237, 0, 1237, 5),
woosh.Token(woosh.NAME, 'SectionProxy', 1237, 6, 1237, 18),
woosh.Token(woosh.OP, '(', 1237, 18, 1237, 19),
woosh.Token(woosh.NAME, 'MutableMapping', 1237, 19, 1237, 33),
woosh.Token(woosh.OP, ')', 1237, 33, 1237, 34),
woosh.Token(woosh.OP, ':', 1237, 34, 1237, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1237, 35, 1238, 0),
woosh.Token(woosh.INDENT, '    ', 1238, 0, 1238, 4),
woosh.Token(woosh.STRING, '"""A proxy for a single section from a parser."""', 1238, 4, 1238, 53),
woosh.Token(woosh.NEWLINE, '\r\n', 1238, 53, 1239, 0),
woosh.Token(woosh.NAME, 'def', 1240, 4, 1240, 7),
woosh.Token(woosh.NAME, '__init__', 1240, 8, 1240, 16),
woosh.Token(woosh.OP, '(', 1240, 16, 1240, 17),
woosh.Token(woosh.NAME, 'self', 1240, 17, 1240, 21),
woosh.Token(woosh.OP, ',', 1240, 21, 1240, 22),
woosh.Token(woosh.NAME, 'parser', 1240, 23, 1240, 29),
woosh.Token(woosh.OP, ',', 1240, 29, 1240, 30),
woosh.Token(woosh.NAME, 'name', 1240, 31, 1240, 35),
woosh.Token(woosh.OP, ')', 1240, 35, 1240, 36),
woosh.Token(woosh.OP, ':', 1240, 36, 1240, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1240, 37, 1241, 0),
woosh.Token(woosh.INDENT, '        ', 1241, 0, 1241, 8),
woosh.Token(woosh.STRING, '"""Creates a view on a section of the specified `name` in `parser`."""', 1241, 8, 1241, 78),
woosh.Token(woosh.NEWLINE, '\r\n', 1241, 78, 1242, 0),
woosh.Token(woosh.NAME, 'self', 1242, 8, 1242, 12),
woosh.Token(woosh.OP, '.', 1242, 12, 1242, 13),
woosh.Token(woosh.NAME, '_parser', 1242, 13, 1242, 20),
woosh.Token(woosh.OP, '=', 1242, 21, 1242, 22),
woosh.Token(woosh.NAME, 'parser', 1242, 23, 1242, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1242, 29, 1243, 0),
woosh.Token(woosh.NAME, 'self', 1243, 8, 1243, 12),
woosh.Token(woosh.OP, '.', 1243, 12, 1243, 13),
woosh.Token(woosh.NAME, '_name', 1243, 13, 1243, 18),
woosh.Token(woosh.OP, '=', 1243, 19, 1243, 20),
woosh.Token(woosh.NAME, 'name', 1243, 21, 1243, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1243, 25, 1244, 0),
woosh.Token(woosh.NAME, 'for', 1244, 8, 1244, 11),
woosh.Token(woosh.NAME, 'conv', 1244, 12, 1244, 16),
woosh.Token(woosh.NAME, 'in', 1244, 17, 1244, 19),
woosh.Token(woosh.NAME, 'parser', 1244, 20, 1244, 26),
woosh.Token(woosh.OP, '.', 1244, 26, 1244, 27),
woosh.Token(woosh.NAME, 'converters', 1244, 27, 1244, 37),
woosh.Token(woosh.OP, ':', 1244, 37, 1244, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1244, 38, 1245, 0),
woosh.Token(woosh.INDENT, '            ', 1245, 0, 1245, 12),
woosh.Token(woosh.NAME, 'key', 1245, 12, 1245, 15),
woosh.Token(woosh.OP, '=', 1245, 16, 1245, 17),
woosh.Token(woosh.STRING, "'get'", 1245, 18, 1245, 23),
woosh.Token(woosh.OP, '+', 1245, 24, 1245, 25),
woosh.Token(woosh.NAME, 'conv', 1245, 26, 1245, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1245, 30, 1246, 0),
woosh.Token(woosh.NAME, 'getter', 1246, 12, 1246, 18),
woosh.Token(woosh.OP, '=', 1246, 19, 1246, 20),
woosh.Token(woosh.NAME, 'functools', 1246, 21, 1246, 30),
woosh.Token(woosh.OP, '.', 1246, 30, 1246, 31),
woosh.Token(woosh.NAME, 'partial', 1246, 31, 1246, 38),
woosh.Token(woosh.OP, '(', 1246, 38, 1246, 39),
woosh.Token(woosh.NAME, 'self', 1246, 39, 1246, 43),
woosh.Token(woosh.OP, '.', 1246, 43, 1246, 44),
woosh.Token(woosh.NAME, 'get', 1246, 44, 1246, 47),
woosh.Token(woosh.OP, ',', 1246, 47, 1246, 48),
woosh.Token(woosh.NAME, '_impl', 1246, 49, 1246, 54),
woosh.Token(woosh.OP, '=', 1246, 54, 1246, 55),
woosh.Token(woosh.NAME, 'getattr', 1246, 55, 1246, 62),
woosh.Token(woosh.OP, '(', 1246, 62, 1246, 63),
woosh.Token(woosh.NAME, 'parser', 1246, 63, 1246, 69),
woosh.Token(woosh.OP, ',', 1246, 69, 1246, 70),
woosh.Token(woosh.NAME, 'key', 1246, 71, 1246, 74),
woosh.Token(woosh.OP, ')', 1246, 74, 1246, 75),
woosh.Token(woosh.OP, ')', 1246, 75, 1246, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1246, 76, 1247, 0),
woosh.Token(woosh.NAME, 'setattr', 1247, 12, 1247, 19),
woosh.Token(woosh.OP, '(', 1247, 19, 1247, 20),
woosh.Token(woosh.NAME, 'self', 1247, 20, 1247, 24),
woosh.Token(woosh.OP, ',', 1247, 24, 1247, 25),
woosh.Token(woosh.NAME, 'key', 1247, 26, 1247, 29),
woosh.Token(woosh.OP, ',', 1247, 29, 1247, 30),
woosh.Token(woosh.NAME, 'getter', 1247, 31, 1247, 37),
woosh.Token(woosh.OP, ')', 1247, 37, 1247, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1247, 38, 1248, 0),
woosh.Token(woosh.DEDENT, '    ', 1249, 0, 1249, 4),
woosh.Token(woosh.DEDENT, '', 1249, 4, 1249, 4),
woosh.Token(woosh.NAME, 'def', 1249, 4, 1249, 7),
woosh.Token(woosh.NAME, '__repr__', 1249, 8, 1249, 16),
woosh.Token(woosh.OP, '(', 1249, 16, 1249, 17),
woosh.Token(woosh.NAME, 'self', 1249, 17, 1249, 21),
woosh.Token(woosh.OP, ')', 1249, 21, 1249, 22),
woosh.Token(woosh.OP, ':', 1249, 22, 1249, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1249, 23, 1250, 0),
woosh.Token(woosh.INDENT, '        ', 1250, 0, 1250, 8),
woosh.Token(woosh.NAME, 'return', 1250, 8, 1250, 14),
woosh.Token(woosh.STRING, "'<Section: {}>'", 1250, 15, 1250, 30),
woosh.Token(woosh.OP, '.', 1250, 30, 1250, 31),
woosh.Token(woosh.NAME, 'format', 1250, 31, 1250, 37),
woosh.Token(woosh.OP, '(', 1250, 37, 1250, 38),
woosh.Token(woosh.NAME, 'self', 1250, 38, 1250, 42),
woosh.Token(woosh.OP, '.', 1250, 42, 1250, 43),
woosh.Token(woosh.NAME, '_name', 1250, 43, 1250, 48),
woosh.Token(woosh.OP, ')', 1250, 48, 1250, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1250, 49, 1251, 0),
woosh.Token(woosh.DEDENT, '    ', 1252, 0, 1252, 4),
woosh.Token(woosh.NAME, 'def', 1252, 4, 1252, 7),
woosh.Token(woosh.NAME, '__getitem__', 1252, 8, 1252, 19),
woosh.Token(woosh.OP, '(', 1252, 19, 1252, 20),
woosh.Token(woosh.NAME, 'self', 1252, 20, 1252, 24),
woosh.Token(woosh.OP, ',', 1252, 24, 1252, 25),
woosh.Token(woosh.NAME, 'key', 1252, 26, 1252, 29),
woosh.Token(woosh.OP, ')', 1252, 29, 1252, 30),
woosh.Token(woosh.OP, ':', 1252, 30, 1252, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1252, 31, 1253, 0),
woosh.Token(woosh.INDENT, '        ', 1253, 0, 1253, 8),
woosh.Token(woosh.NAME, 'if', 1253, 8, 1253, 10),
woosh.Token(woosh.NAME, 'not', 1253, 11, 1253, 14),
woosh.Token(woosh.NAME, 'self', 1253, 15, 1253, 19),
woosh.Token(woosh.OP, '.', 1253, 19, 1253, 20),
woosh.Token(woosh.NAME, '_parser', 1253, 20, 1253, 27),
woosh.Token(woosh.OP, '.', 1253, 27, 1253, 28),
woosh.Token(woosh.NAME, 'has_option', 1253, 28, 1253, 38),
woosh.Token(woosh.OP, '(', 1253, 38, 1253, 39),
woosh.Token(woosh.NAME, 'self', 1253, 39, 1253, 43),
woosh.Token(woosh.OP, '.', 1253, 43, 1253, 44),
woosh.Token(woosh.NAME, '_name', 1253, 44, 1253, 49),
woosh.Token(woosh.OP, ',', 1253, 49, 1253, 50),
woosh.Token(woosh.NAME, 'key', 1253, 51, 1253, 54),
woosh.Token(woosh.OP, ')', 1253, 54, 1253, 55),
woosh.Token(woosh.OP, ':', 1253, 55, 1253, 56),
woosh.Token(woosh.NEWLINE, '\r\n', 1253, 56, 1254, 0),
woosh.Token(woosh.INDENT, '            ', 1254, 0, 1254, 12),
woosh.Token(woosh.NAME, 'raise', 1254, 12, 1254, 17),
woosh.Token(woosh.NAME, 'KeyError', 1254, 18, 1254, 26),
woosh.Token(woosh.OP, '(', 1254, 26, 1254, 27),
woosh.Token(woosh.NAME, 'key', 1254, 27, 1254, 30),
woosh.Token(woosh.OP, ')', 1254, 30, 1254, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1254, 31, 1255, 0),
woosh.Token(woosh.DEDENT, '        ', 1255, 0, 1255, 8),
woosh.Token(woosh.NAME, 'return', 1255, 8, 1255, 14),
woosh.Token(woosh.NAME, 'self', 1255, 15, 1255, 19),
woosh.Token(woosh.OP, '.', 1255, 19, 1255, 20),
woosh.Token(woosh.NAME, '_parser', 1255, 20, 1255, 27),
woosh.Token(woosh.OP, '.', 1255, 27, 1255, 28),
woosh.Token(woosh.NAME, 'get', 1255, 28, 1255, 31),
woosh.Token(woosh.OP, '(', 1255, 31, 1255, 32),
woosh.Token(woosh.NAME, 'self', 1255, 32, 1255, 36),
woosh.Token(woosh.OP, '.', 1255, 36, 1255, 37),
woosh.Token(woosh.NAME, '_name', 1255, 37, 1255, 42),
woosh.Token(woosh.OP, ',', 1255, 42, 1255, 43),
woosh.Token(woosh.NAME, 'key', 1255, 44, 1255, 47),
woosh.Token(woosh.OP, ')', 1255, 47, 1255, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1255, 48, 1256, 0),
woosh.Token(woosh.DEDENT, '    ', 1257, 0, 1257, 4),
woosh.Token(woosh.NAME, 'def', 1257, 4, 1257, 7),
woosh.Token(woosh.NAME, '__setitem__', 1257, 8, 1257, 19),
woosh.Token(woosh.OP, '(', 1257, 19, 1257, 20),
woosh.Token(woosh.NAME, 'self', 1257, 20, 1257, 24),
woosh.Token(woosh.OP, ',', 1257, 24, 1257, 25),
woosh.Token(woosh.NAME, 'key', 1257, 26, 1257, 29),
woosh.Token(woosh.OP, ',', 1257, 29, 1257, 30),
woosh.Token(woosh.NAME, 'value', 1257, 31, 1257, 36),
woosh.Token(woosh.OP, ')', 1257, 36, 1257, 37),
woosh.Token(woosh.OP, ':', 1257, 37, 1257, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1257, 38, 1258, 0),
woosh.Token(woosh.INDENT, '        ', 1258, 0, 1258, 8),
woosh.Token(woosh.NAME, 'self', 1258, 8, 1258, 12),
woosh.Token(woosh.OP, '.', 1258, 12, 1258, 13),
woosh.Token(woosh.NAME, '_parser', 1258, 13, 1258, 20),
woosh.Token(woosh.OP, '.', 1258, 20, 1258, 21),
woosh.Token(woosh.NAME, '_validate_value_types', 1258, 21, 1258, 42),
woosh.Token(woosh.OP, '(', 1258, 42, 1258, 43),
woosh.Token(woosh.NAME, 'option', 1258, 43, 1258, 49),
woosh.Token(woosh.OP, '=', 1258, 49, 1258, 50),
woosh.Token(woosh.NAME, 'key', 1258, 50, 1258, 53),
woosh.Token(woosh.OP, ',', 1258, 53, 1258, 54),
woosh.Token(woosh.NAME, 'value', 1258, 55, 1258, 60),
woosh.Token(woosh.OP, '=', 1258, 60, 1258, 61),
woosh.Token(woosh.NAME, 'value', 1258, 61, 1258, 66),
woosh.Token(woosh.OP, ')', 1258, 66, 1258, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 1258, 67, 1259, 0),
woosh.Token(woosh.NAME, 'return', 1259, 8, 1259, 14),
woosh.Token(woosh.NAME, 'self', 1259, 15, 1259, 19),
woosh.Token(woosh.OP, '.', 1259, 19, 1259, 20),
woosh.Token(woosh.NAME, '_parser', 1259, 20, 1259, 27),
woosh.Token(woosh.OP, '.', 1259, 27, 1259, 28),
woosh.Token(woosh.NAME, 'set', 1259, 28, 1259, 31),
woosh.Token(woosh.OP, '(', 1259, 31, 1259, 32),
woosh.Token(woosh.NAME, 'self', 1259, 32, 1259, 36),
woosh.Token(woosh.OP, '.', 1259, 36, 1259, 37),
woosh.Token(woosh.NAME, '_name', 1259, 37, 1259, 42),
woosh.Token(woosh.OP, ',', 1259, 42, 1259, 43),
woosh.Token(woosh.NAME, 'key', 1259, 44, 1259, 47),
woosh.Token(woosh.OP, ',', 1259, 47, 1259, 48),
woosh.Token(woosh.NAME, 'value', 1259, 49, 1259, 54),
woosh.Token(woosh.OP, ')', 1259, 54, 1259, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1259, 55, 1260, 0),
woosh.Token(woosh.DEDENT, '    ', 1261, 0, 1261, 4),
woosh.Token(woosh.NAME, 'def', 1261, 4, 1261, 7),
woosh.Token(woosh.NAME, '__delitem__', 1261, 8, 1261, 19),
woosh.Token(woosh.OP, '(', 1261, 19, 1261, 20),
woosh.Token(woosh.NAME, 'self', 1261, 20, 1261, 24),
woosh.Token(woosh.OP, ',', 1261, 24, 1261, 25),
woosh.Token(woosh.NAME, 'key', 1261, 26, 1261, 29),
woosh.Token(woosh.OP, ')', 1261, 29, 1261, 30),
woosh.Token(woosh.OP, ':', 1261, 30, 1261, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1261, 31, 1262, 0),
woosh.Token(woosh.INDENT, '        ', 1262, 0, 1262, 8),
woosh.Token(woosh.NAME, 'if', 1262, 8, 1262, 10),
woosh.Token(woosh.NAME, 'not', 1262, 11, 1262, 14),
woosh.Token(woosh.OP, '(', 1262, 15, 1262, 16),
woosh.Token(woosh.NAME, 'self', 1262, 16, 1262, 20),
woosh.Token(woosh.OP, '.', 1262, 20, 1262, 21),
woosh.Token(woosh.NAME, '_parser', 1262, 21, 1262, 28),
woosh.Token(woosh.OP, '.', 1262, 28, 1262, 29),
woosh.Token(woosh.NAME, 'has_option', 1262, 29, 1262, 39),
woosh.Token(woosh.OP, '(', 1262, 39, 1262, 40),
woosh.Token(woosh.NAME, 'self', 1262, 40, 1262, 44),
woosh.Token(woosh.OP, '.', 1262, 44, 1262, 45),
woosh.Token(woosh.NAME, '_name', 1262, 45, 1262, 50),
woosh.Token(woosh.OP, ',', 1262, 50, 1262, 51),
woosh.Token(woosh.NAME, 'key', 1262, 52, 1262, 55),
woosh.Token(woosh.OP, ')', 1262, 55, 1262, 56),
woosh.Token(woosh.NAME, 'and', 1262, 57, 1262, 60),
woosh.Token(woosh.NAME, 'self', 1263, 16, 1263, 20),
woosh.Token(woosh.OP, '.', 1263, 20, 1263, 21),
woosh.Token(woosh.NAME, '_parser', 1263, 21, 1263, 28),
woosh.Token(woosh.OP, '.', 1263, 28, 1263, 29),
woosh.Token(woosh.NAME, 'remove_option', 1263, 29, 1263, 42),
woosh.Token(woosh.OP, '(', 1263, 42, 1263, 43),
woosh.Token(woosh.NAME, 'self', 1263, 43, 1263, 47),
woosh.Token(woosh.OP, '.', 1263, 47, 1263, 48),
woosh.Token(woosh.NAME, '_name', 1263, 48, 1263, 53),
woosh.Token(woosh.OP, ',', 1263, 53, 1263, 54),
woosh.Token(woosh.NAME, 'key', 1263, 55, 1263, 58),
woosh.Token(woosh.OP, ')', 1263, 58, 1263, 59),
woosh.Token(woosh.OP, ')', 1263, 59, 1263, 60),
woosh.Token(woosh.OP, ':', 1263, 60, 1263, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1263, 61, 1264, 0),
woosh.Token(woosh.INDENT, '            ', 1264, 0, 1264, 12),
woosh.Token(woosh.NAME, 'raise', 1264, 12, 1264, 17),
woosh.Token(woosh.NAME, 'KeyError', 1264, 18, 1264, 26),
woosh.Token(woosh.OP, '(', 1264, 26, 1264, 27),
woosh.Token(woosh.NAME, 'key', 1264, 27, 1264, 30),
woosh.Token(woosh.OP, ')', 1264, 30, 1264, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1264, 31, 1265, 0),
woosh.Token(woosh.DEDENT, '    ', 1266, 0, 1266, 4),
woosh.Token(woosh.DEDENT, '', 1266, 4, 1266, 4),
woosh.Token(woosh.NAME, 'def', 1266, 4, 1266, 7),
woosh.Token(woosh.NAME, '__contains__', 1266, 8, 1266, 20),
woosh.Token(woosh.OP, '(', 1266, 20, 1266, 21),
woosh.Token(woosh.NAME, 'self', 1266, 21, 1266, 25),
woosh.Token(woosh.OP, ',', 1266, 25, 1266, 26),
woosh.Token(woosh.NAME, 'key', 1266, 27, 1266, 30),
woosh.Token(woosh.OP, ')', 1266, 30, 1266, 31),
woosh.Token(woosh.OP, ':', 1266, 31, 1266, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1266, 32, 1267, 0),
woosh.Token(woosh.INDENT, '        ', 1267, 0, 1267, 8),
woosh.Token(woosh.NAME, 'return', 1267, 8, 1267, 14),
woosh.Token(woosh.NAME, 'self', 1267, 15, 1267, 19),
woosh.Token(woosh.OP, '.', 1267, 19, 1267, 20),
woosh.Token(woosh.NAME, '_parser', 1267, 20, 1267, 27),
woosh.Token(woosh.OP, '.', 1267, 27, 1267, 28),
woosh.Token(woosh.NAME, 'has_option', 1267, 28, 1267, 38),
woosh.Token(woosh.OP, '(', 1267, 38, 1267, 39),
woosh.Token(woosh.NAME, 'self', 1267, 39, 1267, 43),
woosh.Token(woosh.OP, '.', 1267, 43, 1267, 44),
woosh.Token(woosh.NAME, '_name', 1267, 44, 1267, 49),
woosh.Token(woosh.OP, ',', 1267, 49, 1267, 50),
woosh.Token(woosh.NAME, 'key', 1267, 51, 1267, 54),
woosh.Token(woosh.OP, ')', 1267, 54, 1267, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1267, 55, 1268, 0),
woosh.Token(woosh.DEDENT, '    ', 1269, 0, 1269, 4),
woosh.Token(woosh.NAME, 'def', 1269, 4, 1269, 7),
woosh.Token(woosh.NAME, '__len__', 1269, 8, 1269, 15),
woosh.Token(woosh.OP, '(', 1269, 15, 1269, 16),
woosh.Token(woosh.NAME, 'self', 1269, 16, 1269, 20),
woosh.Token(woosh.OP, ')', 1269, 20, 1269, 21),
woosh.Token(woosh.OP, ':', 1269, 21, 1269, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1269, 22, 1270, 0),
woosh.Token(woosh.INDENT, '        ', 1270, 0, 1270, 8),
woosh.Token(woosh.NAME, 'return', 1270, 8, 1270, 14),
woosh.Token(woosh.NAME, 'len', 1270, 15, 1270, 18),
woosh.Token(woosh.OP, '(', 1270, 18, 1270, 19),
woosh.Token(woosh.NAME, 'self', 1270, 19, 1270, 23),
woosh.Token(woosh.OP, '.', 1270, 23, 1270, 24),
woosh.Token(woosh.NAME, '_options', 1270, 24, 1270, 32),
woosh.Token(woosh.OP, '(', 1270, 32, 1270, 33),
woosh.Token(woosh.OP, ')', 1270, 33, 1270, 34),
woosh.Token(woosh.OP, ')', 1270, 34, 1270, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 1270, 35, 1271, 0),
woosh.Token(woosh.DEDENT, '    ', 1272, 0, 1272, 4),
woosh.Token(woosh.NAME, 'def', 1272, 4, 1272, 7),
woosh.Token(woosh.NAME, '__iter__', 1272, 8, 1272, 16),
woosh.Token(woosh.OP, '(', 1272, 16, 1272, 17),
woosh.Token(woosh.NAME, 'self', 1272, 17, 1272, 21),
woosh.Token(woosh.OP, ')', 1272, 21, 1272, 22),
woosh.Token(woosh.OP, ':', 1272, 22, 1272, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1272, 23, 1273, 0),
woosh.Token(woosh.INDENT, '        ', 1273, 0, 1273, 8),
woosh.Token(woosh.NAME, 'return', 1273, 8, 1273, 14),
woosh.Token(woosh.NAME, 'self', 1273, 15, 1273, 19),
woosh.Token(woosh.OP, '.', 1273, 19, 1273, 20),
woosh.Token(woosh.NAME, '_options', 1273, 20, 1273, 28),
woosh.Token(woosh.OP, '(', 1273, 28, 1273, 29),
woosh.Token(woosh.OP, ')', 1273, 29, 1273, 30),
woosh.Token(woosh.OP, '.', 1273, 30, 1273, 31),
woosh.Token(woosh.NAME, '__iter__', 1273, 31, 1273, 39),
woosh.Token(woosh.OP, '(', 1273, 39, 1273, 40),
woosh.Token(woosh.OP, ')', 1273, 40, 1273, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 1273, 41, 1274, 0),
woosh.Token(woosh.DEDENT, '    ', 1275, 0, 1275, 4),
woosh.Token(woosh.NAME, 'def', 1275, 4, 1275, 7),
woosh.Token(woosh.NAME, '_options', 1275, 8, 1275, 16),
woosh.Token(woosh.OP, '(', 1275, 16, 1275, 17),
woosh.Token(woosh.NAME, 'self', 1275, 17, 1275, 21),
woosh.Token(woosh.OP, ')', 1275, 21, 1275, 22),
woosh.Token(woosh.OP, ':', 1275, 22, 1275, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1275, 23, 1276, 0),
woosh.Token(woosh.INDENT, '        ', 1276, 0, 1276, 8),
woosh.Token(woosh.NAME, 'if', 1276, 8, 1276, 10),
woosh.Token(woosh.NAME, 'self', 1276, 11, 1276, 15),
woosh.Token(woosh.OP, '.', 1276, 15, 1276, 16),
woosh.Token(woosh.NAME, '_name', 1276, 16, 1276, 21),
woosh.Token(woosh.OP, '!=', 1276, 22, 1276, 24),
woosh.Token(woosh.NAME, 'self', 1276, 25, 1276, 29),
woosh.Token(woosh.OP, '.', 1276, 29, 1276, 30),
woosh.Token(woosh.NAME, '_parser', 1276, 30, 1276, 37),
woosh.Token(woosh.OP, '.', 1276, 37, 1276, 38),
woosh.Token(woosh.NAME, 'default_section', 1276, 38, 1276, 53),
woosh.Token(woosh.OP, ':', 1276, 53, 1276, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 1276, 54, 1277, 0),
woosh.Token(woosh.INDENT, '            ', 1277, 0, 1277, 12),
woosh.Token(woosh.NAME, 'return', 1277, 12, 1277, 18),
woosh.Token(woosh.NAME, 'self', 1277, 19, 1277, 23),
woosh.Token(woosh.OP, '.', 1277, 23, 1277, 24),
woosh.Token(woosh.NAME, '_parser', 1277, 24, 1277, 31),
woosh.Token(woosh.OP, '.', 1277, 31, 1277, 32),
woosh.Token(woosh.NAME, 'options', 1277, 32, 1277, 39),
woosh.Token(woosh.OP, '(', 1277, 39, 1277, 40),
woosh.Token(woosh.NAME, 'self', 1277, 40, 1277, 44),
woosh.Token(woosh.OP, '.', 1277, 44, 1277, 45),
woosh.Token(woosh.NAME, '_name', 1277, 45, 1277, 50),
woosh.Token(woosh.OP, ')', 1277, 50, 1277, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 1277, 51, 1278, 0),
woosh.Token(woosh.DEDENT, '        ', 1278, 0, 1278, 8),
woosh.Token(woosh.NAME, 'else', 1278, 8, 1278, 12),
woosh.Token(woosh.OP, ':', 1278, 12, 1278, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1278, 13, 1279, 0),
woosh.Token(woosh.INDENT, '            ', 1279, 0, 1279, 12),
woosh.Token(woosh.NAME, 'return', 1279, 12, 1279, 18),
woosh.Token(woosh.NAME, 'self', 1279, 19, 1279, 23),
woosh.Token(woosh.OP, '.', 1279, 23, 1279, 24),
woosh.Token(woosh.NAME, '_parser', 1279, 24, 1279, 31),
woosh.Token(woosh.OP, '.', 1279, 31, 1279, 32),
woosh.Token(woosh.NAME, 'defaults', 1279, 32, 1279, 40),
woosh.Token(woosh.OP, '(', 1279, 40, 1279, 41),
woosh.Token(woosh.OP, ')', 1279, 41, 1279, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 1279, 42, 1280, 0),
woosh.Token(woosh.DEDENT, '    ', 1281, 0, 1281, 4),
woosh.Token(woosh.DEDENT, '', 1281, 4, 1281, 4),
woosh.Token(woosh.OP, '@', 1281, 4, 1281, 5),
woosh.Token(woosh.NAME, 'property', 1281, 5, 1281, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1281, 13, 1282, 0),
woosh.Token(woosh.NAME, 'def', 1282, 4, 1282, 7),
woosh.Token(woosh.NAME, 'parser', 1282, 8, 1282, 14),
woosh.Token(woosh.OP, '(', 1282, 14, 1282, 15),
woosh.Token(woosh.NAME, 'self', 1282, 15, 1282, 19),
woosh.Token(woosh.OP, ')', 1282, 19, 1282, 20),
woosh.Token(woosh.OP, ':', 1282, 20, 1282, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1282, 21, 1283, 0),
woosh.Token(woosh.COMMENT, '# The parser object of the proxy is read-only.', 1283, 8, 1283, 54),
woosh.Token(woosh.INDENT, '        ', 1284, 0, 1284, 8),
woosh.Token(woosh.NAME, 'return', 1284, 8, 1284, 14),
woosh.Token(woosh.NAME, 'self', 1284, 15, 1284, 19),
woosh.Token(woosh.OP, '.', 1284, 19, 1284, 20),
woosh.Token(woosh.NAME, '_parser', 1284, 20, 1284, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1284, 27, 1285, 0),
woosh.Token(woosh.DEDENT, '    ', 1286, 0, 1286, 4),
woosh.Token(woosh.OP, '@', 1286, 4, 1286, 5),
woosh.Token(woosh.NAME, 'property', 1286, 5, 1286, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 1286, 13, 1287, 0),
woosh.Token(woosh.NAME, 'def', 1287, 4, 1287, 7),
woosh.Token(woosh.NAME, 'name', 1287, 8, 1287, 12),
woosh.Token(woosh.OP, '(', 1287, 12, 1287, 13),
woosh.Token(woosh.NAME, 'self', 1287, 13, 1287, 17),
woosh.Token(woosh.OP, ')', 1287, 17, 1287, 18),
woosh.Token(woosh.OP, ':', 1287, 18, 1287, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 1287, 19, 1288, 0),
woosh.Token(woosh.COMMENT, '# The name of the section on a proxy is read-only.', 1288, 8, 1288, 58),
woosh.Token(woosh.INDENT, '        ', 1289, 0, 1289, 8),
woosh.Token(woosh.NAME, 'return', 1289, 8, 1289, 14),
woosh.Token(woosh.NAME, 'self', 1289, 15, 1289, 19),
woosh.Token(woosh.OP, '.', 1289, 19, 1289, 20),
woosh.Token(woosh.NAME, '_name', 1289, 20, 1289, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1289, 25, 1290, 0),
woosh.Token(woosh.DEDENT, '    ', 1291, 0, 1291, 4),
woosh.Token(woosh.NAME, 'def', 1291, 4, 1291, 7),
woosh.Token(woosh.NAME, 'get', 1291, 8, 1291, 11),
woosh.Token(woosh.OP, '(', 1291, 11, 1291, 12),
woosh.Token(woosh.NAME, 'self', 1291, 12, 1291, 16),
woosh.Token(woosh.OP, ',', 1291, 16, 1291, 17),
woosh.Token(woosh.NAME, 'option', 1291, 18, 1291, 24),
woosh.Token(woosh.OP, ',', 1291, 24, 1291, 25),
woosh.Token(woosh.NAME, 'fallback', 1291, 26, 1291, 34),
woosh.Token(woosh.OP, '=', 1291, 34, 1291, 35),
woosh.Token(woosh.NAME, 'None', 1291, 35, 1291, 39),
woosh.Token(woosh.OP, ',', 1291, 39, 1291, 40),
woosh.Token(woosh.OP, '*', 1291, 41, 1291, 42),
woosh.Token(woosh.OP, ',', 1291, 42, 1291, 43),
woosh.Token(woosh.NAME, 'raw', 1291, 44, 1291, 47),
woosh.Token(woosh.OP, '=', 1291, 47, 1291, 48),
woosh.Token(woosh.NAME, 'False', 1291, 48, 1291, 53),
woosh.Token(woosh.OP, ',', 1291, 53, 1291, 54),
woosh.Token(woosh.NAME, 'vars', 1291, 55, 1291, 59),
woosh.Token(woosh.OP, '=', 1291, 59, 1291, 60),
woosh.Token(woosh.NAME, 'None', 1291, 60, 1291, 64),
woosh.Token(woosh.OP, ',', 1291, 64, 1291, 65),
woosh.Token(woosh.NAME, '_impl', 1292, 12, 1292, 17),
woosh.Token(woosh.OP, '=', 1292, 17, 1292, 18),
woosh.Token(woosh.NAME, 'None', 1292, 18, 1292, 22),
woosh.Token(woosh.OP, ',', 1292, 22, 1292, 23),
woosh.Token(woosh.OP, '**', 1292, 24, 1292, 26),
woosh.Token(woosh.NAME, 'kwargs', 1292, 26, 1292, 32),
woosh.Token(woosh.OP, ')', 1292, 32, 1292, 33),
woosh.Token(woosh.OP, ':', 1292, 33, 1292, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1292, 34, 1293, 0),
woosh.Token(woosh.INDENT, '        ', 1293, 0, 1293, 8),
woosh.Token(woosh.STRING, '"""Get an option value.\r\n\r\n        Unless `fallback` is provided, `None` will be returned if the option\r\n        is not found.\r\n\r\n        """', 1293, 8, 1298, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 1298, 11, 1299, 0),
woosh.Token(woosh.COMMENT, '# If `_impl` is provided, it should be a getter method on the parser', 1299, 8, 1299, 76),
woosh.Token(woosh.COMMENT, '# object that provides the desired type conversion.', 1300, 8, 1300, 59),
woosh.Token(woosh.NAME, 'if', 1301, 8, 1301, 10),
woosh.Token(woosh.NAME, 'not', 1301, 11, 1301, 14),
woosh.Token(woosh.NAME, '_impl', 1301, 15, 1301, 20),
woosh.Token(woosh.OP, ':', 1301, 20, 1301, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 1301, 21, 1302, 0),
woosh.Token(woosh.INDENT, '            ', 1302, 0, 1302, 12),
woosh.Token(woosh.NAME, '_impl', 1302, 12, 1302, 17),
woosh.Token(woosh.OP, '=', 1302, 18, 1302, 19),
woosh.Token(woosh.NAME, 'self', 1302, 20, 1302, 24),
woosh.Token(woosh.OP, '.', 1302, 24, 1302, 25),
woosh.Token(woosh.NAME, '_parser', 1302, 25, 1302, 32),
woosh.Token(woosh.OP, '.', 1302, 32, 1302, 33),
woosh.Token(woosh.NAME, 'get', 1302, 33, 1302, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 1302, 36, 1303, 0),
woosh.Token(woosh.DEDENT, '        ', 1303, 0, 1303, 8),
woosh.Token(woosh.NAME, 'return', 1303, 8, 1303, 14),
woosh.Token(woosh.NAME, '_impl', 1303, 15, 1303, 20),
woosh.Token(woosh.OP, '(', 1303, 20, 1303, 21),
woosh.Token(woosh.NAME, 'self', 1303, 21, 1303, 25),
woosh.Token(woosh.OP, '.', 1303, 25, 1303, 26),
woosh.Token(woosh.NAME, '_name', 1303, 26, 1303, 31),
woosh.Token(woosh.OP, ',', 1303, 31, 1303, 32),
woosh.Token(woosh.NAME, 'option', 1303, 33, 1303, 39),
woosh.Token(woosh.OP, ',', 1303, 39, 1303, 40),
woosh.Token(woosh.NAME, 'raw', 1303, 41, 1303, 44),
woosh.Token(woosh.OP, '=', 1303, 44, 1303, 45),
woosh.Token(woosh.NAME, 'raw', 1303, 45, 1303, 48),
woosh.Token(woosh.OP, ',', 1303, 48, 1303, 49),
woosh.Token(woosh.NAME, 'vars', 1303, 50, 1303, 54),
woosh.Token(woosh.OP, '=', 1303, 54, 1303, 55),
woosh.Token(woosh.NAME, 'vars', 1303, 55, 1303, 59),
woosh.Token(woosh.OP, ',', 1303, 59, 1303, 60),
woosh.Token(woosh.NAME, 'fallback', 1304, 21, 1304, 29),
woosh.Token(woosh.OP, '=', 1304, 29, 1304, 30),
woosh.Token(woosh.NAME, 'fallback', 1304, 30, 1304, 38),
woosh.Token(woosh.OP, ',', 1304, 38, 1304, 39),
woosh.Token(woosh.OP, '**', 1304, 40, 1304, 42),
woosh.Token(woosh.NAME, 'kwargs', 1304, 42, 1304, 48),
woosh.Token(woosh.OP, ')', 1304, 48, 1304, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 1304, 49, 1305, 0),
woosh.Token(woosh.DEDENT, '', 1307, 0, 1307, 0),
woosh.Token(woosh.DEDENT, '', 1307, 0, 1307, 0),
woosh.Token(woosh.NAME, 'class', 1307, 0, 1307, 5),
woosh.Token(woosh.NAME, 'ConverterMapping', 1307, 6, 1307, 22),
woosh.Token(woosh.OP, '(', 1307, 22, 1307, 23),
woosh.Token(woosh.NAME, 'MutableMapping', 1307, 23, 1307, 37),
woosh.Token(woosh.OP, ')', 1307, 37, 1307, 38),
woosh.Token(woosh.OP, ':', 1307, 38, 1307, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 1307, 39, 1308, 0),
woosh.Token(woosh.INDENT, '    ', 1308, 0, 1308, 4),
woosh.Token(woosh.STRING, '"""Enables reuse of get*() methods between the parser and section proxies.\r\n\r\n    If a parser class implements a getter directly, the value for the given\r\n    key will be ``None``. The presence of the converter name here enables\r\n    section proxies to find and use the implementation on the parser class.\r\n    """', 1308, 4, 1313, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 1313, 7, 1314, 0),
woosh.Token(woosh.NAME, 'GETTERCRE', 1315, 4, 1315, 13),
woosh.Token(woosh.OP, '=', 1315, 14, 1315, 15),
woosh.Token(woosh.NAME, 're', 1315, 16, 1315, 18),
woosh.Token(woosh.OP, '.', 1315, 18, 1315, 19),
woosh.Token(woosh.NAME, 'compile', 1315, 19, 1315, 26),
woosh.Token(woosh.OP, '(', 1315, 26, 1315, 27),
woosh.Token(woosh.STRING, 'r"^get(?P<name>.+)$"', 1315, 27, 1315, 47),
woosh.Token(woosh.OP, ')', 1315, 47, 1315, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 1315, 48, 1316, 0),
woosh.Token(woosh.NAME, 'def', 1317, 4, 1317, 7),
woosh.Token(woosh.NAME, '__init__', 1317, 8, 1317, 16),
woosh.Token(woosh.OP, '(', 1317, 16, 1317, 17),
woosh.Token(woosh.NAME, 'self', 1317, 17, 1317, 21),
woosh.Token(woosh.OP, ',', 1317, 21, 1317, 22),
woosh.Token(woosh.NAME, 'parser', 1317, 23, 1317, 29),
woosh.Token(woosh.OP, ')', 1317, 29, 1317, 30),
woosh.Token(woosh.OP, ':', 1317, 30, 1317, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1317, 31, 1318, 0),
woosh.Token(woosh.INDENT, '        ', 1318, 0, 1318, 8),
woosh.Token(woosh.NAME, 'self', 1318, 8, 1318, 12),
woosh.Token(woosh.OP, '.', 1318, 12, 1318, 13),
woosh.Token(woosh.NAME, '_parser', 1318, 13, 1318, 20),
woosh.Token(woosh.OP, '=', 1318, 21, 1318, 22),
woosh.Token(woosh.NAME, 'parser', 1318, 23, 1318, 29),
woosh.Token(woosh.NEWLINE, '\r\n', 1318, 29, 1319, 0),
woosh.Token(woosh.NAME, 'self', 1319, 8, 1319, 12),
woosh.Token(woosh.OP, '.', 1319, 12, 1319, 13),
woosh.Token(woosh.NAME, '_data', 1319, 13, 1319, 18),
woosh.Token(woosh.OP, '=', 1319, 19, 1319, 20),
woosh.Token(woosh.OP, '{', 1319, 21, 1319, 22),
woosh.Token(woosh.OP, '}', 1319, 22, 1319, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1319, 23, 1320, 0),
woosh.Token(woosh.NAME, 'for', 1320, 8, 1320, 11),
woosh.Token(woosh.NAME, 'getter', 1320, 12, 1320, 18),
woosh.Token(woosh.NAME, 'in', 1320, 19, 1320, 21),
woosh.Token(woosh.NAME, 'dir', 1320, 22, 1320, 25),
woosh.Token(woosh.OP, '(', 1320, 25, 1320, 26),
woosh.Token(woosh.NAME, 'self', 1320, 26, 1320, 30),
woosh.Token(woosh.OP, '.', 1320, 30, 1320, 31),
woosh.Token(woosh.NAME, '_parser', 1320, 31, 1320, 38),
woosh.Token(woosh.OP, ')', 1320, 38, 1320, 39),
woosh.Token(woosh.OP, ':', 1320, 39, 1320, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 1320, 40, 1321, 0),
woosh.Token(woosh.INDENT, '            ', 1321, 0, 1321, 12),
woosh.Token(woosh.NAME, 'm', 1321, 12, 1321, 13),
woosh.Token(woosh.OP, '=', 1321, 14, 1321, 15),
woosh.Token(woosh.NAME, 'self', 1321, 16, 1321, 20),
woosh.Token(woosh.OP, '.', 1321, 20, 1321, 21),
woosh.Token(woosh.NAME, 'GETTERCRE', 1321, 21, 1321, 30),
woosh.Token(woosh.OP, '.', 1321, 30, 1321, 31),
woosh.Token(woosh.NAME, 'match', 1321, 31, 1321, 36),
woosh.Token(woosh.OP, '(', 1321, 36, 1321, 37),
woosh.Token(woosh.NAME, 'getter', 1321, 37, 1321, 43),
woosh.Token(woosh.OP, ')', 1321, 43, 1321, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 1321, 44, 1322, 0),
woosh.Token(woosh.NAME, 'if', 1322, 12, 1322, 14),
woosh.Token(woosh.NAME, 'not', 1322, 15, 1322, 18),
woosh.Token(woosh.NAME, 'm', 1322, 19, 1322, 20),
woosh.Token(woosh.NAME, 'or', 1322, 21, 1322, 23),
woosh.Token(woosh.NAME, 'not', 1322, 24, 1322, 27),
woosh.Token(woosh.NAME, 'callable', 1322, 28, 1322, 36),
woosh.Token(woosh.OP, '(', 1322, 36, 1322, 37),
woosh.Token(woosh.NAME, 'getattr', 1322, 37, 1322, 44),
woosh.Token(woosh.OP, '(', 1322, 44, 1322, 45),
woosh.Token(woosh.NAME, 'self', 1322, 45, 1322, 49),
woosh.Token(woosh.OP, '.', 1322, 49, 1322, 50),
woosh.Token(woosh.NAME, '_parser', 1322, 50, 1322, 57),
woosh.Token(woosh.OP, ',', 1322, 57, 1322, 58),
woosh.Token(woosh.NAME, 'getter', 1322, 59, 1322, 65),
woosh.Token(woosh.OP, ')', 1322, 65, 1322, 66),
woosh.Token(woosh.OP, ')', 1322, 66, 1322, 67),
woosh.Token(woosh.OP, ':', 1322, 67, 1322, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1322, 68, 1323, 0),
woosh.Token(woosh.INDENT, '                ', 1323, 0, 1323, 16),
woosh.Token(woosh.NAME, 'continue', 1323, 16, 1323, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1323, 24, 1324, 0),
woosh.Token(woosh.DEDENT, '            ', 1324, 0, 1324, 12),
woosh.Token(woosh.NAME, 'self', 1324, 12, 1324, 16),
woosh.Token(woosh.OP, '.', 1324, 16, 1324, 17),
woosh.Token(woosh.NAME, '_data', 1324, 17, 1324, 22),
woosh.Token(woosh.OP, '[', 1324, 22, 1324, 23),
woosh.Token(woosh.NAME, 'm', 1324, 23, 1324, 24),
woosh.Token(woosh.OP, '.', 1324, 24, 1324, 25),
woosh.Token(woosh.NAME, 'group', 1324, 25, 1324, 30),
woosh.Token(woosh.OP, '(', 1324, 30, 1324, 31),
woosh.Token(woosh.STRING, "'name'", 1324, 31, 1324, 37),
woosh.Token(woosh.OP, ')', 1324, 37, 1324, 38),
woosh.Token(woosh.OP, ']', 1324, 38, 1324, 39),
woosh.Token(woosh.OP, '=', 1324, 40, 1324, 41),
woosh.Token(woosh.NAME, 'None', 1324, 42, 1324, 46),
woosh.Token(woosh.COMMENT, '# See class docstring.', 1324, 49, 1324, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 1324, 71, 1325, 0),
woosh.Token(woosh.DEDENT, '    ', 1326, 0, 1326, 4),
woosh.Token(woosh.DEDENT, '', 1326, 4, 1326, 4),
woosh.Token(woosh.NAME, 'def', 1326, 4, 1326, 7),
woosh.Token(woosh.NAME, '__getitem__', 1326, 8, 1326, 19),
woosh.Token(woosh.OP, '(', 1326, 19, 1326, 20),
woosh.Token(woosh.NAME, 'self', 1326, 20, 1326, 24),
woosh.Token(woosh.OP, ',', 1326, 24, 1326, 25),
woosh.Token(woosh.NAME, 'key', 1326, 26, 1326, 29),
woosh.Token(woosh.OP, ')', 1326, 29, 1326, 30),
woosh.Token(woosh.OP, ':', 1326, 30, 1326, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1326, 31, 1327, 0),
woosh.Token(woosh.INDENT, '        ', 1327, 0, 1327, 8),
woosh.Token(woosh.NAME, 'return', 1327, 8, 1327, 14),
woosh.Token(woosh.NAME, 'self', 1327, 15, 1327, 19),
woosh.Token(woosh.OP, '.', 1327, 19, 1327, 20),
woosh.Token(woosh.NAME, '_data', 1327, 20, 1327, 25),
woosh.Token(woosh.OP, '[', 1327, 25, 1327, 26),
woosh.Token(woosh.NAME, 'key', 1327, 26, 1327, 29),
woosh.Token(woosh.OP, ']', 1327, 29, 1327, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1327, 30, 1328, 0),
woosh.Token(woosh.DEDENT, '    ', 1329, 0, 1329, 4),
woosh.Token(woosh.NAME, 'def', 1329, 4, 1329, 7),
woosh.Token(woosh.NAME, '__setitem__', 1329, 8, 1329, 19),
woosh.Token(woosh.OP, '(', 1329, 19, 1329, 20),
woosh.Token(woosh.NAME, 'self', 1329, 20, 1329, 24),
woosh.Token(woosh.OP, ',', 1329, 24, 1329, 25),
woosh.Token(woosh.NAME, 'key', 1329, 26, 1329, 29),
woosh.Token(woosh.OP, ',', 1329, 29, 1329, 30),
woosh.Token(woosh.NAME, 'value', 1329, 31, 1329, 36),
woosh.Token(woosh.OP, ')', 1329, 36, 1329, 37),
woosh.Token(woosh.OP, ':', 1329, 37, 1329, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1329, 38, 1330, 0),
woosh.Token(woosh.INDENT, '        ', 1330, 0, 1330, 8),
woosh.Token(woosh.NAME, 'try', 1330, 8, 1330, 11),
woosh.Token(woosh.OP, ':', 1330, 11, 1330, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1330, 12, 1331, 0),
woosh.Token(woosh.INDENT, '            ', 1331, 0, 1331, 12),
woosh.Token(woosh.NAME, 'k', 1331, 12, 1331, 13),
woosh.Token(woosh.OP, '=', 1331, 14, 1331, 15),
woosh.Token(woosh.STRING, "'get'", 1331, 16, 1331, 21),
woosh.Token(woosh.OP, '+', 1331, 22, 1331, 23),
woosh.Token(woosh.NAME, 'key', 1331, 24, 1331, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1331, 27, 1332, 0),
woosh.Token(woosh.DEDENT, '        ', 1332, 0, 1332, 8),
woosh.Token(woosh.NAME, 'except', 1332, 8, 1332, 14),
woosh.Token(woosh.NAME, 'TypeError', 1332, 15, 1332, 24),
woosh.Token(woosh.OP, ':', 1332, 24, 1332, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1332, 25, 1333, 0),
woosh.Token(woosh.INDENT, '            ', 1333, 0, 1333, 12),
woosh.Token(woosh.NAME, 'raise', 1333, 12, 1333, 17),
woosh.Token(woosh.NAME, 'ValueError', 1333, 18, 1333, 28),
woosh.Token(woosh.OP, '(', 1333, 28, 1333, 29),
woosh.Token(woosh.STRING, "'Incompatible key: {} (type: {})'", 1333, 29, 1333, 62),
woosh.Token(woosh.STRING, "''", 1334, 29, 1334, 31),
woosh.Token(woosh.OP, '.', 1334, 31, 1334, 32),
woosh.Token(woosh.NAME, 'format', 1334, 32, 1334, 38),
woosh.Token(woosh.OP, '(', 1334, 38, 1334, 39),
woosh.Token(woosh.NAME, 'key', 1334, 39, 1334, 42),
woosh.Token(woosh.OP, ',', 1334, 42, 1334, 43),
woosh.Token(woosh.NAME, 'type', 1334, 44, 1334, 48),
woosh.Token(woosh.OP, '(', 1334, 48, 1334, 49),
woosh.Token(woosh.NAME, 'key', 1334, 49, 1334, 52),
woosh.Token(woosh.OP, ')', 1334, 52, 1334, 53),
woosh.Token(woosh.OP, ')', 1334, 53, 1334, 54),
woosh.Token(woosh.OP, ')', 1334, 54, 1334, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 1334, 55, 1335, 0),
woosh.Token(woosh.DEDENT, '        ', 1335, 0, 1335, 8),
woosh.Token(woosh.NAME, 'if', 1335, 8, 1335, 10),
woosh.Token(woosh.NAME, 'k', 1335, 11, 1335, 12),
woosh.Token(woosh.OP, '==', 1335, 13, 1335, 15),
woosh.Token(woosh.STRING, "'get'", 1335, 16, 1335, 21),
woosh.Token(woosh.OP, ':', 1335, 21, 1335, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1335, 22, 1336, 0),
woosh.Token(woosh.INDENT, '            ', 1336, 0, 1336, 12),
woosh.Token(woosh.NAME, 'raise', 1336, 12, 1336, 17),
woosh.Token(woosh.NAME, 'ValueError', 1336, 18, 1336, 28),
woosh.Token(woosh.OP, '(', 1336, 28, 1336, 29),
woosh.Token(woosh.STRING, '\'Incompatible key: cannot use "" as a name\'', 1336, 29, 1336, 72),
woosh.Token(woosh.OP, ')', 1336, 72, 1336, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 1336, 73, 1337, 0),
woosh.Token(woosh.DEDENT, '        ', 1337, 0, 1337, 8),
woosh.Token(woosh.NAME, 'self', 1337, 8, 1337, 12),
woosh.Token(woosh.OP, '.', 1337, 12, 1337, 13),
woosh.Token(woosh.NAME, '_data', 1337, 13, 1337, 18),
woosh.Token(woosh.OP, '[', 1337, 18, 1337, 19),
woosh.Token(woosh.NAME, 'key', 1337, 19, 1337, 22),
woosh.Token(woosh.OP, ']', 1337, 22, 1337, 23),
woosh.Token(woosh.OP, '=', 1337, 24, 1337, 25),
woosh.Token(woosh.NAME, 'value', 1337, 26, 1337, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1337, 31, 1338, 0),
woosh.Token(woosh.NAME, 'func', 1338, 8, 1338, 12),
woosh.Token(woosh.OP, '=', 1338, 13, 1338, 14),
woosh.Token(woosh.NAME, 'functools', 1338, 15, 1338, 24),
woosh.Token(woosh.OP, '.', 1338, 24, 1338, 25),
woosh.Token(woosh.NAME, 'partial', 1338, 25, 1338, 32),
woosh.Token(woosh.OP, '(', 1338, 32, 1338, 33),
woosh.Token(woosh.NAME, 'self', 1338, 33, 1338, 37),
woosh.Token(woosh.OP, '.', 1338, 37, 1338, 38),
woosh.Token(woosh.NAME, '_parser', 1338, 38, 1338, 45),
woosh.Token(woosh.OP, '.', 1338, 45, 1338, 46),
woosh.Token(woosh.NAME, '_get_conv', 1338, 46, 1338, 55),
woosh.Token(woosh.OP, ',', 1338, 55, 1338, 56),
woosh.Token(woosh.NAME, 'conv', 1338, 57, 1338, 61),
woosh.Token(woosh.OP, '=', 1338, 61, 1338, 62),
woosh.Token(woosh.NAME, 'value', 1338, 62, 1338, 67),
woosh.Token(woosh.OP, ')', 1338, 67, 1338, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 1338, 68, 1339, 0),
woosh.Token(woosh.NAME, 'func', 1339, 8, 1339, 12),
woosh.Token(woosh.OP, '.', 1339, 12, 1339, 13),
woosh.Token(woosh.NAME, 'converter', 1339, 13, 1339, 22),
woosh.Token(woosh.OP, '=', 1339, 23, 1339, 24),
woosh.Token(woosh.NAME, 'value', 1339, 25, 1339, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1339, 30, 1340, 0),
woosh.Token(woosh.NAME, 'setattr', 1340, 8, 1340, 15),
woosh.Token(woosh.OP, '(', 1340, 15, 1340, 16),
woosh.Token(woosh.NAME, 'self', 1340, 16, 1340, 20),
woosh.Token(woosh.OP, '.', 1340, 20, 1340, 21),
woosh.Token(woosh.NAME, '_parser', 1340, 21, 1340, 28),
woosh.Token(woosh.OP, ',', 1340, 28, 1340, 29),
woosh.Token(woosh.NAME, 'k', 1340, 30, 1340, 31),
woosh.Token(woosh.OP, ',', 1340, 31, 1340, 32),
woosh.Token(woosh.NAME, 'func', 1340, 33, 1340, 37),
woosh.Token(woosh.OP, ')', 1340, 37, 1340, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 1340, 38, 1341, 0),
woosh.Token(woosh.NAME, 'for', 1341, 8, 1341, 11),
woosh.Token(woosh.NAME, 'proxy', 1341, 12, 1341, 17),
woosh.Token(woosh.NAME, 'in', 1341, 18, 1341, 20),
woosh.Token(woosh.NAME, 'self', 1341, 21, 1341, 25),
woosh.Token(woosh.OP, '.', 1341, 25, 1341, 26),
woosh.Token(woosh.NAME, '_parser', 1341, 26, 1341, 33),
woosh.Token(woosh.OP, '.', 1341, 33, 1341, 34),
woosh.Token(woosh.NAME, 'values', 1341, 34, 1341, 40),
woosh.Token(woosh.OP, '(', 1341, 40, 1341, 41),
woosh.Token(woosh.OP, ')', 1341, 41, 1341, 42),
woosh.Token(woosh.OP, ':', 1341, 42, 1341, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 1341, 43, 1342, 0),
woosh.Token(woosh.INDENT, '            ', 1342, 0, 1342, 12),
woosh.Token(woosh.NAME, 'getter', 1342, 12, 1342, 18),
woosh.Token(woosh.OP, '=', 1342, 19, 1342, 20),
woosh.Token(woosh.NAME, 'functools', 1342, 21, 1342, 30),
woosh.Token(woosh.OP, '.', 1342, 30, 1342, 31),
woosh.Token(woosh.NAME, 'partial', 1342, 31, 1342, 38),
woosh.Token(woosh.OP, '(', 1342, 38, 1342, 39),
woosh.Token(woosh.NAME, 'proxy', 1342, 39, 1342, 44),
woosh.Token(woosh.OP, '.', 1342, 44, 1342, 45),
woosh.Token(woosh.NAME, 'get', 1342, 45, 1342, 48),
woosh.Token(woosh.OP, ',', 1342, 48, 1342, 49),
woosh.Token(woosh.NAME, '_impl', 1342, 50, 1342, 55),
woosh.Token(woosh.OP, '=', 1342, 55, 1342, 56),
woosh.Token(woosh.NAME, 'func', 1342, 56, 1342, 60),
woosh.Token(woosh.OP, ')', 1342, 60, 1342, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 1342, 61, 1343, 0),
woosh.Token(woosh.NAME, 'setattr', 1343, 12, 1343, 19),
woosh.Token(woosh.OP, '(', 1343, 19, 1343, 20),
woosh.Token(woosh.NAME, 'proxy', 1343, 20, 1343, 25),
woosh.Token(woosh.OP, ',', 1343, 25, 1343, 26),
woosh.Token(woosh.NAME, 'k', 1343, 27, 1343, 28),
woosh.Token(woosh.OP, ',', 1343, 28, 1343, 29),
woosh.Token(woosh.NAME, 'getter', 1343, 30, 1343, 36),
woosh.Token(woosh.OP, ')', 1343, 36, 1343, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1343, 37, 1344, 0),
woosh.Token(woosh.DEDENT, '    ', 1345, 0, 1345, 4),
woosh.Token(woosh.DEDENT, '', 1345, 4, 1345, 4),
woosh.Token(woosh.NAME, 'def', 1345, 4, 1345, 7),
woosh.Token(woosh.NAME, '__delitem__', 1345, 8, 1345, 19),
woosh.Token(woosh.OP, '(', 1345, 19, 1345, 20),
woosh.Token(woosh.NAME, 'self', 1345, 20, 1345, 24),
woosh.Token(woosh.OP, ',', 1345, 24, 1345, 25),
woosh.Token(woosh.NAME, 'key', 1345, 26, 1345, 29),
woosh.Token(woosh.OP, ')', 1345, 29, 1345, 30),
woosh.Token(woosh.OP, ':', 1345, 30, 1345, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1345, 31, 1346, 0),
woosh.Token(woosh.INDENT, '        ', 1346, 0, 1346, 8),
woosh.Token(woosh.NAME, 'try', 1346, 8, 1346, 11),
woosh.Token(woosh.OP, ':', 1346, 11, 1346, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 1346, 12, 1347, 0),
woosh.Token(woosh.INDENT, '            ', 1347, 0, 1347, 12),
woosh.Token(woosh.NAME, 'k', 1347, 12, 1347, 13),
woosh.Token(woosh.OP, '=', 1347, 14, 1347, 15),
woosh.Token(woosh.STRING, "'get'", 1347, 16, 1347, 21),
woosh.Token(woosh.OP, '+', 1347, 22, 1347, 23),
woosh.Token(woosh.OP, '(', 1347, 24, 1347, 25),
woosh.Token(woosh.NAME, 'key', 1347, 25, 1347, 28),
woosh.Token(woosh.NAME, 'or', 1347, 29, 1347, 31),
woosh.Token(woosh.NAME, 'None', 1347, 32, 1347, 36),
woosh.Token(woosh.OP, ')', 1347, 36, 1347, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 1347, 37, 1348, 0),
woosh.Token(woosh.DEDENT, '        ', 1348, 0, 1348, 8),
woosh.Token(woosh.NAME, 'except', 1348, 8, 1348, 14),
woosh.Token(woosh.NAME, 'TypeError', 1348, 15, 1348, 24),
woosh.Token(woosh.OP, ':', 1348, 24, 1348, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 1348, 25, 1349, 0),
woosh.Token(woosh.INDENT, '            ', 1349, 0, 1349, 12),
woosh.Token(woosh.NAME, 'raise', 1349, 12, 1349, 17),
woosh.Token(woosh.NAME, 'KeyError', 1349, 18, 1349, 26),
woosh.Token(woosh.OP, '(', 1349, 26, 1349, 27),
woosh.Token(woosh.NAME, 'key', 1349, 27, 1349, 30),
woosh.Token(woosh.OP, ')', 1349, 30, 1349, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1349, 31, 1350, 0),
woosh.Token(woosh.DEDENT, '        ', 1350, 0, 1350, 8),
woosh.Token(woosh.NAME, 'del', 1350, 8, 1350, 11),
woosh.Token(woosh.NAME, 'self', 1350, 12, 1350, 16),
woosh.Token(woosh.OP, '.', 1350, 16, 1350, 17),
woosh.Token(woosh.NAME, '_data', 1350, 17, 1350, 22),
woosh.Token(woosh.OP, '[', 1350, 22, 1350, 23),
woosh.Token(woosh.NAME, 'key', 1350, 23, 1350, 26),
woosh.Token(woosh.OP, ']', 1350, 26, 1350, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 1350, 27, 1351, 0),
woosh.Token(woosh.NAME, 'for', 1351, 8, 1351, 11),
woosh.Token(woosh.NAME, 'inst', 1351, 12, 1351, 16),
woosh.Token(woosh.NAME, 'in', 1351, 17, 1351, 19),
woosh.Token(woosh.NAME, 'itertools', 1351, 20, 1351, 29),
woosh.Token(woosh.OP, '.', 1351, 29, 1351, 30),
woosh.Token(woosh.NAME, 'chain', 1351, 30, 1351, 35),
woosh.Token(woosh.OP, '(', 1351, 35, 1351, 36),
woosh.Token(woosh.OP, '(', 1351, 36, 1351, 37),
woosh.Token(woosh.NAME, 'self', 1351, 37, 1351, 41),
woosh.Token(woosh.OP, '.', 1351, 41, 1351, 42),
woosh.Token(woosh.NAME, '_parser', 1351, 42, 1351, 49),
woosh.Token(woosh.OP, ',', 1351, 49, 1351, 50),
woosh.Token(woosh.OP, ')', 1351, 50, 1351, 51),
woosh.Token(woosh.OP, ',', 1351, 51, 1351, 52),
woosh.Token(woosh.NAME, 'self', 1351, 53, 1351, 57),
woosh.Token(woosh.OP, '.', 1351, 57, 1351, 58),
woosh.Token(woosh.NAME, '_parser', 1351, 58, 1351, 65),
woosh.Token(woosh.OP, '.', 1351, 65, 1351, 66),
woosh.Token(woosh.NAME, 'values', 1351, 66, 1351, 72),
woosh.Token(woosh.OP, '(', 1351, 72, 1351, 73),
woosh.Token(woosh.OP, ')', 1351, 73, 1351, 74),
woosh.Token(woosh.OP, ')', 1351, 74, 1351, 75),
woosh.Token(woosh.OP, ':', 1351, 75, 1351, 76),
woosh.Token(woosh.NEWLINE, '\r\n', 1351, 76, 1352, 0),
woosh.Token(woosh.INDENT, '            ', 1352, 0, 1352, 12),
woosh.Token(woosh.NAME, 'try', 1352, 12, 1352, 15),
woosh.Token(woosh.OP, ':', 1352, 15, 1352, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 1352, 16, 1353, 0),
woosh.Token(woosh.INDENT, '                ', 1353, 0, 1353, 16),
woosh.Token(woosh.NAME, 'delattr', 1353, 16, 1353, 23),
woosh.Token(woosh.OP, '(', 1353, 23, 1353, 24),
woosh.Token(woosh.NAME, 'inst', 1353, 24, 1353, 28),
woosh.Token(woosh.OP, ',', 1353, 28, 1353, 29),
woosh.Token(woosh.NAME, 'k', 1353, 30, 1353, 31),
woosh.Token(woosh.OP, ')', 1353, 31, 1353, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 1353, 32, 1354, 0),
woosh.Token(woosh.DEDENT, '            ', 1354, 0, 1354, 12),
woosh.Token(woosh.NAME, 'except', 1354, 12, 1354, 18),
woosh.Token(woosh.NAME, 'AttributeError', 1354, 19, 1354, 33),
woosh.Token(woosh.OP, ':', 1354, 33, 1354, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 1354, 34, 1355, 0),
woosh.Token(woosh.COMMENT, "# don't raise since the entry was present in _data, silently", 1355, 16, 1355, 76),
woosh.Token(woosh.COMMENT, '# clean up', 1356, 16, 1356, 26),
woosh.Token(woosh.INDENT, '                ', 1357, 0, 1357, 16),
woosh.Token(woosh.NAME, 'continue', 1357, 16, 1357, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 1357, 24, 1358, 0),
woosh.Token(woosh.DEDENT, '    ', 1359, 0, 1359, 4),
woosh.Token(woosh.DEDENT, '', 1359, 4, 1359, 4),
woosh.Token(woosh.DEDENT, '', 1359, 4, 1359, 4),
woosh.Token(woosh.NAME, 'def', 1359, 4, 1359, 7),
woosh.Token(woosh.NAME, '__iter__', 1359, 8, 1359, 16),
woosh.Token(woosh.OP, '(', 1359, 16, 1359, 17),
woosh.Token(woosh.NAME, 'self', 1359, 17, 1359, 21),
woosh.Token(woosh.OP, ')', 1359, 21, 1359, 22),
woosh.Token(woosh.OP, ':', 1359, 22, 1359, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 1359, 23, 1360, 0),
woosh.Token(woosh.INDENT, '        ', 1360, 0, 1360, 8),
woosh.Token(woosh.NAME, 'return', 1360, 8, 1360, 14),
woosh.Token(woosh.NAME, 'iter', 1360, 15, 1360, 19),
woosh.Token(woosh.OP, '(', 1360, 19, 1360, 20),
woosh.Token(woosh.NAME, 'self', 1360, 20, 1360, 24),
woosh.Token(woosh.OP, '.', 1360, 24, 1360, 25),
woosh.Token(woosh.NAME, '_data', 1360, 25, 1360, 30),
woosh.Token(woosh.OP, ')', 1360, 30, 1360, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 1360, 31, 1361, 0),
woosh.Token(woosh.DEDENT, '    ', 1362, 0, 1362, 4),
woosh.Token(woosh.NAME, 'def', 1362, 4, 1362, 7),
woosh.Token(woosh.NAME, '__len__', 1362, 8, 1362, 15),
woosh.Token(woosh.OP, '(', 1362, 15, 1362, 16),
woosh.Token(woosh.NAME, 'self', 1362, 16, 1362, 20),
woosh.Token(woosh.OP, ')', 1362, 20, 1362, 21),
woosh.Token(woosh.OP, ':', 1362, 21, 1362, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 1362, 22, 1363, 0),
woosh.Token(woosh.INDENT, '        ', 1363, 0, 1363, 8),
woosh.Token(woosh.NAME, 'return', 1363, 8, 1363, 14),
woosh.Token(woosh.NAME, 'len', 1363, 15, 1363, 18),
woosh.Token(woosh.OP, '(', 1363, 18, 1363, 19),
woosh.Token(woosh.NAME, 'self', 1363, 19, 1363, 23),
woosh.Token(woosh.OP, '.', 1363, 23, 1363, 24),
woosh.Token(woosh.NAME, '_data', 1363, 24, 1363, 29),
woosh.Token(woosh.OP, ')', 1363, 29, 1363, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 1363, 30, 1364, 0),
woosh.Token(woosh.DEDENT, '', 1364, 0, 1364, 0),
woosh.Token(woosh.DEDENT, '', 1364, 0, 1364, 0),
woosh.Token(woosh.EOF, '', 1364, 0, 1364, 0),
]
