
# this file was generated using test/python/sample/generate.py

# python
import io
import pathlib
# pytest
import pytest
# woosh
import woosh

def tokenize_file_like(source):
    return list(woosh.tokenize(io.BytesIO(source)))

def tokenize_bytes(source):
    return list(woosh.tokenize(source))

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../' / '../../' / 'sample'

@pytest.mark.parametrize('tokenize', [tokenize_file_like, tokenize_bytes])
def test(tokenize):
    with open(SAMPLE_DIR / 'stdlib/mimetypes.py', 'rb') as f:
        tokens = tokenize(f.read())
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
woosh.Token(woosh.STRING, '"""Guess the MIME type of a file.\r\n\r\nThis module defines two useful functions:\r\n\r\nguess_type(url, strict=True) -- guess the MIME type and encoding of a URL.\r\n\r\nguess_extension(type, strict=True) -- guess the extension for a given MIME type.\r\n\r\nIt also contains the following, for tuning the behavior:\r\n\r\nData:\r\n\r\nknownfiles -- list of files to parse\r\ninited -- flag set when init() has been called\r\nsuffix_map -- dictionary mapping suffixes to suffixes\r\nencodings_map -- dictionary mapping suffixes to encodings\r\ntypes_map -- dictionary mapping suffixes to types\r\n\r\nFunctions:\r\n\r\ninit([files]) -- parse a list of files, default knownfiles (on Windows, the\r\n  default values are taken from the registry)\r\nread_mime_types(file) -- parse one file, return a dictionary or None\r\n"""', 1, 0, 24, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 24, 3, 25, 0),
woosh.Token(woosh.NAME, 'import', 26, 0, 26, 6),
woosh.Token(woosh.NAME, 'os', 26, 7, 26, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 26, 9, 27, 0),
woosh.Token(woosh.NAME, 'import', 27, 0, 27, 6),
woosh.Token(woosh.NAME, 'sys', 27, 7, 27, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 27, 10, 28, 0),
woosh.Token(woosh.NAME, 'import', 28, 0, 28, 6),
woosh.Token(woosh.NAME, 'posixpath', 28, 7, 28, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 28, 16, 29, 0),
woosh.Token(woosh.NAME, 'import', 29, 0, 29, 6),
woosh.Token(woosh.NAME, 'urllib', 29, 7, 29, 13),
woosh.Token(woosh.OP, '.', 29, 13, 29, 14),
woosh.Token(woosh.NAME, 'parse', 29, 14, 29, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 29, 19, 30, 0),
woosh.Token(woosh.NAME, 'try', 30, 0, 30, 3),
woosh.Token(woosh.OP, ':', 30, 3, 30, 4),
woosh.Token(woosh.NEWLINE, '\r\n', 30, 4, 31, 0),
woosh.Token(woosh.INDENT, '    ', 31, 0, 31, 4),
woosh.Token(woosh.NAME, 'import', 31, 4, 31, 10),
woosh.Token(woosh.NAME, 'winreg', 31, 11, 31, 17),
woosh.Token(woosh.NAME, 'as', 31, 18, 31, 20),
woosh.Token(woosh.NAME, '_winreg', 31, 21, 31, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 31, 28, 32, 0),
woosh.Token(woosh.DEDENT, '', 32, 0, 32, 0),
woosh.Token(woosh.NAME, 'except', 32, 0, 32, 6),
woosh.Token(woosh.NAME, 'ImportError', 32, 7, 32, 18),
woosh.Token(woosh.OP, ':', 32, 18, 32, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 32, 19, 33, 0),
woosh.Token(woosh.INDENT, '    ', 33, 0, 33, 4),
woosh.Token(woosh.NAME, '_winreg', 33, 4, 33, 11),
woosh.Token(woosh.OP, '=', 33, 12, 33, 13),
woosh.Token(woosh.NAME, 'None', 33, 14, 33, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 33, 18, 34, 0),
woosh.Token(woosh.DEDENT, '', 35, 0, 35, 0),
woosh.Token(woosh.NAME, '__all__', 35, 0, 35, 7),
woosh.Token(woosh.OP, '=', 35, 8, 35, 9),
woosh.Token(woosh.OP, '[', 35, 10, 35, 11),
woosh.Token(woosh.STRING, '"knownfiles"', 36, 4, 36, 16),
woosh.Token(woosh.OP, ',', 36, 16, 36, 17),
woosh.Token(woosh.STRING, '"inited"', 36, 18, 36, 26),
woosh.Token(woosh.OP, ',', 36, 26, 36, 27),
woosh.Token(woosh.STRING, '"MimeTypes"', 36, 28, 36, 39),
woosh.Token(woosh.OP, ',', 36, 39, 36, 40),
woosh.Token(woosh.STRING, '"guess_type"', 37, 4, 37, 16),
woosh.Token(woosh.OP, ',', 37, 16, 37, 17),
woosh.Token(woosh.STRING, '"guess_all_extensions"', 37, 18, 37, 40),
woosh.Token(woosh.OP, ',', 37, 40, 37, 41),
woosh.Token(woosh.STRING, '"guess_extension"', 37, 42, 37, 59),
woosh.Token(woosh.OP, ',', 37, 59, 37, 60),
woosh.Token(woosh.STRING, '"add_type"', 38, 4, 38, 14),
woosh.Token(woosh.OP, ',', 38, 14, 38, 15),
woosh.Token(woosh.STRING, '"init"', 38, 16, 38, 22),
woosh.Token(woosh.OP, ',', 38, 22, 38, 23),
woosh.Token(woosh.STRING, '"read_mime_types"', 38, 24, 38, 41),
woosh.Token(woosh.OP, ',', 38, 41, 38, 42),
woosh.Token(woosh.STRING, '"suffix_map"', 39, 4, 39, 16),
woosh.Token(woosh.OP, ',', 39, 16, 39, 17),
woosh.Token(woosh.STRING, '"encodings_map"', 39, 18, 39, 33),
woosh.Token(woosh.OP, ',', 39, 33, 39, 34),
woosh.Token(woosh.STRING, '"types_map"', 39, 35, 39, 46),
woosh.Token(woosh.OP, ',', 39, 46, 39, 47),
woosh.Token(woosh.STRING, '"common_types"', 39, 48, 39, 62),
woosh.Token(woosh.OP, ']', 40, 0, 40, 1),
woosh.Token(woosh.NEWLINE, '\r\n', 40, 1, 41, 0),
woosh.Token(woosh.NAME, 'knownfiles', 42, 0, 42, 10),
woosh.Token(woosh.OP, '=', 42, 11, 42, 12),
woosh.Token(woosh.OP, '[', 42, 13, 42, 14),
woosh.Token(woosh.STRING, '"/etc/mime.types"', 43, 4, 43, 21),
woosh.Token(woosh.OP, ',', 43, 21, 43, 22),
woosh.Token(woosh.STRING, '"/etc/httpd/mime.types"', 44, 4, 44, 27),
woosh.Token(woosh.OP, ',', 44, 27, 44, 28),
woosh.Token(woosh.COMMENT, '# Mac OS X', 44, 48, 44, 58),
woosh.Token(woosh.STRING, '"/etc/httpd/conf/mime.types"', 45, 4, 45, 32),
woosh.Token(woosh.OP, ',', 45, 32, 45, 33),
woosh.Token(woosh.COMMENT, '# Apache', 45, 48, 45, 56),
woosh.Token(woosh.STRING, '"/etc/apache/mime.types"', 46, 4, 46, 28),
woosh.Token(woosh.OP, ',', 46, 28, 46, 29),
woosh.Token(woosh.COMMENT, '# Apache 1', 46, 48, 46, 58),
woosh.Token(woosh.STRING, '"/etc/apache2/mime.types"', 47, 4, 47, 29),
woosh.Token(woosh.OP, ',', 47, 29, 47, 30),
woosh.Token(woosh.COMMENT, '# Apache 2', 47, 48, 47, 58),
woosh.Token(woosh.STRING, '"/usr/local/etc/httpd/conf/mime.types"', 48, 4, 48, 42),
woosh.Token(woosh.OP, ',', 48, 42, 48, 43),
woosh.Token(woosh.STRING, '"/usr/local/lib/netscape/mime.types"', 49, 4, 49, 40),
woosh.Token(woosh.OP, ',', 49, 40, 49, 41),
woosh.Token(woosh.STRING, '"/usr/local/etc/httpd/conf/mime.types"', 50, 4, 50, 42),
woosh.Token(woosh.OP, ',', 50, 42, 50, 43),
woosh.Token(woosh.COMMENT, '# Apache 1.2', 50, 48, 50, 60),
woosh.Token(woosh.STRING, '"/usr/local/etc/mime.types"', 51, 4, 51, 31),
woosh.Token(woosh.OP, ',', 51, 31, 51, 32),
woosh.Token(woosh.COMMENT, '# Apache 1.3', 51, 48, 51, 60),
woosh.Token(woosh.OP, ']', 52, 4, 52, 5),
woosh.Token(woosh.NEWLINE, '\r\n', 52, 5, 53, 0),
woosh.Token(woosh.NAME, 'inited', 54, 0, 54, 6),
woosh.Token(woosh.OP, '=', 54, 7, 54, 8),
woosh.Token(woosh.NAME, 'False', 54, 9, 54, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 54, 14, 55, 0),
woosh.Token(woosh.NAME, '_db', 55, 0, 55, 3),
woosh.Token(woosh.OP, '=', 55, 4, 55, 5),
woosh.Token(woosh.NAME, 'None', 55, 6, 55, 10),
woosh.Token(woosh.NEWLINE, '\r\n', 55, 10, 56, 0),
woosh.Token(woosh.NAME, 'class', 58, 0, 58, 5),
woosh.Token(woosh.NAME, 'MimeTypes', 58, 6, 58, 15),
woosh.Token(woosh.OP, ':', 58, 15, 58, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 58, 16, 59, 0),
woosh.Token(woosh.INDENT, '    ', 59, 0, 59, 4),
woosh.Token(woosh.STRING, '"""MIME-types datastore.\r\n\r\n    This datastore can handle information from mime.types-style files\r\n    and supports basic determination of MIME type from a filename or\r\n    URL, and can guess a reasonable extension given a MIME type.\r\n    """', 59, 4, 64, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 64, 7, 65, 0),
woosh.Token(woosh.NAME, 'def', 66, 4, 66, 7),
woosh.Token(woosh.NAME, '__init__', 66, 8, 66, 16),
woosh.Token(woosh.OP, '(', 66, 16, 66, 17),
woosh.Token(woosh.NAME, 'self', 66, 17, 66, 21),
woosh.Token(woosh.OP, ',', 66, 21, 66, 22),
woosh.Token(woosh.NAME, 'filenames', 66, 23, 66, 32),
woosh.Token(woosh.OP, '=', 66, 32, 66, 33),
woosh.Token(woosh.OP, '(', 66, 33, 66, 34),
woosh.Token(woosh.OP, ')', 66, 34, 66, 35),
woosh.Token(woosh.OP, ',', 66, 35, 66, 36),
woosh.Token(woosh.NAME, 'strict', 66, 37, 66, 43),
woosh.Token(woosh.OP, '=', 66, 43, 66, 44),
woosh.Token(woosh.NAME, 'True', 66, 44, 66, 48),
woosh.Token(woosh.OP, ')', 66, 48, 66, 49),
woosh.Token(woosh.OP, ':', 66, 49, 66, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 66, 50, 67, 0),
woosh.Token(woosh.INDENT, '        ', 67, 0, 67, 8),
woosh.Token(woosh.NAME, 'if', 67, 8, 67, 10),
woosh.Token(woosh.NAME, 'not', 67, 11, 67, 14),
woosh.Token(woosh.NAME, 'inited', 67, 15, 67, 21),
woosh.Token(woosh.OP, ':', 67, 21, 67, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 67, 22, 68, 0),
woosh.Token(woosh.INDENT, '            ', 68, 0, 68, 12),
woosh.Token(woosh.NAME, 'init', 68, 12, 68, 16),
woosh.Token(woosh.OP, '(', 68, 16, 68, 17),
woosh.Token(woosh.OP, ')', 68, 17, 68, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 68, 18, 69, 0),
woosh.Token(woosh.DEDENT, '        ', 69, 0, 69, 8),
woosh.Token(woosh.NAME, 'self', 69, 8, 69, 12),
woosh.Token(woosh.OP, '.', 69, 12, 69, 13),
woosh.Token(woosh.NAME, 'encodings_map', 69, 13, 69, 26),
woosh.Token(woosh.OP, '=', 69, 27, 69, 28),
woosh.Token(woosh.NAME, '_encodings_map_default', 69, 29, 69, 51),
woosh.Token(woosh.OP, '.', 69, 51, 69, 52),
woosh.Token(woosh.NAME, 'copy', 69, 52, 69, 56),
woosh.Token(woosh.OP, '(', 69, 56, 69, 57),
woosh.Token(woosh.OP, ')', 69, 57, 69, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 69, 58, 70, 0),
woosh.Token(woosh.NAME, 'self', 70, 8, 70, 12),
woosh.Token(woosh.OP, '.', 70, 12, 70, 13),
woosh.Token(woosh.NAME, 'suffix_map', 70, 13, 70, 23),
woosh.Token(woosh.OP, '=', 70, 24, 70, 25),
woosh.Token(woosh.NAME, '_suffix_map_default', 70, 26, 70, 45),
woosh.Token(woosh.OP, '.', 70, 45, 70, 46),
woosh.Token(woosh.NAME, 'copy', 70, 46, 70, 50),
woosh.Token(woosh.OP, '(', 70, 50, 70, 51),
woosh.Token(woosh.OP, ')', 70, 51, 70, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 70, 52, 71, 0),
woosh.Token(woosh.NAME, 'self', 71, 8, 71, 12),
woosh.Token(woosh.OP, '.', 71, 12, 71, 13),
woosh.Token(woosh.NAME, 'types_map', 71, 13, 71, 22),
woosh.Token(woosh.OP, '=', 71, 23, 71, 24),
woosh.Token(woosh.OP, '(', 71, 25, 71, 26),
woosh.Token(woosh.OP, '{', 71, 26, 71, 27),
woosh.Token(woosh.OP, '}', 71, 27, 71, 28),
woosh.Token(woosh.OP, ',', 71, 28, 71, 29),
woosh.Token(woosh.OP, '{', 71, 30, 71, 31),
woosh.Token(woosh.OP, '}', 71, 31, 71, 32),
woosh.Token(woosh.OP, ')', 71, 32, 71, 33),
woosh.Token(woosh.COMMENT, '# dict for (non-strict, strict)', 71, 34, 71, 65),
woosh.Token(woosh.NEWLINE, '\r\n', 71, 65, 72, 0),
woosh.Token(woosh.NAME, 'self', 72, 8, 72, 12),
woosh.Token(woosh.OP, '.', 72, 12, 72, 13),
woosh.Token(woosh.NAME, 'types_map_inv', 72, 13, 72, 26),
woosh.Token(woosh.OP, '=', 72, 27, 72, 28),
woosh.Token(woosh.OP, '(', 72, 29, 72, 30),
woosh.Token(woosh.OP, '{', 72, 30, 72, 31),
woosh.Token(woosh.OP, '}', 72, 31, 72, 32),
woosh.Token(woosh.OP, ',', 72, 32, 72, 33),
woosh.Token(woosh.OP, '{', 72, 34, 72, 35),
woosh.Token(woosh.OP, '}', 72, 35, 72, 36),
woosh.Token(woosh.OP, ')', 72, 36, 72, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 72, 37, 73, 0),
woosh.Token(woosh.NAME, 'for', 73, 8, 73, 11),
woosh.Token(woosh.OP, '(', 73, 12, 73, 13),
woosh.Token(woosh.NAME, 'ext', 73, 13, 73, 16),
woosh.Token(woosh.OP, ',', 73, 16, 73, 17),
woosh.Token(woosh.NAME, 'type', 73, 18, 73, 22),
woosh.Token(woosh.OP, ')', 73, 22, 73, 23),
woosh.Token(woosh.NAME, 'in', 73, 24, 73, 26),
woosh.Token(woosh.NAME, '_types_map_default', 73, 27, 73, 45),
woosh.Token(woosh.OP, '.', 73, 45, 73, 46),
woosh.Token(woosh.NAME, 'items', 73, 46, 73, 51),
woosh.Token(woosh.OP, '(', 73, 51, 73, 52),
woosh.Token(woosh.OP, ')', 73, 52, 73, 53),
woosh.Token(woosh.OP, ':', 73, 53, 73, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 73, 54, 74, 0),
woosh.Token(woosh.INDENT, '            ', 74, 0, 74, 12),
woosh.Token(woosh.NAME, 'self', 74, 12, 74, 16),
woosh.Token(woosh.OP, '.', 74, 16, 74, 17),
woosh.Token(woosh.NAME, 'add_type', 74, 17, 74, 25),
woosh.Token(woosh.OP, '(', 74, 25, 74, 26),
woosh.Token(woosh.NAME, 'type', 74, 26, 74, 30),
woosh.Token(woosh.OP, ',', 74, 30, 74, 31),
woosh.Token(woosh.NAME, 'ext', 74, 32, 74, 35),
woosh.Token(woosh.OP, ',', 74, 35, 74, 36),
woosh.Token(woosh.NAME, 'True', 74, 37, 74, 41),
woosh.Token(woosh.OP, ')', 74, 41, 74, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 74, 42, 75, 0),
woosh.Token(woosh.DEDENT, '        ', 75, 0, 75, 8),
woosh.Token(woosh.NAME, 'for', 75, 8, 75, 11),
woosh.Token(woosh.OP, '(', 75, 12, 75, 13),
woosh.Token(woosh.NAME, 'ext', 75, 13, 75, 16),
woosh.Token(woosh.OP, ',', 75, 16, 75, 17),
woosh.Token(woosh.NAME, 'type', 75, 18, 75, 22),
woosh.Token(woosh.OP, ')', 75, 22, 75, 23),
woosh.Token(woosh.NAME, 'in', 75, 24, 75, 26),
woosh.Token(woosh.NAME, '_common_types_default', 75, 27, 75, 48),
woosh.Token(woosh.OP, '.', 75, 48, 75, 49),
woosh.Token(woosh.NAME, 'items', 75, 49, 75, 54),
woosh.Token(woosh.OP, '(', 75, 54, 75, 55),
woosh.Token(woosh.OP, ')', 75, 55, 75, 56),
woosh.Token(woosh.OP, ':', 75, 56, 75, 57),
woosh.Token(woosh.NEWLINE, '\r\n', 75, 57, 76, 0),
woosh.Token(woosh.INDENT, '            ', 76, 0, 76, 12),
woosh.Token(woosh.NAME, 'self', 76, 12, 76, 16),
woosh.Token(woosh.OP, '.', 76, 16, 76, 17),
woosh.Token(woosh.NAME, 'add_type', 76, 17, 76, 25),
woosh.Token(woosh.OP, '(', 76, 25, 76, 26),
woosh.Token(woosh.NAME, 'type', 76, 26, 76, 30),
woosh.Token(woosh.OP, ',', 76, 30, 76, 31),
woosh.Token(woosh.NAME, 'ext', 76, 32, 76, 35),
woosh.Token(woosh.OP, ',', 76, 35, 76, 36),
woosh.Token(woosh.NAME, 'False', 76, 37, 76, 42),
woosh.Token(woosh.OP, ')', 76, 42, 76, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 76, 43, 77, 0),
woosh.Token(woosh.DEDENT, '        ', 77, 0, 77, 8),
woosh.Token(woosh.NAME, 'for', 77, 8, 77, 11),
woosh.Token(woosh.NAME, 'name', 77, 12, 77, 16),
woosh.Token(woosh.NAME, 'in', 77, 17, 77, 19),
woosh.Token(woosh.NAME, 'filenames', 77, 20, 77, 29),
woosh.Token(woosh.OP, ':', 77, 29, 77, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 77, 30, 78, 0),
woosh.Token(woosh.INDENT, '            ', 78, 0, 78, 12),
woosh.Token(woosh.NAME, 'self', 78, 12, 78, 16),
woosh.Token(woosh.OP, '.', 78, 16, 78, 17),
woosh.Token(woosh.NAME, 'read', 78, 17, 78, 21),
woosh.Token(woosh.OP, '(', 78, 21, 78, 22),
woosh.Token(woosh.NAME, 'name', 78, 22, 78, 26),
woosh.Token(woosh.OP, ',', 78, 26, 78, 27),
woosh.Token(woosh.NAME, 'strict', 78, 28, 78, 34),
woosh.Token(woosh.OP, ')', 78, 34, 78, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 78, 35, 79, 0),
woosh.Token(woosh.DEDENT, '    ', 80, 0, 80, 4),
woosh.Token(woosh.DEDENT, '', 80, 4, 80, 4),
woosh.Token(woosh.NAME, 'def', 80, 4, 80, 7),
woosh.Token(woosh.NAME, 'add_type', 80, 8, 80, 16),
woosh.Token(woosh.OP, '(', 80, 16, 80, 17),
woosh.Token(woosh.NAME, 'self', 80, 17, 80, 21),
woosh.Token(woosh.OP, ',', 80, 21, 80, 22),
woosh.Token(woosh.NAME, 'type', 80, 23, 80, 27),
woosh.Token(woosh.OP, ',', 80, 27, 80, 28),
woosh.Token(woosh.NAME, 'ext', 80, 29, 80, 32),
woosh.Token(woosh.OP, ',', 80, 32, 80, 33),
woosh.Token(woosh.NAME, 'strict', 80, 34, 80, 40),
woosh.Token(woosh.OP, '=', 80, 40, 80, 41),
woosh.Token(woosh.NAME, 'True', 80, 41, 80, 45),
woosh.Token(woosh.OP, ')', 80, 45, 80, 46),
woosh.Token(woosh.OP, ':', 80, 46, 80, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 80, 47, 81, 0),
woosh.Token(woosh.INDENT, '        ', 81, 0, 81, 8),
woosh.Token(woosh.STRING, '"""Add a mapping between a type and an extension.\r\n\r\n        When the extension is already known, the new\r\n        type will replace the old one. When the type\r\n        is already known the extension will be added\r\n        to the list of known extensions.\r\n\r\n        If strict is true, information will be added to\r\n        list of standard types, else to the list of non-standard\r\n        types.\r\n        """', 81, 8, 91, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 91, 11, 92, 0),
woosh.Token(woosh.NAME, 'self', 92, 8, 92, 12),
woosh.Token(woosh.OP, '.', 92, 12, 92, 13),
woosh.Token(woosh.NAME, 'types_map', 92, 13, 92, 22),
woosh.Token(woosh.OP, '[', 92, 22, 92, 23),
woosh.Token(woosh.NAME, 'strict', 92, 23, 92, 29),
woosh.Token(woosh.OP, ']', 92, 29, 92, 30),
woosh.Token(woosh.OP, '[', 92, 30, 92, 31),
woosh.Token(woosh.NAME, 'ext', 92, 31, 92, 34),
woosh.Token(woosh.OP, ']', 92, 34, 92, 35),
woosh.Token(woosh.OP, '=', 92, 36, 92, 37),
woosh.Token(woosh.NAME, 'type', 92, 38, 92, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 92, 42, 93, 0),
woosh.Token(woosh.NAME, 'exts', 93, 8, 93, 12),
woosh.Token(woosh.OP, '=', 93, 13, 93, 14),
woosh.Token(woosh.NAME, 'self', 93, 15, 93, 19),
woosh.Token(woosh.OP, '.', 93, 19, 93, 20),
woosh.Token(woosh.NAME, 'types_map_inv', 93, 20, 93, 33),
woosh.Token(woosh.OP, '[', 93, 33, 93, 34),
woosh.Token(woosh.NAME, 'strict', 93, 34, 93, 40),
woosh.Token(woosh.OP, ']', 93, 40, 93, 41),
woosh.Token(woosh.OP, '.', 93, 41, 93, 42),
woosh.Token(woosh.NAME, 'setdefault', 93, 42, 93, 52),
woosh.Token(woosh.OP, '(', 93, 52, 93, 53),
woosh.Token(woosh.NAME, 'type', 93, 53, 93, 57),
woosh.Token(woosh.OP, ',', 93, 57, 93, 58),
woosh.Token(woosh.OP, '[', 93, 59, 93, 60),
woosh.Token(woosh.OP, ']', 93, 60, 93, 61),
woosh.Token(woosh.OP, ')', 93, 61, 93, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 93, 62, 94, 0),
woosh.Token(woosh.NAME, 'if', 94, 8, 94, 10),
woosh.Token(woosh.NAME, 'ext', 94, 11, 94, 14),
woosh.Token(woosh.NAME, 'not', 94, 15, 94, 18),
woosh.Token(woosh.NAME, 'in', 94, 19, 94, 21),
woosh.Token(woosh.NAME, 'exts', 94, 22, 94, 26),
woosh.Token(woosh.OP, ':', 94, 26, 94, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 94, 27, 95, 0),
woosh.Token(woosh.INDENT, '            ', 95, 0, 95, 12),
woosh.Token(woosh.NAME, 'exts', 95, 12, 95, 16),
woosh.Token(woosh.OP, '.', 95, 16, 95, 17),
woosh.Token(woosh.NAME, 'append', 95, 17, 95, 23),
woosh.Token(woosh.OP, '(', 95, 23, 95, 24),
woosh.Token(woosh.NAME, 'ext', 95, 24, 95, 27),
woosh.Token(woosh.OP, ')', 95, 27, 95, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 95, 28, 96, 0),
woosh.Token(woosh.DEDENT, '    ', 97, 0, 97, 4),
woosh.Token(woosh.DEDENT, '', 97, 4, 97, 4),
woosh.Token(woosh.NAME, 'def', 97, 4, 97, 7),
woosh.Token(woosh.NAME, 'guess_type', 97, 8, 97, 18),
woosh.Token(woosh.OP, '(', 97, 18, 97, 19),
woosh.Token(woosh.NAME, 'self', 97, 19, 97, 23),
woosh.Token(woosh.OP, ',', 97, 23, 97, 24),
woosh.Token(woosh.NAME, 'url', 97, 25, 97, 28),
woosh.Token(woosh.OP, ',', 97, 28, 97, 29),
woosh.Token(woosh.NAME, 'strict', 97, 30, 97, 36),
woosh.Token(woosh.OP, '=', 97, 36, 97, 37),
woosh.Token(woosh.NAME, 'True', 97, 37, 97, 41),
woosh.Token(woosh.OP, ')', 97, 41, 97, 42),
woosh.Token(woosh.OP, ':', 97, 42, 97, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 97, 43, 98, 0),
woosh.Token(woosh.INDENT, '        ', 98, 0, 98, 8),
woosh.Token(woosh.STRING, '"""Guess the type of a file which is either a URL or a path-like object.\r\n\r\n        Return value is a tuple (type, encoding) where type is None if\r\n        the type can\'t be guessed (no or unknown suffix) or a string\r\n        of the form type/subtype, usable for a MIME Content-type\r\n        header; and encoding is None for no encoding or the name of\r\n        the program used to encode (e.g. compress or gzip).  The\r\n        mappings are table driven.  Encoding suffixes are case\r\n        sensitive; type suffixes are first tried case sensitive, then\r\n        case insensitive.\r\n\r\n        The suffixes .tgz, .taz and .tz (case sensitive!) are all\r\n        mapped to \'.tar.gz\'.  (This is table-driven too, using the\r\n        dictionary suffix_map.)\r\n\r\n        Optional `strict\' argument when False adds a bunch of commonly found,\r\n        but non-standard types.\r\n        """', 98, 8, 115, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 115, 11, 116, 0),
woosh.Token(woosh.NAME, 'url', 116, 8, 116, 11),
woosh.Token(woosh.OP, '=', 116, 12, 116, 13),
woosh.Token(woosh.NAME, 'os', 116, 14, 116, 16),
woosh.Token(woosh.OP, '.', 116, 16, 116, 17),
woosh.Token(woosh.NAME, 'fspath', 116, 17, 116, 23),
woosh.Token(woosh.OP, '(', 116, 23, 116, 24),
woosh.Token(woosh.NAME, 'url', 116, 24, 116, 27),
woosh.Token(woosh.OP, ')', 116, 27, 116, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 116, 28, 117, 0),
woosh.Token(woosh.NAME, 'scheme', 117, 8, 117, 14),
woosh.Token(woosh.OP, ',', 117, 14, 117, 15),
woosh.Token(woosh.NAME, 'url', 117, 16, 117, 19),
woosh.Token(woosh.OP, '=', 117, 20, 117, 21),
woosh.Token(woosh.NAME, 'urllib', 117, 22, 117, 28),
woosh.Token(woosh.OP, '.', 117, 28, 117, 29),
woosh.Token(woosh.NAME, 'parse', 117, 29, 117, 34),
woosh.Token(woosh.OP, '.', 117, 34, 117, 35),
woosh.Token(woosh.NAME, '_splittype', 117, 35, 117, 45),
woosh.Token(woosh.OP, '(', 117, 45, 117, 46),
woosh.Token(woosh.NAME, 'url', 117, 46, 117, 49),
woosh.Token(woosh.OP, ')', 117, 49, 117, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 117, 50, 118, 0),
woosh.Token(woosh.NAME, 'if', 118, 8, 118, 10),
woosh.Token(woosh.NAME, 'scheme', 118, 11, 118, 17),
woosh.Token(woosh.OP, '==', 118, 18, 118, 20),
woosh.Token(woosh.STRING, "'data'", 118, 21, 118, 27),
woosh.Token(woosh.OP, ':', 118, 27, 118, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 118, 28, 119, 0),
woosh.Token(woosh.COMMENT, '# syntax of data URLs:', 119, 12, 119, 34),
woosh.Token(woosh.COMMENT, '# dataurl   := "data:" [ mediatype ] [ ";base64" ] "," data', 120, 12, 120, 71),
woosh.Token(woosh.COMMENT, '# mediatype := [ type "/" subtype ] *( ";" parameter )', 121, 12, 121, 66),
woosh.Token(woosh.COMMENT, '# data      := *urlchar', 122, 12, 122, 35),
woosh.Token(woosh.COMMENT, '# parameter := attribute "=" value', 123, 12, 123, 46),
woosh.Token(woosh.COMMENT, '# type/subtype defaults to "text/plain"', 124, 12, 124, 51),
woosh.Token(woosh.INDENT, '            ', 125, 0, 125, 12),
woosh.Token(woosh.NAME, 'comma', 125, 12, 125, 17),
woosh.Token(woosh.OP, '=', 125, 18, 125, 19),
woosh.Token(woosh.NAME, 'url', 125, 20, 125, 23),
woosh.Token(woosh.OP, '.', 125, 23, 125, 24),
woosh.Token(woosh.NAME, 'find', 125, 24, 125, 28),
woosh.Token(woosh.OP, '(', 125, 28, 125, 29),
woosh.Token(woosh.STRING, "','", 125, 29, 125, 32),
woosh.Token(woosh.OP, ')', 125, 32, 125, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 125, 33, 126, 0),
woosh.Token(woosh.NAME, 'if', 126, 12, 126, 14),
woosh.Token(woosh.NAME, 'comma', 126, 15, 126, 20),
woosh.Token(woosh.OP, '<', 126, 21, 126, 22),
woosh.Token(woosh.NUMBER, '0', 126, 23, 126, 24),
woosh.Token(woosh.OP, ':', 126, 24, 126, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 126, 25, 127, 0),
woosh.Token(woosh.COMMENT, '# bad data URL', 127, 16, 127, 30),
woosh.Token(woosh.INDENT, '                ', 128, 0, 128, 16),
woosh.Token(woosh.NAME, 'return', 128, 16, 128, 22),
woosh.Token(woosh.NAME, 'None', 128, 23, 128, 27),
woosh.Token(woosh.OP, ',', 128, 27, 128, 28),
woosh.Token(woosh.NAME, 'None', 128, 29, 128, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 128, 33, 129, 0),
woosh.Token(woosh.DEDENT, '            ', 129, 0, 129, 12),
woosh.Token(woosh.NAME, 'semi', 129, 12, 129, 16),
woosh.Token(woosh.OP, '=', 129, 17, 129, 18),
woosh.Token(woosh.NAME, 'url', 129, 19, 129, 22),
woosh.Token(woosh.OP, '.', 129, 22, 129, 23),
woosh.Token(woosh.NAME, 'find', 129, 23, 129, 27),
woosh.Token(woosh.OP, '(', 129, 27, 129, 28),
woosh.Token(woosh.STRING, "';'", 129, 28, 129, 31),
woosh.Token(woosh.OP, ',', 129, 31, 129, 32),
woosh.Token(woosh.NUMBER, '0', 129, 33, 129, 34),
woosh.Token(woosh.OP, ',', 129, 34, 129, 35),
woosh.Token(woosh.NAME, 'comma', 129, 36, 129, 41),
woosh.Token(woosh.OP, ')', 129, 41, 129, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 129, 42, 130, 0),
woosh.Token(woosh.NAME, 'if', 130, 12, 130, 14),
woosh.Token(woosh.NAME, 'semi', 130, 15, 130, 19),
woosh.Token(woosh.OP, '>=', 130, 20, 130, 22),
woosh.Token(woosh.NUMBER, '0', 130, 23, 130, 24),
woosh.Token(woosh.OP, ':', 130, 24, 130, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 130, 25, 131, 0),
woosh.Token(woosh.INDENT, '                ', 131, 0, 131, 16),
woosh.Token(woosh.NAME, 'type', 131, 16, 131, 20),
woosh.Token(woosh.OP, '=', 131, 21, 131, 22),
woosh.Token(woosh.NAME, 'url', 131, 23, 131, 26),
woosh.Token(woosh.OP, '[', 131, 26, 131, 27),
woosh.Token(woosh.OP, ':', 131, 27, 131, 28),
woosh.Token(woosh.NAME, 'semi', 131, 28, 131, 32),
woosh.Token(woosh.OP, ']', 131, 32, 131, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 131, 33, 132, 0),
woosh.Token(woosh.DEDENT, '            ', 132, 0, 132, 12),
woosh.Token(woosh.NAME, 'else', 132, 12, 132, 16),
woosh.Token(woosh.OP, ':', 132, 16, 132, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 132, 17, 133, 0),
woosh.Token(woosh.INDENT, '                ', 133, 0, 133, 16),
woosh.Token(woosh.NAME, 'type', 133, 16, 133, 20),
woosh.Token(woosh.OP, '=', 133, 21, 133, 22),
woosh.Token(woosh.NAME, 'url', 133, 23, 133, 26),
woosh.Token(woosh.OP, '[', 133, 26, 133, 27),
woosh.Token(woosh.OP, ':', 133, 27, 133, 28),
woosh.Token(woosh.NAME, 'comma', 133, 28, 133, 33),
woosh.Token(woosh.OP, ']', 133, 33, 133, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 133, 34, 134, 0),
woosh.Token(woosh.DEDENT, '            ', 134, 0, 134, 12),
woosh.Token(woosh.NAME, 'if', 134, 12, 134, 14),
woosh.Token(woosh.STRING, "'='", 134, 15, 134, 18),
woosh.Token(woosh.NAME, 'in', 134, 19, 134, 21),
woosh.Token(woosh.NAME, 'type', 134, 22, 134, 26),
woosh.Token(woosh.NAME, 'or', 134, 27, 134, 29),
woosh.Token(woosh.STRING, "'/'", 134, 30, 134, 33),
woosh.Token(woosh.NAME, 'not', 134, 34, 134, 37),
woosh.Token(woosh.NAME, 'in', 134, 38, 134, 40),
woosh.Token(woosh.NAME, 'type', 134, 41, 134, 45),
woosh.Token(woosh.OP, ':', 134, 45, 134, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 134, 46, 135, 0),
woosh.Token(woosh.INDENT, '                ', 135, 0, 135, 16),
woosh.Token(woosh.NAME, 'type', 135, 16, 135, 20),
woosh.Token(woosh.OP, '=', 135, 21, 135, 22),
woosh.Token(woosh.STRING, "'text/plain'", 135, 23, 135, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 135, 35, 136, 0),
woosh.Token(woosh.DEDENT, '            ', 136, 0, 136, 12),
woosh.Token(woosh.NAME, 'return', 136, 12, 136, 18),
woosh.Token(woosh.NAME, 'type', 136, 19, 136, 23),
woosh.Token(woosh.OP, ',', 136, 23, 136, 24),
woosh.Token(woosh.NAME, 'None', 136, 25, 136, 29),
woosh.Token(woosh.COMMENT, '# never compressed, so encoding is None', 136, 40, 136, 79),
woosh.Token(woosh.NEWLINE, '\r\n', 136, 79, 137, 0),
woosh.Token(woosh.DEDENT, '        ', 137, 0, 137, 8),
woosh.Token(woosh.NAME, 'base', 137, 8, 137, 12),
woosh.Token(woosh.OP, ',', 137, 12, 137, 13),
woosh.Token(woosh.NAME, 'ext', 137, 14, 137, 17),
woosh.Token(woosh.OP, '=', 137, 18, 137, 19),
woosh.Token(woosh.NAME, 'posixpath', 137, 20, 137, 29),
woosh.Token(woosh.OP, '.', 137, 29, 137, 30),
woosh.Token(woosh.NAME, 'splitext', 137, 30, 137, 38),
woosh.Token(woosh.OP, '(', 137, 38, 137, 39),
woosh.Token(woosh.NAME, 'url', 137, 39, 137, 42),
woosh.Token(woosh.OP, ')', 137, 42, 137, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 137, 43, 138, 0),
woosh.Token(woosh.NAME, 'while', 138, 8, 138, 13),
woosh.Token(woosh.NAME, 'ext', 138, 14, 138, 17),
woosh.Token(woosh.NAME, 'in', 138, 18, 138, 20),
woosh.Token(woosh.NAME, 'self', 138, 21, 138, 25),
woosh.Token(woosh.OP, '.', 138, 25, 138, 26),
woosh.Token(woosh.NAME, 'suffix_map', 138, 26, 138, 36),
woosh.Token(woosh.OP, ':', 138, 36, 138, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 138, 37, 139, 0),
woosh.Token(woosh.INDENT, '            ', 139, 0, 139, 12),
woosh.Token(woosh.NAME, 'base', 139, 12, 139, 16),
woosh.Token(woosh.OP, ',', 139, 16, 139, 17),
woosh.Token(woosh.NAME, 'ext', 139, 18, 139, 21),
woosh.Token(woosh.OP, '=', 139, 22, 139, 23),
woosh.Token(woosh.NAME, 'posixpath', 139, 24, 139, 33),
woosh.Token(woosh.OP, '.', 139, 33, 139, 34),
woosh.Token(woosh.NAME, 'splitext', 139, 34, 139, 42),
woosh.Token(woosh.OP, '(', 139, 42, 139, 43),
woosh.Token(woosh.NAME, 'base', 139, 43, 139, 47),
woosh.Token(woosh.OP, '+', 139, 48, 139, 49),
woosh.Token(woosh.NAME, 'self', 139, 50, 139, 54),
woosh.Token(woosh.OP, '.', 139, 54, 139, 55),
woosh.Token(woosh.NAME, 'suffix_map', 139, 55, 139, 65),
woosh.Token(woosh.OP, '[', 139, 65, 139, 66),
woosh.Token(woosh.NAME, 'ext', 139, 66, 139, 69),
woosh.Token(woosh.OP, ']', 139, 69, 139, 70),
woosh.Token(woosh.OP, ')', 139, 70, 139, 71),
woosh.Token(woosh.NEWLINE, '\r\n', 139, 71, 140, 0),
woosh.Token(woosh.DEDENT, '        ', 140, 0, 140, 8),
woosh.Token(woosh.NAME, 'if', 140, 8, 140, 10),
woosh.Token(woosh.NAME, 'ext', 140, 11, 140, 14),
woosh.Token(woosh.NAME, 'in', 140, 15, 140, 17),
woosh.Token(woosh.NAME, 'self', 140, 18, 140, 22),
woosh.Token(woosh.OP, '.', 140, 22, 140, 23),
woosh.Token(woosh.NAME, 'encodings_map', 140, 23, 140, 36),
woosh.Token(woosh.OP, ':', 140, 36, 140, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 140, 37, 141, 0),
woosh.Token(woosh.INDENT, '            ', 141, 0, 141, 12),
woosh.Token(woosh.NAME, 'encoding', 141, 12, 141, 20),
woosh.Token(woosh.OP, '=', 141, 21, 141, 22),
woosh.Token(woosh.NAME, 'self', 141, 23, 141, 27),
woosh.Token(woosh.OP, '.', 141, 27, 141, 28),
woosh.Token(woosh.NAME, 'encodings_map', 141, 28, 141, 41),
woosh.Token(woosh.OP, '[', 141, 41, 141, 42),
woosh.Token(woosh.NAME, 'ext', 141, 42, 141, 45),
woosh.Token(woosh.OP, ']', 141, 45, 141, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 141, 46, 142, 0),
woosh.Token(woosh.NAME, 'base', 142, 12, 142, 16),
woosh.Token(woosh.OP, ',', 142, 16, 142, 17),
woosh.Token(woosh.NAME, 'ext', 142, 18, 142, 21),
woosh.Token(woosh.OP, '=', 142, 22, 142, 23),
woosh.Token(woosh.NAME, 'posixpath', 142, 24, 142, 33),
woosh.Token(woosh.OP, '.', 142, 33, 142, 34),
woosh.Token(woosh.NAME, 'splitext', 142, 34, 142, 42),
woosh.Token(woosh.OP, '(', 142, 42, 142, 43),
woosh.Token(woosh.NAME, 'base', 142, 43, 142, 47),
woosh.Token(woosh.OP, ')', 142, 47, 142, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 142, 48, 143, 0),
woosh.Token(woosh.DEDENT, '        ', 143, 0, 143, 8),
woosh.Token(woosh.NAME, 'else', 143, 8, 143, 12),
woosh.Token(woosh.OP, ':', 143, 12, 143, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 143, 13, 144, 0),
woosh.Token(woosh.INDENT, '            ', 144, 0, 144, 12),
woosh.Token(woosh.NAME, 'encoding', 144, 12, 144, 20),
woosh.Token(woosh.OP, '=', 144, 21, 144, 22),
woosh.Token(woosh.NAME, 'None', 144, 23, 144, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 144, 27, 145, 0),
woosh.Token(woosh.DEDENT, '        ', 145, 0, 145, 8),
woosh.Token(woosh.NAME, 'types_map', 145, 8, 145, 17),
woosh.Token(woosh.OP, '=', 145, 18, 145, 19),
woosh.Token(woosh.NAME, 'self', 145, 20, 145, 24),
woosh.Token(woosh.OP, '.', 145, 24, 145, 25),
woosh.Token(woosh.NAME, 'types_map', 145, 25, 145, 34),
woosh.Token(woosh.OP, '[', 145, 34, 145, 35),
woosh.Token(woosh.NAME, 'True', 145, 35, 145, 39),
woosh.Token(woosh.OP, ']', 145, 39, 145, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 145, 40, 146, 0),
woosh.Token(woosh.NAME, 'if', 146, 8, 146, 10),
woosh.Token(woosh.NAME, 'ext', 146, 11, 146, 14),
woosh.Token(woosh.NAME, 'in', 146, 15, 146, 17),
woosh.Token(woosh.NAME, 'types_map', 146, 18, 146, 27),
woosh.Token(woosh.OP, ':', 146, 27, 146, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 146, 28, 147, 0),
woosh.Token(woosh.INDENT, '            ', 147, 0, 147, 12),
woosh.Token(woosh.NAME, 'return', 147, 12, 147, 18),
woosh.Token(woosh.NAME, 'types_map', 147, 19, 147, 28),
woosh.Token(woosh.OP, '[', 147, 28, 147, 29),
woosh.Token(woosh.NAME, 'ext', 147, 29, 147, 32),
woosh.Token(woosh.OP, ']', 147, 32, 147, 33),
woosh.Token(woosh.OP, ',', 147, 33, 147, 34),
woosh.Token(woosh.NAME, 'encoding', 147, 35, 147, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 147, 43, 148, 0),
woosh.Token(woosh.DEDENT, '        ', 148, 0, 148, 8),
woosh.Token(woosh.NAME, 'elif', 148, 8, 148, 12),
woosh.Token(woosh.NAME, 'ext', 148, 13, 148, 16),
woosh.Token(woosh.OP, '.', 148, 16, 148, 17),
woosh.Token(woosh.NAME, 'lower', 148, 17, 148, 22),
woosh.Token(woosh.OP, '(', 148, 22, 148, 23),
woosh.Token(woosh.OP, ')', 148, 23, 148, 24),
woosh.Token(woosh.NAME, 'in', 148, 25, 148, 27),
woosh.Token(woosh.NAME, 'types_map', 148, 28, 148, 37),
woosh.Token(woosh.OP, ':', 148, 37, 148, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 148, 38, 149, 0),
woosh.Token(woosh.INDENT, '            ', 149, 0, 149, 12),
woosh.Token(woosh.NAME, 'return', 149, 12, 149, 18),
woosh.Token(woosh.NAME, 'types_map', 149, 19, 149, 28),
woosh.Token(woosh.OP, '[', 149, 28, 149, 29),
woosh.Token(woosh.NAME, 'ext', 149, 29, 149, 32),
woosh.Token(woosh.OP, '.', 149, 32, 149, 33),
woosh.Token(woosh.NAME, 'lower', 149, 33, 149, 38),
woosh.Token(woosh.OP, '(', 149, 38, 149, 39),
woosh.Token(woosh.OP, ')', 149, 39, 149, 40),
woosh.Token(woosh.OP, ']', 149, 40, 149, 41),
woosh.Token(woosh.OP, ',', 149, 41, 149, 42),
woosh.Token(woosh.NAME, 'encoding', 149, 43, 149, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 149, 51, 150, 0),
woosh.Token(woosh.DEDENT, '        ', 150, 0, 150, 8),
woosh.Token(woosh.NAME, 'elif', 150, 8, 150, 12),
woosh.Token(woosh.NAME, 'strict', 150, 13, 150, 19),
woosh.Token(woosh.OP, ':', 150, 19, 150, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 150, 20, 151, 0),
woosh.Token(woosh.INDENT, '            ', 151, 0, 151, 12),
woosh.Token(woosh.NAME, 'return', 151, 12, 151, 18),
woosh.Token(woosh.NAME, 'None', 151, 19, 151, 23),
woosh.Token(woosh.OP, ',', 151, 23, 151, 24),
woosh.Token(woosh.NAME, 'encoding', 151, 25, 151, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 151, 33, 152, 0),
woosh.Token(woosh.DEDENT, '        ', 152, 0, 152, 8),
woosh.Token(woosh.NAME, 'types_map', 152, 8, 152, 17),
woosh.Token(woosh.OP, '=', 152, 18, 152, 19),
woosh.Token(woosh.NAME, 'self', 152, 20, 152, 24),
woosh.Token(woosh.OP, '.', 152, 24, 152, 25),
woosh.Token(woosh.NAME, 'types_map', 152, 25, 152, 34),
woosh.Token(woosh.OP, '[', 152, 34, 152, 35),
woosh.Token(woosh.NAME, 'False', 152, 35, 152, 40),
woosh.Token(woosh.OP, ']', 152, 40, 152, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 152, 41, 153, 0),
woosh.Token(woosh.NAME, 'if', 153, 8, 153, 10),
woosh.Token(woosh.NAME, 'ext', 153, 11, 153, 14),
woosh.Token(woosh.NAME, 'in', 153, 15, 153, 17),
woosh.Token(woosh.NAME, 'types_map', 153, 18, 153, 27),
woosh.Token(woosh.OP, ':', 153, 27, 153, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 153, 28, 154, 0),
woosh.Token(woosh.INDENT, '            ', 154, 0, 154, 12),
woosh.Token(woosh.NAME, 'return', 154, 12, 154, 18),
woosh.Token(woosh.NAME, 'types_map', 154, 19, 154, 28),
woosh.Token(woosh.OP, '[', 154, 28, 154, 29),
woosh.Token(woosh.NAME, 'ext', 154, 29, 154, 32),
woosh.Token(woosh.OP, ']', 154, 32, 154, 33),
woosh.Token(woosh.OP, ',', 154, 33, 154, 34),
woosh.Token(woosh.NAME, 'encoding', 154, 35, 154, 43),
woosh.Token(woosh.NEWLINE, '\r\n', 154, 43, 155, 0),
woosh.Token(woosh.DEDENT, '        ', 155, 0, 155, 8),
woosh.Token(woosh.NAME, 'elif', 155, 8, 155, 12),
woosh.Token(woosh.NAME, 'ext', 155, 13, 155, 16),
woosh.Token(woosh.OP, '.', 155, 16, 155, 17),
woosh.Token(woosh.NAME, 'lower', 155, 17, 155, 22),
woosh.Token(woosh.OP, '(', 155, 22, 155, 23),
woosh.Token(woosh.OP, ')', 155, 23, 155, 24),
woosh.Token(woosh.NAME, 'in', 155, 25, 155, 27),
woosh.Token(woosh.NAME, 'types_map', 155, 28, 155, 37),
woosh.Token(woosh.OP, ':', 155, 37, 155, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 155, 38, 156, 0),
woosh.Token(woosh.INDENT, '            ', 156, 0, 156, 12),
woosh.Token(woosh.NAME, 'return', 156, 12, 156, 18),
woosh.Token(woosh.NAME, 'types_map', 156, 19, 156, 28),
woosh.Token(woosh.OP, '[', 156, 28, 156, 29),
woosh.Token(woosh.NAME, 'ext', 156, 29, 156, 32),
woosh.Token(woosh.OP, '.', 156, 32, 156, 33),
woosh.Token(woosh.NAME, 'lower', 156, 33, 156, 38),
woosh.Token(woosh.OP, '(', 156, 38, 156, 39),
woosh.Token(woosh.OP, ')', 156, 39, 156, 40),
woosh.Token(woosh.OP, ']', 156, 40, 156, 41),
woosh.Token(woosh.OP, ',', 156, 41, 156, 42),
woosh.Token(woosh.NAME, 'encoding', 156, 43, 156, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 156, 51, 157, 0),
woosh.Token(woosh.DEDENT, '        ', 157, 0, 157, 8),
woosh.Token(woosh.NAME, 'else', 157, 8, 157, 12),
woosh.Token(woosh.OP, ':', 157, 12, 157, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 157, 13, 158, 0),
woosh.Token(woosh.INDENT, '            ', 158, 0, 158, 12),
woosh.Token(woosh.NAME, 'return', 158, 12, 158, 18),
woosh.Token(woosh.NAME, 'None', 158, 19, 158, 23),
woosh.Token(woosh.OP, ',', 158, 23, 158, 24),
woosh.Token(woosh.NAME, 'encoding', 158, 25, 158, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 158, 33, 159, 0),
woosh.Token(woosh.DEDENT, '    ', 160, 0, 160, 4),
woosh.Token(woosh.DEDENT, '', 160, 4, 160, 4),
woosh.Token(woosh.NAME, 'def', 160, 4, 160, 7),
woosh.Token(woosh.NAME, 'guess_all_extensions', 160, 8, 160, 28),
woosh.Token(woosh.OP, '(', 160, 28, 160, 29),
woosh.Token(woosh.NAME, 'self', 160, 29, 160, 33),
woosh.Token(woosh.OP, ',', 160, 33, 160, 34),
woosh.Token(woosh.NAME, 'type', 160, 35, 160, 39),
woosh.Token(woosh.OP, ',', 160, 39, 160, 40),
woosh.Token(woosh.NAME, 'strict', 160, 41, 160, 47),
woosh.Token(woosh.OP, '=', 160, 47, 160, 48),
woosh.Token(woosh.NAME, 'True', 160, 48, 160, 52),
woosh.Token(woosh.OP, ')', 160, 52, 160, 53),
woosh.Token(woosh.OP, ':', 160, 53, 160, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 160, 54, 161, 0),
woosh.Token(woosh.INDENT, '        ', 161, 0, 161, 8),
woosh.Token(woosh.STRING, '"""Guess the extensions for a file based on its MIME type.\r\n\r\n        Return value is a list of strings giving the possible filename\r\n        extensions, including the leading dot (\'.\').  The extension is not\r\n        guaranteed to have been associated with any particular data stream,\r\n        but would be mapped to the MIME type `type\' by guess_type().\r\n\r\n        Optional `strict\' argument when false adds a bunch of commonly found,\r\n        but non-standard types.\r\n        """', 161, 8, 170, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 170, 11, 171, 0),
woosh.Token(woosh.NAME, 'type', 171, 8, 171, 12),
woosh.Token(woosh.OP, '=', 171, 13, 171, 14),
woosh.Token(woosh.NAME, 'type', 171, 15, 171, 19),
woosh.Token(woosh.OP, '.', 171, 19, 171, 20),
woosh.Token(woosh.NAME, 'lower', 171, 20, 171, 25),
woosh.Token(woosh.OP, '(', 171, 25, 171, 26),
woosh.Token(woosh.OP, ')', 171, 26, 171, 27),
woosh.Token(woosh.NEWLINE, '\r\n', 171, 27, 172, 0),
woosh.Token(woosh.NAME, 'extensions', 172, 8, 172, 18),
woosh.Token(woosh.OP, '=', 172, 19, 172, 20),
woosh.Token(woosh.NAME, 'self', 172, 21, 172, 25),
woosh.Token(woosh.OP, '.', 172, 25, 172, 26),
woosh.Token(woosh.NAME, 'types_map_inv', 172, 26, 172, 39),
woosh.Token(woosh.OP, '[', 172, 39, 172, 40),
woosh.Token(woosh.NAME, 'True', 172, 40, 172, 44),
woosh.Token(woosh.OP, ']', 172, 44, 172, 45),
woosh.Token(woosh.OP, '.', 172, 45, 172, 46),
woosh.Token(woosh.NAME, 'get', 172, 46, 172, 49),
woosh.Token(woosh.OP, '(', 172, 49, 172, 50),
woosh.Token(woosh.NAME, 'type', 172, 50, 172, 54),
woosh.Token(woosh.OP, ',', 172, 54, 172, 55),
woosh.Token(woosh.OP, '[', 172, 56, 172, 57),
woosh.Token(woosh.OP, ']', 172, 57, 172, 58),
woosh.Token(woosh.OP, ')', 172, 58, 172, 59),
woosh.Token(woosh.NEWLINE, '\r\n', 172, 59, 173, 0),
woosh.Token(woosh.NAME, 'if', 173, 8, 173, 10),
woosh.Token(woosh.NAME, 'not', 173, 11, 173, 14),
woosh.Token(woosh.NAME, 'strict', 173, 15, 173, 21),
woosh.Token(woosh.OP, ':', 173, 21, 173, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 173, 22, 174, 0),
woosh.Token(woosh.INDENT, '            ', 174, 0, 174, 12),
woosh.Token(woosh.NAME, 'for', 174, 12, 174, 15),
woosh.Token(woosh.NAME, 'ext', 174, 16, 174, 19),
woosh.Token(woosh.NAME, 'in', 174, 20, 174, 22),
woosh.Token(woosh.NAME, 'self', 174, 23, 174, 27),
woosh.Token(woosh.OP, '.', 174, 27, 174, 28),
woosh.Token(woosh.NAME, 'types_map_inv', 174, 28, 174, 41),
woosh.Token(woosh.OP, '[', 174, 41, 174, 42),
woosh.Token(woosh.NAME, 'False', 174, 42, 174, 47),
woosh.Token(woosh.OP, ']', 174, 47, 174, 48),
woosh.Token(woosh.OP, '.', 174, 48, 174, 49),
woosh.Token(woosh.NAME, 'get', 174, 49, 174, 52),
woosh.Token(woosh.OP, '(', 174, 52, 174, 53),
woosh.Token(woosh.NAME, 'type', 174, 53, 174, 57),
woosh.Token(woosh.OP, ',', 174, 57, 174, 58),
woosh.Token(woosh.OP, '[', 174, 59, 174, 60),
woosh.Token(woosh.OP, ']', 174, 60, 174, 61),
woosh.Token(woosh.OP, ')', 174, 61, 174, 62),
woosh.Token(woosh.OP, ':', 174, 62, 174, 63),
woosh.Token(woosh.NEWLINE, '\r\n', 174, 63, 175, 0),
woosh.Token(woosh.INDENT, '                ', 175, 0, 175, 16),
woosh.Token(woosh.NAME, 'if', 175, 16, 175, 18),
woosh.Token(woosh.NAME, 'ext', 175, 19, 175, 22),
woosh.Token(woosh.NAME, 'not', 175, 23, 175, 26),
woosh.Token(woosh.NAME, 'in', 175, 27, 175, 29),
woosh.Token(woosh.NAME, 'extensions', 175, 30, 175, 40),
woosh.Token(woosh.OP, ':', 175, 40, 175, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 175, 41, 176, 0),
woosh.Token(woosh.INDENT, '                    ', 176, 0, 176, 20),
woosh.Token(woosh.NAME, 'extensions', 176, 20, 176, 30),
woosh.Token(woosh.OP, '.', 176, 30, 176, 31),
woosh.Token(woosh.NAME, 'append', 176, 31, 176, 37),
woosh.Token(woosh.OP, '(', 176, 37, 176, 38),
woosh.Token(woosh.NAME, 'ext', 176, 38, 176, 41),
woosh.Token(woosh.OP, ')', 176, 41, 176, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 176, 42, 177, 0),
woosh.Token(woosh.DEDENT, '        ', 177, 0, 177, 8),
woosh.Token(woosh.DEDENT, '', 177, 8, 177, 8),
woosh.Token(woosh.DEDENT, '', 177, 8, 177, 8),
woosh.Token(woosh.NAME, 'return', 177, 8, 177, 14),
woosh.Token(woosh.NAME, 'extensions', 177, 15, 177, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 177, 25, 178, 0),
woosh.Token(woosh.DEDENT, '    ', 179, 0, 179, 4),
woosh.Token(woosh.NAME, 'def', 179, 4, 179, 7),
woosh.Token(woosh.NAME, 'guess_extension', 179, 8, 179, 23),
woosh.Token(woosh.OP, '(', 179, 23, 179, 24),
woosh.Token(woosh.NAME, 'self', 179, 24, 179, 28),
woosh.Token(woosh.OP, ',', 179, 28, 179, 29),
woosh.Token(woosh.NAME, 'type', 179, 30, 179, 34),
woosh.Token(woosh.OP, ',', 179, 34, 179, 35),
woosh.Token(woosh.NAME, 'strict', 179, 36, 179, 42),
woosh.Token(woosh.OP, '=', 179, 42, 179, 43),
woosh.Token(woosh.NAME, 'True', 179, 43, 179, 47),
woosh.Token(woosh.OP, ')', 179, 47, 179, 48),
woosh.Token(woosh.OP, ':', 179, 48, 179, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 179, 49, 180, 0),
woosh.Token(woosh.INDENT, '        ', 180, 0, 180, 8),
woosh.Token(woosh.STRING, '"""Guess the extension for a file based on its MIME type.\r\n\r\n        Return value is a string giving a filename extension,\r\n        including the leading dot (\'.\').  The extension is not\r\n        guaranteed to have been associated with any particular data\r\n        stream, but would be mapped to the MIME type `type\' by\r\n        guess_type().  If no extension can be guessed for `type\', None\r\n        is returned.\r\n\r\n        Optional `strict\' argument when false adds a bunch of commonly found,\r\n        but non-standard types.\r\n        """', 180, 8, 191, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 191, 11, 192, 0),
woosh.Token(woosh.NAME, 'extensions', 192, 8, 192, 18),
woosh.Token(woosh.OP, '=', 192, 19, 192, 20),
woosh.Token(woosh.NAME, 'self', 192, 21, 192, 25),
woosh.Token(woosh.OP, '.', 192, 25, 192, 26),
woosh.Token(woosh.NAME, 'guess_all_extensions', 192, 26, 192, 46),
woosh.Token(woosh.OP, '(', 192, 46, 192, 47),
woosh.Token(woosh.NAME, 'type', 192, 47, 192, 51),
woosh.Token(woosh.OP, ',', 192, 51, 192, 52),
woosh.Token(woosh.NAME, 'strict', 192, 53, 192, 59),
woosh.Token(woosh.OP, ')', 192, 59, 192, 60),
woosh.Token(woosh.NEWLINE, '\r\n', 192, 60, 193, 0),
woosh.Token(woosh.NAME, 'if', 193, 8, 193, 10),
woosh.Token(woosh.NAME, 'not', 193, 11, 193, 14),
woosh.Token(woosh.NAME, 'extensions', 193, 15, 193, 25),
woosh.Token(woosh.OP, ':', 193, 25, 193, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 193, 26, 194, 0),
woosh.Token(woosh.INDENT, '            ', 194, 0, 194, 12),
woosh.Token(woosh.NAME, 'return', 194, 12, 194, 18),
woosh.Token(woosh.NAME, 'None', 194, 19, 194, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 194, 23, 195, 0),
woosh.Token(woosh.DEDENT, '        ', 195, 0, 195, 8),
woosh.Token(woosh.NAME, 'return', 195, 8, 195, 14),
woosh.Token(woosh.NAME, 'extensions', 195, 15, 195, 25),
woosh.Token(woosh.OP, '[', 195, 25, 195, 26),
woosh.Token(woosh.NUMBER, '0', 195, 26, 195, 27),
woosh.Token(woosh.OP, ']', 195, 27, 195, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 195, 28, 196, 0),
woosh.Token(woosh.DEDENT, '    ', 197, 0, 197, 4),
woosh.Token(woosh.NAME, 'def', 197, 4, 197, 7),
woosh.Token(woosh.NAME, 'read', 197, 8, 197, 12),
woosh.Token(woosh.OP, '(', 197, 12, 197, 13),
woosh.Token(woosh.NAME, 'self', 197, 13, 197, 17),
woosh.Token(woosh.OP, ',', 197, 17, 197, 18),
woosh.Token(woosh.NAME, 'filename', 197, 19, 197, 27),
woosh.Token(woosh.OP, ',', 197, 27, 197, 28),
woosh.Token(woosh.NAME, 'strict', 197, 29, 197, 35),
woosh.Token(woosh.OP, '=', 197, 35, 197, 36),
woosh.Token(woosh.NAME, 'True', 197, 36, 197, 40),
woosh.Token(woosh.OP, ')', 197, 40, 197, 41),
woosh.Token(woosh.OP, ':', 197, 41, 197, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 197, 42, 198, 0),
woosh.Token(woosh.INDENT, '        ', 198, 0, 198, 8),
woosh.Token(woosh.STRING, '"""\r\n        Read a single mime.types-format file, specified by pathname.\r\n\r\n        If strict is true, information will be added to\r\n        list of standard types, else to the list of non-standard\r\n        types.\r\n        """', 198, 8, 204, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 204, 11, 205, 0),
woosh.Token(woosh.NAME, 'with', 205, 8, 205, 12),
woosh.Token(woosh.NAME, 'open', 205, 13, 205, 17),
woosh.Token(woosh.OP, '(', 205, 17, 205, 18),
woosh.Token(woosh.NAME, 'filename', 205, 18, 205, 26),
woosh.Token(woosh.OP, ',', 205, 26, 205, 27),
woosh.Token(woosh.NAME, 'encoding', 205, 28, 205, 36),
woosh.Token(woosh.OP, '=', 205, 36, 205, 37),
woosh.Token(woosh.STRING, "'utf-8'", 205, 37, 205, 44),
woosh.Token(woosh.OP, ')', 205, 44, 205, 45),
woosh.Token(woosh.NAME, 'as', 205, 46, 205, 48),
woosh.Token(woosh.NAME, 'fp', 205, 49, 205, 51),
woosh.Token(woosh.OP, ':', 205, 51, 205, 52),
woosh.Token(woosh.NEWLINE, '\r\n', 205, 52, 206, 0),
woosh.Token(woosh.INDENT, '            ', 206, 0, 206, 12),
woosh.Token(woosh.NAME, 'self', 206, 12, 206, 16),
woosh.Token(woosh.OP, '.', 206, 16, 206, 17),
woosh.Token(woosh.NAME, 'readfp', 206, 17, 206, 23),
woosh.Token(woosh.OP, '(', 206, 23, 206, 24),
woosh.Token(woosh.NAME, 'fp', 206, 24, 206, 26),
woosh.Token(woosh.OP, ',', 206, 26, 206, 27),
woosh.Token(woosh.NAME, 'strict', 206, 28, 206, 34),
woosh.Token(woosh.OP, ')', 206, 34, 206, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 206, 35, 207, 0),
woosh.Token(woosh.DEDENT, '    ', 208, 0, 208, 4),
woosh.Token(woosh.DEDENT, '', 208, 4, 208, 4),
woosh.Token(woosh.NAME, 'def', 208, 4, 208, 7),
woosh.Token(woosh.NAME, 'readfp', 208, 8, 208, 14),
woosh.Token(woosh.OP, '(', 208, 14, 208, 15),
woosh.Token(woosh.NAME, 'self', 208, 15, 208, 19),
woosh.Token(woosh.OP, ',', 208, 19, 208, 20),
woosh.Token(woosh.NAME, 'fp', 208, 21, 208, 23),
woosh.Token(woosh.OP, ',', 208, 23, 208, 24),
woosh.Token(woosh.NAME, 'strict', 208, 25, 208, 31),
woosh.Token(woosh.OP, '=', 208, 31, 208, 32),
woosh.Token(woosh.NAME, 'True', 208, 32, 208, 36),
woosh.Token(woosh.OP, ')', 208, 36, 208, 37),
woosh.Token(woosh.OP, ':', 208, 37, 208, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 208, 38, 209, 0),
woosh.Token(woosh.INDENT, '        ', 209, 0, 209, 8),
woosh.Token(woosh.STRING, '"""\r\n        Read a single mime.types-format file.\r\n\r\n        If strict is true, information will be added to\r\n        list of standard types, else to the list of non-standard\r\n        types.\r\n        """', 209, 8, 215, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 215, 11, 216, 0),
woosh.Token(woosh.NAME, 'while', 216, 8, 216, 13),
woosh.Token(woosh.NUMBER, '1', 216, 14, 216, 15),
woosh.Token(woosh.OP, ':', 216, 15, 216, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 216, 16, 217, 0),
woosh.Token(woosh.INDENT, '            ', 217, 0, 217, 12),
woosh.Token(woosh.NAME, 'line', 217, 12, 217, 16),
woosh.Token(woosh.OP, '=', 217, 17, 217, 18),
woosh.Token(woosh.NAME, 'fp', 217, 19, 217, 21),
woosh.Token(woosh.OP, '.', 217, 21, 217, 22),
woosh.Token(woosh.NAME, 'readline', 217, 22, 217, 30),
woosh.Token(woosh.OP, '(', 217, 30, 217, 31),
woosh.Token(woosh.OP, ')', 217, 31, 217, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 217, 32, 218, 0),
woosh.Token(woosh.NAME, 'if', 218, 12, 218, 14),
woosh.Token(woosh.NAME, 'not', 218, 15, 218, 18),
woosh.Token(woosh.NAME, 'line', 218, 19, 218, 23),
woosh.Token(woosh.OP, ':', 218, 23, 218, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 218, 24, 219, 0),
woosh.Token(woosh.INDENT, '                ', 219, 0, 219, 16),
woosh.Token(woosh.NAME, 'break', 219, 16, 219, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 219, 21, 220, 0),
woosh.Token(woosh.DEDENT, '            ', 220, 0, 220, 12),
woosh.Token(woosh.NAME, 'words', 220, 12, 220, 17),
woosh.Token(woosh.OP, '=', 220, 18, 220, 19),
woosh.Token(woosh.NAME, 'line', 220, 20, 220, 24),
woosh.Token(woosh.OP, '.', 220, 24, 220, 25),
woosh.Token(woosh.NAME, 'split', 220, 25, 220, 30),
woosh.Token(woosh.OP, '(', 220, 30, 220, 31),
woosh.Token(woosh.OP, ')', 220, 31, 220, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 220, 32, 221, 0),
woosh.Token(woosh.NAME, 'for', 221, 12, 221, 15),
woosh.Token(woosh.NAME, 'i', 221, 16, 221, 17),
woosh.Token(woosh.NAME, 'in', 221, 18, 221, 20),
woosh.Token(woosh.NAME, 'range', 221, 21, 221, 26),
woosh.Token(woosh.OP, '(', 221, 26, 221, 27),
woosh.Token(woosh.NAME, 'len', 221, 27, 221, 30),
woosh.Token(woosh.OP, '(', 221, 30, 221, 31),
woosh.Token(woosh.NAME, 'words', 221, 31, 221, 36),
woosh.Token(woosh.OP, ')', 221, 36, 221, 37),
woosh.Token(woosh.OP, ')', 221, 37, 221, 38),
woosh.Token(woosh.OP, ':', 221, 38, 221, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 221, 39, 222, 0),
woosh.Token(woosh.INDENT, '                ', 222, 0, 222, 16),
woosh.Token(woosh.NAME, 'if', 222, 16, 222, 18),
woosh.Token(woosh.NAME, 'words', 222, 19, 222, 24),
woosh.Token(woosh.OP, '[', 222, 24, 222, 25),
woosh.Token(woosh.NAME, 'i', 222, 25, 222, 26),
woosh.Token(woosh.OP, ']', 222, 26, 222, 27),
woosh.Token(woosh.OP, '[', 222, 27, 222, 28),
woosh.Token(woosh.NUMBER, '0', 222, 28, 222, 29),
woosh.Token(woosh.OP, ']', 222, 29, 222, 30),
woosh.Token(woosh.OP, '==', 222, 31, 222, 33),
woosh.Token(woosh.STRING, "'#'", 222, 34, 222, 37),
woosh.Token(woosh.OP, ':', 222, 37, 222, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 222, 38, 223, 0),
woosh.Token(woosh.INDENT, '                    ', 223, 0, 223, 20),
woosh.Token(woosh.NAME, 'del', 223, 20, 223, 23),
woosh.Token(woosh.NAME, 'words', 223, 24, 223, 29),
woosh.Token(woosh.OP, '[', 223, 29, 223, 30),
woosh.Token(woosh.NAME, 'i', 223, 30, 223, 31),
woosh.Token(woosh.OP, ':', 223, 31, 223, 32),
woosh.Token(woosh.OP, ']', 223, 32, 223, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 223, 33, 224, 0),
woosh.Token(woosh.NAME, 'break', 224, 20, 224, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 224, 25, 225, 0),
woosh.Token(woosh.DEDENT, '            ', 225, 0, 225, 12),
woosh.Token(woosh.DEDENT, '', 225, 12, 225, 12),
woosh.Token(woosh.NAME, 'if', 225, 12, 225, 14),
woosh.Token(woosh.NAME, 'not', 225, 15, 225, 18),
woosh.Token(woosh.NAME, 'words', 225, 19, 225, 24),
woosh.Token(woosh.OP, ':', 225, 24, 225, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 225, 25, 226, 0),
woosh.Token(woosh.INDENT, '                ', 226, 0, 226, 16),
woosh.Token(woosh.NAME, 'continue', 226, 16, 226, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 226, 24, 227, 0),
woosh.Token(woosh.DEDENT, '            ', 227, 0, 227, 12),
woosh.Token(woosh.NAME, 'type', 227, 12, 227, 16),
woosh.Token(woosh.OP, ',', 227, 16, 227, 17),
woosh.Token(woosh.NAME, 'suffixes', 227, 18, 227, 26),
woosh.Token(woosh.OP, '=', 227, 27, 227, 28),
woosh.Token(woosh.NAME, 'words', 227, 29, 227, 34),
woosh.Token(woosh.OP, '[', 227, 34, 227, 35),
woosh.Token(woosh.NUMBER, '0', 227, 35, 227, 36),
woosh.Token(woosh.OP, ']', 227, 36, 227, 37),
woosh.Token(woosh.OP, ',', 227, 37, 227, 38),
woosh.Token(woosh.NAME, 'words', 227, 39, 227, 44),
woosh.Token(woosh.OP, '[', 227, 44, 227, 45),
woosh.Token(woosh.NUMBER, '1', 227, 45, 227, 46),
woosh.Token(woosh.OP, ':', 227, 46, 227, 47),
woosh.Token(woosh.OP, ']', 227, 47, 227, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 227, 48, 228, 0),
woosh.Token(woosh.NAME, 'for', 228, 12, 228, 15),
woosh.Token(woosh.NAME, 'suff', 228, 16, 228, 20),
woosh.Token(woosh.NAME, 'in', 228, 21, 228, 23),
woosh.Token(woosh.NAME, 'suffixes', 228, 24, 228, 32),
woosh.Token(woosh.OP, ':', 228, 32, 228, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 228, 33, 229, 0),
woosh.Token(woosh.INDENT, '                ', 229, 0, 229, 16),
woosh.Token(woosh.NAME, 'self', 229, 16, 229, 20),
woosh.Token(woosh.OP, '.', 229, 20, 229, 21),
woosh.Token(woosh.NAME, 'add_type', 229, 21, 229, 29),
woosh.Token(woosh.OP, '(', 229, 29, 229, 30),
woosh.Token(woosh.NAME, 'type', 229, 30, 229, 34),
woosh.Token(woosh.OP, ',', 229, 34, 229, 35),
woosh.Token(woosh.STRING, "'.'", 229, 36, 229, 39),
woosh.Token(woosh.OP, '+', 229, 40, 229, 41),
woosh.Token(woosh.NAME, 'suff', 229, 42, 229, 46),
woosh.Token(woosh.OP, ',', 229, 46, 229, 47),
woosh.Token(woosh.NAME, 'strict', 229, 48, 229, 54),
woosh.Token(woosh.OP, ')', 229, 54, 229, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 229, 55, 230, 0),
woosh.Token(woosh.DEDENT, '    ', 231, 0, 231, 4),
woosh.Token(woosh.DEDENT, '', 231, 4, 231, 4),
woosh.Token(woosh.DEDENT, '', 231, 4, 231, 4),
woosh.Token(woosh.NAME, 'def', 231, 4, 231, 7),
woosh.Token(woosh.NAME, 'read_windows_registry', 231, 8, 231, 29),
woosh.Token(woosh.OP, '(', 231, 29, 231, 30),
woosh.Token(woosh.NAME, 'self', 231, 30, 231, 34),
woosh.Token(woosh.OP, ',', 231, 34, 231, 35),
woosh.Token(woosh.NAME, 'strict', 231, 36, 231, 42),
woosh.Token(woosh.OP, '=', 231, 42, 231, 43),
woosh.Token(woosh.NAME, 'True', 231, 43, 231, 47),
woosh.Token(woosh.OP, ')', 231, 47, 231, 48),
woosh.Token(woosh.OP, ':', 231, 48, 231, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 231, 49, 232, 0),
woosh.Token(woosh.INDENT, '        ', 232, 0, 232, 8),
woosh.Token(woosh.STRING, '"""\r\n        Load the MIME types database from Windows registry.\r\n\r\n        If strict is true, information will be added to\r\n        list of standard types, else to the list of non-standard\r\n        types.\r\n        """', 232, 8, 238, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 238, 11, 239, 0),
woosh.Token(woosh.COMMENT, '# Windows only', 240, 8, 240, 22),
woosh.Token(woosh.NAME, 'if', 241, 8, 241, 10),
woosh.Token(woosh.NAME, 'not', 241, 11, 241, 14),
woosh.Token(woosh.NAME, '_winreg', 241, 15, 241, 22),
woosh.Token(woosh.OP, ':', 241, 22, 241, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 241, 23, 242, 0),
woosh.Token(woosh.INDENT, '            ', 242, 0, 242, 12),
woosh.Token(woosh.NAME, 'return', 242, 12, 242, 18),
woosh.Token(woosh.NEWLINE, '\r\n', 242, 18, 243, 0),
woosh.Token(woosh.DEDENT, '        ', 244, 0, 244, 8),
woosh.Token(woosh.NAME, 'def', 244, 8, 244, 11),
woosh.Token(woosh.NAME, 'enum_types', 244, 12, 244, 22),
woosh.Token(woosh.OP, '(', 244, 22, 244, 23),
woosh.Token(woosh.NAME, 'mimedb', 244, 23, 244, 29),
woosh.Token(woosh.OP, ')', 244, 29, 244, 30),
woosh.Token(woosh.OP, ':', 244, 30, 244, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 244, 31, 245, 0),
woosh.Token(woosh.INDENT, '            ', 245, 0, 245, 12),
woosh.Token(woosh.NAME, 'i', 245, 12, 245, 13),
woosh.Token(woosh.OP, '=', 245, 14, 245, 15),
woosh.Token(woosh.NUMBER, '0', 245, 16, 245, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 245, 17, 246, 0),
woosh.Token(woosh.NAME, 'while', 246, 12, 246, 17),
woosh.Token(woosh.NAME, 'True', 246, 18, 246, 22),
woosh.Token(woosh.OP, ':', 246, 22, 246, 23),
woosh.Token(woosh.NEWLINE, '\r\n', 246, 23, 247, 0),
woosh.Token(woosh.INDENT, '                ', 247, 0, 247, 16),
woosh.Token(woosh.NAME, 'try', 247, 16, 247, 19),
woosh.Token(woosh.OP, ':', 247, 19, 247, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 247, 20, 248, 0),
woosh.Token(woosh.INDENT, '                    ', 248, 0, 248, 20),
woosh.Token(woosh.NAME, 'ctype', 248, 20, 248, 25),
woosh.Token(woosh.OP, '=', 248, 26, 248, 27),
woosh.Token(woosh.NAME, '_winreg', 248, 28, 248, 35),
woosh.Token(woosh.OP, '.', 248, 35, 248, 36),
woosh.Token(woosh.NAME, 'EnumKey', 248, 36, 248, 43),
woosh.Token(woosh.OP, '(', 248, 43, 248, 44),
woosh.Token(woosh.NAME, 'mimedb', 248, 44, 248, 50),
woosh.Token(woosh.OP, ',', 248, 50, 248, 51),
woosh.Token(woosh.NAME, 'i', 248, 52, 248, 53),
woosh.Token(woosh.OP, ')', 248, 53, 248, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 248, 54, 249, 0),
woosh.Token(woosh.DEDENT, '                ', 249, 0, 249, 16),
woosh.Token(woosh.NAME, 'except', 249, 16, 249, 22),
woosh.Token(woosh.NAME, 'OSError', 249, 23, 249, 30),
woosh.Token(woosh.OP, ':', 249, 30, 249, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 249, 31, 250, 0),
woosh.Token(woosh.INDENT, '                    ', 250, 0, 250, 20),
woosh.Token(woosh.NAME, 'break', 250, 20, 250, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 250, 25, 251, 0),
woosh.Token(woosh.DEDENT, '                ', 251, 0, 251, 16),
woosh.Token(woosh.NAME, 'else', 251, 16, 251, 20),
woosh.Token(woosh.OP, ':', 251, 20, 251, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 251, 21, 252, 0),
woosh.Token(woosh.INDENT, '                    ', 252, 0, 252, 20),
woosh.Token(woosh.NAME, 'if', 252, 20, 252, 22),
woosh.Token(woosh.STRING, "'\\0'", 252, 23, 252, 27),
woosh.Token(woosh.NAME, 'not', 252, 28, 252, 31),
woosh.Token(woosh.NAME, 'in', 252, 32, 252, 34),
woosh.Token(woosh.NAME, 'ctype', 252, 35, 252, 40),
woosh.Token(woosh.OP, ':', 252, 40, 252, 41),
woosh.Token(woosh.NEWLINE, '\r\n', 252, 41, 253, 0),
woosh.Token(woosh.INDENT, '                        ', 253, 0, 253, 24),
woosh.Token(woosh.NAME, 'yield', 253, 24, 253, 29),
woosh.Token(woosh.NAME, 'ctype', 253, 30, 253, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 253, 35, 254, 0),
woosh.Token(woosh.DEDENT, '                ', 254, 0, 254, 16),
woosh.Token(woosh.DEDENT, '', 254, 16, 254, 16),
woosh.Token(woosh.NAME, 'i', 254, 16, 254, 17),
woosh.Token(woosh.OP, '+=', 254, 18, 254, 20),
woosh.Token(woosh.NUMBER, '1', 254, 21, 254, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 254, 22, 255, 0),
woosh.Token(woosh.DEDENT, '        ', 256, 0, 256, 8),
woosh.Token(woosh.DEDENT, '', 256, 8, 256, 8),
woosh.Token(woosh.NAME, 'with', 256, 8, 256, 12),
woosh.Token(woosh.NAME, '_winreg', 256, 13, 256, 20),
woosh.Token(woosh.OP, '.', 256, 20, 256, 21),
woosh.Token(woosh.NAME, 'OpenKey', 256, 21, 256, 28),
woosh.Token(woosh.OP, '(', 256, 28, 256, 29),
woosh.Token(woosh.NAME, '_winreg', 256, 29, 256, 36),
woosh.Token(woosh.OP, '.', 256, 36, 256, 37),
woosh.Token(woosh.NAME, 'HKEY_CLASSES_ROOT', 256, 37, 256, 54),
woosh.Token(woosh.OP, ',', 256, 54, 256, 55),
woosh.Token(woosh.STRING, "''", 256, 56, 256, 58),
woosh.Token(woosh.OP, ')', 256, 58, 256, 59),
woosh.Token(woosh.NAME, 'as', 256, 60, 256, 62),
woosh.Token(woosh.NAME, 'hkcr', 256, 63, 256, 67),
woosh.Token(woosh.OP, ':', 256, 67, 256, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 256, 68, 257, 0),
woosh.Token(woosh.INDENT, '            ', 257, 0, 257, 12),
woosh.Token(woosh.NAME, 'for', 257, 12, 257, 15),
woosh.Token(woosh.NAME, 'subkeyname', 257, 16, 257, 26),
woosh.Token(woosh.NAME, 'in', 257, 27, 257, 29),
woosh.Token(woosh.NAME, 'enum_types', 257, 30, 257, 40),
woosh.Token(woosh.OP, '(', 257, 40, 257, 41),
woosh.Token(woosh.NAME, 'hkcr', 257, 41, 257, 45),
woosh.Token(woosh.OP, ')', 257, 45, 257, 46),
woosh.Token(woosh.OP, ':', 257, 46, 257, 47),
woosh.Token(woosh.NEWLINE, '\r\n', 257, 47, 258, 0),
woosh.Token(woosh.INDENT, '                ', 258, 0, 258, 16),
woosh.Token(woosh.NAME, 'try', 258, 16, 258, 19),
woosh.Token(woosh.OP, ':', 258, 19, 258, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 258, 20, 259, 0),
woosh.Token(woosh.INDENT, '                    ', 259, 0, 259, 20),
woosh.Token(woosh.NAME, 'with', 259, 20, 259, 24),
woosh.Token(woosh.NAME, '_winreg', 259, 25, 259, 32),
woosh.Token(woosh.OP, '.', 259, 32, 259, 33),
woosh.Token(woosh.NAME, 'OpenKey', 259, 33, 259, 40),
woosh.Token(woosh.OP, '(', 259, 40, 259, 41),
woosh.Token(woosh.NAME, 'hkcr', 259, 41, 259, 45),
woosh.Token(woosh.OP, ',', 259, 45, 259, 46),
woosh.Token(woosh.NAME, 'subkeyname', 259, 47, 259, 57),
woosh.Token(woosh.OP, ')', 259, 57, 259, 58),
woosh.Token(woosh.NAME, 'as', 259, 59, 259, 61),
woosh.Token(woosh.NAME, 'subkey', 259, 62, 259, 68),
woosh.Token(woosh.OP, ':', 259, 68, 259, 69),
woosh.Token(woosh.NEWLINE, '\r\n', 259, 69, 260, 0),
woosh.Token(woosh.COMMENT, '# Only check file extensions', 260, 24, 260, 52),
woosh.Token(woosh.INDENT, '                        ', 261, 0, 261, 24),
woosh.Token(woosh.NAME, 'if', 261, 24, 261, 26),
woosh.Token(woosh.NAME, 'not', 261, 27, 261, 30),
woosh.Token(woosh.NAME, 'subkeyname', 261, 31, 261, 41),
woosh.Token(woosh.OP, '.', 261, 41, 261, 42),
woosh.Token(woosh.NAME, 'startswith', 261, 42, 261, 52),
woosh.Token(woosh.OP, '(', 261, 52, 261, 53),
woosh.Token(woosh.STRING, '"."', 261, 53, 261, 56),
woosh.Token(woosh.OP, ')', 261, 56, 261, 57),
woosh.Token(woosh.OP, ':', 261, 57, 261, 58),
woosh.Token(woosh.NEWLINE, '\r\n', 261, 58, 262, 0),
woosh.Token(woosh.INDENT, '                            ', 262, 0, 262, 28),
woosh.Token(woosh.NAME, 'continue', 262, 28, 262, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 262, 36, 263, 0),
woosh.Token(woosh.COMMENT, "# raises OSError if no 'Content Type' value", 263, 24, 263, 67),
woosh.Token(woosh.DEDENT, '                        ', 264, 0, 264, 24),
woosh.Token(woosh.NAME, 'mimetype', 264, 24, 264, 32),
woosh.Token(woosh.OP, ',', 264, 32, 264, 33),
woosh.Token(woosh.NAME, 'datatype', 264, 34, 264, 42),
woosh.Token(woosh.OP, '=', 264, 43, 264, 44),
woosh.Token(woosh.NAME, '_winreg', 264, 45, 264, 52),
woosh.Token(woosh.OP, '.', 264, 52, 264, 53),
woosh.Token(woosh.NAME, 'QueryValueEx', 264, 53, 264, 65),
woosh.Token(woosh.OP, '(', 264, 65, 264, 66),
woosh.Token(woosh.NAME, 'subkey', 265, 28, 265, 34),
woosh.Token(woosh.OP, ',', 265, 34, 265, 35),
woosh.Token(woosh.STRING, "'Content Type'", 265, 36, 265, 50),
woosh.Token(woosh.OP, ')', 265, 50, 265, 51),
woosh.Token(woosh.NEWLINE, '\r\n', 265, 51, 266, 0),
woosh.Token(woosh.NAME, 'if', 266, 24, 266, 26),
woosh.Token(woosh.NAME, 'datatype', 266, 27, 266, 35),
woosh.Token(woosh.OP, '!=', 266, 36, 266, 38),
woosh.Token(woosh.NAME, '_winreg', 266, 39, 266, 46),
woosh.Token(woosh.OP, '.', 266, 46, 266, 47),
woosh.Token(woosh.NAME, 'REG_SZ', 266, 47, 266, 53),
woosh.Token(woosh.OP, ':', 266, 53, 266, 54),
woosh.Token(woosh.NEWLINE, '\r\n', 266, 54, 267, 0),
woosh.Token(woosh.INDENT, '                            ', 267, 0, 267, 28),
woosh.Token(woosh.NAME, 'continue', 267, 28, 267, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 267, 36, 268, 0),
woosh.Token(woosh.DEDENT, '                        ', 268, 0, 268, 24),
woosh.Token(woosh.NAME, 'self', 268, 24, 268, 28),
woosh.Token(woosh.OP, '.', 268, 28, 268, 29),
woosh.Token(woosh.NAME, 'add_type', 268, 29, 268, 37),
woosh.Token(woosh.OP, '(', 268, 37, 268, 38),
woosh.Token(woosh.NAME, 'mimetype', 268, 38, 268, 46),
woosh.Token(woosh.OP, ',', 268, 46, 268, 47),
woosh.Token(woosh.NAME, 'subkeyname', 268, 48, 268, 58),
woosh.Token(woosh.OP, ',', 268, 58, 268, 59),
woosh.Token(woosh.NAME, 'strict', 268, 60, 268, 66),
woosh.Token(woosh.OP, ')', 268, 66, 268, 67),
woosh.Token(woosh.NEWLINE, '\r\n', 268, 67, 269, 0),
woosh.Token(woosh.DEDENT, '                ', 269, 0, 269, 16),
woosh.Token(woosh.DEDENT, '', 269, 16, 269, 16),
woosh.Token(woosh.NAME, 'except', 269, 16, 269, 22),
woosh.Token(woosh.NAME, 'OSError', 269, 23, 269, 30),
woosh.Token(woosh.OP, ':', 269, 30, 269, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 269, 31, 270, 0),
woosh.Token(woosh.INDENT, '                    ', 270, 0, 270, 20),
woosh.Token(woosh.NAME, 'continue', 270, 20, 270, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 270, 28, 271, 0),
woosh.Token(woosh.DEDENT, '', 272, 0, 272, 0),
woosh.Token(woosh.DEDENT, '', 272, 0, 272, 0),
woosh.Token(woosh.DEDENT, '', 272, 0, 272, 0),
woosh.Token(woosh.DEDENT, '', 272, 0, 272, 0),
woosh.Token(woosh.DEDENT, '', 272, 0, 272, 0),
woosh.Token(woosh.NAME, 'def', 272, 0, 272, 3),
woosh.Token(woosh.NAME, 'guess_type', 272, 4, 272, 14),
woosh.Token(woosh.OP, '(', 272, 14, 272, 15),
woosh.Token(woosh.NAME, 'url', 272, 15, 272, 18),
woosh.Token(woosh.OP, ',', 272, 18, 272, 19),
woosh.Token(woosh.NAME, 'strict', 272, 20, 272, 26),
woosh.Token(woosh.OP, '=', 272, 26, 272, 27),
woosh.Token(woosh.NAME, 'True', 272, 27, 272, 31),
woosh.Token(woosh.OP, ')', 272, 31, 272, 32),
woosh.Token(woosh.OP, ':', 272, 32, 272, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 272, 33, 273, 0),
woosh.Token(woosh.INDENT, '    ', 273, 0, 273, 4),
woosh.Token(woosh.STRING, '"""Guess the type of a file based on its URL.\r\n\r\n    Return value is a tuple (type, encoding) where type is None if the\r\n    type can\'t be guessed (no or unknown suffix) or a string of the\r\n    form type/subtype, usable for a MIME Content-type header; and\r\n    encoding is None for no encoding or the name of the program used\r\n    to encode (e.g. compress or gzip).  The mappings are table\r\n    driven.  Encoding suffixes are case sensitive; type suffixes are\r\n    first tried case sensitive, then case insensitive.\r\n\r\n    The suffixes .tgz, .taz and .tz (case sensitive!) are all mapped\r\n    to ".tar.gz".  (This is table-driven too, using the dictionary\r\n    suffix_map).\r\n\r\n    Optional `strict\' argument when false adds a bunch of commonly found, but\r\n    non-standard types.\r\n    """', 273, 4, 289, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 289, 7, 290, 0),
woosh.Token(woosh.NAME, 'if', 290, 4, 290, 6),
woosh.Token(woosh.NAME, '_db', 290, 7, 290, 10),
woosh.Token(woosh.NAME, 'is', 290, 11, 290, 13),
woosh.Token(woosh.NAME, 'None', 290, 14, 290, 18),
woosh.Token(woosh.OP, ':', 290, 18, 290, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 290, 19, 291, 0),
woosh.Token(woosh.INDENT, '        ', 291, 0, 291, 8),
woosh.Token(woosh.NAME, 'init', 291, 8, 291, 12),
woosh.Token(woosh.OP, '(', 291, 12, 291, 13),
woosh.Token(woosh.OP, ')', 291, 13, 291, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 291, 14, 292, 0),
woosh.Token(woosh.DEDENT, '    ', 292, 0, 292, 4),
woosh.Token(woosh.NAME, 'return', 292, 4, 292, 10),
woosh.Token(woosh.NAME, '_db', 292, 11, 292, 14),
woosh.Token(woosh.OP, '.', 292, 14, 292, 15),
woosh.Token(woosh.NAME, 'guess_type', 292, 15, 292, 25),
woosh.Token(woosh.OP, '(', 292, 25, 292, 26),
woosh.Token(woosh.NAME, 'url', 292, 26, 292, 29),
woosh.Token(woosh.OP, ',', 292, 29, 292, 30),
woosh.Token(woosh.NAME, 'strict', 292, 31, 292, 37),
woosh.Token(woosh.OP, ')', 292, 37, 292, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 292, 38, 293, 0),
woosh.Token(woosh.DEDENT, '', 295, 0, 295, 0),
woosh.Token(woosh.NAME, 'def', 295, 0, 295, 3),
woosh.Token(woosh.NAME, 'guess_all_extensions', 295, 4, 295, 24),
woosh.Token(woosh.OP, '(', 295, 24, 295, 25),
woosh.Token(woosh.NAME, 'type', 295, 25, 295, 29),
woosh.Token(woosh.OP, ',', 295, 29, 295, 30),
woosh.Token(woosh.NAME, 'strict', 295, 31, 295, 37),
woosh.Token(woosh.OP, '=', 295, 37, 295, 38),
woosh.Token(woosh.NAME, 'True', 295, 38, 295, 42),
woosh.Token(woosh.OP, ')', 295, 42, 295, 43),
woosh.Token(woosh.OP, ':', 295, 43, 295, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 295, 44, 296, 0),
woosh.Token(woosh.INDENT, '    ', 296, 0, 296, 4),
woosh.Token(woosh.STRING, '"""Guess the extensions for a file based on its MIME type.\r\n\r\n    Return value is a list of strings giving the possible filename\r\n    extensions, including the leading dot (\'.\').  The extension is not\r\n    guaranteed to have been associated with any particular data\r\n    stream, but would be mapped to the MIME type `type\' by\r\n    guess_type().  If no extension can be guessed for `type\', None\r\n    is returned.\r\n\r\n    Optional `strict\' argument when false adds a bunch of commonly found,\r\n    but non-standard types.\r\n    """', 296, 4, 307, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 307, 7, 308, 0),
woosh.Token(woosh.NAME, 'if', 308, 4, 308, 6),
woosh.Token(woosh.NAME, '_db', 308, 7, 308, 10),
woosh.Token(woosh.NAME, 'is', 308, 11, 308, 13),
woosh.Token(woosh.NAME, 'None', 308, 14, 308, 18),
woosh.Token(woosh.OP, ':', 308, 18, 308, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 308, 19, 309, 0),
woosh.Token(woosh.INDENT, '        ', 309, 0, 309, 8),
woosh.Token(woosh.NAME, 'init', 309, 8, 309, 12),
woosh.Token(woosh.OP, '(', 309, 12, 309, 13),
woosh.Token(woosh.OP, ')', 309, 13, 309, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 309, 14, 310, 0),
woosh.Token(woosh.DEDENT, '    ', 310, 0, 310, 4),
woosh.Token(woosh.NAME, 'return', 310, 4, 310, 10),
woosh.Token(woosh.NAME, '_db', 310, 11, 310, 14),
woosh.Token(woosh.OP, '.', 310, 14, 310, 15),
woosh.Token(woosh.NAME, 'guess_all_extensions', 310, 15, 310, 35),
woosh.Token(woosh.OP, '(', 310, 35, 310, 36),
woosh.Token(woosh.NAME, 'type', 310, 36, 310, 40),
woosh.Token(woosh.OP, ',', 310, 40, 310, 41),
woosh.Token(woosh.NAME, 'strict', 310, 42, 310, 48),
woosh.Token(woosh.OP, ')', 310, 48, 310, 49),
woosh.Token(woosh.NEWLINE, '\r\n', 310, 49, 311, 0),
woosh.Token(woosh.DEDENT, '', 312, 0, 312, 0),
woosh.Token(woosh.NAME, 'def', 312, 0, 312, 3),
woosh.Token(woosh.NAME, 'guess_extension', 312, 4, 312, 19),
woosh.Token(woosh.OP, '(', 312, 19, 312, 20),
woosh.Token(woosh.NAME, 'type', 312, 20, 312, 24),
woosh.Token(woosh.OP, ',', 312, 24, 312, 25),
woosh.Token(woosh.NAME, 'strict', 312, 26, 312, 32),
woosh.Token(woosh.OP, '=', 312, 32, 312, 33),
woosh.Token(woosh.NAME, 'True', 312, 33, 312, 37),
woosh.Token(woosh.OP, ')', 312, 37, 312, 38),
woosh.Token(woosh.OP, ':', 312, 38, 312, 39),
woosh.Token(woosh.NEWLINE, '\r\n', 312, 39, 313, 0),
woosh.Token(woosh.INDENT, '    ', 313, 0, 313, 4),
woosh.Token(woosh.STRING, '"""Guess the extension for a file based on its MIME type.\r\n\r\n    Return value is a string giving a filename extension, including the\r\n    leading dot (\'.\').  The extension is not guaranteed to have been\r\n    associated with any particular data stream, but would be mapped to the\r\n    MIME type `type\' by guess_type().  If no extension can be guessed for\r\n    `type\', None is returned.\r\n\r\n    Optional `strict\' argument when false adds a bunch of commonly found,\r\n    but non-standard types.\r\n    """', 313, 4, 323, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 323, 7, 324, 0),
woosh.Token(woosh.NAME, 'if', 324, 4, 324, 6),
woosh.Token(woosh.NAME, '_db', 324, 7, 324, 10),
woosh.Token(woosh.NAME, 'is', 324, 11, 324, 13),
woosh.Token(woosh.NAME, 'None', 324, 14, 324, 18),
woosh.Token(woosh.OP, ':', 324, 18, 324, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 324, 19, 325, 0),
woosh.Token(woosh.INDENT, '        ', 325, 0, 325, 8),
woosh.Token(woosh.NAME, 'init', 325, 8, 325, 12),
woosh.Token(woosh.OP, '(', 325, 12, 325, 13),
woosh.Token(woosh.OP, ')', 325, 13, 325, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 325, 14, 326, 0),
woosh.Token(woosh.DEDENT, '    ', 326, 0, 326, 4),
woosh.Token(woosh.NAME, 'return', 326, 4, 326, 10),
woosh.Token(woosh.NAME, '_db', 326, 11, 326, 14),
woosh.Token(woosh.OP, '.', 326, 14, 326, 15),
woosh.Token(woosh.NAME, 'guess_extension', 326, 15, 326, 30),
woosh.Token(woosh.OP, '(', 326, 30, 326, 31),
woosh.Token(woosh.NAME, 'type', 326, 31, 326, 35),
woosh.Token(woosh.OP, ',', 326, 35, 326, 36),
woosh.Token(woosh.NAME, 'strict', 326, 37, 326, 43),
woosh.Token(woosh.OP, ')', 326, 43, 326, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 326, 44, 327, 0),
woosh.Token(woosh.DEDENT, '', 328, 0, 328, 0),
woosh.Token(woosh.NAME, 'def', 328, 0, 328, 3),
woosh.Token(woosh.NAME, 'add_type', 328, 4, 328, 12),
woosh.Token(woosh.OP, '(', 328, 12, 328, 13),
woosh.Token(woosh.NAME, 'type', 328, 13, 328, 17),
woosh.Token(woosh.OP, ',', 328, 17, 328, 18),
woosh.Token(woosh.NAME, 'ext', 328, 19, 328, 22),
woosh.Token(woosh.OP, ',', 328, 22, 328, 23),
woosh.Token(woosh.NAME, 'strict', 328, 24, 328, 30),
woosh.Token(woosh.OP, '=', 328, 30, 328, 31),
woosh.Token(woosh.NAME, 'True', 328, 31, 328, 35),
woosh.Token(woosh.OP, ')', 328, 35, 328, 36),
woosh.Token(woosh.OP, ':', 328, 36, 328, 37),
woosh.Token(woosh.NEWLINE, '\r\n', 328, 37, 329, 0),
woosh.Token(woosh.INDENT, '    ', 329, 0, 329, 4),
woosh.Token(woosh.STRING, '"""Add a mapping between a type and an extension.\r\n\r\n    When the extension is already known, the new\r\n    type will replace the old one. When the type\r\n    is already known the extension will be added\r\n    to the list of known extensions.\r\n\r\n    If strict is true, information will be added to\r\n    list of standard types, else to the list of non-standard\r\n    types.\r\n    """', 329, 4, 339, 7),
woosh.Token(woosh.NEWLINE, '\r\n', 339, 7, 340, 0),
woosh.Token(woosh.NAME, 'if', 340, 4, 340, 6),
woosh.Token(woosh.NAME, '_db', 340, 7, 340, 10),
woosh.Token(woosh.NAME, 'is', 340, 11, 340, 13),
woosh.Token(woosh.NAME, 'None', 340, 14, 340, 18),
woosh.Token(woosh.OP, ':', 340, 18, 340, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 340, 19, 341, 0),
woosh.Token(woosh.INDENT, '        ', 341, 0, 341, 8),
woosh.Token(woosh.NAME, 'init', 341, 8, 341, 12),
woosh.Token(woosh.OP, '(', 341, 12, 341, 13),
woosh.Token(woosh.OP, ')', 341, 13, 341, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 341, 14, 342, 0),
woosh.Token(woosh.DEDENT, '    ', 342, 0, 342, 4),
woosh.Token(woosh.NAME, 'return', 342, 4, 342, 10),
woosh.Token(woosh.NAME, '_db', 342, 11, 342, 14),
woosh.Token(woosh.OP, '.', 342, 14, 342, 15),
woosh.Token(woosh.NAME, 'add_type', 342, 15, 342, 23),
woosh.Token(woosh.OP, '(', 342, 23, 342, 24),
woosh.Token(woosh.NAME, 'type', 342, 24, 342, 28),
woosh.Token(woosh.OP, ',', 342, 28, 342, 29),
woosh.Token(woosh.NAME, 'ext', 342, 30, 342, 33),
woosh.Token(woosh.OP, ',', 342, 33, 342, 34),
woosh.Token(woosh.NAME, 'strict', 342, 35, 342, 41),
woosh.Token(woosh.OP, ')', 342, 41, 342, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 342, 42, 343, 0),
woosh.Token(woosh.DEDENT, '', 345, 0, 345, 0),
woosh.Token(woosh.NAME, 'def', 345, 0, 345, 3),
woosh.Token(woosh.NAME, 'init', 345, 4, 345, 8),
woosh.Token(woosh.OP, '(', 345, 8, 345, 9),
woosh.Token(woosh.NAME, 'files', 345, 9, 345, 14),
woosh.Token(woosh.OP, '=', 345, 14, 345, 15),
woosh.Token(woosh.NAME, 'None', 345, 15, 345, 19),
woosh.Token(woosh.OP, ')', 345, 19, 345, 20),
woosh.Token(woosh.OP, ':', 345, 20, 345, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 345, 21, 346, 0),
woosh.Token(woosh.INDENT, '    ', 346, 0, 346, 4),
woosh.Token(woosh.NAME, 'global', 346, 4, 346, 10),
woosh.Token(woosh.NAME, 'suffix_map', 346, 11, 346, 21),
woosh.Token(woosh.OP, ',', 346, 21, 346, 22),
woosh.Token(woosh.NAME, 'types_map', 346, 23, 346, 32),
woosh.Token(woosh.OP, ',', 346, 32, 346, 33),
woosh.Token(woosh.NAME, 'encodings_map', 346, 34, 346, 47),
woosh.Token(woosh.OP, ',', 346, 47, 346, 48),
woosh.Token(woosh.NAME, 'common_types', 346, 49, 346, 61),
woosh.Token(woosh.NEWLINE, '\r\n', 346, 61, 347, 0),
woosh.Token(woosh.NAME, 'global', 347, 4, 347, 10),
woosh.Token(woosh.NAME, 'inited', 347, 11, 347, 17),
woosh.Token(woosh.OP, ',', 347, 17, 347, 18),
woosh.Token(woosh.NAME, '_db', 347, 19, 347, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 347, 22, 348, 0),
woosh.Token(woosh.NAME, 'inited', 348, 4, 348, 10),
woosh.Token(woosh.OP, '=', 348, 11, 348, 12),
woosh.Token(woosh.NAME, 'True', 348, 13, 348, 17),
woosh.Token(woosh.COMMENT, "# so that MimeTypes.__init__() doesn't call us again", 348, 21, 348, 73),
woosh.Token(woosh.NEWLINE, '\r\n', 348, 73, 349, 0),
woosh.Token(woosh.NAME, 'if', 350, 4, 350, 6),
woosh.Token(woosh.NAME, 'files', 350, 7, 350, 12),
woosh.Token(woosh.NAME, 'is', 350, 13, 350, 15),
woosh.Token(woosh.NAME, 'None', 350, 16, 350, 20),
woosh.Token(woosh.NAME, 'or', 350, 21, 350, 23),
woosh.Token(woosh.NAME, '_db', 350, 24, 350, 27),
woosh.Token(woosh.NAME, 'is', 350, 28, 350, 30),
woosh.Token(woosh.NAME, 'None', 350, 31, 350, 35),
woosh.Token(woosh.OP, ':', 350, 35, 350, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 350, 36, 351, 0),
woosh.Token(woosh.INDENT, '        ', 351, 0, 351, 8),
woosh.Token(woosh.NAME, 'db', 351, 8, 351, 10),
woosh.Token(woosh.OP, '=', 351, 11, 351, 12),
woosh.Token(woosh.NAME, 'MimeTypes', 351, 13, 351, 22),
woosh.Token(woosh.OP, '(', 351, 22, 351, 23),
woosh.Token(woosh.OP, ')', 351, 23, 351, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 351, 24, 352, 0),
woosh.Token(woosh.NAME, 'if', 352, 8, 352, 10),
woosh.Token(woosh.NAME, '_winreg', 352, 11, 352, 18),
woosh.Token(woosh.OP, ':', 352, 18, 352, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 352, 19, 353, 0),
woosh.Token(woosh.INDENT, '            ', 353, 0, 353, 12),
woosh.Token(woosh.NAME, 'db', 353, 12, 353, 14),
woosh.Token(woosh.OP, '.', 353, 14, 353, 15),
woosh.Token(woosh.NAME, 'read_windows_registry', 353, 15, 353, 36),
woosh.Token(woosh.OP, '(', 353, 36, 353, 37),
woosh.Token(woosh.OP, ')', 353, 37, 353, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 353, 38, 354, 0),
woosh.Token(woosh.DEDENT, '        ', 355, 0, 355, 8),
woosh.Token(woosh.NAME, 'if', 355, 8, 355, 10),
woosh.Token(woosh.NAME, 'files', 355, 11, 355, 16),
woosh.Token(woosh.NAME, 'is', 355, 17, 355, 19),
woosh.Token(woosh.NAME, 'None', 355, 20, 355, 24),
woosh.Token(woosh.OP, ':', 355, 24, 355, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 355, 25, 356, 0),
woosh.Token(woosh.INDENT, '            ', 356, 0, 356, 12),
woosh.Token(woosh.NAME, 'files', 356, 12, 356, 17),
woosh.Token(woosh.OP, '=', 356, 18, 356, 19),
woosh.Token(woosh.NAME, 'knownfiles', 356, 20, 356, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 356, 30, 357, 0),
woosh.Token(woosh.DEDENT, '        ', 357, 0, 357, 8),
woosh.Token(woosh.NAME, 'else', 357, 8, 357, 12),
woosh.Token(woosh.OP, ':', 357, 12, 357, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 357, 13, 358, 0),
woosh.Token(woosh.INDENT, '            ', 358, 0, 358, 12),
woosh.Token(woosh.NAME, 'files', 358, 12, 358, 17),
woosh.Token(woosh.OP, '=', 358, 18, 358, 19),
woosh.Token(woosh.NAME, 'knownfiles', 358, 20, 358, 30),
woosh.Token(woosh.OP, '+', 358, 31, 358, 32),
woosh.Token(woosh.NAME, 'list', 358, 33, 358, 37),
woosh.Token(woosh.OP, '(', 358, 37, 358, 38),
woosh.Token(woosh.NAME, 'files', 358, 38, 358, 43),
woosh.Token(woosh.OP, ')', 358, 43, 358, 44),
woosh.Token(woosh.NEWLINE, '\r\n', 358, 44, 359, 0),
woosh.Token(woosh.DEDENT, '    ', 359, 0, 359, 4),
woosh.Token(woosh.DEDENT, '', 359, 4, 359, 4),
woosh.Token(woosh.NAME, 'else', 359, 4, 359, 8),
woosh.Token(woosh.OP, ':', 359, 8, 359, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 359, 9, 360, 0),
woosh.Token(woosh.INDENT, '        ', 360, 0, 360, 8),
woosh.Token(woosh.NAME, 'db', 360, 8, 360, 10),
woosh.Token(woosh.OP, '=', 360, 11, 360, 12),
woosh.Token(woosh.NAME, '_db', 360, 13, 360, 16),
woosh.Token(woosh.NEWLINE, '\r\n', 360, 16, 361, 0),
woosh.Token(woosh.DEDENT, '    ', 362, 0, 362, 4),
woosh.Token(woosh.NAME, 'for', 362, 4, 362, 7),
woosh.Token(woosh.NAME, 'file', 362, 8, 362, 12),
woosh.Token(woosh.NAME, 'in', 362, 13, 362, 15),
woosh.Token(woosh.NAME, 'files', 362, 16, 362, 21),
woosh.Token(woosh.OP, ':', 362, 21, 362, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 362, 22, 363, 0),
woosh.Token(woosh.INDENT, '        ', 363, 0, 363, 8),
woosh.Token(woosh.NAME, 'if', 363, 8, 363, 10),
woosh.Token(woosh.NAME, 'os', 363, 11, 363, 13),
woosh.Token(woosh.OP, '.', 363, 13, 363, 14),
woosh.Token(woosh.NAME, 'path', 363, 14, 363, 18),
woosh.Token(woosh.OP, '.', 363, 18, 363, 19),
woosh.Token(woosh.NAME, 'isfile', 363, 19, 363, 25),
woosh.Token(woosh.OP, '(', 363, 25, 363, 26),
woosh.Token(woosh.NAME, 'file', 363, 26, 363, 30),
woosh.Token(woosh.OP, ')', 363, 30, 363, 31),
woosh.Token(woosh.OP, ':', 363, 31, 363, 32),
woosh.Token(woosh.NEWLINE, '\r\n', 363, 32, 364, 0),
woosh.Token(woosh.INDENT, '            ', 364, 0, 364, 12),
woosh.Token(woosh.NAME, 'db', 364, 12, 364, 14),
woosh.Token(woosh.OP, '.', 364, 14, 364, 15),
woosh.Token(woosh.NAME, 'read', 364, 15, 364, 19),
woosh.Token(woosh.OP, '(', 364, 19, 364, 20),
woosh.Token(woosh.NAME, 'file', 364, 20, 364, 24),
woosh.Token(woosh.OP, ')', 364, 24, 364, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 364, 25, 365, 0),
woosh.Token(woosh.DEDENT, '    ', 365, 0, 365, 4),
woosh.Token(woosh.DEDENT, '', 365, 4, 365, 4),
woosh.Token(woosh.NAME, 'encodings_map', 365, 4, 365, 17),
woosh.Token(woosh.OP, '=', 365, 18, 365, 19),
woosh.Token(woosh.NAME, 'db', 365, 20, 365, 22),
woosh.Token(woosh.OP, '.', 365, 22, 365, 23),
woosh.Token(woosh.NAME, 'encodings_map', 365, 23, 365, 36),
woosh.Token(woosh.NEWLINE, '\r\n', 365, 36, 366, 0),
woosh.Token(woosh.NAME, 'suffix_map', 366, 4, 366, 14),
woosh.Token(woosh.OP, '=', 366, 15, 366, 16),
woosh.Token(woosh.NAME, 'db', 366, 17, 366, 19),
woosh.Token(woosh.OP, '.', 366, 19, 366, 20),
woosh.Token(woosh.NAME, 'suffix_map', 366, 20, 366, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 366, 30, 367, 0),
woosh.Token(woosh.NAME, 'types_map', 367, 4, 367, 13),
woosh.Token(woosh.OP, '=', 367, 14, 367, 15),
woosh.Token(woosh.NAME, 'db', 367, 16, 367, 18),
woosh.Token(woosh.OP, '.', 367, 18, 367, 19),
woosh.Token(woosh.NAME, 'types_map', 367, 19, 367, 28),
woosh.Token(woosh.OP, '[', 367, 28, 367, 29),
woosh.Token(woosh.NAME, 'True', 367, 29, 367, 33),
woosh.Token(woosh.OP, ']', 367, 33, 367, 34),
woosh.Token(woosh.NEWLINE, '\r\n', 367, 34, 368, 0),
woosh.Token(woosh.NAME, 'common_types', 368, 4, 368, 16),
woosh.Token(woosh.OP, '=', 368, 17, 368, 18),
woosh.Token(woosh.NAME, 'db', 368, 19, 368, 21),
woosh.Token(woosh.OP, '.', 368, 21, 368, 22),
woosh.Token(woosh.NAME, 'types_map', 368, 22, 368, 31),
woosh.Token(woosh.OP, '[', 368, 31, 368, 32),
woosh.Token(woosh.NAME, 'False', 368, 32, 368, 37),
woosh.Token(woosh.OP, ']', 368, 37, 368, 38),
woosh.Token(woosh.NEWLINE, '\r\n', 368, 38, 369, 0),
woosh.Token(woosh.COMMENT, '# Make the DB a global variable now that it is fully initialized', 369, 4, 369, 68),
woosh.Token(woosh.NAME, '_db', 370, 4, 370, 7),
woosh.Token(woosh.OP, '=', 370, 8, 370, 9),
woosh.Token(woosh.NAME, 'db', 370, 10, 370, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 370, 12, 371, 0),
woosh.Token(woosh.DEDENT, '', 373, 0, 373, 0),
woosh.Token(woosh.NAME, 'def', 373, 0, 373, 3),
woosh.Token(woosh.NAME, 'read_mime_types', 373, 4, 373, 19),
woosh.Token(woosh.OP, '(', 373, 19, 373, 20),
woosh.Token(woosh.NAME, 'file', 373, 20, 373, 24),
woosh.Token(woosh.OP, ')', 373, 24, 373, 25),
woosh.Token(woosh.OP, ':', 373, 25, 373, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 373, 26, 374, 0),
woosh.Token(woosh.INDENT, '    ', 374, 0, 374, 4),
woosh.Token(woosh.NAME, 'try', 374, 4, 374, 7),
woosh.Token(woosh.OP, ':', 374, 7, 374, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 374, 8, 375, 0),
woosh.Token(woosh.INDENT, '        ', 375, 0, 375, 8),
woosh.Token(woosh.NAME, 'f', 375, 8, 375, 9),
woosh.Token(woosh.OP, '=', 375, 10, 375, 11),
woosh.Token(woosh.NAME, 'open', 375, 12, 375, 16),
woosh.Token(woosh.OP, '(', 375, 16, 375, 17),
woosh.Token(woosh.NAME, 'file', 375, 17, 375, 21),
woosh.Token(woosh.OP, ',', 375, 21, 375, 22),
woosh.Token(woosh.NAME, 'encoding', 375, 23, 375, 31),
woosh.Token(woosh.OP, '=', 375, 31, 375, 32),
woosh.Token(woosh.STRING, "'utf-8'", 375, 32, 375, 39),
woosh.Token(woosh.OP, ')', 375, 39, 375, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 375, 40, 376, 0),
woosh.Token(woosh.DEDENT, '    ', 376, 0, 376, 4),
woosh.Token(woosh.NAME, 'except', 376, 4, 376, 10),
woosh.Token(woosh.NAME, 'OSError', 376, 11, 376, 18),
woosh.Token(woosh.OP, ':', 376, 18, 376, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 376, 19, 377, 0),
woosh.Token(woosh.INDENT, '        ', 377, 0, 377, 8),
woosh.Token(woosh.NAME, 'return', 377, 8, 377, 14),
woosh.Token(woosh.NAME, 'None', 377, 15, 377, 19),
woosh.Token(woosh.NEWLINE, '\r\n', 377, 19, 378, 0),
woosh.Token(woosh.DEDENT, '    ', 378, 0, 378, 4),
woosh.Token(woosh.NAME, 'with', 378, 4, 378, 8),
woosh.Token(woosh.NAME, 'f', 378, 9, 378, 10),
woosh.Token(woosh.OP, ':', 378, 10, 378, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 378, 11, 379, 0),
woosh.Token(woosh.INDENT, '        ', 379, 0, 379, 8),
woosh.Token(woosh.NAME, 'db', 379, 8, 379, 10),
woosh.Token(woosh.OP, '=', 379, 11, 379, 12),
woosh.Token(woosh.NAME, 'MimeTypes', 379, 13, 379, 22),
woosh.Token(woosh.OP, '(', 379, 22, 379, 23),
woosh.Token(woosh.OP, ')', 379, 23, 379, 24),
woosh.Token(woosh.NEWLINE, '\r\n', 379, 24, 380, 0),
woosh.Token(woosh.NAME, 'db', 380, 8, 380, 10),
woosh.Token(woosh.OP, '.', 380, 10, 380, 11),
woosh.Token(woosh.NAME, 'readfp', 380, 11, 380, 17),
woosh.Token(woosh.OP, '(', 380, 17, 380, 18),
woosh.Token(woosh.NAME, 'f', 380, 18, 380, 19),
woosh.Token(woosh.OP, ',', 380, 19, 380, 20),
woosh.Token(woosh.NAME, 'True', 380, 21, 380, 25),
woosh.Token(woosh.OP, ')', 380, 25, 380, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 380, 26, 381, 0),
woosh.Token(woosh.NAME, 'return', 381, 8, 381, 14),
woosh.Token(woosh.NAME, 'db', 381, 15, 381, 17),
woosh.Token(woosh.OP, '.', 381, 17, 381, 18),
woosh.Token(woosh.NAME, 'types_map', 381, 18, 381, 27),
woosh.Token(woosh.OP, '[', 381, 27, 381, 28),
woosh.Token(woosh.NAME, 'True', 381, 28, 381, 32),
woosh.Token(woosh.OP, ']', 381, 32, 381, 33),
woosh.Token(woosh.NEWLINE, '\r\n', 381, 33, 382, 0),
woosh.Token(woosh.DEDENT, '', 384, 0, 384, 0),
woosh.Token(woosh.DEDENT, '', 384, 0, 384, 0),
woosh.Token(woosh.NAME, 'def', 384, 0, 384, 3),
woosh.Token(woosh.NAME, '_default_mime_types', 384, 4, 384, 23),
woosh.Token(woosh.OP, '(', 384, 23, 384, 24),
woosh.Token(woosh.OP, ')', 384, 24, 384, 25),
woosh.Token(woosh.OP, ':', 384, 25, 384, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 384, 26, 385, 0),
woosh.Token(woosh.INDENT, '    ', 385, 0, 385, 4),
woosh.Token(woosh.NAME, 'global', 385, 4, 385, 10),
woosh.Token(woosh.NAME, 'suffix_map', 385, 11, 385, 21),
woosh.Token(woosh.OP, ',', 385, 21, 385, 22),
woosh.Token(woosh.NAME, '_suffix_map_default', 385, 23, 385, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 385, 42, 386, 0),
woosh.Token(woosh.NAME, 'global', 386, 4, 386, 10),
woosh.Token(woosh.NAME, 'encodings_map', 386, 11, 386, 24),
woosh.Token(woosh.OP, ',', 386, 24, 386, 25),
woosh.Token(woosh.NAME, '_encodings_map_default', 386, 26, 386, 48),
woosh.Token(woosh.NEWLINE, '\r\n', 386, 48, 387, 0),
woosh.Token(woosh.NAME, 'global', 387, 4, 387, 10),
woosh.Token(woosh.NAME, 'types_map', 387, 11, 387, 20),
woosh.Token(woosh.OP, ',', 387, 20, 387, 21),
woosh.Token(woosh.NAME, '_types_map_default', 387, 22, 387, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 387, 40, 388, 0),
woosh.Token(woosh.NAME, 'global', 388, 4, 388, 10),
woosh.Token(woosh.NAME, 'common_types', 388, 11, 388, 23),
woosh.Token(woosh.OP, ',', 388, 23, 388, 24),
woosh.Token(woosh.NAME, '_common_types_default', 388, 25, 388, 46),
woosh.Token(woosh.NEWLINE, '\r\n', 388, 46, 389, 0),
woosh.Token(woosh.NAME, 'suffix_map', 390, 4, 390, 14),
woosh.Token(woosh.OP, '=', 390, 15, 390, 16),
woosh.Token(woosh.NAME, '_suffix_map_default', 390, 17, 390, 36),
woosh.Token(woosh.OP, '=', 390, 37, 390, 38),
woosh.Token(woosh.OP, '{', 390, 39, 390, 40),
woosh.Token(woosh.STRING, "'.svgz'", 391, 8, 391, 15),
woosh.Token(woosh.OP, ':', 391, 15, 391, 16),
woosh.Token(woosh.STRING, "'.svg.gz'", 391, 17, 391, 26),
woosh.Token(woosh.OP, ',', 391, 26, 391, 27),
woosh.Token(woosh.STRING, "'.tgz'", 392, 8, 392, 14),
woosh.Token(woosh.OP, ':', 392, 14, 392, 15),
woosh.Token(woosh.STRING, "'.tar.gz'", 392, 16, 392, 25),
woosh.Token(woosh.OP, ',', 392, 25, 392, 26),
woosh.Token(woosh.STRING, "'.taz'", 393, 8, 393, 14),
woosh.Token(woosh.OP, ':', 393, 14, 393, 15),
woosh.Token(woosh.STRING, "'.tar.gz'", 393, 16, 393, 25),
woosh.Token(woosh.OP, ',', 393, 25, 393, 26),
woosh.Token(woosh.STRING, "'.tz'", 394, 8, 394, 13),
woosh.Token(woosh.OP, ':', 394, 13, 394, 14),
woosh.Token(woosh.STRING, "'.tar.gz'", 394, 15, 394, 24),
woosh.Token(woosh.OP, ',', 394, 24, 394, 25),
woosh.Token(woosh.STRING, "'.tbz2'", 395, 8, 395, 15),
woosh.Token(woosh.OP, ':', 395, 15, 395, 16),
woosh.Token(woosh.STRING, "'.tar.bz2'", 395, 17, 395, 27),
woosh.Token(woosh.OP, ',', 395, 27, 395, 28),
woosh.Token(woosh.STRING, "'.txz'", 396, 8, 396, 14),
woosh.Token(woosh.OP, ':', 396, 14, 396, 15),
woosh.Token(woosh.STRING, "'.tar.xz'", 396, 16, 396, 25),
woosh.Token(woosh.OP, ',', 396, 25, 396, 26),
woosh.Token(woosh.OP, '}', 397, 8, 397, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 397, 9, 398, 0),
woosh.Token(woosh.NAME, 'encodings_map', 399, 4, 399, 17),
woosh.Token(woosh.OP, '=', 399, 18, 399, 19),
woosh.Token(woosh.NAME, '_encodings_map_default', 399, 20, 399, 42),
woosh.Token(woosh.OP, '=', 399, 43, 399, 44),
woosh.Token(woosh.OP, '{', 399, 45, 399, 46),
woosh.Token(woosh.STRING, "'.gz'", 400, 8, 400, 13),
woosh.Token(woosh.OP, ':', 400, 13, 400, 14),
woosh.Token(woosh.STRING, "'gzip'", 400, 15, 400, 21),
woosh.Token(woosh.OP, ',', 400, 21, 400, 22),
woosh.Token(woosh.STRING, "'.Z'", 401, 8, 401, 12),
woosh.Token(woosh.OP, ':', 401, 12, 401, 13),
woosh.Token(woosh.STRING, "'compress'", 401, 14, 401, 24),
woosh.Token(woosh.OP, ',', 401, 24, 401, 25),
woosh.Token(woosh.STRING, "'.bz2'", 402, 8, 402, 14),
woosh.Token(woosh.OP, ':', 402, 14, 402, 15),
woosh.Token(woosh.STRING, "'bzip2'", 402, 16, 402, 23),
woosh.Token(woosh.OP, ',', 402, 23, 402, 24),
woosh.Token(woosh.STRING, "'.xz'", 403, 8, 403, 13),
woosh.Token(woosh.OP, ':', 403, 13, 403, 14),
woosh.Token(woosh.STRING, "'xz'", 403, 15, 403, 19),
woosh.Token(woosh.OP, ',', 403, 19, 403, 20),
woosh.Token(woosh.STRING, "'.br'", 404, 8, 404, 13),
woosh.Token(woosh.OP, ':', 404, 13, 404, 14),
woosh.Token(woosh.STRING, "'br'", 404, 15, 404, 19),
woosh.Token(woosh.OP, ',', 404, 19, 404, 20),
woosh.Token(woosh.OP, '}', 405, 8, 405, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 405, 9, 406, 0),
woosh.Token(woosh.COMMENT, '# Before adding new types, make sure they are either registered with IANA,', 407, 4, 407, 78),
woosh.Token(woosh.COMMENT, '# at http://www.iana.org/assignments/media-types', 408, 4, 408, 52),
woosh.Token(woosh.COMMENT, '# or extensions, i.e. using the x- prefix', 409, 4, 409, 45),
woosh.Token(woosh.COMMENT, '# If you add to these, please keep them sorted by mime type.', 411, 4, 411, 64),
woosh.Token(woosh.COMMENT, '# Make sure the entry with the preferred file extension for a particular mime type', 412, 4, 412, 86),
woosh.Token(woosh.COMMENT, '# appears before any others of the same mimetype.', 413, 4, 413, 53),
woosh.Token(woosh.NAME, 'types_map', 414, 4, 414, 13),
woosh.Token(woosh.OP, '=', 414, 14, 414, 15),
woosh.Token(woosh.NAME, '_types_map_default', 414, 16, 414, 34),
woosh.Token(woosh.OP, '=', 414, 35, 414, 36),
woosh.Token(woosh.OP, '{', 414, 37, 414, 38),
woosh.Token(woosh.STRING, "'.js'", 415, 8, 415, 13),
woosh.Token(woosh.OP, ':', 415, 18, 415, 19),
woosh.Token(woosh.STRING, "'application/javascript'", 415, 20, 415, 44),
woosh.Token(woosh.OP, ',', 415, 44, 415, 45),
woosh.Token(woosh.STRING, "'.mjs'", 416, 8, 416, 14),
woosh.Token(woosh.OP, ':', 416, 18, 416, 19),
woosh.Token(woosh.STRING, "'application/javascript'", 416, 20, 416, 44),
woosh.Token(woosh.OP, ',', 416, 44, 416, 45),
woosh.Token(woosh.STRING, "'.json'", 417, 8, 417, 15),
woosh.Token(woosh.OP, ':', 417, 18, 417, 19),
woosh.Token(woosh.STRING, "'application/json'", 417, 20, 417, 38),
woosh.Token(woosh.OP, ',', 417, 38, 417, 39),
woosh.Token(woosh.STRING, "'.webmanifest'", 418, 8, 418, 22),
woosh.Token(woosh.OP, ':', 418, 22, 418, 23),
woosh.Token(woosh.STRING, "'application/manifest+json'", 418, 24, 418, 51),
woosh.Token(woosh.OP, ',', 418, 51, 418, 52),
woosh.Token(woosh.STRING, "'.doc'", 419, 8, 419, 14),
woosh.Token(woosh.OP, ':', 419, 18, 419, 19),
woosh.Token(woosh.STRING, "'application/msword'", 419, 20, 419, 40),
woosh.Token(woosh.OP, ',', 419, 40, 419, 41),
woosh.Token(woosh.STRING, "'.dot'", 420, 8, 420, 14),
woosh.Token(woosh.OP, ':', 420, 18, 420, 19),
woosh.Token(woosh.STRING, "'application/msword'", 420, 20, 420, 40),
woosh.Token(woosh.OP, ',', 420, 40, 420, 41),
woosh.Token(woosh.STRING, "'.wiz'", 421, 8, 421, 14),
woosh.Token(woosh.OP, ':', 421, 18, 421, 19),
woosh.Token(woosh.STRING, "'application/msword'", 421, 20, 421, 40),
woosh.Token(woosh.OP, ',', 421, 40, 421, 41),
woosh.Token(woosh.STRING, "'.bin'", 422, 8, 422, 14),
woosh.Token(woosh.OP, ':', 422, 18, 422, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 422, 20, 422, 46),
woosh.Token(woosh.OP, ',', 422, 46, 422, 47),
woosh.Token(woosh.STRING, "'.a'", 423, 8, 423, 12),
woosh.Token(woosh.OP, ':', 423, 18, 423, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 423, 20, 423, 46),
woosh.Token(woosh.OP, ',', 423, 46, 423, 47),
woosh.Token(woosh.STRING, "'.dll'", 424, 8, 424, 14),
woosh.Token(woosh.OP, ':', 424, 18, 424, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 424, 20, 424, 46),
woosh.Token(woosh.OP, ',', 424, 46, 424, 47),
woosh.Token(woosh.STRING, "'.exe'", 425, 8, 425, 14),
woosh.Token(woosh.OP, ':', 425, 18, 425, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 425, 20, 425, 46),
woosh.Token(woosh.OP, ',', 425, 46, 425, 47),
woosh.Token(woosh.STRING, "'.o'", 426, 8, 426, 12),
woosh.Token(woosh.OP, ':', 426, 18, 426, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 426, 20, 426, 46),
woosh.Token(woosh.OP, ',', 426, 46, 426, 47),
woosh.Token(woosh.STRING, "'.obj'", 427, 8, 427, 14),
woosh.Token(woosh.OP, ':', 427, 18, 427, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 427, 20, 427, 46),
woosh.Token(woosh.OP, ',', 427, 46, 427, 47),
woosh.Token(woosh.STRING, "'.so'", 428, 8, 428, 13),
woosh.Token(woosh.OP, ':', 428, 18, 428, 19),
woosh.Token(woosh.STRING, "'application/octet-stream'", 428, 20, 428, 46),
woosh.Token(woosh.OP, ',', 428, 46, 428, 47),
woosh.Token(woosh.STRING, "'.oda'", 429, 8, 429, 14),
woosh.Token(woosh.OP, ':', 429, 18, 429, 19),
woosh.Token(woosh.STRING, "'application/oda'", 429, 20, 429, 37),
woosh.Token(woosh.OP, ',', 429, 37, 429, 38),
woosh.Token(woosh.STRING, "'.pdf'", 430, 8, 430, 14),
woosh.Token(woosh.OP, ':', 430, 18, 430, 19),
woosh.Token(woosh.STRING, "'application/pdf'", 430, 20, 430, 37),
woosh.Token(woosh.OP, ',', 430, 37, 430, 38),
woosh.Token(woosh.STRING, "'.p7c'", 431, 8, 431, 14),
woosh.Token(woosh.OP, ':', 431, 18, 431, 19),
woosh.Token(woosh.STRING, "'application/pkcs7-mime'", 431, 20, 431, 44),
woosh.Token(woosh.OP, ',', 431, 44, 431, 45),
woosh.Token(woosh.STRING, "'.ps'", 432, 8, 432, 13),
woosh.Token(woosh.OP, ':', 432, 18, 432, 19),
woosh.Token(woosh.STRING, "'application/postscript'", 432, 20, 432, 44),
woosh.Token(woosh.OP, ',', 432, 44, 432, 45),
woosh.Token(woosh.STRING, "'.ai'", 433, 8, 433, 13),
woosh.Token(woosh.OP, ':', 433, 18, 433, 19),
woosh.Token(woosh.STRING, "'application/postscript'", 433, 20, 433, 44),
woosh.Token(woosh.OP, ',', 433, 44, 433, 45),
woosh.Token(woosh.STRING, "'.eps'", 434, 8, 434, 14),
woosh.Token(woosh.OP, ':', 434, 18, 434, 19),
woosh.Token(woosh.STRING, "'application/postscript'", 434, 20, 434, 44),
woosh.Token(woosh.OP, ',', 434, 44, 434, 45),
woosh.Token(woosh.STRING, "'.m3u'", 435, 8, 435, 14),
woosh.Token(woosh.OP, ':', 435, 18, 435, 19),
woosh.Token(woosh.STRING, "'application/vnd.apple.mpegurl'", 435, 20, 435, 51),
woosh.Token(woosh.OP, ',', 435, 51, 435, 52),
woosh.Token(woosh.STRING, "'.m3u8'", 436, 8, 436, 15),
woosh.Token(woosh.OP, ':', 436, 18, 436, 19),
woosh.Token(woosh.STRING, "'application/vnd.apple.mpegurl'", 436, 20, 436, 51),
woosh.Token(woosh.OP, ',', 436, 51, 436, 52),
woosh.Token(woosh.STRING, "'.xls'", 437, 8, 437, 14),
woosh.Token(woosh.OP, ':', 437, 18, 437, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-excel'", 437, 20, 437, 46),
woosh.Token(woosh.OP, ',', 437, 46, 437, 47),
woosh.Token(woosh.STRING, "'.xlb'", 438, 8, 438, 14),
woosh.Token(woosh.OP, ':', 438, 18, 438, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-excel'", 438, 20, 438, 46),
woosh.Token(woosh.OP, ',', 438, 46, 438, 47),
woosh.Token(woosh.STRING, "'.ppt'", 439, 8, 439, 14),
woosh.Token(woosh.OP, ':', 439, 18, 439, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-powerpoint'", 439, 20, 439, 51),
woosh.Token(woosh.OP, ',', 439, 51, 439, 52),
woosh.Token(woosh.STRING, "'.pot'", 440, 8, 440, 14),
woosh.Token(woosh.OP, ':', 440, 18, 440, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-powerpoint'", 440, 20, 440, 51),
woosh.Token(woosh.OP, ',', 440, 51, 440, 52),
woosh.Token(woosh.STRING, "'.ppa'", 441, 8, 441, 14),
woosh.Token(woosh.OP, ':', 441, 18, 441, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-powerpoint'", 441, 20, 441, 51),
woosh.Token(woosh.OP, ',', 441, 51, 441, 52),
woosh.Token(woosh.STRING, "'.pps'", 442, 8, 442, 14),
woosh.Token(woosh.OP, ':', 442, 18, 442, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-powerpoint'", 442, 20, 442, 51),
woosh.Token(woosh.OP, ',', 442, 51, 442, 52),
woosh.Token(woosh.STRING, "'.pwz'", 443, 8, 443, 14),
woosh.Token(woosh.OP, ':', 443, 18, 443, 19),
woosh.Token(woosh.STRING, "'application/vnd.ms-powerpoint'", 443, 20, 443, 51),
woosh.Token(woosh.OP, ',', 443, 51, 443, 52),
woosh.Token(woosh.STRING, "'.wasm'", 444, 8, 444, 15),
woosh.Token(woosh.OP, ':', 444, 18, 444, 19),
woosh.Token(woosh.STRING, "'application/wasm'", 444, 20, 444, 38),
woosh.Token(woosh.OP, ',', 444, 38, 444, 39),
woosh.Token(woosh.STRING, "'.bcpio'", 445, 8, 445, 16),
woosh.Token(woosh.OP, ':', 445, 18, 445, 19),
woosh.Token(woosh.STRING, "'application/x-bcpio'", 445, 20, 445, 41),
woosh.Token(woosh.OP, ',', 445, 41, 445, 42),
woosh.Token(woosh.STRING, "'.cpio'", 446, 8, 446, 15),
woosh.Token(woosh.OP, ':', 446, 18, 446, 19),
woosh.Token(woosh.STRING, "'application/x-cpio'", 446, 20, 446, 40),
woosh.Token(woosh.OP, ',', 446, 40, 446, 41),
woosh.Token(woosh.STRING, "'.csh'", 447, 8, 447, 14),
woosh.Token(woosh.OP, ':', 447, 18, 447, 19),
woosh.Token(woosh.STRING, "'application/x-csh'", 447, 20, 447, 39),
woosh.Token(woosh.OP, ',', 447, 39, 447, 40),
woosh.Token(woosh.STRING, "'.dvi'", 448, 8, 448, 14),
woosh.Token(woosh.OP, ':', 448, 18, 448, 19),
woosh.Token(woosh.STRING, "'application/x-dvi'", 448, 20, 448, 39),
woosh.Token(woosh.OP, ',', 448, 39, 448, 40),
woosh.Token(woosh.STRING, "'.gtar'", 449, 8, 449, 15),
woosh.Token(woosh.OP, ':', 449, 18, 449, 19),
woosh.Token(woosh.STRING, "'application/x-gtar'", 449, 20, 449, 40),
woosh.Token(woosh.OP, ',', 449, 40, 449, 41),
woosh.Token(woosh.STRING, "'.hdf'", 450, 8, 450, 14),
woosh.Token(woosh.OP, ':', 450, 18, 450, 19),
woosh.Token(woosh.STRING, "'application/x-hdf'", 450, 20, 450, 39),
woosh.Token(woosh.OP, ',', 450, 39, 450, 40),
woosh.Token(woosh.STRING, "'.h5'", 451, 8, 451, 13),
woosh.Token(woosh.OP, ':', 451, 18, 451, 19),
woosh.Token(woosh.STRING, "'application/x-hdf5'", 451, 20, 451, 40),
woosh.Token(woosh.OP, ',', 451, 40, 451, 41),
woosh.Token(woosh.STRING, "'.latex'", 452, 8, 452, 16),
woosh.Token(woosh.OP, ':', 452, 18, 452, 19),
woosh.Token(woosh.STRING, "'application/x-latex'", 452, 20, 452, 41),
woosh.Token(woosh.OP, ',', 452, 41, 452, 42),
woosh.Token(woosh.STRING, "'.mif'", 453, 8, 453, 14),
woosh.Token(woosh.OP, ':', 453, 18, 453, 19),
woosh.Token(woosh.STRING, "'application/x-mif'", 453, 20, 453, 39),
woosh.Token(woosh.OP, ',', 453, 39, 453, 40),
woosh.Token(woosh.STRING, "'.cdf'", 454, 8, 454, 14),
woosh.Token(woosh.OP, ':', 454, 18, 454, 19),
woosh.Token(woosh.STRING, "'application/x-netcdf'", 454, 20, 454, 42),
woosh.Token(woosh.OP, ',', 454, 42, 454, 43),
woosh.Token(woosh.STRING, "'.nc'", 455, 8, 455, 13),
woosh.Token(woosh.OP, ':', 455, 18, 455, 19),
woosh.Token(woosh.STRING, "'application/x-netcdf'", 455, 20, 455, 42),
woosh.Token(woosh.OP, ',', 455, 42, 455, 43),
woosh.Token(woosh.STRING, "'.p12'", 456, 8, 456, 14),
woosh.Token(woosh.OP, ':', 456, 18, 456, 19),
woosh.Token(woosh.STRING, "'application/x-pkcs12'", 456, 20, 456, 42),
woosh.Token(woosh.OP, ',', 456, 42, 456, 43),
woosh.Token(woosh.STRING, "'.pfx'", 457, 8, 457, 14),
woosh.Token(woosh.OP, ':', 457, 18, 457, 19),
woosh.Token(woosh.STRING, "'application/x-pkcs12'", 457, 20, 457, 42),
woosh.Token(woosh.OP, ',', 457, 42, 457, 43),
woosh.Token(woosh.STRING, "'.ram'", 458, 8, 458, 14),
woosh.Token(woosh.OP, ':', 458, 18, 458, 19),
woosh.Token(woosh.STRING, "'application/x-pn-realaudio'", 458, 20, 458, 48),
woosh.Token(woosh.OP, ',', 458, 48, 458, 49),
woosh.Token(woosh.STRING, "'.pyc'", 459, 8, 459, 14),
woosh.Token(woosh.OP, ':', 459, 18, 459, 19),
woosh.Token(woosh.STRING, "'application/x-python-code'", 459, 20, 459, 47),
woosh.Token(woosh.OP, ',', 459, 47, 459, 48),
woosh.Token(woosh.STRING, "'.pyo'", 460, 8, 460, 14),
woosh.Token(woosh.OP, ':', 460, 18, 460, 19),
woosh.Token(woosh.STRING, "'application/x-python-code'", 460, 20, 460, 47),
woosh.Token(woosh.OP, ',', 460, 47, 460, 48),
woosh.Token(woosh.STRING, "'.sh'", 461, 8, 461, 13),
woosh.Token(woosh.OP, ':', 461, 18, 461, 19),
woosh.Token(woosh.STRING, "'application/x-sh'", 461, 20, 461, 38),
woosh.Token(woosh.OP, ',', 461, 38, 461, 39),
woosh.Token(woosh.STRING, "'.shar'", 462, 8, 462, 15),
woosh.Token(woosh.OP, ':', 462, 18, 462, 19),
woosh.Token(woosh.STRING, "'application/x-shar'", 462, 20, 462, 40),
woosh.Token(woosh.OP, ',', 462, 40, 462, 41),
woosh.Token(woosh.STRING, "'.swf'", 463, 8, 463, 14),
woosh.Token(woosh.OP, ':', 463, 18, 463, 19),
woosh.Token(woosh.STRING, "'application/x-shockwave-flash'", 463, 20, 463, 51),
woosh.Token(woosh.OP, ',', 463, 51, 463, 52),
woosh.Token(woosh.STRING, "'.sv4cpio'", 464, 8, 464, 18),
woosh.Token(woosh.OP, ':', 464, 18, 464, 19),
woosh.Token(woosh.STRING, "'application/x-sv4cpio'", 464, 20, 464, 43),
woosh.Token(woosh.OP, ',', 464, 43, 464, 44),
woosh.Token(woosh.STRING, "'.sv4crc'", 465, 8, 465, 17),
woosh.Token(woosh.OP, ':', 465, 18, 465, 19),
woosh.Token(woosh.STRING, "'application/x-sv4crc'", 465, 20, 465, 42),
woosh.Token(woosh.OP, ',', 465, 42, 465, 43),
woosh.Token(woosh.STRING, "'.tar'", 466, 8, 466, 14),
woosh.Token(woosh.OP, ':', 466, 18, 466, 19),
woosh.Token(woosh.STRING, "'application/x-tar'", 466, 20, 466, 39),
woosh.Token(woosh.OP, ',', 466, 39, 466, 40),
woosh.Token(woosh.STRING, "'.tcl'", 467, 8, 467, 14),
woosh.Token(woosh.OP, ':', 467, 18, 467, 19),
woosh.Token(woosh.STRING, "'application/x-tcl'", 467, 20, 467, 39),
woosh.Token(woosh.OP, ',', 467, 39, 467, 40),
woosh.Token(woosh.STRING, "'.tex'", 468, 8, 468, 14),
woosh.Token(woosh.OP, ':', 468, 18, 468, 19),
woosh.Token(woosh.STRING, "'application/x-tex'", 468, 20, 468, 39),
woosh.Token(woosh.OP, ',', 468, 39, 468, 40),
woosh.Token(woosh.STRING, "'.texi'", 469, 8, 469, 15),
woosh.Token(woosh.OP, ':', 469, 18, 469, 19),
woosh.Token(woosh.STRING, "'application/x-texinfo'", 469, 20, 469, 43),
woosh.Token(woosh.OP, ',', 469, 43, 469, 44),
woosh.Token(woosh.STRING, "'.texinfo'", 470, 8, 470, 18),
woosh.Token(woosh.OP, ':', 470, 18, 470, 19),
woosh.Token(woosh.STRING, "'application/x-texinfo'", 470, 20, 470, 43),
woosh.Token(woosh.OP, ',', 470, 43, 470, 44),
woosh.Token(woosh.STRING, "'.roff'", 471, 8, 471, 15),
woosh.Token(woosh.OP, ':', 471, 18, 471, 19),
woosh.Token(woosh.STRING, "'application/x-troff'", 471, 20, 471, 41),
woosh.Token(woosh.OP, ',', 471, 41, 471, 42),
woosh.Token(woosh.STRING, "'.t'", 472, 8, 472, 12),
woosh.Token(woosh.OP, ':', 472, 18, 472, 19),
woosh.Token(woosh.STRING, "'application/x-troff'", 472, 20, 472, 41),
woosh.Token(woosh.OP, ',', 472, 41, 472, 42),
woosh.Token(woosh.STRING, "'.tr'", 473, 8, 473, 13),
woosh.Token(woosh.OP, ':', 473, 18, 473, 19),
woosh.Token(woosh.STRING, "'application/x-troff'", 473, 20, 473, 41),
woosh.Token(woosh.OP, ',', 473, 41, 473, 42),
woosh.Token(woosh.STRING, "'.man'", 474, 8, 474, 14),
woosh.Token(woosh.OP, ':', 474, 18, 474, 19),
woosh.Token(woosh.STRING, "'application/x-troff-man'", 474, 20, 474, 45),
woosh.Token(woosh.OP, ',', 474, 45, 474, 46),
woosh.Token(woosh.STRING, "'.me'", 475, 8, 475, 13),
woosh.Token(woosh.OP, ':', 475, 18, 475, 19),
woosh.Token(woosh.STRING, "'application/x-troff-me'", 475, 20, 475, 44),
woosh.Token(woosh.OP, ',', 475, 44, 475, 45),
woosh.Token(woosh.STRING, "'.ms'", 476, 8, 476, 13),
woosh.Token(woosh.OP, ':', 476, 18, 476, 19),
woosh.Token(woosh.STRING, "'application/x-troff-ms'", 476, 20, 476, 44),
woosh.Token(woosh.OP, ',', 476, 44, 476, 45),
woosh.Token(woosh.STRING, "'.ustar'", 477, 8, 477, 16),
woosh.Token(woosh.OP, ':', 477, 18, 477, 19),
woosh.Token(woosh.STRING, "'application/x-ustar'", 477, 20, 477, 41),
woosh.Token(woosh.OP, ',', 477, 41, 477, 42),
woosh.Token(woosh.STRING, "'.src'", 478, 8, 478, 14),
woosh.Token(woosh.OP, ':', 478, 18, 478, 19),
woosh.Token(woosh.STRING, "'application/x-wais-source'", 478, 20, 478, 47),
woosh.Token(woosh.OP, ',', 478, 47, 478, 48),
woosh.Token(woosh.STRING, "'.xsl'", 479, 8, 479, 14),
woosh.Token(woosh.OP, ':', 479, 18, 479, 19),
woosh.Token(woosh.STRING, "'application/xml'", 479, 20, 479, 37),
woosh.Token(woosh.OP, ',', 479, 37, 479, 38),
woosh.Token(woosh.STRING, "'.rdf'", 480, 8, 480, 14),
woosh.Token(woosh.OP, ':', 480, 18, 480, 19),
woosh.Token(woosh.STRING, "'application/xml'", 480, 20, 480, 37),
woosh.Token(woosh.OP, ',', 480, 37, 480, 38),
woosh.Token(woosh.STRING, "'.wsdl'", 481, 8, 481, 15),
woosh.Token(woosh.OP, ':', 481, 18, 481, 19),
woosh.Token(woosh.STRING, "'application/xml'", 481, 20, 481, 37),
woosh.Token(woosh.OP, ',', 481, 37, 481, 38),
woosh.Token(woosh.STRING, "'.xpdl'", 482, 8, 482, 15),
woosh.Token(woosh.OP, ':', 482, 18, 482, 19),
woosh.Token(woosh.STRING, "'application/xml'", 482, 20, 482, 37),
woosh.Token(woosh.OP, ',', 482, 37, 482, 38),
woosh.Token(woosh.STRING, "'.zip'", 483, 8, 483, 14),
woosh.Token(woosh.OP, ':', 483, 18, 483, 19),
woosh.Token(woosh.STRING, "'application/zip'", 483, 20, 483, 37),
woosh.Token(woosh.OP, ',', 483, 37, 483, 38),
woosh.Token(woosh.STRING, "'.au'", 484, 8, 484, 13),
woosh.Token(woosh.OP, ':', 484, 18, 484, 19),
woosh.Token(woosh.STRING, "'audio/basic'", 484, 20, 484, 33),
woosh.Token(woosh.OP, ',', 484, 33, 484, 34),
woosh.Token(woosh.STRING, "'.snd'", 485, 8, 485, 14),
woosh.Token(woosh.OP, ':', 485, 18, 485, 19),
woosh.Token(woosh.STRING, "'audio/basic'", 485, 20, 485, 33),
woosh.Token(woosh.OP, ',', 485, 33, 485, 34),
woosh.Token(woosh.STRING, "'.mp3'", 486, 8, 486, 14),
woosh.Token(woosh.OP, ':', 486, 18, 486, 19),
woosh.Token(woosh.STRING, "'audio/mpeg'", 486, 20, 486, 32),
woosh.Token(woosh.OP, ',', 486, 32, 486, 33),
woosh.Token(woosh.STRING, "'.mp2'", 487, 8, 487, 14),
woosh.Token(woosh.OP, ':', 487, 18, 487, 19),
woosh.Token(woosh.STRING, "'audio/mpeg'", 487, 20, 487, 32),
woosh.Token(woosh.OP, ',', 487, 32, 487, 33),
woosh.Token(woosh.STRING, "'.aif'", 488, 8, 488, 14),
woosh.Token(woosh.OP, ':', 488, 18, 488, 19),
woosh.Token(woosh.STRING, "'audio/x-aiff'", 488, 20, 488, 34),
woosh.Token(woosh.OP, ',', 488, 34, 488, 35),
woosh.Token(woosh.STRING, "'.aifc'", 489, 8, 489, 15),
woosh.Token(woosh.OP, ':', 489, 18, 489, 19),
woosh.Token(woosh.STRING, "'audio/x-aiff'", 489, 20, 489, 34),
woosh.Token(woosh.OP, ',', 489, 34, 489, 35),
woosh.Token(woosh.STRING, "'.aiff'", 490, 8, 490, 15),
woosh.Token(woosh.OP, ':', 490, 18, 490, 19),
woosh.Token(woosh.STRING, "'audio/x-aiff'", 490, 20, 490, 34),
woosh.Token(woosh.OP, ',', 490, 34, 490, 35),
woosh.Token(woosh.STRING, "'.ra'", 491, 8, 491, 13),
woosh.Token(woosh.OP, ':', 491, 18, 491, 19),
woosh.Token(woosh.STRING, "'audio/x-pn-realaudio'", 491, 20, 491, 42),
woosh.Token(woosh.OP, ',', 491, 42, 491, 43),
woosh.Token(woosh.STRING, "'.wav'", 492, 8, 492, 14),
woosh.Token(woosh.OP, ':', 492, 18, 492, 19),
woosh.Token(woosh.STRING, "'audio/x-wav'", 492, 20, 492, 33),
woosh.Token(woosh.OP, ',', 492, 33, 492, 34),
woosh.Token(woosh.STRING, "'.bmp'", 493, 8, 493, 14),
woosh.Token(woosh.OP, ':', 493, 18, 493, 19),
woosh.Token(woosh.STRING, "'image/bmp'", 493, 20, 493, 31),
woosh.Token(woosh.OP, ',', 493, 31, 493, 32),
woosh.Token(woosh.STRING, "'.gif'", 494, 8, 494, 14),
woosh.Token(woosh.OP, ':', 494, 18, 494, 19),
woosh.Token(woosh.STRING, "'image/gif'", 494, 20, 494, 31),
woosh.Token(woosh.OP, ',', 494, 31, 494, 32),
woosh.Token(woosh.STRING, "'.ief'", 495, 8, 495, 14),
woosh.Token(woosh.OP, ':', 495, 18, 495, 19),
woosh.Token(woosh.STRING, "'image/ief'", 495, 20, 495, 31),
woosh.Token(woosh.OP, ',', 495, 31, 495, 32),
woosh.Token(woosh.STRING, "'.jpg'", 496, 8, 496, 14),
woosh.Token(woosh.OP, ':', 496, 18, 496, 19),
woosh.Token(woosh.STRING, "'image/jpeg'", 496, 20, 496, 32),
woosh.Token(woosh.OP, ',', 496, 32, 496, 33),
woosh.Token(woosh.STRING, "'.jpe'", 497, 8, 497, 14),
woosh.Token(woosh.OP, ':', 497, 18, 497, 19),
woosh.Token(woosh.STRING, "'image/jpeg'", 497, 20, 497, 32),
woosh.Token(woosh.OP, ',', 497, 32, 497, 33),
woosh.Token(woosh.STRING, "'.jpeg'", 498, 8, 498, 15),
woosh.Token(woosh.OP, ':', 498, 18, 498, 19),
woosh.Token(woosh.STRING, "'image/jpeg'", 498, 20, 498, 32),
woosh.Token(woosh.OP, ',', 498, 32, 498, 33),
woosh.Token(woosh.STRING, "'.png'", 499, 8, 499, 14),
woosh.Token(woosh.OP, ':', 499, 18, 499, 19),
woosh.Token(woosh.STRING, "'image/png'", 499, 20, 499, 31),
woosh.Token(woosh.OP, ',', 499, 31, 499, 32),
woosh.Token(woosh.STRING, "'.svg'", 500, 8, 500, 14),
woosh.Token(woosh.OP, ':', 500, 18, 500, 19),
woosh.Token(woosh.STRING, "'image/svg+xml'", 500, 20, 500, 35),
woosh.Token(woosh.OP, ',', 500, 35, 500, 36),
woosh.Token(woosh.STRING, "'.tiff'", 501, 8, 501, 15),
woosh.Token(woosh.OP, ':', 501, 18, 501, 19),
woosh.Token(woosh.STRING, "'image/tiff'", 501, 20, 501, 32),
woosh.Token(woosh.OP, ',', 501, 32, 501, 33),
woosh.Token(woosh.STRING, "'.tif'", 502, 8, 502, 14),
woosh.Token(woosh.OP, ':', 502, 18, 502, 19),
woosh.Token(woosh.STRING, "'image/tiff'", 502, 20, 502, 32),
woosh.Token(woosh.OP, ',', 502, 32, 502, 33),
woosh.Token(woosh.STRING, "'.ico'", 503, 8, 503, 14),
woosh.Token(woosh.OP, ':', 503, 18, 503, 19),
woosh.Token(woosh.STRING, "'image/vnd.microsoft.icon'", 503, 20, 503, 46),
woosh.Token(woosh.OP, ',', 503, 46, 503, 47),
woosh.Token(woosh.STRING, "'.ras'", 504, 8, 504, 14),
woosh.Token(woosh.OP, ':', 504, 18, 504, 19),
woosh.Token(woosh.STRING, "'image/x-cmu-raster'", 504, 20, 504, 40),
woosh.Token(woosh.OP, ',', 504, 40, 504, 41),
woosh.Token(woosh.STRING, "'.bmp'", 505, 8, 505, 14),
woosh.Token(woosh.OP, ':', 505, 18, 505, 19),
woosh.Token(woosh.STRING, "'image/x-ms-bmp'", 505, 20, 505, 36),
woosh.Token(woosh.OP, ',', 505, 36, 505, 37),
woosh.Token(woosh.STRING, "'.pnm'", 506, 8, 506, 14),
woosh.Token(woosh.OP, ':', 506, 18, 506, 19),
woosh.Token(woosh.STRING, "'image/x-portable-anymap'", 506, 20, 506, 45),
woosh.Token(woosh.OP, ',', 506, 45, 506, 46),
woosh.Token(woosh.STRING, "'.pbm'", 507, 8, 507, 14),
woosh.Token(woosh.OP, ':', 507, 18, 507, 19),
woosh.Token(woosh.STRING, "'image/x-portable-bitmap'", 507, 20, 507, 45),
woosh.Token(woosh.OP, ',', 507, 45, 507, 46),
woosh.Token(woosh.STRING, "'.pgm'", 508, 8, 508, 14),
woosh.Token(woosh.OP, ':', 508, 18, 508, 19),
woosh.Token(woosh.STRING, "'image/x-portable-graymap'", 508, 20, 508, 46),
woosh.Token(woosh.OP, ',', 508, 46, 508, 47),
woosh.Token(woosh.STRING, "'.ppm'", 509, 8, 509, 14),
woosh.Token(woosh.OP, ':', 509, 18, 509, 19),
woosh.Token(woosh.STRING, "'image/x-portable-pixmap'", 509, 20, 509, 45),
woosh.Token(woosh.OP, ',', 509, 45, 509, 46),
woosh.Token(woosh.STRING, "'.rgb'", 510, 8, 510, 14),
woosh.Token(woosh.OP, ':', 510, 18, 510, 19),
woosh.Token(woosh.STRING, "'image/x-rgb'", 510, 20, 510, 33),
woosh.Token(woosh.OP, ',', 510, 33, 510, 34),
woosh.Token(woosh.STRING, "'.xbm'", 511, 8, 511, 14),
woosh.Token(woosh.OP, ':', 511, 18, 511, 19),
woosh.Token(woosh.STRING, "'image/x-xbitmap'", 511, 20, 511, 37),
woosh.Token(woosh.OP, ',', 511, 37, 511, 38),
woosh.Token(woosh.STRING, "'.xpm'", 512, 8, 512, 14),
woosh.Token(woosh.OP, ':', 512, 18, 512, 19),
woosh.Token(woosh.STRING, "'image/x-xpixmap'", 512, 20, 512, 37),
woosh.Token(woosh.OP, ',', 512, 37, 512, 38),
woosh.Token(woosh.STRING, "'.xwd'", 513, 8, 513, 14),
woosh.Token(woosh.OP, ':', 513, 18, 513, 19),
woosh.Token(woosh.STRING, "'image/x-xwindowdump'", 513, 20, 513, 41),
woosh.Token(woosh.OP, ',', 513, 41, 513, 42),
woosh.Token(woosh.STRING, "'.eml'", 514, 8, 514, 14),
woosh.Token(woosh.OP, ':', 514, 18, 514, 19),
woosh.Token(woosh.STRING, "'message/rfc822'", 514, 20, 514, 36),
woosh.Token(woosh.OP, ',', 514, 36, 514, 37),
woosh.Token(woosh.STRING, "'.mht'", 515, 8, 515, 14),
woosh.Token(woosh.OP, ':', 515, 18, 515, 19),
woosh.Token(woosh.STRING, "'message/rfc822'", 515, 20, 515, 36),
woosh.Token(woosh.OP, ',', 515, 36, 515, 37),
woosh.Token(woosh.STRING, "'.mhtml'", 516, 8, 516, 16),
woosh.Token(woosh.OP, ':', 516, 18, 516, 19),
woosh.Token(woosh.STRING, "'message/rfc822'", 516, 20, 516, 36),
woosh.Token(woosh.OP, ',', 516, 36, 516, 37),
woosh.Token(woosh.STRING, "'.nws'", 517, 8, 517, 14),
woosh.Token(woosh.OP, ':', 517, 18, 517, 19),
woosh.Token(woosh.STRING, "'message/rfc822'", 517, 20, 517, 36),
woosh.Token(woosh.OP, ',', 517, 36, 517, 37),
woosh.Token(woosh.STRING, "'.css'", 518, 8, 518, 14),
woosh.Token(woosh.OP, ':', 518, 18, 518, 19),
woosh.Token(woosh.STRING, "'text/css'", 518, 20, 518, 30),
woosh.Token(woosh.OP, ',', 518, 30, 518, 31),
woosh.Token(woosh.STRING, "'.csv'", 519, 8, 519, 14),
woosh.Token(woosh.OP, ':', 519, 18, 519, 19),
woosh.Token(woosh.STRING, "'text/csv'", 519, 20, 519, 30),
woosh.Token(woosh.OP, ',', 519, 30, 519, 31),
woosh.Token(woosh.STRING, "'.html'", 520, 8, 520, 15),
woosh.Token(woosh.OP, ':', 520, 18, 520, 19),
woosh.Token(woosh.STRING, "'text/html'", 520, 20, 520, 31),
woosh.Token(woosh.OP, ',', 520, 31, 520, 32),
woosh.Token(woosh.STRING, "'.htm'", 521, 8, 521, 14),
woosh.Token(woosh.OP, ':', 521, 18, 521, 19),
woosh.Token(woosh.STRING, "'text/html'", 521, 20, 521, 31),
woosh.Token(woosh.OP, ',', 521, 31, 521, 32),
woosh.Token(woosh.STRING, "'.txt'", 522, 8, 522, 14),
woosh.Token(woosh.OP, ':', 522, 18, 522, 19),
woosh.Token(woosh.STRING, "'text/plain'", 522, 20, 522, 32),
woosh.Token(woosh.OP, ',', 522, 32, 522, 33),
woosh.Token(woosh.STRING, "'.bat'", 523, 8, 523, 14),
woosh.Token(woosh.OP, ':', 523, 18, 523, 19),
woosh.Token(woosh.STRING, "'text/plain'", 523, 20, 523, 32),
woosh.Token(woosh.OP, ',', 523, 32, 523, 33),
woosh.Token(woosh.STRING, "'.c'", 524, 8, 524, 12),
woosh.Token(woosh.OP, ':', 524, 18, 524, 19),
woosh.Token(woosh.STRING, "'text/plain'", 524, 20, 524, 32),
woosh.Token(woosh.OP, ',', 524, 32, 524, 33),
woosh.Token(woosh.STRING, "'.h'", 525, 8, 525, 12),
woosh.Token(woosh.OP, ':', 525, 18, 525, 19),
woosh.Token(woosh.STRING, "'text/plain'", 525, 20, 525, 32),
woosh.Token(woosh.OP, ',', 525, 32, 525, 33),
woosh.Token(woosh.STRING, "'.ksh'", 526, 8, 526, 14),
woosh.Token(woosh.OP, ':', 526, 18, 526, 19),
woosh.Token(woosh.STRING, "'text/plain'", 526, 20, 526, 32),
woosh.Token(woosh.OP, ',', 526, 32, 526, 33),
woosh.Token(woosh.STRING, "'.pl'", 527, 8, 527, 13),
woosh.Token(woosh.OP, ':', 527, 18, 527, 19),
woosh.Token(woosh.STRING, "'text/plain'", 527, 20, 527, 32),
woosh.Token(woosh.OP, ',', 527, 32, 527, 33),
woosh.Token(woosh.STRING, "'.rtx'", 528, 8, 528, 14),
woosh.Token(woosh.OP, ':', 528, 18, 528, 19),
woosh.Token(woosh.STRING, "'text/richtext'", 528, 20, 528, 35),
woosh.Token(woosh.OP, ',', 528, 35, 528, 36),
woosh.Token(woosh.STRING, "'.tsv'", 529, 8, 529, 14),
woosh.Token(woosh.OP, ':', 529, 18, 529, 19),
woosh.Token(woosh.STRING, "'text/tab-separated-values'", 529, 20, 529, 47),
woosh.Token(woosh.OP, ',', 529, 47, 529, 48),
woosh.Token(woosh.STRING, "'.py'", 530, 8, 530, 13),
woosh.Token(woosh.OP, ':', 530, 18, 530, 19),
woosh.Token(woosh.STRING, "'text/x-python'", 530, 20, 530, 35),
woosh.Token(woosh.OP, ',', 530, 35, 530, 36),
woosh.Token(woosh.STRING, "'.etx'", 531, 8, 531, 14),
woosh.Token(woosh.OP, ':', 531, 18, 531, 19),
woosh.Token(woosh.STRING, "'text/x-setext'", 531, 20, 531, 35),
woosh.Token(woosh.OP, ',', 531, 35, 531, 36),
woosh.Token(woosh.STRING, "'.sgm'", 532, 8, 532, 14),
woosh.Token(woosh.OP, ':', 532, 18, 532, 19),
woosh.Token(woosh.STRING, "'text/x-sgml'", 532, 20, 532, 33),
woosh.Token(woosh.OP, ',', 532, 33, 532, 34),
woosh.Token(woosh.STRING, "'.sgml'", 533, 8, 533, 15),
woosh.Token(woosh.OP, ':', 533, 18, 533, 19),
woosh.Token(woosh.STRING, "'text/x-sgml'", 533, 20, 533, 33),
woosh.Token(woosh.OP, ',', 533, 33, 533, 34),
woosh.Token(woosh.STRING, "'.vcf'", 534, 8, 534, 14),
woosh.Token(woosh.OP, ':', 534, 18, 534, 19),
woosh.Token(woosh.STRING, "'text/x-vcard'", 534, 20, 534, 34),
woosh.Token(woosh.OP, ',', 534, 34, 534, 35),
woosh.Token(woosh.STRING, "'.xml'", 535, 8, 535, 14),
woosh.Token(woosh.OP, ':', 535, 18, 535, 19),
woosh.Token(woosh.STRING, "'text/xml'", 535, 20, 535, 30),
woosh.Token(woosh.OP, ',', 535, 30, 535, 31),
woosh.Token(woosh.STRING, "'.mp4'", 536, 8, 536, 14),
woosh.Token(woosh.OP, ':', 536, 18, 536, 19),
woosh.Token(woosh.STRING, "'video/mp4'", 536, 20, 536, 31),
woosh.Token(woosh.OP, ',', 536, 31, 536, 32),
woosh.Token(woosh.STRING, "'.mpeg'", 537, 8, 537, 15),
woosh.Token(woosh.OP, ':', 537, 18, 537, 19),
woosh.Token(woosh.STRING, "'video/mpeg'", 537, 20, 537, 32),
woosh.Token(woosh.OP, ',', 537, 32, 537, 33),
woosh.Token(woosh.STRING, "'.m1v'", 538, 8, 538, 14),
woosh.Token(woosh.OP, ':', 538, 18, 538, 19),
woosh.Token(woosh.STRING, "'video/mpeg'", 538, 20, 538, 32),
woosh.Token(woosh.OP, ',', 538, 32, 538, 33),
woosh.Token(woosh.STRING, "'.mpa'", 539, 8, 539, 14),
woosh.Token(woosh.OP, ':', 539, 18, 539, 19),
woosh.Token(woosh.STRING, "'video/mpeg'", 539, 20, 539, 32),
woosh.Token(woosh.OP, ',', 539, 32, 539, 33),
woosh.Token(woosh.STRING, "'.mpe'", 540, 8, 540, 14),
woosh.Token(woosh.OP, ':', 540, 18, 540, 19),
woosh.Token(woosh.STRING, "'video/mpeg'", 540, 20, 540, 32),
woosh.Token(woosh.OP, ',', 540, 32, 540, 33),
woosh.Token(woosh.STRING, "'.mpg'", 541, 8, 541, 14),
woosh.Token(woosh.OP, ':', 541, 18, 541, 19),
woosh.Token(woosh.STRING, "'video/mpeg'", 541, 20, 541, 32),
woosh.Token(woosh.OP, ',', 541, 32, 541, 33),
woosh.Token(woosh.STRING, "'.mov'", 542, 8, 542, 14),
woosh.Token(woosh.OP, ':', 542, 18, 542, 19),
woosh.Token(woosh.STRING, "'video/quicktime'", 542, 20, 542, 37),
woosh.Token(woosh.OP, ',', 542, 37, 542, 38),
woosh.Token(woosh.STRING, "'.qt'", 543, 8, 543, 13),
woosh.Token(woosh.OP, ':', 543, 18, 543, 19),
woosh.Token(woosh.STRING, "'video/quicktime'", 543, 20, 543, 37),
woosh.Token(woosh.OP, ',', 543, 37, 543, 38),
woosh.Token(woosh.STRING, "'.webm'", 544, 8, 544, 15),
woosh.Token(woosh.OP, ':', 544, 18, 544, 19),
woosh.Token(woosh.STRING, "'video/webm'", 544, 20, 544, 32),
woosh.Token(woosh.OP, ',', 544, 32, 544, 33),
woosh.Token(woosh.STRING, "'.avi'", 545, 8, 545, 14),
woosh.Token(woosh.OP, ':', 545, 18, 545, 19),
woosh.Token(woosh.STRING, "'video/x-msvideo'", 545, 20, 545, 37),
woosh.Token(woosh.OP, ',', 545, 37, 545, 38),
woosh.Token(woosh.STRING, "'.movie'", 546, 8, 546, 16),
woosh.Token(woosh.OP, ':', 546, 18, 546, 19),
woosh.Token(woosh.STRING, "'video/x-sgi-movie'", 546, 20, 546, 39),
woosh.Token(woosh.OP, ',', 546, 39, 546, 40),
woosh.Token(woosh.OP, '}', 547, 8, 547, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 547, 9, 548, 0),
woosh.Token(woosh.COMMENT, '# These are non-standard types, commonly found in the wild.  They will', 549, 4, 549, 74),
woosh.Token(woosh.COMMENT, '# only match if strict=0 flag is given to the API methods.', 550, 4, 550, 62),
woosh.Token(woosh.COMMENT, '# Please sort these too', 552, 4, 552, 27),
woosh.Token(woosh.NAME, 'common_types', 553, 4, 553, 16),
woosh.Token(woosh.OP, '=', 553, 17, 553, 18),
woosh.Token(woosh.NAME, '_common_types_default', 553, 19, 553, 40),
woosh.Token(woosh.OP, '=', 553, 41, 553, 42),
woosh.Token(woosh.OP, '{', 553, 43, 553, 44),
woosh.Token(woosh.STRING, "'.rtf'", 554, 8, 554, 14),
woosh.Token(woosh.OP, ':', 554, 15, 554, 16),
woosh.Token(woosh.STRING, "'application/rtf'", 554, 17, 554, 34),
woosh.Token(woosh.OP, ',', 554, 34, 554, 35),
woosh.Token(woosh.STRING, "'.midi'", 555, 8, 555, 15),
woosh.Token(woosh.OP, ':', 555, 15, 555, 16),
woosh.Token(woosh.STRING, "'audio/midi'", 555, 17, 555, 29),
woosh.Token(woosh.OP, ',', 555, 29, 555, 30),
woosh.Token(woosh.STRING, "'.mid'", 556, 8, 556, 14),
woosh.Token(woosh.OP, ':', 556, 15, 556, 16),
woosh.Token(woosh.STRING, "'audio/midi'", 556, 17, 556, 29),
woosh.Token(woosh.OP, ',', 556, 29, 556, 30),
woosh.Token(woosh.STRING, "'.jpg'", 557, 8, 557, 14),
woosh.Token(woosh.OP, ':', 557, 15, 557, 16),
woosh.Token(woosh.STRING, "'image/jpg'", 557, 17, 557, 28),
woosh.Token(woosh.OP, ',', 557, 28, 557, 29),
woosh.Token(woosh.STRING, "'.pict'", 558, 8, 558, 15),
woosh.Token(woosh.OP, ':', 558, 15, 558, 16),
woosh.Token(woosh.STRING, "'image/pict'", 558, 17, 558, 29),
woosh.Token(woosh.OP, ',', 558, 29, 558, 30),
woosh.Token(woosh.STRING, "'.pct'", 559, 8, 559, 14),
woosh.Token(woosh.OP, ':', 559, 15, 559, 16),
woosh.Token(woosh.STRING, "'image/pict'", 559, 17, 559, 29),
woosh.Token(woosh.OP, ',', 559, 29, 559, 30),
woosh.Token(woosh.STRING, "'.pic'", 560, 8, 560, 14),
woosh.Token(woosh.OP, ':', 560, 15, 560, 16),
woosh.Token(woosh.STRING, "'image/pict'", 560, 17, 560, 29),
woosh.Token(woosh.OP, ',', 560, 29, 560, 30),
woosh.Token(woosh.STRING, "'.xul'", 561, 8, 561, 14),
woosh.Token(woosh.OP, ':', 561, 15, 561, 16),
woosh.Token(woosh.STRING, "'text/xul'", 561, 17, 561, 27),
woosh.Token(woosh.OP, ',', 561, 27, 561, 28),
woosh.Token(woosh.OP, '}', 562, 8, 562, 9),
woosh.Token(woosh.NEWLINE, '\r\n', 562, 9, 563, 0),
woosh.Token(woosh.DEDENT, '', 565, 0, 565, 0),
woosh.Token(woosh.NAME, '_default_mime_types', 565, 0, 565, 19),
woosh.Token(woosh.OP, '(', 565, 19, 565, 20),
woosh.Token(woosh.OP, ')', 565, 20, 565, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 565, 21, 566, 0),
woosh.Token(woosh.NAME, 'def', 568, 0, 568, 3),
woosh.Token(woosh.NAME, '_main', 568, 4, 568, 9),
woosh.Token(woosh.OP, '(', 568, 9, 568, 10),
woosh.Token(woosh.OP, ')', 568, 10, 568, 11),
woosh.Token(woosh.OP, ':', 568, 11, 568, 12),
woosh.Token(woosh.NEWLINE, '\r\n', 568, 12, 569, 0),
woosh.Token(woosh.INDENT, '    ', 569, 0, 569, 4),
woosh.Token(woosh.NAME, 'import', 569, 4, 569, 10),
woosh.Token(woosh.NAME, 'getopt', 569, 11, 569, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 569, 17, 570, 0),
woosh.Token(woosh.NAME, 'USAGE', 571, 4, 571, 9),
woosh.Token(woosh.OP, '=', 571, 10, 571, 11),
woosh.Token(woosh.STRING, '"""\\\r\nUsage: mimetypes.py [options] type\r\n\r\nOptions:\r\n    --help / -h       -- print this message and exit\r\n    --lenient / -l    -- additionally search of some common, but non-standard\r\n                         types.\r\n    --extension / -e  -- guess extension instead of type\r\n\r\nMore than one type argument may be given.\r\n"""', 571, 12, 581, 3),
woosh.Token(woosh.NEWLINE, '\r\n', 581, 3, 582, 0),
woosh.Token(woosh.NAME, 'def', 583, 4, 583, 7),
woosh.Token(woosh.NAME, 'usage', 583, 8, 583, 13),
woosh.Token(woosh.OP, '(', 583, 13, 583, 14),
woosh.Token(woosh.NAME, 'code', 583, 14, 583, 18),
woosh.Token(woosh.OP, ',', 583, 18, 583, 19),
woosh.Token(woosh.NAME, 'msg', 583, 20, 583, 23),
woosh.Token(woosh.OP, '=', 583, 23, 583, 24),
woosh.Token(woosh.STRING, "''", 583, 24, 583, 26),
woosh.Token(woosh.OP, ')', 583, 26, 583, 27),
woosh.Token(woosh.OP, ':', 583, 27, 583, 28),
woosh.Token(woosh.NEWLINE, '\r\n', 583, 28, 584, 0),
woosh.Token(woosh.INDENT, '        ', 584, 0, 584, 8),
woosh.Token(woosh.NAME, 'print', 584, 8, 584, 13),
woosh.Token(woosh.OP, '(', 584, 13, 584, 14),
woosh.Token(woosh.NAME, 'USAGE', 584, 14, 584, 19),
woosh.Token(woosh.OP, ')', 584, 19, 584, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 584, 20, 585, 0),
woosh.Token(woosh.NAME, 'if', 585, 8, 585, 10),
woosh.Token(woosh.NAME, 'msg', 585, 11, 585, 14),
woosh.Token(woosh.OP, ':', 585, 14, 585, 15),
woosh.Token(woosh.NAME, 'print', 585, 16, 585, 21),
woosh.Token(woosh.OP, '(', 585, 21, 585, 22),
woosh.Token(woosh.NAME, 'msg', 585, 22, 585, 25),
woosh.Token(woosh.OP, ')', 585, 25, 585, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 585, 26, 586, 0),
woosh.Token(woosh.NAME, 'sys', 586, 8, 586, 11),
woosh.Token(woosh.OP, '.', 586, 11, 586, 12),
woosh.Token(woosh.NAME, 'exit', 586, 12, 586, 16),
woosh.Token(woosh.OP, '(', 586, 16, 586, 17),
woosh.Token(woosh.NAME, 'code', 586, 17, 586, 21),
woosh.Token(woosh.OP, ')', 586, 21, 586, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 586, 22, 587, 0),
woosh.Token(woosh.DEDENT, '    ', 588, 0, 588, 4),
woosh.Token(woosh.NAME, 'try', 588, 4, 588, 7),
woosh.Token(woosh.OP, ':', 588, 7, 588, 8),
woosh.Token(woosh.NEWLINE, '\r\n', 588, 8, 589, 0),
woosh.Token(woosh.INDENT, '        ', 589, 0, 589, 8),
woosh.Token(woosh.NAME, 'opts', 589, 8, 589, 12),
woosh.Token(woosh.OP, ',', 589, 12, 589, 13),
woosh.Token(woosh.NAME, 'args', 589, 14, 589, 18),
woosh.Token(woosh.OP, '=', 589, 19, 589, 20),
woosh.Token(woosh.NAME, 'getopt', 589, 21, 589, 27),
woosh.Token(woosh.OP, '.', 589, 27, 589, 28),
woosh.Token(woosh.NAME, 'getopt', 589, 28, 589, 34),
woosh.Token(woosh.OP, '(', 589, 34, 589, 35),
woosh.Token(woosh.NAME, 'sys', 589, 35, 589, 38),
woosh.Token(woosh.OP, '.', 589, 38, 589, 39),
woosh.Token(woosh.NAME, 'argv', 589, 39, 589, 43),
woosh.Token(woosh.OP, '[', 589, 43, 589, 44),
woosh.Token(woosh.NUMBER, '1', 589, 44, 589, 45),
woosh.Token(woosh.OP, ':', 589, 45, 589, 46),
woosh.Token(woosh.OP, ']', 589, 46, 589, 47),
woosh.Token(woosh.OP, ',', 589, 47, 589, 48),
woosh.Token(woosh.STRING, "'hle'", 589, 49, 589, 54),
woosh.Token(woosh.OP, ',', 589, 54, 589, 55),
woosh.Token(woosh.OP, '[', 590, 35, 590, 36),
woosh.Token(woosh.STRING, "'help'", 590, 36, 590, 42),
woosh.Token(woosh.OP, ',', 590, 42, 590, 43),
woosh.Token(woosh.STRING, "'lenient'", 590, 44, 590, 53),
woosh.Token(woosh.OP, ',', 590, 53, 590, 54),
woosh.Token(woosh.STRING, "'extension'", 590, 55, 590, 66),
woosh.Token(woosh.OP, ']', 590, 66, 590, 67),
woosh.Token(woosh.OP, ')', 590, 67, 590, 68),
woosh.Token(woosh.NEWLINE, '\r\n', 590, 68, 591, 0),
woosh.Token(woosh.DEDENT, '    ', 591, 0, 591, 4),
woosh.Token(woosh.NAME, 'except', 591, 4, 591, 10),
woosh.Token(woosh.NAME, 'getopt', 591, 11, 591, 17),
woosh.Token(woosh.OP, '.', 591, 17, 591, 18),
woosh.Token(woosh.NAME, 'error', 591, 18, 591, 23),
woosh.Token(woosh.NAME, 'as', 591, 24, 591, 26),
woosh.Token(woosh.NAME, 'msg', 591, 27, 591, 30),
woosh.Token(woosh.OP, ':', 591, 30, 591, 31),
woosh.Token(woosh.NEWLINE, '\r\n', 591, 31, 592, 0),
woosh.Token(woosh.INDENT, '        ', 592, 0, 592, 8),
woosh.Token(woosh.NAME, 'usage', 592, 8, 592, 13),
woosh.Token(woosh.OP, '(', 592, 13, 592, 14),
woosh.Token(woosh.NUMBER, '1', 592, 14, 592, 15),
woosh.Token(woosh.OP, ',', 592, 15, 592, 16),
woosh.Token(woosh.NAME, 'msg', 592, 17, 592, 20),
woosh.Token(woosh.OP, ')', 592, 20, 592, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 592, 21, 593, 0),
woosh.Token(woosh.DEDENT, '    ', 594, 0, 594, 4),
woosh.Token(woosh.NAME, 'strict', 594, 4, 594, 10),
woosh.Token(woosh.OP, '=', 594, 11, 594, 12),
woosh.Token(woosh.NUMBER, '1', 594, 13, 594, 14),
woosh.Token(woosh.NEWLINE, '\r\n', 594, 14, 595, 0),
woosh.Token(woosh.NAME, 'extension', 595, 4, 595, 13),
woosh.Token(woosh.OP, '=', 595, 14, 595, 15),
woosh.Token(woosh.NUMBER, '0', 595, 16, 595, 17),
woosh.Token(woosh.NEWLINE, '\r\n', 595, 17, 596, 0),
woosh.Token(woosh.NAME, 'for', 596, 4, 596, 7),
woosh.Token(woosh.NAME, 'opt', 596, 8, 596, 11),
woosh.Token(woosh.OP, ',', 596, 11, 596, 12),
woosh.Token(woosh.NAME, 'arg', 596, 13, 596, 16),
woosh.Token(woosh.NAME, 'in', 596, 17, 596, 19),
woosh.Token(woosh.NAME, 'opts', 596, 20, 596, 24),
woosh.Token(woosh.OP, ':', 596, 24, 596, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 596, 25, 597, 0),
woosh.Token(woosh.INDENT, '        ', 597, 0, 597, 8),
woosh.Token(woosh.NAME, 'if', 597, 8, 597, 10),
woosh.Token(woosh.NAME, 'opt', 597, 11, 597, 14),
woosh.Token(woosh.NAME, 'in', 597, 15, 597, 17),
woosh.Token(woosh.OP, '(', 597, 18, 597, 19),
woosh.Token(woosh.STRING, "'-h'", 597, 19, 597, 23),
woosh.Token(woosh.OP, ',', 597, 23, 597, 24),
woosh.Token(woosh.STRING, "'--help'", 597, 25, 597, 33),
woosh.Token(woosh.OP, ')', 597, 33, 597, 34),
woosh.Token(woosh.OP, ':', 597, 34, 597, 35),
woosh.Token(woosh.NEWLINE, '\r\n', 597, 35, 598, 0),
woosh.Token(woosh.INDENT, '            ', 598, 0, 598, 12),
woosh.Token(woosh.NAME, 'usage', 598, 12, 598, 17),
woosh.Token(woosh.OP, '(', 598, 17, 598, 18),
woosh.Token(woosh.NUMBER, '0', 598, 18, 598, 19),
woosh.Token(woosh.OP, ')', 598, 19, 598, 20),
woosh.Token(woosh.NEWLINE, '\r\n', 598, 20, 599, 0),
woosh.Token(woosh.DEDENT, '        ', 599, 0, 599, 8),
woosh.Token(woosh.NAME, 'elif', 599, 8, 599, 12),
woosh.Token(woosh.NAME, 'opt', 599, 13, 599, 16),
woosh.Token(woosh.NAME, 'in', 599, 17, 599, 19),
woosh.Token(woosh.OP, '(', 599, 20, 599, 21),
woosh.Token(woosh.STRING, "'-l'", 599, 21, 599, 25),
woosh.Token(woosh.OP, ',', 599, 25, 599, 26),
woosh.Token(woosh.STRING, "'--lenient'", 599, 27, 599, 38),
woosh.Token(woosh.OP, ')', 599, 38, 599, 39),
woosh.Token(woosh.OP, ':', 599, 39, 599, 40),
woosh.Token(woosh.NEWLINE, '\r\n', 599, 40, 600, 0),
woosh.Token(woosh.INDENT, '            ', 600, 0, 600, 12),
woosh.Token(woosh.NAME, 'strict', 600, 12, 600, 18),
woosh.Token(woosh.OP, '=', 600, 19, 600, 20),
woosh.Token(woosh.NUMBER, '0', 600, 21, 600, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 600, 22, 601, 0),
woosh.Token(woosh.DEDENT, '        ', 601, 0, 601, 8),
woosh.Token(woosh.NAME, 'elif', 601, 8, 601, 12),
woosh.Token(woosh.NAME, 'opt', 601, 13, 601, 16),
woosh.Token(woosh.NAME, 'in', 601, 17, 601, 19),
woosh.Token(woosh.OP, '(', 601, 20, 601, 21),
woosh.Token(woosh.STRING, "'-e'", 601, 21, 601, 25),
woosh.Token(woosh.OP, ',', 601, 25, 601, 26),
woosh.Token(woosh.STRING, "'--extension'", 601, 27, 601, 40),
woosh.Token(woosh.OP, ')', 601, 40, 601, 41),
woosh.Token(woosh.OP, ':', 601, 41, 601, 42),
woosh.Token(woosh.NEWLINE, '\r\n', 601, 42, 602, 0),
woosh.Token(woosh.INDENT, '            ', 602, 0, 602, 12),
woosh.Token(woosh.NAME, 'extension', 602, 12, 602, 21),
woosh.Token(woosh.OP, '=', 602, 22, 602, 23),
woosh.Token(woosh.NUMBER, '1', 602, 24, 602, 25),
woosh.Token(woosh.NEWLINE, '\r\n', 602, 25, 603, 0),
woosh.Token(woosh.DEDENT, '    ', 603, 0, 603, 4),
woosh.Token(woosh.DEDENT, '', 603, 4, 603, 4),
woosh.Token(woosh.NAME, 'for', 603, 4, 603, 7),
woosh.Token(woosh.NAME, 'gtype', 603, 8, 603, 13),
woosh.Token(woosh.NAME, 'in', 603, 14, 603, 16),
woosh.Token(woosh.NAME, 'args', 603, 17, 603, 21),
woosh.Token(woosh.OP, ':', 603, 21, 603, 22),
woosh.Token(woosh.NEWLINE, '\r\n', 603, 22, 604, 0),
woosh.Token(woosh.INDENT, '        ', 604, 0, 604, 8),
woosh.Token(woosh.NAME, 'if', 604, 8, 604, 10),
woosh.Token(woosh.NAME, 'extension', 604, 11, 604, 20),
woosh.Token(woosh.OP, ':', 604, 20, 604, 21),
woosh.Token(woosh.NEWLINE, '\r\n', 604, 21, 605, 0),
woosh.Token(woosh.INDENT, '            ', 605, 0, 605, 12),
woosh.Token(woosh.NAME, 'guess', 605, 12, 605, 17),
woosh.Token(woosh.OP, '=', 605, 18, 605, 19),
woosh.Token(woosh.NAME, 'guess_extension', 605, 20, 605, 35),
woosh.Token(woosh.OP, '(', 605, 35, 605, 36),
woosh.Token(woosh.NAME, 'gtype', 605, 36, 605, 41),
woosh.Token(woosh.OP, ',', 605, 41, 605, 42),
woosh.Token(woosh.NAME, 'strict', 605, 43, 605, 49),
woosh.Token(woosh.OP, ')', 605, 49, 605, 50),
woosh.Token(woosh.NEWLINE, '\r\n', 605, 50, 606, 0),
woosh.Token(woosh.NAME, 'if', 606, 12, 606, 14),
woosh.Token(woosh.NAME, 'not', 606, 15, 606, 18),
woosh.Token(woosh.NAME, 'guess', 606, 19, 606, 24),
woosh.Token(woosh.OP, ':', 606, 24, 606, 25),
woosh.Token(woosh.NAME, 'print', 606, 26, 606, 31),
woosh.Token(woosh.OP, '(', 606, 31, 606, 32),
woosh.Token(woosh.STRING, '"I don\'t know anything about type"', 606, 32, 606, 66),
woosh.Token(woosh.OP, ',', 606, 66, 606, 67),
woosh.Token(woosh.NAME, 'gtype', 606, 68, 606, 73),
woosh.Token(woosh.OP, ')', 606, 73, 606, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 606, 74, 607, 0),
woosh.Token(woosh.NAME, 'else', 607, 12, 607, 16),
woosh.Token(woosh.OP, ':', 607, 16, 607, 17),
woosh.Token(woosh.NAME, 'print', 607, 18, 607, 23),
woosh.Token(woosh.OP, '(', 607, 23, 607, 24),
woosh.Token(woosh.NAME, 'guess', 607, 24, 607, 29),
woosh.Token(woosh.OP, ')', 607, 29, 607, 30),
woosh.Token(woosh.NEWLINE, '\r\n', 607, 30, 608, 0),
woosh.Token(woosh.DEDENT, '        ', 608, 0, 608, 8),
woosh.Token(woosh.NAME, 'else', 608, 8, 608, 12),
woosh.Token(woosh.OP, ':', 608, 12, 608, 13),
woosh.Token(woosh.NEWLINE, '\r\n', 608, 13, 609, 0),
woosh.Token(woosh.INDENT, '            ', 609, 0, 609, 12),
woosh.Token(woosh.NAME, 'guess', 609, 12, 609, 17),
woosh.Token(woosh.OP, ',', 609, 17, 609, 18),
woosh.Token(woosh.NAME, 'encoding', 609, 19, 609, 27),
woosh.Token(woosh.OP, '=', 609, 28, 609, 29),
woosh.Token(woosh.NAME, 'guess_type', 609, 30, 609, 40),
woosh.Token(woosh.OP, '(', 609, 40, 609, 41),
woosh.Token(woosh.NAME, 'gtype', 609, 41, 609, 46),
woosh.Token(woosh.OP, ',', 609, 46, 609, 47),
woosh.Token(woosh.NAME, 'strict', 609, 48, 609, 54),
woosh.Token(woosh.OP, ')', 609, 54, 609, 55),
woosh.Token(woosh.NEWLINE, '\r\n', 609, 55, 610, 0),
woosh.Token(woosh.NAME, 'if', 610, 12, 610, 14),
woosh.Token(woosh.NAME, 'not', 610, 15, 610, 18),
woosh.Token(woosh.NAME, 'guess', 610, 19, 610, 24),
woosh.Token(woosh.OP, ':', 610, 24, 610, 25),
woosh.Token(woosh.NAME, 'print', 610, 26, 610, 31),
woosh.Token(woosh.OP, '(', 610, 31, 610, 32),
woosh.Token(woosh.STRING, '"I don\'t know anything about type"', 610, 32, 610, 66),
woosh.Token(woosh.OP, ',', 610, 66, 610, 67),
woosh.Token(woosh.NAME, 'gtype', 610, 68, 610, 73),
woosh.Token(woosh.OP, ')', 610, 73, 610, 74),
woosh.Token(woosh.NEWLINE, '\r\n', 610, 74, 611, 0),
woosh.Token(woosh.NAME, 'else', 611, 12, 611, 16),
woosh.Token(woosh.OP, ':', 611, 16, 611, 17),
woosh.Token(woosh.NAME, 'print', 611, 18, 611, 23),
woosh.Token(woosh.OP, '(', 611, 23, 611, 24),
woosh.Token(woosh.STRING, "'type:'", 611, 24, 611, 31),
woosh.Token(woosh.OP, ',', 611, 31, 611, 32),
woosh.Token(woosh.NAME, 'guess', 611, 33, 611, 38),
woosh.Token(woosh.OP, ',', 611, 38, 611, 39),
woosh.Token(woosh.STRING, "'encoding:'", 611, 40, 611, 51),
woosh.Token(woosh.OP, ',', 611, 51, 611, 52),
woosh.Token(woosh.NAME, 'encoding', 611, 53, 611, 61),
woosh.Token(woosh.OP, ')', 611, 61, 611, 62),
woosh.Token(woosh.NEWLINE, '\r\n', 611, 62, 612, 0),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.DEDENT, '', 614, 0, 614, 0),
woosh.Token(woosh.NAME, 'if', 614, 0, 614, 2),
woosh.Token(woosh.NAME, '__name__', 614, 3, 614, 11),
woosh.Token(woosh.OP, '==', 614, 12, 614, 14),
woosh.Token(woosh.STRING, "'__main__'", 614, 15, 614, 25),
woosh.Token(woosh.OP, ':', 614, 25, 614, 26),
woosh.Token(woosh.NEWLINE, '\r\n', 614, 26, 615, 0),
woosh.Token(woosh.INDENT, '    ', 615, 0, 615, 4),
woosh.Token(woosh.NAME, '_main', 615, 4, 615, 9),
woosh.Token(woosh.OP, '(', 615, 9, 615, 10),
woosh.Token(woosh.OP, ')', 615, 10, 615, 11),
woosh.Token(woosh.NEWLINE, '\r\n', 615, 11, 616, 0),
woosh.Token(woosh.DEDENT, '', 616, 0, 616, 0),
woosh.Token(woosh.EOF, '', 616, 0, 616, 0),
]
