
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../../sample/'
def test():
    with open(SAMPLE_DIR / 'stat.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    for token, expected in zip(tokens, EXPECTED):
        assert token == expected

EXPECTED = [
    woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
    woosh.Token(woosh.STRING, '"""Constants/functions for interpreting results of os.stat() and os.lstat().\r\n\r\nSuggested usage: from stat import *\r\n"""', 1, 0, 4, 3),
    woosh.Token(woosh.NEWLINE, '\r\n', 4, 3, 5, 0),
    woosh.Token(woosh.COMMENT, '# Indices for stat struct members in the tuple returned by os.stat()', 6, 0, 6, 68),
    woosh.Token(woosh.NAME, 'ST_MODE', 8, 0, 8, 7),
    woosh.Token(woosh.OP, '=', 8, 9, 8, 10),
    woosh.Token(woosh.NUMBER, '0', 8, 11, 8, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 8, 12, 9, 0),
    woosh.Token(woosh.NAME, 'ST_INO', 9, 0, 9, 6),
    woosh.Token(woosh.OP, '=', 9, 9, 9, 10),
    woosh.Token(woosh.NUMBER, '1', 9, 11, 9, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 9, 12, 10, 0),
    woosh.Token(woosh.NAME, 'ST_DEV', 10, 0, 10, 6),
    woosh.Token(woosh.OP, '=', 10, 9, 10, 10),
    woosh.Token(woosh.NUMBER, '2', 10, 11, 10, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 10, 12, 11, 0),
    woosh.Token(woosh.NAME, 'ST_NLINK', 11, 0, 11, 8),
    woosh.Token(woosh.OP, '=', 11, 9, 11, 10),
    woosh.Token(woosh.NUMBER, '3', 11, 11, 11, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 11, 12, 12, 0),
    woosh.Token(woosh.NAME, 'ST_UID', 12, 0, 12, 6),
    woosh.Token(woosh.OP, '=', 12, 9, 12, 10),
    woosh.Token(woosh.NUMBER, '4', 12, 11, 12, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 12, 12, 13, 0),
    woosh.Token(woosh.NAME, 'ST_GID', 13, 0, 13, 6),
    woosh.Token(woosh.OP, '=', 13, 9, 13, 10),
    woosh.Token(woosh.NUMBER, '5', 13, 11, 13, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 13, 12, 14, 0),
    woosh.Token(woosh.NAME, 'ST_SIZE', 14, 0, 14, 7),
    woosh.Token(woosh.OP, '=', 14, 9, 14, 10),
    woosh.Token(woosh.NUMBER, '6', 14, 11, 14, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 14, 12, 15, 0),
    woosh.Token(woosh.NAME, 'ST_ATIME', 15, 0, 15, 8),
    woosh.Token(woosh.OP, '=', 15, 9, 15, 10),
    woosh.Token(woosh.NUMBER, '7', 15, 11, 15, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 15, 12, 16, 0),
    woosh.Token(woosh.NAME, 'ST_MTIME', 16, 0, 16, 8),
    woosh.Token(woosh.OP, '=', 16, 9, 16, 10),
    woosh.Token(woosh.NUMBER, '8', 16, 11, 16, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 16, 12, 17, 0),
    woosh.Token(woosh.NAME, 'ST_CTIME', 17, 0, 17, 8),
    woosh.Token(woosh.OP, '=', 17, 9, 17, 10),
    woosh.Token(woosh.NUMBER, '9', 17, 11, 17, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 17, 12, 18, 0),
    woosh.Token(woosh.COMMENT, '# Extract bits from the mode', 19, 0, 19, 28),
    woosh.Token(woosh.NAME, 'def', 21, 0, 21, 3),
    woosh.Token(woosh.NAME, 'S_IMODE', 21, 4, 21, 11),
    woosh.Token(woosh.OP, '(', 21, 11, 21, 12),
    woosh.Token(woosh.NAME, 'mode', 21, 12, 21, 16),
    woosh.Token(woosh.OP, ')', 21, 16, 21, 17),
    woosh.Token(woosh.OP, ':', 21, 17, 21, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 21, 18, 22, 0),
    woosh.Token(woosh.INDENT, '    ', 22, 0, 22, 4),
    woosh.Token(woosh.STRING, '"""Return the portion of the file\'s mode that can be set by\r\n    os.chmod().\r\n    """', 22, 4, 24, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 24, 7, 25, 0),
    woosh.Token(woosh.NAME, 'return', 25, 4, 25, 10),
    woosh.Token(woosh.NAME, 'mode', 25, 11, 25, 15),
    woosh.Token(woosh.OP, '&', 25, 16, 25, 17),
    woosh.Token(woosh.NUMBER, '0o7777', 25, 18, 25, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 25, 24, 26, 0),
    woosh.Token(woosh.DEDENT, '', 27, 0, 27, 0),
    woosh.Token(woosh.NAME, 'def', 27, 0, 27, 3),
    woosh.Token(woosh.NAME, 'S_IFMT', 27, 4, 27, 10),
    woosh.Token(woosh.OP, '(', 27, 10, 27, 11),
    woosh.Token(woosh.NAME, 'mode', 27, 11, 27, 15),
    woosh.Token(woosh.OP, ')', 27, 15, 27, 16),
    woosh.Token(woosh.OP, ':', 27, 16, 27, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 27, 17, 28, 0),
    woosh.Token(woosh.INDENT, '    ', 28, 0, 28, 4),
    woosh.Token(woosh.STRING, '"""Return the portion of the file\'s mode that describes the\r\n    file type.\r\n    """', 28, 4, 30, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 30, 7, 31, 0),
    woosh.Token(woosh.NAME, 'return', 31, 4, 31, 10),
    woosh.Token(woosh.NAME, 'mode', 31, 11, 31, 15),
    woosh.Token(woosh.OP, '&', 31, 16, 31, 17),
    woosh.Token(woosh.NUMBER, '0o170000', 31, 18, 31, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 31, 26, 32, 0),
    woosh.Token(woosh.COMMENT, '# Constants used as S_IFMT() for various file types', 33, 0, 33, 51),
    woosh.Token(woosh.COMMENT, '# (not all are implemented on all systems)', 34, 0, 34, 42),
    woosh.Token(woosh.DEDENT, '', 36, 0, 36, 0),
    woosh.Token(woosh.NAME, 'S_IFDIR', 36, 0, 36, 7),
    woosh.Token(woosh.OP, '=', 36, 9, 36, 10),
    woosh.Token(woosh.NUMBER, '0o040000', 36, 11, 36, 19),
    woosh.Token(woosh.COMMENT, '# directory', 36, 21, 36, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 36, 32, 37, 0),
    woosh.Token(woosh.NAME, 'S_IFCHR', 37, 0, 37, 7),
    woosh.Token(woosh.OP, '=', 37, 9, 37, 10),
    woosh.Token(woosh.NUMBER, '0o020000', 37, 11, 37, 19),
    woosh.Token(woosh.COMMENT, '# character device', 37, 21, 37, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 37, 39, 38, 0),
    woosh.Token(woosh.NAME, 'S_IFBLK', 38, 0, 38, 7),
    woosh.Token(woosh.OP, '=', 38, 9, 38, 10),
    woosh.Token(woosh.NUMBER, '0o060000', 38, 11, 38, 19),
    woosh.Token(woosh.COMMENT, '# block device', 38, 21, 38, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 38, 35, 39, 0),
    woosh.Token(woosh.NAME, 'S_IFREG', 39, 0, 39, 7),
    woosh.Token(woosh.OP, '=', 39, 9, 39, 10),
    woosh.Token(woosh.NUMBER, '0o100000', 39, 11, 39, 19),
    woosh.Token(woosh.COMMENT, '# regular file', 39, 21, 39, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 39, 35, 40, 0),
    woosh.Token(woosh.NAME, 'S_IFIFO', 40, 0, 40, 7),
    woosh.Token(woosh.OP, '=', 40, 9, 40, 10),
    woosh.Token(woosh.NUMBER, '0o010000', 40, 11, 40, 19),
    woosh.Token(woosh.COMMENT, '# fifo (named pipe)', 40, 21, 40, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 40, 40, 41, 0),
    woosh.Token(woosh.NAME, 'S_IFLNK', 41, 0, 41, 7),
    woosh.Token(woosh.OP, '=', 41, 9, 41, 10),
    woosh.Token(woosh.NUMBER, '0o120000', 41, 11, 41, 19),
    woosh.Token(woosh.COMMENT, '# symbolic link', 41, 21, 41, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 41, 36, 42, 0),
    woosh.Token(woosh.NAME, 'S_IFSOCK', 42, 0, 42, 8),
    woosh.Token(woosh.OP, '=', 42, 9, 42, 10),
    woosh.Token(woosh.NUMBER, '0o140000', 42, 11, 42, 19),
    woosh.Token(woosh.COMMENT, '# socket file', 42, 21, 42, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 42, 34, 43, 0),
    woosh.Token(woosh.COMMENT, '# Fallbacks for uncommon platform-specific constants', 43, 0, 43, 52),
    woosh.Token(woosh.NAME, 'S_IFDOOR', 44, 0, 44, 8),
    woosh.Token(woosh.OP, '=', 44, 9, 44, 10),
    woosh.Token(woosh.NUMBER, '0', 44, 11, 44, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 44, 12, 45, 0),
    woosh.Token(woosh.NAME, 'S_IFPORT', 45, 0, 45, 8),
    woosh.Token(woosh.OP, '=', 45, 9, 45, 10),
    woosh.Token(woosh.NUMBER, '0', 45, 11, 45, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 45, 12, 46, 0),
    woosh.Token(woosh.NAME, 'S_IFWHT', 46, 0, 46, 7),
    woosh.Token(woosh.OP, '=', 46, 8, 46, 9),
    woosh.Token(woosh.NUMBER, '0', 46, 10, 46, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 46, 11, 47, 0),
    woosh.Token(woosh.COMMENT, '# Functions to test for each file type', 48, 0, 48, 38),
    woosh.Token(woosh.NAME, 'def', 50, 0, 50, 3),
    woosh.Token(woosh.NAME, 'S_ISDIR', 50, 4, 50, 11),
    woosh.Token(woosh.OP, '(', 50, 11, 50, 12),
    woosh.Token(woosh.NAME, 'mode', 50, 12, 50, 16),
    woosh.Token(woosh.OP, ')', 50, 16, 50, 17),
    woosh.Token(woosh.OP, ':', 50, 17, 50, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 50, 18, 51, 0),
    woosh.Token(woosh.INDENT, '    ', 51, 0, 51, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a directory."""', 51, 4, 51, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 51, 50, 52, 0),
    woosh.Token(woosh.NAME, 'return', 52, 4, 52, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 52, 11, 52, 17),
    woosh.Token(woosh.OP, '(', 52, 17, 52, 18),
    woosh.Token(woosh.NAME, 'mode', 52, 18, 52, 22),
    woosh.Token(woosh.OP, ')', 52, 22, 52, 23),
    woosh.Token(woosh.OP, '==', 52, 24, 52, 26),
    woosh.Token(woosh.NAME, 'S_IFDIR', 52, 27, 52, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 52, 34, 53, 0),
    woosh.Token(woosh.DEDENT, '', 54, 0, 54, 0),
    woosh.Token(woosh.NAME, 'def', 54, 0, 54, 3),
    woosh.Token(woosh.NAME, 'S_ISCHR', 54, 4, 54, 11),
    woosh.Token(woosh.OP, '(', 54, 11, 54, 12),
    woosh.Token(woosh.NAME, 'mode', 54, 12, 54, 16),
    woosh.Token(woosh.OP, ')', 54, 16, 54, 17),
    woosh.Token(woosh.OP, ':', 54, 17, 54, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 54, 18, 55, 0),
    woosh.Token(woosh.INDENT, '    ', 55, 0, 55, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a character special device file."""', 55, 4, 55, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 55, 70, 56, 0),
    woosh.Token(woosh.NAME, 'return', 56, 4, 56, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 56, 11, 56, 17),
    woosh.Token(woosh.OP, '(', 56, 17, 56, 18),
    woosh.Token(woosh.NAME, 'mode', 56, 18, 56, 22),
    woosh.Token(woosh.OP, ')', 56, 22, 56, 23),
    woosh.Token(woosh.OP, '==', 56, 24, 56, 26),
    woosh.Token(woosh.NAME, 'S_IFCHR', 56, 27, 56, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 56, 34, 57, 0),
    woosh.Token(woosh.DEDENT, '', 58, 0, 58, 0),
    woosh.Token(woosh.NAME, 'def', 58, 0, 58, 3),
    woosh.Token(woosh.NAME, 'S_ISBLK', 58, 4, 58, 11),
    woosh.Token(woosh.OP, '(', 58, 11, 58, 12),
    woosh.Token(woosh.NAME, 'mode', 58, 12, 58, 16),
    woosh.Token(woosh.OP, ')', 58, 16, 58, 17),
    woosh.Token(woosh.OP, ':', 58, 17, 58, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 58, 18, 59, 0),
    woosh.Token(woosh.INDENT, '    ', 59, 0, 59, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a block special device file."""', 59, 4, 59, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 59, 66, 60, 0),
    woosh.Token(woosh.NAME, 'return', 60, 4, 60, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 60, 11, 60, 17),
    woosh.Token(woosh.OP, '(', 60, 17, 60, 18),
    woosh.Token(woosh.NAME, 'mode', 60, 18, 60, 22),
    woosh.Token(woosh.OP, ')', 60, 22, 60, 23),
    woosh.Token(woosh.OP, '==', 60, 24, 60, 26),
    woosh.Token(woosh.NAME, 'S_IFBLK', 60, 27, 60, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 60, 34, 61, 0),
    woosh.Token(woosh.DEDENT, '', 62, 0, 62, 0),
    woosh.Token(woosh.NAME, 'def', 62, 0, 62, 3),
    woosh.Token(woosh.NAME, 'S_ISREG', 62, 4, 62, 11),
    woosh.Token(woosh.OP, '(', 62, 11, 62, 12),
    woosh.Token(woosh.NAME, 'mode', 62, 12, 62, 16),
    woosh.Token(woosh.OP, ')', 62, 16, 62, 17),
    woosh.Token(woosh.OP, ':', 62, 17, 62, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 62, 18, 63, 0),
    woosh.Token(woosh.INDENT, '    ', 63, 0, 63, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a regular file."""', 63, 4, 63, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 63, 53, 64, 0),
    woosh.Token(woosh.NAME, 'return', 64, 4, 64, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 64, 11, 64, 17),
    woosh.Token(woosh.OP, '(', 64, 17, 64, 18),
    woosh.Token(woosh.NAME, 'mode', 64, 18, 64, 22),
    woosh.Token(woosh.OP, ')', 64, 22, 64, 23),
    woosh.Token(woosh.OP, '==', 64, 24, 64, 26),
    woosh.Token(woosh.NAME, 'S_IFREG', 64, 27, 64, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 64, 34, 65, 0),
    woosh.Token(woosh.DEDENT, '', 66, 0, 66, 0),
    woosh.Token(woosh.NAME, 'def', 66, 0, 66, 3),
    woosh.Token(woosh.NAME, 'S_ISFIFO', 66, 4, 66, 12),
    woosh.Token(woosh.OP, '(', 66, 12, 66, 13),
    woosh.Token(woosh.NAME, 'mode', 66, 13, 66, 17),
    woosh.Token(woosh.OP, ')', 66, 17, 66, 18),
    woosh.Token(woosh.OP, ':', 66, 18, 66, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 66, 19, 67, 0),
    woosh.Token(woosh.INDENT, '    ', 67, 0, 67, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a FIFO (named pipe)."""', 67, 4, 67, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 67, 58, 68, 0),
    woosh.Token(woosh.NAME, 'return', 68, 4, 68, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 68, 11, 68, 17),
    woosh.Token(woosh.OP, '(', 68, 17, 68, 18),
    woosh.Token(woosh.NAME, 'mode', 68, 18, 68, 22),
    woosh.Token(woosh.OP, ')', 68, 22, 68, 23),
    woosh.Token(woosh.OP, '==', 68, 24, 68, 26),
    woosh.Token(woosh.NAME, 'S_IFIFO', 68, 27, 68, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 68, 34, 69, 0),
    woosh.Token(woosh.DEDENT, '', 70, 0, 70, 0),
    woosh.Token(woosh.NAME, 'def', 70, 0, 70, 3),
    woosh.Token(woosh.NAME, 'S_ISLNK', 70, 4, 70, 11),
    woosh.Token(woosh.OP, '(', 70, 11, 70, 12),
    woosh.Token(woosh.NAME, 'mode', 70, 12, 70, 16),
    woosh.Token(woosh.OP, ')', 70, 16, 70, 17),
    woosh.Token(woosh.OP, ':', 70, 17, 70, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 70, 18, 71, 0),
    woosh.Token(woosh.INDENT, '    ', 71, 0, 71, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a symbolic link."""', 71, 4, 71, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 71, 54, 72, 0),
    woosh.Token(woosh.NAME, 'return', 72, 4, 72, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 72, 11, 72, 17),
    woosh.Token(woosh.OP, '(', 72, 17, 72, 18),
    woosh.Token(woosh.NAME, 'mode', 72, 18, 72, 22),
    woosh.Token(woosh.OP, ')', 72, 22, 72, 23),
    woosh.Token(woosh.OP, '==', 72, 24, 72, 26),
    woosh.Token(woosh.NAME, 'S_IFLNK', 72, 27, 72, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 72, 34, 73, 0),
    woosh.Token(woosh.DEDENT, '', 74, 0, 74, 0),
    woosh.Token(woosh.NAME, 'def', 74, 0, 74, 3),
    woosh.Token(woosh.NAME, 'S_ISSOCK', 74, 4, 74, 12),
    woosh.Token(woosh.OP, '(', 74, 12, 74, 13),
    woosh.Token(woosh.NAME, 'mode', 74, 13, 74, 17),
    woosh.Token(woosh.OP, ')', 74, 17, 74, 18),
    woosh.Token(woosh.OP, ':', 74, 18, 74, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 74, 19, 75, 0),
    woosh.Token(woosh.INDENT, '    ', 75, 0, 75, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a socket."""', 75, 4, 75, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 75, 47, 76, 0),
    woosh.Token(woosh.NAME, 'return', 76, 4, 76, 10),
    woosh.Token(woosh.NAME, 'S_IFMT', 76, 11, 76, 17),
    woosh.Token(woosh.OP, '(', 76, 17, 76, 18),
    woosh.Token(woosh.NAME, 'mode', 76, 18, 76, 22),
    woosh.Token(woosh.OP, ')', 76, 22, 76, 23),
    woosh.Token(woosh.OP, '==', 76, 24, 76, 26),
    woosh.Token(woosh.NAME, 'S_IFSOCK', 76, 27, 76, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 76, 35, 77, 0),
    woosh.Token(woosh.DEDENT, '', 78, 0, 78, 0),
    woosh.Token(woosh.NAME, 'def', 78, 0, 78, 3),
    woosh.Token(woosh.NAME, 'S_ISDOOR', 78, 4, 78, 12),
    woosh.Token(woosh.OP, '(', 78, 12, 78, 13),
    woosh.Token(woosh.NAME, 'mode', 78, 13, 78, 17),
    woosh.Token(woosh.OP, ')', 78, 17, 78, 18),
    woosh.Token(woosh.OP, ':', 78, 18, 78, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 78, 19, 79, 0),
    woosh.Token(woosh.INDENT, '    ', 79, 0, 79, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a door."""', 79, 4, 79, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 79, 45, 80, 0),
    woosh.Token(woosh.NAME, 'return', 80, 4, 80, 10),
    woosh.Token(woosh.NAME, 'False', 80, 11, 80, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 80, 16, 81, 0),
    woosh.Token(woosh.DEDENT, '', 82, 0, 82, 0),
    woosh.Token(woosh.NAME, 'def', 82, 0, 82, 3),
    woosh.Token(woosh.NAME, 'S_ISPORT', 82, 4, 82, 12),
    woosh.Token(woosh.OP, '(', 82, 12, 82, 13),
    woosh.Token(woosh.NAME, 'mode', 82, 13, 82, 17),
    woosh.Token(woosh.OP, ')', 82, 17, 82, 18),
    woosh.Token(woosh.OP, ':', 82, 18, 82, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 82, 19, 83, 0),
    woosh.Token(woosh.INDENT, '    ', 83, 0, 83, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from an event port."""', 83, 4, 83, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 83, 52, 84, 0),
    woosh.Token(woosh.NAME, 'return', 84, 4, 84, 10),
    woosh.Token(woosh.NAME, 'False', 84, 11, 84, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 84, 16, 85, 0),
    woosh.Token(woosh.DEDENT, '', 86, 0, 86, 0),
    woosh.Token(woosh.NAME, 'def', 86, 0, 86, 3),
    woosh.Token(woosh.NAME, 'S_ISWHT', 86, 4, 86, 11),
    woosh.Token(woosh.OP, '(', 86, 11, 86, 12),
    woosh.Token(woosh.NAME, 'mode', 86, 12, 86, 16),
    woosh.Token(woosh.OP, ')', 86, 16, 86, 17),
    woosh.Token(woosh.OP, ':', 86, 17, 86, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 86, 18, 87, 0),
    woosh.Token(woosh.INDENT, '    ', 87, 0, 87, 4),
    woosh.Token(woosh.STRING, '"""Return True if mode is from a whiteout."""', 87, 4, 87, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 87, 49, 88, 0),
    woosh.Token(woosh.NAME, 'return', 88, 4, 88, 10),
    woosh.Token(woosh.NAME, 'False', 88, 11, 88, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 88, 16, 89, 0),
    woosh.Token(woosh.COMMENT, '# Names for permission bits', 90, 0, 90, 27),
    woosh.Token(woosh.DEDENT, '', 92, 0, 92, 0),
    woosh.Token(woosh.NAME, 'S_ISUID', 92, 0, 92, 7),
    woosh.Token(woosh.OP, '=', 92, 8, 92, 9),
    woosh.Token(woosh.NUMBER, '0o4000', 92, 10, 92, 16),
    woosh.Token(woosh.COMMENT, '# set UID bit', 92, 18, 92, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 92, 31, 93, 0),
    woosh.Token(woosh.NAME, 'S_ISGID', 93, 0, 93, 7),
    woosh.Token(woosh.OP, '=', 93, 8, 93, 9),
    woosh.Token(woosh.NUMBER, '0o2000', 93, 10, 93, 16),
    woosh.Token(woosh.COMMENT, '# set GID bit', 93, 18, 93, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 93, 31, 94, 0),
    woosh.Token(woosh.NAME, 'S_ENFMT', 94, 0, 94, 7),
    woosh.Token(woosh.OP, '=', 94, 8, 94, 9),
    woosh.Token(woosh.NAME, 'S_ISGID', 94, 10, 94, 17),
    woosh.Token(woosh.COMMENT, '# file locking enforcement', 94, 18, 94, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 94, 44, 95, 0),
    woosh.Token(woosh.NAME, 'S_ISVTX', 95, 0, 95, 7),
    woosh.Token(woosh.OP, '=', 95, 8, 95, 9),
    woosh.Token(woosh.NUMBER, '0o1000', 95, 10, 95, 16),
    woosh.Token(woosh.COMMENT, '# sticky bit', 95, 18, 95, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 95, 30, 96, 0),
    woosh.Token(woosh.NAME, 'S_IREAD', 96, 0, 96, 7),
    woosh.Token(woosh.OP, '=', 96, 8, 96, 9),
    woosh.Token(woosh.NUMBER, '0o0400', 96, 10, 96, 16),
    woosh.Token(woosh.COMMENT, '# Unix V7 synonym for S_IRUSR', 96, 18, 96, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 96, 47, 97, 0),
    woosh.Token(woosh.NAME, 'S_IWRITE', 97, 0, 97, 8),
    woosh.Token(woosh.OP, '=', 97, 9, 97, 10),
    woosh.Token(woosh.NUMBER, '0o0200', 97, 11, 97, 17),
    woosh.Token(woosh.COMMENT, '# Unix V7 synonym for S_IWUSR', 97, 18, 97, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 97, 47, 98, 0),
    woosh.Token(woosh.NAME, 'S_IEXEC', 98, 0, 98, 7),
    woosh.Token(woosh.OP, '=', 98, 8, 98, 9),
    woosh.Token(woosh.NUMBER, '0o0100', 98, 10, 98, 16),
    woosh.Token(woosh.COMMENT, '# Unix V7 synonym for S_IXUSR', 98, 18, 98, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 98, 47, 99, 0),
    woosh.Token(woosh.NAME, 'S_IRWXU', 99, 0, 99, 7),
    woosh.Token(woosh.OP, '=', 99, 8, 99, 9),
    woosh.Token(woosh.NUMBER, '0o0700', 99, 10, 99, 16),
    woosh.Token(woosh.COMMENT, '# mask for owner permissions', 99, 18, 99, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 99, 46, 100, 0),
    woosh.Token(woosh.NAME, 'S_IRUSR', 100, 0, 100, 7),
    woosh.Token(woosh.OP, '=', 100, 8, 100, 9),
    woosh.Token(woosh.NUMBER, '0o0400', 100, 10, 100, 16),
    woosh.Token(woosh.COMMENT, '# read by owner', 100, 18, 100, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 100, 33, 101, 0),
    woosh.Token(woosh.NAME, 'S_IWUSR', 101, 0, 101, 7),
    woosh.Token(woosh.OP, '=', 101, 8, 101, 9),
    woosh.Token(woosh.NUMBER, '0o0200', 101, 10, 101, 16),
    woosh.Token(woosh.COMMENT, '# write by owner', 101, 18, 101, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 101, 34, 102, 0),
    woosh.Token(woosh.NAME, 'S_IXUSR', 102, 0, 102, 7),
    woosh.Token(woosh.OP, '=', 102, 8, 102, 9),
    woosh.Token(woosh.NUMBER, '0o0100', 102, 10, 102, 16),
    woosh.Token(woosh.COMMENT, '# execute by owner', 102, 18, 102, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 102, 36, 103, 0),
    woosh.Token(woosh.NAME, 'S_IRWXG', 103, 0, 103, 7),
    woosh.Token(woosh.OP, '=', 103, 8, 103, 9),
    woosh.Token(woosh.NUMBER, '0o0070', 103, 10, 103, 16),
    woosh.Token(woosh.COMMENT, '# mask for group permissions', 103, 18, 103, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 103, 46, 104, 0),
    woosh.Token(woosh.NAME, 'S_IRGRP', 104, 0, 104, 7),
    woosh.Token(woosh.OP, '=', 104, 8, 104, 9),
    woosh.Token(woosh.NUMBER, '0o0040', 104, 10, 104, 16),
    woosh.Token(woosh.COMMENT, '# read by group', 104, 18, 104, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 104, 33, 105, 0),
    woosh.Token(woosh.NAME, 'S_IWGRP', 105, 0, 105, 7),
    woosh.Token(woosh.OP, '=', 105, 8, 105, 9),
    woosh.Token(woosh.NUMBER, '0o0020', 105, 10, 105, 16),
    woosh.Token(woosh.COMMENT, '# write by group', 105, 18, 105, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 105, 34, 106, 0),
    woosh.Token(woosh.NAME, 'S_IXGRP', 106, 0, 106, 7),
    woosh.Token(woosh.OP, '=', 106, 8, 106, 9),
    woosh.Token(woosh.NUMBER, '0o0010', 106, 10, 106, 16),
    woosh.Token(woosh.COMMENT, '# execute by group', 106, 18, 106, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 106, 36, 107, 0),
    woosh.Token(woosh.NAME, 'S_IRWXO', 107, 0, 107, 7),
    woosh.Token(woosh.OP, '=', 107, 8, 107, 9),
    woosh.Token(woosh.NUMBER, '0o0007', 107, 10, 107, 16),
    woosh.Token(woosh.COMMENT, '# mask for others (not in group) permissions', 107, 18, 107, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 107, 62, 108, 0),
    woosh.Token(woosh.NAME, 'S_IROTH', 108, 0, 108, 7),
    woosh.Token(woosh.OP, '=', 108, 8, 108, 9),
    woosh.Token(woosh.NUMBER, '0o0004', 108, 10, 108, 16),
    woosh.Token(woosh.COMMENT, '# read by others', 108, 18, 108, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 108, 34, 109, 0),
    woosh.Token(woosh.NAME, 'S_IWOTH', 109, 0, 109, 7),
    woosh.Token(woosh.OP, '=', 109, 8, 109, 9),
    woosh.Token(woosh.NUMBER, '0o0002', 109, 10, 109, 16),
    woosh.Token(woosh.COMMENT, '# write by others', 109, 18, 109, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 109, 35, 110, 0),
    woosh.Token(woosh.NAME, 'S_IXOTH', 110, 0, 110, 7),
    woosh.Token(woosh.OP, '=', 110, 8, 110, 9),
    woosh.Token(woosh.NUMBER, '0o0001', 110, 10, 110, 16),
    woosh.Token(woosh.COMMENT, '# execute by others', 110, 18, 110, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 110, 37, 111, 0),
    woosh.Token(woosh.COMMENT, '# Names for file flags', 112, 0, 112, 22),
    woosh.Token(woosh.NAME, 'UF_NODUMP', 114, 0, 114, 9),
    woosh.Token(woosh.OP, '=', 114, 13, 114, 14),
    woosh.Token(woosh.NUMBER, '0x00000001', 114, 15, 114, 25),
    woosh.Token(woosh.COMMENT, '# do not dump file', 114, 27, 114, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 114, 45, 115, 0),
    woosh.Token(woosh.NAME, 'UF_IMMUTABLE', 115, 0, 115, 12),
    woosh.Token(woosh.OP, '=', 115, 13, 115, 14),
    woosh.Token(woosh.NUMBER, '0x00000002', 115, 15, 115, 25),
    woosh.Token(woosh.COMMENT, '# file may not be changed', 115, 27, 115, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 115, 52, 116, 0),
    woosh.Token(woosh.NAME, 'UF_APPEND', 116, 0, 116, 9),
    woosh.Token(woosh.OP, '=', 116, 13, 116, 14),
    woosh.Token(woosh.NUMBER, '0x00000004', 116, 15, 116, 25),
    woosh.Token(woosh.COMMENT, '# file may only be appended to', 116, 27, 116, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 116, 57, 117, 0),
    woosh.Token(woosh.NAME, 'UF_OPAQUE', 117, 0, 117, 9),
    woosh.Token(woosh.OP, '=', 117, 13, 117, 14),
    woosh.Token(woosh.NUMBER, '0x00000008', 117, 15, 117, 25),
    woosh.Token(woosh.COMMENT, '# directory is opaque when viewed through a union stack', 117, 27, 117, 82),
    woosh.Token(woosh.NEWLINE, '\r\n', 117, 82, 118, 0),
    woosh.Token(woosh.NAME, 'UF_NOUNLINK', 118, 0, 118, 11),
    woosh.Token(woosh.OP, '=', 118, 13, 118, 14),
    woosh.Token(woosh.NUMBER, '0x00000010', 118, 15, 118, 25),
    woosh.Token(woosh.COMMENT, '# file may not be renamed or deleted', 118, 27, 118, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 118, 63, 119, 0),
    woosh.Token(woosh.NAME, 'UF_COMPRESSED', 119, 0, 119, 13),
    woosh.Token(woosh.OP, '=', 119, 14, 119, 15),
    woosh.Token(woosh.NUMBER, '0x00000020', 119, 16, 119, 26),
    woosh.Token(woosh.COMMENT, '# OS X: file is hfs-compressed', 119, 27, 119, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 119, 57, 120, 0),
    woosh.Token(woosh.NAME, 'UF_HIDDEN', 120, 0, 120, 9),
    woosh.Token(woosh.OP, '=', 120, 13, 120, 14),
    woosh.Token(woosh.NUMBER, '0x00008000', 120, 15, 120, 25),
    woosh.Token(woosh.COMMENT, '# OS X: file should not be displayed', 120, 27, 120, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 120, 63, 121, 0),
    woosh.Token(woosh.NAME, 'SF_ARCHIVED', 121, 0, 121, 11),
    woosh.Token(woosh.OP, '=', 121, 13, 121, 14),
    woosh.Token(woosh.NUMBER, '0x00010000', 121, 15, 121, 25),
    woosh.Token(woosh.COMMENT, '# file may be archived', 121, 27, 121, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 121, 49, 122, 0),
    woosh.Token(woosh.NAME, 'SF_IMMUTABLE', 122, 0, 122, 12),
    woosh.Token(woosh.OP, '=', 122, 13, 122, 14),
    woosh.Token(woosh.NUMBER, '0x00020000', 122, 15, 122, 25),
    woosh.Token(woosh.COMMENT, '# file may not be changed', 122, 27, 122, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 122, 52, 123, 0),
    woosh.Token(woosh.NAME, 'SF_APPEND', 123, 0, 123, 9),
    woosh.Token(woosh.OP, '=', 123, 13, 123, 14),
    woosh.Token(woosh.NUMBER, '0x00040000', 123, 15, 123, 25),
    woosh.Token(woosh.COMMENT, '# file may only be appended to', 123, 27, 123, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 123, 57, 124, 0),
    woosh.Token(woosh.NAME, 'SF_NOUNLINK', 124, 0, 124, 11),
    woosh.Token(woosh.OP, '=', 124, 13, 124, 14),
    woosh.Token(woosh.NUMBER, '0x00100000', 124, 15, 124, 25),
    woosh.Token(woosh.COMMENT, '# file may not be renamed or deleted', 124, 27, 124, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 124, 63, 125, 0),
    woosh.Token(woosh.NAME, 'SF_SNAPSHOT', 125, 0, 125, 11),
    woosh.Token(woosh.OP, '=', 125, 13, 125, 14),
    woosh.Token(woosh.NUMBER, '0x00200000', 125, 15, 125, 25),
    woosh.Token(woosh.COMMENT, '# file is a snapshot file', 125, 27, 125, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 125, 52, 126, 0),
    woosh.Token(woosh.NAME, '_filemode_table', 128, 0, 128, 15),
    woosh.Token(woosh.OP, '=', 128, 16, 128, 17),
    woosh.Token(woosh.OP, '(', 128, 18, 128, 19),
    woosh.Token(woosh.OP, '(', 129, 4, 129, 5),
    woosh.Token(woosh.OP, '(', 129, 5, 129, 6),
    woosh.Token(woosh.NAME, 'S_IFLNK', 129, 6, 129, 13),
    woosh.Token(woosh.OP, ',', 129, 13, 129, 14),
    woosh.Token(woosh.STRING, '"l"', 129, 23, 129, 26),
    woosh.Token(woosh.OP, ')', 129, 26, 129, 27),
    woosh.Token(woosh.OP, ',', 129, 27, 129, 28),
    woosh.Token(woosh.OP, '(', 130, 5, 130, 6),
    woosh.Token(woosh.NAME, 'S_IFSOCK', 130, 6, 130, 14),
    woosh.Token(woosh.OP, ',', 130, 14, 130, 15),
    woosh.Token(woosh.STRING, '"s"', 130, 23, 130, 26),
    woosh.Token(woosh.OP, ')', 130, 26, 130, 27),
    woosh.Token(woosh.OP, ',', 130, 27, 130, 28),
    woosh.Token(woosh.COMMENT, '# Must appear before IFREG and IFDIR as IFSOCK == IFREG | IFDIR', 130, 30, 130, 93),
    woosh.Token(woosh.OP, '(', 131, 5, 131, 6),
    woosh.Token(woosh.NAME, 'S_IFREG', 131, 6, 131, 13),
    woosh.Token(woosh.OP, ',', 131, 13, 131, 14),
    woosh.Token(woosh.STRING, '"-"', 131, 23, 131, 26),
    woosh.Token(woosh.OP, ')', 131, 26, 131, 27),
    woosh.Token(woosh.OP, ',', 131, 27, 131, 28),
    woosh.Token(woosh.OP, '(', 132, 5, 132, 6),
    woosh.Token(woosh.NAME, 'S_IFBLK', 132, 6, 132, 13),
    woosh.Token(woosh.OP, ',', 132, 13, 132, 14),
    woosh.Token(woosh.STRING, '"b"', 132, 23, 132, 26),
    woosh.Token(woosh.OP, ')', 132, 26, 132, 27),
    woosh.Token(woosh.OP, ',', 132, 27, 132, 28),
    woosh.Token(woosh.OP, '(', 133, 5, 133, 6),
    woosh.Token(woosh.NAME, 'S_IFDIR', 133, 6, 133, 13),
    woosh.Token(woosh.OP, ',', 133, 13, 133, 14),
    woosh.Token(woosh.STRING, '"d"', 133, 23, 133, 26),
    woosh.Token(woosh.OP, ')', 133, 26, 133, 27),
    woosh.Token(woosh.OP, ',', 133, 27, 133, 28),
    woosh.Token(woosh.OP, '(', 134, 5, 134, 6),
    woosh.Token(woosh.NAME, 'S_IFCHR', 134, 6, 134, 13),
    woosh.Token(woosh.OP, ',', 134, 13, 134, 14),
    woosh.Token(woosh.STRING, '"c"', 134, 23, 134, 26),
    woosh.Token(woosh.OP, ')', 134, 26, 134, 27),
    woosh.Token(woosh.OP, ',', 134, 27, 134, 28),
    woosh.Token(woosh.OP, '(', 135, 5, 135, 6),
    woosh.Token(woosh.NAME, 'S_IFIFO', 135, 6, 135, 13),
    woosh.Token(woosh.OP, ',', 135, 13, 135, 14),
    woosh.Token(woosh.STRING, '"p"', 135, 23, 135, 26),
    woosh.Token(woosh.OP, ')', 135, 26, 135, 27),
    woosh.Token(woosh.OP, ')', 135, 27, 135, 28),
    woosh.Token(woosh.OP, ',', 135, 28, 135, 29),
    woosh.Token(woosh.OP, '(', 137, 4, 137, 5),
    woosh.Token(woosh.OP, '(', 137, 5, 137, 6),
    woosh.Token(woosh.NAME, 'S_IRUSR', 137, 6, 137, 13),
    woosh.Token(woosh.OP, ',', 137, 13, 137, 14),
    woosh.Token(woosh.STRING, '"r"', 137, 23, 137, 26),
    woosh.Token(woosh.OP, ')', 137, 26, 137, 27),
    woosh.Token(woosh.OP, ',', 137, 27, 137, 28),
    woosh.Token(woosh.OP, ')', 137, 28, 137, 29),
    woosh.Token(woosh.OP, ',', 137, 29, 137, 30),
    woosh.Token(woosh.OP, '(', 138, 4, 138, 5),
    woosh.Token(woosh.OP, '(', 138, 5, 138, 6),
    woosh.Token(woosh.NAME, 'S_IWUSR', 138, 6, 138, 13),
    woosh.Token(woosh.OP, ',', 138, 13, 138, 14),
    woosh.Token(woosh.STRING, '"w"', 138, 23, 138, 26),
    woosh.Token(woosh.OP, ')', 138, 26, 138, 27),
    woosh.Token(woosh.OP, ',', 138, 27, 138, 28),
    woosh.Token(woosh.OP, ')', 138, 28, 138, 29),
    woosh.Token(woosh.OP, ',', 138, 29, 138, 30),
    woosh.Token(woosh.OP, '(', 139, 4, 139, 5),
    woosh.Token(woosh.OP, '(', 139, 5, 139, 6),
    woosh.Token(woosh.NAME, 'S_IXUSR', 139, 6, 139, 13),
    woosh.Token(woosh.OP, '|', 139, 13, 139, 14),
    woosh.Token(woosh.NAME, 'S_ISUID', 139, 14, 139, 21),
    woosh.Token(woosh.OP, ',', 139, 21, 139, 22),
    woosh.Token(woosh.STRING, '"s"', 139, 23, 139, 26),
    woosh.Token(woosh.OP, ')', 139, 26, 139, 27),
    woosh.Token(woosh.OP, ',', 139, 27, 139, 28),
    woosh.Token(woosh.OP, '(', 140, 5, 140, 6),
    woosh.Token(woosh.NAME, 'S_ISUID', 140, 6, 140, 13),
    woosh.Token(woosh.OP, ',', 140, 13, 140, 14),
    woosh.Token(woosh.STRING, '"S"', 140, 23, 140, 26),
    woosh.Token(woosh.OP, ')', 140, 26, 140, 27),
    woosh.Token(woosh.OP, ',', 140, 27, 140, 28),
    woosh.Token(woosh.OP, '(', 141, 5, 141, 6),
    woosh.Token(woosh.NAME, 'S_IXUSR', 141, 6, 141, 13),
    woosh.Token(woosh.OP, ',', 141, 13, 141, 14),
    woosh.Token(woosh.STRING, '"x"', 141, 23, 141, 26),
    woosh.Token(woosh.OP, ')', 141, 26, 141, 27),
    woosh.Token(woosh.OP, ')', 141, 27, 141, 28),
    woosh.Token(woosh.OP, ',', 141, 28, 141, 29),
    woosh.Token(woosh.OP, '(', 143, 4, 143, 5),
    woosh.Token(woosh.OP, '(', 143, 5, 143, 6),
    woosh.Token(woosh.NAME, 'S_IRGRP', 143, 6, 143, 13),
    woosh.Token(woosh.OP, ',', 143, 13, 143, 14),
    woosh.Token(woosh.STRING, '"r"', 143, 23, 143, 26),
    woosh.Token(woosh.OP, ')', 143, 26, 143, 27),
    woosh.Token(woosh.OP, ',', 143, 27, 143, 28),
    woosh.Token(woosh.OP, ')', 143, 28, 143, 29),
    woosh.Token(woosh.OP, ',', 143, 29, 143, 30),
    woosh.Token(woosh.OP, '(', 144, 4, 144, 5),
    woosh.Token(woosh.OP, '(', 144, 5, 144, 6),
    woosh.Token(woosh.NAME, 'S_IWGRP', 144, 6, 144, 13),
    woosh.Token(woosh.OP, ',', 144, 13, 144, 14),
    woosh.Token(woosh.STRING, '"w"', 144, 23, 144, 26),
    woosh.Token(woosh.OP, ')', 144, 26, 144, 27),
    woosh.Token(woosh.OP, ',', 144, 27, 144, 28),
    woosh.Token(woosh.OP, ')', 144, 28, 144, 29),
    woosh.Token(woosh.OP, ',', 144, 29, 144, 30),
    woosh.Token(woosh.OP, '(', 145, 4, 145, 5),
    woosh.Token(woosh.OP, '(', 145, 5, 145, 6),
    woosh.Token(woosh.NAME, 'S_IXGRP', 145, 6, 145, 13),
    woosh.Token(woosh.OP, '|', 145, 13, 145, 14),
    woosh.Token(woosh.NAME, 'S_ISGID', 145, 14, 145, 21),
    woosh.Token(woosh.OP, ',', 145, 21, 145, 22),
    woosh.Token(woosh.STRING, '"s"', 145, 23, 145, 26),
    woosh.Token(woosh.OP, ')', 145, 26, 145, 27),
    woosh.Token(woosh.OP, ',', 145, 27, 145, 28),
    woosh.Token(woosh.OP, '(', 146, 5, 146, 6),
    woosh.Token(woosh.NAME, 'S_ISGID', 146, 6, 146, 13),
    woosh.Token(woosh.OP, ',', 146, 13, 146, 14),
    woosh.Token(woosh.STRING, '"S"', 146, 23, 146, 26),
    woosh.Token(woosh.OP, ')', 146, 26, 146, 27),
    woosh.Token(woosh.OP, ',', 146, 27, 146, 28),
    woosh.Token(woosh.OP, '(', 147, 5, 147, 6),
    woosh.Token(woosh.NAME, 'S_IXGRP', 147, 6, 147, 13),
    woosh.Token(woosh.OP, ',', 147, 13, 147, 14),
    woosh.Token(woosh.STRING, '"x"', 147, 23, 147, 26),
    woosh.Token(woosh.OP, ')', 147, 26, 147, 27),
    woosh.Token(woosh.OP, ')', 147, 27, 147, 28),
    woosh.Token(woosh.OP, ',', 147, 28, 147, 29),
    woosh.Token(woosh.OP, '(', 149, 4, 149, 5),
    woosh.Token(woosh.OP, '(', 149, 5, 149, 6),
    woosh.Token(woosh.NAME, 'S_IROTH', 149, 6, 149, 13),
    woosh.Token(woosh.OP, ',', 149, 13, 149, 14),
    woosh.Token(woosh.STRING, '"r"', 149, 23, 149, 26),
    woosh.Token(woosh.OP, ')', 149, 26, 149, 27),
    woosh.Token(woosh.OP, ',', 149, 27, 149, 28),
    woosh.Token(woosh.OP, ')', 149, 28, 149, 29),
    woosh.Token(woosh.OP, ',', 149, 29, 149, 30),
    woosh.Token(woosh.OP, '(', 150, 4, 150, 5),
    woosh.Token(woosh.OP, '(', 150, 5, 150, 6),
    woosh.Token(woosh.NAME, 'S_IWOTH', 150, 6, 150, 13),
    woosh.Token(woosh.OP, ',', 150, 13, 150, 14),
    woosh.Token(woosh.STRING, '"w"', 150, 23, 150, 26),
    woosh.Token(woosh.OP, ')', 150, 26, 150, 27),
    woosh.Token(woosh.OP, ',', 150, 27, 150, 28),
    woosh.Token(woosh.OP, ')', 150, 28, 150, 29),
    woosh.Token(woosh.OP, ',', 150, 29, 150, 30),
    woosh.Token(woosh.OP, '(', 151, 4, 151, 5),
    woosh.Token(woosh.OP, '(', 151, 5, 151, 6),
    woosh.Token(woosh.NAME, 'S_IXOTH', 151, 6, 151, 13),
    woosh.Token(woosh.OP, '|', 151, 13, 151, 14),
    woosh.Token(woosh.NAME, 'S_ISVTX', 151, 14, 151, 21),
    woosh.Token(woosh.OP, ',', 151, 21, 151, 22),
    woosh.Token(woosh.STRING, '"t"', 151, 23, 151, 26),
    woosh.Token(woosh.OP, ')', 151, 26, 151, 27),
    woosh.Token(woosh.OP, ',', 151, 27, 151, 28),
    woosh.Token(woosh.OP, '(', 152, 5, 152, 6),
    woosh.Token(woosh.NAME, 'S_ISVTX', 152, 6, 152, 13),
    woosh.Token(woosh.OP, ',', 152, 13, 152, 14),
    woosh.Token(woosh.STRING, '"T"', 152, 23, 152, 26),
    woosh.Token(woosh.OP, ')', 152, 26, 152, 27),
    woosh.Token(woosh.OP, ',', 152, 27, 152, 28),
    woosh.Token(woosh.OP, '(', 153, 5, 153, 6),
    woosh.Token(woosh.NAME, 'S_IXOTH', 153, 6, 153, 13),
    woosh.Token(woosh.OP, ',', 153, 13, 153, 14),
    woosh.Token(woosh.STRING, '"x"', 153, 23, 153, 26),
    woosh.Token(woosh.OP, ')', 153, 26, 153, 27),
    woosh.Token(woosh.OP, ')', 153, 27, 153, 28),
    woosh.Token(woosh.OP, ')', 154, 0, 154, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 154, 1, 155, 0),
    woosh.Token(woosh.NAME, 'def', 156, 0, 156, 3),
    woosh.Token(woosh.NAME, 'filemode', 156, 4, 156, 12),
    woosh.Token(woosh.OP, '(', 156, 12, 156, 13),
    woosh.Token(woosh.NAME, 'mode', 156, 13, 156, 17),
    woosh.Token(woosh.OP, ')', 156, 17, 156, 18),
    woosh.Token(woosh.OP, ':', 156, 18, 156, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 156, 19, 157, 0),
    woosh.Token(woosh.INDENT, '    ', 157, 0, 157, 4),
    woosh.Token(woosh.STRING, '"""Convert a file\'s mode to a string of the form \'-rwxrwxrwx\'."""', 157, 4, 157, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 157, 69, 158, 0),
    woosh.Token(woosh.NAME, 'perm', 158, 4, 158, 8),
    woosh.Token(woosh.OP, '=', 158, 9, 158, 10),
    woosh.Token(woosh.OP, '[', 158, 11, 158, 12),
    woosh.Token(woosh.OP, ']', 158, 12, 158, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 158, 13, 159, 0),
    woosh.Token(woosh.NAME, 'for', 159, 4, 159, 7),
    woosh.Token(woosh.NAME, 'table', 159, 8, 159, 13),
    woosh.Token(woosh.NAME, 'in', 159, 14, 159, 16),
    woosh.Token(woosh.NAME, '_filemode_table', 159, 17, 159, 32),
    woosh.Token(woosh.OP, ':', 159, 32, 159, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 159, 33, 160, 0),
    woosh.Token(woosh.INDENT, '        ', 160, 0, 160, 8),
    woosh.Token(woosh.NAME, 'for', 160, 8, 160, 11),
    woosh.Token(woosh.NAME, 'bit', 160, 12, 160, 15),
    woosh.Token(woosh.OP, ',', 160, 15, 160, 16),
    woosh.Token(woosh.NAME, 'char', 160, 17, 160, 21),
    woosh.Token(woosh.NAME, 'in', 160, 22, 160, 24),
    woosh.Token(woosh.NAME, 'table', 160, 25, 160, 30),
    woosh.Token(woosh.OP, ':', 160, 30, 160, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 160, 31, 161, 0),
    woosh.Token(woosh.INDENT, '            ', 161, 0, 161, 12),
    woosh.Token(woosh.NAME, 'if', 161, 12, 161, 14),
    woosh.Token(woosh.NAME, 'mode', 161, 15, 161, 19),
    woosh.Token(woosh.OP, '&', 161, 20, 161, 21),
    woosh.Token(woosh.NAME, 'bit', 161, 22, 161, 25),
    woosh.Token(woosh.OP, '==', 161, 26, 161, 28),
    woosh.Token(woosh.NAME, 'bit', 161, 29, 161, 32),
    woosh.Token(woosh.OP, ':', 161, 32, 161, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 161, 33, 162, 0),
    woosh.Token(woosh.INDENT, '                ', 162, 0, 162, 16),
    woosh.Token(woosh.NAME, 'perm', 162, 16, 162, 20),
    woosh.Token(woosh.OP, '.', 162, 20, 162, 21),
    woosh.Token(woosh.NAME, 'append', 162, 21, 162, 27),
    woosh.Token(woosh.OP, '(', 162, 27, 162, 28),
    woosh.Token(woosh.NAME, 'char', 162, 28, 162, 32),
    woosh.Token(woosh.OP, ')', 162, 32, 162, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 162, 33, 163, 0),
    woosh.Token(woosh.NAME, 'break', 163, 16, 163, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 163, 21, 164, 0),
    woosh.Token(woosh.DEDENT, '        ', 164, 0, 164, 8),
    woosh.Token(woosh.DEDENT, '', 164, 8, 164, 8),
    woosh.Token(woosh.NAME, 'else', 164, 8, 164, 12),
    woosh.Token(woosh.OP, ':', 164, 12, 164, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 164, 13, 165, 0),
    woosh.Token(woosh.INDENT, '            ', 165, 0, 165, 12),
    woosh.Token(woosh.NAME, 'perm', 165, 12, 165, 16),
    woosh.Token(woosh.OP, '.', 165, 16, 165, 17),
    woosh.Token(woosh.NAME, 'append', 165, 17, 165, 23),
    woosh.Token(woosh.OP, '(', 165, 23, 165, 24),
    woosh.Token(woosh.STRING, '"-"', 165, 24, 165, 27),
    woosh.Token(woosh.OP, ')', 165, 27, 165, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 165, 28, 166, 0),
    woosh.Token(woosh.DEDENT, '    ', 166, 0, 166, 4),
    woosh.Token(woosh.DEDENT, '', 166, 4, 166, 4),
    woosh.Token(woosh.NAME, 'return', 166, 4, 166, 10),
    woosh.Token(woosh.STRING, '""', 166, 11, 166, 13),
    woosh.Token(woosh.OP, '.', 166, 13, 166, 14),
    woosh.Token(woosh.NAME, 'join', 166, 14, 166, 18),
    woosh.Token(woosh.OP, '(', 166, 18, 166, 19),
    woosh.Token(woosh.NAME, 'perm', 166, 19, 166, 23),
    woosh.Token(woosh.OP, ')', 166, 23, 166, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 166, 24, 167, 0),
    woosh.Token(woosh.COMMENT, "# Windows FILE_ATTRIBUTE constants for interpreting os.stat()'s", 169, 0, 169, 63),
    woosh.Token(woosh.COMMENT, '# "st_file_attributes" member', 170, 0, 170, 29),
    woosh.Token(woosh.DEDENT, '', 172, 0, 172, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_ARCHIVE', 172, 0, 172, 22),
    woosh.Token(woosh.OP, '=', 172, 23, 172, 24),
    woosh.Token(woosh.NUMBER, '32', 172, 25, 172, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 172, 27, 173, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_COMPRESSED', 173, 0, 173, 25),
    woosh.Token(woosh.OP, '=', 173, 26, 173, 27),
    woosh.Token(woosh.NUMBER, '2048', 173, 28, 173, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 173, 32, 174, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_DEVICE', 174, 0, 174, 21),
    woosh.Token(woosh.OP, '=', 174, 22, 174, 23),
    woosh.Token(woosh.NUMBER, '64', 174, 24, 174, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 174, 26, 175, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_DIRECTORY', 175, 0, 175, 24),
    woosh.Token(woosh.OP, '=', 175, 25, 175, 26),
    woosh.Token(woosh.NUMBER, '16', 175, 27, 175, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 175, 29, 176, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_ENCRYPTED', 176, 0, 176, 24),
    woosh.Token(woosh.OP, '=', 176, 25, 176, 26),
    woosh.Token(woosh.NUMBER, '16384', 176, 27, 176, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 176, 32, 177, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_HIDDEN', 177, 0, 177, 21),
    woosh.Token(woosh.OP, '=', 177, 22, 177, 23),
    woosh.Token(woosh.NUMBER, '2', 177, 24, 177, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 177, 25, 178, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_INTEGRITY_STREAM', 178, 0, 178, 31),
    woosh.Token(woosh.OP, '=', 178, 32, 178, 33),
    woosh.Token(woosh.NUMBER, '32768', 178, 34, 178, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 178, 39, 179, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_NORMAL', 179, 0, 179, 21),
    woosh.Token(woosh.OP, '=', 179, 22, 179, 23),
    woosh.Token(woosh.NUMBER, '128', 179, 24, 179, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 179, 27, 180, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_NOT_CONTENT_INDEXED', 180, 0, 180, 34),
    woosh.Token(woosh.OP, '=', 180, 35, 180, 36),
    woosh.Token(woosh.NUMBER, '8192', 180, 37, 180, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 180, 41, 181, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_NO_SCRUB_DATA', 181, 0, 181, 28),
    woosh.Token(woosh.OP, '=', 181, 29, 181, 30),
    woosh.Token(woosh.NUMBER, '131072', 181, 31, 181, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 181, 37, 182, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_OFFLINE', 182, 0, 182, 22),
    woosh.Token(woosh.OP, '=', 182, 23, 182, 24),
    woosh.Token(woosh.NUMBER, '4096', 182, 25, 182, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 182, 29, 183, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_READONLY', 183, 0, 183, 23),
    woosh.Token(woosh.OP, '=', 183, 24, 183, 25),
    woosh.Token(woosh.NUMBER, '1', 183, 26, 183, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 183, 27, 184, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_REPARSE_POINT', 184, 0, 184, 28),
    woosh.Token(woosh.OP, '=', 184, 29, 184, 30),
    woosh.Token(woosh.NUMBER, '1024', 184, 31, 184, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 184, 35, 185, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_SPARSE_FILE', 185, 0, 185, 26),
    woosh.Token(woosh.OP, '=', 185, 27, 185, 28),
    woosh.Token(woosh.NUMBER, '512', 185, 29, 185, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 185, 32, 186, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_SYSTEM', 186, 0, 186, 21),
    woosh.Token(woosh.OP, '=', 186, 22, 186, 23),
    woosh.Token(woosh.NUMBER, '4', 186, 24, 186, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 186, 25, 187, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_TEMPORARY', 187, 0, 187, 24),
    woosh.Token(woosh.OP, '=', 187, 25, 187, 26),
    woosh.Token(woosh.NUMBER, '256', 187, 27, 187, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 187, 30, 188, 0),
    woosh.Token(woosh.NAME, 'FILE_ATTRIBUTE_VIRTUAL', 188, 0, 188, 22),
    woosh.Token(woosh.OP, '=', 188, 23, 188, 24),
    woosh.Token(woosh.NUMBER, '65536', 188, 25, 188, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 188, 30, 189, 0),
    woosh.Token(woosh.COMMENT, '# If available, use C implementation', 191, 0, 191, 36),
    woosh.Token(woosh.NAME, 'try', 192, 0, 192, 3),
    woosh.Token(woosh.OP, ':', 192, 3, 192, 4),
    woosh.Token(woosh.NEWLINE, '\r\n', 192, 4, 193, 0),
    woosh.Token(woosh.INDENT, '    ', 193, 0, 193, 4),
    woosh.Token(woosh.NAME, 'from', 193, 4, 193, 8),
    woosh.Token(woosh.NAME, '_stat', 193, 9, 193, 14),
    woosh.Token(woosh.NAME, 'import', 193, 15, 193, 21),
    woosh.Token(woosh.OP, '*', 193, 22, 193, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 193, 23, 194, 0),
    woosh.Token(woosh.DEDENT, '', 194, 0, 194, 0),
    woosh.Token(woosh.NAME, 'except', 194, 0, 194, 6),
    woosh.Token(woosh.NAME, 'ImportError', 194, 7, 194, 18),
    woosh.Token(woosh.OP, ':', 194, 18, 194, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 194, 19, 195, 0),
    woosh.Token(woosh.INDENT, '    ', 195, 0, 195, 4),
    woosh.Token(woosh.NAME, 'pass', 195, 4, 195, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 195, 8, 196, 0),
    woosh.Token(woosh.DEDENT, '', 196, 0, 196, 0),
    woosh.Token(woosh.EOF, '', 196, 0, 196, 0),
]
