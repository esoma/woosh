
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../sample/'
def test():
    with open(SAMPLE_DIR / 'platform.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    assert tokens == EXPECTED

EXPECTED = [
    woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
    woosh.Token(woosh.COMMENT, '#!/usr/bin/env python3', 1, 0, 1, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1, 22, 2, 0),
    woosh.Token(woosh.STRING, '""" This module tries to retrieve as much platform-identifying data as\r\n    possible. It makes this information available via function APIs.\r\n\r\n    If called from the command line, it prints the platform\r\n    information concatenated as single string to stdout. The output\r\n    format is useable as part of a filename.\r\n\r\n"""', 3, 0, 10, 3),
    woosh.Token(woosh.NEWLINE, '\r\n', 10, 3, 11, 0),
    woosh.Token(woosh.COMMENT, '#    This module is maintained by Marc-Andre Lemburg <mal@egenix.com>.', 11, 0, 11, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 11, 70, 12, 0),
    woosh.Token(woosh.COMMENT, '#    If you find problems, please submit bug reports/patches via the', 12, 0, 12, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 12, 68, 13, 0),
    woosh.Token(woosh.COMMENT, '#    Python bug tracker (http://bugs.python.org) and assign them to "lemburg".', 13, 0, 13, 78),
    woosh.Token(woosh.NEWLINE, '\r\n', 13, 78, 14, 0),
    woosh.Token(woosh.COMMENT, '#', 14, 0, 14, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 14, 1, 15, 0),
    woosh.Token(woosh.COMMENT, '#    Still needed:', 15, 0, 15, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 15, 18, 16, 0),
    woosh.Token(woosh.COMMENT, '#    * support for MS-DOS (PythonDX ?)', 16, 0, 16, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 16, 38, 17, 0),
    woosh.Token(woosh.COMMENT, '#    * support for Amiga and other still unsupported platforms running Python', 17, 0, 17, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 17, 77, 18, 0),
    woosh.Token(woosh.COMMENT, '#    * support for additional Linux distributions', 18, 0, 18, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 18, 49, 19, 0),
    woosh.Token(woosh.COMMENT, '#', 19, 0, 19, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 19, 1, 20, 0),
    woosh.Token(woosh.COMMENT, '#    Many thanks to all those who helped adding platform-specific', 20, 0, 20, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 20, 65, 21, 0),
    woosh.Token(woosh.COMMENT, '#    checks (in no particular order):', 21, 0, 21, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 21, 37, 22, 0),
    woosh.Token(woosh.COMMENT, '#', 22, 0, 22, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 22, 1, 23, 0),
    woosh.Token(woosh.COMMENT, '#      Charles G Waldman, David Arnold, Gordon McMillan, Ben Darnell,', 23, 0, 23, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 23, 69, 24, 0),
    woosh.Token(woosh.COMMENT, '#      Jeff Bauer, Cliff Crawford, Ivan Van Laningham, Josef', 24, 0, 24, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 24, 60, 25, 0),
    woosh.Token(woosh.COMMENT, '#      Betancourt, Randall Hopper, Karl Putland, John Farrell, Greg', 25, 0, 25, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 25, 67, 26, 0),
    woosh.Token(woosh.COMMENT, '#      Andruk, Just van Rossum, Thomas Heller, Mark R. Levinson, Mark', 26, 0, 26, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 26, 69, 27, 0),
    woosh.Token(woosh.COMMENT, '#      Hammond, Bill Tutt, Hans Nowak, Uwe Zessin (OpenVMS support),', 27, 0, 27, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 27, 68, 28, 0),
    woosh.Token(woosh.COMMENT, '#      Colin Kong, Trent Mick, Guido van Rossum, Anthony Baxter, Steve', 28, 0, 28, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 28, 70, 29, 0),
    woosh.Token(woosh.COMMENT, '#      Dower', 29, 0, 29, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 29, 12, 30, 0),
    woosh.Token(woosh.COMMENT, '#', 30, 0, 30, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 30, 1, 31, 0),
    woosh.Token(woosh.COMMENT, '#    History:', 31, 0, 31, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 31, 13, 32, 0),
    woosh.Token(woosh.COMMENT, '#', 32, 0, 32, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 32, 1, 33, 0),
    woosh.Token(woosh.COMMENT, '#    <see CVS and SVN checkin messages for history>', 33, 0, 33, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 33, 51, 34, 0),
    woosh.Token(woosh.COMMENT, '#', 34, 0, 34, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 34, 1, 35, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.8 - changed Windows support to read version from kernel32.dll', 35, 0, 35, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 35, 70, 36, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.7 - added DEV_NULL', 36, 0, 36, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 36, 27, 37, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.6 - added linux_distribution()', 37, 0, 37, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 37, 39, 38, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.5 - fixed Java support to allow running the module on Jython', 38, 0, 38, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 38, 69, 39, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.4 - added IronPython support', 39, 0, 39, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 39, 37, 40, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.3 - added normalization of Windows system name', 40, 0, 40, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 40, 55, 41, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.2 - added more Windows support', 41, 0, 41, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 41, 39, 42, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.1 - reformatted to make doc.py happy', 42, 0, 42, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 42, 45, 43, 0),
    woosh.Token(woosh.COMMENT, '#    1.0.0 - reformatted a bit and checked into Python CVS', 43, 0, 43, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 43, 58, 44, 0),
    woosh.Token(woosh.COMMENT, '#    0.8.0 - added sys.version parser and various new access', 44, 0, 44, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 44, 60, 45, 0),
    woosh.Token(woosh.COMMENT, '#            APIs (python_version(), python_compiler(), etc.)', 45, 0, 45, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 45, 61, 46, 0),
    woosh.Token(woosh.COMMENT, '#    0.7.2 - fixed architecture() to use sizeof(pointer) where available', 46, 0, 46, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 46, 72, 47, 0),
    woosh.Token(woosh.COMMENT, '#    0.7.1 - added support for Caldera OpenLinux', 47, 0, 47, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 47, 48, 48, 0),
    woosh.Token(woosh.COMMENT, '#    0.7.0 - some fixes for WinCE; untabified the source file', 48, 0, 48, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 48, 61, 49, 0),
    woosh.Token(woosh.COMMENT, '#    0.6.2 - support for OpenVMS - requires version 1.5.2-V006 or higher and', 49, 0, 49, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 49, 76, 50, 0),
    woosh.Token(woosh.COMMENT, '#            vms_lib.getsyi() configured', 50, 0, 50, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 50, 40, 51, 0),
    woosh.Token(woosh.COMMENT, "#    0.6.1 - added code to prevent 'uname -p' on platforms which are", 51, 0, 51, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 51, 68, 52, 0),
    woosh.Token(woosh.COMMENT, '#            known not to support it', 52, 0, 52, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 52, 36, 53, 0),
    woosh.Token(woosh.COMMENT, '#    0.6.0 - fixed win32_ver() to hopefully work on Win95,98,NT and Win2k;', 53, 0, 53, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 53, 74, 54, 0),
    woosh.Token(woosh.COMMENT, '#            did some cleanup of the interfaces - some APIs have changed', 54, 0, 54, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 54, 72, 55, 0),
    woosh.Token(woosh.COMMENT, '#    0.5.5 - fixed another type in the MacOS code... should have', 55, 0, 55, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 55, 64, 56, 0),
    woosh.Token(woosh.COMMENT, '#            used more coffee today ;-)', 56, 0, 56, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 56, 39, 57, 0),
    woosh.Token(woosh.COMMENT, '#    0.5.4 - fixed a few typos in the MacOS code', 57, 0, 57, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 57, 48, 58, 0),
    woosh.Token(woosh.COMMENT, '#    0.5.3 - added experimental MacOS support; added better popen()', 58, 0, 58, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 58, 67, 59, 0),
    woosh.Token(woosh.COMMENT, '#            workarounds in _syscmd_ver() -- still not 100% elegant', 59, 0, 59, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 59, 67, 60, 0),
    woosh.Token(woosh.COMMENT, '#            though', 60, 0, 60, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 60, 19, 61, 0),
    woosh.Token(woosh.COMMENT, "#    0.5.2 - fixed uname() to return '' instead of 'unknown' in all", 61, 0, 61, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 61, 67, 62, 0),
    woosh.Token(woosh.COMMENT, '#            return values (the system uname command tends to return', 62, 0, 62, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 62, 68, 63, 0),
    woosh.Token(woosh.COMMENT, "#            'unknown' instead of just leaving the field empty)", 63, 0, 63, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 63, 63, 64, 0),
    woosh.Token(woosh.COMMENT, '#    0.5.1 - included code for slackware dist; added exception handlers', 64, 0, 64, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 64, 71, 65, 0),
    woosh.Token(woosh.COMMENT, "#            to cover up situations where platforms don't have os.popen", 65, 0, 65, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 65, 71, 66, 0),
    woosh.Token(woosh.COMMENT, '#            (e.g. Mac) or fail on socket.gethostname(); fixed libc', 66, 0, 66, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 66, 67, 67, 0),
    woosh.Token(woosh.COMMENT, '#            detection RE', 67, 0, 67, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 67, 25, 68, 0),
    woosh.Token(woosh.COMMENT, '#    0.5.0 - changed the API names referring to system commands to *syscmd*;', 68, 0, 68, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 68, 76, 69, 0),
    woosh.Token(woosh.COMMENT, '#            added java_ver(); made syscmd_ver() a private', 69, 0, 69, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 69, 58, 70, 0),
    woosh.Token(woosh.COMMENT, '#            API (was system_ver() in previous versions) -- use uname()', 70, 0, 70, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 70, 71, 71, 0),
    woosh.Token(woosh.COMMENT, '#            instead; extended the win32_ver() to also return processor', 71, 0, 71, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 71, 71, 72, 0),
    woosh.Token(woosh.COMMENT, '#            type information', 72, 0, 72, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 72, 29, 73, 0),
    woosh.Token(woosh.COMMENT, '#    0.4.0 - added win32_ver() and modified the platform() output for WinXX', 73, 0, 73, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 73, 75, 74, 0),
    woosh.Token(woosh.COMMENT, '#    0.3.4 - fixed a bug in _follow_symlinks()', 74, 0, 74, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 74, 46, 75, 0),
    woosh.Token(woosh.COMMENT, '#    0.3.3 - fixed popen() and "file" command invocation bugs', 75, 0, 75, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 75, 61, 76, 0),
    woosh.Token(woosh.COMMENT, '#    0.3.2 - added architecture() API and support for it in platform()', 76, 0, 76, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 76, 70, 77, 0),
    woosh.Token(woosh.COMMENT, '#    0.3.1 - fixed syscmd_ver() RE to support Windows NT', 77, 0, 77, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 77, 56, 78, 0),
    woosh.Token(woosh.COMMENT, '#    0.3.0 - added system alias support', 78, 0, 78, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 78, 39, 79, 0),
    woosh.Token(woosh.COMMENT, "#    0.2.3 - removed 'wince' again... oh well.", 79, 0, 79, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 79, 46, 80, 0),
    woosh.Token(woosh.COMMENT, "#    0.2.2 - added 'wince' to syscmd_ver() supported platforms", 80, 0, 80, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 80, 62, 81, 0),
    woosh.Token(woosh.COMMENT, '#    0.2.1 - added cache logic and changed the platform string format', 81, 0, 81, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 81, 69, 82, 0),
    woosh.Token(woosh.COMMENT, '#    0.2.0 - changed the API to use functions instead of module globals', 82, 0, 82, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 82, 71, 83, 0),
    woosh.Token(woosh.COMMENT, '#            since some action take too long to be run on module import', 83, 0, 83, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 83, 71, 84, 0),
    woosh.Token(woosh.COMMENT, '#    0.1.0 - first release', 84, 0, 84, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 84, 26, 85, 0),
    woosh.Token(woosh.COMMENT, '#', 85, 0, 85, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 85, 1, 86, 0),
    woosh.Token(woosh.COMMENT, '#    You can always get the latest version of this module at:', 86, 0, 86, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 86, 61, 87, 0),
    woosh.Token(woosh.COMMENT, '#', 87, 0, 87, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 87, 1, 88, 0),
    woosh.Token(woosh.COMMENT, '#             http://www.egenix.com/files/python/platform.py', 88, 0, 88, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 88, 60, 89, 0),
    woosh.Token(woosh.COMMENT, '#', 89, 0, 89, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 89, 1, 90, 0),
    woosh.Token(woosh.COMMENT, '#    If that URL should fail, try contacting the author.', 90, 0, 90, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 90, 56, 91, 0),
    woosh.Token(woosh.NAME, '__copyright__', 92, 0, 92, 13),
    woosh.Token(woosh.OP, '=', 92, 14, 92, 15),
    woosh.Token(woosh.STRING, '"""\r\n    Copyright (c) 1999-2000, Marc-Andre Lemburg; mailto:mal@lemburg.com\r\n    Copyright (c) 2000-2010, eGenix.com Software GmbH; mailto:info@egenix.com\r\n\r\n    Permission to use, copy, modify, and distribute this software and its\r\n    documentation for any purpose and without fee or royalty is hereby granted,\r\n    provided that the above copyright notice appear in all copies and that\r\n    both that copyright notice and this permission notice appear in\r\n    supporting documentation or portions thereof, including modifications,\r\n    that you make.\r\n\r\n    EGENIX.COM SOFTWARE GMBH DISCLAIMS ALL WARRANTIES WITH REGARD TO\r\n    THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n    FITNESS, IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,\r\n    INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING\r\n    FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\r\n    NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\r\n    WITH THE USE OR PERFORMANCE OF THIS SOFTWARE !\r\n\r\n"""', 92, 16, 111, 3),
    woosh.Token(woosh.NEWLINE, '\r\n', 111, 3, 112, 0),
    woosh.Token(woosh.NAME, '__version__', 113, 0, 113, 11),
    woosh.Token(woosh.OP, '=', 113, 12, 113, 13),
    woosh.Token(woosh.STRING, "'1.0.8'", 113, 14, 113, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 113, 21, 114, 0),
    woosh.Token(woosh.NAME, 'import', 115, 0, 115, 6),
    woosh.Token(woosh.NAME, 'collections', 115, 7, 115, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 115, 18, 116, 0),
    woosh.Token(woosh.NAME, 'import', 116, 0, 116, 6),
    woosh.Token(woosh.NAME, 'os', 116, 7, 116, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 116, 9, 117, 0),
    woosh.Token(woosh.NAME, 'import', 117, 0, 117, 6),
    woosh.Token(woosh.NAME, 're', 117, 7, 117, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 117, 9, 118, 0),
    woosh.Token(woosh.NAME, 'import', 118, 0, 118, 6),
    woosh.Token(woosh.NAME, 'sys', 118, 7, 118, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 118, 10, 119, 0),
    woosh.Token(woosh.NAME, 'import', 119, 0, 119, 6),
    woosh.Token(woosh.NAME, 'subprocess', 119, 7, 119, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 119, 17, 120, 0),
    woosh.Token(woosh.NAME, 'import', 120, 0, 120, 6),
    woosh.Token(woosh.NAME, 'functools', 120, 7, 120, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 120, 16, 121, 0),
    woosh.Token(woosh.NAME, 'import', 121, 0, 121, 6),
    woosh.Token(woosh.NAME, 'itertools', 121, 7, 121, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 121, 16, 122, 0),
    woosh.Token(woosh.COMMENT, '### Globals & Constants', 123, 0, 123, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 123, 23, 124, 0),
    woosh.Token(woosh.COMMENT, '# Helper for comparing two version number strings.', 125, 0, 125, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 125, 50, 126, 0),
    woosh.Token(woosh.COMMENT, "# Based on the description of the PHP's version_compare():", 126, 0, 126, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 126, 58, 127, 0),
    woosh.Token(woosh.COMMENT, '# http://php.net/manual/en/function.version-compare.php', 127, 0, 127, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 127, 55, 128, 0),
    woosh.Token(woosh.NAME, '_ver_stages', 129, 0, 129, 11),
    woosh.Token(woosh.OP, '=', 129, 12, 129, 13),
    woosh.Token(woosh.OP, '{', 129, 14, 129, 15),
    woosh.Token(woosh.COMMENT, '# any string not found in this dict, will get 0 assigned', 130, 4, 130, 60),
    woosh.Token(woosh.STRING, "'dev'", 131, 4, 131, 9),
    woosh.Token(woosh.OP, ':', 131, 9, 131, 10),
    woosh.Token(woosh.NUMBER, '10', 131, 11, 131, 13),
    woosh.Token(woosh.OP, ',', 131, 13, 131, 14),
    woosh.Token(woosh.STRING, "'alpha'", 132, 4, 132, 11),
    woosh.Token(woosh.OP, ':', 132, 11, 132, 12),
    woosh.Token(woosh.NUMBER, '20', 132, 13, 132, 15),
    woosh.Token(woosh.OP, ',', 132, 15, 132, 16),
    woosh.Token(woosh.STRING, "'a'", 132, 17, 132, 20),
    woosh.Token(woosh.OP, ':', 132, 20, 132, 21),
    woosh.Token(woosh.NUMBER, '20', 132, 22, 132, 24),
    woosh.Token(woosh.OP, ',', 132, 24, 132, 25),
    woosh.Token(woosh.STRING, "'beta'", 133, 4, 133, 10),
    woosh.Token(woosh.OP, ':', 133, 10, 133, 11),
    woosh.Token(woosh.NUMBER, '30', 133, 12, 133, 14),
    woosh.Token(woosh.OP, ',', 133, 14, 133, 15),
    woosh.Token(woosh.STRING, "'b'", 133, 16, 133, 19),
    woosh.Token(woosh.OP, ':', 133, 19, 133, 20),
    woosh.Token(woosh.NUMBER, '30', 133, 21, 133, 23),
    woosh.Token(woosh.OP, ',', 133, 23, 133, 24),
    woosh.Token(woosh.STRING, "'c'", 134, 4, 134, 7),
    woosh.Token(woosh.OP, ':', 134, 7, 134, 8),
    woosh.Token(woosh.NUMBER, '40', 134, 9, 134, 11),
    woosh.Token(woosh.OP, ',', 134, 11, 134, 12),
    woosh.Token(woosh.STRING, "'RC'", 135, 4, 135, 8),
    woosh.Token(woosh.OP, ':', 135, 8, 135, 9),
    woosh.Token(woosh.NUMBER, '50', 135, 10, 135, 12),
    woosh.Token(woosh.OP, ',', 135, 12, 135, 13),
    woosh.Token(woosh.STRING, "'rc'", 135, 14, 135, 18),
    woosh.Token(woosh.OP, ':', 135, 18, 135, 19),
    woosh.Token(woosh.NUMBER, '50', 135, 20, 135, 22),
    woosh.Token(woosh.OP, ',', 135, 22, 135, 23),
    woosh.Token(woosh.COMMENT, '# number, will get 100 assigned', 136, 4, 136, 35),
    woosh.Token(woosh.STRING, "'pl'", 137, 4, 137, 8),
    woosh.Token(woosh.OP, ':', 137, 8, 137, 9),
    woosh.Token(woosh.NUMBER, '200', 137, 10, 137, 13),
    woosh.Token(woosh.OP, ',', 137, 13, 137, 14),
    woosh.Token(woosh.STRING, "'p'", 137, 15, 137, 18),
    woosh.Token(woosh.OP, ':', 137, 18, 137, 19),
    woosh.Token(woosh.NUMBER, '200', 137, 20, 137, 23),
    woosh.Token(woosh.OP, ',', 137, 23, 137, 24),
    woosh.Token(woosh.OP, '}', 138, 0, 138, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 138, 1, 139, 0),
    woosh.Token(woosh.NAME, '_component_re', 140, 0, 140, 13),
    woosh.Token(woosh.OP, '=', 140, 14, 140, 15),
    woosh.Token(woosh.NAME, 're', 140, 16, 140, 18),
    woosh.Token(woosh.OP, '.', 140, 18, 140, 19),
    woosh.Token(woosh.NAME, 'compile', 140, 19, 140, 26),
    woosh.Token(woosh.OP, '(', 140, 26, 140, 27),
    woosh.Token(woosh.STRING, "r'([0-9]+|[._+-])'", 140, 27, 140, 45),
    woosh.Token(woosh.OP, ')', 140, 45, 140, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 140, 46, 141, 0),
    woosh.Token(woosh.NAME, 'def', 142, 0, 142, 3),
    woosh.Token(woosh.NAME, '_comparable_version', 142, 4, 142, 23),
    woosh.Token(woosh.OP, '(', 142, 23, 142, 24),
    woosh.Token(woosh.NAME, 'version', 142, 24, 142, 31),
    woosh.Token(woosh.OP, ')', 142, 31, 142, 32),
    woosh.Token(woosh.OP, ':', 142, 32, 142, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 142, 33, 143, 0),
    woosh.Token(woosh.INDENT, '    ', 143, 0, 143, 4),
    woosh.Token(woosh.NAME, 'result', 143, 4, 143, 10),
    woosh.Token(woosh.OP, '=', 143, 11, 143, 12),
    woosh.Token(woosh.OP, '[', 143, 13, 143, 14),
    woosh.Token(woosh.OP, ']', 143, 14, 143, 15),
    woosh.Token(woosh.NEWLINE, '\r\n', 143, 15, 144, 0),
    woosh.Token(woosh.NAME, 'for', 144, 4, 144, 7),
    woosh.Token(woosh.NAME, 'v', 144, 8, 144, 9),
    woosh.Token(woosh.NAME, 'in', 144, 10, 144, 12),
    woosh.Token(woosh.NAME, '_component_re', 144, 13, 144, 26),
    woosh.Token(woosh.OP, '.', 144, 26, 144, 27),
    woosh.Token(woosh.NAME, 'split', 144, 27, 144, 32),
    woosh.Token(woosh.OP, '(', 144, 32, 144, 33),
    woosh.Token(woosh.NAME, 'version', 144, 33, 144, 40),
    woosh.Token(woosh.OP, ')', 144, 40, 144, 41),
    woosh.Token(woosh.OP, ':', 144, 41, 144, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 144, 42, 145, 0),
    woosh.Token(woosh.INDENT, '        ', 145, 0, 145, 8),
    woosh.Token(woosh.NAME, 'if', 145, 8, 145, 10),
    woosh.Token(woosh.NAME, 'v', 145, 11, 145, 12),
    woosh.Token(woosh.NAME, 'not', 145, 13, 145, 16),
    woosh.Token(woosh.NAME, 'in', 145, 17, 145, 19),
    woosh.Token(woosh.STRING, "'._+-'", 145, 20, 145, 26),
    woosh.Token(woosh.OP, ':', 145, 26, 145, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 145, 27, 146, 0),
    woosh.Token(woosh.INDENT, '            ', 146, 0, 146, 12),
    woosh.Token(woosh.NAME, 'try', 146, 12, 146, 15),
    woosh.Token(woosh.OP, ':', 146, 15, 146, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 146, 16, 147, 0),
    woosh.Token(woosh.INDENT, '                ', 147, 0, 147, 16),
    woosh.Token(woosh.NAME, 'v', 147, 16, 147, 17),
    woosh.Token(woosh.OP, '=', 147, 18, 147, 19),
    woosh.Token(woosh.NAME, 'int', 147, 20, 147, 23),
    woosh.Token(woosh.OP, '(', 147, 23, 147, 24),
    woosh.Token(woosh.NAME, 'v', 147, 24, 147, 25),
    woosh.Token(woosh.OP, ',', 147, 25, 147, 26),
    woosh.Token(woosh.NUMBER, '10', 147, 27, 147, 29),
    woosh.Token(woosh.OP, ')', 147, 29, 147, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 147, 30, 148, 0),
    woosh.Token(woosh.NAME, 't', 148, 16, 148, 17),
    woosh.Token(woosh.OP, '=', 148, 18, 148, 19),
    woosh.Token(woosh.NUMBER, '100', 148, 20, 148, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 148, 23, 149, 0),
    woosh.Token(woosh.DEDENT, '            ', 149, 0, 149, 12),
    woosh.Token(woosh.NAME, 'except', 149, 12, 149, 18),
    woosh.Token(woosh.NAME, 'ValueError', 149, 19, 149, 29),
    woosh.Token(woosh.OP, ':', 149, 29, 149, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 149, 30, 150, 0),
    woosh.Token(woosh.INDENT, '                ', 150, 0, 150, 16),
    woosh.Token(woosh.NAME, 't', 150, 16, 150, 17),
    woosh.Token(woosh.OP, '=', 150, 18, 150, 19),
    woosh.Token(woosh.NAME, '_ver_stages', 150, 20, 150, 31),
    woosh.Token(woosh.OP, '.', 150, 31, 150, 32),
    woosh.Token(woosh.NAME, 'get', 150, 32, 150, 35),
    woosh.Token(woosh.OP, '(', 150, 35, 150, 36),
    woosh.Token(woosh.NAME, 'v', 150, 36, 150, 37),
    woosh.Token(woosh.OP, ',', 150, 37, 150, 38),
    woosh.Token(woosh.NUMBER, '0', 150, 39, 150, 40),
    woosh.Token(woosh.OP, ')', 150, 40, 150, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 150, 41, 151, 0),
    woosh.Token(woosh.DEDENT, '            ', 151, 0, 151, 12),
    woosh.Token(woosh.NAME, 'result', 151, 12, 151, 18),
    woosh.Token(woosh.OP, '.', 151, 18, 151, 19),
    woosh.Token(woosh.NAME, 'extend', 151, 19, 151, 25),
    woosh.Token(woosh.OP, '(', 151, 25, 151, 26),
    woosh.Token(woosh.OP, '(', 151, 26, 151, 27),
    woosh.Token(woosh.NAME, 't', 151, 27, 151, 28),
    woosh.Token(woosh.OP, ',', 151, 28, 151, 29),
    woosh.Token(woosh.NAME, 'v', 151, 30, 151, 31),
    woosh.Token(woosh.OP, ')', 151, 31, 151, 32),
    woosh.Token(woosh.OP, ')', 151, 32, 151, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 151, 33, 152, 0),
    woosh.Token(woosh.DEDENT, '    ', 152, 0, 152, 4),
    woosh.Token(woosh.DEDENT, '', 152, 4, 152, 4),
    woosh.Token(woosh.NAME, 'return', 152, 4, 152, 10),
    woosh.Token(woosh.NAME, 'result', 152, 11, 152, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 152, 17, 153, 0),
    woosh.Token(woosh.COMMENT, '### Platform specific APIs', 154, 0, 154, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 154, 26, 155, 0),
    woosh.Token(woosh.DEDENT, '', 156, 0, 156, 0),
    woosh.Token(woosh.NAME, '_libc_search', 156, 0, 156, 12),
    woosh.Token(woosh.OP, '=', 156, 13, 156, 14),
    woosh.Token(woosh.NAME, 're', 156, 15, 156, 17),
    woosh.Token(woosh.OP, '.', 156, 17, 156, 18),
    woosh.Token(woosh.NAME, 'compile', 156, 18, 156, 25),
    woosh.Token(woosh.OP, '(', 156, 25, 156, 26),
    woosh.Token(woosh.STRING, "b'(__libc_init)'", 156, 26, 156, 42),
    woosh.Token(woosh.STRING, "b'|'", 157, 26, 157, 30),
    woosh.Token(woosh.STRING, "b'(GLIBC_([0-9.]+))'", 158, 26, 158, 46),
    woosh.Token(woosh.STRING, "b'|'", 159, 26, 159, 30),
    woosh.Token(woosh.STRING, "br'(libc(_\\w+)?\\.so(?:\\.(\\d[0-9.]*))?)'", 160, 26, 160, 65),
    woosh.Token(woosh.OP, ',', 160, 65, 160, 66),
    woosh.Token(woosh.NAME, 're', 160, 67, 160, 69),
    woosh.Token(woosh.OP, '.', 160, 69, 160, 70),
    woosh.Token(woosh.NAME, 'ASCII', 160, 70, 160, 75),
    woosh.Token(woosh.OP, ')', 160, 75, 160, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 160, 76, 161, 0),
    woosh.Token(woosh.NAME, 'def', 162, 0, 162, 3),
    woosh.Token(woosh.NAME, 'libc_ver', 162, 4, 162, 12),
    woosh.Token(woosh.OP, '(', 162, 12, 162, 13),
    woosh.Token(woosh.NAME, 'executable', 162, 13, 162, 23),
    woosh.Token(woosh.OP, '=', 162, 23, 162, 24),
    woosh.Token(woosh.NAME, 'None', 162, 24, 162, 28),
    woosh.Token(woosh.OP, ',', 162, 28, 162, 29),
    woosh.Token(woosh.NAME, 'lib', 162, 30, 162, 33),
    woosh.Token(woosh.OP, '=', 162, 33, 162, 34),
    woosh.Token(woosh.STRING, "''", 162, 34, 162, 36),
    woosh.Token(woosh.OP, ',', 162, 36, 162, 37),
    woosh.Token(woosh.NAME, 'version', 162, 38, 162, 45),
    woosh.Token(woosh.OP, '=', 162, 45, 162, 46),
    woosh.Token(woosh.STRING, "''", 162, 46, 162, 48),
    woosh.Token(woosh.OP, ',', 162, 48, 162, 49),
    woosh.Token(woosh.NAME, 'chunksize', 162, 50, 162, 59),
    woosh.Token(woosh.OP, '=', 162, 59, 162, 60),
    woosh.Token(woosh.NUMBER, '16384', 162, 60, 162, 65),
    woosh.Token(woosh.OP, ')', 162, 65, 162, 66),
    woosh.Token(woosh.OP, ':', 162, 66, 162, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 162, 67, 163, 0),
    woosh.Token(woosh.INDENT, '    ', 164, 0, 164, 4),
    woosh.Token(woosh.STRING, '""" Tries to determine the libc version that the file executable\r\n        (which defaults to the Python interpreter) is linked against.\r\n\r\n        Returns a tuple of strings (lib,version) which default to the\r\n        given parameters in case the lookup fails.\r\n\r\n        Note that the function has intimate knowledge of how different\r\n        libc versions add symbols to the executable and thus is probably\r\n        only useable for executables compiled using gcc.\r\n\r\n        The file is read and scanned in chunks of chunksize bytes.\r\n\r\n    """', 164, 4, 176, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 176, 7, 177, 0),
    woosh.Token(woosh.NAME, 'if', 177, 4, 177, 6),
    woosh.Token(woosh.NAME, 'executable', 177, 7, 177, 17),
    woosh.Token(woosh.NAME, 'is', 177, 18, 177, 20),
    woosh.Token(woosh.NAME, 'None', 177, 21, 177, 25),
    woosh.Token(woosh.OP, ':', 177, 25, 177, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 177, 26, 178, 0),
    woosh.Token(woosh.INDENT, '        ', 178, 0, 178, 8),
    woosh.Token(woosh.NAME, 'try', 178, 8, 178, 11),
    woosh.Token(woosh.OP, ':', 178, 11, 178, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 178, 12, 179, 0),
    woosh.Token(woosh.INDENT, '            ', 179, 0, 179, 12),
    woosh.Token(woosh.NAME, 'ver', 179, 12, 179, 15),
    woosh.Token(woosh.OP, '=', 179, 16, 179, 17),
    woosh.Token(woosh.NAME, 'os', 179, 18, 179, 20),
    woosh.Token(woosh.OP, '.', 179, 20, 179, 21),
    woosh.Token(woosh.NAME, 'confstr', 179, 21, 179, 28),
    woosh.Token(woosh.OP, '(', 179, 28, 179, 29),
    woosh.Token(woosh.STRING, "'CS_GNU_LIBC_VERSION'", 179, 29, 179, 50),
    woosh.Token(woosh.OP, ')', 179, 50, 179, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 179, 51, 180, 0),
    woosh.Token(woosh.COMMENT, "# parse 'glibc 2.28' as ('glibc', '2.28')", 180, 12, 180, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 180, 53, 181, 0),
    woosh.Token(woosh.NAME, 'parts', 181, 12, 181, 17),
    woosh.Token(woosh.OP, '=', 181, 18, 181, 19),
    woosh.Token(woosh.NAME, 'ver', 181, 20, 181, 23),
    woosh.Token(woosh.OP, '.', 181, 23, 181, 24),
    woosh.Token(woosh.NAME, 'split', 181, 24, 181, 29),
    woosh.Token(woosh.OP, '(', 181, 29, 181, 30),
    woosh.Token(woosh.NAME, 'maxsplit', 181, 30, 181, 38),
    woosh.Token(woosh.OP, '=', 181, 38, 181, 39),
    woosh.Token(woosh.NUMBER, '1', 181, 39, 181, 40),
    woosh.Token(woosh.OP, ')', 181, 40, 181, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 181, 41, 182, 0),
    woosh.Token(woosh.NAME, 'if', 182, 12, 182, 14),
    woosh.Token(woosh.NAME, 'len', 182, 15, 182, 18),
    woosh.Token(woosh.OP, '(', 182, 18, 182, 19),
    woosh.Token(woosh.NAME, 'parts', 182, 19, 182, 24),
    woosh.Token(woosh.OP, ')', 182, 24, 182, 25),
    woosh.Token(woosh.OP, '==', 182, 26, 182, 28),
    woosh.Token(woosh.NUMBER, '2', 182, 29, 182, 30),
    woosh.Token(woosh.OP, ':', 182, 30, 182, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 182, 31, 183, 0),
    woosh.Token(woosh.INDENT, '                ', 183, 0, 183, 16),
    woosh.Token(woosh.NAME, 'return', 183, 16, 183, 22),
    woosh.Token(woosh.NAME, 'tuple', 183, 23, 183, 28),
    woosh.Token(woosh.OP, '(', 183, 28, 183, 29),
    woosh.Token(woosh.NAME, 'parts', 183, 29, 183, 34),
    woosh.Token(woosh.OP, ')', 183, 34, 183, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 183, 35, 184, 0),
    woosh.Token(woosh.DEDENT, '        ', 184, 0, 184, 8),
    woosh.Token(woosh.DEDENT, '', 184, 8, 184, 8),
    woosh.Token(woosh.NAME, 'except', 184, 8, 184, 14),
    woosh.Token(woosh.OP, '(', 184, 15, 184, 16),
    woosh.Token(woosh.NAME, 'AttributeError', 184, 16, 184, 30),
    woosh.Token(woosh.OP, ',', 184, 30, 184, 31),
    woosh.Token(woosh.NAME, 'ValueError', 184, 32, 184, 42),
    woosh.Token(woosh.OP, ',', 184, 42, 184, 43),
    woosh.Token(woosh.NAME, 'OSError', 184, 44, 184, 51),
    woosh.Token(woosh.OP, ')', 184, 51, 184, 52),
    woosh.Token(woosh.OP, ':', 184, 52, 184, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 184, 53, 185, 0),
    woosh.Token(woosh.COMMENT, '# os.confstr() or CS_GNU_LIBC_VERSION value not available', 185, 12, 185, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 185, 69, 186, 0),
    woosh.Token(woosh.INDENT, '            ', 186, 0, 186, 12),
    woosh.Token(woosh.NAME, 'pass', 186, 12, 186, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 186, 16, 187, 0),
    woosh.Token(woosh.DEDENT, '        ', 188, 0, 188, 8),
    woosh.Token(woosh.NAME, 'executable', 188, 8, 188, 18),
    woosh.Token(woosh.OP, '=', 188, 19, 188, 20),
    woosh.Token(woosh.NAME, 'sys', 188, 21, 188, 24),
    woosh.Token(woosh.OP, '.', 188, 24, 188, 25),
    woosh.Token(woosh.NAME, 'executable', 188, 25, 188, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 188, 35, 189, 0),
    woosh.Token(woosh.DEDENT, '    ', 190, 0, 190, 4),
    woosh.Token(woosh.NAME, 'V', 190, 4, 190, 5),
    woosh.Token(woosh.OP, '=', 190, 6, 190, 7),
    woosh.Token(woosh.NAME, '_comparable_version', 190, 8, 190, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 190, 27, 191, 0),
    woosh.Token(woosh.NAME, 'if', 191, 4, 191, 6),
    woosh.Token(woosh.NAME, 'hasattr', 191, 7, 191, 14),
    woosh.Token(woosh.OP, '(', 191, 14, 191, 15),
    woosh.Token(woosh.NAME, 'os', 191, 15, 191, 17),
    woosh.Token(woosh.OP, '.', 191, 17, 191, 18),
    woosh.Token(woosh.NAME, 'path', 191, 18, 191, 22),
    woosh.Token(woosh.OP, ',', 191, 22, 191, 23),
    woosh.Token(woosh.STRING, "'realpath'", 191, 24, 191, 34),
    woosh.Token(woosh.OP, ')', 191, 34, 191, 35),
    woosh.Token(woosh.OP, ':', 191, 35, 191, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 191, 36, 192, 0),
    woosh.Token(woosh.COMMENT, '# Python 2.2 introduced os.path.realpath(); it is used', 192, 8, 192, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 192, 62, 193, 0),
    woosh.Token(woosh.COMMENT, '# here to work around problems with Cygwin not being', 193, 8, 193, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 193, 60, 194, 0),
    woosh.Token(woosh.COMMENT, '# able to open symlinks for reading', 194, 8, 194, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 194, 43, 195, 0),
    woosh.Token(woosh.INDENT, '        ', 195, 0, 195, 8),
    woosh.Token(woosh.NAME, 'executable', 195, 8, 195, 18),
    woosh.Token(woosh.OP, '=', 195, 19, 195, 20),
    woosh.Token(woosh.NAME, 'os', 195, 21, 195, 23),
    woosh.Token(woosh.OP, '.', 195, 23, 195, 24),
    woosh.Token(woosh.NAME, 'path', 195, 24, 195, 28),
    woosh.Token(woosh.OP, '.', 195, 28, 195, 29),
    woosh.Token(woosh.NAME, 'realpath', 195, 29, 195, 37),
    woosh.Token(woosh.OP, '(', 195, 37, 195, 38),
    woosh.Token(woosh.NAME, 'executable', 195, 38, 195, 48),
    woosh.Token(woosh.OP, ')', 195, 48, 195, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 195, 49, 196, 0),
    woosh.Token(woosh.DEDENT, '    ', 196, 0, 196, 4),
    woosh.Token(woosh.NAME, 'with', 196, 4, 196, 8),
    woosh.Token(woosh.NAME, 'open', 196, 9, 196, 13),
    woosh.Token(woosh.OP, '(', 196, 13, 196, 14),
    woosh.Token(woosh.NAME, 'executable', 196, 14, 196, 24),
    woosh.Token(woosh.OP, ',', 196, 24, 196, 25),
    woosh.Token(woosh.STRING, "'rb'", 196, 26, 196, 30),
    woosh.Token(woosh.OP, ')', 196, 30, 196, 31),
    woosh.Token(woosh.NAME, 'as', 196, 32, 196, 34),
    woosh.Token(woosh.NAME, 'f', 196, 35, 196, 36),
    woosh.Token(woosh.OP, ':', 196, 36, 196, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 196, 37, 197, 0),
    woosh.Token(woosh.INDENT, '        ', 197, 0, 197, 8),
    woosh.Token(woosh.NAME, 'binary', 197, 8, 197, 14),
    woosh.Token(woosh.OP, '=', 197, 15, 197, 16),
    woosh.Token(woosh.NAME, 'f', 197, 17, 197, 18),
    woosh.Token(woosh.OP, '.', 197, 18, 197, 19),
    woosh.Token(woosh.NAME, 'read', 197, 19, 197, 23),
    woosh.Token(woosh.OP, '(', 197, 23, 197, 24),
    woosh.Token(woosh.NAME, 'chunksize', 197, 24, 197, 33),
    woosh.Token(woosh.OP, ')', 197, 33, 197, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 197, 34, 198, 0),
    woosh.Token(woosh.NAME, 'pos', 198, 8, 198, 11),
    woosh.Token(woosh.OP, '=', 198, 12, 198, 13),
    woosh.Token(woosh.NUMBER, '0', 198, 14, 198, 15),
    woosh.Token(woosh.NEWLINE, '\r\n', 198, 15, 199, 0),
    woosh.Token(woosh.NAME, 'while', 199, 8, 199, 13),
    woosh.Token(woosh.NAME, 'pos', 199, 14, 199, 17),
    woosh.Token(woosh.OP, '<', 199, 18, 199, 19),
    woosh.Token(woosh.NAME, 'len', 199, 20, 199, 23),
    woosh.Token(woosh.OP, '(', 199, 23, 199, 24),
    woosh.Token(woosh.NAME, 'binary', 199, 24, 199, 30),
    woosh.Token(woosh.OP, ')', 199, 30, 199, 31),
    woosh.Token(woosh.OP, ':', 199, 31, 199, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 199, 32, 200, 0),
    woosh.Token(woosh.INDENT, '            ', 200, 0, 200, 12),
    woosh.Token(woosh.NAME, 'if', 200, 12, 200, 14),
    woosh.Token(woosh.STRING, "b'libc'", 200, 15, 200, 22),
    woosh.Token(woosh.NAME, 'in', 200, 23, 200, 25),
    woosh.Token(woosh.NAME, 'binary', 200, 26, 200, 32),
    woosh.Token(woosh.NAME, 'or', 200, 33, 200, 35),
    woosh.Token(woosh.STRING, "b'GLIBC'", 200, 36, 200, 44),
    woosh.Token(woosh.NAME, 'in', 200, 45, 200, 47),
    woosh.Token(woosh.NAME, 'binary', 200, 48, 200, 54),
    woosh.Token(woosh.OP, ':', 200, 54, 200, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 200, 55, 201, 0),
    woosh.Token(woosh.INDENT, '                ', 201, 0, 201, 16),
    woosh.Token(woosh.NAME, 'm', 201, 16, 201, 17),
    woosh.Token(woosh.OP, '=', 201, 18, 201, 19),
    woosh.Token(woosh.NAME, '_libc_search', 201, 20, 201, 32),
    woosh.Token(woosh.OP, '.', 201, 32, 201, 33),
    woosh.Token(woosh.NAME, 'search', 201, 33, 201, 39),
    woosh.Token(woosh.OP, '(', 201, 39, 201, 40),
    woosh.Token(woosh.NAME, 'binary', 201, 40, 201, 46),
    woosh.Token(woosh.OP, ',', 201, 46, 201, 47),
    woosh.Token(woosh.NAME, 'pos', 201, 48, 201, 51),
    woosh.Token(woosh.OP, ')', 201, 51, 201, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 201, 52, 202, 0),
    woosh.Token(woosh.DEDENT, '            ', 202, 0, 202, 12),
    woosh.Token(woosh.NAME, 'else', 202, 12, 202, 16),
    woosh.Token(woosh.OP, ':', 202, 16, 202, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 202, 17, 203, 0),
    woosh.Token(woosh.INDENT, '                ', 203, 0, 203, 16),
    woosh.Token(woosh.NAME, 'm', 203, 16, 203, 17),
    woosh.Token(woosh.OP, '=', 203, 18, 203, 19),
    woosh.Token(woosh.NAME, 'None', 203, 20, 203, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 203, 24, 204, 0),
    woosh.Token(woosh.DEDENT, '            ', 204, 0, 204, 12),
    woosh.Token(woosh.NAME, 'if', 204, 12, 204, 14),
    woosh.Token(woosh.NAME, 'not', 204, 15, 204, 18),
    woosh.Token(woosh.NAME, 'm', 204, 19, 204, 20),
    woosh.Token(woosh.NAME, 'or', 204, 21, 204, 23),
    woosh.Token(woosh.NAME, 'm', 204, 24, 204, 25),
    woosh.Token(woosh.OP, '.', 204, 25, 204, 26),
    woosh.Token(woosh.NAME, 'end', 204, 26, 204, 29),
    woosh.Token(woosh.OP, '(', 204, 29, 204, 30),
    woosh.Token(woosh.OP, ')', 204, 30, 204, 31),
    woosh.Token(woosh.OP, '==', 204, 32, 204, 34),
    woosh.Token(woosh.NAME, 'len', 204, 35, 204, 38),
    woosh.Token(woosh.OP, '(', 204, 38, 204, 39),
    woosh.Token(woosh.NAME, 'binary', 204, 39, 204, 45),
    woosh.Token(woosh.OP, ')', 204, 45, 204, 46),
    woosh.Token(woosh.OP, ':', 204, 46, 204, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 204, 47, 205, 0),
    woosh.Token(woosh.INDENT, '                ', 205, 0, 205, 16),
    woosh.Token(woosh.NAME, 'chunk', 205, 16, 205, 21),
    woosh.Token(woosh.OP, '=', 205, 22, 205, 23),
    woosh.Token(woosh.NAME, 'f', 205, 24, 205, 25),
    woosh.Token(woosh.OP, '.', 205, 25, 205, 26),
    woosh.Token(woosh.NAME, 'read', 205, 26, 205, 30),
    woosh.Token(woosh.OP, '(', 205, 30, 205, 31),
    woosh.Token(woosh.NAME, 'chunksize', 205, 31, 205, 40),
    woosh.Token(woosh.OP, ')', 205, 40, 205, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 205, 41, 206, 0),
    woosh.Token(woosh.NAME, 'if', 206, 16, 206, 18),
    woosh.Token(woosh.NAME, 'chunk', 206, 19, 206, 24),
    woosh.Token(woosh.OP, ':', 206, 24, 206, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 206, 25, 207, 0),
    woosh.Token(woosh.INDENT, '                    ', 207, 0, 207, 20),
    woosh.Token(woosh.NAME, 'binary', 207, 20, 207, 26),
    woosh.Token(woosh.OP, '=', 207, 27, 207, 28),
    woosh.Token(woosh.NAME, 'binary', 207, 29, 207, 35),
    woosh.Token(woosh.OP, '[', 207, 35, 207, 36),
    woosh.Token(woosh.NAME, 'max', 207, 36, 207, 39),
    woosh.Token(woosh.OP, '(', 207, 39, 207, 40),
    woosh.Token(woosh.NAME, 'pos', 207, 40, 207, 43),
    woosh.Token(woosh.OP, ',', 207, 43, 207, 44),
    woosh.Token(woosh.NAME, 'len', 207, 45, 207, 48),
    woosh.Token(woosh.OP, '(', 207, 48, 207, 49),
    woosh.Token(woosh.NAME, 'binary', 207, 49, 207, 55),
    woosh.Token(woosh.OP, ')', 207, 55, 207, 56),
    woosh.Token(woosh.OP, '-', 207, 57, 207, 58),
    woosh.Token(woosh.NUMBER, '1000', 207, 59, 207, 63),
    woosh.Token(woosh.OP, ')', 207, 63, 207, 64),
    woosh.Token(woosh.OP, ':', 207, 64, 207, 65),
    woosh.Token(woosh.OP, ']', 207, 65, 207, 66),
    woosh.Token(woosh.OP, '+', 207, 67, 207, 68),
    woosh.Token(woosh.NAME, 'chunk', 207, 69, 207, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 207, 74, 208, 0),
    woosh.Token(woosh.NAME, 'pos', 208, 20, 208, 23),
    woosh.Token(woosh.OP, '=', 208, 24, 208, 25),
    woosh.Token(woosh.NUMBER, '0', 208, 26, 208, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 208, 27, 209, 0),
    woosh.Token(woosh.NAME, 'continue', 209, 20, 209, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 209, 28, 210, 0),
    woosh.Token(woosh.DEDENT, '                ', 210, 0, 210, 16),
    woosh.Token(woosh.NAME, 'if', 210, 16, 210, 18),
    woosh.Token(woosh.NAME, 'not', 210, 19, 210, 22),
    woosh.Token(woosh.NAME, 'm', 210, 23, 210, 24),
    woosh.Token(woosh.OP, ':', 210, 24, 210, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 210, 25, 211, 0),
    woosh.Token(woosh.INDENT, '                    ', 211, 0, 211, 20),
    woosh.Token(woosh.NAME, 'break', 211, 20, 211, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 211, 25, 212, 0),
    woosh.Token(woosh.DEDENT, '            ', 212, 0, 212, 12),
    woosh.Token(woosh.DEDENT, '', 212, 12, 212, 12),
    woosh.Token(woosh.NAME, 'libcinit', 212, 12, 212, 20),
    woosh.Token(woosh.OP, ',', 212, 20, 212, 21),
    woosh.Token(woosh.NAME, 'glibc', 212, 22, 212, 27),
    woosh.Token(woosh.OP, ',', 212, 27, 212, 28),
    woosh.Token(woosh.NAME, 'glibcversion', 212, 29, 212, 41),
    woosh.Token(woosh.OP, ',', 212, 41, 212, 42),
    woosh.Token(woosh.NAME, 'so', 212, 43, 212, 45),
    woosh.Token(woosh.OP, ',', 212, 45, 212, 46),
    woosh.Token(woosh.NAME, 'threads', 212, 47, 212, 54),
    woosh.Token(woosh.OP, ',', 212, 54, 212, 55),
    woosh.Token(woosh.NAME, 'soversion', 212, 56, 212, 65),
    woosh.Token(woosh.OP, '=', 212, 66, 212, 67),
    woosh.Token(woosh.OP, '[', 212, 68, 212, 69),
    woosh.Token(woosh.NAME, 's', 213, 16, 213, 17),
    woosh.Token(woosh.OP, '.', 213, 17, 213, 18),
    woosh.Token(woosh.NAME, 'decode', 213, 18, 213, 24),
    woosh.Token(woosh.OP, '(', 213, 24, 213, 25),
    woosh.Token(woosh.STRING, "'latin1'", 213, 25, 213, 33),
    woosh.Token(woosh.OP, ')', 213, 33, 213, 34),
    woosh.Token(woosh.NAME, 'if', 213, 35, 213, 37),
    woosh.Token(woosh.NAME, 's', 213, 38, 213, 39),
    woosh.Token(woosh.NAME, 'is', 213, 40, 213, 42),
    woosh.Token(woosh.NAME, 'not', 213, 43, 213, 46),
    woosh.Token(woosh.NAME, 'None', 213, 47, 213, 51),
    woosh.Token(woosh.NAME, 'else', 213, 52, 213, 56),
    woosh.Token(woosh.NAME, 's', 213, 57, 213, 58),
    woosh.Token(woosh.NAME, 'for', 214, 16, 214, 19),
    woosh.Token(woosh.NAME, 's', 214, 20, 214, 21),
    woosh.Token(woosh.NAME, 'in', 214, 22, 214, 24),
    woosh.Token(woosh.NAME, 'm', 214, 25, 214, 26),
    woosh.Token(woosh.OP, '.', 214, 26, 214, 27),
    woosh.Token(woosh.NAME, 'groups', 214, 27, 214, 33),
    woosh.Token(woosh.OP, '(', 214, 33, 214, 34),
    woosh.Token(woosh.OP, ')', 214, 34, 214, 35),
    woosh.Token(woosh.OP, ']', 214, 35, 214, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 214, 36, 215, 0),
    woosh.Token(woosh.NAME, 'if', 215, 12, 215, 14),
    woosh.Token(woosh.NAME, 'libcinit', 215, 15, 215, 23),
    woosh.Token(woosh.NAME, 'and', 215, 24, 215, 27),
    woosh.Token(woosh.NAME, 'not', 215, 28, 215, 31),
    woosh.Token(woosh.NAME, 'lib', 215, 32, 215, 35),
    woosh.Token(woosh.OP, ':', 215, 35, 215, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 215, 36, 216, 0),
    woosh.Token(woosh.INDENT, '                ', 216, 0, 216, 16),
    woosh.Token(woosh.NAME, 'lib', 216, 16, 216, 19),
    woosh.Token(woosh.OP, '=', 216, 20, 216, 21),
    woosh.Token(woosh.STRING, "'libc'", 216, 22, 216, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 216, 28, 217, 0),
    woosh.Token(woosh.DEDENT, '            ', 217, 0, 217, 12),
    woosh.Token(woosh.NAME, 'elif', 217, 12, 217, 16),
    woosh.Token(woosh.NAME, 'glibc', 217, 17, 217, 22),
    woosh.Token(woosh.OP, ':', 217, 22, 217, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 217, 23, 218, 0),
    woosh.Token(woosh.INDENT, '                ', 218, 0, 218, 16),
    woosh.Token(woosh.NAME, 'if', 218, 16, 218, 18),
    woosh.Token(woosh.NAME, 'lib', 218, 19, 218, 22),
    woosh.Token(woosh.OP, '!=', 218, 23, 218, 25),
    woosh.Token(woosh.STRING, "'glibc'", 218, 26, 218, 33),
    woosh.Token(woosh.OP, ':', 218, 33, 218, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 218, 34, 219, 0),
    woosh.Token(woosh.INDENT, '                    ', 219, 0, 219, 20),
    woosh.Token(woosh.NAME, 'lib', 219, 20, 219, 23),
    woosh.Token(woosh.OP, '=', 219, 24, 219, 25),
    woosh.Token(woosh.STRING, "'glibc'", 219, 26, 219, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 219, 33, 220, 0),
    woosh.Token(woosh.NAME, 'version', 220, 20, 220, 27),
    woosh.Token(woosh.OP, '=', 220, 28, 220, 29),
    woosh.Token(woosh.NAME, 'glibcversion', 220, 30, 220, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 220, 42, 221, 0),
    woosh.Token(woosh.DEDENT, '                ', 221, 0, 221, 16),
    woosh.Token(woosh.NAME, 'elif', 221, 16, 221, 20),
    woosh.Token(woosh.NAME, 'V', 221, 21, 221, 22),
    woosh.Token(woosh.OP, '(', 221, 22, 221, 23),
    woosh.Token(woosh.NAME, 'glibcversion', 221, 23, 221, 35),
    woosh.Token(woosh.OP, ')', 221, 35, 221, 36),
    woosh.Token(woosh.OP, '>', 221, 37, 221, 38),
    woosh.Token(woosh.NAME, 'V', 221, 39, 221, 40),
    woosh.Token(woosh.OP, '(', 221, 40, 221, 41),
    woosh.Token(woosh.NAME, 'version', 221, 41, 221, 48),
    woosh.Token(woosh.OP, ')', 221, 48, 221, 49),
    woosh.Token(woosh.OP, ':', 221, 49, 221, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 221, 50, 222, 0),
    woosh.Token(woosh.INDENT, '                    ', 222, 0, 222, 20),
    woosh.Token(woosh.NAME, 'version', 222, 20, 222, 27),
    woosh.Token(woosh.OP, '=', 222, 28, 222, 29),
    woosh.Token(woosh.NAME, 'glibcversion', 222, 30, 222, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 222, 42, 223, 0),
    woosh.Token(woosh.DEDENT, '            ', 223, 0, 223, 12),
    woosh.Token(woosh.DEDENT, '', 223, 12, 223, 12),
    woosh.Token(woosh.NAME, 'elif', 223, 12, 223, 16),
    woosh.Token(woosh.NAME, 'so', 223, 17, 223, 19),
    woosh.Token(woosh.OP, ':', 223, 19, 223, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 223, 20, 224, 0),
    woosh.Token(woosh.INDENT, '                ', 224, 0, 224, 16),
    woosh.Token(woosh.NAME, 'if', 224, 16, 224, 18),
    woosh.Token(woosh.NAME, 'lib', 224, 19, 224, 22),
    woosh.Token(woosh.OP, '!=', 224, 23, 224, 25),
    woosh.Token(woosh.STRING, "'glibc'", 224, 26, 224, 33),
    woosh.Token(woosh.OP, ':', 224, 33, 224, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 224, 34, 225, 0),
    woosh.Token(woosh.INDENT, '                    ', 225, 0, 225, 20),
    woosh.Token(woosh.NAME, 'lib', 225, 20, 225, 23),
    woosh.Token(woosh.OP, '=', 225, 24, 225, 25),
    woosh.Token(woosh.STRING, "'libc'", 225, 26, 225, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 225, 32, 226, 0),
    woosh.Token(woosh.NAME, 'if', 226, 20, 226, 22),
    woosh.Token(woosh.NAME, 'soversion', 226, 23, 226, 32),
    woosh.Token(woosh.NAME, 'and', 226, 33, 226, 36),
    woosh.Token(woosh.OP, '(', 226, 37, 226, 38),
    woosh.Token(woosh.NAME, 'not', 226, 38, 226, 41),
    woosh.Token(woosh.NAME, 'version', 226, 42, 226, 49),
    woosh.Token(woosh.NAME, 'or', 226, 50, 226, 52),
    woosh.Token(woosh.NAME, 'V', 226, 53, 226, 54),
    woosh.Token(woosh.OP, '(', 226, 54, 226, 55),
    woosh.Token(woosh.NAME, 'soversion', 226, 55, 226, 64),
    woosh.Token(woosh.OP, ')', 226, 64, 226, 65),
    woosh.Token(woosh.OP, '>', 226, 66, 226, 67),
    woosh.Token(woosh.NAME, 'V', 226, 68, 226, 69),
    woosh.Token(woosh.OP, '(', 226, 69, 226, 70),
    woosh.Token(woosh.NAME, 'version', 226, 70, 226, 77),
    woosh.Token(woosh.OP, ')', 226, 77, 226, 78),
    woosh.Token(woosh.OP, ')', 226, 78, 226, 79),
    woosh.Token(woosh.OP, ':', 226, 79, 226, 80),
    woosh.Token(woosh.NEWLINE, '\r\n', 226, 80, 227, 0),
    woosh.Token(woosh.INDENT, '                        ', 227, 0, 227, 24),
    woosh.Token(woosh.NAME, 'version', 227, 24, 227, 31),
    woosh.Token(woosh.OP, '=', 227, 32, 227, 33),
    woosh.Token(woosh.NAME, 'soversion', 227, 34, 227, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 227, 43, 228, 0),
    woosh.Token(woosh.DEDENT, '                    ', 228, 0, 228, 20),
    woosh.Token(woosh.NAME, 'if', 228, 20, 228, 22),
    woosh.Token(woosh.NAME, 'threads', 228, 23, 228, 30),
    woosh.Token(woosh.NAME, 'and', 228, 31, 228, 34),
    woosh.Token(woosh.NAME, 'version', 228, 35, 228, 42),
    woosh.Token(woosh.OP, '[', 228, 42, 228, 43),
    woosh.Token(woosh.OP, '-', 228, 43, 228, 44),
    woosh.Token(woosh.NAME, 'len', 228, 44, 228, 47),
    woosh.Token(woosh.OP, '(', 228, 47, 228, 48),
    woosh.Token(woosh.NAME, 'threads', 228, 48, 228, 55),
    woosh.Token(woosh.OP, ')', 228, 55, 228, 56),
    woosh.Token(woosh.OP, ':', 228, 56, 228, 57),
    woosh.Token(woosh.OP, ']', 228, 57, 228, 58),
    woosh.Token(woosh.OP, '!=', 228, 59, 228, 61),
    woosh.Token(woosh.NAME, 'threads', 228, 62, 228, 69),
    woosh.Token(woosh.OP, ':', 228, 69, 228, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 228, 70, 229, 0),
    woosh.Token(woosh.INDENT, '                        ', 229, 0, 229, 24),
    woosh.Token(woosh.NAME, 'version', 229, 24, 229, 31),
    woosh.Token(woosh.OP, '=', 229, 32, 229, 33),
    woosh.Token(woosh.NAME, 'version', 229, 34, 229, 41),
    woosh.Token(woosh.OP, '+', 229, 42, 229, 43),
    woosh.Token(woosh.NAME, 'threads', 229, 44, 229, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 229, 51, 230, 0),
    woosh.Token(woosh.DEDENT, '            ', 230, 0, 230, 12),
    woosh.Token(woosh.DEDENT, '', 230, 12, 230, 12),
    woosh.Token(woosh.DEDENT, '', 230, 12, 230, 12),
    woosh.Token(woosh.NAME, 'pos', 230, 12, 230, 15),
    woosh.Token(woosh.OP, '=', 230, 16, 230, 17),
    woosh.Token(woosh.NAME, 'm', 230, 18, 230, 19),
    woosh.Token(woosh.OP, '.', 230, 19, 230, 20),
    woosh.Token(woosh.NAME, 'end', 230, 20, 230, 23),
    woosh.Token(woosh.OP, '(', 230, 23, 230, 24),
    woosh.Token(woosh.OP, ')', 230, 24, 230, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 230, 25, 231, 0),
    woosh.Token(woosh.DEDENT, '    ', 231, 0, 231, 4),
    woosh.Token(woosh.DEDENT, '', 231, 4, 231, 4),
    woosh.Token(woosh.NAME, 'return', 231, 4, 231, 10),
    woosh.Token(woosh.NAME, 'lib', 231, 11, 231, 14),
    woosh.Token(woosh.OP, ',', 231, 14, 231, 15),
    woosh.Token(woosh.NAME, 'version', 231, 16, 231, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 231, 23, 232, 0),
    woosh.Token(woosh.DEDENT, '', 233, 0, 233, 0),
    woosh.Token(woosh.NAME, 'def', 233, 0, 233, 3),
    woosh.Token(woosh.NAME, '_norm_version', 233, 4, 233, 17),
    woosh.Token(woosh.OP, '(', 233, 17, 233, 18),
    woosh.Token(woosh.NAME, 'version', 233, 18, 233, 25),
    woosh.Token(woosh.OP, ',', 233, 25, 233, 26),
    woosh.Token(woosh.NAME, 'build', 233, 27, 233, 32),
    woosh.Token(woosh.OP, '=', 233, 32, 233, 33),
    woosh.Token(woosh.STRING, "''", 233, 33, 233, 35),
    woosh.Token(woosh.OP, ')', 233, 35, 233, 36),
    woosh.Token(woosh.OP, ':', 233, 36, 233, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 233, 37, 234, 0),
    woosh.Token(woosh.INDENT, '    ', 235, 0, 235, 4),
    woosh.Token(woosh.STRING, '""" Normalize the version and build strings and return a single\r\n        version string using the format major.minor.build (or patchlevel).\r\n    """', 235, 4, 237, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 237, 7, 238, 0),
    woosh.Token(woosh.NAME, 'l', 238, 4, 238, 5),
    woosh.Token(woosh.OP, '=', 238, 6, 238, 7),
    woosh.Token(woosh.NAME, 'version', 238, 8, 238, 15),
    woosh.Token(woosh.OP, '.', 238, 15, 238, 16),
    woosh.Token(woosh.NAME, 'split', 238, 16, 238, 21),
    woosh.Token(woosh.OP, '(', 238, 21, 238, 22),
    woosh.Token(woosh.STRING, "'.'", 238, 22, 238, 25),
    woosh.Token(woosh.OP, ')', 238, 25, 238, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 238, 26, 239, 0),
    woosh.Token(woosh.NAME, 'if', 239, 4, 239, 6),
    woosh.Token(woosh.NAME, 'build', 239, 7, 239, 12),
    woosh.Token(woosh.OP, ':', 239, 12, 239, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 239, 13, 240, 0),
    woosh.Token(woosh.INDENT, '        ', 240, 0, 240, 8),
    woosh.Token(woosh.NAME, 'l', 240, 8, 240, 9),
    woosh.Token(woosh.OP, '.', 240, 9, 240, 10),
    woosh.Token(woosh.NAME, 'append', 240, 10, 240, 16),
    woosh.Token(woosh.OP, '(', 240, 16, 240, 17),
    woosh.Token(woosh.NAME, 'build', 240, 17, 240, 22),
    woosh.Token(woosh.OP, ')', 240, 22, 240, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 240, 23, 241, 0),
    woosh.Token(woosh.DEDENT, '    ', 241, 0, 241, 4),
    woosh.Token(woosh.NAME, 'try', 241, 4, 241, 7),
    woosh.Token(woosh.OP, ':', 241, 7, 241, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 241, 8, 242, 0),
    woosh.Token(woosh.INDENT, '        ', 242, 0, 242, 8),
    woosh.Token(woosh.NAME, 'ints', 242, 8, 242, 12),
    woosh.Token(woosh.OP, '=', 242, 13, 242, 14),
    woosh.Token(woosh.NAME, 'map', 242, 15, 242, 18),
    woosh.Token(woosh.OP, '(', 242, 18, 242, 19),
    woosh.Token(woosh.NAME, 'int', 242, 19, 242, 22),
    woosh.Token(woosh.OP, ',', 242, 22, 242, 23),
    woosh.Token(woosh.NAME, 'l', 242, 24, 242, 25),
    woosh.Token(woosh.OP, ')', 242, 25, 242, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 242, 26, 243, 0),
    woosh.Token(woosh.DEDENT, '    ', 243, 0, 243, 4),
    woosh.Token(woosh.NAME, 'except', 243, 4, 243, 10),
    woosh.Token(woosh.NAME, 'ValueError', 243, 11, 243, 21),
    woosh.Token(woosh.OP, ':', 243, 21, 243, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 243, 22, 244, 0),
    woosh.Token(woosh.INDENT, '        ', 244, 0, 244, 8),
    woosh.Token(woosh.NAME, 'strings', 244, 8, 244, 15),
    woosh.Token(woosh.OP, '=', 244, 16, 244, 17),
    woosh.Token(woosh.NAME, 'l', 244, 18, 244, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 244, 19, 245, 0),
    woosh.Token(woosh.DEDENT, '    ', 245, 0, 245, 4),
    woosh.Token(woosh.NAME, 'else', 245, 4, 245, 8),
    woosh.Token(woosh.OP, ':', 245, 8, 245, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 245, 9, 246, 0),
    woosh.Token(woosh.INDENT, '        ', 246, 0, 246, 8),
    woosh.Token(woosh.NAME, 'strings', 246, 8, 246, 15),
    woosh.Token(woosh.OP, '=', 246, 16, 246, 17),
    woosh.Token(woosh.NAME, 'list', 246, 18, 246, 22),
    woosh.Token(woosh.OP, '(', 246, 22, 246, 23),
    woosh.Token(woosh.NAME, 'map', 246, 23, 246, 26),
    woosh.Token(woosh.OP, '(', 246, 26, 246, 27),
    woosh.Token(woosh.NAME, 'str', 246, 27, 246, 30),
    woosh.Token(woosh.OP, ',', 246, 30, 246, 31),
    woosh.Token(woosh.NAME, 'ints', 246, 32, 246, 36),
    woosh.Token(woosh.OP, ')', 246, 36, 246, 37),
    woosh.Token(woosh.OP, ')', 246, 37, 246, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 246, 38, 247, 0),
    woosh.Token(woosh.DEDENT, '    ', 247, 0, 247, 4),
    woosh.Token(woosh.NAME, 'version', 247, 4, 247, 11),
    woosh.Token(woosh.OP, '=', 247, 12, 247, 13),
    woosh.Token(woosh.STRING, "'.'", 247, 14, 247, 17),
    woosh.Token(woosh.OP, '.', 247, 17, 247, 18),
    woosh.Token(woosh.NAME, 'join', 247, 18, 247, 22),
    woosh.Token(woosh.OP, '(', 247, 22, 247, 23),
    woosh.Token(woosh.NAME, 'strings', 247, 23, 247, 30),
    woosh.Token(woosh.OP, '[', 247, 30, 247, 31),
    woosh.Token(woosh.OP, ':', 247, 31, 247, 32),
    woosh.Token(woosh.NUMBER, '3', 247, 32, 247, 33),
    woosh.Token(woosh.OP, ']', 247, 33, 247, 34),
    woosh.Token(woosh.OP, ')', 247, 34, 247, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 247, 35, 248, 0),
    woosh.Token(woosh.NAME, 'return', 248, 4, 248, 10),
    woosh.Token(woosh.NAME, 'version', 248, 11, 248, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 248, 18, 249, 0),
    woosh.Token(woosh.DEDENT, '', 250, 0, 250, 0),
    woosh.Token(woosh.NAME, '_ver_output', 250, 0, 250, 11),
    woosh.Token(woosh.OP, '=', 250, 12, 250, 13),
    woosh.Token(woosh.NAME, 're', 250, 14, 250, 16),
    woosh.Token(woosh.OP, '.', 250, 16, 250, 17),
    woosh.Token(woosh.NAME, 'compile', 250, 17, 250, 24),
    woosh.Token(woosh.OP, '(', 250, 24, 250, 25),
    woosh.Token(woosh.STRING, "r'(?:([\\w ]+) ([\\w.]+) '", 250, 25, 250, 49),
    woosh.Token(woosh.STRING, "r'.*'", 251, 25, 251, 30),
    woosh.Token(woosh.STRING, "r'\\[.* ([\\d.]+)\\])'", 252, 25, 252, 44),
    woosh.Token(woosh.OP, ')', 252, 44, 252, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 252, 45, 253, 0),
    woosh.Token(woosh.COMMENT, '# Examples of VER command output:', 254, 0, 254, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 254, 33, 255, 0),
    woosh.Token(woosh.COMMENT, '#', 255, 0, 255, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 255, 1, 256, 0),
    woosh.Token(woosh.COMMENT, '#   Windows 2000:  Microsoft Windows 2000 [Version 5.00.2195]', 256, 0, 256, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 256, 61, 257, 0),
    woosh.Token(woosh.COMMENT, '#   Windows XP:    Microsoft Windows XP [Version 5.1.2600]', 257, 0, 257, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 257, 58, 258, 0),
    woosh.Token(woosh.COMMENT, '#   Windows Vista: Microsoft Windows [Version 6.0.6002]', 258, 0, 258, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 258, 55, 259, 0),
    woosh.Token(woosh.COMMENT, '#', 259, 0, 259, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 259, 1, 260, 0),
    woosh.Token(woosh.COMMENT, '# Note that the "Version" string gets localized on different', 260, 0, 260, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 260, 60, 261, 0),
    woosh.Token(woosh.COMMENT, '# Windows versions.', 261, 0, 261, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 261, 19, 262, 0),
    woosh.Token(woosh.NAME, 'def', 263, 0, 263, 3),
    woosh.Token(woosh.NAME, '_syscmd_ver', 263, 4, 263, 15),
    woosh.Token(woosh.OP, '(', 263, 15, 263, 16),
    woosh.Token(woosh.NAME, 'system', 263, 16, 263, 22),
    woosh.Token(woosh.OP, '=', 263, 22, 263, 23),
    woosh.Token(woosh.STRING, "''", 263, 23, 263, 25),
    woosh.Token(woosh.OP, ',', 263, 25, 263, 26),
    woosh.Token(woosh.NAME, 'release', 263, 27, 263, 34),
    woosh.Token(woosh.OP, '=', 263, 34, 263, 35),
    woosh.Token(woosh.STRING, "''", 263, 35, 263, 37),
    woosh.Token(woosh.OP, ',', 263, 37, 263, 38),
    woosh.Token(woosh.NAME, 'version', 263, 39, 263, 46),
    woosh.Token(woosh.OP, '=', 263, 46, 263, 47),
    woosh.Token(woosh.STRING, "''", 263, 47, 263, 49),
    woosh.Token(woosh.OP, ',', 263, 49, 263, 50),
    woosh.Token(woosh.NAME, 'supported_platforms', 265, 15, 265, 34),
    woosh.Token(woosh.OP, '=', 265, 34, 265, 35),
    woosh.Token(woosh.OP, '(', 265, 35, 265, 36),
    woosh.Token(woosh.STRING, "'win32'", 265, 36, 265, 43),
    woosh.Token(woosh.OP, ',', 265, 43, 265, 44),
    woosh.Token(woosh.STRING, "'win16'", 265, 45, 265, 52),
    woosh.Token(woosh.OP, ',', 265, 52, 265, 53),
    woosh.Token(woosh.STRING, "'dos'", 265, 54, 265, 59),
    woosh.Token(woosh.OP, ')', 265, 59, 265, 60),
    woosh.Token(woosh.OP, ')', 265, 60, 265, 61),
    woosh.Token(woosh.OP, ':', 265, 61, 265, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 265, 62, 266, 0),
    woosh.Token(woosh.INDENT, '    ', 267, 0, 267, 4),
    woosh.Token(woosh.STRING, '""" Tries to figure out the OS version used and returns\r\n        a tuple (system, release, version).\r\n\r\n        It uses the "ver" shell command for this which is known\r\n        to exists on Windows, DOS. XXX Others too ?\r\n\r\n        In case this fails, the given parameters are used as\r\n        defaults.\r\n\r\n    """', 267, 4, 276, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 276, 7, 277, 0),
    woosh.Token(woosh.NAME, 'if', 277, 4, 277, 6),
    woosh.Token(woosh.NAME, 'sys', 277, 7, 277, 10),
    woosh.Token(woosh.OP, '.', 277, 10, 277, 11),
    woosh.Token(woosh.NAME, 'platform', 277, 11, 277, 19),
    woosh.Token(woosh.NAME, 'not', 277, 20, 277, 23),
    woosh.Token(woosh.NAME, 'in', 277, 24, 277, 26),
    woosh.Token(woosh.NAME, 'supported_platforms', 277, 27, 277, 46),
    woosh.Token(woosh.OP, ':', 277, 46, 277, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 277, 47, 278, 0),
    woosh.Token(woosh.INDENT, '        ', 278, 0, 278, 8),
    woosh.Token(woosh.NAME, 'return', 278, 8, 278, 14),
    woosh.Token(woosh.NAME, 'system', 278, 15, 278, 21),
    woosh.Token(woosh.OP, ',', 278, 21, 278, 22),
    woosh.Token(woosh.NAME, 'release', 278, 23, 278, 30),
    woosh.Token(woosh.OP, ',', 278, 30, 278, 31),
    woosh.Token(woosh.NAME, 'version', 278, 32, 278, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 278, 39, 279, 0),
    woosh.Token(woosh.COMMENT, '# Try some common cmd strings', 280, 4, 280, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 280, 33, 281, 0),
    woosh.Token(woosh.DEDENT, '    ', 281, 0, 281, 4),
    woosh.Token(woosh.NAME, 'import', 281, 4, 281, 10),
    woosh.Token(woosh.NAME, 'subprocess', 281, 11, 281, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 281, 21, 282, 0),
    woosh.Token(woosh.NAME, 'for', 282, 4, 282, 7),
    woosh.Token(woosh.NAME, 'cmd', 282, 8, 282, 11),
    woosh.Token(woosh.NAME, 'in', 282, 12, 282, 14),
    woosh.Token(woosh.OP, '(', 282, 15, 282, 16),
    woosh.Token(woosh.STRING, "'ver'", 282, 16, 282, 21),
    woosh.Token(woosh.OP, ',', 282, 21, 282, 22),
    woosh.Token(woosh.STRING, "'command /c ver'", 282, 23, 282, 39),
    woosh.Token(woosh.OP, ',', 282, 39, 282, 40),
    woosh.Token(woosh.STRING, "'cmd /c ver'", 282, 41, 282, 53),
    woosh.Token(woosh.OP, ')', 282, 53, 282, 54),
    woosh.Token(woosh.OP, ':', 282, 54, 282, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 282, 55, 283, 0),
    woosh.Token(woosh.INDENT, '        ', 283, 0, 283, 8),
    woosh.Token(woosh.NAME, 'try', 283, 8, 283, 11),
    woosh.Token(woosh.OP, ':', 283, 11, 283, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 283, 12, 284, 0),
    woosh.Token(woosh.INDENT, '            ', 284, 0, 284, 12),
    woosh.Token(woosh.NAME, 'info', 284, 12, 284, 16),
    woosh.Token(woosh.OP, '=', 284, 17, 284, 18),
    woosh.Token(woosh.NAME, 'subprocess', 284, 19, 284, 29),
    woosh.Token(woosh.OP, '.', 284, 29, 284, 30),
    woosh.Token(woosh.NAME, 'check_output', 284, 30, 284, 42),
    woosh.Token(woosh.OP, '(', 284, 42, 284, 43),
    woosh.Token(woosh.NAME, 'cmd', 284, 43, 284, 46),
    woosh.Token(woosh.OP, ',', 284, 46, 284, 47),
    woosh.Token(woosh.NAME, 'stderr', 285, 43, 285, 49),
    woosh.Token(woosh.OP, '=', 285, 49, 285, 50),
    woosh.Token(woosh.NAME, 'subprocess', 285, 50, 285, 60),
    woosh.Token(woosh.OP, '.', 285, 60, 285, 61),
    woosh.Token(woosh.NAME, 'DEVNULL', 285, 61, 285, 68),
    woosh.Token(woosh.OP, ',', 285, 68, 285, 69),
    woosh.Token(woosh.NAME, 'text', 286, 43, 286, 47),
    woosh.Token(woosh.OP, '=', 286, 47, 286, 48),
    woosh.Token(woosh.NAME, 'True', 286, 48, 286, 52),
    woosh.Token(woosh.OP, ',', 286, 52, 286, 53),
    woosh.Token(woosh.NAME, 'shell', 287, 43, 287, 48),
    woosh.Token(woosh.OP, '=', 287, 48, 287, 49),
    woosh.Token(woosh.NAME, 'True', 287, 49, 287, 53),
    woosh.Token(woosh.OP, ')', 287, 53, 287, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 287, 54, 288, 0),
    woosh.Token(woosh.DEDENT, '        ', 288, 0, 288, 8),
    woosh.Token(woosh.NAME, 'except', 288, 8, 288, 14),
    woosh.Token(woosh.OP, '(', 288, 15, 288, 16),
    woosh.Token(woosh.NAME, 'OSError', 288, 16, 288, 23),
    woosh.Token(woosh.OP, ',', 288, 23, 288, 24),
    woosh.Token(woosh.NAME, 'subprocess', 288, 25, 288, 35),
    woosh.Token(woosh.OP, '.', 288, 35, 288, 36),
    woosh.Token(woosh.NAME, 'CalledProcessError', 288, 36, 288, 54),
    woosh.Token(woosh.OP, ')', 288, 54, 288, 55),
    woosh.Token(woosh.NAME, 'as', 288, 56, 288, 58),
    woosh.Token(woosh.NAME, 'why', 288, 59, 288, 62),
    woosh.Token(woosh.OP, ':', 288, 62, 288, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 288, 63, 289, 0),
    woosh.Token(woosh.COMMENT, "#print('Command %s failed: %s' % (cmd, why))", 289, 12, 289, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 289, 56, 290, 0),
    woosh.Token(woosh.INDENT, '            ', 290, 0, 290, 12),
    woosh.Token(woosh.NAME, 'continue', 290, 12, 290, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 290, 20, 291, 0),
    woosh.Token(woosh.DEDENT, '        ', 291, 0, 291, 8),
    woosh.Token(woosh.NAME, 'else', 291, 8, 291, 12),
    woosh.Token(woosh.OP, ':', 291, 12, 291, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 291, 13, 292, 0),
    woosh.Token(woosh.INDENT, '            ', 292, 0, 292, 12),
    woosh.Token(woosh.NAME, 'break', 292, 12, 292, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 292, 17, 293, 0),
    woosh.Token(woosh.DEDENT, '    ', 293, 0, 293, 4),
    woosh.Token(woosh.DEDENT, '', 293, 4, 293, 4),
    woosh.Token(woosh.NAME, 'else', 293, 4, 293, 8),
    woosh.Token(woosh.OP, ':', 293, 8, 293, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 293, 9, 294, 0),
    woosh.Token(woosh.INDENT, '        ', 294, 0, 294, 8),
    woosh.Token(woosh.NAME, 'return', 294, 8, 294, 14),
    woosh.Token(woosh.NAME, 'system', 294, 15, 294, 21),
    woosh.Token(woosh.OP, ',', 294, 21, 294, 22),
    woosh.Token(woosh.NAME, 'release', 294, 23, 294, 30),
    woosh.Token(woosh.OP, ',', 294, 30, 294, 31),
    woosh.Token(woosh.NAME, 'version', 294, 32, 294, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 294, 39, 295, 0),
    woosh.Token(woosh.COMMENT, '# Parse the output', 296, 4, 296, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 296, 22, 297, 0),
    woosh.Token(woosh.DEDENT, '    ', 297, 0, 297, 4),
    woosh.Token(woosh.NAME, 'info', 297, 4, 297, 8),
    woosh.Token(woosh.OP, '=', 297, 9, 297, 10),
    woosh.Token(woosh.NAME, 'info', 297, 11, 297, 15),
    woosh.Token(woosh.OP, '.', 297, 15, 297, 16),
    woosh.Token(woosh.NAME, 'strip', 297, 16, 297, 21),
    woosh.Token(woosh.OP, '(', 297, 21, 297, 22),
    woosh.Token(woosh.OP, ')', 297, 22, 297, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 297, 23, 298, 0),
    woosh.Token(woosh.NAME, 'm', 298, 4, 298, 5),
    woosh.Token(woosh.OP, '=', 298, 6, 298, 7),
    woosh.Token(woosh.NAME, '_ver_output', 298, 8, 298, 19),
    woosh.Token(woosh.OP, '.', 298, 19, 298, 20),
    woosh.Token(woosh.NAME, 'match', 298, 20, 298, 25),
    woosh.Token(woosh.OP, '(', 298, 25, 298, 26),
    woosh.Token(woosh.NAME, 'info', 298, 26, 298, 30),
    woosh.Token(woosh.OP, ')', 298, 30, 298, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 298, 31, 299, 0),
    woosh.Token(woosh.NAME, 'if', 299, 4, 299, 6),
    woosh.Token(woosh.NAME, 'm', 299, 7, 299, 8),
    woosh.Token(woosh.NAME, 'is', 299, 9, 299, 11),
    woosh.Token(woosh.NAME, 'not', 299, 12, 299, 15),
    woosh.Token(woosh.NAME, 'None', 299, 16, 299, 20),
    woosh.Token(woosh.OP, ':', 299, 20, 299, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 299, 21, 300, 0),
    woosh.Token(woosh.INDENT, '        ', 300, 0, 300, 8),
    woosh.Token(woosh.NAME, 'system', 300, 8, 300, 14),
    woosh.Token(woosh.OP, ',', 300, 14, 300, 15),
    woosh.Token(woosh.NAME, 'release', 300, 16, 300, 23),
    woosh.Token(woosh.OP, ',', 300, 23, 300, 24),
    woosh.Token(woosh.NAME, 'version', 300, 25, 300, 32),
    woosh.Token(woosh.OP, '=', 300, 33, 300, 34),
    woosh.Token(woosh.NAME, 'm', 300, 35, 300, 36),
    woosh.Token(woosh.OP, '.', 300, 36, 300, 37),
    woosh.Token(woosh.NAME, 'groups', 300, 37, 300, 43),
    woosh.Token(woosh.OP, '(', 300, 43, 300, 44),
    woosh.Token(woosh.OP, ')', 300, 44, 300, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 300, 45, 301, 0),
    woosh.Token(woosh.COMMENT, '# Strip trailing dots from version and release', 301, 8, 301, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 301, 54, 302, 0),
    woosh.Token(woosh.NAME, 'if', 302, 8, 302, 10),
    woosh.Token(woosh.NAME, 'release', 302, 11, 302, 18),
    woosh.Token(woosh.OP, '[', 302, 18, 302, 19),
    woosh.Token(woosh.OP, '-', 302, 19, 302, 20),
    woosh.Token(woosh.NUMBER, '1', 302, 20, 302, 21),
    woosh.Token(woosh.OP, ']', 302, 21, 302, 22),
    woosh.Token(woosh.OP, '==', 302, 23, 302, 25),
    woosh.Token(woosh.STRING, "'.'", 302, 26, 302, 29),
    woosh.Token(woosh.OP, ':', 302, 29, 302, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 302, 30, 303, 0),
    woosh.Token(woosh.INDENT, '            ', 303, 0, 303, 12),
    woosh.Token(woosh.NAME, 'release', 303, 12, 303, 19),
    woosh.Token(woosh.OP, '=', 303, 20, 303, 21),
    woosh.Token(woosh.NAME, 'release', 303, 22, 303, 29),
    woosh.Token(woosh.OP, '[', 303, 29, 303, 30),
    woosh.Token(woosh.OP, ':', 303, 30, 303, 31),
    woosh.Token(woosh.OP, '-', 303, 31, 303, 32),
    woosh.Token(woosh.NUMBER, '1', 303, 32, 303, 33),
    woosh.Token(woosh.OP, ']', 303, 33, 303, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 303, 34, 304, 0),
    woosh.Token(woosh.DEDENT, '        ', 304, 0, 304, 8),
    woosh.Token(woosh.NAME, 'if', 304, 8, 304, 10),
    woosh.Token(woosh.NAME, 'version', 304, 11, 304, 18),
    woosh.Token(woosh.OP, '[', 304, 18, 304, 19),
    woosh.Token(woosh.OP, '-', 304, 19, 304, 20),
    woosh.Token(woosh.NUMBER, '1', 304, 20, 304, 21),
    woosh.Token(woosh.OP, ']', 304, 21, 304, 22),
    woosh.Token(woosh.OP, '==', 304, 23, 304, 25),
    woosh.Token(woosh.STRING, "'.'", 304, 26, 304, 29),
    woosh.Token(woosh.OP, ':', 304, 29, 304, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 304, 30, 305, 0),
    woosh.Token(woosh.INDENT, '            ', 305, 0, 305, 12),
    woosh.Token(woosh.NAME, 'version', 305, 12, 305, 19),
    woosh.Token(woosh.OP, '=', 305, 20, 305, 21),
    woosh.Token(woosh.NAME, 'version', 305, 22, 305, 29),
    woosh.Token(woosh.OP, '[', 305, 29, 305, 30),
    woosh.Token(woosh.OP, ':', 305, 30, 305, 31),
    woosh.Token(woosh.OP, '-', 305, 31, 305, 32),
    woosh.Token(woosh.NUMBER, '1', 305, 32, 305, 33),
    woosh.Token(woosh.OP, ']', 305, 33, 305, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 305, 34, 306, 0),
    woosh.Token(woosh.COMMENT, '# Normalize the version and build strings (eliminating additional', 306, 8, 306, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 306, 73, 307, 0),
    woosh.Token(woosh.COMMENT, '# zeros)', 307, 8, 307, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 307, 16, 308, 0),
    woosh.Token(woosh.DEDENT, '        ', 308, 0, 308, 8),
    woosh.Token(woosh.NAME, 'version', 308, 8, 308, 15),
    woosh.Token(woosh.OP, '=', 308, 16, 308, 17),
    woosh.Token(woosh.NAME, '_norm_version', 308, 18, 308, 31),
    woosh.Token(woosh.OP, '(', 308, 31, 308, 32),
    woosh.Token(woosh.NAME, 'version', 308, 32, 308, 39),
    woosh.Token(woosh.OP, ')', 308, 39, 308, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 308, 40, 309, 0),
    woosh.Token(woosh.DEDENT, '    ', 309, 0, 309, 4),
    woosh.Token(woosh.NAME, 'return', 309, 4, 309, 10),
    woosh.Token(woosh.NAME, 'system', 309, 11, 309, 17),
    woosh.Token(woosh.OP, ',', 309, 17, 309, 18),
    woosh.Token(woosh.NAME, 'release', 309, 19, 309, 26),
    woosh.Token(woosh.OP, ',', 309, 26, 309, 27),
    woosh.Token(woosh.NAME, 'version', 309, 28, 309, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 309, 35, 310, 0),
    woosh.Token(woosh.DEDENT, '', 311, 0, 311, 0),
    woosh.Token(woosh.NAME, '_WIN32_CLIENT_RELEASES', 311, 0, 311, 22),
    woosh.Token(woosh.OP, '=', 311, 23, 311, 24),
    woosh.Token(woosh.OP, '{', 311, 25, 311, 26),
    woosh.Token(woosh.OP, '(', 312, 4, 312, 5),
    woosh.Token(woosh.NUMBER, '5', 312, 5, 312, 6),
    woosh.Token(woosh.OP, ',', 312, 6, 312, 7),
    woosh.Token(woosh.NUMBER, '0', 312, 8, 312, 9),
    woosh.Token(woosh.OP, ')', 312, 9, 312, 10),
    woosh.Token(woosh.OP, ':', 312, 10, 312, 11),
    woosh.Token(woosh.STRING, '"2000"', 312, 12, 312, 18),
    woosh.Token(woosh.OP, ',', 312, 18, 312, 19),
    woosh.Token(woosh.OP, '(', 313, 4, 313, 5),
    woosh.Token(woosh.NUMBER, '5', 313, 5, 313, 6),
    woosh.Token(woosh.OP, ',', 313, 6, 313, 7),
    woosh.Token(woosh.NUMBER, '1', 313, 8, 313, 9),
    woosh.Token(woosh.OP, ')', 313, 9, 313, 10),
    woosh.Token(woosh.OP, ':', 313, 10, 313, 11),
    woosh.Token(woosh.STRING, '"XP"', 313, 12, 313, 16),
    woosh.Token(woosh.OP, ',', 313, 16, 313, 17),
    woosh.Token(woosh.COMMENT, '# Strictly, 5.2 client is XP 64-bit, but platform.py historically', 314, 4, 314, 69),
    woosh.Token(woosh.COMMENT, '# has always called it 2003 Server', 315, 4, 315, 38),
    woosh.Token(woosh.OP, '(', 316, 4, 316, 5),
    woosh.Token(woosh.NUMBER, '5', 316, 5, 316, 6),
    woosh.Token(woosh.OP, ',', 316, 6, 316, 7),
    woosh.Token(woosh.NUMBER, '2', 316, 8, 316, 9),
    woosh.Token(woosh.OP, ')', 316, 9, 316, 10),
    woosh.Token(woosh.OP, ':', 316, 10, 316, 11),
    woosh.Token(woosh.STRING, '"2003Server"', 316, 12, 316, 24),
    woosh.Token(woosh.OP, ',', 316, 24, 316, 25),
    woosh.Token(woosh.OP, '(', 317, 4, 317, 5),
    woosh.Token(woosh.NUMBER, '5', 317, 5, 317, 6),
    woosh.Token(woosh.OP, ',', 317, 6, 317, 7),
    woosh.Token(woosh.NAME, 'None', 317, 8, 317, 12),
    woosh.Token(woosh.OP, ')', 317, 12, 317, 13),
    woosh.Token(woosh.OP, ':', 317, 13, 317, 14),
    woosh.Token(woosh.STRING, '"post2003"', 317, 15, 317, 25),
    woosh.Token(woosh.OP, ',', 317, 25, 317, 26),
    woosh.Token(woosh.OP, '(', 319, 4, 319, 5),
    woosh.Token(woosh.NUMBER, '6', 319, 5, 319, 6),
    woosh.Token(woosh.OP, ',', 319, 6, 319, 7),
    woosh.Token(woosh.NUMBER, '0', 319, 8, 319, 9),
    woosh.Token(woosh.OP, ')', 319, 9, 319, 10),
    woosh.Token(woosh.OP, ':', 319, 10, 319, 11),
    woosh.Token(woosh.STRING, '"Vista"', 319, 12, 319, 19),
    woosh.Token(woosh.OP, ',', 319, 19, 319, 20),
    woosh.Token(woosh.OP, '(', 320, 4, 320, 5),
    woosh.Token(woosh.NUMBER, '6', 320, 5, 320, 6),
    woosh.Token(woosh.OP, ',', 320, 6, 320, 7),
    woosh.Token(woosh.NUMBER, '1', 320, 8, 320, 9),
    woosh.Token(woosh.OP, ')', 320, 9, 320, 10),
    woosh.Token(woosh.OP, ':', 320, 10, 320, 11),
    woosh.Token(woosh.STRING, '"7"', 320, 12, 320, 15),
    woosh.Token(woosh.OP, ',', 320, 15, 320, 16),
    woosh.Token(woosh.OP, '(', 321, 4, 321, 5),
    woosh.Token(woosh.NUMBER, '6', 321, 5, 321, 6),
    woosh.Token(woosh.OP, ',', 321, 6, 321, 7),
    woosh.Token(woosh.NUMBER, '2', 321, 8, 321, 9),
    woosh.Token(woosh.OP, ')', 321, 9, 321, 10),
    woosh.Token(woosh.OP, ':', 321, 10, 321, 11),
    woosh.Token(woosh.STRING, '"8"', 321, 12, 321, 15),
    woosh.Token(woosh.OP, ',', 321, 15, 321, 16),
    woosh.Token(woosh.OP, '(', 322, 4, 322, 5),
    woosh.Token(woosh.NUMBER, '6', 322, 5, 322, 6),
    woosh.Token(woosh.OP, ',', 322, 6, 322, 7),
    woosh.Token(woosh.NUMBER, '3', 322, 8, 322, 9),
    woosh.Token(woosh.OP, ')', 322, 9, 322, 10),
    woosh.Token(woosh.OP, ':', 322, 10, 322, 11),
    woosh.Token(woosh.STRING, '"8.1"', 322, 12, 322, 17),
    woosh.Token(woosh.OP, ',', 322, 17, 322, 18),
    woosh.Token(woosh.OP, '(', 323, 4, 323, 5),
    woosh.Token(woosh.NUMBER, '6', 323, 5, 323, 6),
    woosh.Token(woosh.OP, ',', 323, 6, 323, 7),
    woosh.Token(woosh.NAME, 'None', 323, 8, 323, 12),
    woosh.Token(woosh.OP, ')', 323, 12, 323, 13),
    woosh.Token(woosh.OP, ':', 323, 13, 323, 14),
    woosh.Token(woosh.STRING, '"post8.1"', 323, 15, 323, 24),
    woosh.Token(woosh.OP, ',', 323, 24, 323, 25),
    woosh.Token(woosh.OP, '(', 325, 4, 325, 5),
    woosh.Token(woosh.NUMBER, '10', 325, 5, 325, 7),
    woosh.Token(woosh.OP, ',', 325, 7, 325, 8),
    woosh.Token(woosh.NUMBER, '0', 325, 9, 325, 10),
    woosh.Token(woosh.OP, ')', 325, 10, 325, 11),
    woosh.Token(woosh.OP, ':', 325, 11, 325, 12),
    woosh.Token(woosh.STRING, '"10"', 325, 13, 325, 17),
    woosh.Token(woosh.OP, ',', 325, 17, 325, 18),
    woosh.Token(woosh.OP, '(', 326, 4, 326, 5),
    woosh.Token(woosh.NUMBER, '10', 326, 5, 326, 7),
    woosh.Token(woosh.OP, ',', 326, 7, 326, 8),
    woosh.Token(woosh.NAME, 'None', 326, 9, 326, 13),
    woosh.Token(woosh.OP, ')', 326, 13, 326, 14),
    woosh.Token(woosh.OP, ':', 326, 14, 326, 15),
    woosh.Token(woosh.STRING, '"post10"', 326, 16, 326, 24),
    woosh.Token(woosh.OP, ',', 326, 24, 326, 25),
    woosh.Token(woosh.OP, '}', 327, 0, 327, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 327, 1, 328, 0),
    woosh.Token(woosh.COMMENT, '# Server release name lookup will default to client names if necessary', 329, 0, 329, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 329, 70, 330, 0),
    woosh.Token(woosh.NAME, '_WIN32_SERVER_RELEASES', 330, 0, 330, 22),
    woosh.Token(woosh.OP, '=', 330, 23, 330, 24),
    woosh.Token(woosh.OP, '{', 330, 25, 330, 26),
    woosh.Token(woosh.OP, '(', 331, 4, 331, 5),
    woosh.Token(woosh.NUMBER, '5', 331, 5, 331, 6),
    woosh.Token(woosh.OP, ',', 331, 6, 331, 7),
    woosh.Token(woosh.NUMBER, '2', 331, 8, 331, 9),
    woosh.Token(woosh.OP, ')', 331, 9, 331, 10),
    woosh.Token(woosh.OP, ':', 331, 10, 331, 11),
    woosh.Token(woosh.STRING, '"2003Server"', 331, 12, 331, 24),
    woosh.Token(woosh.OP, ',', 331, 24, 331, 25),
    woosh.Token(woosh.OP, '(', 333, 4, 333, 5),
    woosh.Token(woosh.NUMBER, '6', 333, 5, 333, 6),
    woosh.Token(woosh.OP, ',', 333, 6, 333, 7),
    woosh.Token(woosh.NUMBER, '0', 333, 8, 333, 9),
    woosh.Token(woosh.OP, ')', 333, 9, 333, 10),
    woosh.Token(woosh.OP, ':', 333, 10, 333, 11),
    woosh.Token(woosh.STRING, '"2008Server"', 333, 12, 333, 24),
    woosh.Token(woosh.OP, ',', 333, 24, 333, 25),
    woosh.Token(woosh.OP, '(', 334, 4, 334, 5),
    woosh.Token(woosh.NUMBER, '6', 334, 5, 334, 6),
    woosh.Token(woosh.OP, ',', 334, 6, 334, 7),
    woosh.Token(woosh.NUMBER, '1', 334, 8, 334, 9),
    woosh.Token(woosh.OP, ')', 334, 9, 334, 10),
    woosh.Token(woosh.OP, ':', 334, 10, 334, 11),
    woosh.Token(woosh.STRING, '"2008ServerR2"', 334, 12, 334, 26),
    woosh.Token(woosh.OP, ',', 334, 26, 334, 27),
    woosh.Token(woosh.OP, '(', 335, 4, 335, 5),
    woosh.Token(woosh.NUMBER, '6', 335, 5, 335, 6),
    woosh.Token(woosh.OP, ',', 335, 6, 335, 7),
    woosh.Token(woosh.NUMBER, '2', 335, 8, 335, 9),
    woosh.Token(woosh.OP, ')', 335, 9, 335, 10),
    woosh.Token(woosh.OP, ':', 335, 10, 335, 11),
    woosh.Token(woosh.STRING, '"2012Server"', 335, 12, 335, 24),
    woosh.Token(woosh.OP, ',', 335, 24, 335, 25),
    woosh.Token(woosh.OP, '(', 336, 4, 336, 5),
    woosh.Token(woosh.NUMBER, '6', 336, 5, 336, 6),
    woosh.Token(woosh.OP, ',', 336, 6, 336, 7),
    woosh.Token(woosh.NUMBER, '3', 336, 8, 336, 9),
    woosh.Token(woosh.OP, ')', 336, 9, 336, 10),
    woosh.Token(woosh.OP, ':', 336, 10, 336, 11),
    woosh.Token(woosh.STRING, '"2012ServerR2"', 336, 12, 336, 26),
    woosh.Token(woosh.OP, ',', 336, 26, 336, 27),
    woosh.Token(woosh.OP, '(', 337, 4, 337, 5),
    woosh.Token(woosh.NUMBER, '6', 337, 5, 337, 6),
    woosh.Token(woosh.OP, ',', 337, 6, 337, 7),
    woosh.Token(woosh.NAME, 'None', 337, 8, 337, 12),
    woosh.Token(woosh.OP, ')', 337, 12, 337, 13),
    woosh.Token(woosh.OP, ':', 337, 13, 337, 14),
    woosh.Token(woosh.STRING, '"post2012ServerR2"', 337, 15, 337, 33),
    woosh.Token(woosh.OP, ',', 337, 33, 337, 34),
    woosh.Token(woosh.OP, '}', 338, 0, 338, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 338, 1, 339, 0),
    woosh.Token(woosh.NAME, 'def', 340, 0, 340, 3),
    woosh.Token(woosh.NAME, 'win32_is_iot', 340, 4, 340, 16),
    woosh.Token(woosh.OP, '(', 340, 16, 340, 17),
    woosh.Token(woosh.OP, ')', 340, 17, 340, 18),
    woosh.Token(woosh.OP, ':', 340, 18, 340, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 340, 19, 341, 0),
    woosh.Token(woosh.INDENT, '    ', 341, 0, 341, 4),
    woosh.Token(woosh.NAME, 'return', 341, 4, 341, 10),
    woosh.Token(woosh.NAME, 'win32_edition', 341, 11, 341, 24),
    woosh.Token(woosh.OP, '(', 341, 24, 341, 25),
    woosh.Token(woosh.OP, ')', 341, 25, 341, 26),
    woosh.Token(woosh.NAME, 'in', 341, 27, 341, 29),
    woosh.Token(woosh.OP, '(', 341, 30, 341, 31),
    woosh.Token(woosh.STRING, "'IoTUAP'", 341, 31, 341, 39),
    woosh.Token(woosh.OP, ',', 341, 39, 341, 40),
    woosh.Token(woosh.STRING, "'NanoServer'", 341, 41, 341, 53),
    woosh.Token(woosh.OP, ',', 341, 53, 341, 54),
    woosh.Token(woosh.STRING, "'WindowsCoreHeadless'", 341, 55, 341, 76),
    woosh.Token(woosh.OP, ',', 341, 76, 341, 77),
    woosh.Token(woosh.STRING, "'IoTEdgeOS'", 341, 78, 341, 89),
    woosh.Token(woosh.OP, ')', 341, 89, 341, 90),
    woosh.Token(woosh.NEWLINE, '\r\n', 341, 90, 342, 0),
    woosh.Token(woosh.DEDENT, '', 343, 0, 343, 0),
    woosh.Token(woosh.NAME, 'def', 343, 0, 343, 3),
    woosh.Token(woosh.NAME, 'win32_edition', 343, 4, 343, 17),
    woosh.Token(woosh.OP, '(', 343, 17, 343, 18),
    woosh.Token(woosh.OP, ')', 343, 18, 343, 19),
    woosh.Token(woosh.OP, ':', 343, 19, 343, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 343, 20, 344, 0),
    woosh.Token(woosh.INDENT, '    ', 344, 0, 344, 4),
    woosh.Token(woosh.NAME, 'try', 344, 4, 344, 7),
    woosh.Token(woosh.OP, ':', 344, 7, 344, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 344, 8, 345, 0),
    woosh.Token(woosh.INDENT, '        ', 345, 0, 345, 8),
    woosh.Token(woosh.NAME, 'try', 345, 8, 345, 11),
    woosh.Token(woosh.OP, ':', 345, 11, 345, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 345, 12, 346, 0),
    woosh.Token(woosh.INDENT, '            ', 346, 0, 346, 12),
    woosh.Token(woosh.NAME, 'import', 346, 12, 346, 18),
    woosh.Token(woosh.NAME, 'winreg', 346, 19, 346, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 346, 25, 347, 0),
    woosh.Token(woosh.DEDENT, '        ', 347, 0, 347, 8),
    woosh.Token(woosh.NAME, 'except', 347, 8, 347, 14),
    woosh.Token(woosh.NAME, 'ImportError', 347, 15, 347, 26),
    woosh.Token(woosh.OP, ':', 347, 26, 347, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 347, 27, 348, 0),
    woosh.Token(woosh.INDENT, '            ', 348, 0, 348, 12),
    woosh.Token(woosh.NAME, 'import', 348, 12, 348, 18),
    woosh.Token(woosh.NAME, '_winreg', 348, 19, 348, 26),
    woosh.Token(woosh.NAME, 'as', 348, 27, 348, 29),
    woosh.Token(woosh.NAME, 'winreg', 348, 30, 348, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 348, 36, 349, 0),
    woosh.Token(woosh.DEDENT, '    ', 349, 0, 349, 4),
    woosh.Token(woosh.DEDENT, '', 349, 4, 349, 4),
    woosh.Token(woosh.NAME, 'except', 349, 4, 349, 10),
    woosh.Token(woosh.NAME, 'ImportError', 349, 11, 349, 22),
    woosh.Token(woosh.OP, ':', 349, 22, 349, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 349, 23, 350, 0),
    woosh.Token(woosh.INDENT, '        ', 350, 0, 350, 8),
    woosh.Token(woosh.NAME, 'pass', 350, 8, 350, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 350, 12, 351, 0),
    woosh.Token(woosh.DEDENT, '    ', 351, 0, 351, 4),
    woosh.Token(woosh.NAME, 'else', 351, 4, 351, 8),
    woosh.Token(woosh.OP, ':', 351, 8, 351, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 351, 9, 352, 0),
    woosh.Token(woosh.INDENT, '        ', 352, 0, 352, 8),
    woosh.Token(woosh.NAME, 'try', 352, 8, 352, 11),
    woosh.Token(woosh.OP, ':', 352, 11, 352, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 352, 12, 353, 0),
    woosh.Token(woosh.INDENT, '            ', 353, 0, 353, 12),
    woosh.Token(woosh.NAME, 'cvkey', 353, 12, 353, 17),
    woosh.Token(woosh.OP, '=', 353, 18, 353, 19),
    woosh.Token(woosh.STRING, "r'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'", 353, 20, 353, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 353, 67, 354, 0),
    woosh.Token(woosh.NAME, 'with', 354, 12, 354, 16),
    woosh.Token(woosh.NAME, 'winreg', 354, 17, 354, 23),
    woosh.Token(woosh.OP, '.', 354, 23, 354, 24),
    woosh.Token(woosh.NAME, 'OpenKeyEx', 354, 24, 354, 33),
    woosh.Token(woosh.OP, '(', 354, 33, 354, 34),
    woosh.Token(woosh.NAME, 'winreg', 354, 34, 354, 40),
    woosh.Token(woosh.OP, '.', 354, 40, 354, 41),
    woosh.Token(woosh.NAME, 'HKEY_LOCAL_MACHINE', 354, 41, 354, 59),
    woosh.Token(woosh.OP, ',', 354, 59, 354, 60),
    woosh.Token(woosh.NAME, 'cvkey', 354, 61, 354, 66),
    woosh.Token(woosh.OP, ')', 354, 66, 354, 67),
    woosh.Token(woosh.NAME, 'as', 354, 68, 354, 70),
    woosh.Token(woosh.NAME, 'key', 354, 71, 354, 74),
    woosh.Token(woosh.OP, ':', 354, 74, 354, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 354, 75, 355, 0),
    woosh.Token(woosh.INDENT, '                ', 355, 0, 355, 16),
    woosh.Token(woosh.NAME, 'return', 355, 16, 355, 22),
    woosh.Token(woosh.NAME, 'winreg', 355, 23, 355, 29),
    woosh.Token(woosh.OP, '.', 355, 29, 355, 30),
    woosh.Token(woosh.NAME, 'QueryValueEx', 355, 30, 355, 42),
    woosh.Token(woosh.OP, '(', 355, 42, 355, 43),
    woosh.Token(woosh.NAME, 'key', 355, 43, 355, 46),
    woosh.Token(woosh.OP, ',', 355, 46, 355, 47),
    woosh.Token(woosh.STRING, "'EditionId'", 355, 48, 355, 59),
    woosh.Token(woosh.OP, ')', 355, 59, 355, 60),
    woosh.Token(woosh.OP, '[', 355, 60, 355, 61),
    woosh.Token(woosh.NUMBER, '0', 355, 61, 355, 62),
    woosh.Token(woosh.OP, ']', 355, 62, 355, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 355, 63, 356, 0),
    woosh.Token(woosh.DEDENT, '        ', 356, 0, 356, 8),
    woosh.Token(woosh.DEDENT, '', 356, 8, 356, 8),
    woosh.Token(woosh.NAME, 'except', 356, 8, 356, 14),
    woosh.Token(woosh.NAME, 'OSError', 356, 15, 356, 22),
    woosh.Token(woosh.OP, ':', 356, 22, 356, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 356, 23, 357, 0),
    woosh.Token(woosh.INDENT, '            ', 357, 0, 357, 12),
    woosh.Token(woosh.NAME, 'pass', 357, 12, 357, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 357, 16, 358, 0),
    woosh.Token(woosh.DEDENT, '    ', 359, 0, 359, 4),
    woosh.Token(woosh.DEDENT, '', 359, 4, 359, 4),
    woosh.Token(woosh.NAME, 'return', 359, 4, 359, 10),
    woosh.Token(woosh.NAME, 'None', 359, 11, 359, 15),
    woosh.Token(woosh.NEWLINE, '\r\n', 359, 15, 360, 0),
    woosh.Token(woosh.DEDENT, '', 361, 0, 361, 0),
    woosh.Token(woosh.NAME, 'def', 361, 0, 361, 3),
    woosh.Token(woosh.NAME, 'win32_ver', 361, 4, 361, 13),
    woosh.Token(woosh.OP, '(', 361, 13, 361, 14),
    woosh.Token(woosh.NAME, 'release', 361, 14, 361, 21),
    woosh.Token(woosh.OP, '=', 361, 21, 361, 22),
    woosh.Token(woosh.STRING, "''", 361, 22, 361, 24),
    woosh.Token(woosh.OP, ',', 361, 24, 361, 25),
    woosh.Token(woosh.NAME, 'version', 361, 26, 361, 33),
    woosh.Token(woosh.OP, '=', 361, 33, 361, 34),
    woosh.Token(woosh.STRING, "''", 361, 34, 361, 36),
    woosh.Token(woosh.OP, ',', 361, 36, 361, 37),
    woosh.Token(woosh.NAME, 'csd', 361, 38, 361, 41),
    woosh.Token(woosh.OP, '=', 361, 41, 361, 42),
    woosh.Token(woosh.STRING, "''", 361, 42, 361, 44),
    woosh.Token(woosh.OP, ',', 361, 44, 361, 45),
    woosh.Token(woosh.NAME, 'ptype', 361, 46, 361, 51),
    woosh.Token(woosh.OP, '=', 361, 51, 361, 52),
    woosh.Token(woosh.STRING, "''", 361, 52, 361, 54),
    woosh.Token(woosh.OP, ')', 361, 54, 361, 55),
    woosh.Token(woosh.OP, ':', 361, 55, 361, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 361, 56, 362, 0),
    woosh.Token(woosh.INDENT, '    ', 362, 0, 362, 4),
    woosh.Token(woosh.NAME, 'try', 362, 4, 362, 7),
    woosh.Token(woosh.OP, ':', 362, 7, 362, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 362, 8, 363, 0),
    woosh.Token(woosh.INDENT, '        ', 363, 0, 363, 8),
    woosh.Token(woosh.NAME, 'from', 363, 8, 363, 12),
    woosh.Token(woosh.NAME, 'sys', 363, 13, 363, 16),
    woosh.Token(woosh.NAME, 'import', 363, 17, 363, 23),
    woosh.Token(woosh.NAME, 'getwindowsversion', 363, 24, 363, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 363, 41, 364, 0),
    woosh.Token(woosh.DEDENT, '    ', 364, 0, 364, 4),
    woosh.Token(woosh.NAME, 'except', 364, 4, 364, 10),
    woosh.Token(woosh.NAME, 'ImportError', 364, 11, 364, 22),
    woosh.Token(woosh.OP, ':', 364, 22, 364, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 364, 23, 365, 0),
    woosh.Token(woosh.INDENT, '        ', 365, 0, 365, 8),
    woosh.Token(woosh.NAME, 'return', 365, 8, 365, 14),
    woosh.Token(woosh.NAME, 'release', 365, 15, 365, 22),
    woosh.Token(woosh.OP, ',', 365, 22, 365, 23),
    woosh.Token(woosh.NAME, 'version', 365, 24, 365, 31),
    woosh.Token(woosh.OP, ',', 365, 31, 365, 32),
    woosh.Token(woosh.NAME, 'csd', 365, 33, 365, 36),
    woosh.Token(woosh.OP, ',', 365, 36, 365, 37),
    woosh.Token(woosh.NAME, 'ptype', 365, 38, 365, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 365, 43, 366, 0),
    woosh.Token(woosh.DEDENT, '    ', 367, 0, 367, 4),
    woosh.Token(woosh.NAME, 'winver', 367, 4, 367, 10),
    woosh.Token(woosh.OP, '=', 367, 11, 367, 12),
    woosh.Token(woosh.NAME, 'getwindowsversion', 367, 13, 367, 30),
    woosh.Token(woosh.OP, '(', 367, 30, 367, 31),
    woosh.Token(woosh.OP, ')', 367, 31, 367, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 367, 32, 368, 0),
    woosh.Token(woosh.NAME, 'maj', 368, 4, 368, 7),
    woosh.Token(woosh.OP, ',', 368, 7, 368, 8),
    woosh.Token(woosh.NAME, 'min', 368, 9, 368, 12),
    woosh.Token(woosh.OP, ',', 368, 12, 368, 13),
    woosh.Token(woosh.NAME, 'build', 368, 14, 368, 19),
    woosh.Token(woosh.OP, '=', 368, 20, 368, 21),
    woosh.Token(woosh.NAME, 'winver', 368, 22, 368, 28),
    woosh.Token(woosh.OP, '.', 368, 28, 368, 29),
    woosh.Token(woosh.NAME, 'platform_version', 368, 29, 368, 45),
    woosh.Token(woosh.NAME, 'or', 368, 46, 368, 48),
    woosh.Token(woosh.NAME, 'winver', 368, 49, 368, 55),
    woosh.Token(woosh.OP, '[', 368, 55, 368, 56),
    woosh.Token(woosh.OP, ':', 368, 56, 368, 57),
    woosh.Token(woosh.NUMBER, '3', 368, 57, 368, 58),
    woosh.Token(woosh.OP, ']', 368, 58, 368, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 368, 59, 369, 0),
    woosh.Token(woosh.NAME, 'version', 369, 4, 369, 11),
    woosh.Token(woosh.OP, '=', 369, 12, 369, 13),
    woosh.Token(woosh.STRING, "'{0}.{1}.{2}'", 369, 14, 369, 27),
    woosh.Token(woosh.OP, '.', 369, 27, 369, 28),
    woosh.Token(woosh.NAME, 'format', 369, 28, 369, 34),
    woosh.Token(woosh.OP, '(', 369, 34, 369, 35),
    woosh.Token(woosh.NAME, 'maj', 369, 35, 369, 38),
    woosh.Token(woosh.OP, ',', 369, 38, 369, 39),
    woosh.Token(woosh.NAME, 'min', 369, 40, 369, 43),
    woosh.Token(woosh.OP, ',', 369, 43, 369, 44),
    woosh.Token(woosh.NAME, 'build', 369, 45, 369, 50),
    woosh.Token(woosh.OP, ')', 369, 50, 369, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 369, 51, 370, 0),
    woosh.Token(woosh.NAME, 'release', 371, 4, 371, 11),
    woosh.Token(woosh.OP, '=', 371, 12, 371, 13),
    woosh.Token(woosh.OP, '(', 371, 14, 371, 15),
    woosh.Token(woosh.NAME, '_WIN32_CLIENT_RELEASES', 371, 15, 371, 37),
    woosh.Token(woosh.OP, '.', 371, 37, 371, 38),
    woosh.Token(woosh.NAME, 'get', 371, 38, 371, 41),
    woosh.Token(woosh.OP, '(', 371, 41, 371, 42),
    woosh.Token(woosh.OP, '(', 371, 42, 371, 43),
    woosh.Token(woosh.NAME, 'maj', 371, 43, 371, 46),
    woosh.Token(woosh.OP, ',', 371, 46, 371, 47),
    woosh.Token(woosh.NAME, 'min', 371, 48, 371, 51),
    woosh.Token(woosh.OP, ')', 371, 51, 371, 52),
    woosh.Token(woosh.OP, ')', 371, 52, 371, 53),
    woosh.Token(woosh.NAME, 'or', 371, 54, 371, 56),
    woosh.Token(woosh.NAME, '_WIN32_CLIENT_RELEASES', 372, 15, 372, 37),
    woosh.Token(woosh.OP, '.', 372, 37, 372, 38),
    woosh.Token(woosh.NAME, 'get', 372, 38, 372, 41),
    woosh.Token(woosh.OP, '(', 372, 41, 372, 42),
    woosh.Token(woosh.OP, '(', 372, 42, 372, 43),
    woosh.Token(woosh.NAME, 'maj', 372, 43, 372, 46),
    woosh.Token(woosh.OP, ',', 372, 46, 372, 47),
    woosh.Token(woosh.NAME, 'None', 372, 48, 372, 52),
    woosh.Token(woosh.OP, ')', 372, 52, 372, 53),
    woosh.Token(woosh.OP, ')', 372, 53, 372, 54),
    woosh.Token(woosh.NAME, 'or', 372, 55, 372, 57),
    woosh.Token(woosh.NAME, 'release', 373, 15, 373, 22),
    woosh.Token(woosh.OP, ')', 373, 22, 373, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 373, 23, 374, 0),
    woosh.Token(woosh.COMMENT, '# getwindowsversion() reflect the compatibility mode Python is', 375, 4, 375, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 375, 66, 376, 0),
    woosh.Token(woosh.COMMENT, '# running under, and so the service pack value is only going to be', 376, 4, 376, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 376, 70, 377, 0),
    woosh.Token(woosh.COMMENT, '# valid if the versions match.', 377, 4, 377, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 377, 34, 378, 0),
    woosh.Token(woosh.NAME, 'if', 378, 4, 378, 6),
    woosh.Token(woosh.NAME, 'winver', 378, 7, 378, 13),
    woosh.Token(woosh.OP, '[', 378, 13, 378, 14),
    woosh.Token(woosh.OP, ':', 378, 14, 378, 15),
    woosh.Token(woosh.NUMBER, '2', 378, 15, 378, 16),
    woosh.Token(woosh.OP, ']', 378, 16, 378, 17),
    woosh.Token(woosh.OP, '==', 378, 18, 378, 20),
    woosh.Token(woosh.OP, '(', 378, 21, 378, 22),
    woosh.Token(woosh.NAME, 'maj', 378, 22, 378, 25),
    woosh.Token(woosh.OP, ',', 378, 25, 378, 26),
    woosh.Token(woosh.NAME, 'min', 378, 27, 378, 30),
    woosh.Token(woosh.OP, ')', 378, 30, 378, 31),
    woosh.Token(woosh.OP, ':', 378, 31, 378, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 378, 32, 379, 0),
    woosh.Token(woosh.INDENT, '        ', 379, 0, 379, 8),
    woosh.Token(woosh.NAME, 'try', 379, 8, 379, 11),
    woosh.Token(woosh.OP, ':', 379, 11, 379, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 379, 12, 380, 0),
    woosh.Token(woosh.INDENT, '            ', 380, 0, 380, 12),
    woosh.Token(woosh.NAME, 'csd', 380, 12, 380, 15),
    woosh.Token(woosh.OP, '=', 380, 16, 380, 17),
    woosh.Token(woosh.STRING, "'SP{}'", 380, 18, 380, 24),
    woosh.Token(woosh.OP, '.', 380, 24, 380, 25),
    woosh.Token(woosh.NAME, 'format', 380, 25, 380, 31),
    woosh.Token(woosh.OP, '(', 380, 31, 380, 32),
    woosh.Token(woosh.NAME, 'winver', 380, 32, 380, 38),
    woosh.Token(woosh.OP, '.', 380, 38, 380, 39),
    woosh.Token(woosh.NAME, 'service_pack_major', 380, 39, 380, 57),
    woosh.Token(woosh.OP, ')', 380, 57, 380, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 380, 58, 381, 0),
    woosh.Token(woosh.DEDENT, '        ', 381, 0, 381, 8),
    woosh.Token(woosh.NAME, 'except', 381, 8, 381, 14),
    woosh.Token(woosh.NAME, 'AttributeError', 381, 15, 381, 29),
    woosh.Token(woosh.OP, ':', 381, 29, 381, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 381, 30, 382, 0),
    woosh.Token(woosh.INDENT, '            ', 382, 0, 382, 12),
    woosh.Token(woosh.NAME, 'if', 382, 12, 382, 14),
    woosh.Token(woosh.NAME, 'csd', 382, 15, 382, 18),
    woosh.Token(woosh.OP, '[', 382, 18, 382, 19),
    woosh.Token(woosh.OP, ':', 382, 19, 382, 20),
    woosh.Token(woosh.NUMBER, '13', 382, 20, 382, 22),
    woosh.Token(woosh.OP, ']', 382, 22, 382, 23),
    woosh.Token(woosh.OP, '==', 382, 24, 382, 26),
    woosh.Token(woosh.STRING, "'Service Pack '", 382, 27, 382, 42),
    woosh.Token(woosh.OP, ':', 382, 42, 382, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 382, 43, 383, 0),
    woosh.Token(woosh.INDENT, '                ', 383, 0, 383, 16),
    woosh.Token(woosh.NAME, 'csd', 383, 16, 383, 19),
    woosh.Token(woosh.OP, '=', 383, 20, 383, 21),
    woosh.Token(woosh.STRING, "'SP'", 383, 22, 383, 26),
    woosh.Token(woosh.OP, '+', 383, 27, 383, 28),
    woosh.Token(woosh.NAME, 'csd', 383, 29, 383, 32),
    woosh.Token(woosh.OP, '[', 383, 32, 383, 33),
    woosh.Token(woosh.NUMBER, '13', 383, 33, 383, 35),
    woosh.Token(woosh.OP, ':', 383, 35, 383, 36),
    woosh.Token(woosh.OP, ']', 383, 36, 383, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 383, 37, 384, 0),
    woosh.Token(woosh.COMMENT, '# VER_NT_SERVER = 3', 385, 4, 385, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 385, 23, 386, 0),
    woosh.Token(woosh.DEDENT, '    ', 386, 0, 386, 4),
    woosh.Token(woosh.DEDENT, '', 386, 4, 386, 4),
    woosh.Token(woosh.DEDENT, '', 386, 4, 386, 4),
    woosh.Token(woosh.NAME, 'if', 386, 4, 386, 6),
    woosh.Token(woosh.NAME, 'getattr', 386, 7, 386, 14),
    woosh.Token(woosh.OP, '(', 386, 14, 386, 15),
    woosh.Token(woosh.NAME, 'winver', 386, 15, 386, 21),
    woosh.Token(woosh.OP, ',', 386, 21, 386, 22),
    woosh.Token(woosh.STRING, "'product_type'", 386, 23, 386, 37),
    woosh.Token(woosh.OP, ',', 386, 37, 386, 38),
    woosh.Token(woosh.NAME, 'None', 386, 39, 386, 43),
    woosh.Token(woosh.OP, ')', 386, 43, 386, 44),
    woosh.Token(woosh.OP, '==', 386, 45, 386, 47),
    woosh.Token(woosh.NUMBER, '3', 386, 48, 386, 49),
    woosh.Token(woosh.OP, ':', 386, 49, 386, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 386, 50, 387, 0),
    woosh.Token(woosh.INDENT, '        ', 387, 0, 387, 8),
    woosh.Token(woosh.NAME, 'release', 387, 8, 387, 15),
    woosh.Token(woosh.OP, '=', 387, 16, 387, 17),
    woosh.Token(woosh.OP, '(', 387, 18, 387, 19),
    woosh.Token(woosh.NAME, '_WIN32_SERVER_RELEASES', 387, 19, 387, 41),
    woosh.Token(woosh.OP, '.', 387, 41, 387, 42),
    woosh.Token(woosh.NAME, 'get', 387, 42, 387, 45),
    woosh.Token(woosh.OP, '(', 387, 45, 387, 46),
    woosh.Token(woosh.OP, '(', 387, 46, 387, 47),
    woosh.Token(woosh.NAME, 'maj', 387, 47, 387, 50),
    woosh.Token(woosh.OP, ',', 387, 50, 387, 51),
    woosh.Token(woosh.NAME, 'min', 387, 52, 387, 55),
    woosh.Token(woosh.OP, ')', 387, 55, 387, 56),
    woosh.Token(woosh.OP, ')', 387, 56, 387, 57),
    woosh.Token(woosh.NAME, 'or', 387, 58, 387, 60),
    woosh.Token(woosh.NAME, '_WIN32_SERVER_RELEASES', 388, 19, 388, 41),
    woosh.Token(woosh.OP, '.', 388, 41, 388, 42),
    woosh.Token(woosh.NAME, 'get', 388, 42, 388, 45),
    woosh.Token(woosh.OP, '(', 388, 45, 388, 46),
    woosh.Token(woosh.OP, '(', 388, 46, 388, 47),
    woosh.Token(woosh.NAME, 'maj', 388, 47, 388, 50),
    woosh.Token(woosh.OP, ',', 388, 50, 388, 51),
    woosh.Token(woosh.NAME, 'None', 388, 52, 388, 56),
    woosh.Token(woosh.OP, ')', 388, 56, 388, 57),
    woosh.Token(woosh.OP, ')', 388, 57, 388, 58),
    woosh.Token(woosh.NAME, 'or', 388, 59, 388, 61),
    woosh.Token(woosh.NAME, 'release', 389, 19, 389, 26),
    woosh.Token(woosh.OP, ')', 389, 26, 389, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 389, 27, 390, 0),
    woosh.Token(woosh.DEDENT, '    ', 391, 0, 391, 4),
    woosh.Token(woosh.NAME, 'try', 391, 4, 391, 7),
    woosh.Token(woosh.OP, ':', 391, 7, 391, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 391, 8, 392, 0),
    woosh.Token(woosh.INDENT, '        ', 392, 0, 392, 8),
    woosh.Token(woosh.NAME, 'try', 392, 8, 392, 11),
    woosh.Token(woosh.OP, ':', 392, 11, 392, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 392, 12, 393, 0),
    woosh.Token(woosh.INDENT, '            ', 393, 0, 393, 12),
    woosh.Token(woosh.NAME, 'import', 393, 12, 393, 18),
    woosh.Token(woosh.NAME, 'winreg', 393, 19, 393, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 393, 25, 394, 0),
    woosh.Token(woosh.DEDENT, '        ', 394, 0, 394, 8),
    woosh.Token(woosh.NAME, 'except', 394, 8, 394, 14),
    woosh.Token(woosh.NAME, 'ImportError', 394, 15, 394, 26),
    woosh.Token(woosh.OP, ':', 394, 26, 394, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 394, 27, 395, 0),
    woosh.Token(woosh.INDENT, '            ', 395, 0, 395, 12),
    woosh.Token(woosh.NAME, 'import', 395, 12, 395, 18),
    woosh.Token(woosh.NAME, '_winreg', 395, 19, 395, 26),
    woosh.Token(woosh.NAME, 'as', 395, 27, 395, 29),
    woosh.Token(woosh.NAME, 'winreg', 395, 30, 395, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 395, 36, 396, 0),
    woosh.Token(woosh.DEDENT, '    ', 396, 0, 396, 4),
    woosh.Token(woosh.DEDENT, '', 396, 4, 396, 4),
    woosh.Token(woosh.NAME, 'except', 396, 4, 396, 10),
    woosh.Token(woosh.NAME, 'ImportError', 396, 11, 396, 22),
    woosh.Token(woosh.OP, ':', 396, 22, 396, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 396, 23, 397, 0),
    woosh.Token(woosh.INDENT, '        ', 397, 0, 397, 8),
    woosh.Token(woosh.NAME, 'pass', 397, 8, 397, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 397, 12, 398, 0),
    woosh.Token(woosh.DEDENT, '    ', 398, 0, 398, 4),
    woosh.Token(woosh.NAME, 'else', 398, 4, 398, 8),
    woosh.Token(woosh.OP, ':', 398, 8, 398, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 398, 9, 399, 0),
    woosh.Token(woosh.INDENT, '        ', 399, 0, 399, 8),
    woosh.Token(woosh.NAME, 'try', 399, 8, 399, 11),
    woosh.Token(woosh.OP, ':', 399, 11, 399, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 399, 12, 400, 0),
    woosh.Token(woosh.INDENT, '            ', 400, 0, 400, 12),
    woosh.Token(woosh.NAME, 'cvkey', 400, 12, 400, 17),
    woosh.Token(woosh.OP, '=', 400, 18, 400, 19),
    woosh.Token(woosh.STRING, "r'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'", 400, 20, 400, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 400, 67, 401, 0),
    woosh.Token(woosh.NAME, 'with', 401, 12, 401, 16),
    woosh.Token(woosh.NAME, 'winreg', 401, 17, 401, 23),
    woosh.Token(woosh.OP, '.', 401, 23, 401, 24),
    woosh.Token(woosh.NAME, 'OpenKeyEx', 401, 24, 401, 33),
    woosh.Token(woosh.OP, '(', 401, 33, 401, 34),
    woosh.Token(woosh.NAME, 'winreg', 401, 34, 401, 40),
    woosh.Token(woosh.OP, '.', 401, 40, 401, 41),
    woosh.Token(woosh.NAME, 'HKEY_LOCAL_MACHINE', 401, 41, 401, 59),
    woosh.Token(woosh.OP, ',', 401, 59, 401, 60),
    woosh.Token(woosh.NAME, 'cvkey', 401, 61, 401, 66),
    woosh.Token(woosh.OP, ')', 401, 66, 401, 67),
    woosh.Token(woosh.NAME, 'as', 401, 68, 401, 70),
    woosh.Token(woosh.NAME, 'key', 401, 71, 401, 74),
    woosh.Token(woosh.OP, ':', 401, 74, 401, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 401, 75, 402, 0),
    woosh.Token(woosh.INDENT, '                ', 402, 0, 402, 16),
    woosh.Token(woosh.NAME, 'ptype', 402, 16, 402, 21),
    woosh.Token(woosh.OP, '=', 402, 22, 402, 23),
    woosh.Token(woosh.NAME, 'winreg', 402, 24, 402, 30),
    woosh.Token(woosh.OP, '.', 402, 30, 402, 31),
    woosh.Token(woosh.NAME, 'QueryValueEx', 402, 31, 402, 43),
    woosh.Token(woosh.OP, '(', 402, 43, 402, 44),
    woosh.Token(woosh.NAME, 'key', 402, 44, 402, 47),
    woosh.Token(woosh.OP, ',', 402, 47, 402, 48),
    woosh.Token(woosh.STRING, "'CurrentType'", 402, 49, 402, 62),
    woosh.Token(woosh.OP, ')', 402, 62, 402, 63),
    woosh.Token(woosh.OP, '[', 402, 63, 402, 64),
    woosh.Token(woosh.NUMBER, '0', 402, 64, 402, 65),
    woosh.Token(woosh.OP, ']', 402, 65, 402, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 402, 66, 403, 0),
    woosh.Token(woosh.DEDENT, '        ', 403, 0, 403, 8),
    woosh.Token(woosh.DEDENT, '', 403, 8, 403, 8),
    woosh.Token(woosh.NAME, 'except', 403, 8, 403, 14),
    woosh.Token(woosh.NAME, 'OSError', 403, 15, 403, 22),
    woosh.Token(woosh.OP, ':', 403, 22, 403, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 403, 23, 404, 0),
    woosh.Token(woosh.INDENT, '            ', 404, 0, 404, 12),
    woosh.Token(woosh.NAME, 'pass', 404, 12, 404, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 404, 16, 405, 0),
    woosh.Token(woosh.DEDENT, '    ', 406, 0, 406, 4),
    woosh.Token(woosh.DEDENT, '', 406, 4, 406, 4),
    woosh.Token(woosh.NAME, 'return', 406, 4, 406, 10),
    woosh.Token(woosh.NAME, 'release', 406, 11, 406, 18),
    woosh.Token(woosh.OP, ',', 406, 18, 406, 19),
    woosh.Token(woosh.NAME, 'version', 406, 20, 406, 27),
    woosh.Token(woosh.OP, ',', 406, 27, 406, 28),
    woosh.Token(woosh.NAME, 'csd', 406, 29, 406, 32),
    woosh.Token(woosh.OP, ',', 406, 32, 406, 33),
    woosh.Token(woosh.NAME, 'ptype', 406, 34, 406, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 406, 39, 407, 0),
    woosh.Token(woosh.DEDENT, '', 409, 0, 409, 0),
    woosh.Token(woosh.NAME, 'def', 409, 0, 409, 3),
    woosh.Token(woosh.NAME, '_mac_ver_xml', 409, 4, 409, 16),
    woosh.Token(woosh.OP, '(', 409, 16, 409, 17),
    woosh.Token(woosh.OP, ')', 409, 17, 409, 18),
    woosh.Token(woosh.OP, ':', 409, 18, 409, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 409, 19, 410, 0),
    woosh.Token(woosh.INDENT, '    ', 410, 0, 410, 4),
    woosh.Token(woosh.NAME, 'fn', 410, 4, 410, 6),
    woosh.Token(woosh.OP, '=', 410, 7, 410, 8),
    woosh.Token(woosh.STRING, "'/System/Library/CoreServices/SystemVersion.plist'", 410, 9, 410, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 410, 59, 411, 0),
    woosh.Token(woosh.NAME, 'if', 411, 4, 411, 6),
    woosh.Token(woosh.NAME, 'not', 411, 7, 411, 10),
    woosh.Token(woosh.NAME, 'os', 411, 11, 411, 13),
    woosh.Token(woosh.OP, '.', 411, 13, 411, 14),
    woosh.Token(woosh.NAME, 'path', 411, 14, 411, 18),
    woosh.Token(woosh.OP, '.', 411, 18, 411, 19),
    woosh.Token(woosh.NAME, 'exists', 411, 19, 411, 25),
    woosh.Token(woosh.OP, '(', 411, 25, 411, 26),
    woosh.Token(woosh.NAME, 'fn', 411, 26, 411, 28),
    woosh.Token(woosh.OP, ')', 411, 28, 411, 29),
    woosh.Token(woosh.OP, ':', 411, 29, 411, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 411, 30, 412, 0),
    woosh.Token(woosh.INDENT, '        ', 412, 0, 412, 8),
    woosh.Token(woosh.NAME, 'return', 412, 8, 412, 14),
    woosh.Token(woosh.NAME, 'None', 412, 15, 412, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 412, 19, 413, 0),
    woosh.Token(woosh.DEDENT, '    ', 414, 0, 414, 4),
    woosh.Token(woosh.NAME, 'try', 414, 4, 414, 7),
    woosh.Token(woosh.OP, ':', 414, 7, 414, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 414, 8, 415, 0),
    woosh.Token(woosh.INDENT, '        ', 415, 0, 415, 8),
    woosh.Token(woosh.NAME, 'import', 415, 8, 415, 14),
    woosh.Token(woosh.NAME, 'plistlib', 415, 15, 415, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 415, 23, 416, 0),
    woosh.Token(woosh.DEDENT, '    ', 416, 0, 416, 4),
    woosh.Token(woosh.NAME, 'except', 416, 4, 416, 10),
    woosh.Token(woosh.NAME, 'ImportError', 416, 11, 416, 22),
    woosh.Token(woosh.OP, ':', 416, 22, 416, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 416, 23, 417, 0),
    woosh.Token(woosh.INDENT, '        ', 417, 0, 417, 8),
    woosh.Token(woosh.NAME, 'return', 417, 8, 417, 14),
    woosh.Token(woosh.NAME, 'None', 417, 15, 417, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 417, 19, 418, 0),
    woosh.Token(woosh.DEDENT, '    ', 419, 0, 419, 4),
    woosh.Token(woosh.NAME, 'with', 419, 4, 419, 8),
    woosh.Token(woosh.NAME, 'open', 419, 9, 419, 13),
    woosh.Token(woosh.OP, '(', 419, 13, 419, 14),
    woosh.Token(woosh.NAME, 'fn', 419, 14, 419, 16),
    woosh.Token(woosh.OP, ',', 419, 16, 419, 17),
    woosh.Token(woosh.STRING, "'rb'", 419, 18, 419, 22),
    woosh.Token(woosh.OP, ')', 419, 22, 419, 23),
    woosh.Token(woosh.NAME, 'as', 419, 24, 419, 26),
    woosh.Token(woosh.NAME, 'f', 419, 27, 419, 28),
    woosh.Token(woosh.OP, ':', 419, 28, 419, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 419, 29, 420, 0),
    woosh.Token(woosh.INDENT, '        ', 420, 0, 420, 8),
    woosh.Token(woosh.NAME, 'pl', 420, 8, 420, 10),
    woosh.Token(woosh.OP, '=', 420, 11, 420, 12),
    woosh.Token(woosh.NAME, 'plistlib', 420, 13, 420, 21),
    woosh.Token(woosh.OP, '.', 420, 21, 420, 22),
    woosh.Token(woosh.NAME, 'load', 420, 22, 420, 26),
    woosh.Token(woosh.OP, '(', 420, 26, 420, 27),
    woosh.Token(woosh.NAME, 'f', 420, 27, 420, 28),
    woosh.Token(woosh.OP, ')', 420, 28, 420, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 420, 29, 421, 0),
    woosh.Token(woosh.DEDENT, '    ', 421, 0, 421, 4),
    woosh.Token(woosh.NAME, 'release', 421, 4, 421, 11),
    woosh.Token(woosh.OP, '=', 421, 12, 421, 13),
    woosh.Token(woosh.NAME, 'pl', 421, 14, 421, 16),
    woosh.Token(woosh.OP, '[', 421, 16, 421, 17),
    woosh.Token(woosh.STRING, "'ProductVersion'", 421, 17, 421, 33),
    woosh.Token(woosh.OP, ']', 421, 33, 421, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 421, 34, 422, 0),
    woosh.Token(woosh.NAME, 'versioninfo', 422, 4, 422, 15),
    woosh.Token(woosh.OP, '=', 422, 16, 422, 17),
    woosh.Token(woosh.OP, '(', 422, 18, 422, 19),
    woosh.Token(woosh.STRING, "''", 422, 19, 422, 21),
    woosh.Token(woosh.OP, ',', 422, 21, 422, 22),
    woosh.Token(woosh.STRING, "''", 422, 23, 422, 25),
    woosh.Token(woosh.OP, ',', 422, 25, 422, 26),
    woosh.Token(woosh.STRING, "''", 422, 27, 422, 29),
    woosh.Token(woosh.OP, ')', 422, 29, 422, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 422, 30, 423, 0),
    woosh.Token(woosh.NAME, 'machine', 423, 4, 423, 11),
    woosh.Token(woosh.OP, '=', 423, 12, 423, 13),
    woosh.Token(woosh.NAME, 'os', 423, 14, 423, 16),
    woosh.Token(woosh.OP, '.', 423, 16, 423, 17),
    woosh.Token(woosh.NAME, 'uname', 423, 17, 423, 22),
    woosh.Token(woosh.OP, '(', 423, 22, 423, 23),
    woosh.Token(woosh.OP, ')', 423, 23, 423, 24),
    woosh.Token(woosh.OP, '.', 423, 24, 423, 25),
    woosh.Token(woosh.NAME, 'machine', 423, 25, 423, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 423, 32, 424, 0),
    woosh.Token(woosh.NAME, 'if', 424, 4, 424, 6),
    woosh.Token(woosh.NAME, 'machine', 424, 7, 424, 14),
    woosh.Token(woosh.NAME, 'in', 424, 15, 424, 17),
    woosh.Token(woosh.OP, '(', 424, 18, 424, 19),
    woosh.Token(woosh.STRING, "'ppc'", 424, 19, 424, 24),
    woosh.Token(woosh.OP, ',', 424, 24, 424, 25),
    woosh.Token(woosh.STRING, "'Power Macintosh'", 424, 26, 424, 43),
    woosh.Token(woosh.OP, ')', 424, 43, 424, 44),
    woosh.Token(woosh.OP, ':', 424, 44, 424, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 424, 45, 425, 0),
    woosh.Token(woosh.COMMENT, '# Canonical name', 425, 8, 425, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 425, 24, 426, 0),
    woosh.Token(woosh.INDENT, '        ', 426, 0, 426, 8),
    woosh.Token(woosh.NAME, 'machine', 426, 8, 426, 15),
    woosh.Token(woosh.OP, '=', 426, 16, 426, 17),
    woosh.Token(woosh.STRING, "'PowerPC'", 426, 18, 426, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 426, 27, 427, 0),
    woosh.Token(woosh.DEDENT, '    ', 428, 0, 428, 4),
    woosh.Token(woosh.NAME, 'return', 428, 4, 428, 10),
    woosh.Token(woosh.NAME, 'release', 428, 11, 428, 18),
    woosh.Token(woosh.OP, ',', 428, 18, 428, 19),
    woosh.Token(woosh.NAME, 'versioninfo', 428, 20, 428, 31),
    woosh.Token(woosh.OP, ',', 428, 31, 428, 32),
    woosh.Token(woosh.NAME, 'machine', 428, 33, 428, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 428, 40, 429, 0),
    woosh.Token(woosh.DEDENT, '', 431, 0, 431, 0),
    woosh.Token(woosh.NAME, 'def', 431, 0, 431, 3),
    woosh.Token(woosh.NAME, 'mac_ver', 431, 4, 431, 11),
    woosh.Token(woosh.OP, '(', 431, 11, 431, 12),
    woosh.Token(woosh.NAME, 'release', 431, 12, 431, 19),
    woosh.Token(woosh.OP, '=', 431, 19, 431, 20),
    woosh.Token(woosh.STRING, "''", 431, 20, 431, 22),
    woosh.Token(woosh.OP, ',', 431, 22, 431, 23),
    woosh.Token(woosh.NAME, 'versioninfo', 431, 24, 431, 35),
    woosh.Token(woosh.OP, '=', 431, 35, 431, 36),
    woosh.Token(woosh.OP, '(', 431, 36, 431, 37),
    woosh.Token(woosh.STRING, "''", 431, 37, 431, 39),
    woosh.Token(woosh.OP, ',', 431, 39, 431, 40),
    woosh.Token(woosh.STRING, "''", 431, 41, 431, 43),
    woosh.Token(woosh.OP, ',', 431, 43, 431, 44),
    woosh.Token(woosh.STRING, "''", 431, 45, 431, 47),
    woosh.Token(woosh.OP, ')', 431, 47, 431, 48),
    woosh.Token(woosh.OP, ',', 431, 48, 431, 49),
    woosh.Token(woosh.NAME, 'machine', 431, 50, 431, 57),
    woosh.Token(woosh.OP, '=', 431, 57, 431, 58),
    woosh.Token(woosh.STRING, "''", 431, 58, 431, 60),
    woosh.Token(woosh.OP, ')', 431, 60, 431, 61),
    woosh.Token(woosh.OP, ':', 431, 61, 431, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 431, 62, 432, 0),
    woosh.Token(woosh.INDENT, '    ', 433, 0, 433, 4),
    woosh.Token(woosh.STRING, '""" Get macOS version information and return it as tuple (release,\r\n        versioninfo, machine) with versioninfo being a tuple (version,\r\n        dev_stage, non_release_version).\r\n\r\n        Entries which cannot be determined are set to the parameter values\r\n        which default to \'\'. All tuple entries are strings.\r\n    """', 433, 4, 439, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 439, 7, 440, 0),
    woosh.Token(woosh.COMMENT, '# First try reading the information from an XML file which should', 441, 4, 441, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 441, 69, 442, 0),
    woosh.Token(woosh.COMMENT, '# always be present', 442, 4, 442, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 442, 23, 443, 0),
    woosh.Token(woosh.NAME, 'info', 443, 4, 443, 8),
    woosh.Token(woosh.OP, '=', 443, 9, 443, 10),
    woosh.Token(woosh.NAME, '_mac_ver_xml', 443, 11, 443, 23),
    woosh.Token(woosh.OP, '(', 443, 23, 443, 24),
    woosh.Token(woosh.OP, ')', 443, 24, 443, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 443, 25, 444, 0),
    woosh.Token(woosh.NAME, 'if', 444, 4, 444, 6),
    woosh.Token(woosh.NAME, 'info', 444, 7, 444, 11),
    woosh.Token(woosh.NAME, 'is', 444, 12, 444, 14),
    woosh.Token(woosh.NAME, 'not', 444, 15, 444, 18),
    woosh.Token(woosh.NAME, 'None', 444, 19, 444, 23),
    woosh.Token(woosh.OP, ':', 444, 23, 444, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 444, 24, 445, 0),
    woosh.Token(woosh.INDENT, '        ', 445, 0, 445, 8),
    woosh.Token(woosh.NAME, 'return', 445, 8, 445, 14),
    woosh.Token(woosh.NAME, 'info', 445, 15, 445, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 445, 19, 446, 0),
    woosh.Token(woosh.COMMENT, "# If that also doesn't work return the default values", 447, 4, 447, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 447, 57, 448, 0),
    woosh.Token(woosh.DEDENT, '    ', 448, 0, 448, 4),
    woosh.Token(woosh.NAME, 'return', 448, 4, 448, 10),
    woosh.Token(woosh.NAME, 'release', 448, 11, 448, 18),
    woosh.Token(woosh.OP, ',', 448, 18, 448, 19),
    woosh.Token(woosh.NAME, 'versioninfo', 448, 20, 448, 31),
    woosh.Token(woosh.OP, ',', 448, 31, 448, 32),
    woosh.Token(woosh.NAME, 'machine', 448, 33, 448, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 448, 40, 449, 0),
    woosh.Token(woosh.DEDENT, '', 450, 0, 450, 0),
    woosh.Token(woosh.NAME, 'def', 450, 0, 450, 3),
    woosh.Token(woosh.NAME, '_java_getprop', 450, 4, 450, 17),
    woosh.Token(woosh.OP, '(', 450, 17, 450, 18),
    woosh.Token(woosh.NAME, 'name', 450, 18, 450, 22),
    woosh.Token(woosh.OP, ',', 450, 22, 450, 23),
    woosh.Token(woosh.NAME, 'default', 450, 24, 450, 31),
    woosh.Token(woosh.OP, ')', 450, 31, 450, 32),
    woosh.Token(woosh.OP, ':', 450, 32, 450, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 450, 33, 451, 0),
    woosh.Token(woosh.INDENT, '    ', 452, 0, 452, 4),
    woosh.Token(woosh.NAME, 'from', 452, 4, 452, 8),
    woosh.Token(woosh.NAME, 'java', 452, 9, 452, 13),
    woosh.Token(woosh.OP, '.', 452, 13, 452, 14),
    woosh.Token(woosh.NAME, 'lang', 452, 14, 452, 18),
    woosh.Token(woosh.NAME, 'import', 452, 19, 452, 25),
    woosh.Token(woosh.NAME, 'System', 452, 26, 452, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 452, 32, 453, 0),
    woosh.Token(woosh.NAME, 'try', 453, 4, 453, 7),
    woosh.Token(woosh.OP, ':', 453, 7, 453, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 453, 8, 454, 0),
    woosh.Token(woosh.INDENT, '        ', 454, 0, 454, 8),
    woosh.Token(woosh.NAME, 'value', 454, 8, 454, 13),
    woosh.Token(woosh.OP, '=', 454, 14, 454, 15),
    woosh.Token(woosh.NAME, 'System', 454, 16, 454, 22),
    woosh.Token(woosh.OP, '.', 454, 22, 454, 23),
    woosh.Token(woosh.NAME, 'getProperty', 454, 23, 454, 34),
    woosh.Token(woosh.OP, '(', 454, 34, 454, 35),
    woosh.Token(woosh.NAME, 'name', 454, 35, 454, 39),
    woosh.Token(woosh.OP, ')', 454, 39, 454, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 454, 40, 455, 0),
    woosh.Token(woosh.NAME, 'if', 455, 8, 455, 10),
    woosh.Token(woosh.NAME, 'value', 455, 11, 455, 16),
    woosh.Token(woosh.NAME, 'is', 455, 17, 455, 19),
    woosh.Token(woosh.NAME, 'None', 455, 20, 455, 24),
    woosh.Token(woosh.OP, ':', 455, 24, 455, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 455, 25, 456, 0),
    woosh.Token(woosh.INDENT, '            ', 456, 0, 456, 12),
    woosh.Token(woosh.NAME, 'return', 456, 12, 456, 18),
    woosh.Token(woosh.NAME, 'default', 456, 19, 456, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 456, 26, 457, 0),
    woosh.Token(woosh.DEDENT, '        ', 457, 0, 457, 8),
    woosh.Token(woosh.NAME, 'return', 457, 8, 457, 14),
    woosh.Token(woosh.NAME, 'value', 457, 15, 457, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 457, 20, 458, 0),
    woosh.Token(woosh.DEDENT, '    ', 458, 0, 458, 4),
    woosh.Token(woosh.NAME, 'except', 458, 4, 458, 10),
    woosh.Token(woosh.NAME, 'AttributeError', 458, 11, 458, 25),
    woosh.Token(woosh.OP, ':', 458, 25, 458, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 458, 26, 459, 0),
    woosh.Token(woosh.INDENT, '        ', 459, 0, 459, 8),
    woosh.Token(woosh.NAME, 'return', 459, 8, 459, 14),
    woosh.Token(woosh.NAME, 'default', 459, 15, 459, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 459, 22, 460, 0),
    woosh.Token(woosh.DEDENT, '', 461, 0, 461, 0),
    woosh.Token(woosh.DEDENT, '', 461, 0, 461, 0),
    woosh.Token(woosh.NAME, 'def', 461, 0, 461, 3),
    woosh.Token(woosh.NAME, 'java_ver', 461, 4, 461, 12),
    woosh.Token(woosh.OP, '(', 461, 12, 461, 13),
    woosh.Token(woosh.NAME, 'release', 461, 13, 461, 20),
    woosh.Token(woosh.OP, '=', 461, 20, 461, 21),
    woosh.Token(woosh.STRING, "''", 461, 21, 461, 23),
    woosh.Token(woosh.OP, ',', 461, 23, 461, 24),
    woosh.Token(woosh.NAME, 'vendor', 461, 25, 461, 31),
    woosh.Token(woosh.OP, '=', 461, 31, 461, 32),
    woosh.Token(woosh.STRING, "''", 461, 32, 461, 34),
    woosh.Token(woosh.OP, ',', 461, 34, 461, 35),
    woosh.Token(woosh.NAME, 'vminfo', 461, 36, 461, 42),
    woosh.Token(woosh.OP, '=', 461, 42, 461, 43),
    woosh.Token(woosh.OP, '(', 461, 43, 461, 44),
    woosh.Token(woosh.STRING, "''", 461, 44, 461, 46),
    woosh.Token(woosh.OP, ',', 461, 46, 461, 47),
    woosh.Token(woosh.STRING, "''", 461, 48, 461, 50),
    woosh.Token(woosh.OP, ',', 461, 50, 461, 51),
    woosh.Token(woosh.STRING, "''", 461, 52, 461, 54),
    woosh.Token(woosh.OP, ')', 461, 54, 461, 55),
    woosh.Token(woosh.OP, ',', 461, 55, 461, 56),
    woosh.Token(woosh.NAME, 'osinfo', 461, 57, 461, 63),
    woosh.Token(woosh.OP, '=', 461, 63, 461, 64),
    woosh.Token(woosh.OP, '(', 461, 64, 461, 65),
    woosh.Token(woosh.STRING, "''", 461, 65, 461, 67),
    woosh.Token(woosh.OP, ',', 461, 67, 461, 68),
    woosh.Token(woosh.STRING, "''", 461, 69, 461, 71),
    woosh.Token(woosh.OP, ',', 461, 71, 461, 72),
    woosh.Token(woosh.STRING, "''", 461, 73, 461, 75),
    woosh.Token(woosh.OP, ')', 461, 75, 461, 76),
    woosh.Token(woosh.OP, ')', 461, 76, 461, 77),
    woosh.Token(woosh.OP, ':', 461, 77, 461, 78),
    woosh.Token(woosh.NEWLINE, '\r\n', 461, 78, 462, 0),
    woosh.Token(woosh.INDENT, '    ', 463, 0, 463, 4),
    woosh.Token(woosh.STRING, '""" Version interface for Jython.\r\n\r\n        Returns a tuple (release, vendor, vminfo, osinfo) with vminfo being\r\n        a tuple (vm_name, vm_release, vm_vendor) and osinfo being a\r\n        tuple (os_name, os_version, os_arch).\r\n\r\n        Values which cannot be determined are set to the defaults\r\n        given as parameters (which all default to \'\').\r\n\r\n    """', 463, 4, 472, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 472, 7, 473, 0),
    woosh.Token(woosh.COMMENT, '# Import the needed APIs', 473, 4, 473, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 473, 28, 474, 0),
    woosh.Token(woosh.NAME, 'try', 474, 4, 474, 7),
    woosh.Token(woosh.OP, ':', 474, 7, 474, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 474, 8, 475, 0),
    woosh.Token(woosh.INDENT, '        ', 475, 0, 475, 8),
    woosh.Token(woosh.NAME, 'import', 475, 8, 475, 14),
    woosh.Token(woosh.NAME, 'java', 475, 15, 475, 19),
    woosh.Token(woosh.OP, '.', 475, 19, 475, 20),
    woosh.Token(woosh.NAME, 'lang', 475, 20, 475, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 475, 24, 476, 0),
    woosh.Token(woosh.DEDENT, '    ', 476, 0, 476, 4),
    woosh.Token(woosh.NAME, 'except', 476, 4, 476, 10),
    woosh.Token(woosh.NAME, 'ImportError', 476, 11, 476, 22),
    woosh.Token(woosh.OP, ':', 476, 22, 476, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 476, 23, 477, 0),
    woosh.Token(woosh.INDENT, '        ', 477, 0, 477, 8),
    woosh.Token(woosh.NAME, 'return', 477, 8, 477, 14),
    woosh.Token(woosh.NAME, 'release', 477, 15, 477, 22),
    woosh.Token(woosh.OP, ',', 477, 22, 477, 23),
    woosh.Token(woosh.NAME, 'vendor', 477, 24, 477, 30),
    woosh.Token(woosh.OP, ',', 477, 30, 477, 31),
    woosh.Token(woosh.NAME, 'vminfo', 477, 32, 477, 38),
    woosh.Token(woosh.OP, ',', 477, 38, 477, 39),
    woosh.Token(woosh.NAME, 'osinfo', 477, 40, 477, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 477, 46, 478, 0),
    woosh.Token(woosh.DEDENT, '    ', 479, 0, 479, 4),
    woosh.Token(woosh.NAME, 'vendor', 479, 4, 479, 10),
    woosh.Token(woosh.OP, '=', 479, 11, 479, 12),
    woosh.Token(woosh.NAME, '_java_getprop', 479, 13, 479, 26),
    woosh.Token(woosh.OP, '(', 479, 26, 479, 27),
    woosh.Token(woosh.STRING, "'java.vendor'", 479, 27, 479, 40),
    woosh.Token(woosh.OP, ',', 479, 40, 479, 41),
    woosh.Token(woosh.NAME, 'vendor', 479, 42, 479, 48),
    woosh.Token(woosh.OP, ')', 479, 48, 479, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 479, 49, 480, 0),
    woosh.Token(woosh.NAME, 'release', 480, 4, 480, 11),
    woosh.Token(woosh.OP, '=', 480, 12, 480, 13),
    woosh.Token(woosh.NAME, '_java_getprop', 480, 14, 480, 27),
    woosh.Token(woosh.OP, '(', 480, 27, 480, 28),
    woosh.Token(woosh.STRING, "'java.version'", 480, 28, 480, 42),
    woosh.Token(woosh.OP, ',', 480, 42, 480, 43),
    woosh.Token(woosh.NAME, 'release', 480, 44, 480, 51),
    woosh.Token(woosh.OP, ')', 480, 51, 480, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 480, 52, 481, 0),
    woosh.Token(woosh.NAME, 'vm_name', 481, 4, 481, 11),
    woosh.Token(woosh.OP, ',', 481, 11, 481, 12),
    woosh.Token(woosh.NAME, 'vm_release', 481, 13, 481, 23),
    woosh.Token(woosh.OP, ',', 481, 23, 481, 24),
    woosh.Token(woosh.NAME, 'vm_vendor', 481, 25, 481, 34),
    woosh.Token(woosh.OP, '=', 481, 35, 481, 36),
    woosh.Token(woosh.NAME, 'vminfo', 481, 37, 481, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 481, 43, 482, 0),
    woosh.Token(woosh.NAME, 'vm_name', 482, 4, 482, 11),
    woosh.Token(woosh.OP, '=', 482, 12, 482, 13),
    woosh.Token(woosh.NAME, '_java_getprop', 482, 14, 482, 27),
    woosh.Token(woosh.OP, '(', 482, 27, 482, 28),
    woosh.Token(woosh.STRING, "'java.vm.name'", 482, 28, 482, 42),
    woosh.Token(woosh.OP, ',', 482, 42, 482, 43),
    woosh.Token(woosh.NAME, 'vm_name', 482, 44, 482, 51),
    woosh.Token(woosh.OP, ')', 482, 51, 482, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 482, 52, 483, 0),
    woosh.Token(woosh.NAME, 'vm_vendor', 483, 4, 483, 13),
    woosh.Token(woosh.OP, '=', 483, 14, 483, 15),
    woosh.Token(woosh.NAME, '_java_getprop', 483, 16, 483, 29),
    woosh.Token(woosh.OP, '(', 483, 29, 483, 30),
    woosh.Token(woosh.STRING, "'java.vm.vendor'", 483, 30, 483, 46),
    woosh.Token(woosh.OP, ',', 483, 46, 483, 47),
    woosh.Token(woosh.NAME, 'vm_vendor', 483, 48, 483, 57),
    woosh.Token(woosh.OP, ')', 483, 57, 483, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 483, 58, 484, 0),
    woosh.Token(woosh.NAME, 'vm_release', 484, 4, 484, 14),
    woosh.Token(woosh.OP, '=', 484, 15, 484, 16),
    woosh.Token(woosh.NAME, '_java_getprop', 484, 17, 484, 30),
    woosh.Token(woosh.OP, '(', 484, 30, 484, 31),
    woosh.Token(woosh.STRING, "'java.vm.version'", 484, 31, 484, 48),
    woosh.Token(woosh.OP, ',', 484, 48, 484, 49),
    woosh.Token(woosh.NAME, 'vm_release', 484, 50, 484, 60),
    woosh.Token(woosh.OP, ')', 484, 60, 484, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 484, 61, 485, 0),
    woosh.Token(woosh.NAME, 'vminfo', 485, 4, 485, 10),
    woosh.Token(woosh.OP, '=', 485, 11, 485, 12),
    woosh.Token(woosh.NAME, 'vm_name', 485, 13, 485, 20),
    woosh.Token(woosh.OP, ',', 485, 20, 485, 21),
    woosh.Token(woosh.NAME, 'vm_release', 485, 22, 485, 32),
    woosh.Token(woosh.OP, ',', 485, 32, 485, 33),
    woosh.Token(woosh.NAME, 'vm_vendor', 485, 34, 485, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 485, 43, 486, 0),
    woosh.Token(woosh.NAME, 'os_name', 486, 4, 486, 11),
    woosh.Token(woosh.OP, ',', 486, 11, 486, 12),
    woosh.Token(woosh.NAME, 'os_version', 486, 13, 486, 23),
    woosh.Token(woosh.OP, ',', 486, 23, 486, 24),
    woosh.Token(woosh.NAME, 'os_arch', 486, 25, 486, 32),
    woosh.Token(woosh.OP, '=', 486, 33, 486, 34),
    woosh.Token(woosh.NAME, 'osinfo', 486, 35, 486, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 486, 41, 487, 0),
    woosh.Token(woosh.NAME, 'os_arch', 487, 4, 487, 11),
    woosh.Token(woosh.OP, '=', 487, 12, 487, 13),
    woosh.Token(woosh.NAME, '_java_getprop', 487, 14, 487, 27),
    woosh.Token(woosh.OP, '(', 487, 27, 487, 28),
    woosh.Token(woosh.STRING, "'java.os.arch'", 487, 28, 487, 42),
    woosh.Token(woosh.OP, ',', 487, 42, 487, 43),
    woosh.Token(woosh.NAME, 'os_arch', 487, 44, 487, 51),
    woosh.Token(woosh.OP, ')', 487, 51, 487, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 487, 52, 488, 0),
    woosh.Token(woosh.NAME, 'os_name', 488, 4, 488, 11),
    woosh.Token(woosh.OP, '=', 488, 12, 488, 13),
    woosh.Token(woosh.NAME, '_java_getprop', 488, 14, 488, 27),
    woosh.Token(woosh.OP, '(', 488, 27, 488, 28),
    woosh.Token(woosh.STRING, "'java.os.name'", 488, 28, 488, 42),
    woosh.Token(woosh.OP, ',', 488, 42, 488, 43),
    woosh.Token(woosh.NAME, 'os_name', 488, 44, 488, 51),
    woosh.Token(woosh.OP, ')', 488, 51, 488, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 488, 52, 489, 0),
    woosh.Token(woosh.NAME, 'os_version', 489, 4, 489, 14),
    woosh.Token(woosh.OP, '=', 489, 15, 489, 16),
    woosh.Token(woosh.NAME, '_java_getprop', 489, 17, 489, 30),
    woosh.Token(woosh.OP, '(', 489, 30, 489, 31),
    woosh.Token(woosh.STRING, "'java.os.version'", 489, 31, 489, 48),
    woosh.Token(woosh.OP, ',', 489, 48, 489, 49),
    woosh.Token(woosh.NAME, 'os_version', 489, 50, 489, 60),
    woosh.Token(woosh.OP, ')', 489, 60, 489, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 489, 61, 490, 0),
    woosh.Token(woosh.NAME, 'osinfo', 490, 4, 490, 10),
    woosh.Token(woosh.OP, '=', 490, 11, 490, 12),
    woosh.Token(woosh.NAME, 'os_name', 490, 13, 490, 20),
    woosh.Token(woosh.OP, ',', 490, 20, 490, 21),
    woosh.Token(woosh.NAME, 'os_version', 490, 22, 490, 32),
    woosh.Token(woosh.OP, ',', 490, 32, 490, 33),
    woosh.Token(woosh.NAME, 'os_arch', 490, 34, 490, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 490, 41, 491, 0),
    woosh.Token(woosh.NAME, 'return', 492, 4, 492, 10),
    woosh.Token(woosh.NAME, 'release', 492, 11, 492, 18),
    woosh.Token(woosh.OP, ',', 492, 18, 492, 19),
    woosh.Token(woosh.NAME, 'vendor', 492, 20, 492, 26),
    woosh.Token(woosh.OP, ',', 492, 26, 492, 27),
    woosh.Token(woosh.NAME, 'vminfo', 492, 28, 492, 34),
    woosh.Token(woosh.OP, ',', 492, 34, 492, 35),
    woosh.Token(woosh.NAME, 'osinfo', 492, 36, 492, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 492, 42, 493, 0),
    woosh.Token(woosh.COMMENT, '### System name aliasing', 494, 0, 494, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 494, 24, 495, 0),
    woosh.Token(woosh.DEDENT, '', 496, 0, 496, 0),
    woosh.Token(woosh.NAME, 'def', 496, 0, 496, 3),
    woosh.Token(woosh.NAME, 'system_alias', 496, 4, 496, 16),
    woosh.Token(woosh.OP, '(', 496, 16, 496, 17),
    woosh.Token(woosh.NAME, 'system', 496, 17, 496, 23),
    woosh.Token(woosh.OP, ',', 496, 23, 496, 24),
    woosh.Token(woosh.NAME, 'release', 496, 25, 496, 32),
    woosh.Token(woosh.OP, ',', 496, 32, 496, 33),
    woosh.Token(woosh.NAME, 'version', 496, 34, 496, 41),
    woosh.Token(woosh.OP, ')', 496, 41, 496, 42),
    woosh.Token(woosh.OP, ':', 496, 42, 496, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 496, 43, 497, 0),
    woosh.Token(woosh.INDENT, '    ', 498, 0, 498, 4),
    woosh.Token(woosh.STRING, '""" Returns (system, release, version) aliased to common\r\n        marketing names used for some systems.\r\n\r\n        It also does some reordering of the information in some cases\r\n        where it would otherwise cause confusion.\r\n\r\n    """', 498, 4, 504, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 504, 7, 505, 0),
    woosh.Token(woosh.NAME, 'if', 505, 4, 505, 6),
    woosh.Token(woosh.NAME, 'system', 505, 7, 505, 13),
    woosh.Token(woosh.OP, '==', 505, 14, 505, 16),
    woosh.Token(woosh.STRING, "'SunOS'", 505, 17, 505, 24),
    woosh.Token(woosh.OP, ':', 505, 24, 505, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 505, 25, 506, 0),
    woosh.Token(woosh.COMMENT, "# Sun's OS", 506, 8, 506, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 506, 18, 507, 0),
    woosh.Token(woosh.INDENT, '        ', 507, 0, 507, 8),
    woosh.Token(woosh.NAME, 'if', 507, 8, 507, 10),
    woosh.Token(woosh.NAME, 'release', 507, 11, 507, 18),
    woosh.Token(woosh.OP, '<', 507, 19, 507, 20),
    woosh.Token(woosh.STRING, "'5'", 507, 21, 507, 24),
    woosh.Token(woosh.OP, ':', 507, 24, 507, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 507, 25, 508, 0),
    woosh.Token(woosh.COMMENT, '# These releases use the old name SunOS', 508, 12, 508, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 508, 51, 509, 0),
    woosh.Token(woosh.INDENT, '            ', 509, 0, 509, 12),
    woosh.Token(woosh.NAME, 'return', 509, 12, 509, 18),
    woosh.Token(woosh.NAME, 'system', 509, 19, 509, 25),
    woosh.Token(woosh.OP, ',', 509, 25, 509, 26),
    woosh.Token(woosh.NAME, 'release', 509, 27, 509, 34),
    woosh.Token(woosh.OP, ',', 509, 34, 509, 35),
    woosh.Token(woosh.NAME, 'version', 509, 36, 509, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 509, 43, 510, 0),
    woosh.Token(woosh.COMMENT, '# Modify release (marketing release = SunOS release - 3)', 510, 8, 510, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 510, 64, 511, 0),
    woosh.Token(woosh.DEDENT, '        ', 511, 0, 511, 8),
    woosh.Token(woosh.NAME, 'l', 511, 8, 511, 9),
    woosh.Token(woosh.OP, '=', 511, 10, 511, 11),
    woosh.Token(woosh.NAME, 'release', 511, 12, 511, 19),
    woosh.Token(woosh.OP, '.', 511, 19, 511, 20),
    woosh.Token(woosh.NAME, 'split', 511, 20, 511, 25),
    woosh.Token(woosh.OP, '(', 511, 25, 511, 26),
    woosh.Token(woosh.STRING, "'.'", 511, 26, 511, 29),
    woosh.Token(woosh.OP, ')', 511, 29, 511, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 511, 30, 512, 0),
    woosh.Token(woosh.NAME, 'if', 512, 8, 512, 10),
    woosh.Token(woosh.NAME, 'l', 512, 11, 512, 12),
    woosh.Token(woosh.OP, ':', 512, 12, 512, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 512, 13, 513, 0),
    woosh.Token(woosh.INDENT, '            ', 513, 0, 513, 12),
    woosh.Token(woosh.NAME, 'try', 513, 12, 513, 15),
    woosh.Token(woosh.OP, ':', 513, 15, 513, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 513, 16, 514, 0),
    woosh.Token(woosh.INDENT, '                ', 514, 0, 514, 16),
    woosh.Token(woosh.NAME, 'major', 514, 16, 514, 21),
    woosh.Token(woosh.OP, '=', 514, 22, 514, 23),
    woosh.Token(woosh.NAME, 'int', 514, 24, 514, 27),
    woosh.Token(woosh.OP, '(', 514, 27, 514, 28),
    woosh.Token(woosh.NAME, 'l', 514, 28, 514, 29),
    woosh.Token(woosh.OP, '[', 514, 29, 514, 30),
    woosh.Token(woosh.NUMBER, '0', 514, 30, 514, 31),
    woosh.Token(woosh.OP, ']', 514, 31, 514, 32),
    woosh.Token(woosh.OP, ')', 514, 32, 514, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 514, 33, 515, 0),
    woosh.Token(woosh.DEDENT, '            ', 515, 0, 515, 12),
    woosh.Token(woosh.NAME, 'except', 515, 12, 515, 18),
    woosh.Token(woosh.NAME, 'ValueError', 515, 19, 515, 29),
    woosh.Token(woosh.OP, ':', 515, 29, 515, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 515, 30, 516, 0),
    woosh.Token(woosh.INDENT, '                ', 516, 0, 516, 16),
    woosh.Token(woosh.NAME, 'pass', 516, 16, 516, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 516, 20, 517, 0),
    woosh.Token(woosh.DEDENT, '            ', 517, 0, 517, 12),
    woosh.Token(woosh.NAME, 'else', 517, 12, 517, 16),
    woosh.Token(woosh.OP, ':', 517, 16, 517, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 517, 17, 518, 0),
    woosh.Token(woosh.INDENT, '                ', 518, 0, 518, 16),
    woosh.Token(woosh.NAME, 'major', 518, 16, 518, 21),
    woosh.Token(woosh.OP, '=', 518, 22, 518, 23),
    woosh.Token(woosh.NAME, 'major', 518, 24, 518, 29),
    woosh.Token(woosh.OP, '-', 518, 30, 518, 31),
    woosh.Token(woosh.NUMBER, '3', 518, 32, 518, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 518, 33, 519, 0),
    woosh.Token(woosh.NAME, 'l', 519, 16, 519, 17),
    woosh.Token(woosh.OP, '[', 519, 17, 519, 18),
    woosh.Token(woosh.NUMBER, '0', 519, 18, 519, 19),
    woosh.Token(woosh.OP, ']', 519, 19, 519, 20),
    woosh.Token(woosh.OP, '=', 519, 21, 519, 22),
    woosh.Token(woosh.NAME, 'str', 519, 23, 519, 26),
    woosh.Token(woosh.OP, '(', 519, 26, 519, 27),
    woosh.Token(woosh.NAME, 'major', 519, 27, 519, 32),
    woosh.Token(woosh.OP, ')', 519, 32, 519, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 519, 33, 520, 0),
    woosh.Token(woosh.NAME, 'release', 520, 16, 520, 23),
    woosh.Token(woosh.OP, '=', 520, 24, 520, 25),
    woosh.Token(woosh.STRING, "'.'", 520, 26, 520, 29),
    woosh.Token(woosh.OP, '.', 520, 29, 520, 30),
    woosh.Token(woosh.NAME, 'join', 520, 30, 520, 34),
    woosh.Token(woosh.OP, '(', 520, 34, 520, 35),
    woosh.Token(woosh.NAME, 'l', 520, 35, 520, 36),
    woosh.Token(woosh.OP, ')', 520, 36, 520, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 520, 37, 521, 0),
    woosh.Token(woosh.DEDENT, '        ', 521, 0, 521, 8),
    woosh.Token(woosh.DEDENT, '', 521, 8, 521, 8),
    woosh.Token(woosh.NAME, 'if', 521, 8, 521, 10),
    woosh.Token(woosh.NAME, 'release', 521, 11, 521, 18),
    woosh.Token(woosh.OP, '<', 521, 19, 521, 20),
    woosh.Token(woosh.STRING, "'6'", 521, 21, 521, 24),
    woosh.Token(woosh.OP, ':', 521, 24, 521, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 521, 25, 522, 0),
    woosh.Token(woosh.INDENT, '            ', 522, 0, 522, 12),
    woosh.Token(woosh.NAME, 'system', 522, 12, 522, 18),
    woosh.Token(woosh.OP, '=', 522, 19, 522, 20),
    woosh.Token(woosh.STRING, "'Solaris'", 522, 21, 522, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 522, 30, 523, 0),
    woosh.Token(woosh.DEDENT, '        ', 523, 0, 523, 8),
    woosh.Token(woosh.NAME, 'else', 523, 8, 523, 12),
    woosh.Token(woosh.OP, ':', 523, 12, 523, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 523, 13, 524, 0),
    woosh.Token(woosh.COMMENT, '# XXX Whatever the new SunOS marketing name is...', 524, 12, 524, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 524, 61, 525, 0),
    woosh.Token(woosh.INDENT, '            ', 525, 0, 525, 12),
    woosh.Token(woosh.NAME, 'system', 525, 12, 525, 18),
    woosh.Token(woosh.OP, '=', 525, 19, 525, 20),
    woosh.Token(woosh.STRING, "'Solaris'", 525, 21, 525, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 525, 30, 526, 0),
    woosh.Token(woosh.DEDENT, '    ', 527, 0, 527, 4),
    woosh.Token(woosh.DEDENT, '', 527, 4, 527, 4),
    woosh.Token(woosh.NAME, 'elif', 527, 4, 527, 8),
    woosh.Token(woosh.NAME, 'system', 527, 9, 527, 15),
    woosh.Token(woosh.OP, '==', 527, 16, 527, 18),
    woosh.Token(woosh.STRING, "'IRIX64'", 527, 19, 527, 27),
    woosh.Token(woosh.OP, ':', 527, 27, 527, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 527, 28, 528, 0),
    woosh.Token(woosh.COMMENT, '# IRIX reports IRIX64 on platforms with 64-bit support; yet it', 528, 8, 528, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 528, 70, 529, 0),
    woosh.Token(woosh.COMMENT, '# is really a version and not a different platform, since 32-bit', 529, 8, 529, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 529, 72, 530, 0),
    woosh.Token(woosh.COMMENT, '# apps are also supported..', 530, 8, 530, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 530, 35, 531, 0),
    woosh.Token(woosh.INDENT, '        ', 531, 0, 531, 8),
    woosh.Token(woosh.NAME, 'system', 531, 8, 531, 14),
    woosh.Token(woosh.OP, '=', 531, 15, 531, 16),
    woosh.Token(woosh.STRING, "'IRIX'", 531, 17, 531, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 531, 23, 532, 0),
    woosh.Token(woosh.NAME, 'if', 532, 8, 532, 10),
    woosh.Token(woosh.NAME, 'version', 532, 11, 532, 18),
    woosh.Token(woosh.OP, ':', 532, 18, 532, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 532, 19, 533, 0),
    woosh.Token(woosh.INDENT, '            ', 533, 0, 533, 12),
    woosh.Token(woosh.NAME, 'version', 533, 12, 533, 19),
    woosh.Token(woosh.OP, '=', 533, 20, 533, 21),
    woosh.Token(woosh.NAME, 'version', 533, 22, 533, 29),
    woosh.Token(woosh.OP, '+', 533, 30, 533, 31),
    woosh.Token(woosh.STRING, "' (64bit)'", 533, 32, 533, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 533, 42, 534, 0),
    woosh.Token(woosh.DEDENT, '        ', 534, 0, 534, 8),
    woosh.Token(woosh.NAME, 'else', 534, 8, 534, 12),
    woosh.Token(woosh.OP, ':', 534, 12, 534, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 534, 13, 535, 0),
    woosh.Token(woosh.INDENT, '            ', 535, 0, 535, 12),
    woosh.Token(woosh.NAME, 'version', 535, 12, 535, 19),
    woosh.Token(woosh.OP, '=', 535, 20, 535, 21),
    woosh.Token(woosh.STRING, "'64bit'", 535, 22, 535, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 535, 29, 536, 0),
    woosh.Token(woosh.DEDENT, '    ', 537, 0, 537, 4),
    woosh.Token(woosh.DEDENT, '', 537, 4, 537, 4),
    woosh.Token(woosh.NAME, 'elif', 537, 4, 537, 8),
    woosh.Token(woosh.NAME, 'system', 537, 9, 537, 15),
    woosh.Token(woosh.NAME, 'in', 537, 16, 537, 18),
    woosh.Token(woosh.OP, '(', 537, 19, 537, 20),
    woosh.Token(woosh.STRING, "'win32'", 537, 20, 537, 27),
    woosh.Token(woosh.OP, ',', 537, 27, 537, 28),
    woosh.Token(woosh.STRING, "'win16'", 537, 29, 537, 36),
    woosh.Token(woosh.OP, ')', 537, 36, 537, 37),
    woosh.Token(woosh.OP, ':', 537, 37, 537, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 537, 38, 538, 0),
    woosh.Token(woosh.COMMENT, '# In case one of the other tricks', 538, 8, 538, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 538, 41, 539, 0),
    woosh.Token(woosh.INDENT, '        ', 539, 0, 539, 8),
    woosh.Token(woosh.NAME, 'system', 539, 8, 539, 14),
    woosh.Token(woosh.OP, '=', 539, 15, 539, 16),
    woosh.Token(woosh.STRING, "'Windows'", 539, 17, 539, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 539, 26, 540, 0),
    woosh.Token(woosh.COMMENT, "# bpo-35516: Don't replace Darwin with macOS since input release and", 541, 4, 541, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 541, 72, 542, 0),
    woosh.Token(woosh.COMMENT, '# version arguments can be different than the currently running version.', 542, 4, 542, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 542, 76, 543, 0),
    woosh.Token(woosh.DEDENT, '    ', 544, 0, 544, 4),
    woosh.Token(woosh.NAME, 'return', 544, 4, 544, 10),
    woosh.Token(woosh.NAME, 'system', 544, 11, 544, 17),
    woosh.Token(woosh.OP, ',', 544, 17, 544, 18),
    woosh.Token(woosh.NAME, 'release', 544, 19, 544, 26),
    woosh.Token(woosh.OP, ',', 544, 26, 544, 27),
    woosh.Token(woosh.NAME, 'version', 544, 28, 544, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 544, 35, 545, 0),
    woosh.Token(woosh.COMMENT, '### Various internal helpers', 546, 0, 546, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 546, 28, 547, 0),
    woosh.Token(woosh.DEDENT, '', 548, 0, 548, 0),
    woosh.Token(woosh.NAME, 'def', 548, 0, 548, 3),
    woosh.Token(woosh.NAME, '_platform', 548, 4, 548, 13),
    woosh.Token(woosh.OP, '(', 548, 13, 548, 14),
    woosh.Token(woosh.OP, '*', 548, 14, 548, 15),
    woosh.Token(woosh.NAME, 'args', 548, 15, 548, 19),
    woosh.Token(woosh.OP, ')', 548, 19, 548, 20),
    woosh.Token(woosh.OP, ':', 548, 20, 548, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 548, 21, 549, 0),
    woosh.Token(woosh.INDENT, '    ', 550, 0, 550, 4),
    woosh.Token(woosh.STRING, '""" Helper to format the platform string in a filename\r\n        compatible format e.g. "system-version-machine".\r\n    """', 550, 4, 552, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 552, 7, 553, 0),
    woosh.Token(woosh.COMMENT, '# Format the platform string', 553, 4, 553, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 553, 32, 554, 0),
    woosh.Token(woosh.NAME, 'platform', 554, 4, 554, 12),
    woosh.Token(woosh.OP, '=', 554, 13, 554, 14),
    woosh.Token(woosh.STRING, "'-'", 554, 15, 554, 18),
    woosh.Token(woosh.OP, '.', 554, 18, 554, 19),
    woosh.Token(woosh.NAME, 'join', 554, 19, 554, 23),
    woosh.Token(woosh.OP, '(', 554, 23, 554, 24),
    woosh.Token(woosh.NAME, 'x', 554, 24, 554, 25),
    woosh.Token(woosh.OP, '.', 554, 25, 554, 26),
    woosh.Token(woosh.NAME, 'strip', 554, 26, 554, 31),
    woosh.Token(woosh.OP, '(', 554, 31, 554, 32),
    woosh.Token(woosh.OP, ')', 554, 32, 554, 33),
    woosh.Token(woosh.NAME, 'for', 554, 34, 554, 37),
    woosh.Token(woosh.NAME, 'x', 554, 38, 554, 39),
    woosh.Token(woosh.NAME, 'in', 554, 40, 554, 42),
    woosh.Token(woosh.NAME, 'filter', 554, 43, 554, 49),
    woosh.Token(woosh.OP, '(', 554, 49, 554, 50),
    woosh.Token(woosh.NAME, 'len', 554, 50, 554, 53),
    woosh.Token(woosh.OP, ',', 554, 53, 554, 54),
    woosh.Token(woosh.NAME, 'args', 554, 55, 554, 59),
    woosh.Token(woosh.OP, ')', 554, 59, 554, 60),
    woosh.Token(woosh.OP, ')', 554, 60, 554, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 554, 61, 555, 0),
    woosh.Token(woosh.COMMENT, '# Cleanup some possible filename obstacles...', 556, 4, 556, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 556, 49, 557, 0),
    woosh.Token(woosh.NAME, 'platform', 557, 4, 557, 12),
    woosh.Token(woosh.OP, '=', 557, 13, 557, 14),
    woosh.Token(woosh.NAME, 'platform', 557, 15, 557, 23),
    woosh.Token(woosh.OP, '.', 557, 23, 557, 24),
    woosh.Token(woosh.NAME, 'replace', 557, 24, 557, 31),
    woosh.Token(woosh.OP, '(', 557, 31, 557, 32),
    woosh.Token(woosh.STRING, "' '", 557, 32, 557, 35),
    woosh.Token(woosh.OP, ',', 557, 35, 557, 36),
    woosh.Token(woosh.STRING, "'_'", 557, 37, 557, 40),
    woosh.Token(woosh.OP, ')', 557, 40, 557, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 557, 41, 558, 0),
    woosh.Token(woosh.NAME, 'platform', 558, 4, 558, 12),
    woosh.Token(woosh.OP, '=', 558, 13, 558, 14),
    woosh.Token(woosh.NAME, 'platform', 558, 15, 558, 23),
    woosh.Token(woosh.OP, '.', 558, 23, 558, 24),
    woosh.Token(woosh.NAME, 'replace', 558, 24, 558, 31),
    woosh.Token(woosh.OP, '(', 558, 31, 558, 32),
    woosh.Token(woosh.STRING, "'/'", 558, 32, 558, 35),
    woosh.Token(woosh.OP, ',', 558, 35, 558, 36),
    woosh.Token(woosh.STRING, "'-'", 558, 37, 558, 40),
    woosh.Token(woosh.OP, ')', 558, 40, 558, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 558, 41, 559, 0),
    woosh.Token(woosh.NAME, 'platform', 559, 4, 559, 12),
    woosh.Token(woosh.OP, '=', 559, 13, 559, 14),
    woosh.Token(woosh.NAME, 'platform', 559, 15, 559, 23),
    woosh.Token(woosh.OP, '.', 559, 23, 559, 24),
    woosh.Token(woosh.NAME, 'replace', 559, 24, 559, 31),
    woosh.Token(woosh.OP, '(', 559, 31, 559, 32),
    woosh.Token(woosh.STRING, "'\\\\'", 559, 32, 559, 36),
    woosh.Token(woosh.OP, ',', 559, 36, 559, 37),
    woosh.Token(woosh.STRING, "'-'", 559, 38, 559, 41),
    woosh.Token(woosh.OP, ')', 559, 41, 559, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 559, 42, 560, 0),
    woosh.Token(woosh.NAME, 'platform', 560, 4, 560, 12),
    woosh.Token(woosh.OP, '=', 560, 13, 560, 14),
    woosh.Token(woosh.NAME, 'platform', 560, 15, 560, 23),
    woosh.Token(woosh.OP, '.', 560, 23, 560, 24),
    woosh.Token(woosh.NAME, 'replace', 560, 24, 560, 31),
    woosh.Token(woosh.OP, '(', 560, 31, 560, 32),
    woosh.Token(woosh.STRING, "':'", 560, 32, 560, 35),
    woosh.Token(woosh.OP, ',', 560, 35, 560, 36),
    woosh.Token(woosh.STRING, "'-'", 560, 37, 560, 40),
    woosh.Token(woosh.OP, ')', 560, 40, 560, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 560, 41, 561, 0),
    woosh.Token(woosh.NAME, 'platform', 561, 4, 561, 12),
    woosh.Token(woosh.OP, '=', 561, 13, 561, 14),
    woosh.Token(woosh.NAME, 'platform', 561, 15, 561, 23),
    woosh.Token(woosh.OP, '.', 561, 23, 561, 24),
    woosh.Token(woosh.NAME, 'replace', 561, 24, 561, 31),
    woosh.Token(woosh.OP, '(', 561, 31, 561, 32),
    woosh.Token(woosh.STRING, "';'", 561, 32, 561, 35),
    woosh.Token(woosh.OP, ',', 561, 35, 561, 36),
    woosh.Token(woosh.STRING, "'-'", 561, 37, 561, 40),
    woosh.Token(woosh.OP, ')', 561, 40, 561, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 561, 41, 562, 0),
    woosh.Token(woosh.NAME, 'platform', 562, 4, 562, 12),
    woosh.Token(woosh.OP, '=', 562, 13, 562, 14),
    woosh.Token(woosh.NAME, 'platform', 562, 15, 562, 23),
    woosh.Token(woosh.OP, '.', 562, 23, 562, 24),
    woosh.Token(woosh.NAME, 'replace', 562, 24, 562, 31),
    woosh.Token(woosh.OP, '(', 562, 31, 562, 32),
    woosh.Token(woosh.STRING, '\'"\'', 562, 32, 562, 35),
    woosh.Token(woosh.OP, ',', 562, 35, 562, 36),
    woosh.Token(woosh.STRING, "'-'", 562, 37, 562, 40),
    woosh.Token(woosh.OP, ')', 562, 40, 562, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 562, 41, 563, 0),
    woosh.Token(woosh.NAME, 'platform', 563, 4, 563, 12),
    woosh.Token(woosh.OP, '=', 563, 13, 563, 14),
    woosh.Token(woosh.NAME, 'platform', 563, 15, 563, 23),
    woosh.Token(woosh.OP, '.', 563, 23, 563, 24),
    woosh.Token(woosh.NAME, 'replace', 563, 24, 563, 31),
    woosh.Token(woosh.OP, '(', 563, 31, 563, 32),
    woosh.Token(woosh.STRING, "'('", 563, 32, 563, 35),
    woosh.Token(woosh.OP, ',', 563, 35, 563, 36),
    woosh.Token(woosh.STRING, "'-'", 563, 37, 563, 40),
    woosh.Token(woosh.OP, ')', 563, 40, 563, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 563, 41, 564, 0),
    woosh.Token(woosh.NAME, 'platform', 564, 4, 564, 12),
    woosh.Token(woosh.OP, '=', 564, 13, 564, 14),
    woosh.Token(woosh.NAME, 'platform', 564, 15, 564, 23),
    woosh.Token(woosh.OP, '.', 564, 23, 564, 24),
    woosh.Token(woosh.NAME, 'replace', 564, 24, 564, 31),
    woosh.Token(woosh.OP, '(', 564, 31, 564, 32),
    woosh.Token(woosh.STRING, "')'", 564, 32, 564, 35),
    woosh.Token(woosh.OP, ',', 564, 35, 564, 36),
    woosh.Token(woosh.STRING, "'-'", 564, 37, 564, 40),
    woosh.Token(woosh.OP, ')', 564, 40, 564, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 564, 41, 565, 0),
    woosh.Token(woosh.COMMENT, "# No need to report 'unknown' information...", 566, 4, 566, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 566, 48, 567, 0),
    woosh.Token(woosh.NAME, 'platform', 567, 4, 567, 12),
    woosh.Token(woosh.OP, '=', 567, 13, 567, 14),
    woosh.Token(woosh.NAME, 'platform', 567, 15, 567, 23),
    woosh.Token(woosh.OP, '.', 567, 23, 567, 24),
    woosh.Token(woosh.NAME, 'replace', 567, 24, 567, 31),
    woosh.Token(woosh.OP, '(', 567, 31, 567, 32),
    woosh.Token(woosh.STRING, "'unknown'", 567, 32, 567, 41),
    woosh.Token(woosh.OP, ',', 567, 41, 567, 42),
    woosh.Token(woosh.STRING, "''", 567, 43, 567, 45),
    woosh.Token(woosh.OP, ')', 567, 45, 567, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 567, 46, 568, 0),
    woosh.Token(woosh.COMMENT, "# Fold '--'s and remove trailing '-'", 569, 4, 569, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 569, 40, 570, 0),
    woosh.Token(woosh.NAME, 'while', 570, 4, 570, 9),
    woosh.Token(woosh.NUMBER, '1', 570, 10, 570, 11),
    woosh.Token(woosh.OP, ':', 570, 11, 570, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 570, 12, 571, 0),
    woosh.Token(woosh.INDENT, '        ', 571, 0, 571, 8),
    woosh.Token(woosh.NAME, 'cleaned', 571, 8, 571, 15),
    woosh.Token(woosh.OP, '=', 571, 16, 571, 17),
    woosh.Token(woosh.NAME, 'platform', 571, 18, 571, 26),
    woosh.Token(woosh.OP, '.', 571, 26, 571, 27),
    woosh.Token(woosh.NAME, 'replace', 571, 27, 571, 34),
    woosh.Token(woosh.OP, '(', 571, 34, 571, 35),
    woosh.Token(woosh.STRING, "'--'", 571, 35, 571, 39),
    woosh.Token(woosh.OP, ',', 571, 39, 571, 40),
    woosh.Token(woosh.STRING, "'-'", 571, 41, 571, 44),
    woosh.Token(woosh.OP, ')', 571, 44, 571, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 571, 45, 572, 0),
    woosh.Token(woosh.NAME, 'if', 572, 8, 572, 10),
    woosh.Token(woosh.NAME, 'cleaned', 572, 11, 572, 18),
    woosh.Token(woosh.OP, '==', 572, 19, 572, 21),
    woosh.Token(woosh.NAME, 'platform', 572, 22, 572, 30),
    woosh.Token(woosh.OP, ':', 572, 30, 572, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 572, 31, 573, 0),
    woosh.Token(woosh.INDENT, '            ', 573, 0, 573, 12),
    woosh.Token(woosh.NAME, 'break', 573, 12, 573, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 573, 17, 574, 0),
    woosh.Token(woosh.DEDENT, '        ', 574, 0, 574, 8),
    woosh.Token(woosh.NAME, 'platform', 574, 8, 574, 16),
    woosh.Token(woosh.OP, '=', 574, 17, 574, 18),
    woosh.Token(woosh.NAME, 'cleaned', 574, 19, 574, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 574, 26, 575, 0),
    woosh.Token(woosh.DEDENT, '    ', 575, 0, 575, 4),
    woosh.Token(woosh.NAME, 'while', 575, 4, 575, 9),
    woosh.Token(woosh.NAME, 'platform', 575, 10, 575, 18),
    woosh.Token(woosh.OP, '[', 575, 18, 575, 19),
    woosh.Token(woosh.OP, '-', 575, 19, 575, 20),
    woosh.Token(woosh.NUMBER, '1', 575, 20, 575, 21),
    woosh.Token(woosh.OP, ']', 575, 21, 575, 22),
    woosh.Token(woosh.OP, '==', 575, 23, 575, 25),
    woosh.Token(woosh.STRING, "'-'", 575, 26, 575, 29),
    woosh.Token(woosh.OP, ':', 575, 29, 575, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 575, 30, 576, 0),
    woosh.Token(woosh.INDENT, '        ', 576, 0, 576, 8),
    woosh.Token(woosh.NAME, 'platform', 576, 8, 576, 16),
    woosh.Token(woosh.OP, '=', 576, 17, 576, 18),
    woosh.Token(woosh.NAME, 'platform', 576, 19, 576, 27),
    woosh.Token(woosh.OP, '[', 576, 27, 576, 28),
    woosh.Token(woosh.OP, ':', 576, 28, 576, 29),
    woosh.Token(woosh.OP, '-', 576, 29, 576, 30),
    woosh.Token(woosh.NUMBER, '1', 576, 30, 576, 31),
    woosh.Token(woosh.OP, ']', 576, 31, 576, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 576, 32, 577, 0),
    woosh.Token(woosh.DEDENT, '    ', 578, 0, 578, 4),
    woosh.Token(woosh.NAME, 'return', 578, 4, 578, 10),
    woosh.Token(woosh.NAME, 'platform', 578, 11, 578, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 578, 19, 579, 0),
    woosh.Token(woosh.DEDENT, '', 580, 0, 580, 0),
    woosh.Token(woosh.NAME, 'def', 580, 0, 580, 3),
    woosh.Token(woosh.NAME, '_node', 580, 4, 580, 9),
    woosh.Token(woosh.OP, '(', 580, 9, 580, 10),
    woosh.Token(woosh.NAME, 'default', 580, 10, 580, 17),
    woosh.Token(woosh.OP, '=', 580, 17, 580, 18),
    woosh.Token(woosh.STRING, "''", 580, 18, 580, 20),
    woosh.Token(woosh.OP, ')', 580, 20, 580, 21),
    woosh.Token(woosh.OP, ':', 580, 21, 580, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 580, 22, 581, 0),
    woosh.Token(woosh.INDENT, '    ', 582, 0, 582, 4),
    woosh.Token(woosh.STRING, '""" Helper to determine the node name of this machine.\r\n    """', 582, 4, 583, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 583, 7, 584, 0),
    woosh.Token(woosh.NAME, 'try', 584, 4, 584, 7),
    woosh.Token(woosh.OP, ':', 584, 7, 584, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 584, 8, 585, 0),
    woosh.Token(woosh.INDENT, '        ', 585, 0, 585, 8),
    woosh.Token(woosh.NAME, 'import', 585, 8, 585, 14),
    woosh.Token(woosh.NAME, 'socket', 585, 15, 585, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 585, 21, 586, 0),
    woosh.Token(woosh.DEDENT, '    ', 586, 0, 586, 4),
    woosh.Token(woosh.NAME, 'except', 586, 4, 586, 10),
    woosh.Token(woosh.NAME, 'ImportError', 586, 11, 586, 22),
    woosh.Token(woosh.OP, ':', 586, 22, 586, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 586, 23, 587, 0),
    woosh.Token(woosh.COMMENT, '# No sockets...', 587, 8, 587, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 587, 23, 588, 0),
    woosh.Token(woosh.INDENT, '        ', 588, 0, 588, 8),
    woosh.Token(woosh.NAME, 'return', 588, 8, 588, 14),
    woosh.Token(woosh.NAME, 'default', 588, 15, 588, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 588, 22, 589, 0),
    woosh.Token(woosh.DEDENT, '    ', 589, 0, 589, 4),
    woosh.Token(woosh.NAME, 'try', 589, 4, 589, 7),
    woosh.Token(woosh.OP, ':', 589, 7, 589, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 589, 8, 590, 0),
    woosh.Token(woosh.INDENT, '        ', 590, 0, 590, 8),
    woosh.Token(woosh.NAME, 'return', 590, 8, 590, 14),
    woosh.Token(woosh.NAME, 'socket', 590, 15, 590, 21),
    woosh.Token(woosh.OP, '.', 590, 21, 590, 22),
    woosh.Token(woosh.NAME, 'gethostname', 590, 22, 590, 33),
    woosh.Token(woosh.OP, '(', 590, 33, 590, 34),
    woosh.Token(woosh.OP, ')', 590, 34, 590, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 590, 35, 591, 0),
    woosh.Token(woosh.DEDENT, '    ', 591, 0, 591, 4),
    woosh.Token(woosh.NAME, 'except', 591, 4, 591, 10),
    woosh.Token(woosh.NAME, 'OSError', 591, 11, 591, 18),
    woosh.Token(woosh.OP, ':', 591, 18, 591, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 591, 19, 592, 0),
    woosh.Token(woosh.COMMENT, '# Still not working...', 592, 8, 592, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 592, 30, 593, 0),
    woosh.Token(woosh.INDENT, '        ', 593, 0, 593, 8),
    woosh.Token(woosh.NAME, 'return', 593, 8, 593, 14),
    woosh.Token(woosh.NAME, 'default', 593, 15, 593, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 593, 22, 594, 0),
    woosh.Token(woosh.DEDENT, '', 595, 0, 595, 0),
    woosh.Token(woosh.DEDENT, '', 595, 0, 595, 0),
    woosh.Token(woosh.NAME, 'def', 595, 0, 595, 3),
    woosh.Token(woosh.NAME, '_follow_symlinks', 595, 4, 595, 20),
    woosh.Token(woosh.OP, '(', 595, 20, 595, 21),
    woosh.Token(woosh.NAME, 'filepath', 595, 21, 595, 29),
    woosh.Token(woosh.OP, ')', 595, 29, 595, 30),
    woosh.Token(woosh.OP, ':', 595, 30, 595, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 595, 31, 596, 0),
    woosh.Token(woosh.INDENT, '    ', 597, 0, 597, 4),
    woosh.Token(woosh.STRING, '""" In case filepath is a symlink, follow it until a\r\n        real file is reached.\r\n    """', 597, 4, 599, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 599, 7, 600, 0),
    woosh.Token(woosh.NAME, 'filepath', 600, 4, 600, 12),
    woosh.Token(woosh.OP, '=', 600, 13, 600, 14),
    woosh.Token(woosh.NAME, 'os', 600, 15, 600, 17),
    woosh.Token(woosh.OP, '.', 600, 17, 600, 18),
    woosh.Token(woosh.NAME, 'path', 600, 18, 600, 22),
    woosh.Token(woosh.OP, '.', 600, 22, 600, 23),
    woosh.Token(woosh.NAME, 'abspath', 600, 23, 600, 30),
    woosh.Token(woosh.OP, '(', 600, 30, 600, 31),
    woosh.Token(woosh.NAME, 'filepath', 600, 31, 600, 39),
    woosh.Token(woosh.OP, ')', 600, 39, 600, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 600, 40, 601, 0),
    woosh.Token(woosh.NAME, 'while', 601, 4, 601, 9),
    woosh.Token(woosh.NAME, 'os', 601, 10, 601, 12),
    woosh.Token(woosh.OP, '.', 601, 12, 601, 13),
    woosh.Token(woosh.NAME, 'path', 601, 13, 601, 17),
    woosh.Token(woosh.OP, '.', 601, 17, 601, 18),
    woosh.Token(woosh.NAME, 'islink', 601, 18, 601, 24),
    woosh.Token(woosh.OP, '(', 601, 24, 601, 25),
    woosh.Token(woosh.NAME, 'filepath', 601, 25, 601, 33),
    woosh.Token(woosh.OP, ')', 601, 33, 601, 34),
    woosh.Token(woosh.OP, ':', 601, 34, 601, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 601, 35, 602, 0),
    woosh.Token(woosh.INDENT, '        ', 602, 0, 602, 8),
    woosh.Token(woosh.NAME, 'filepath', 602, 8, 602, 16),
    woosh.Token(woosh.OP, '=', 602, 17, 602, 18),
    woosh.Token(woosh.NAME, 'os', 602, 19, 602, 21),
    woosh.Token(woosh.OP, '.', 602, 21, 602, 22),
    woosh.Token(woosh.NAME, 'path', 602, 22, 602, 26),
    woosh.Token(woosh.OP, '.', 602, 26, 602, 27),
    woosh.Token(woosh.NAME, 'normpath', 602, 27, 602, 35),
    woosh.Token(woosh.OP, '(', 602, 35, 602, 36),
    woosh.Token(woosh.NAME, 'os', 603, 12, 603, 14),
    woosh.Token(woosh.OP, '.', 603, 14, 603, 15),
    woosh.Token(woosh.NAME, 'path', 603, 15, 603, 19),
    woosh.Token(woosh.OP, '.', 603, 19, 603, 20),
    woosh.Token(woosh.NAME, 'join', 603, 20, 603, 24),
    woosh.Token(woosh.OP, '(', 603, 24, 603, 25),
    woosh.Token(woosh.NAME, 'os', 603, 25, 603, 27),
    woosh.Token(woosh.OP, '.', 603, 27, 603, 28),
    woosh.Token(woosh.NAME, 'path', 603, 28, 603, 32),
    woosh.Token(woosh.OP, '.', 603, 32, 603, 33),
    woosh.Token(woosh.NAME, 'dirname', 603, 33, 603, 40),
    woosh.Token(woosh.OP, '(', 603, 40, 603, 41),
    woosh.Token(woosh.NAME, 'filepath', 603, 41, 603, 49),
    woosh.Token(woosh.OP, ')', 603, 49, 603, 50),
    woosh.Token(woosh.OP, ',', 603, 50, 603, 51),
    woosh.Token(woosh.NAME, 'os', 603, 52, 603, 54),
    woosh.Token(woosh.OP, '.', 603, 54, 603, 55),
    woosh.Token(woosh.NAME, 'readlink', 603, 55, 603, 63),
    woosh.Token(woosh.OP, '(', 603, 63, 603, 64),
    woosh.Token(woosh.NAME, 'filepath', 603, 64, 603, 72),
    woosh.Token(woosh.OP, ')', 603, 72, 603, 73),
    woosh.Token(woosh.OP, ')', 603, 73, 603, 74),
    woosh.Token(woosh.OP, ')', 603, 74, 603, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 603, 75, 604, 0),
    woosh.Token(woosh.DEDENT, '    ', 604, 0, 604, 4),
    woosh.Token(woosh.NAME, 'return', 604, 4, 604, 10),
    woosh.Token(woosh.NAME, 'filepath', 604, 11, 604, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 604, 19, 605, 0),
    woosh.Token(woosh.DEDENT, '', 607, 0, 607, 0),
    woosh.Token(woosh.NAME, 'def', 607, 0, 607, 3),
    woosh.Token(woosh.NAME, '_syscmd_file', 607, 4, 607, 16),
    woosh.Token(woosh.OP, '(', 607, 16, 607, 17),
    woosh.Token(woosh.NAME, 'target', 607, 17, 607, 23),
    woosh.Token(woosh.OP, ',', 607, 23, 607, 24),
    woosh.Token(woosh.NAME, 'default', 607, 25, 607, 32),
    woosh.Token(woosh.OP, '=', 607, 32, 607, 33),
    woosh.Token(woosh.STRING, "''", 607, 33, 607, 35),
    woosh.Token(woosh.OP, ')', 607, 35, 607, 36),
    woosh.Token(woosh.OP, ':', 607, 36, 607, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 607, 37, 608, 0),
    woosh.Token(woosh.INDENT, '    ', 609, 0, 609, 4),
    woosh.Token(woosh.STRING, '""" Interface to the system\'s file command.\r\n\r\n        The function uses the -b option of the file command to have it\r\n        omit the filename in its output. Follow the symlinks. It returns\r\n        default in case the command should fail.\r\n\r\n    """', 609, 4, 615, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 615, 7, 616, 0),
    woosh.Token(woosh.NAME, 'if', 616, 4, 616, 6),
    woosh.Token(woosh.NAME, 'sys', 616, 7, 616, 10),
    woosh.Token(woosh.OP, '.', 616, 10, 616, 11),
    woosh.Token(woosh.NAME, 'platform', 616, 11, 616, 19),
    woosh.Token(woosh.NAME, 'in', 616, 20, 616, 22),
    woosh.Token(woosh.OP, '(', 616, 23, 616, 24),
    woosh.Token(woosh.STRING, "'dos'", 616, 24, 616, 29),
    woosh.Token(woosh.OP, ',', 616, 29, 616, 30),
    woosh.Token(woosh.STRING, "'win32'", 616, 31, 616, 38),
    woosh.Token(woosh.OP, ',', 616, 38, 616, 39),
    woosh.Token(woosh.STRING, "'win16'", 616, 40, 616, 47),
    woosh.Token(woosh.OP, ')', 616, 47, 616, 48),
    woosh.Token(woosh.OP, ':', 616, 48, 616, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 616, 49, 617, 0),
    woosh.Token(woosh.COMMENT, '# XXX Others too ?', 617, 8, 617, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 617, 26, 618, 0),
    woosh.Token(woosh.INDENT, '        ', 618, 0, 618, 8),
    woosh.Token(woosh.NAME, 'return', 618, 8, 618, 14),
    woosh.Token(woosh.NAME, 'default', 618, 15, 618, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 618, 22, 619, 0),
    woosh.Token(woosh.DEDENT, '    ', 620, 0, 620, 4),
    woosh.Token(woosh.NAME, 'import', 620, 4, 620, 10),
    woosh.Token(woosh.NAME, 'subprocess', 620, 11, 620, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 620, 21, 621, 0),
    woosh.Token(woosh.NAME, 'target', 621, 4, 621, 10),
    woosh.Token(woosh.OP, '=', 621, 11, 621, 12),
    woosh.Token(woosh.NAME, '_follow_symlinks', 621, 13, 621, 29),
    woosh.Token(woosh.OP, '(', 621, 29, 621, 30),
    woosh.Token(woosh.NAME, 'target', 621, 30, 621, 36),
    woosh.Token(woosh.OP, ')', 621, 36, 621, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 621, 37, 622, 0),
    woosh.Token(woosh.COMMENT, '# "file" output is locale dependent: force the usage of the C locale', 622, 4, 622, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 622, 72, 623, 0),
    woosh.Token(woosh.COMMENT, '# to get deterministic behavior.', 623, 4, 623, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 623, 36, 624, 0),
    woosh.Token(woosh.NAME, 'env', 624, 4, 624, 7),
    woosh.Token(woosh.OP, '=', 624, 8, 624, 9),
    woosh.Token(woosh.NAME, 'dict', 624, 10, 624, 14),
    woosh.Token(woosh.OP, '(', 624, 14, 624, 15),
    woosh.Token(woosh.NAME, 'os', 624, 15, 624, 17),
    woosh.Token(woosh.OP, '.', 624, 17, 624, 18),
    woosh.Token(woosh.NAME, 'environ', 624, 18, 624, 25),
    woosh.Token(woosh.OP, ',', 624, 25, 624, 26),
    woosh.Token(woosh.NAME, 'LC_ALL', 624, 27, 624, 33),
    woosh.Token(woosh.OP, '=', 624, 33, 624, 34),
    woosh.Token(woosh.STRING, "'C'", 624, 34, 624, 37),
    woosh.Token(woosh.OP, ')', 624, 37, 624, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 624, 38, 625, 0),
    woosh.Token(woosh.NAME, 'try', 625, 4, 625, 7),
    woosh.Token(woosh.OP, ':', 625, 7, 625, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 625, 8, 626, 0),
    woosh.Token(woosh.COMMENT, '# -b: do not prepend filenames to output lines (brief mode)', 626, 8, 626, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 626, 67, 627, 0),
    woosh.Token(woosh.INDENT, '        ', 627, 0, 627, 8),
    woosh.Token(woosh.NAME, 'output', 627, 8, 627, 14),
    woosh.Token(woosh.OP, '=', 627, 15, 627, 16),
    woosh.Token(woosh.NAME, 'subprocess', 627, 17, 627, 27),
    woosh.Token(woosh.OP, '.', 627, 27, 627, 28),
    woosh.Token(woosh.NAME, 'check_output', 627, 28, 627, 40),
    woosh.Token(woosh.OP, '(', 627, 40, 627, 41),
    woosh.Token(woosh.OP, '[', 627, 41, 627, 42),
    woosh.Token(woosh.STRING, "'file'", 627, 42, 627, 48),
    woosh.Token(woosh.OP, ',', 627, 48, 627, 49),
    woosh.Token(woosh.STRING, "'-b'", 627, 50, 627, 54),
    woosh.Token(woosh.OP, ',', 627, 54, 627, 55),
    woosh.Token(woosh.NAME, 'target', 627, 56, 627, 62),
    woosh.Token(woosh.OP, ']', 627, 62, 627, 63),
    woosh.Token(woosh.OP, ',', 627, 63, 627, 64),
    woosh.Token(woosh.NAME, 'stderr', 628, 41, 628, 47),
    woosh.Token(woosh.OP, '=', 628, 47, 628, 48),
    woosh.Token(woosh.NAME, 'subprocess', 628, 48, 628, 58),
    woosh.Token(woosh.OP, '.', 628, 58, 628, 59),
    woosh.Token(woosh.NAME, 'DEVNULL', 628, 59, 628, 66),
    woosh.Token(woosh.OP, ',', 628, 66, 628, 67),
    woosh.Token(woosh.NAME, 'env', 629, 41, 629, 44),
    woosh.Token(woosh.OP, '=', 629, 44, 629, 45),
    woosh.Token(woosh.NAME, 'env', 629, 45, 629, 48),
    woosh.Token(woosh.OP, ')', 629, 48, 629, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 629, 49, 630, 0),
    woosh.Token(woosh.DEDENT, '    ', 630, 0, 630, 4),
    woosh.Token(woosh.NAME, 'except', 630, 4, 630, 10),
    woosh.Token(woosh.OP, '(', 630, 11, 630, 12),
    woosh.Token(woosh.NAME, 'OSError', 630, 12, 630, 19),
    woosh.Token(woosh.OP, ',', 630, 19, 630, 20),
    woosh.Token(woosh.NAME, 'subprocess', 630, 21, 630, 31),
    woosh.Token(woosh.OP, '.', 630, 31, 630, 32),
    woosh.Token(woosh.NAME, 'CalledProcessError', 630, 32, 630, 50),
    woosh.Token(woosh.OP, ')', 630, 50, 630, 51),
    woosh.Token(woosh.OP, ':', 630, 51, 630, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 630, 52, 631, 0),
    woosh.Token(woosh.INDENT, '        ', 631, 0, 631, 8),
    woosh.Token(woosh.NAME, 'return', 631, 8, 631, 14),
    woosh.Token(woosh.NAME, 'default', 631, 15, 631, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 631, 22, 632, 0),
    woosh.Token(woosh.DEDENT, '    ', 632, 0, 632, 4),
    woosh.Token(woosh.NAME, 'if', 632, 4, 632, 6),
    woosh.Token(woosh.NAME, 'not', 632, 7, 632, 10),
    woosh.Token(woosh.NAME, 'output', 632, 11, 632, 17),
    woosh.Token(woosh.OP, ':', 632, 17, 632, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 632, 18, 633, 0),
    woosh.Token(woosh.INDENT, '        ', 633, 0, 633, 8),
    woosh.Token(woosh.NAME, 'return', 633, 8, 633, 14),
    woosh.Token(woosh.NAME, 'default', 633, 15, 633, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 633, 22, 634, 0),
    woosh.Token(woosh.COMMENT, '# With the C locale, the output should be mostly ASCII-compatible.', 634, 4, 634, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 634, 70, 635, 0),
    woosh.Token(woosh.COMMENT, '# Decode from Latin-1 to prevent Unicode decode error.', 635, 4, 635, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 635, 58, 636, 0),
    woosh.Token(woosh.DEDENT, '    ', 636, 0, 636, 4),
    woosh.Token(woosh.NAME, 'return', 636, 4, 636, 10),
    woosh.Token(woosh.NAME, 'output', 636, 11, 636, 17),
    woosh.Token(woosh.OP, '.', 636, 17, 636, 18),
    woosh.Token(woosh.NAME, 'decode', 636, 18, 636, 24),
    woosh.Token(woosh.OP, '(', 636, 24, 636, 25),
    woosh.Token(woosh.STRING, "'latin-1'", 636, 25, 636, 34),
    woosh.Token(woosh.OP, ')', 636, 34, 636, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 636, 35, 637, 0),
    woosh.Token(woosh.COMMENT, '### Information about the used architecture', 638, 0, 638, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 638, 43, 639, 0),
    woosh.Token(woosh.COMMENT, '# Default values for architecture; non-empty strings override the', 640, 0, 640, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 640, 65, 641, 0),
    woosh.Token(woosh.COMMENT, '# defaults given as parameters', 641, 0, 641, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 641, 30, 642, 0),
    woosh.Token(woosh.DEDENT, '', 642, 0, 642, 0),
    woosh.Token(woosh.NAME, '_default_architecture', 642, 0, 642, 21),
    woosh.Token(woosh.OP, '=', 642, 22, 642, 23),
    woosh.Token(woosh.OP, '{', 642, 24, 642, 25),
    woosh.Token(woosh.STRING, "'win32'", 643, 4, 643, 11),
    woosh.Token(woosh.OP, ':', 643, 11, 643, 12),
    woosh.Token(woosh.OP, '(', 643, 13, 643, 14),
    woosh.Token(woosh.STRING, "''", 643, 14, 643, 16),
    woosh.Token(woosh.OP, ',', 643, 16, 643, 17),
    woosh.Token(woosh.STRING, "'WindowsPE'", 643, 18, 643, 29),
    woosh.Token(woosh.OP, ')', 643, 29, 643, 30),
    woosh.Token(woosh.OP, ',', 643, 30, 643, 31),
    woosh.Token(woosh.STRING, "'win16'", 644, 4, 644, 11),
    woosh.Token(woosh.OP, ':', 644, 11, 644, 12),
    woosh.Token(woosh.OP, '(', 644, 13, 644, 14),
    woosh.Token(woosh.STRING, "''", 644, 14, 644, 16),
    woosh.Token(woosh.OP, ',', 644, 16, 644, 17),
    woosh.Token(woosh.STRING, "'Windows'", 644, 18, 644, 27),
    woosh.Token(woosh.OP, ')', 644, 27, 644, 28),
    woosh.Token(woosh.OP, ',', 644, 28, 644, 29),
    woosh.Token(woosh.STRING, "'dos'", 645, 4, 645, 9),
    woosh.Token(woosh.OP, ':', 645, 9, 645, 10),
    woosh.Token(woosh.OP, '(', 645, 11, 645, 12),
    woosh.Token(woosh.STRING, "''", 645, 12, 645, 14),
    woosh.Token(woosh.OP, ',', 645, 14, 645, 15),
    woosh.Token(woosh.STRING, "'MSDOS'", 645, 16, 645, 23),
    woosh.Token(woosh.OP, ')', 645, 23, 645, 24),
    woosh.Token(woosh.OP, ',', 645, 24, 645, 25),
    woosh.Token(woosh.OP, '}', 646, 0, 646, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 646, 1, 647, 0),
    woosh.Token(woosh.NAME, 'def', 648, 0, 648, 3),
    woosh.Token(woosh.NAME, 'architecture', 648, 4, 648, 16),
    woosh.Token(woosh.OP, '(', 648, 16, 648, 17),
    woosh.Token(woosh.NAME, 'executable', 648, 17, 648, 27),
    woosh.Token(woosh.OP, '=', 648, 27, 648, 28),
    woosh.Token(woosh.NAME, 'sys', 648, 28, 648, 31),
    woosh.Token(woosh.OP, '.', 648, 31, 648, 32),
    woosh.Token(woosh.NAME, 'executable', 648, 32, 648, 42),
    woosh.Token(woosh.OP, ',', 648, 42, 648, 43),
    woosh.Token(woosh.NAME, 'bits', 648, 44, 648, 48),
    woosh.Token(woosh.OP, '=', 648, 48, 648, 49),
    woosh.Token(woosh.STRING, "''", 648, 49, 648, 51),
    woosh.Token(woosh.OP, ',', 648, 51, 648, 52),
    woosh.Token(woosh.NAME, 'linkage', 648, 53, 648, 60),
    woosh.Token(woosh.OP, '=', 648, 60, 648, 61),
    woosh.Token(woosh.STRING, "''", 648, 61, 648, 63),
    woosh.Token(woosh.OP, ')', 648, 63, 648, 64),
    woosh.Token(woosh.OP, ':', 648, 64, 648, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 648, 65, 649, 0),
    woosh.Token(woosh.INDENT, '    ', 650, 0, 650, 4),
    woosh.Token(woosh.STRING, '""" Queries the given executable (defaults to the Python interpreter\r\n        binary) for various architecture information.\r\n\r\n        Returns a tuple (bits, linkage) which contains information about\r\n        the bit architecture and the linkage format used for the\r\n        executable. Both values are returned as strings.\r\n\r\n        Values that cannot be determined are returned as given by the\r\n        parameter presets. If bits is given as \'\', the sizeof(pointer)\r\n        (or sizeof(long) on Python version < 1.5.2) is used as\r\n        indicator for the supported pointer size.\r\n\r\n        The function relies on the system\'s "file" command to do the\r\n        actual work. This is available on most if not all Unix\r\n        platforms. On some non-Unix platforms where the "file" command\r\n        does not exist and the executable is set to the Python interpreter\r\n        binary defaults from _default_architecture are used.\r\n\r\n    """', 650, 4, 668, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 668, 7, 669, 0),
    woosh.Token(woosh.COMMENT, '# Use the sizeof(pointer) as default number of bits if nothing', 669, 4, 669, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 669, 66, 670, 0),
    woosh.Token(woosh.COMMENT, '# else is given as default.', 670, 4, 670, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 670, 31, 671, 0),
    woosh.Token(woosh.NAME, 'if', 671, 4, 671, 6),
    woosh.Token(woosh.NAME, 'not', 671, 7, 671, 10),
    woosh.Token(woosh.NAME, 'bits', 671, 11, 671, 15),
    woosh.Token(woosh.OP, ':', 671, 15, 671, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 671, 16, 672, 0),
    woosh.Token(woosh.INDENT, '        ', 672, 0, 672, 8),
    woosh.Token(woosh.NAME, 'import', 672, 8, 672, 14),
    woosh.Token(woosh.NAME, 'struct', 672, 15, 672, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 672, 21, 673, 0),
    woosh.Token(woosh.NAME, 'size', 673, 8, 673, 12),
    woosh.Token(woosh.OP, '=', 673, 13, 673, 14),
    woosh.Token(woosh.NAME, 'struct', 673, 15, 673, 21),
    woosh.Token(woosh.OP, '.', 673, 21, 673, 22),
    woosh.Token(woosh.NAME, 'calcsize', 673, 22, 673, 30),
    woosh.Token(woosh.OP, '(', 673, 30, 673, 31),
    woosh.Token(woosh.STRING, "'P'", 673, 31, 673, 34),
    woosh.Token(woosh.OP, ')', 673, 34, 673, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 673, 35, 674, 0),
    woosh.Token(woosh.NAME, 'bits', 674, 8, 674, 12),
    woosh.Token(woosh.OP, '=', 674, 13, 674, 14),
    woosh.Token(woosh.NAME, 'str', 674, 15, 674, 18),
    woosh.Token(woosh.OP, '(', 674, 18, 674, 19),
    woosh.Token(woosh.NAME, 'size', 674, 19, 674, 23),
    woosh.Token(woosh.OP, '*', 674, 24, 674, 25),
    woosh.Token(woosh.NUMBER, '8', 674, 26, 674, 27),
    woosh.Token(woosh.OP, ')', 674, 27, 674, 28),
    woosh.Token(woosh.OP, '+', 674, 29, 674, 30),
    woosh.Token(woosh.STRING, "'bit'", 674, 31, 674, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 674, 36, 675, 0),
    woosh.Token(woosh.COMMENT, "# Get data from the 'file' system command", 676, 4, 676, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 676, 45, 677, 0),
    woosh.Token(woosh.DEDENT, '    ', 677, 0, 677, 4),
    woosh.Token(woosh.NAME, 'if', 677, 4, 677, 6),
    woosh.Token(woosh.NAME, 'executable', 677, 7, 677, 17),
    woosh.Token(woosh.OP, ':', 677, 17, 677, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 677, 18, 678, 0),
    woosh.Token(woosh.INDENT, '        ', 678, 0, 678, 8),
    woosh.Token(woosh.NAME, 'fileout', 678, 8, 678, 15),
    woosh.Token(woosh.OP, '=', 678, 16, 678, 17),
    woosh.Token(woosh.NAME, '_syscmd_file', 678, 18, 678, 30),
    woosh.Token(woosh.OP, '(', 678, 30, 678, 31),
    woosh.Token(woosh.NAME, 'executable', 678, 31, 678, 41),
    woosh.Token(woosh.OP, ',', 678, 41, 678, 42),
    woosh.Token(woosh.STRING, "''", 678, 43, 678, 45),
    woosh.Token(woosh.OP, ')', 678, 45, 678, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 678, 46, 679, 0),
    woosh.Token(woosh.DEDENT, '    ', 679, 0, 679, 4),
    woosh.Token(woosh.NAME, 'else', 679, 4, 679, 8),
    woosh.Token(woosh.OP, ':', 679, 8, 679, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 679, 9, 680, 0),
    woosh.Token(woosh.INDENT, '        ', 680, 0, 680, 8),
    woosh.Token(woosh.NAME, 'fileout', 680, 8, 680, 15),
    woosh.Token(woosh.OP, '=', 680, 16, 680, 17),
    woosh.Token(woosh.STRING, "''", 680, 18, 680, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 680, 20, 681, 0),
    woosh.Token(woosh.DEDENT, '    ', 682, 0, 682, 4),
    woosh.Token(woosh.NAME, 'if', 682, 4, 682, 6),
    woosh.Token(woosh.NAME, 'not', 682, 7, 682, 10),
    woosh.Token(woosh.NAME, 'fileout', 682, 11, 682, 18),
    woosh.Token(woosh.NAME, 'and', 682, 19, 682, 22),
    woosh.Token(woosh.NAME, 'executable', 683, 7, 683, 17),
    woosh.Token(woosh.OP, '==', 683, 18, 683, 20),
    woosh.Token(woosh.NAME, 'sys', 683, 21, 683, 24),
    woosh.Token(woosh.OP, '.', 683, 24, 683, 25),
    woosh.Token(woosh.NAME, 'executable', 683, 25, 683, 35),
    woosh.Token(woosh.OP, ':', 683, 35, 683, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 683, 36, 684, 0),
    woosh.Token(woosh.COMMENT, '# "file" command did not return anything; we\'ll try to provide', 684, 8, 684, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 684, 70, 685, 0),
    woosh.Token(woosh.COMMENT, '# some sensible defaults then...', 685, 8, 685, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 685, 40, 686, 0),
    woosh.Token(woosh.INDENT, '        ', 686, 0, 686, 8),
    woosh.Token(woosh.NAME, 'if', 686, 8, 686, 10),
    woosh.Token(woosh.NAME, 'sys', 686, 11, 686, 14),
    woosh.Token(woosh.OP, '.', 686, 14, 686, 15),
    woosh.Token(woosh.NAME, 'platform', 686, 15, 686, 23),
    woosh.Token(woosh.NAME, 'in', 686, 24, 686, 26),
    woosh.Token(woosh.NAME, '_default_architecture', 686, 27, 686, 48),
    woosh.Token(woosh.OP, ':', 686, 48, 686, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 686, 49, 687, 0),
    woosh.Token(woosh.INDENT, '            ', 687, 0, 687, 12),
    woosh.Token(woosh.NAME, 'b', 687, 12, 687, 13),
    woosh.Token(woosh.OP, ',', 687, 13, 687, 14),
    woosh.Token(woosh.NAME, 'l', 687, 15, 687, 16),
    woosh.Token(woosh.OP, '=', 687, 17, 687, 18),
    woosh.Token(woosh.NAME, '_default_architecture', 687, 19, 687, 40),
    woosh.Token(woosh.OP, '[', 687, 40, 687, 41),
    woosh.Token(woosh.NAME, 'sys', 687, 41, 687, 44),
    woosh.Token(woosh.OP, '.', 687, 44, 687, 45),
    woosh.Token(woosh.NAME, 'platform', 687, 45, 687, 53),
    woosh.Token(woosh.OP, ']', 687, 53, 687, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 687, 54, 688, 0),
    woosh.Token(woosh.NAME, 'if', 688, 12, 688, 14),
    woosh.Token(woosh.NAME, 'b', 688, 15, 688, 16),
    woosh.Token(woosh.OP, ':', 688, 16, 688, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 688, 17, 689, 0),
    woosh.Token(woosh.INDENT, '                ', 689, 0, 689, 16),
    woosh.Token(woosh.NAME, 'bits', 689, 16, 689, 20),
    woosh.Token(woosh.OP, '=', 689, 21, 689, 22),
    woosh.Token(woosh.NAME, 'b', 689, 23, 689, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 689, 24, 690, 0),
    woosh.Token(woosh.DEDENT, '            ', 690, 0, 690, 12),
    woosh.Token(woosh.NAME, 'if', 690, 12, 690, 14),
    woosh.Token(woosh.NAME, 'l', 690, 15, 690, 16),
    woosh.Token(woosh.OP, ':', 690, 16, 690, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 690, 17, 691, 0),
    woosh.Token(woosh.INDENT, '                ', 691, 0, 691, 16),
    woosh.Token(woosh.NAME, 'linkage', 691, 16, 691, 23),
    woosh.Token(woosh.OP, '=', 691, 24, 691, 25),
    woosh.Token(woosh.NAME, 'l', 691, 26, 691, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 691, 27, 692, 0),
    woosh.Token(woosh.DEDENT, '        ', 692, 0, 692, 8),
    woosh.Token(woosh.DEDENT, '', 692, 8, 692, 8),
    woosh.Token(woosh.NAME, 'return', 692, 8, 692, 14),
    woosh.Token(woosh.NAME, 'bits', 692, 15, 692, 19),
    woosh.Token(woosh.OP, ',', 692, 19, 692, 20),
    woosh.Token(woosh.NAME, 'linkage', 692, 21, 692, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 692, 28, 693, 0),
    woosh.Token(woosh.DEDENT, '    ', 694, 0, 694, 4),
    woosh.Token(woosh.NAME, 'if', 694, 4, 694, 6),
    woosh.Token(woosh.STRING, "'executable'", 694, 7, 694, 19),
    woosh.Token(woosh.NAME, 'not', 694, 20, 694, 23),
    woosh.Token(woosh.NAME, 'in', 694, 24, 694, 26),
    woosh.Token(woosh.NAME, 'fileout', 694, 27, 694, 34),
    woosh.Token(woosh.NAME, 'and', 694, 35, 694, 38),
    woosh.Token(woosh.STRING, "'shared object'", 694, 39, 694, 54),
    woosh.Token(woosh.NAME, 'not', 694, 55, 694, 58),
    woosh.Token(woosh.NAME, 'in', 694, 59, 694, 61),
    woosh.Token(woosh.NAME, 'fileout', 694, 62, 694, 69),
    woosh.Token(woosh.OP, ':', 694, 69, 694, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 694, 70, 695, 0),
    woosh.Token(woosh.COMMENT, '# Format not supported', 695, 8, 695, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 695, 30, 696, 0),
    woosh.Token(woosh.INDENT, '        ', 696, 0, 696, 8),
    woosh.Token(woosh.NAME, 'return', 696, 8, 696, 14),
    woosh.Token(woosh.NAME, 'bits', 696, 15, 696, 19),
    woosh.Token(woosh.OP, ',', 696, 19, 696, 20),
    woosh.Token(woosh.NAME, 'linkage', 696, 21, 696, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 696, 28, 697, 0),
    woosh.Token(woosh.COMMENT, '# Bits', 698, 4, 698, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 698, 10, 699, 0),
    woosh.Token(woosh.DEDENT, '    ', 699, 0, 699, 4),
    woosh.Token(woosh.NAME, 'if', 699, 4, 699, 6),
    woosh.Token(woosh.STRING, "'32-bit'", 699, 7, 699, 15),
    woosh.Token(woosh.NAME, 'in', 699, 16, 699, 18),
    woosh.Token(woosh.NAME, 'fileout', 699, 19, 699, 26),
    woosh.Token(woosh.OP, ':', 699, 26, 699, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 699, 27, 700, 0),
    woosh.Token(woosh.INDENT, '        ', 700, 0, 700, 8),
    woosh.Token(woosh.NAME, 'bits', 700, 8, 700, 12),
    woosh.Token(woosh.OP, '=', 700, 13, 700, 14),
    woosh.Token(woosh.STRING, "'32bit'", 700, 15, 700, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 700, 22, 701, 0),
    woosh.Token(woosh.DEDENT, '    ', 701, 0, 701, 4),
    woosh.Token(woosh.NAME, 'elif', 701, 4, 701, 8),
    woosh.Token(woosh.STRING, "'N32'", 701, 9, 701, 14),
    woosh.Token(woosh.NAME, 'in', 701, 15, 701, 17),
    woosh.Token(woosh.NAME, 'fileout', 701, 18, 701, 25),
    woosh.Token(woosh.OP, ':', 701, 25, 701, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 701, 26, 702, 0),
    woosh.Token(woosh.COMMENT, '# On Irix only', 702, 8, 702, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 702, 22, 703, 0),
    woosh.Token(woosh.INDENT, '        ', 703, 0, 703, 8),
    woosh.Token(woosh.NAME, 'bits', 703, 8, 703, 12),
    woosh.Token(woosh.OP, '=', 703, 13, 703, 14),
    woosh.Token(woosh.STRING, "'n32bit'", 703, 15, 703, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 703, 23, 704, 0),
    woosh.Token(woosh.DEDENT, '    ', 704, 0, 704, 4),
    woosh.Token(woosh.NAME, 'elif', 704, 4, 704, 8),
    woosh.Token(woosh.STRING, "'64-bit'", 704, 9, 704, 17),
    woosh.Token(woosh.NAME, 'in', 704, 18, 704, 20),
    woosh.Token(woosh.NAME, 'fileout', 704, 21, 704, 28),
    woosh.Token(woosh.OP, ':', 704, 28, 704, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 704, 29, 705, 0),
    woosh.Token(woosh.INDENT, '        ', 705, 0, 705, 8),
    woosh.Token(woosh.NAME, 'bits', 705, 8, 705, 12),
    woosh.Token(woosh.OP, '=', 705, 13, 705, 14),
    woosh.Token(woosh.STRING, "'64bit'", 705, 15, 705, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 705, 22, 706, 0),
    woosh.Token(woosh.COMMENT, '# Linkage', 707, 4, 707, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 707, 13, 708, 0),
    woosh.Token(woosh.DEDENT, '    ', 708, 0, 708, 4),
    woosh.Token(woosh.NAME, 'if', 708, 4, 708, 6),
    woosh.Token(woosh.STRING, "'ELF'", 708, 7, 708, 12),
    woosh.Token(woosh.NAME, 'in', 708, 13, 708, 15),
    woosh.Token(woosh.NAME, 'fileout', 708, 16, 708, 23),
    woosh.Token(woosh.OP, ':', 708, 23, 708, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 708, 24, 709, 0),
    woosh.Token(woosh.INDENT, '        ', 709, 0, 709, 8),
    woosh.Token(woosh.NAME, 'linkage', 709, 8, 709, 15),
    woosh.Token(woosh.OP, '=', 709, 16, 709, 17),
    woosh.Token(woosh.STRING, "'ELF'", 709, 18, 709, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 709, 23, 710, 0),
    woosh.Token(woosh.DEDENT, '    ', 710, 0, 710, 4),
    woosh.Token(woosh.NAME, 'elif', 710, 4, 710, 8),
    woosh.Token(woosh.STRING, "'PE'", 710, 9, 710, 13),
    woosh.Token(woosh.NAME, 'in', 710, 14, 710, 16),
    woosh.Token(woosh.NAME, 'fileout', 710, 17, 710, 24),
    woosh.Token(woosh.OP, ':', 710, 24, 710, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 710, 25, 711, 0),
    woosh.Token(woosh.COMMENT, '# E.g. Windows uses this format', 711, 8, 711, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 711, 39, 712, 0),
    woosh.Token(woosh.INDENT, '        ', 712, 0, 712, 8),
    woosh.Token(woosh.NAME, 'if', 712, 8, 712, 10),
    woosh.Token(woosh.STRING, "'Windows'", 712, 11, 712, 20),
    woosh.Token(woosh.NAME, 'in', 712, 21, 712, 23),
    woosh.Token(woosh.NAME, 'fileout', 712, 24, 712, 31),
    woosh.Token(woosh.OP, ':', 712, 31, 712, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 712, 32, 713, 0),
    woosh.Token(woosh.INDENT, '            ', 713, 0, 713, 12),
    woosh.Token(woosh.NAME, 'linkage', 713, 12, 713, 19),
    woosh.Token(woosh.OP, '=', 713, 20, 713, 21),
    woosh.Token(woosh.STRING, "'WindowsPE'", 713, 22, 713, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 713, 33, 714, 0),
    woosh.Token(woosh.DEDENT, '        ', 714, 0, 714, 8),
    woosh.Token(woosh.NAME, 'else', 714, 8, 714, 12),
    woosh.Token(woosh.OP, ':', 714, 12, 714, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 714, 13, 715, 0),
    woosh.Token(woosh.INDENT, '            ', 715, 0, 715, 12),
    woosh.Token(woosh.NAME, 'linkage', 715, 12, 715, 19),
    woosh.Token(woosh.OP, '=', 715, 20, 715, 21),
    woosh.Token(woosh.STRING, "'PE'", 715, 22, 715, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 715, 26, 716, 0),
    woosh.Token(woosh.DEDENT, '    ', 716, 0, 716, 4),
    woosh.Token(woosh.DEDENT, '', 716, 4, 716, 4),
    woosh.Token(woosh.NAME, 'elif', 716, 4, 716, 8),
    woosh.Token(woosh.STRING, "'COFF'", 716, 9, 716, 15),
    woosh.Token(woosh.NAME, 'in', 716, 16, 716, 18),
    woosh.Token(woosh.NAME, 'fileout', 716, 19, 716, 26),
    woosh.Token(woosh.OP, ':', 716, 26, 716, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 716, 27, 717, 0),
    woosh.Token(woosh.INDENT, '        ', 717, 0, 717, 8),
    woosh.Token(woosh.NAME, 'linkage', 717, 8, 717, 15),
    woosh.Token(woosh.OP, '=', 717, 16, 717, 17),
    woosh.Token(woosh.STRING, "'COFF'", 717, 18, 717, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 717, 24, 718, 0),
    woosh.Token(woosh.DEDENT, '    ', 718, 0, 718, 4),
    woosh.Token(woosh.NAME, 'elif', 718, 4, 718, 8),
    woosh.Token(woosh.STRING, "'MS-DOS'", 718, 9, 718, 17),
    woosh.Token(woosh.NAME, 'in', 718, 18, 718, 20),
    woosh.Token(woosh.NAME, 'fileout', 718, 21, 718, 28),
    woosh.Token(woosh.OP, ':', 718, 28, 718, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 718, 29, 719, 0),
    woosh.Token(woosh.INDENT, '        ', 719, 0, 719, 8),
    woosh.Token(woosh.NAME, 'linkage', 719, 8, 719, 15),
    woosh.Token(woosh.OP, '=', 719, 16, 719, 17),
    woosh.Token(woosh.STRING, "'MSDOS'", 719, 18, 719, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 719, 25, 720, 0),
    woosh.Token(woosh.DEDENT, '    ', 720, 0, 720, 4),
    woosh.Token(woosh.NAME, 'else', 720, 4, 720, 8),
    woosh.Token(woosh.OP, ':', 720, 8, 720, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 720, 9, 721, 0),
    woosh.Token(woosh.COMMENT, '# XXX the A.OUT format also falls under this class...', 721, 8, 721, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 721, 61, 722, 0),
    woosh.Token(woosh.INDENT, '        ', 722, 0, 722, 8),
    woosh.Token(woosh.NAME, 'pass', 722, 8, 722, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 722, 12, 723, 0),
    woosh.Token(woosh.DEDENT, '    ', 724, 0, 724, 4),
    woosh.Token(woosh.NAME, 'return', 724, 4, 724, 10),
    woosh.Token(woosh.NAME, 'bits', 724, 11, 724, 15),
    woosh.Token(woosh.OP, ',', 724, 15, 724, 16),
    woosh.Token(woosh.NAME, 'linkage', 724, 17, 724, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 724, 24, 725, 0),
    woosh.Token(woosh.DEDENT, '', 727, 0, 727, 0),
    woosh.Token(woosh.NAME, 'def', 727, 0, 727, 3),
    woosh.Token(woosh.NAME, '_get_machine_win32', 727, 4, 727, 22),
    woosh.Token(woosh.OP, '(', 727, 22, 727, 23),
    woosh.Token(woosh.OP, ')', 727, 23, 727, 24),
    woosh.Token(woosh.OP, ':', 727, 24, 727, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 727, 25, 728, 0),
    woosh.Token(woosh.COMMENT, '# Try to use the PROCESSOR_* environment variables', 728, 4, 728, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 728, 54, 729, 0),
    woosh.Token(woosh.COMMENT, '# available on Win XP and later; see', 729, 4, 729, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 729, 40, 730, 0),
    woosh.Token(woosh.COMMENT, '# http://support.microsoft.com/kb/888731 and', 730, 4, 730, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 730, 48, 731, 0),
    woosh.Token(woosh.COMMENT, '# http://www.geocities.com/rick_lively/MANUALS/ENV/MSWIN/PROCESSI.HTM', 731, 4, 731, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 731, 73, 732, 0),
    woosh.Token(woosh.COMMENT, '# WOW64 processes mask the native architecture', 733, 4, 733, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 733, 50, 734, 0),
    woosh.Token(woosh.INDENT, '    ', 734, 0, 734, 4),
    woosh.Token(woosh.NAME, 'return', 734, 4, 734, 10),
    woosh.Token(woosh.OP, '(', 734, 11, 734, 12),
    woosh.Token(woosh.NAME, 'os', 735, 8, 735, 10),
    woosh.Token(woosh.OP, '.', 735, 10, 735, 11),
    woosh.Token(woosh.NAME, 'environ', 735, 11, 735, 18),
    woosh.Token(woosh.OP, '.', 735, 18, 735, 19),
    woosh.Token(woosh.NAME, 'get', 735, 19, 735, 22),
    woosh.Token(woosh.OP, '(', 735, 22, 735, 23),
    woosh.Token(woosh.STRING, "'PROCESSOR_ARCHITEW6432'", 735, 23, 735, 47),
    woosh.Token(woosh.OP, ',', 735, 47, 735, 48),
    woosh.Token(woosh.STRING, "''", 735, 49, 735, 51),
    woosh.Token(woosh.OP, ')', 735, 51, 735, 52),
    woosh.Token(woosh.NAME, 'or', 735, 53, 735, 55),
    woosh.Token(woosh.NAME, 'os', 736, 8, 736, 10),
    woosh.Token(woosh.OP, '.', 736, 10, 736, 11),
    woosh.Token(woosh.NAME, 'environ', 736, 11, 736, 18),
    woosh.Token(woosh.OP, '.', 736, 18, 736, 19),
    woosh.Token(woosh.NAME, 'get', 736, 19, 736, 22),
    woosh.Token(woosh.OP, '(', 736, 22, 736, 23),
    woosh.Token(woosh.STRING, "'PROCESSOR_ARCHITECTURE'", 736, 23, 736, 47),
    woosh.Token(woosh.OP, ',', 736, 47, 736, 48),
    woosh.Token(woosh.STRING, "''", 736, 49, 736, 51),
    woosh.Token(woosh.OP, ')', 736, 51, 736, 52),
    woosh.Token(woosh.OP, ')', 737, 4, 737, 5),
    woosh.Token(woosh.NEWLINE, '\r\n', 737, 5, 738, 0),
    woosh.Token(woosh.DEDENT, '', 740, 0, 740, 0),
    woosh.Token(woosh.NAME, 'class', 740, 0, 740, 5),
    woosh.Token(woosh.NAME, '_Processor', 740, 6, 740, 16),
    woosh.Token(woosh.OP, ':', 740, 16, 740, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 740, 17, 741, 0),
    woosh.Token(woosh.INDENT, '    ', 741, 0, 741, 4),
    woosh.Token(woosh.OP, '@', 741, 4, 741, 5),
    woosh.Token(woosh.NAME, 'classmethod', 741, 5, 741, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 741, 16, 742, 0),
    woosh.Token(woosh.NAME, 'def', 742, 4, 742, 7),
    woosh.Token(woosh.NAME, 'get', 742, 8, 742, 11),
    woosh.Token(woosh.OP, '(', 742, 11, 742, 12),
    woosh.Token(woosh.NAME, 'cls', 742, 12, 742, 15),
    woosh.Token(woosh.OP, ')', 742, 15, 742, 16),
    woosh.Token(woosh.OP, ':', 742, 16, 742, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 742, 17, 743, 0),
    woosh.Token(woosh.INDENT, '        ', 743, 0, 743, 8),
    woosh.Token(woosh.NAME, 'func', 743, 8, 743, 12),
    woosh.Token(woosh.OP, '=', 743, 13, 743, 14),
    woosh.Token(woosh.NAME, 'getattr', 743, 15, 743, 22),
    woosh.Token(woosh.OP, '(', 743, 22, 743, 23),
    woosh.Token(woosh.NAME, 'cls', 743, 23, 743, 26),
    woosh.Token(woosh.OP, ',', 743, 26, 743, 27),
    woosh.Token(woosh.STRING, "f'get_{sys.platform}'", 743, 28, 743, 49),
    woosh.Token(woosh.OP, ',', 743, 49, 743, 50),
    woosh.Token(woosh.NAME, 'cls', 743, 51, 743, 54),
    woosh.Token(woosh.OP, '.', 743, 54, 743, 55),
    woosh.Token(woosh.NAME, 'from_subprocess', 743, 55, 743, 70),
    woosh.Token(woosh.OP, ')', 743, 70, 743, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 743, 71, 744, 0),
    woosh.Token(woosh.NAME, 'return', 744, 8, 744, 14),
    woosh.Token(woosh.NAME, 'func', 744, 15, 744, 19),
    woosh.Token(woosh.OP, '(', 744, 19, 744, 20),
    woosh.Token(woosh.OP, ')', 744, 20, 744, 21),
    woosh.Token(woosh.NAME, 'or', 744, 22, 744, 24),
    woosh.Token(woosh.STRING, "''", 744, 25, 744, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 744, 27, 745, 0),
    woosh.Token(woosh.DEDENT, '    ', 746, 0, 746, 4),
    woosh.Token(woosh.NAME, 'def', 746, 4, 746, 7),
    woosh.Token(woosh.NAME, 'get_win32', 746, 8, 746, 17),
    woosh.Token(woosh.OP, '(', 746, 17, 746, 18),
    woosh.Token(woosh.OP, ')', 746, 18, 746, 19),
    woosh.Token(woosh.OP, ':', 746, 19, 746, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 746, 20, 747, 0),
    woosh.Token(woosh.INDENT, '        ', 747, 0, 747, 8),
    woosh.Token(woosh.NAME, 'return', 747, 8, 747, 14),
    woosh.Token(woosh.NAME, 'os', 747, 15, 747, 17),
    woosh.Token(woosh.OP, '.', 747, 17, 747, 18),
    woosh.Token(woosh.NAME, 'environ', 747, 18, 747, 25),
    woosh.Token(woosh.OP, '.', 747, 25, 747, 26),
    woosh.Token(woosh.NAME, 'get', 747, 26, 747, 29),
    woosh.Token(woosh.OP, '(', 747, 29, 747, 30),
    woosh.Token(woosh.STRING, "'PROCESSOR_IDENTIFIER'", 747, 30, 747, 52),
    woosh.Token(woosh.OP, ',', 747, 52, 747, 53),
    woosh.Token(woosh.NAME, '_get_machine_win32', 747, 54, 747, 72),
    woosh.Token(woosh.OP, '(', 747, 72, 747, 73),
    woosh.Token(woosh.OP, ')', 747, 73, 747, 74),
    woosh.Token(woosh.OP, ')', 747, 74, 747, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 747, 75, 748, 0),
    woosh.Token(woosh.DEDENT, '    ', 749, 0, 749, 4),
    woosh.Token(woosh.NAME, 'def', 749, 4, 749, 7),
    woosh.Token(woosh.NAME, 'get_OpenVMS', 749, 8, 749, 19),
    woosh.Token(woosh.OP, '(', 749, 19, 749, 20),
    woosh.Token(woosh.OP, ')', 749, 20, 749, 21),
    woosh.Token(woosh.OP, ':', 749, 21, 749, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 749, 22, 750, 0),
    woosh.Token(woosh.INDENT, '        ', 750, 0, 750, 8),
    woosh.Token(woosh.NAME, 'try', 750, 8, 750, 11),
    woosh.Token(woosh.OP, ':', 750, 11, 750, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 750, 12, 751, 0),
    woosh.Token(woosh.INDENT, '            ', 751, 0, 751, 12),
    woosh.Token(woosh.NAME, 'import', 751, 12, 751, 18),
    woosh.Token(woosh.NAME, 'vms_lib', 751, 19, 751, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 751, 26, 752, 0),
    woosh.Token(woosh.DEDENT, '        ', 752, 0, 752, 8),
    woosh.Token(woosh.NAME, 'except', 752, 8, 752, 14),
    woosh.Token(woosh.NAME, 'ImportError', 752, 15, 752, 26),
    woosh.Token(woosh.OP, ':', 752, 26, 752, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 752, 27, 753, 0),
    woosh.Token(woosh.INDENT, '            ', 753, 0, 753, 12),
    woosh.Token(woosh.NAME, 'pass', 753, 12, 753, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 753, 16, 754, 0),
    woosh.Token(woosh.DEDENT, '        ', 754, 0, 754, 8),
    woosh.Token(woosh.NAME, 'else', 754, 8, 754, 12),
    woosh.Token(woosh.OP, ':', 754, 12, 754, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 754, 13, 755, 0),
    woosh.Token(woosh.INDENT, '            ', 755, 0, 755, 12),
    woosh.Token(woosh.NAME, 'csid', 755, 12, 755, 16),
    woosh.Token(woosh.OP, ',', 755, 16, 755, 17),
    woosh.Token(woosh.NAME, 'cpu_number', 755, 18, 755, 28),
    woosh.Token(woosh.OP, '=', 755, 29, 755, 30),
    woosh.Token(woosh.NAME, 'vms_lib', 755, 31, 755, 38),
    woosh.Token(woosh.OP, '.', 755, 38, 755, 39),
    woosh.Token(woosh.NAME, 'getsyi', 755, 39, 755, 45),
    woosh.Token(woosh.OP, '(', 755, 45, 755, 46),
    woosh.Token(woosh.STRING, "'SYI$_CPU'", 755, 46, 755, 56),
    woosh.Token(woosh.OP, ',', 755, 56, 755, 57),
    woosh.Token(woosh.NUMBER, '0', 755, 58, 755, 59),
    woosh.Token(woosh.OP, ')', 755, 59, 755, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 755, 60, 756, 0),
    woosh.Token(woosh.NAME, 'return', 756, 12, 756, 18),
    woosh.Token(woosh.STRING, "'Alpha'", 756, 19, 756, 26),
    woosh.Token(woosh.NAME, 'if', 756, 27, 756, 29),
    woosh.Token(woosh.NAME, 'cpu_number', 756, 30, 756, 40),
    woosh.Token(woosh.OP, '>=', 756, 41, 756, 43),
    woosh.Token(woosh.NUMBER, '128', 756, 44, 756, 47),
    woosh.Token(woosh.NAME, 'else', 756, 48, 756, 52),
    woosh.Token(woosh.STRING, "'VAX'", 756, 53, 756, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 756, 58, 757, 0),
    woosh.Token(woosh.DEDENT, '    ', 758, 0, 758, 4),
    woosh.Token(woosh.DEDENT, '', 758, 4, 758, 4),
    woosh.Token(woosh.NAME, 'def', 758, 4, 758, 7),
    woosh.Token(woosh.NAME, 'from_subprocess', 758, 8, 758, 23),
    woosh.Token(woosh.OP, '(', 758, 23, 758, 24),
    woosh.Token(woosh.OP, ')', 758, 24, 758, 25),
    woosh.Token(woosh.OP, ':', 758, 25, 758, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 758, 26, 759, 0),
    woosh.Token(woosh.INDENT, '        ', 759, 0, 759, 8),
    woosh.Token(woosh.STRING, '"""\r\n        Fall back to `uname -p`\r\n        """', 759, 8, 761, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 761, 11, 762, 0),
    woosh.Token(woosh.NAME, 'try', 762, 8, 762, 11),
    woosh.Token(woosh.OP, ':', 762, 11, 762, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 762, 12, 763, 0),
    woosh.Token(woosh.INDENT, '            ', 763, 0, 763, 12),
    woosh.Token(woosh.NAME, 'return', 763, 12, 763, 18),
    woosh.Token(woosh.NAME, 'subprocess', 763, 19, 763, 29),
    woosh.Token(woosh.OP, '.', 763, 29, 763, 30),
    woosh.Token(woosh.NAME, 'check_output', 763, 30, 763, 42),
    woosh.Token(woosh.OP, '(', 763, 42, 763, 43),
    woosh.Token(woosh.OP, '[', 764, 16, 764, 17),
    woosh.Token(woosh.STRING, "'uname'", 764, 17, 764, 24),
    woosh.Token(woosh.OP, ',', 764, 24, 764, 25),
    woosh.Token(woosh.STRING, "'-p'", 764, 26, 764, 30),
    woosh.Token(woosh.OP, ']', 764, 30, 764, 31),
    woosh.Token(woosh.OP, ',', 764, 31, 764, 32),
    woosh.Token(woosh.NAME, 'stderr', 765, 16, 765, 22),
    woosh.Token(woosh.OP, '=', 765, 22, 765, 23),
    woosh.Token(woosh.NAME, 'subprocess', 765, 23, 765, 33),
    woosh.Token(woosh.OP, '.', 765, 33, 765, 34),
    woosh.Token(woosh.NAME, 'DEVNULL', 765, 34, 765, 41),
    woosh.Token(woosh.OP, ',', 765, 41, 765, 42),
    woosh.Token(woosh.NAME, 'text', 766, 16, 766, 20),
    woosh.Token(woosh.OP, '=', 766, 20, 766, 21),
    woosh.Token(woosh.NAME, 'True', 766, 21, 766, 25),
    woosh.Token(woosh.OP, ',', 766, 25, 766, 26),
    woosh.Token(woosh.OP, ')', 767, 12, 767, 13),
    woosh.Token(woosh.OP, '.', 767, 13, 767, 14),
    woosh.Token(woosh.NAME, 'strip', 767, 14, 767, 19),
    woosh.Token(woosh.OP, '(', 767, 19, 767, 20),
    woosh.Token(woosh.OP, ')', 767, 20, 767, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 767, 21, 768, 0),
    woosh.Token(woosh.DEDENT, '        ', 768, 0, 768, 8),
    woosh.Token(woosh.NAME, 'except', 768, 8, 768, 14),
    woosh.Token(woosh.OP, '(', 768, 15, 768, 16),
    woosh.Token(woosh.NAME, 'OSError', 768, 16, 768, 23),
    woosh.Token(woosh.OP, ',', 768, 23, 768, 24),
    woosh.Token(woosh.NAME, 'subprocess', 768, 25, 768, 35),
    woosh.Token(woosh.OP, '.', 768, 35, 768, 36),
    woosh.Token(woosh.NAME, 'CalledProcessError', 768, 36, 768, 54),
    woosh.Token(woosh.OP, ')', 768, 54, 768, 55),
    woosh.Token(woosh.OP, ':', 768, 55, 768, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 768, 56, 769, 0),
    woosh.Token(woosh.INDENT, '            ', 769, 0, 769, 12),
    woosh.Token(woosh.NAME, 'pass', 769, 12, 769, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 769, 16, 770, 0),
    woosh.Token(woosh.DEDENT, '', 772, 0, 772, 0),
    woosh.Token(woosh.DEDENT, '', 772, 0, 772, 0),
    woosh.Token(woosh.DEDENT, '', 772, 0, 772, 0),
    woosh.Token(woosh.NAME, 'def', 772, 0, 772, 3),
    woosh.Token(woosh.NAME, '_unknown_as_blank', 772, 4, 772, 21),
    woosh.Token(woosh.OP, '(', 772, 21, 772, 22),
    woosh.Token(woosh.NAME, 'val', 772, 22, 772, 25),
    woosh.Token(woosh.OP, ')', 772, 25, 772, 26),
    woosh.Token(woosh.OP, ':', 772, 26, 772, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 772, 27, 773, 0),
    woosh.Token(woosh.INDENT, '    ', 773, 0, 773, 4),
    woosh.Token(woosh.NAME, 'return', 773, 4, 773, 10),
    woosh.Token(woosh.STRING, "''", 773, 11, 773, 13),
    woosh.Token(woosh.NAME, 'if', 773, 14, 773, 16),
    woosh.Token(woosh.NAME, 'val', 773, 17, 773, 20),
    woosh.Token(woosh.OP, '==', 773, 21, 773, 23),
    woosh.Token(woosh.STRING, "'unknown'", 773, 24, 773, 33),
    woosh.Token(woosh.NAME, 'else', 773, 34, 773, 38),
    woosh.Token(woosh.NAME, 'val', 773, 39, 773, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 773, 42, 774, 0),
    woosh.Token(woosh.COMMENT, '### Portable uname() interface', 776, 0, 776, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 776, 30, 777, 0),
    woosh.Token(woosh.DEDENT, '', 778, 0, 778, 0),
    woosh.Token(woosh.NAME, 'class', 778, 0, 778, 5),
    woosh.Token(woosh.NAME, 'uname_result', 778, 6, 778, 18),
    woosh.Token(woosh.OP, '(', 778, 18, 778, 19),
    woosh.Token(woosh.NAME, 'collections', 779, 4, 779, 15),
    woosh.Token(woosh.OP, '.', 779, 15, 779, 16),
    woosh.Token(woosh.NAME, 'namedtuple', 779, 16, 779, 26),
    woosh.Token(woosh.OP, '(', 779, 26, 779, 27),
    woosh.Token(woosh.STRING, '"uname_result_base"', 780, 8, 780, 27),
    woosh.Token(woosh.OP, ',', 780, 27, 780, 28),
    woosh.Token(woosh.STRING, '"system node release version machine"', 781, 8, 781, 45),
    woosh.Token(woosh.OP, ')', 781, 45, 781, 46),
    woosh.Token(woosh.OP, ')', 782, 8, 782, 9),
    woosh.Token(woosh.OP, ':', 782, 9, 782, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 782, 10, 783, 0),
    woosh.Token(woosh.INDENT, '    ', 783, 0, 783, 4),
    woosh.Token(woosh.STRING, '"""\r\n    A uname_result that\'s largely compatible with a\r\n    simple namedtuple except that \'platform\' is\r\n    resolved late and cached to avoid calling "uname"\r\n    except when needed.\r\n    """', 783, 4, 788, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 788, 7, 789, 0),
    woosh.Token(woosh.OP, '@', 790, 4, 790, 5),
    woosh.Token(woosh.NAME, 'functools', 790, 5, 790, 14),
    woosh.Token(woosh.OP, '.', 790, 14, 790, 15),
    woosh.Token(woosh.NAME, 'cached_property', 790, 15, 790, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 790, 30, 791, 0),
    woosh.Token(woosh.NAME, 'def', 791, 4, 791, 7),
    woosh.Token(woosh.NAME, 'processor', 791, 8, 791, 17),
    woosh.Token(woosh.OP, '(', 791, 17, 791, 18),
    woosh.Token(woosh.NAME, 'self', 791, 18, 791, 22),
    woosh.Token(woosh.OP, ')', 791, 22, 791, 23),
    woosh.Token(woosh.OP, ':', 791, 23, 791, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 791, 24, 792, 0),
    woosh.Token(woosh.INDENT, '        ', 792, 0, 792, 8),
    woosh.Token(woosh.NAME, 'return', 792, 8, 792, 14),
    woosh.Token(woosh.NAME, '_unknown_as_blank', 792, 15, 792, 32),
    woosh.Token(woosh.OP, '(', 792, 32, 792, 33),
    woosh.Token(woosh.NAME, '_Processor', 792, 33, 792, 43),
    woosh.Token(woosh.OP, '.', 792, 43, 792, 44),
    woosh.Token(woosh.NAME, 'get', 792, 44, 792, 47),
    woosh.Token(woosh.OP, '(', 792, 47, 792, 48),
    woosh.Token(woosh.OP, ')', 792, 48, 792, 49),
    woosh.Token(woosh.OP, ')', 792, 49, 792, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 792, 50, 793, 0),
    woosh.Token(woosh.DEDENT, '    ', 794, 0, 794, 4),
    woosh.Token(woosh.NAME, 'def', 794, 4, 794, 7),
    woosh.Token(woosh.NAME, '__iter__', 794, 8, 794, 16),
    woosh.Token(woosh.OP, '(', 794, 16, 794, 17),
    woosh.Token(woosh.NAME, 'self', 794, 17, 794, 21),
    woosh.Token(woosh.OP, ')', 794, 21, 794, 22),
    woosh.Token(woosh.OP, ':', 794, 22, 794, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 794, 23, 795, 0),
    woosh.Token(woosh.INDENT, '        ', 795, 0, 795, 8),
    woosh.Token(woosh.NAME, 'return', 795, 8, 795, 14),
    woosh.Token(woosh.NAME, 'itertools', 795, 15, 795, 24),
    woosh.Token(woosh.OP, '.', 795, 24, 795, 25),
    woosh.Token(woosh.NAME, 'chain', 795, 25, 795, 30),
    woosh.Token(woosh.OP, '(', 795, 30, 795, 31),
    woosh.Token(woosh.NAME, 'super', 796, 12, 796, 17),
    woosh.Token(woosh.OP, '(', 796, 17, 796, 18),
    woosh.Token(woosh.OP, ')', 796, 18, 796, 19),
    woosh.Token(woosh.OP, '.', 796, 19, 796, 20),
    woosh.Token(woosh.NAME, '__iter__', 796, 20, 796, 28),
    woosh.Token(woosh.OP, '(', 796, 28, 796, 29),
    woosh.Token(woosh.OP, ')', 796, 29, 796, 30),
    woosh.Token(woosh.OP, ',', 796, 30, 796, 31),
    woosh.Token(woosh.OP, '(', 797, 12, 797, 13),
    woosh.Token(woosh.NAME, 'self', 797, 13, 797, 17),
    woosh.Token(woosh.OP, '.', 797, 17, 797, 18),
    woosh.Token(woosh.NAME, 'processor', 797, 18, 797, 27),
    woosh.Token(woosh.OP, ',', 797, 27, 797, 28),
    woosh.Token(woosh.OP, ')', 797, 28, 797, 29),
    woosh.Token(woosh.OP, ')', 798, 8, 798, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 798, 9, 799, 0),
    woosh.Token(woosh.DEDENT, '    ', 800, 0, 800, 4),
    woosh.Token(woosh.NAME, 'def', 800, 4, 800, 7),
    woosh.Token(woosh.NAME, '__getitem__', 800, 8, 800, 19),
    woosh.Token(woosh.OP, '(', 800, 19, 800, 20),
    woosh.Token(woosh.NAME, 'self', 800, 20, 800, 24),
    woosh.Token(woosh.OP, ',', 800, 24, 800, 25),
    woosh.Token(woosh.NAME, 'key', 800, 26, 800, 29),
    woosh.Token(woosh.OP, ')', 800, 29, 800, 30),
    woosh.Token(woosh.OP, ':', 800, 30, 800, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 800, 31, 801, 0),
    woosh.Token(woosh.INDENT, '        ', 801, 0, 801, 8),
    woosh.Token(woosh.NAME, 'return', 801, 8, 801, 14),
    woosh.Token(woosh.NAME, 'tuple', 801, 15, 801, 20),
    woosh.Token(woosh.OP, '(', 801, 20, 801, 21),
    woosh.Token(woosh.NAME, 'iter', 801, 21, 801, 25),
    woosh.Token(woosh.OP, '(', 801, 25, 801, 26),
    woosh.Token(woosh.NAME, 'self', 801, 26, 801, 30),
    woosh.Token(woosh.OP, ')', 801, 30, 801, 31),
    woosh.Token(woosh.OP, ')', 801, 31, 801, 32),
    woosh.Token(woosh.OP, '[', 801, 32, 801, 33),
    woosh.Token(woosh.NAME, 'key', 801, 33, 801, 36),
    woosh.Token(woosh.OP, ']', 801, 36, 801, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 801, 37, 802, 0),
    woosh.Token(woosh.DEDENT, '    ', 803, 0, 803, 4),
    woosh.Token(woosh.NAME, 'def', 803, 4, 803, 7),
    woosh.Token(woosh.NAME, '__len__', 803, 8, 803, 15),
    woosh.Token(woosh.OP, '(', 803, 15, 803, 16),
    woosh.Token(woosh.NAME, 'self', 803, 16, 803, 20),
    woosh.Token(woosh.OP, ')', 803, 20, 803, 21),
    woosh.Token(woosh.OP, ':', 803, 21, 803, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 803, 22, 804, 0),
    woosh.Token(woosh.INDENT, '        ', 804, 0, 804, 8),
    woosh.Token(woosh.NAME, 'return', 804, 8, 804, 14),
    woosh.Token(woosh.NAME, 'len', 804, 15, 804, 18),
    woosh.Token(woosh.OP, '(', 804, 18, 804, 19),
    woosh.Token(woosh.NAME, 'tuple', 804, 19, 804, 24),
    woosh.Token(woosh.OP, '(', 804, 24, 804, 25),
    woosh.Token(woosh.NAME, 'iter', 804, 25, 804, 29),
    woosh.Token(woosh.OP, '(', 804, 29, 804, 30),
    woosh.Token(woosh.NAME, 'self', 804, 30, 804, 34),
    woosh.Token(woosh.OP, ')', 804, 34, 804, 35),
    woosh.Token(woosh.OP, ')', 804, 35, 804, 36),
    woosh.Token(woosh.OP, ')', 804, 36, 804, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 804, 37, 805, 0),
    woosh.Token(woosh.DEDENT, '', 807, 0, 807, 0),
    woosh.Token(woosh.DEDENT, '', 807, 0, 807, 0),
    woosh.Token(woosh.NAME, '_uname_cache', 807, 0, 807, 12),
    woosh.Token(woosh.OP, '=', 807, 13, 807, 14),
    woosh.Token(woosh.NAME, 'None', 807, 15, 807, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 807, 19, 808, 0),
    woosh.Token(woosh.NAME, 'def', 810, 0, 810, 3),
    woosh.Token(woosh.NAME, 'uname', 810, 4, 810, 9),
    woosh.Token(woosh.OP, '(', 810, 9, 810, 10),
    woosh.Token(woosh.OP, ')', 810, 10, 810, 11),
    woosh.Token(woosh.OP, ':', 810, 11, 810, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 810, 12, 811, 0),
    woosh.Token(woosh.INDENT, '    ', 812, 0, 812, 4),
    woosh.Token(woosh.STRING, '""" Fairly portable uname interface. Returns a tuple\r\n        of strings (system, node, release, version, machine, processor)\r\n        identifying the underlying platform.\r\n\r\n        Note that unlike the os.uname function this also returns\r\n        possible processor information as an additional tuple entry.\r\n\r\n        Entries which cannot be determined are set to \'\'.\r\n\r\n    """', 812, 4, 821, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 821, 7, 822, 0),
    woosh.Token(woosh.NAME, 'global', 822, 4, 822, 10),
    woosh.Token(woosh.NAME, '_uname_cache', 822, 11, 822, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 822, 23, 823, 0),
    woosh.Token(woosh.NAME, 'if', 824, 4, 824, 6),
    woosh.Token(woosh.NAME, '_uname_cache', 824, 7, 824, 19),
    woosh.Token(woosh.NAME, 'is', 824, 20, 824, 22),
    woosh.Token(woosh.NAME, 'not', 824, 23, 824, 26),
    woosh.Token(woosh.NAME, 'None', 824, 27, 824, 31),
    woosh.Token(woosh.OP, ':', 824, 31, 824, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 824, 32, 825, 0),
    woosh.Token(woosh.INDENT, '        ', 825, 0, 825, 8),
    woosh.Token(woosh.NAME, 'return', 825, 8, 825, 14),
    woosh.Token(woosh.NAME, '_uname_cache', 825, 15, 825, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 825, 27, 826, 0),
    woosh.Token(woosh.COMMENT, '# Get some infos from the builtin os.uname API...', 827, 4, 827, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 827, 53, 828, 0),
    woosh.Token(woosh.DEDENT, '    ', 828, 0, 828, 4),
    woosh.Token(woosh.NAME, 'try', 828, 4, 828, 7),
    woosh.Token(woosh.OP, ':', 828, 7, 828, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 828, 8, 829, 0),
    woosh.Token(woosh.INDENT, '        ', 829, 0, 829, 8),
    woosh.Token(woosh.NAME, 'system', 829, 8, 829, 14),
    woosh.Token(woosh.OP, ',', 829, 14, 829, 15),
    woosh.Token(woosh.NAME, 'node', 829, 16, 829, 20),
    woosh.Token(woosh.OP, ',', 829, 20, 829, 21),
    woosh.Token(woosh.NAME, 'release', 829, 22, 829, 29),
    woosh.Token(woosh.OP, ',', 829, 29, 829, 30),
    woosh.Token(woosh.NAME, 'version', 829, 31, 829, 38),
    woosh.Token(woosh.OP, ',', 829, 38, 829, 39),
    woosh.Token(woosh.NAME, 'machine', 829, 40, 829, 47),
    woosh.Token(woosh.OP, '=', 829, 48, 829, 49),
    woosh.Token(woosh.NAME, 'infos', 829, 50, 829, 55),
    woosh.Token(woosh.OP, '=', 829, 56, 829, 57),
    woosh.Token(woosh.NAME, 'os', 829, 58, 829, 60),
    woosh.Token(woosh.OP, '.', 829, 60, 829, 61),
    woosh.Token(woosh.NAME, 'uname', 829, 61, 829, 66),
    woosh.Token(woosh.OP, '(', 829, 66, 829, 67),
    woosh.Token(woosh.OP, ')', 829, 67, 829, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 829, 68, 830, 0),
    woosh.Token(woosh.DEDENT, '    ', 830, 0, 830, 4),
    woosh.Token(woosh.NAME, 'except', 830, 4, 830, 10),
    woosh.Token(woosh.NAME, 'AttributeError', 830, 11, 830, 25),
    woosh.Token(woosh.OP, ':', 830, 25, 830, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 830, 26, 831, 0),
    woosh.Token(woosh.INDENT, '        ', 831, 0, 831, 8),
    woosh.Token(woosh.NAME, 'system', 831, 8, 831, 14),
    woosh.Token(woosh.OP, '=', 831, 15, 831, 16),
    woosh.Token(woosh.NAME, 'sys', 831, 17, 831, 20),
    woosh.Token(woosh.OP, '.', 831, 20, 831, 21),
    woosh.Token(woosh.NAME, 'platform', 831, 21, 831, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 831, 29, 832, 0),
    woosh.Token(woosh.NAME, 'node', 832, 8, 832, 12),
    woosh.Token(woosh.OP, '=', 832, 13, 832, 14),
    woosh.Token(woosh.NAME, '_node', 832, 15, 832, 20),
    woosh.Token(woosh.OP, '(', 832, 20, 832, 21),
    woosh.Token(woosh.OP, ')', 832, 21, 832, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 832, 22, 833, 0),
    woosh.Token(woosh.NAME, 'release', 833, 8, 833, 15),
    woosh.Token(woosh.OP, '=', 833, 16, 833, 17),
    woosh.Token(woosh.NAME, 'version', 833, 18, 833, 25),
    woosh.Token(woosh.OP, '=', 833, 26, 833, 27),
    woosh.Token(woosh.NAME, 'machine', 833, 28, 833, 35),
    woosh.Token(woosh.OP, '=', 833, 36, 833, 37),
    woosh.Token(woosh.STRING, "''", 833, 38, 833, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 833, 40, 834, 0),
    woosh.Token(woosh.NAME, 'infos', 834, 8, 834, 13),
    woosh.Token(woosh.OP, '=', 834, 14, 834, 15),
    woosh.Token(woosh.OP, '(', 834, 16, 834, 17),
    woosh.Token(woosh.OP, ')', 834, 17, 834, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 834, 18, 835, 0),
    woosh.Token(woosh.DEDENT, '    ', 836, 0, 836, 4),
    woosh.Token(woosh.NAME, 'if', 836, 4, 836, 6),
    woosh.Token(woosh.NAME, 'not', 836, 7, 836, 10),
    woosh.Token(woosh.NAME, 'any', 836, 11, 836, 14),
    woosh.Token(woosh.OP, '(', 836, 14, 836, 15),
    woosh.Token(woosh.NAME, 'infos', 836, 15, 836, 20),
    woosh.Token(woosh.OP, ')', 836, 20, 836, 21),
    woosh.Token(woosh.OP, ':', 836, 21, 836, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 836, 22, 837, 0),
    woosh.Token(woosh.COMMENT, '# uname is not available', 837, 8, 837, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 837, 32, 838, 0),
    woosh.Token(woosh.COMMENT, '# Try win32_ver() on win32 platforms', 839, 8, 839, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 839, 44, 840, 0),
    woosh.Token(woosh.INDENT, '        ', 840, 0, 840, 8),
    woosh.Token(woosh.NAME, 'if', 840, 8, 840, 10),
    woosh.Token(woosh.NAME, 'system', 840, 11, 840, 17),
    woosh.Token(woosh.OP, '==', 840, 18, 840, 20),
    woosh.Token(woosh.STRING, "'win32'", 840, 21, 840, 28),
    woosh.Token(woosh.OP, ':', 840, 28, 840, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 840, 29, 841, 0),
    woosh.Token(woosh.INDENT, '            ', 841, 0, 841, 12),
    woosh.Token(woosh.NAME, 'release', 841, 12, 841, 19),
    woosh.Token(woosh.OP, ',', 841, 19, 841, 20),
    woosh.Token(woosh.NAME, 'version', 841, 21, 841, 28),
    woosh.Token(woosh.OP, ',', 841, 28, 841, 29),
    woosh.Token(woosh.NAME, 'csd', 841, 30, 841, 33),
    woosh.Token(woosh.OP, ',', 841, 33, 841, 34),
    woosh.Token(woosh.NAME, 'ptype', 841, 35, 841, 40),
    woosh.Token(woosh.OP, '=', 841, 41, 841, 42),
    woosh.Token(woosh.NAME, 'win32_ver', 841, 43, 841, 52),
    woosh.Token(woosh.OP, '(', 841, 52, 841, 53),
    woosh.Token(woosh.OP, ')', 841, 53, 841, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 841, 54, 842, 0),
    woosh.Token(woosh.NAME, 'machine', 842, 12, 842, 19),
    woosh.Token(woosh.OP, '=', 842, 20, 842, 21),
    woosh.Token(woosh.NAME, 'machine', 842, 22, 842, 29),
    woosh.Token(woosh.NAME, 'or', 842, 30, 842, 32),
    woosh.Token(woosh.NAME, '_get_machine_win32', 842, 33, 842, 51),
    woosh.Token(woosh.OP, '(', 842, 51, 842, 52),
    woosh.Token(woosh.OP, ')', 842, 52, 842, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 842, 53, 843, 0),
    woosh.Token(woosh.COMMENT, "# Try the 'ver' system command available on some", 844, 8, 844, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 844, 56, 845, 0),
    woosh.Token(woosh.COMMENT, '# platforms', 845, 8, 845, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 845, 19, 846, 0),
    woosh.Token(woosh.DEDENT, '        ', 846, 0, 846, 8),
    woosh.Token(woosh.NAME, 'if', 846, 8, 846, 10),
    woosh.Token(woosh.NAME, 'not', 846, 11, 846, 14),
    woosh.Token(woosh.OP, '(', 846, 15, 846, 16),
    woosh.Token(woosh.NAME, 'release', 846, 16, 846, 23),
    woosh.Token(woosh.NAME, 'and', 846, 24, 846, 27),
    woosh.Token(woosh.NAME, 'version', 846, 28, 846, 35),
    woosh.Token(woosh.OP, ')', 846, 35, 846, 36),
    woosh.Token(woosh.OP, ':', 846, 36, 846, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 846, 37, 847, 0),
    woosh.Token(woosh.INDENT, '            ', 847, 0, 847, 12),
    woosh.Token(woosh.NAME, 'system', 847, 12, 847, 18),
    woosh.Token(woosh.OP, ',', 847, 18, 847, 19),
    woosh.Token(woosh.NAME, 'release', 847, 20, 847, 27),
    woosh.Token(woosh.OP, ',', 847, 27, 847, 28),
    woosh.Token(woosh.NAME, 'version', 847, 29, 847, 36),
    woosh.Token(woosh.OP, '=', 847, 37, 847, 38),
    woosh.Token(woosh.NAME, '_syscmd_ver', 847, 39, 847, 50),
    woosh.Token(woosh.OP, '(', 847, 50, 847, 51),
    woosh.Token(woosh.NAME, 'system', 847, 51, 847, 57),
    woosh.Token(woosh.OP, ')', 847, 57, 847, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 847, 58, 848, 0),
    woosh.Token(woosh.COMMENT, '# Normalize system to what win32_ver() normally returns', 848, 12, 848, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 848, 67, 849, 0),
    woosh.Token(woosh.COMMENT, '# (_syscmd_ver() tends to return the vendor name as well)', 849, 12, 849, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 849, 69, 850, 0),
    woosh.Token(woosh.NAME, 'if', 850, 12, 850, 14),
    woosh.Token(woosh.NAME, 'system', 850, 15, 850, 21),
    woosh.Token(woosh.OP, '==', 850, 22, 850, 24),
    woosh.Token(woosh.STRING, "'Microsoft Windows'", 850, 25, 850, 44),
    woosh.Token(woosh.OP, ':', 850, 44, 850, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 850, 45, 851, 0),
    woosh.Token(woosh.INDENT, '                ', 851, 0, 851, 16),
    woosh.Token(woosh.NAME, 'system', 851, 16, 851, 22),
    woosh.Token(woosh.OP, '=', 851, 23, 851, 24),
    woosh.Token(woosh.STRING, "'Windows'", 851, 25, 851, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 851, 34, 852, 0),
    woosh.Token(woosh.DEDENT, '            ', 852, 0, 852, 12),
    woosh.Token(woosh.NAME, 'elif', 852, 12, 852, 16),
    woosh.Token(woosh.NAME, 'system', 852, 17, 852, 23),
    woosh.Token(woosh.OP, '==', 852, 24, 852, 26),
    woosh.Token(woosh.STRING, "'Microsoft'", 852, 27, 852, 38),
    woosh.Token(woosh.NAME, 'and', 852, 39, 852, 42),
    woosh.Token(woosh.NAME, 'release', 852, 43, 852, 50),
    woosh.Token(woosh.OP, '==', 852, 51, 852, 53),
    woosh.Token(woosh.STRING, "'Windows'", 852, 54, 852, 63),
    woosh.Token(woosh.OP, ':', 852, 63, 852, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 852, 64, 853, 0),
    woosh.Token(woosh.COMMENT, '# Under Windows Vista and Windows Server 2008,', 853, 16, 853, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 853, 62, 854, 0),
    woosh.Token(woosh.COMMENT, '# Microsoft changed the output of the ver command. The', 854, 16, 854, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 854, 70, 855, 0),
    woosh.Token(woosh.COMMENT, '# release is no longer printed.  This causes the', 855, 16, 855, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 855, 64, 856, 0),
    woosh.Token(woosh.COMMENT, '# system and release to be misidentified.', 856, 16, 856, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 856, 57, 857, 0),
    woosh.Token(woosh.INDENT, '                ', 857, 0, 857, 16),
    woosh.Token(woosh.NAME, 'system', 857, 16, 857, 22),
    woosh.Token(woosh.OP, '=', 857, 23, 857, 24),
    woosh.Token(woosh.STRING, "'Windows'", 857, 25, 857, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 857, 34, 858, 0),
    woosh.Token(woosh.NAME, 'if', 858, 16, 858, 18),
    woosh.Token(woosh.STRING, "'6.0'", 858, 19, 858, 24),
    woosh.Token(woosh.OP, '==', 858, 25, 858, 27),
    woosh.Token(woosh.NAME, 'version', 858, 28, 858, 35),
    woosh.Token(woosh.OP, '[', 858, 35, 858, 36),
    woosh.Token(woosh.OP, ':', 858, 36, 858, 37),
    woosh.Token(woosh.NUMBER, '3', 858, 37, 858, 38),
    woosh.Token(woosh.OP, ']', 858, 38, 858, 39),
    woosh.Token(woosh.OP, ':', 858, 39, 858, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 858, 40, 859, 0),
    woosh.Token(woosh.INDENT, '                    ', 859, 0, 859, 20),
    woosh.Token(woosh.NAME, 'release', 859, 20, 859, 27),
    woosh.Token(woosh.OP, '=', 859, 28, 859, 29),
    woosh.Token(woosh.STRING, "'Vista'", 859, 30, 859, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 859, 37, 860, 0),
    woosh.Token(woosh.DEDENT, '                ', 860, 0, 860, 16),
    woosh.Token(woosh.NAME, 'else', 860, 16, 860, 20),
    woosh.Token(woosh.OP, ':', 860, 20, 860, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 860, 21, 861, 0),
    woosh.Token(woosh.INDENT, '                    ', 861, 0, 861, 20),
    woosh.Token(woosh.NAME, 'release', 861, 20, 861, 27),
    woosh.Token(woosh.OP, '=', 861, 28, 861, 29),
    woosh.Token(woosh.STRING, "''", 861, 30, 861, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 861, 32, 862, 0),
    woosh.Token(woosh.COMMENT, "# In case we still don't know anything useful, we'll try to", 863, 8, 863, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 863, 67, 864, 0),
    woosh.Token(woosh.COMMENT, '# help ourselves', 864, 8, 864, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 864, 24, 865, 0),
    woosh.Token(woosh.DEDENT, '        ', 865, 0, 865, 8),
    woosh.Token(woosh.DEDENT, '', 865, 8, 865, 8),
    woosh.Token(woosh.DEDENT, '', 865, 8, 865, 8),
    woosh.Token(woosh.NAME, 'if', 865, 8, 865, 10),
    woosh.Token(woosh.NAME, 'system', 865, 11, 865, 17),
    woosh.Token(woosh.NAME, 'in', 865, 18, 865, 20),
    woosh.Token(woosh.OP, '(', 865, 21, 865, 22),
    woosh.Token(woosh.STRING, "'win32'", 865, 22, 865, 29),
    woosh.Token(woosh.OP, ',', 865, 29, 865, 30),
    woosh.Token(woosh.STRING, "'win16'", 865, 31, 865, 38),
    woosh.Token(woosh.OP, ')', 865, 38, 865, 39),
    woosh.Token(woosh.OP, ':', 865, 39, 865, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 865, 40, 866, 0),
    woosh.Token(woosh.INDENT, '            ', 866, 0, 866, 12),
    woosh.Token(woosh.NAME, 'if', 866, 12, 866, 14),
    woosh.Token(woosh.NAME, 'not', 866, 15, 866, 18),
    woosh.Token(woosh.NAME, 'version', 866, 19, 866, 26),
    woosh.Token(woosh.OP, ':', 866, 26, 866, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 866, 27, 867, 0),
    woosh.Token(woosh.INDENT, '                ', 867, 0, 867, 16),
    woosh.Token(woosh.NAME, 'if', 867, 16, 867, 18),
    woosh.Token(woosh.NAME, 'system', 867, 19, 867, 25),
    woosh.Token(woosh.OP, '==', 867, 26, 867, 28),
    woosh.Token(woosh.STRING, "'win32'", 867, 29, 867, 36),
    woosh.Token(woosh.OP, ':', 867, 36, 867, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 867, 37, 868, 0),
    woosh.Token(woosh.INDENT, '                    ', 868, 0, 868, 20),
    woosh.Token(woosh.NAME, 'version', 868, 20, 868, 27),
    woosh.Token(woosh.OP, '=', 868, 28, 868, 29),
    woosh.Token(woosh.STRING, "'32bit'", 868, 30, 868, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 868, 37, 869, 0),
    woosh.Token(woosh.DEDENT, '                ', 869, 0, 869, 16),
    woosh.Token(woosh.NAME, 'else', 869, 16, 869, 20),
    woosh.Token(woosh.OP, ':', 869, 20, 869, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 869, 21, 870, 0),
    woosh.Token(woosh.INDENT, '                    ', 870, 0, 870, 20),
    woosh.Token(woosh.NAME, 'version', 870, 20, 870, 27),
    woosh.Token(woosh.OP, '=', 870, 28, 870, 29),
    woosh.Token(woosh.STRING, "'16bit'", 870, 30, 870, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 870, 37, 871, 0),
    woosh.Token(woosh.DEDENT, '            ', 871, 0, 871, 12),
    woosh.Token(woosh.DEDENT, '', 871, 12, 871, 12),
    woosh.Token(woosh.NAME, 'system', 871, 12, 871, 18),
    woosh.Token(woosh.OP, '=', 871, 19, 871, 20),
    woosh.Token(woosh.STRING, "'Windows'", 871, 21, 871, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 871, 30, 872, 0),
    woosh.Token(woosh.DEDENT, '        ', 873, 0, 873, 8),
    woosh.Token(woosh.NAME, 'elif', 873, 8, 873, 12),
    woosh.Token(woosh.NAME, 'system', 873, 13, 873, 19),
    woosh.Token(woosh.OP, '[', 873, 19, 873, 20),
    woosh.Token(woosh.OP, ':', 873, 20, 873, 21),
    woosh.Token(woosh.NUMBER, '4', 873, 21, 873, 22),
    woosh.Token(woosh.OP, ']', 873, 22, 873, 23),
    woosh.Token(woosh.OP, '==', 873, 24, 873, 26),
    woosh.Token(woosh.STRING, "'java'", 873, 27, 873, 33),
    woosh.Token(woosh.OP, ':', 873, 33, 873, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 873, 34, 874, 0),
    woosh.Token(woosh.INDENT, '            ', 874, 0, 874, 12),
    woosh.Token(woosh.NAME, 'release', 874, 12, 874, 19),
    woosh.Token(woosh.OP, ',', 874, 19, 874, 20),
    woosh.Token(woosh.NAME, 'vendor', 874, 21, 874, 27),
    woosh.Token(woosh.OP, ',', 874, 27, 874, 28),
    woosh.Token(woosh.NAME, 'vminfo', 874, 29, 874, 35),
    woosh.Token(woosh.OP, ',', 874, 35, 874, 36),
    woosh.Token(woosh.NAME, 'osinfo', 874, 37, 874, 43),
    woosh.Token(woosh.OP, '=', 874, 44, 874, 45),
    woosh.Token(woosh.NAME, 'java_ver', 874, 46, 874, 54),
    woosh.Token(woosh.OP, '(', 874, 54, 874, 55),
    woosh.Token(woosh.OP, ')', 874, 55, 874, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 874, 56, 875, 0),
    woosh.Token(woosh.NAME, 'system', 875, 12, 875, 18),
    woosh.Token(woosh.OP, '=', 875, 19, 875, 20),
    woosh.Token(woosh.STRING, "'Java'", 875, 21, 875, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 875, 27, 876, 0),
    woosh.Token(woosh.NAME, 'version', 876, 12, 876, 19),
    woosh.Token(woosh.OP, '=', 876, 20, 876, 21),
    woosh.Token(woosh.STRING, "', '", 876, 22, 876, 26),
    woosh.Token(woosh.OP, '.', 876, 26, 876, 27),
    woosh.Token(woosh.NAME, 'join', 876, 27, 876, 31),
    woosh.Token(woosh.OP, '(', 876, 31, 876, 32),
    woosh.Token(woosh.NAME, 'vminfo', 876, 32, 876, 38),
    woosh.Token(woosh.OP, ')', 876, 38, 876, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 876, 39, 877, 0),
    woosh.Token(woosh.NAME, 'if', 877, 12, 877, 14),
    woosh.Token(woosh.NAME, 'not', 877, 15, 877, 18),
    woosh.Token(woosh.NAME, 'version', 877, 19, 877, 26),
    woosh.Token(woosh.OP, ':', 877, 26, 877, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 877, 27, 878, 0),
    woosh.Token(woosh.INDENT, '                ', 878, 0, 878, 16),
    woosh.Token(woosh.NAME, 'version', 878, 16, 878, 23),
    woosh.Token(woosh.OP, '=', 878, 24, 878, 25),
    woosh.Token(woosh.NAME, 'vendor', 878, 26, 878, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 878, 32, 879, 0),
    woosh.Token(woosh.COMMENT, '# System specific extensions', 880, 4, 880, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 880, 32, 881, 0),
    woosh.Token(woosh.DEDENT, '    ', 881, 0, 881, 4),
    woosh.Token(woosh.DEDENT, '', 881, 4, 881, 4),
    woosh.Token(woosh.DEDENT, '', 881, 4, 881, 4),
    woosh.Token(woosh.NAME, 'if', 881, 4, 881, 6),
    woosh.Token(woosh.NAME, 'system', 881, 7, 881, 13),
    woosh.Token(woosh.OP, '==', 881, 14, 881, 16),
    woosh.Token(woosh.STRING, "'OpenVMS'", 881, 17, 881, 26),
    woosh.Token(woosh.OP, ':', 881, 26, 881, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 881, 27, 882, 0),
    woosh.Token(woosh.COMMENT, '# OpenVMS seems to have release and version mixed up', 882, 8, 882, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 882, 60, 883, 0),
    woosh.Token(woosh.INDENT, '        ', 883, 0, 883, 8),
    woosh.Token(woosh.NAME, 'if', 883, 8, 883, 10),
    woosh.Token(woosh.NAME, 'not', 883, 11, 883, 14),
    woosh.Token(woosh.NAME, 'release', 883, 15, 883, 22),
    woosh.Token(woosh.NAME, 'or', 883, 23, 883, 25),
    woosh.Token(woosh.NAME, 'release', 883, 26, 883, 33),
    woosh.Token(woosh.OP, '==', 883, 34, 883, 36),
    woosh.Token(woosh.STRING, "'0'", 883, 37, 883, 40),
    woosh.Token(woosh.OP, ':', 883, 40, 883, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 883, 41, 884, 0),
    woosh.Token(woosh.INDENT, '            ', 884, 0, 884, 12),
    woosh.Token(woosh.NAME, 'release', 884, 12, 884, 19),
    woosh.Token(woosh.OP, '=', 884, 20, 884, 21),
    woosh.Token(woosh.NAME, 'version', 884, 22, 884, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 884, 29, 885, 0),
    woosh.Token(woosh.NAME, 'version', 885, 12, 885, 19),
    woosh.Token(woosh.OP, '=', 885, 20, 885, 21),
    woosh.Token(woosh.STRING, "''", 885, 22, 885, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 885, 24, 886, 0),
    woosh.Token(woosh.COMMENT, '#  normalize name', 887, 4, 887, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 887, 21, 888, 0),
    woosh.Token(woosh.DEDENT, '    ', 888, 0, 888, 4),
    woosh.Token(woosh.DEDENT, '', 888, 4, 888, 4),
    woosh.Token(woosh.NAME, 'if', 888, 4, 888, 6),
    woosh.Token(woosh.NAME, 'system', 888, 7, 888, 13),
    woosh.Token(woosh.OP, '==', 888, 14, 888, 16),
    woosh.Token(woosh.STRING, "'Microsoft'", 888, 17, 888, 28),
    woosh.Token(woosh.NAME, 'and', 888, 29, 888, 32),
    woosh.Token(woosh.NAME, 'release', 888, 33, 888, 40),
    woosh.Token(woosh.OP, '==', 888, 41, 888, 43),
    woosh.Token(woosh.STRING, "'Windows'", 888, 44, 888, 53),
    woosh.Token(woosh.OP, ':', 888, 53, 888, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 888, 54, 889, 0),
    woosh.Token(woosh.INDENT, '        ', 889, 0, 889, 8),
    woosh.Token(woosh.NAME, 'system', 889, 8, 889, 14),
    woosh.Token(woosh.OP, '=', 889, 15, 889, 16),
    woosh.Token(woosh.STRING, "'Windows'", 889, 17, 889, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 889, 26, 890, 0),
    woosh.Token(woosh.NAME, 'release', 890, 8, 890, 15),
    woosh.Token(woosh.OP, '=', 890, 16, 890, 17),
    woosh.Token(woosh.STRING, "'Vista'", 890, 18, 890, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 890, 25, 891, 0),
    woosh.Token(woosh.DEDENT, '    ', 892, 0, 892, 4),
    woosh.Token(woosh.NAME, 'vals', 892, 4, 892, 8),
    woosh.Token(woosh.OP, '=', 892, 9, 892, 10),
    woosh.Token(woosh.NAME, 'system', 892, 11, 892, 17),
    woosh.Token(woosh.OP, ',', 892, 17, 892, 18),
    woosh.Token(woosh.NAME, 'node', 892, 19, 892, 23),
    woosh.Token(woosh.OP, ',', 892, 23, 892, 24),
    woosh.Token(woosh.NAME, 'release', 892, 25, 892, 32),
    woosh.Token(woosh.OP, ',', 892, 32, 892, 33),
    woosh.Token(woosh.NAME, 'version', 892, 34, 892, 41),
    woosh.Token(woosh.OP, ',', 892, 41, 892, 42),
    woosh.Token(woosh.NAME, 'machine', 892, 43, 892, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 892, 50, 893, 0),
    woosh.Token(woosh.COMMENT, "# Replace 'unknown' values with the more portable ''", 893, 4, 893, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 893, 56, 894, 0),
    woosh.Token(woosh.NAME, '_uname_cache', 894, 4, 894, 16),
    woosh.Token(woosh.OP, '=', 894, 17, 894, 18),
    woosh.Token(woosh.NAME, 'uname_result', 894, 19, 894, 31),
    woosh.Token(woosh.OP, '(', 894, 31, 894, 32),
    woosh.Token(woosh.OP, '*', 894, 32, 894, 33),
    woosh.Token(woosh.NAME, 'map', 894, 33, 894, 36),
    woosh.Token(woosh.OP, '(', 894, 36, 894, 37),
    woosh.Token(woosh.NAME, '_unknown_as_blank', 894, 37, 894, 54),
    woosh.Token(woosh.OP, ',', 894, 54, 894, 55),
    woosh.Token(woosh.NAME, 'vals', 894, 56, 894, 60),
    woosh.Token(woosh.OP, ')', 894, 60, 894, 61),
    woosh.Token(woosh.OP, ')', 894, 61, 894, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 894, 62, 895, 0),
    woosh.Token(woosh.NAME, 'return', 895, 4, 895, 10),
    woosh.Token(woosh.NAME, '_uname_cache', 895, 11, 895, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 895, 23, 896, 0),
    woosh.Token(woosh.COMMENT, '### Direct interfaces to some of the uname() return values', 897, 0, 897, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 897, 58, 898, 0),
    woosh.Token(woosh.DEDENT, '', 899, 0, 899, 0),
    woosh.Token(woosh.NAME, 'def', 899, 0, 899, 3),
    woosh.Token(woosh.NAME, 'system', 899, 4, 899, 10),
    woosh.Token(woosh.OP, '(', 899, 10, 899, 11),
    woosh.Token(woosh.OP, ')', 899, 11, 899, 12),
    woosh.Token(woosh.OP, ':', 899, 12, 899, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 899, 13, 900, 0),
    woosh.Token(woosh.INDENT, '    ', 901, 0, 901, 4),
    woosh.Token(woosh.STRING, '""" Returns the system/OS name, e.g. \'Linux\', \'Windows\' or \'Java\'.\r\n\r\n        An empty string is returned if the value cannot be determined.\r\n\r\n    """', 901, 4, 905, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 905, 7, 906, 0),
    woosh.Token(woosh.NAME, 'return', 906, 4, 906, 10),
    woosh.Token(woosh.NAME, 'uname', 906, 11, 906, 16),
    woosh.Token(woosh.OP, '(', 906, 16, 906, 17),
    woosh.Token(woosh.OP, ')', 906, 17, 906, 18),
    woosh.Token(woosh.OP, '.', 906, 18, 906, 19),
    woosh.Token(woosh.NAME, 'system', 906, 19, 906, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 906, 25, 907, 0),
    woosh.Token(woosh.DEDENT, '', 908, 0, 908, 0),
    woosh.Token(woosh.NAME, 'def', 908, 0, 908, 3),
    woosh.Token(woosh.NAME, 'node', 908, 4, 908, 8),
    woosh.Token(woosh.OP, '(', 908, 8, 908, 9),
    woosh.Token(woosh.OP, ')', 908, 9, 908, 10),
    woosh.Token(woosh.OP, ':', 908, 10, 908, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 908, 11, 909, 0),
    woosh.Token(woosh.INDENT, '    ', 910, 0, 910, 4),
    woosh.Token(woosh.STRING, '""" Returns the computer\'s network name (which may not be fully\r\n        qualified)\r\n\r\n        An empty string is returned if the value cannot be determined.\r\n\r\n    """', 910, 4, 915, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 915, 7, 916, 0),
    woosh.Token(woosh.NAME, 'return', 916, 4, 916, 10),
    woosh.Token(woosh.NAME, 'uname', 916, 11, 916, 16),
    woosh.Token(woosh.OP, '(', 916, 16, 916, 17),
    woosh.Token(woosh.OP, ')', 916, 17, 916, 18),
    woosh.Token(woosh.OP, '.', 916, 18, 916, 19),
    woosh.Token(woosh.NAME, 'node', 916, 19, 916, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 916, 23, 917, 0),
    woosh.Token(woosh.DEDENT, '', 918, 0, 918, 0),
    woosh.Token(woosh.NAME, 'def', 918, 0, 918, 3),
    woosh.Token(woosh.NAME, 'release', 918, 4, 918, 11),
    woosh.Token(woosh.OP, '(', 918, 11, 918, 12),
    woosh.Token(woosh.OP, ')', 918, 12, 918, 13),
    woosh.Token(woosh.OP, ':', 918, 13, 918, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 918, 14, 919, 0),
    woosh.Token(woosh.INDENT, '    ', 920, 0, 920, 4),
    woosh.Token(woosh.STRING, '""" Returns the system\'s release, e.g. \'2.2.0\' or \'NT\'\r\n\r\n        An empty string is returned if the value cannot be determined.\r\n\r\n    """', 920, 4, 924, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 924, 7, 925, 0),
    woosh.Token(woosh.NAME, 'return', 925, 4, 925, 10),
    woosh.Token(woosh.NAME, 'uname', 925, 11, 925, 16),
    woosh.Token(woosh.OP, '(', 925, 16, 925, 17),
    woosh.Token(woosh.OP, ')', 925, 17, 925, 18),
    woosh.Token(woosh.OP, '.', 925, 18, 925, 19),
    woosh.Token(woosh.NAME, 'release', 925, 19, 925, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 925, 26, 926, 0),
    woosh.Token(woosh.DEDENT, '', 927, 0, 927, 0),
    woosh.Token(woosh.NAME, 'def', 927, 0, 927, 3),
    woosh.Token(woosh.NAME, 'version', 927, 4, 927, 11),
    woosh.Token(woosh.OP, '(', 927, 11, 927, 12),
    woosh.Token(woosh.OP, ')', 927, 12, 927, 13),
    woosh.Token(woosh.OP, ':', 927, 13, 927, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 927, 14, 928, 0),
    woosh.Token(woosh.INDENT, '    ', 929, 0, 929, 4),
    woosh.Token(woosh.STRING, '""" Returns the system\'s release version, e.g. \'#3 on degas\'\r\n\r\n        An empty string is returned if the value cannot be determined.\r\n\r\n    """', 929, 4, 933, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 933, 7, 934, 0),
    woosh.Token(woosh.NAME, 'return', 934, 4, 934, 10),
    woosh.Token(woosh.NAME, 'uname', 934, 11, 934, 16),
    woosh.Token(woosh.OP, '(', 934, 16, 934, 17),
    woosh.Token(woosh.OP, ')', 934, 17, 934, 18),
    woosh.Token(woosh.OP, '.', 934, 18, 934, 19),
    woosh.Token(woosh.NAME, 'version', 934, 19, 934, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 934, 26, 935, 0),
    woosh.Token(woosh.DEDENT, '', 936, 0, 936, 0),
    woosh.Token(woosh.NAME, 'def', 936, 0, 936, 3),
    woosh.Token(woosh.NAME, 'machine', 936, 4, 936, 11),
    woosh.Token(woosh.OP, '(', 936, 11, 936, 12),
    woosh.Token(woosh.OP, ')', 936, 12, 936, 13),
    woosh.Token(woosh.OP, ':', 936, 13, 936, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 936, 14, 937, 0),
    woosh.Token(woosh.INDENT, '    ', 938, 0, 938, 4),
    woosh.Token(woosh.STRING, '""" Returns the machine type, e.g. \'i386\'\r\n\r\n        An empty string is returned if the value cannot be determined.\r\n\r\n    """', 938, 4, 942, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 942, 7, 943, 0),
    woosh.Token(woosh.NAME, 'return', 943, 4, 943, 10),
    woosh.Token(woosh.NAME, 'uname', 943, 11, 943, 16),
    woosh.Token(woosh.OP, '(', 943, 16, 943, 17),
    woosh.Token(woosh.OP, ')', 943, 17, 943, 18),
    woosh.Token(woosh.OP, '.', 943, 18, 943, 19),
    woosh.Token(woosh.NAME, 'machine', 943, 19, 943, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 943, 26, 944, 0),
    woosh.Token(woosh.DEDENT, '', 945, 0, 945, 0),
    woosh.Token(woosh.NAME, 'def', 945, 0, 945, 3),
    woosh.Token(woosh.NAME, 'processor', 945, 4, 945, 13),
    woosh.Token(woosh.OP, '(', 945, 13, 945, 14),
    woosh.Token(woosh.OP, ')', 945, 14, 945, 15),
    woosh.Token(woosh.OP, ':', 945, 15, 945, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 945, 16, 946, 0),
    woosh.Token(woosh.INDENT, '    ', 947, 0, 947, 4),
    woosh.Token(woosh.STRING, '""" Returns the (true) processor name, e.g. \'amdk6\'\r\n\r\n        An empty string is returned if the value cannot be\r\n        determined. Note that many platforms do not provide this\r\n        information or simply return the same value as for machine(),\r\n        e.g.  NetBSD does this.\r\n\r\n    """', 947, 4, 954, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 954, 7, 955, 0),
    woosh.Token(woosh.NAME, 'return', 955, 4, 955, 10),
    woosh.Token(woosh.NAME, 'uname', 955, 11, 955, 16),
    woosh.Token(woosh.OP, '(', 955, 16, 955, 17),
    woosh.Token(woosh.OP, ')', 955, 17, 955, 18),
    woosh.Token(woosh.OP, '.', 955, 18, 955, 19),
    woosh.Token(woosh.NAME, 'processor', 955, 19, 955, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 955, 28, 956, 0),
    woosh.Token(woosh.COMMENT, '### Various APIs for extracting information from sys.version', 957, 0, 957, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 957, 60, 958, 0),
    woosh.Token(woosh.DEDENT, '', 959, 0, 959, 0),
    woosh.Token(woosh.NAME, '_sys_version_parser', 959, 0, 959, 19),
    woosh.Token(woosh.OP, '=', 959, 20, 959, 21),
    woosh.Token(woosh.NAME, 're', 959, 22, 959, 24),
    woosh.Token(woosh.OP, '.', 959, 24, 959, 25),
    woosh.Token(woosh.NAME, 'compile', 959, 25, 959, 32),
    woosh.Token(woosh.OP, '(', 959, 32, 959, 33),
    woosh.Token(woosh.STRING, "r'([\\w.+]+)\\s*'", 960, 4, 960, 19),
    woosh.Token(woosh.COMMENT, '# "version<space>"', 960, 21, 960, 39),
    woosh.Token(woosh.STRING, "r'\\(#?([^,]+)'", 961, 4, 961, 18),
    woosh.Token(woosh.COMMENT, '# "(#buildno"', 961, 20, 961, 33),
    woosh.Token(woosh.STRING, "r'(?:,\\s*([\\w ]*)'", 962, 4, 962, 22),
    woosh.Token(woosh.COMMENT, '# ", builddate"', 962, 24, 962, 39),
    woosh.Token(woosh.STRING, "r'(?:,\\s*([\\w :]*))?)?\\)\\s*'", 963, 4, 963, 32),
    woosh.Token(woosh.COMMENT, '# ", buildtime)<space>"', 963, 34, 963, 57),
    woosh.Token(woosh.STRING, "r'\\[([^\\]]+)\\]?'", 964, 4, 964, 20),
    woosh.Token(woosh.OP, ',', 964, 20, 964, 21),
    woosh.Token(woosh.NAME, 're', 964, 22, 964, 24),
    woosh.Token(woosh.OP, '.', 964, 24, 964, 25),
    woosh.Token(woosh.NAME, 'ASCII', 964, 25, 964, 30),
    woosh.Token(woosh.OP, ')', 964, 30, 964, 31),
    woosh.Token(woosh.COMMENT, '# "[compiler]"', 964, 33, 964, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 964, 47, 965, 0),
    woosh.Token(woosh.NAME, '_ironpython_sys_version_parser', 966, 0, 966, 30),
    woosh.Token(woosh.OP, '=', 966, 31, 966, 32),
    woosh.Token(woosh.NAME, 're', 966, 33, 966, 35),
    woosh.Token(woosh.OP, '.', 966, 35, 966, 36),
    woosh.Token(woosh.NAME, 'compile', 966, 36, 966, 43),
    woosh.Token(woosh.OP, '(', 966, 43, 966, 44),
    woosh.Token(woosh.STRING, "r'IronPython\\s*'", 967, 4, 967, 20),
    woosh.Token(woosh.STRING, "r'([\\d\\.]+)'", 968, 4, 968, 16),
    woosh.Token(woosh.STRING, "r'(?: \\(([\\d\\.]+)\\))?'", 969, 4, 969, 26),
    woosh.Token(woosh.STRING, "r' on (.NET [\\d\\.]+)'", 970, 4, 970, 25),
    woosh.Token(woosh.OP, ',', 970, 25, 970, 26),
    woosh.Token(woosh.NAME, 're', 970, 27, 970, 29),
    woosh.Token(woosh.OP, '.', 970, 29, 970, 30),
    woosh.Token(woosh.NAME, 'ASCII', 970, 30, 970, 35),
    woosh.Token(woosh.OP, ')', 970, 35, 970, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 970, 36, 971, 0),
    woosh.Token(woosh.COMMENT, '# IronPython covering 2.6 and 2.7', 972, 0, 972, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 972, 33, 973, 0),
    woosh.Token(woosh.NAME, '_ironpython26_sys_version_parser', 973, 0, 973, 32),
    woosh.Token(woosh.OP, '=', 973, 33, 973, 34),
    woosh.Token(woosh.NAME, 're', 973, 35, 973, 37),
    woosh.Token(woosh.OP, '.', 973, 37, 973, 38),
    woosh.Token(woosh.NAME, 'compile', 973, 38, 973, 45),
    woosh.Token(woosh.OP, '(', 973, 45, 973, 46),
    woosh.Token(woosh.STRING, "r'([\\d.]+)\\s*'", 974, 4, 974, 18),
    woosh.Token(woosh.STRING, "r'\\(IronPython\\s*'", 975, 4, 975, 22),
    woosh.Token(woosh.STRING, "r'[\\d.]+\\s*'", 976, 4, 976, 16),
    woosh.Token(woosh.STRING, "r'\\(([\\d.]+)\\) on ([\\w.]+ [\\d.]+(?: \\(\\d+-bit\\))?)\\)'", 977, 4, 977, 57),
    woosh.Token(woosh.OP, ')', 978, 0, 978, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 978, 1, 979, 0),
    woosh.Token(woosh.NAME, '_pypy_sys_version_parser', 980, 0, 980, 24),
    woosh.Token(woosh.OP, '=', 980, 25, 980, 26),
    woosh.Token(woosh.NAME, 're', 980, 27, 980, 29),
    woosh.Token(woosh.OP, '.', 980, 29, 980, 30),
    woosh.Token(woosh.NAME, 'compile', 980, 30, 980, 37),
    woosh.Token(woosh.OP, '(', 980, 37, 980, 38),
    woosh.Token(woosh.STRING, "r'([\\w.+]+)\\s*'", 981, 4, 981, 19),
    woosh.Token(woosh.STRING, "r'\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*'", 982, 4, 982, 48),
    woosh.Token(woosh.STRING, "r'\\[PyPy [^\\]]+\\]?'", 983, 4, 983, 23),
    woosh.Token(woosh.OP, ')', 983, 23, 983, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 983, 24, 984, 0),
    woosh.Token(woosh.NAME, '_sys_version_cache', 985, 0, 985, 18),
    woosh.Token(woosh.OP, '=', 985, 19, 985, 20),
    woosh.Token(woosh.OP, '{', 985, 21, 985, 22),
    woosh.Token(woosh.OP, '}', 985, 22, 985, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 985, 23, 986, 0),
    woosh.Token(woosh.NAME, 'def', 987, 0, 987, 3),
    woosh.Token(woosh.NAME, '_sys_version', 987, 4, 987, 16),
    woosh.Token(woosh.OP, '(', 987, 16, 987, 17),
    woosh.Token(woosh.NAME, 'sys_version', 987, 17, 987, 28),
    woosh.Token(woosh.OP, '=', 987, 28, 987, 29),
    woosh.Token(woosh.NAME, 'None', 987, 29, 987, 33),
    woosh.Token(woosh.OP, ')', 987, 33, 987, 34),
    woosh.Token(woosh.OP, ':', 987, 34, 987, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 987, 35, 988, 0),
    woosh.Token(woosh.INDENT, '    ', 989, 0, 989, 4),
    woosh.Token(woosh.STRING, '""" Returns a parsed version of Python\'s sys.version as tuple\r\n        (name, version, branch, revision, buildno, builddate, compiler)\r\n        referring to the Python implementation name, version, branch,\r\n        revision, build number, build date/time as string and the compiler\r\n        identification string.\r\n\r\n        Note that unlike the Python sys.version, the returned value\r\n        for the Python version will always include the patchlevel (it\r\n        defaults to \'.0\').\r\n\r\n        The function returns empty strings for tuple entries that\r\n        cannot be determined.\r\n\r\n        sys_version may be given to parse an alternative version\r\n        string, e.g. if the version was read from a different Python\r\n        interpreter.\r\n\r\n    """', 989, 4, 1006, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1006, 7, 1007, 0),
    woosh.Token(woosh.COMMENT, '# Get the Python version', 1007, 4, 1007, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1007, 28, 1008, 0),
    woosh.Token(woosh.NAME, 'if', 1008, 4, 1008, 6),
    woosh.Token(woosh.NAME, 'sys_version', 1008, 7, 1008, 18),
    woosh.Token(woosh.NAME, 'is', 1008, 19, 1008, 21),
    woosh.Token(woosh.NAME, 'None', 1008, 22, 1008, 26),
    woosh.Token(woosh.OP, ':', 1008, 26, 1008, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 1008, 27, 1009, 0),
    woosh.Token(woosh.INDENT, '        ', 1009, 0, 1009, 8),
    woosh.Token(woosh.NAME, 'sys_version', 1009, 8, 1009, 19),
    woosh.Token(woosh.OP, '=', 1009, 20, 1009, 21),
    woosh.Token(woosh.NAME, 'sys', 1009, 22, 1009, 25),
    woosh.Token(woosh.OP, '.', 1009, 25, 1009, 26),
    woosh.Token(woosh.NAME, 'version', 1009, 26, 1009, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 1009, 33, 1010, 0),
    woosh.Token(woosh.COMMENT, '# Try the cache first', 1011, 4, 1011, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1011, 25, 1012, 0),
    woosh.Token(woosh.DEDENT, '    ', 1012, 0, 1012, 4),
    woosh.Token(woosh.NAME, 'result', 1012, 4, 1012, 10),
    woosh.Token(woosh.OP, '=', 1012, 11, 1012, 12),
    woosh.Token(woosh.NAME, '_sys_version_cache', 1012, 13, 1012, 31),
    woosh.Token(woosh.OP, '.', 1012, 31, 1012, 32),
    woosh.Token(woosh.NAME, 'get', 1012, 32, 1012, 35),
    woosh.Token(woosh.OP, '(', 1012, 35, 1012, 36),
    woosh.Token(woosh.NAME, 'sys_version', 1012, 36, 1012, 47),
    woosh.Token(woosh.OP, ',', 1012, 47, 1012, 48),
    woosh.Token(woosh.NAME, 'None', 1012, 49, 1012, 53),
    woosh.Token(woosh.OP, ')', 1012, 53, 1012, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 1012, 54, 1013, 0),
    woosh.Token(woosh.NAME, 'if', 1013, 4, 1013, 6),
    woosh.Token(woosh.NAME, 'result', 1013, 7, 1013, 13),
    woosh.Token(woosh.NAME, 'is', 1013, 14, 1013, 16),
    woosh.Token(woosh.NAME, 'not', 1013, 17, 1013, 20),
    woosh.Token(woosh.NAME, 'None', 1013, 21, 1013, 25),
    woosh.Token(woosh.OP, ':', 1013, 25, 1013, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1013, 26, 1014, 0),
    woosh.Token(woosh.INDENT, '        ', 1014, 0, 1014, 8),
    woosh.Token(woosh.NAME, 'return', 1014, 8, 1014, 14),
    woosh.Token(woosh.NAME, 'result', 1014, 15, 1014, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1014, 21, 1015, 0),
    woosh.Token(woosh.COMMENT, '# Parse it', 1016, 4, 1016, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 1016, 14, 1017, 0),
    woosh.Token(woosh.DEDENT, '    ', 1017, 0, 1017, 4),
    woosh.Token(woosh.NAME, 'if', 1017, 4, 1017, 6),
    woosh.Token(woosh.STRING, "'IronPython'", 1017, 7, 1017, 19),
    woosh.Token(woosh.NAME, 'in', 1017, 20, 1017, 22),
    woosh.Token(woosh.NAME, 'sys_version', 1017, 23, 1017, 34),
    woosh.Token(woosh.OP, ':', 1017, 34, 1017, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 1017, 35, 1018, 0),
    woosh.Token(woosh.COMMENT, '# IronPython', 1018, 8, 1018, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 1018, 20, 1019, 0),
    woosh.Token(woosh.INDENT, '        ', 1019, 0, 1019, 8),
    woosh.Token(woosh.NAME, 'name', 1019, 8, 1019, 12),
    woosh.Token(woosh.OP, '=', 1019, 13, 1019, 14),
    woosh.Token(woosh.STRING, "'IronPython'", 1019, 15, 1019, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 1019, 27, 1020, 0),
    woosh.Token(woosh.NAME, 'if', 1020, 8, 1020, 10),
    woosh.Token(woosh.NAME, 'sys_version', 1020, 11, 1020, 22),
    woosh.Token(woosh.OP, '.', 1020, 22, 1020, 23),
    woosh.Token(woosh.NAME, 'startswith', 1020, 23, 1020, 33),
    woosh.Token(woosh.OP, '(', 1020, 33, 1020, 34),
    woosh.Token(woosh.STRING, "'IronPython'", 1020, 34, 1020, 46),
    woosh.Token(woosh.OP, ')', 1020, 46, 1020, 47),
    woosh.Token(woosh.OP, ':', 1020, 47, 1020, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 1020, 48, 1021, 0),
    woosh.Token(woosh.INDENT, '            ', 1021, 0, 1021, 12),
    woosh.Token(woosh.NAME, 'match', 1021, 12, 1021, 17),
    woosh.Token(woosh.OP, '=', 1021, 18, 1021, 19),
    woosh.Token(woosh.NAME, '_ironpython_sys_version_parser', 1021, 20, 1021, 50),
    woosh.Token(woosh.OP, '.', 1021, 50, 1021, 51),
    woosh.Token(woosh.NAME, 'match', 1021, 51, 1021, 56),
    woosh.Token(woosh.OP, '(', 1021, 56, 1021, 57),
    woosh.Token(woosh.NAME, 'sys_version', 1021, 57, 1021, 68),
    woosh.Token(woosh.OP, ')', 1021, 68, 1021, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 1021, 69, 1022, 0),
    woosh.Token(woosh.DEDENT, '        ', 1022, 0, 1022, 8),
    woosh.Token(woosh.NAME, 'else', 1022, 8, 1022, 12),
    woosh.Token(woosh.OP, ':', 1022, 12, 1022, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 1022, 13, 1023, 0),
    woosh.Token(woosh.INDENT, '            ', 1023, 0, 1023, 12),
    woosh.Token(woosh.NAME, 'match', 1023, 12, 1023, 17),
    woosh.Token(woosh.OP, '=', 1023, 18, 1023, 19),
    woosh.Token(woosh.NAME, '_ironpython26_sys_version_parser', 1023, 20, 1023, 52),
    woosh.Token(woosh.OP, '.', 1023, 52, 1023, 53),
    woosh.Token(woosh.NAME, 'match', 1023, 53, 1023, 58),
    woosh.Token(woosh.OP, '(', 1023, 58, 1023, 59),
    woosh.Token(woosh.NAME, 'sys_version', 1023, 59, 1023, 70),
    woosh.Token(woosh.OP, ')', 1023, 70, 1023, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 1023, 71, 1024, 0),
    woosh.Token(woosh.DEDENT, '        ', 1025, 0, 1025, 8),
    woosh.Token(woosh.NAME, 'if', 1025, 8, 1025, 10),
    woosh.Token(woosh.NAME, 'match', 1025, 11, 1025, 16),
    woosh.Token(woosh.NAME, 'is', 1025, 17, 1025, 19),
    woosh.Token(woosh.NAME, 'None', 1025, 20, 1025, 24),
    woosh.Token(woosh.OP, ':', 1025, 24, 1025, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1025, 25, 1026, 0),
    woosh.Token(woosh.INDENT, '            ', 1026, 0, 1026, 12),
    woosh.Token(woosh.NAME, 'raise', 1026, 12, 1026, 17),
    woosh.Token(woosh.NAME, 'ValueError', 1026, 18, 1026, 28),
    woosh.Token(woosh.OP, '(', 1026, 28, 1026, 29),
    woosh.Token(woosh.STRING, "'failed to parse IronPython sys.version: %s'", 1027, 16, 1027, 60),
    woosh.Token(woosh.OP, '%', 1027, 61, 1027, 62),
    woosh.Token(woosh.NAME, 'repr', 1028, 16, 1028, 20),
    woosh.Token(woosh.OP, '(', 1028, 20, 1028, 21),
    woosh.Token(woosh.NAME, 'sys_version', 1028, 21, 1028, 32),
    woosh.Token(woosh.OP, ')', 1028, 32, 1028, 33),
    woosh.Token(woosh.OP, ')', 1028, 33, 1028, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 1028, 34, 1029, 0),
    woosh.Token(woosh.DEDENT, '        ', 1030, 0, 1030, 8),
    woosh.Token(woosh.NAME, 'version', 1030, 8, 1030, 15),
    woosh.Token(woosh.OP, ',', 1030, 15, 1030, 16),
    woosh.Token(woosh.NAME, 'alt_version', 1030, 17, 1030, 28),
    woosh.Token(woosh.OP, ',', 1030, 28, 1030, 29),
    woosh.Token(woosh.NAME, 'compiler', 1030, 30, 1030, 38),
    woosh.Token(woosh.OP, '=', 1030, 39, 1030, 40),
    woosh.Token(woosh.NAME, 'match', 1030, 41, 1030, 46),
    woosh.Token(woosh.OP, '.', 1030, 46, 1030, 47),
    woosh.Token(woosh.NAME, 'groups', 1030, 47, 1030, 53),
    woosh.Token(woosh.OP, '(', 1030, 53, 1030, 54),
    woosh.Token(woosh.OP, ')', 1030, 54, 1030, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 1030, 55, 1031, 0),
    woosh.Token(woosh.NAME, 'buildno', 1031, 8, 1031, 15),
    woosh.Token(woosh.OP, '=', 1031, 16, 1031, 17),
    woosh.Token(woosh.STRING, "''", 1031, 18, 1031, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 1031, 20, 1032, 0),
    woosh.Token(woosh.NAME, 'builddate', 1032, 8, 1032, 17),
    woosh.Token(woosh.OP, '=', 1032, 18, 1032, 19),
    woosh.Token(woosh.STRING, "''", 1032, 20, 1032, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1032, 22, 1033, 0),
    woosh.Token(woosh.DEDENT, '    ', 1034, 0, 1034, 4),
    woosh.Token(woosh.NAME, 'elif', 1034, 4, 1034, 8),
    woosh.Token(woosh.NAME, 'sys', 1034, 9, 1034, 12),
    woosh.Token(woosh.OP, '.', 1034, 12, 1034, 13),
    woosh.Token(woosh.NAME, 'platform', 1034, 13, 1034, 21),
    woosh.Token(woosh.OP, '.', 1034, 21, 1034, 22),
    woosh.Token(woosh.NAME, 'startswith', 1034, 22, 1034, 32),
    woosh.Token(woosh.OP, '(', 1034, 32, 1034, 33),
    woosh.Token(woosh.STRING, "'java'", 1034, 33, 1034, 39),
    woosh.Token(woosh.OP, ')', 1034, 39, 1034, 40),
    woosh.Token(woosh.OP, ':', 1034, 40, 1034, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 1034, 41, 1035, 0),
    woosh.Token(woosh.COMMENT, '# Jython', 1035, 8, 1035, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 1035, 16, 1036, 0),
    woosh.Token(woosh.INDENT, '        ', 1036, 0, 1036, 8),
    woosh.Token(woosh.NAME, 'name', 1036, 8, 1036, 12),
    woosh.Token(woosh.OP, '=', 1036, 13, 1036, 14),
    woosh.Token(woosh.STRING, "'Jython'", 1036, 15, 1036, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 1036, 23, 1037, 0),
    woosh.Token(woosh.NAME, 'match', 1037, 8, 1037, 13),
    woosh.Token(woosh.OP, '=', 1037, 14, 1037, 15),
    woosh.Token(woosh.NAME, '_sys_version_parser', 1037, 16, 1037, 35),
    woosh.Token(woosh.OP, '.', 1037, 35, 1037, 36),
    woosh.Token(woosh.NAME, 'match', 1037, 36, 1037, 41),
    woosh.Token(woosh.OP, '(', 1037, 41, 1037, 42),
    woosh.Token(woosh.NAME, 'sys_version', 1037, 42, 1037, 53),
    woosh.Token(woosh.OP, ')', 1037, 53, 1037, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 1037, 54, 1038, 0),
    woosh.Token(woosh.NAME, 'if', 1038, 8, 1038, 10),
    woosh.Token(woosh.NAME, 'match', 1038, 11, 1038, 16),
    woosh.Token(woosh.NAME, 'is', 1038, 17, 1038, 19),
    woosh.Token(woosh.NAME, 'None', 1038, 20, 1038, 24),
    woosh.Token(woosh.OP, ':', 1038, 24, 1038, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1038, 25, 1039, 0),
    woosh.Token(woosh.INDENT, '            ', 1039, 0, 1039, 12),
    woosh.Token(woosh.NAME, 'raise', 1039, 12, 1039, 17),
    woosh.Token(woosh.NAME, 'ValueError', 1039, 18, 1039, 28),
    woosh.Token(woosh.OP, '(', 1039, 28, 1039, 29),
    woosh.Token(woosh.STRING, "'failed to parse Jython sys.version: %s'", 1040, 16, 1040, 56),
    woosh.Token(woosh.OP, '%', 1040, 57, 1040, 58),
    woosh.Token(woosh.NAME, 'repr', 1041, 16, 1041, 20),
    woosh.Token(woosh.OP, '(', 1041, 20, 1041, 21),
    woosh.Token(woosh.NAME, 'sys_version', 1041, 21, 1041, 32),
    woosh.Token(woosh.OP, ')', 1041, 32, 1041, 33),
    woosh.Token(woosh.OP, ')', 1041, 33, 1041, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 1041, 34, 1042, 0),
    woosh.Token(woosh.DEDENT, '        ', 1042, 0, 1042, 8),
    woosh.Token(woosh.NAME, 'version', 1042, 8, 1042, 15),
    woosh.Token(woosh.OP, ',', 1042, 15, 1042, 16),
    woosh.Token(woosh.NAME, 'buildno', 1042, 17, 1042, 24),
    woosh.Token(woosh.OP, ',', 1042, 24, 1042, 25),
    woosh.Token(woosh.NAME, 'builddate', 1042, 26, 1042, 35),
    woosh.Token(woosh.OP, ',', 1042, 35, 1042, 36),
    woosh.Token(woosh.NAME, 'buildtime', 1042, 37, 1042, 46),
    woosh.Token(woosh.OP, ',', 1042, 46, 1042, 47),
    woosh.Token(woosh.NAME, '_', 1042, 48, 1042, 49),
    woosh.Token(woosh.OP, '=', 1042, 50, 1042, 51),
    woosh.Token(woosh.NAME, 'match', 1042, 52, 1042, 57),
    woosh.Token(woosh.OP, '.', 1042, 57, 1042, 58),
    woosh.Token(woosh.NAME, 'groups', 1042, 58, 1042, 64),
    woosh.Token(woosh.OP, '(', 1042, 64, 1042, 65),
    woosh.Token(woosh.OP, ')', 1042, 65, 1042, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 1042, 66, 1043, 0),
    woosh.Token(woosh.NAME, 'if', 1043, 8, 1043, 10),
    woosh.Token(woosh.NAME, 'builddate', 1043, 11, 1043, 20),
    woosh.Token(woosh.NAME, 'is', 1043, 21, 1043, 23),
    woosh.Token(woosh.NAME, 'None', 1043, 24, 1043, 28),
    woosh.Token(woosh.OP, ':', 1043, 28, 1043, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 1043, 29, 1044, 0),
    woosh.Token(woosh.INDENT, '            ', 1044, 0, 1044, 12),
    woosh.Token(woosh.NAME, 'builddate', 1044, 12, 1044, 21),
    woosh.Token(woosh.OP, '=', 1044, 22, 1044, 23),
    woosh.Token(woosh.STRING, "''", 1044, 24, 1044, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1044, 26, 1045, 0),
    woosh.Token(woosh.DEDENT, '        ', 1045, 0, 1045, 8),
    woosh.Token(woosh.NAME, 'compiler', 1045, 8, 1045, 16),
    woosh.Token(woosh.OP, '=', 1045, 17, 1045, 18),
    woosh.Token(woosh.NAME, 'sys', 1045, 19, 1045, 22),
    woosh.Token(woosh.OP, '.', 1045, 22, 1045, 23),
    woosh.Token(woosh.NAME, 'platform', 1045, 23, 1045, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 1045, 31, 1046, 0),
    woosh.Token(woosh.DEDENT, '    ', 1047, 0, 1047, 4),
    woosh.Token(woosh.NAME, 'elif', 1047, 4, 1047, 8),
    woosh.Token(woosh.STRING, '"PyPy"', 1047, 9, 1047, 15),
    woosh.Token(woosh.NAME, 'in', 1047, 16, 1047, 18),
    woosh.Token(woosh.NAME, 'sys_version', 1047, 19, 1047, 30),
    woosh.Token(woosh.OP, ':', 1047, 30, 1047, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 1047, 31, 1048, 0),
    woosh.Token(woosh.COMMENT, '# PyPy', 1048, 8, 1048, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 1048, 14, 1049, 0),
    woosh.Token(woosh.INDENT, '        ', 1049, 0, 1049, 8),
    woosh.Token(woosh.NAME, 'name', 1049, 8, 1049, 12),
    woosh.Token(woosh.OP, '=', 1049, 13, 1049, 14),
    woosh.Token(woosh.STRING, '"PyPy"', 1049, 15, 1049, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1049, 21, 1050, 0),
    woosh.Token(woosh.NAME, 'match', 1050, 8, 1050, 13),
    woosh.Token(woosh.OP, '=', 1050, 14, 1050, 15),
    woosh.Token(woosh.NAME, '_pypy_sys_version_parser', 1050, 16, 1050, 40),
    woosh.Token(woosh.OP, '.', 1050, 40, 1050, 41),
    woosh.Token(woosh.NAME, 'match', 1050, 41, 1050, 46),
    woosh.Token(woosh.OP, '(', 1050, 46, 1050, 47),
    woosh.Token(woosh.NAME, 'sys_version', 1050, 47, 1050, 58),
    woosh.Token(woosh.OP, ')', 1050, 58, 1050, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 1050, 59, 1051, 0),
    woosh.Token(woosh.NAME, 'if', 1051, 8, 1051, 10),
    woosh.Token(woosh.NAME, 'match', 1051, 11, 1051, 16),
    woosh.Token(woosh.NAME, 'is', 1051, 17, 1051, 19),
    woosh.Token(woosh.NAME, 'None', 1051, 20, 1051, 24),
    woosh.Token(woosh.OP, ':', 1051, 24, 1051, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1051, 25, 1052, 0),
    woosh.Token(woosh.INDENT, '            ', 1052, 0, 1052, 12),
    woosh.Token(woosh.NAME, 'raise', 1052, 12, 1052, 17),
    woosh.Token(woosh.NAME, 'ValueError', 1052, 18, 1052, 28),
    woosh.Token(woosh.OP, '(', 1052, 28, 1052, 29),
    woosh.Token(woosh.STRING, '"failed to parse PyPy sys.version: %s"', 1052, 29, 1052, 67),
    woosh.Token(woosh.OP, '%', 1052, 68, 1052, 69),
    woosh.Token(woosh.NAME, 'repr', 1053, 29, 1053, 33),
    woosh.Token(woosh.OP, '(', 1053, 33, 1053, 34),
    woosh.Token(woosh.NAME, 'sys_version', 1053, 34, 1053, 45),
    woosh.Token(woosh.OP, ')', 1053, 45, 1053, 46),
    woosh.Token(woosh.OP, ')', 1053, 46, 1053, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 1053, 47, 1054, 0),
    woosh.Token(woosh.DEDENT, '        ', 1054, 0, 1054, 8),
    woosh.Token(woosh.NAME, 'version', 1054, 8, 1054, 15),
    woosh.Token(woosh.OP, ',', 1054, 15, 1054, 16),
    woosh.Token(woosh.NAME, 'buildno', 1054, 17, 1054, 24),
    woosh.Token(woosh.OP, ',', 1054, 24, 1054, 25),
    woosh.Token(woosh.NAME, 'builddate', 1054, 26, 1054, 35),
    woosh.Token(woosh.OP, ',', 1054, 35, 1054, 36),
    woosh.Token(woosh.NAME, 'buildtime', 1054, 37, 1054, 46),
    woosh.Token(woosh.OP, '=', 1054, 47, 1054, 48),
    woosh.Token(woosh.NAME, 'match', 1054, 49, 1054, 54),
    woosh.Token(woosh.OP, '.', 1054, 54, 1054, 55),
    woosh.Token(woosh.NAME, 'groups', 1054, 55, 1054, 61),
    woosh.Token(woosh.OP, '(', 1054, 61, 1054, 62),
    woosh.Token(woosh.OP, ')', 1054, 62, 1054, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 1054, 63, 1055, 0),
    woosh.Token(woosh.NAME, 'compiler', 1055, 8, 1055, 16),
    woosh.Token(woosh.OP, '=', 1055, 17, 1055, 18),
    woosh.Token(woosh.STRING, '""', 1055, 19, 1055, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1055, 21, 1056, 0),
    woosh.Token(woosh.DEDENT, '    ', 1057, 0, 1057, 4),
    woosh.Token(woosh.NAME, 'else', 1057, 4, 1057, 8),
    woosh.Token(woosh.OP, ':', 1057, 8, 1057, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 1057, 9, 1058, 0),
    woosh.Token(woosh.COMMENT, '# CPython', 1058, 8, 1058, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 1058, 17, 1059, 0),
    woosh.Token(woosh.INDENT, '        ', 1059, 0, 1059, 8),
    woosh.Token(woosh.NAME, 'match', 1059, 8, 1059, 13),
    woosh.Token(woosh.OP, '=', 1059, 14, 1059, 15),
    woosh.Token(woosh.NAME, '_sys_version_parser', 1059, 16, 1059, 35),
    woosh.Token(woosh.OP, '.', 1059, 35, 1059, 36),
    woosh.Token(woosh.NAME, 'match', 1059, 36, 1059, 41),
    woosh.Token(woosh.OP, '(', 1059, 41, 1059, 42),
    woosh.Token(woosh.NAME, 'sys_version', 1059, 42, 1059, 53),
    woosh.Token(woosh.OP, ')', 1059, 53, 1059, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 1059, 54, 1060, 0),
    woosh.Token(woosh.NAME, 'if', 1060, 8, 1060, 10),
    woosh.Token(woosh.NAME, 'match', 1060, 11, 1060, 16),
    woosh.Token(woosh.NAME, 'is', 1060, 17, 1060, 19),
    woosh.Token(woosh.NAME, 'None', 1060, 20, 1060, 24),
    woosh.Token(woosh.OP, ':', 1060, 24, 1060, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1060, 25, 1061, 0),
    woosh.Token(woosh.INDENT, '            ', 1061, 0, 1061, 12),
    woosh.Token(woosh.NAME, 'raise', 1061, 12, 1061, 17),
    woosh.Token(woosh.NAME, 'ValueError', 1061, 18, 1061, 28),
    woosh.Token(woosh.OP, '(', 1061, 28, 1061, 29),
    woosh.Token(woosh.STRING, "'failed to parse CPython sys.version: %s'", 1062, 16, 1062, 57),
    woosh.Token(woosh.OP, '%', 1062, 58, 1062, 59),
    woosh.Token(woosh.NAME, 'repr', 1063, 16, 1063, 20),
    woosh.Token(woosh.OP, '(', 1063, 20, 1063, 21),
    woosh.Token(woosh.NAME, 'sys_version', 1063, 21, 1063, 32),
    woosh.Token(woosh.OP, ')', 1063, 32, 1063, 33),
    woosh.Token(woosh.OP, ')', 1063, 33, 1063, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 1063, 34, 1064, 0),
    woosh.Token(woosh.DEDENT, '        ', 1064, 0, 1064, 8),
    woosh.Token(woosh.NAME, 'version', 1064, 8, 1064, 15),
    woosh.Token(woosh.OP, ',', 1064, 15, 1064, 16),
    woosh.Token(woosh.NAME, 'buildno', 1064, 17, 1064, 24),
    woosh.Token(woosh.OP, ',', 1064, 24, 1064, 25),
    woosh.Token(woosh.NAME, 'builddate', 1064, 26, 1064, 35),
    woosh.Token(woosh.OP, ',', 1064, 35, 1064, 36),
    woosh.Token(woosh.NAME, 'buildtime', 1064, 37, 1064, 46),
    woosh.Token(woosh.OP, ',', 1064, 46, 1064, 47),
    woosh.Token(woosh.NAME, 'compiler', 1064, 48, 1064, 56),
    woosh.Token(woosh.OP, '=', 1064, 57, 1064, 58),
    woosh.Token(woosh.NAME, 'match', 1065, 14, 1065, 19),
    woosh.Token(woosh.OP, '.', 1065, 19, 1065, 20),
    woosh.Token(woosh.NAME, 'groups', 1065, 20, 1065, 26),
    woosh.Token(woosh.OP, '(', 1065, 26, 1065, 27),
    woosh.Token(woosh.OP, ')', 1065, 27, 1065, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1065, 28, 1066, 0),
    woosh.Token(woosh.NAME, 'name', 1066, 8, 1066, 12),
    woosh.Token(woosh.OP, '=', 1066, 13, 1066, 14),
    woosh.Token(woosh.STRING, "'CPython'", 1066, 15, 1066, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 1066, 24, 1067, 0),
    woosh.Token(woosh.NAME, 'if', 1067, 8, 1067, 10),
    woosh.Token(woosh.NAME, 'builddate', 1067, 11, 1067, 20),
    woosh.Token(woosh.NAME, 'is', 1067, 21, 1067, 23),
    woosh.Token(woosh.NAME, 'None', 1067, 24, 1067, 28),
    woosh.Token(woosh.OP, ':', 1067, 28, 1067, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 1067, 29, 1068, 0),
    woosh.Token(woosh.INDENT, '            ', 1068, 0, 1068, 12),
    woosh.Token(woosh.NAME, 'builddate', 1068, 12, 1068, 21),
    woosh.Token(woosh.OP, '=', 1068, 22, 1068, 23),
    woosh.Token(woosh.STRING, "''", 1068, 24, 1068, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1068, 26, 1069, 0),
    woosh.Token(woosh.DEDENT, '        ', 1069, 0, 1069, 8),
    woosh.Token(woosh.NAME, 'elif', 1069, 8, 1069, 12),
    woosh.Token(woosh.NAME, 'buildtime', 1069, 13, 1069, 22),
    woosh.Token(woosh.OP, ':', 1069, 22, 1069, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 1069, 23, 1070, 0),
    woosh.Token(woosh.INDENT, '            ', 1070, 0, 1070, 12),
    woosh.Token(woosh.NAME, 'builddate', 1070, 12, 1070, 21),
    woosh.Token(woosh.OP, '=', 1070, 22, 1070, 23),
    woosh.Token(woosh.NAME, 'builddate', 1070, 24, 1070, 33),
    woosh.Token(woosh.OP, '+', 1070, 34, 1070, 35),
    woosh.Token(woosh.STRING, "' '", 1070, 36, 1070, 39),
    woosh.Token(woosh.OP, '+', 1070, 40, 1070, 41),
    woosh.Token(woosh.NAME, 'buildtime', 1070, 42, 1070, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 1070, 51, 1071, 0),
    woosh.Token(woosh.DEDENT, '    ', 1072, 0, 1072, 4),
    woosh.Token(woosh.DEDENT, '', 1072, 4, 1072, 4),
    woosh.Token(woosh.NAME, 'if', 1072, 4, 1072, 6),
    woosh.Token(woosh.NAME, 'hasattr', 1072, 7, 1072, 14),
    woosh.Token(woosh.OP, '(', 1072, 14, 1072, 15),
    woosh.Token(woosh.NAME, 'sys', 1072, 15, 1072, 18),
    woosh.Token(woosh.OP, ',', 1072, 18, 1072, 19),
    woosh.Token(woosh.STRING, "'_git'", 1072, 20, 1072, 26),
    woosh.Token(woosh.OP, ')', 1072, 26, 1072, 27),
    woosh.Token(woosh.OP, ':', 1072, 27, 1072, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1072, 28, 1073, 0),
    woosh.Token(woosh.INDENT, '        ', 1073, 0, 1073, 8),
    woosh.Token(woosh.NAME, '_', 1073, 8, 1073, 9),
    woosh.Token(woosh.OP, ',', 1073, 9, 1073, 10),
    woosh.Token(woosh.NAME, 'branch', 1073, 11, 1073, 17),
    woosh.Token(woosh.OP, ',', 1073, 17, 1073, 18),
    woosh.Token(woosh.NAME, 'revision', 1073, 19, 1073, 27),
    woosh.Token(woosh.OP, '=', 1073, 28, 1073, 29),
    woosh.Token(woosh.NAME, 'sys', 1073, 30, 1073, 33),
    woosh.Token(woosh.OP, '.', 1073, 33, 1073, 34),
    woosh.Token(woosh.NAME, '_git', 1073, 34, 1073, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 1073, 38, 1074, 0),
    woosh.Token(woosh.DEDENT, '    ', 1074, 0, 1074, 4),
    woosh.Token(woosh.NAME, 'elif', 1074, 4, 1074, 8),
    woosh.Token(woosh.NAME, 'hasattr', 1074, 9, 1074, 16),
    woosh.Token(woosh.OP, '(', 1074, 16, 1074, 17),
    woosh.Token(woosh.NAME, 'sys', 1074, 17, 1074, 20),
    woosh.Token(woosh.OP, ',', 1074, 20, 1074, 21),
    woosh.Token(woosh.STRING, "'_mercurial'", 1074, 22, 1074, 34),
    woosh.Token(woosh.OP, ')', 1074, 34, 1074, 35),
    woosh.Token(woosh.OP, ':', 1074, 35, 1074, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 1074, 36, 1075, 0),
    woosh.Token(woosh.INDENT, '        ', 1075, 0, 1075, 8),
    woosh.Token(woosh.NAME, '_', 1075, 8, 1075, 9),
    woosh.Token(woosh.OP, ',', 1075, 9, 1075, 10),
    woosh.Token(woosh.NAME, 'branch', 1075, 11, 1075, 17),
    woosh.Token(woosh.OP, ',', 1075, 17, 1075, 18),
    woosh.Token(woosh.NAME, 'revision', 1075, 19, 1075, 27),
    woosh.Token(woosh.OP, '=', 1075, 28, 1075, 29),
    woosh.Token(woosh.NAME, 'sys', 1075, 30, 1075, 33),
    woosh.Token(woosh.OP, '.', 1075, 33, 1075, 34),
    woosh.Token(woosh.NAME, '_mercurial', 1075, 34, 1075, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 1075, 44, 1076, 0),
    woosh.Token(woosh.DEDENT, '    ', 1076, 0, 1076, 4),
    woosh.Token(woosh.NAME, 'else', 1076, 4, 1076, 8),
    woosh.Token(woosh.OP, ':', 1076, 8, 1076, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 1076, 9, 1077, 0),
    woosh.Token(woosh.INDENT, '        ', 1077, 0, 1077, 8),
    woosh.Token(woosh.NAME, 'branch', 1077, 8, 1077, 14),
    woosh.Token(woosh.OP, '=', 1077, 15, 1077, 16),
    woosh.Token(woosh.STRING, "''", 1077, 17, 1077, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 1077, 19, 1078, 0),
    woosh.Token(woosh.NAME, 'revision', 1078, 8, 1078, 16),
    woosh.Token(woosh.OP, '=', 1078, 17, 1078, 18),
    woosh.Token(woosh.STRING, "''", 1078, 19, 1078, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1078, 21, 1079, 0),
    woosh.Token(woosh.COMMENT, '# Add the patchlevel version if missing', 1080, 4, 1080, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 1080, 43, 1081, 0),
    woosh.Token(woosh.DEDENT, '    ', 1081, 0, 1081, 4),
    woosh.Token(woosh.NAME, 'l', 1081, 4, 1081, 5),
    woosh.Token(woosh.OP, '=', 1081, 6, 1081, 7),
    woosh.Token(woosh.NAME, 'version', 1081, 8, 1081, 15),
    woosh.Token(woosh.OP, '.', 1081, 15, 1081, 16),
    woosh.Token(woosh.NAME, 'split', 1081, 16, 1081, 21),
    woosh.Token(woosh.OP, '(', 1081, 21, 1081, 22),
    woosh.Token(woosh.STRING, "'.'", 1081, 22, 1081, 25),
    woosh.Token(woosh.OP, ')', 1081, 25, 1081, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1081, 26, 1082, 0),
    woosh.Token(woosh.NAME, 'if', 1082, 4, 1082, 6),
    woosh.Token(woosh.NAME, 'len', 1082, 7, 1082, 10),
    woosh.Token(woosh.OP, '(', 1082, 10, 1082, 11),
    woosh.Token(woosh.NAME, 'l', 1082, 11, 1082, 12),
    woosh.Token(woosh.OP, ')', 1082, 12, 1082, 13),
    woosh.Token(woosh.OP, '==', 1082, 14, 1082, 16),
    woosh.Token(woosh.NUMBER, '2', 1082, 17, 1082, 18),
    woosh.Token(woosh.OP, ':', 1082, 18, 1082, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 1082, 19, 1083, 0),
    woosh.Token(woosh.INDENT, '        ', 1083, 0, 1083, 8),
    woosh.Token(woosh.NAME, 'l', 1083, 8, 1083, 9),
    woosh.Token(woosh.OP, '.', 1083, 9, 1083, 10),
    woosh.Token(woosh.NAME, 'append', 1083, 10, 1083, 16),
    woosh.Token(woosh.OP, '(', 1083, 16, 1083, 17),
    woosh.Token(woosh.STRING, "'0'", 1083, 17, 1083, 20),
    woosh.Token(woosh.OP, ')', 1083, 20, 1083, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1083, 21, 1084, 0),
    woosh.Token(woosh.NAME, 'version', 1084, 8, 1084, 15),
    woosh.Token(woosh.OP, '=', 1084, 16, 1084, 17),
    woosh.Token(woosh.STRING, "'.'", 1084, 18, 1084, 21),
    woosh.Token(woosh.OP, '.', 1084, 21, 1084, 22),
    woosh.Token(woosh.NAME, 'join', 1084, 22, 1084, 26),
    woosh.Token(woosh.OP, '(', 1084, 26, 1084, 27),
    woosh.Token(woosh.NAME, 'l', 1084, 27, 1084, 28),
    woosh.Token(woosh.OP, ')', 1084, 28, 1084, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 1084, 29, 1085, 0),
    woosh.Token(woosh.COMMENT, '# Build and cache the result', 1086, 4, 1086, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 1086, 32, 1087, 0),
    woosh.Token(woosh.DEDENT, '    ', 1087, 0, 1087, 4),
    woosh.Token(woosh.NAME, 'result', 1087, 4, 1087, 10),
    woosh.Token(woosh.OP, '=', 1087, 11, 1087, 12),
    woosh.Token(woosh.OP, '(', 1087, 13, 1087, 14),
    woosh.Token(woosh.NAME, 'name', 1087, 14, 1087, 18),
    woosh.Token(woosh.OP, ',', 1087, 18, 1087, 19),
    woosh.Token(woosh.NAME, 'version', 1087, 20, 1087, 27),
    woosh.Token(woosh.OP, ',', 1087, 27, 1087, 28),
    woosh.Token(woosh.NAME, 'branch', 1087, 29, 1087, 35),
    woosh.Token(woosh.OP, ',', 1087, 35, 1087, 36),
    woosh.Token(woosh.NAME, 'revision', 1087, 37, 1087, 45),
    woosh.Token(woosh.OP, ',', 1087, 45, 1087, 46),
    woosh.Token(woosh.NAME, 'buildno', 1087, 47, 1087, 54),
    woosh.Token(woosh.OP, ',', 1087, 54, 1087, 55),
    woosh.Token(woosh.NAME, 'builddate', 1087, 56, 1087, 65),
    woosh.Token(woosh.OP, ',', 1087, 65, 1087, 66),
    woosh.Token(woosh.NAME, 'compiler', 1087, 67, 1087, 75),
    woosh.Token(woosh.OP, ')', 1087, 75, 1087, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 1087, 76, 1088, 0),
    woosh.Token(woosh.NAME, '_sys_version_cache', 1088, 4, 1088, 22),
    woosh.Token(woosh.OP, '[', 1088, 22, 1088, 23),
    woosh.Token(woosh.NAME, 'sys_version', 1088, 23, 1088, 34),
    woosh.Token(woosh.OP, ']', 1088, 34, 1088, 35),
    woosh.Token(woosh.OP, '=', 1088, 36, 1088, 37),
    woosh.Token(woosh.NAME, 'result', 1088, 38, 1088, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 1088, 44, 1089, 0),
    woosh.Token(woosh.NAME, 'return', 1089, 4, 1089, 10),
    woosh.Token(woosh.NAME, 'result', 1089, 11, 1089, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 1089, 17, 1090, 0),
    woosh.Token(woosh.DEDENT, '', 1091, 0, 1091, 0),
    woosh.Token(woosh.NAME, 'def', 1091, 0, 1091, 3),
    woosh.Token(woosh.NAME, 'python_implementation', 1091, 4, 1091, 25),
    woosh.Token(woosh.OP, '(', 1091, 25, 1091, 26),
    woosh.Token(woosh.OP, ')', 1091, 26, 1091, 27),
    woosh.Token(woosh.OP, ':', 1091, 27, 1091, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1091, 28, 1092, 0),
    woosh.Token(woosh.INDENT, '    ', 1093, 0, 1093, 4),
    woosh.Token(woosh.STRING, '""" Returns a string identifying the Python implementation.\r\n\r\n        Currently, the following implementations are identified:\r\n          \'CPython\' (C implementation of Python),\r\n          \'IronPython\' (.NET implementation of Python),\r\n          \'Jython\' (Java implementation of Python),\r\n          \'PyPy\' (Python implementation of Python).\r\n\r\n    """', 1093, 4, 1101, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1101, 7, 1102, 0),
    woosh.Token(woosh.NAME, 'return', 1102, 4, 1102, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1102, 11, 1102, 23),
    woosh.Token(woosh.OP, '(', 1102, 23, 1102, 24),
    woosh.Token(woosh.OP, ')', 1102, 24, 1102, 25),
    woosh.Token(woosh.OP, '[', 1102, 25, 1102, 26),
    woosh.Token(woosh.NUMBER, '0', 1102, 26, 1102, 27),
    woosh.Token(woosh.OP, ']', 1102, 27, 1102, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1102, 28, 1103, 0),
    woosh.Token(woosh.DEDENT, '', 1104, 0, 1104, 0),
    woosh.Token(woosh.NAME, 'def', 1104, 0, 1104, 3),
    woosh.Token(woosh.NAME, 'python_version', 1104, 4, 1104, 18),
    woosh.Token(woosh.OP, '(', 1104, 18, 1104, 19),
    woosh.Token(woosh.OP, ')', 1104, 19, 1104, 20),
    woosh.Token(woosh.OP, ':', 1104, 20, 1104, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1104, 21, 1105, 0),
    woosh.Token(woosh.INDENT, '    ', 1106, 0, 1106, 4),
    woosh.Token(woosh.STRING, '""" Returns the Python version as string \'major.minor.patchlevel\'\r\n\r\n        Note that unlike the Python sys.version, the returned value\r\n        will always include the patchlevel (it defaults to 0).\r\n\r\n    """', 1106, 4, 1111, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1111, 7, 1112, 0),
    woosh.Token(woosh.NAME, 'return', 1112, 4, 1112, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1112, 11, 1112, 23),
    woosh.Token(woosh.OP, '(', 1112, 23, 1112, 24),
    woosh.Token(woosh.OP, ')', 1112, 24, 1112, 25),
    woosh.Token(woosh.OP, '[', 1112, 25, 1112, 26),
    woosh.Token(woosh.NUMBER, '1', 1112, 26, 1112, 27),
    woosh.Token(woosh.OP, ']', 1112, 27, 1112, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1112, 28, 1113, 0),
    woosh.Token(woosh.DEDENT, '', 1114, 0, 1114, 0),
    woosh.Token(woosh.NAME, 'def', 1114, 0, 1114, 3),
    woosh.Token(woosh.NAME, 'python_version_tuple', 1114, 4, 1114, 24),
    woosh.Token(woosh.OP, '(', 1114, 24, 1114, 25),
    woosh.Token(woosh.OP, ')', 1114, 25, 1114, 26),
    woosh.Token(woosh.OP, ':', 1114, 26, 1114, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 1114, 27, 1115, 0),
    woosh.Token(woosh.INDENT, '    ', 1116, 0, 1116, 4),
    woosh.Token(woosh.STRING, '""" Returns the Python version as tuple (major, minor, patchlevel)\r\n        of strings.\r\n\r\n        Note that unlike the Python sys.version, the returned value\r\n        will always include the patchlevel (it defaults to 0).\r\n\r\n    """', 1116, 4, 1122, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1122, 7, 1123, 0),
    woosh.Token(woosh.NAME, 'return', 1123, 4, 1123, 10),
    woosh.Token(woosh.NAME, 'tuple', 1123, 11, 1123, 16),
    woosh.Token(woosh.OP, '(', 1123, 16, 1123, 17),
    woosh.Token(woosh.NAME, '_sys_version', 1123, 17, 1123, 29),
    woosh.Token(woosh.OP, '(', 1123, 29, 1123, 30),
    woosh.Token(woosh.OP, ')', 1123, 30, 1123, 31),
    woosh.Token(woosh.OP, '[', 1123, 31, 1123, 32),
    woosh.Token(woosh.NUMBER, '1', 1123, 32, 1123, 33),
    woosh.Token(woosh.OP, ']', 1123, 33, 1123, 34),
    woosh.Token(woosh.OP, '.', 1123, 34, 1123, 35),
    woosh.Token(woosh.NAME, 'split', 1123, 35, 1123, 40),
    woosh.Token(woosh.OP, '(', 1123, 40, 1123, 41),
    woosh.Token(woosh.STRING, "'.'", 1123, 41, 1123, 44),
    woosh.Token(woosh.OP, ')', 1123, 44, 1123, 45),
    woosh.Token(woosh.OP, ')', 1123, 45, 1123, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 1123, 46, 1124, 0),
    woosh.Token(woosh.DEDENT, '', 1125, 0, 1125, 0),
    woosh.Token(woosh.NAME, 'def', 1125, 0, 1125, 3),
    woosh.Token(woosh.NAME, 'python_branch', 1125, 4, 1125, 17),
    woosh.Token(woosh.OP, '(', 1125, 17, 1125, 18),
    woosh.Token(woosh.OP, ')', 1125, 18, 1125, 19),
    woosh.Token(woosh.OP, ':', 1125, 19, 1125, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 1125, 20, 1126, 0),
    woosh.Token(woosh.INDENT, '    ', 1127, 0, 1127, 4),
    woosh.Token(woosh.STRING, '""" Returns a string identifying the Python implementation\r\n        branch.\r\n\r\n        For CPython this is the SCM branch from which the\r\n        Python binary was built.\r\n\r\n        If not available, an empty string is returned.\r\n\r\n    """', 1127, 4, 1135, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1135, 7, 1136, 0),
    woosh.Token(woosh.NAME, 'return', 1137, 4, 1137, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1137, 11, 1137, 23),
    woosh.Token(woosh.OP, '(', 1137, 23, 1137, 24),
    woosh.Token(woosh.OP, ')', 1137, 24, 1137, 25),
    woosh.Token(woosh.OP, '[', 1137, 25, 1137, 26),
    woosh.Token(woosh.NUMBER, '2', 1137, 26, 1137, 27),
    woosh.Token(woosh.OP, ']', 1137, 27, 1137, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1137, 28, 1138, 0),
    woosh.Token(woosh.DEDENT, '', 1139, 0, 1139, 0),
    woosh.Token(woosh.NAME, 'def', 1139, 0, 1139, 3),
    woosh.Token(woosh.NAME, 'python_revision', 1139, 4, 1139, 19),
    woosh.Token(woosh.OP, '(', 1139, 19, 1139, 20),
    woosh.Token(woosh.OP, ')', 1139, 20, 1139, 21),
    woosh.Token(woosh.OP, ':', 1139, 21, 1139, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1139, 22, 1140, 0),
    woosh.Token(woosh.INDENT, '    ', 1141, 0, 1141, 4),
    woosh.Token(woosh.STRING, '""" Returns a string identifying the Python implementation\r\n        revision.\r\n\r\n        For CPython this is the SCM revision from which the\r\n        Python binary was built.\r\n\r\n        If not available, an empty string is returned.\r\n\r\n    """', 1141, 4, 1149, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1149, 7, 1150, 0),
    woosh.Token(woosh.NAME, 'return', 1150, 4, 1150, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1150, 11, 1150, 23),
    woosh.Token(woosh.OP, '(', 1150, 23, 1150, 24),
    woosh.Token(woosh.OP, ')', 1150, 24, 1150, 25),
    woosh.Token(woosh.OP, '[', 1150, 25, 1150, 26),
    woosh.Token(woosh.NUMBER, '3', 1150, 26, 1150, 27),
    woosh.Token(woosh.OP, ']', 1150, 27, 1150, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1150, 28, 1151, 0),
    woosh.Token(woosh.DEDENT, '', 1152, 0, 1152, 0),
    woosh.Token(woosh.NAME, 'def', 1152, 0, 1152, 3),
    woosh.Token(woosh.NAME, 'python_build', 1152, 4, 1152, 16),
    woosh.Token(woosh.OP, '(', 1152, 16, 1152, 17),
    woosh.Token(woosh.OP, ')', 1152, 17, 1152, 18),
    woosh.Token(woosh.OP, ':', 1152, 18, 1152, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 1152, 19, 1153, 0),
    woosh.Token(woosh.INDENT, '    ', 1154, 0, 1154, 4),
    woosh.Token(woosh.STRING, '""" Returns a tuple (buildno, builddate) stating the Python\r\n        build number and date as strings.\r\n\r\n    """', 1154, 4, 1157, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1157, 7, 1158, 0),
    woosh.Token(woosh.NAME, 'return', 1158, 4, 1158, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1158, 11, 1158, 23),
    woosh.Token(woosh.OP, '(', 1158, 23, 1158, 24),
    woosh.Token(woosh.OP, ')', 1158, 24, 1158, 25),
    woosh.Token(woosh.OP, '[', 1158, 25, 1158, 26),
    woosh.Token(woosh.NUMBER, '4', 1158, 26, 1158, 27),
    woosh.Token(woosh.OP, ':', 1158, 27, 1158, 28),
    woosh.Token(woosh.NUMBER, '6', 1158, 28, 1158, 29),
    woosh.Token(woosh.OP, ']', 1158, 29, 1158, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 1158, 30, 1159, 0),
    woosh.Token(woosh.DEDENT, '', 1160, 0, 1160, 0),
    woosh.Token(woosh.NAME, 'def', 1160, 0, 1160, 3),
    woosh.Token(woosh.NAME, 'python_compiler', 1160, 4, 1160, 19),
    woosh.Token(woosh.OP, '(', 1160, 19, 1160, 20),
    woosh.Token(woosh.OP, ')', 1160, 20, 1160, 21),
    woosh.Token(woosh.OP, ':', 1160, 21, 1160, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1160, 22, 1161, 0),
    woosh.Token(woosh.INDENT, '    ', 1162, 0, 1162, 4),
    woosh.Token(woosh.STRING, '""" Returns a string identifying the compiler used for compiling\r\n        Python.\r\n\r\n    """', 1162, 4, 1165, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1165, 7, 1166, 0),
    woosh.Token(woosh.NAME, 'return', 1166, 4, 1166, 10),
    woosh.Token(woosh.NAME, '_sys_version', 1166, 11, 1166, 23),
    woosh.Token(woosh.OP, '(', 1166, 23, 1166, 24),
    woosh.Token(woosh.OP, ')', 1166, 24, 1166, 25),
    woosh.Token(woosh.OP, '[', 1166, 25, 1166, 26),
    woosh.Token(woosh.NUMBER, '6', 1166, 26, 1166, 27),
    woosh.Token(woosh.OP, ']', 1166, 27, 1166, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1166, 28, 1167, 0),
    woosh.Token(woosh.COMMENT, '### The Opus Magnum of platform strings :-)', 1168, 0, 1168, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 1168, 43, 1169, 0),
    woosh.Token(woosh.DEDENT, '', 1170, 0, 1170, 0),
    woosh.Token(woosh.NAME, '_platform_cache', 1170, 0, 1170, 15),
    woosh.Token(woosh.OP, '=', 1170, 16, 1170, 17),
    woosh.Token(woosh.OP, '{', 1170, 18, 1170, 19),
    woosh.Token(woosh.OP, '}', 1170, 19, 1170, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 1170, 20, 1171, 0),
    woosh.Token(woosh.NAME, 'def', 1172, 0, 1172, 3),
    woosh.Token(woosh.NAME, 'platform', 1172, 4, 1172, 12),
    woosh.Token(woosh.OP, '(', 1172, 12, 1172, 13),
    woosh.Token(woosh.NAME, 'aliased', 1172, 13, 1172, 20),
    woosh.Token(woosh.OP, '=', 1172, 20, 1172, 21),
    woosh.Token(woosh.NUMBER, '0', 1172, 21, 1172, 22),
    woosh.Token(woosh.OP, ',', 1172, 22, 1172, 23),
    woosh.Token(woosh.NAME, 'terse', 1172, 24, 1172, 29),
    woosh.Token(woosh.OP, '=', 1172, 29, 1172, 30),
    woosh.Token(woosh.NUMBER, '0', 1172, 30, 1172, 31),
    woosh.Token(woosh.OP, ')', 1172, 31, 1172, 32),
    woosh.Token(woosh.OP, ':', 1172, 32, 1172, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 1172, 33, 1173, 0),
    woosh.Token(woosh.INDENT, '    ', 1174, 0, 1174, 4),
    woosh.Token(woosh.STRING, '""" Returns a single string identifying the underlying platform\r\n        with as much useful information as possible (but no more :).\r\n\r\n        The output is intended to be human readable rather than\r\n        machine parseable. It may look different on different\r\n        platforms and this is intended.\r\n\r\n        If "aliased" is true, the function will use aliases for\r\n        various platforms that report system names which differ from\r\n        their common names, e.g. SunOS will be reported as\r\n        Solaris. The system_alias() function is used to implement\r\n        this.\r\n\r\n        Setting terse to true causes the function to return only the\r\n        absolute minimum information needed to identify the platform.\r\n\r\n    """', 1174, 4, 1190, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 1190, 7, 1191, 0),
    woosh.Token(woosh.NAME, 'result', 1191, 4, 1191, 10),
    woosh.Token(woosh.OP, '=', 1191, 11, 1191, 12),
    woosh.Token(woosh.NAME, '_platform_cache', 1191, 13, 1191, 28),
    woosh.Token(woosh.OP, '.', 1191, 28, 1191, 29),
    woosh.Token(woosh.NAME, 'get', 1191, 29, 1191, 32),
    woosh.Token(woosh.OP, '(', 1191, 32, 1191, 33),
    woosh.Token(woosh.OP, '(', 1191, 33, 1191, 34),
    woosh.Token(woosh.NAME, 'aliased', 1191, 34, 1191, 41),
    woosh.Token(woosh.OP, ',', 1191, 41, 1191, 42),
    woosh.Token(woosh.NAME, 'terse', 1191, 43, 1191, 48),
    woosh.Token(woosh.OP, ')', 1191, 48, 1191, 49),
    woosh.Token(woosh.OP, ',', 1191, 49, 1191, 50),
    woosh.Token(woosh.NAME, 'None', 1191, 51, 1191, 55),
    woosh.Token(woosh.OP, ')', 1191, 55, 1191, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 1191, 56, 1192, 0),
    woosh.Token(woosh.NAME, 'if', 1192, 4, 1192, 6),
    woosh.Token(woosh.NAME, 'result', 1192, 7, 1192, 13),
    woosh.Token(woosh.NAME, 'is', 1192, 14, 1192, 16),
    woosh.Token(woosh.NAME, 'not', 1192, 17, 1192, 20),
    woosh.Token(woosh.NAME, 'None', 1192, 21, 1192, 25),
    woosh.Token(woosh.OP, ':', 1192, 25, 1192, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1192, 26, 1193, 0),
    woosh.Token(woosh.INDENT, '        ', 1193, 0, 1193, 8),
    woosh.Token(woosh.NAME, 'return', 1193, 8, 1193, 14),
    woosh.Token(woosh.NAME, 'result', 1193, 15, 1193, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 1193, 21, 1194, 0),
    woosh.Token(woosh.COMMENT, '# Get uname information and then apply platform specific cosmetics', 1195, 4, 1195, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 1195, 70, 1196, 0),
    woosh.Token(woosh.COMMENT, '# to it...', 1196, 4, 1196, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 1196, 14, 1197, 0),
    woosh.Token(woosh.DEDENT, '    ', 1197, 0, 1197, 4),
    woosh.Token(woosh.NAME, 'system', 1197, 4, 1197, 10),
    woosh.Token(woosh.OP, ',', 1197, 10, 1197, 11),
    woosh.Token(woosh.NAME, 'node', 1197, 12, 1197, 16),
    woosh.Token(woosh.OP, ',', 1197, 16, 1197, 17),
    woosh.Token(woosh.NAME, 'release', 1197, 18, 1197, 25),
    woosh.Token(woosh.OP, ',', 1197, 25, 1197, 26),
    woosh.Token(woosh.NAME, 'version', 1197, 27, 1197, 34),
    woosh.Token(woosh.OP, ',', 1197, 34, 1197, 35),
    woosh.Token(woosh.NAME, 'machine', 1197, 36, 1197, 43),
    woosh.Token(woosh.OP, ',', 1197, 43, 1197, 44),
    woosh.Token(woosh.NAME, 'processor', 1197, 45, 1197, 54),
    woosh.Token(woosh.OP, '=', 1197, 55, 1197, 56),
    woosh.Token(woosh.NAME, 'uname', 1197, 57, 1197, 62),
    woosh.Token(woosh.OP, '(', 1197, 62, 1197, 63),
    woosh.Token(woosh.OP, ')', 1197, 63, 1197, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 1197, 64, 1198, 0),
    woosh.Token(woosh.NAME, 'if', 1198, 4, 1198, 6),
    woosh.Token(woosh.NAME, 'machine', 1198, 7, 1198, 14),
    woosh.Token(woosh.OP, '==', 1198, 15, 1198, 17),
    woosh.Token(woosh.NAME, 'processor', 1198, 18, 1198, 27),
    woosh.Token(woosh.OP, ':', 1198, 27, 1198, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1198, 28, 1199, 0),
    woosh.Token(woosh.INDENT, '        ', 1199, 0, 1199, 8),
    woosh.Token(woosh.NAME, 'processor', 1199, 8, 1199, 17),
    woosh.Token(woosh.OP, '=', 1199, 18, 1199, 19),
    woosh.Token(woosh.STRING, "''", 1199, 20, 1199, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1199, 22, 1200, 0),
    woosh.Token(woosh.DEDENT, '    ', 1200, 0, 1200, 4),
    woosh.Token(woosh.NAME, 'if', 1200, 4, 1200, 6),
    woosh.Token(woosh.NAME, 'aliased', 1200, 7, 1200, 14),
    woosh.Token(woosh.OP, ':', 1200, 14, 1200, 15),
    woosh.Token(woosh.NEWLINE, '\r\n', 1200, 15, 1201, 0),
    woosh.Token(woosh.INDENT, '        ', 1201, 0, 1201, 8),
    woosh.Token(woosh.NAME, 'system', 1201, 8, 1201, 14),
    woosh.Token(woosh.OP, ',', 1201, 14, 1201, 15),
    woosh.Token(woosh.NAME, 'release', 1201, 16, 1201, 23),
    woosh.Token(woosh.OP, ',', 1201, 23, 1201, 24),
    woosh.Token(woosh.NAME, 'version', 1201, 25, 1201, 32),
    woosh.Token(woosh.OP, '=', 1201, 33, 1201, 34),
    woosh.Token(woosh.NAME, 'system_alias', 1201, 35, 1201, 47),
    woosh.Token(woosh.OP, '(', 1201, 47, 1201, 48),
    woosh.Token(woosh.NAME, 'system', 1201, 48, 1201, 54),
    woosh.Token(woosh.OP, ',', 1201, 54, 1201, 55),
    woosh.Token(woosh.NAME, 'release', 1201, 56, 1201, 63),
    woosh.Token(woosh.OP, ',', 1201, 63, 1201, 64),
    woosh.Token(woosh.NAME, 'version', 1201, 65, 1201, 72),
    woosh.Token(woosh.OP, ')', 1201, 72, 1201, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 1201, 73, 1202, 0),
    woosh.Token(woosh.DEDENT, '    ', 1203, 0, 1203, 4),
    woosh.Token(woosh.NAME, 'if', 1203, 4, 1203, 6),
    woosh.Token(woosh.NAME, 'system', 1203, 7, 1203, 13),
    woosh.Token(woosh.OP, '==', 1203, 14, 1203, 16),
    woosh.Token(woosh.STRING, "'Darwin'", 1203, 17, 1203, 25),
    woosh.Token(woosh.OP, ':', 1203, 25, 1203, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1203, 26, 1204, 0),
    woosh.Token(woosh.COMMENT, '# macOS (darwin kernel)', 1204, 8, 1204, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 1204, 31, 1205, 0),
    woosh.Token(woosh.INDENT, '        ', 1205, 0, 1205, 8),
    woosh.Token(woosh.NAME, 'macos_release', 1205, 8, 1205, 21),
    woosh.Token(woosh.OP, '=', 1205, 22, 1205, 23),
    woosh.Token(woosh.NAME, 'mac_ver', 1205, 24, 1205, 31),
    woosh.Token(woosh.OP, '(', 1205, 31, 1205, 32),
    woosh.Token(woosh.OP, ')', 1205, 32, 1205, 33),
    woosh.Token(woosh.OP, '[', 1205, 33, 1205, 34),
    woosh.Token(woosh.NUMBER, '0', 1205, 34, 1205, 35),
    woosh.Token(woosh.OP, ']', 1205, 35, 1205, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 1205, 36, 1206, 0),
    woosh.Token(woosh.NAME, 'if', 1206, 8, 1206, 10),
    woosh.Token(woosh.NAME, 'macos_release', 1206, 11, 1206, 24),
    woosh.Token(woosh.OP, ':', 1206, 24, 1206, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1206, 25, 1207, 0),
    woosh.Token(woosh.INDENT, '            ', 1207, 0, 1207, 12),
    woosh.Token(woosh.NAME, 'system', 1207, 12, 1207, 18),
    woosh.Token(woosh.OP, '=', 1207, 19, 1207, 20),
    woosh.Token(woosh.STRING, "'macOS'", 1207, 21, 1207, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 1207, 28, 1208, 0),
    woosh.Token(woosh.NAME, 'release', 1208, 12, 1208, 19),
    woosh.Token(woosh.OP, '=', 1208, 20, 1208, 21),
    woosh.Token(woosh.NAME, 'macos_release', 1208, 22, 1208, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 1208, 35, 1209, 0),
    woosh.Token(woosh.DEDENT, '    ', 1210, 0, 1210, 4),
    woosh.Token(woosh.DEDENT, '', 1210, 4, 1210, 4),
    woosh.Token(woosh.NAME, 'if', 1210, 4, 1210, 6),
    woosh.Token(woosh.NAME, 'system', 1210, 7, 1210, 13),
    woosh.Token(woosh.OP, '==', 1210, 14, 1210, 16),
    woosh.Token(woosh.STRING, "'Windows'", 1210, 17, 1210, 26),
    woosh.Token(woosh.OP, ':', 1210, 26, 1210, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 1210, 27, 1211, 0),
    woosh.Token(woosh.COMMENT, '# MS platforms', 1211, 8, 1211, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 1211, 22, 1212, 0),
    woosh.Token(woosh.INDENT, '        ', 1212, 0, 1212, 8),
    woosh.Token(woosh.NAME, 'rel', 1212, 8, 1212, 11),
    woosh.Token(woosh.OP, ',', 1212, 11, 1212, 12),
    woosh.Token(woosh.NAME, 'vers', 1212, 13, 1212, 17),
    woosh.Token(woosh.OP, ',', 1212, 17, 1212, 18),
    woosh.Token(woosh.NAME, 'csd', 1212, 19, 1212, 22),
    woosh.Token(woosh.OP, ',', 1212, 22, 1212, 23),
    woosh.Token(woosh.NAME, 'ptype', 1212, 24, 1212, 29),
    woosh.Token(woosh.OP, '=', 1212, 30, 1212, 31),
    woosh.Token(woosh.NAME, 'win32_ver', 1212, 32, 1212, 41),
    woosh.Token(woosh.OP, '(', 1212, 41, 1212, 42),
    woosh.Token(woosh.NAME, 'version', 1212, 42, 1212, 49),
    woosh.Token(woosh.OP, ')', 1212, 49, 1212, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 1212, 50, 1213, 0),
    woosh.Token(woosh.NAME, 'if', 1213, 8, 1213, 10),
    woosh.Token(woosh.NAME, 'terse', 1213, 11, 1213, 16),
    woosh.Token(woosh.OP, ':', 1213, 16, 1213, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 1213, 17, 1214, 0),
    woosh.Token(woosh.INDENT, '            ', 1214, 0, 1214, 12),
    woosh.Token(woosh.NAME, 'platform', 1214, 12, 1214, 20),
    woosh.Token(woosh.OP, '=', 1214, 21, 1214, 22),
    woosh.Token(woosh.NAME, '_platform', 1214, 23, 1214, 32),
    woosh.Token(woosh.OP, '(', 1214, 32, 1214, 33),
    woosh.Token(woosh.NAME, 'system', 1214, 33, 1214, 39),
    woosh.Token(woosh.OP, ',', 1214, 39, 1214, 40),
    woosh.Token(woosh.NAME, 'release', 1214, 41, 1214, 48),
    woosh.Token(woosh.OP, ')', 1214, 48, 1214, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 1214, 49, 1215, 0),
    woosh.Token(woosh.DEDENT, '        ', 1215, 0, 1215, 8),
    woosh.Token(woosh.NAME, 'else', 1215, 8, 1215, 12),
    woosh.Token(woosh.OP, ':', 1215, 12, 1215, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 1215, 13, 1216, 0),
    woosh.Token(woosh.INDENT, '            ', 1216, 0, 1216, 12),
    woosh.Token(woosh.NAME, 'platform', 1216, 12, 1216, 20),
    woosh.Token(woosh.OP, '=', 1216, 21, 1216, 22),
    woosh.Token(woosh.NAME, '_platform', 1216, 23, 1216, 32),
    woosh.Token(woosh.OP, '(', 1216, 32, 1216, 33),
    woosh.Token(woosh.NAME, 'system', 1216, 33, 1216, 39),
    woosh.Token(woosh.OP, ',', 1216, 39, 1216, 40),
    woosh.Token(woosh.NAME, 'release', 1216, 41, 1216, 48),
    woosh.Token(woosh.OP, ',', 1216, 48, 1216, 49),
    woosh.Token(woosh.NAME, 'version', 1216, 50, 1216, 57),
    woosh.Token(woosh.OP, ',', 1216, 57, 1216, 58),
    woosh.Token(woosh.NAME, 'csd', 1216, 59, 1216, 62),
    woosh.Token(woosh.OP, ')', 1216, 62, 1216, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 1216, 63, 1217, 0),
    woosh.Token(woosh.DEDENT, '    ', 1218, 0, 1218, 4),
    woosh.Token(woosh.DEDENT, '', 1218, 4, 1218, 4),
    woosh.Token(woosh.NAME, 'elif', 1218, 4, 1218, 8),
    woosh.Token(woosh.NAME, 'system', 1218, 9, 1218, 15),
    woosh.Token(woosh.NAME, 'in', 1218, 16, 1218, 18),
    woosh.Token(woosh.OP, '(', 1218, 19, 1218, 20),
    woosh.Token(woosh.STRING, "'Linux'", 1218, 20, 1218, 27),
    woosh.Token(woosh.OP, ',', 1218, 27, 1218, 28),
    woosh.Token(woosh.OP, ')', 1218, 28, 1218, 29),
    woosh.Token(woosh.OP, ':', 1218, 29, 1218, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 1218, 30, 1219, 0),
    woosh.Token(woosh.COMMENT, '# check for libc vs. glibc', 1219, 8, 1219, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 1219, 34, 1220, 0),
    woosh.Token(woosh.INDENT, '        ', 1220, 0, 1220, 8),
    woosh.Token(woosh.NAME, 'libcname', 1220, 8, 1220, 16),
    woosh.Token(woosh.OP, ',', 1220, 16, 1220, 17),
    woosh.Token(woosh.NAME, 'libcversion', 1220, 18, 1220, 29),
    woosh.Token(woosh.OP, '=', 1220, 30, 1220, 31),
    woosh.Token(woosh.NAME, 'libc_ver', 1220, 32, 1220, 40),
    woosh.Token(woosh.OP, '(', 1220, 40, 1220, 41),
    woosh.Token(woosh.OP, ')', 1220, 41, 1220, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 1220, 42, 1221, 0),
    woosh.Token(woosh.NAME, 'platform', 1221, 8, 1221, 16),
    woosh.Token(woosh.OP, '=', 1221, 17, 1221, 18),
    woosh.Token(woosh.NAME, '_platform', 1221, 19, 1221, 28),
    woosh.Token(woosh.OP, '(', 1221, 28, 1221, 29),
    woosh.Token(woosh.NAME, 'system', 1221, 29, 1221, 35),
    woosh.Token(woosh.OP, ',', 1221, 35, 1221, 36),
    woosh.Token(woosh.NAME, 'release', 1221, 37, 1221, 44),
    woosh.Token(woosh.OP, ',', 1221, 44, 1221, 45),
    woosh.Token(woosh.NAME, 'machine', 1221, 46, 1221, 53),
    woosh.Token(woosh.OP, ',', 1221, 53, 1221, 54),
    woosh.Token(woosh.NAME, 'processor', 1221, 55, 1221, 64),
    woosh.Token(woosh.OP, ',', 1221, 64, 1221, 65),
    woosh.Token(woosh.STRING, "'with'", 1222, 29, 1222, 35),
    woosh.Token(woosh.OP, ',', 1222, 35, 1222, 36),
    woosh.Token(woosh.NAME, 'libcname', 1223, 29, 1223, 37),
    woosh.Token(woosh.OP, '+', 1223, 37, 1223, 38),
    woosh.Token(woosh.NAME, 'libcversion', 1223, 38, 1223, 49),
    woosh.Token(woosh.OP, ')', 1223, 49, 1223, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 1223, 50, 1224, 0),
    woosh.Token(woosh.DEDENT, '    ', 1224, 0, 1224, 4),
    woosh.Token(woosh.NAME, 'elif', 1224, 4, 1224, 8),
    woosh.Token(woosh.NAME, 'system', 1224, 9, 1224, 15),
    woosh.Token(woosh.OP, '==', 1224, 16, 1224, 18),
    woosh.Token(woosh.STRING, "'Java'", 1224, 19, 1224, 25),
    woosh.Token(woosh.OP, ':', 1224, 25, 1224, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1224, 26, 1225, 0),
    woosh.Token(woosh.COMMENT, '# Java platforms', 1225, 8, 1225, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 1225, 24, 1226, 0),
    woosh.Token(woosh.INDENT, '        ', 1226, 0, 1226, 8),
    woosh.Token(woosh.NAME, 'r', 1226, 8, 1226, 9),
    woosh.Token(woosh.OP, ',', 1226, 9, 1226, 10),
    woosh.Token(woosh.NAME, 'v', 1226, 11, 1226, 12),
    woosh.Token(woosh.OP, ',', 1226, 12, 1226, 13),
    woosh.Token(woosh.NAME, 'vminfo', 1226, 14, 1226, 20),
    woosh.Token(woosh.OP, ',', 1226, 20, 1226, 21),
    woosh.Token(woosh.OP, '(', 1226, 22, 1226, 23),
    woosh.Token(woosh.NAME, 'os_name', 1226, 23, 1226, 30),
    woosh.Token(woosh.OP, ',', 1226, 30, 1226, 31),
    woosh.Token(woosh.NAME, 'os_version', 1226, 32, 1226, 42),
    woosh.Token(woosh.OP, ',', 1226, 42, 1226, 43),
    woosh.Token(woosh.NAME, 'os_arch', 1226, 44, 1226, 51),
    woosh.Token(woosh.OP, ')', 1226, 51, 1226, 52),
    woosh.Token(woosh.OP, '=', 1226, 53, 1226, 54),
    woosh.Token(woosh.NAME, 'java_ver', 1226, 55, 1226, 63),
    woosh.Token(woosh.OP, '(', 1226, 63, 1226, 64),
    woosh.Token(woosh.OP, ')', 1226, 64, 1226, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 1226, 65, 1227, 0),
    woosh.Token(woosh.NAME, 'if', 1227, 8, 1227, 10),
    woosh.Token(woosh.NAME, 'terse', 1227, 11, 1227, 16),
    woosh.Token(woosh.NAME, 'or', 1227, 17, 1227, 19),
    woosh.Token(woosh.NAME, 'not', 1227, 20, 1227, 23),
    woosh.Token(woosh.NAME, 'os_name', 1227, 24, 1227, 31),
    woosh.Token(woosh.OP, ':', 1227, 31, 1227, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 1227, 32, 1228, 0),
    woosh.Token(woosh.INDENT, '            ', 1228, 0, 1228, 12),
    woosh.Token(woosh.NAME, 'platform', 1228, 12, 1228, 20),
    woosh.Token(woosh.OP, '=', 1228, 21, 1228, 22),
    woosh.Token(woosh.NAME, '_platform', 1228, 23, 1228, 32),
    woosh.Token(woosh.OP, '(', 1228, 32, 1228, 33),
    woosh.Token(woosh.NAME, 'system', 1228, 33, 1228, 39),
    woosh.Token(woosh.OP, ',', 1228, 39, 1228, 40),
    woosh.Token(woosh.NAME, 'release', 1228, 41, 1228, 48),
    woosh.Token(woosh.OP, ',', 1228, 48, 1228, 49),
    woosh.Token(woosh.NAME, 'version', 1228, 50, 1228, 57),
    woosh.Token(woosh.OP, ')', 1228, 57, 1228, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 1228, 58, 1229, 0),
    woosh.Token(woosh.DEDENT, '        ', 1229, 0, 1229, 8),
    woosh.Token(woosh.NAME, 'else', 1229, 8, 1229, 12),
    woosh.Token(woosh.OP, ':', 1229, 12, 1229, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 1229, 13, 1230, 0),
    woosh.Token(woosh.INDENT, '            ', 1230, 0, 1230, 12),
    woosh.Token(woosh.NAME, 'platform', 1230, 12, 1230, 20),
    woosh.Token(woosh.OP, '=', 1230, 21, 1230, 22),
    woosh.Token(woosh.NAME, '_platform', 1230, 23, 1230, 32),
    woosh.Token(woosh.OP, '(', 1230, 32, 1230, 33),
    woosh.Token(woosh.NAME, 'system', 1230, 33, 1230, 39),
    woosh.Token(woosh.OP, ',', 1230, 39, 1230, 40),
    woosh.Token(woosh.NAME, 'release', 1230, 41, 1230, 48),
    woosh.Token(woosh.OP, ',', 1230, 48, 1230, 49),
    woosh.Token(woosh.NAME, 'version', 1230, 50, 1230, 57),
    woosh.Token(woosh.OP, ',', 1230, 57, 1230, 58),
    woosh.Token(woosh.STRING, "'on'", 1231, 33, 1231, 37),
    woosh.Token(woosh.OP, ',', 1231, 37, 1231, 38),
    woosh.Token(woosh.NAME, 'os_name', 1232, 33, 1232, 40),
    woosh.Token(woosh.OP, ',', 1232, 40, 1232, 41),
    woosh.Token(woosh.NAME, 'os_version', 1232, 42, 1232, 52),
    woosh.Token(woosh.OP, ',', 1232, 52, 1232, 53),
    woosh.Token(woosh.NAME, 'os_arch', 1232, 54, 1232, 61),
    woosh.Token(woosh.OP, ')', 1232, 61, 1232, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 1232, 62, 1233, 0),
    woosh.Token(woosh.DEDENT, '    ', 1234, 0, 1234, 4),
    woosh.Token(woosh.DEDENT, '', 1234, 4, 1234, 4),
    woosh.Token(woosh.NAME, 'else', 1234, 4, 1234, 8),
    woosh.Token(woosh.OP, ':', 1234, 8, 1234, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 1234, 9, 1235, 0),
    woosh.Token(woosh.COMMENT, '# Generic handler', 1235, 8, 1235, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 1235, 25, 1236, 0),
    woosh.Token(woosh.INDENT, '        ', 1236, 0, 1236, 8),
    woosh.Token(woosh.NAME, 'if', 1236, 8, 1236, 10),
    woosh.Token(woosh.NAME, 'terse', 1236, 11, 1236, 16),
    woosh.Token(woosh.OP, ':', 1236, 16, 1236, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 1236, 17, 1237, 0),
    woosh.Token(woosh.INDENT, '            ', 1237, 0, 1237, 12),
    woosh.Token(woosh.NAME, 'platform', 1237, 12, 1237, 20),
    woosh.Token(woosh.OP, '=', 1237, 21, 1237, 22),
    woosh.Token(woosh.NAME, '_platform', 1237, 23, 1237, 32),
    woosh.Token(woosh.OP, '(', 1237, 32, 1237, 33),
    woosh.Token(woosh.NAME, 'system', 1237, 33, 1237, 39),
    woosh.Token(woosh.OP, ',', 1237, 39, 1237, 40),
    woosh.Token(woosh.NAME, 'release', 1237, 41, 1237, 48),
    woosh.Token(woosh.OP, ')', 1237, 48, 1237, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 1237, 49, 1238, 0),
    woosh.Token(woosh.DEDENT, '        ', 1238, 0, 1238, 8),
    woosh.Token(woosh.NAME, 'else', 1238, 8, 1238, 12),
    woosh.Token(woosh.OP, ':', 1238, 12, 1238, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 1238, 13, 1239, 0),
    woosh.Token(woosh.INDENT, '            ', 1239, 0, 1239, 12),
    woosh.Token(woosh.NAME, 'bits', 1239, 12, 1239, 16),
    woosh.Token(woosh.OP, ',', 1239, 16, 1239, 17),
    woosh.Token(woosh.NAME, 'linkage', 1239, 18, 1239, 25),
    woosh.Token(woosh.OP, '=', 1239, 26, 1239, 27),
    woosh.Token(woosh.NAME, 'architecture', 1239, 28, 1239, 40),
    woosh.Token(woosh.OP, '(', 1239, 40, 1239, 41),
    woosh.Token(woosh.NAME, 'sys', 1239, 41, 1239, 44),
    woosh.Token(woosh.OP, '.', 1239, 44, 1239, 45),
    woosh.Token(woosh.NAME, 'executable', 1239, 45, 1239, 55),
    woosh.Token(woosh.OP, ')', 1239, 55, 1239, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 1239, 56, 1240, 0),
    woosh.Token(woosh.NAME, 'platform', 1240, 12, 1240, 20),
    woosh.Token(woosh.OP, '=', 1240, 21, 1240, 22),
    woosh.Token(woosh.NAME, '_platform', 1240, 23, 1240, 32),
    woosh.Token(woosh.OP, '(', 1240, 32, 1240, 33),
    woosh.Token(woosh.NAME, 'system', 1240, 33, 1240, 39),
    woosh.Token(woosh.OP, ',', 1240, 39, 1240, 40),
    woosh.Token(woosh.NAME, 'release', 1240, 41, 1240, 48),
    woosh.Token(woosh.OP, ',', 1240, 48, 1240, 49),
    woosh.Token(woosh.NAME, 'machine', 1240, 50, 1240, 57),
    woosh.Token(woosh.OP, ',', 1240, 57, 1240, 58),
    woosh.Token(woosh.NAME, 'processor', 1241, 33, 1241, 42),
    woosh.Token(woosh.OP, ',', 1241, 42, 1241, 43),
    woosh.Token(woosh.NAME, 'bits', 1241, 44, 1241, 48),
    woosh.Token(woosh.OP, ',', 1241, 48, 1241, 49),
    woosh.Token(woosh.NAME, 'linkage', 1241, 50, 1241, 57),
    woosh.Token(woosh.OP, ')', 1241, 57, 1241, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 1241, 58, 1242, 0),
    woosh.Token(woosh.DEDENT, '    ', 1243, 0, 1243, 4),
    woosh.Token(woosh.DEDENT, '', 1243, 4, 1243, 4),
    woosh.Token(woosh.NAME, '_platform_cache', 1243, 4, 1243, 19),
    woosh.Token(woosh.OP, '[', 1243, 19, 1243, 20),
    woosh.Token(woosh.OP, '(', 1243, 20, 1243, 21),
    woosh.Token(woosh.NAME, 'aliased', 1243, 21, 1243, 28),
    woosh.Token(woosh.OP, ',', 1243, 28, 1243, 29),
    woosh.Token(woosh.NAME, 'terse', 1243, 30, 1243, 35),
    woosh.Token(woosh.OP, ')', 1243, 35, 1243, 36),
    woosh.Token(woosh.OP, ']', 1243, 36, 1243, 37),
    woosh.Token(woosh.OP, '=', 1243, 38, 1243, 39),
    woosh.Token(woosh.NAME, 'platform', 1243, 40, 1243, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 1243, 48, 1244, 0),
    woosh.Token(woosh.NAME, 'return', 1244, 4, 1244, 10),
    woosh.Token(woosh.NAME, 'platform', 1244, 11, 1244, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 1244, 19, 1245, 0),
    woosh.Token(woosh.COMMENT, '### Command line interface', 1246, 0, 1246, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1246, 26, 1247, 0),
    woosh.Token(woosh.DEDENT, '', 1248, 0, 1248, 0),
    woosh.Token(woosh.NAME, 'if', 1248, 0, 1248, 2),
    woosh.Token(woosh.NAME, '__name__', 1248, 3, 1248, 11),
    woosh.Token(woosh.OP, '==', 1248, 12, 1248, 14),
    woosh.Token(woosh.STRING, "'__main__'", 1248, 15, 1248, 25),
    woosh.Token(woosh.OP, ':', 1248, 25, 1248, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 1248, 26, 1249, 0),
    woosh.Token(woosh.COMMENT, '# Default is to print the aliased verbose platform string', 1249, 4, 1249, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 1249, 61, 1250, 0),
    woosh.Token(woosh.INDENT, '    ', 1250, 0, 1250, 4),
    woosh.Token(woosh.NAME, 'terse', 1250, 4, 1250, 9),
    woosh.Token(woosh.OP, '=', 1250, 10, 1250, 11),
    woosh.Token(woosh.OP, '(', 1250, 12, 1250, 13),
    woosh.Token(woosh.STRING, "'terse'", 1250, 13, 1250, 20),
    woosh.Token(woosh.NAME, 'in', 1250, 21, 1250, 23),
    woosh.Token(woosh.NAME, 'sys', 1250, 24, 1250, 27),
    woosh.Token(woosh.OP, '.', 1250, 27, 1250, 28),
    woosh.Token(woosh.NAME, 'argv', 1250, 28, 1250, 32),
    woosh.Token(woosh.NAME, 'or', 1250, 33, 1250, 35),
    woosh.Token(woosh.STRING, "'--terse'", 1250, 36, 1250, 45),
    woosh.Token(woosh.NAME, 'in', 1250, 46, 1250, 48),
    woosh.Token(woosh.NAME, 'sys', 1250, 49, 1250, 52),
    woosh.Token(woosh.OP, '.', 1250, 52, 1250, 53),
    woosh.Token(woosh.NAME, 'argv', 1250, 53, 1250, 57),
    woosh.Token(woosh.OP, ')', 1250, 57, 1250, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 1250, 58, 1251, 0),
    woosh.Token(woosh.NAME, 'aliased', 1251, 4, 1251, 11),
    woosh.Token(woosh.OP, '=', 1251, 12, 1251, 13),
    woosh.Token(woosh.OP, '(', 1251, 14, 1251, 15),
    woosh.Token(woosh.NAME, 'not', 1251, 15, 1251, 18),
    woosh.Token(woosh.STRING, "'nonaliased'", 1251, 19, 1251, 31),
    woosh.Token(woosh.NAME, 'in', 1251, 32, 1251, 34),
    woosh.Token(woosh.NAME, 'sys', 1251, 35, 1251, 38),
    woosh.Token(woosh.OP, '.', 1251, 38, 1251, 39),
    woosh.Token(woosh.NAME, 'argv', 1251, 39, 1251, 43),
    woosh.Token(woosh.NAME, 'and', 1251, 44, 1251, 47),
    woosh.Token(woosh.NAME, 'not', 1251, 48, 1251, 51),
    woosh.Token(woosh.STRING, "'--nonaliased'", 1251, 52, 1251, 66),
    woosh.Token(woosh.NAME, 'in', 1251, 67, 1251, 69),
    woosh.Token(woosh.NAME, 'sys', 1251, 70, 1251, 73),
    woosh.Token(woosh.OP, '.', 1251, 73, 1251, 74),
    woosh.Token(woosh.NAME, 'argv', 1251, 74, 1251, 78),
    woosh.Token(woosh.OP, ')', 1251, 78, 1251, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 1251, 79, 1252, 0),
    woosh.Token(woosh.NAME, 'print', 1252, 4, 1252, 9),
    woosh.Token(woosh.OP, '(', 1252, 9, 1252, 10),
    woosh.Token(woosh.NAME, 'platform', 1252, 10, 1252, 18),
    woosh.Token(woosh.OP, '(', 1252, 18, 1252, 19),
    woosh.Token(woosh.NAME, 'aliased', 1252, 19, 1252, 26),
    woosh.Token(woosh.OP, ',', 1252, 26, 1252, 27),
    woosh.Token(woosh.NAME, 'terse', 1252, 28, 1252, 33),
    woosh.Token(woosh.OP, ')', 1252, 33, 1252, 34),
    woosh.Token(woosh.OP, ')', 1252, 34, 1252, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 1252, 35, 1253, 0),
    woosh.Token(woosh.NAME, 'sys', 1253, 4, 1253, 7),
    woosh.Token(woosh.OP, '.', 1253, 7, 1253, 8),
    woosh.Token(woosh.NAME, 'exit', 1253, 8, 1253, 12),
    woosh.Token(woosh.OP, '(', 1253, 12, 1253, 13),
    woosh.Token(woosh.NUMBER, '0', 1253, 13, 1253, 14),
    woosh.Token(woosh.OP, ')', 1253, 14, 1253, 15),
    woosh.Token(woosh.NEWLINE, '\r\n', 1253, 15, 1254, 0),
    woosh.Token(woosh.DEDENT, '', 1254, 0, 1254, 0),
    woosh.Token(woosh.EOF, '', 1254, 0, 1254, 0),
]
