
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../sample/'
def test():
    with open(SAMPLE_DIR / 'tokenize.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    assert tokens == EXPECTED

EXPECTED = [
    woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
    woosh.Token(woosh.STRING, '"""Tokenization help for Python programs.\r\n\r\ntokenize(readline) is a generator that breaks a stream of bytes into\r\nPython tokens.  It decodes the bytes according to PEP-0263 for\r\ndetermining source file encoding.\r\n\r\nIt accepts a readline-like method which is called repeatedly to get the\r\nnext line of input (or b"" for EOF).  It generates 5-tuples with these\r\nmembers:\r\n\r\n    the token type (see token.py)\r\n    the token (a string)\r\n    the starting (row, column) indices of the token (a 2-tuple of ints)\r\n    the ending (row, column) indices of the token (a 2-tuple of ints)\r\n    the original line (string)\r\n\r\nIt is designed to match the working of the Python tokenizer exactly, except\r\nthat it produces COMMENT tokens for comments and gives type OP for all\r\noperators.  Additionally, all token lists start with an ENCODING token\r\nwhich tells you which encoding was used to decode the bytes stream.\r\n"""', 1, 0, 21, 3),
    woosh.Token(woosh.NEWLINE, '\r\n', 21, 3, 22, 0),
    woosh.Token(woosh.NAME, '__author__', 23, 0, 23, 10),
    woosh.Token(woosh.OP, '=', 23, 11, 23, 12),
    woosh.Token(woosh.STRING, "'Ka-Ping Yee <ping@lfw.org>'", 23, 13, 23, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 23, 41, 24, 0),
    woosh.Token(woosh.NAME, '__credits__', 24, 0, 24, 11),
    woosh.Token(woosh.OP, '=', 24, 12, 24, 13),
    woosh.Token(woosh.OP, '(', 24, 14, 24, 15),
    woosh.Token(woosh.STRING, "'GvR, ESR, Tim Peters, Thomas Wouters, Fred Drake, '", 24, 15, 24, 67),
    woosh.Token(woosh.STRING, "'Skip Montanaro, Raymond Hettinger, Trent Nelson, '", 25, 15, 25, 66),
    woosh.Token(woosh.STRING, "'Michael Foord'", 26, 15, 26, 30),
    woosh.Token(woosh.OP, ')', 26, 30, 26, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 26, 31, 27, 0),
    woosh.Token(woosh.NAME, 'from', 27, 0, 27, 4),
    woosh.Token(woosh.NAME, 'builtins', 27, 5, 27, 13),
    woosh.Token(woosh.NAME, 'import', 27, 14, 27, 20),
    woosh.Token(woosh.NAME, 'open', 27, 21, 27, 25),
    woosh.Token(woosh.NAME, 'as', 27, 26, 27, 28),
    woosh.Token(woosh.NAME, '_builtin_open', 27, 29, 27, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 27, 42, 28, 0),
    woosh.Token(woosh.NAME, 'from', 28, 0, 28, 4),
    woosh.Token(woosh.NAME, 'codecs', 28, 5, 28, 11),
    woosh.Token(woosh.NAME, 'import', 28, 12, 28, 18),
    woosh.Token(woosh.NAME, 'lookup', 28, 19, 28, 25),
    woosh.Token(woosh.OP, ',', 28, 25, 28, 26),
    woosh.Token(woosh.NAME, 'BOM_UTF8', 28, 27, 28, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 28, 35, 29, 0),
    woosh.Token(woosh.NAME, 'import', 29, 0, 29, 6),
    woosh.Token(woosh.NAME, 'collections', 29, 7, 29, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 29, 18, 30, 0),
    woosh.Token(woosh.NAME, 'from', 30, 0, 30, 4),
    woosh.Token(woosh.NAME, 'io', 30, 5, 30, 7),
    woosh.Token(woosh.NAME, 'import', 30, 8, 30, 14),
    woosh.Token(woosh.NAME, 'TextIOWrapper', 30, 15, 30, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 30, 28, 31, 0),
    woosh.Token(woosh.NAME, 'import', 31, 0, 31, 6),
    woosh.Token(woosh.NAME, 'itertools', 31, 7, 31, 16),
    woosh.Token(woosh.NAME, 'as', 31, 17, 31, 19),
    woosh.Token(woosh.NAME, '_itertools', 31, 20, 31, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 31, 30, 32, 0),
    woosh.Token(woosh.NAME, 'import', 32, 0, 32, 6),
    woosh.Token(woosh.NAME, 're', 32, 7, 32, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 32, 9, 33, 0),
    woosh.Token(woosh.NAME, 'import', 33, 0, 33, 6),
    woosh.Token(woosh.NAME, 'sys', 33, 7, 33, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 33, 10, 34, 0),
    woosh.Token(woosh.NAME, 'from', 34, 0, 34, 4),
    woosh.Token(woosh.NAME, 'token', 34, 5, 34, 10),
    woosh.Token(woosh.NAME, 'import', 34, 11, 34, 17),
    woosh.Token(woosh.OP, '*', 34, 18, 34, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 34, 19, 35, 0),
    woosh.Token(woosh.NAME, 'cookie_re', 36, 0, 36, 9),
    woosh.Token(woosh.OP, '=', 36, 10, 36, 11),
    woosh.Token(woosh.NAME, 're', 36, 12, 36, 14),
    woosh.Token(woosh.OP, '.', 36, 14, 36, 15),
    woosh.Token(woosh.NAME, 'compile', 36, 15, 36, 22),
    woosh.Token(woosh.OP, '(', 36, 22, 36, 23),
    woosh.Token(woosh.STRING, "r'^[ \\t\\f]*#.*?coding[:=][ \\t]*([-\\w.]+)'", 36, 23, 36, 64),
    woosh.Token(woosh.OP, ',', 36, 64, 36, 65),
    woosh.Token(woosh.NAME, 're', 36, 66, 36, 68),
    woosh.Token(woosh.OP, '.', 36, 68, 36, 69),
    woosh.Token(woosh.NAME, 'ASCII', 36, 69, 36, 74),
    woosh.Token(woosh.OP, ')', 36, 74, 36, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 36, 75, 37, 0),
    woosh.Token(woosh.NAME, 'blank_re', 37, 0, 37, 8),
    woosh.Token(woosh.OP, '=', 37, 9, 37, 10),
    woosh.Token(woosh.NAME, 're', 37, 11, 37, 13),
    woosh.Token(woosh.OP, '.', 37, 13, 37, 14),
    woosh.Token(woosh.NAME, 'compile', 37, 14, 37, 21),
    woosh.Token(woosh.OP, '(', 37, 21, 37, 22),
    woosh.Token(woosh.STRING, "br'^[ \\t\\f]*(?:[#\\r\\n]|$)'", 37, 22, 37, 48),
    woosh.Token(woosh.OP, ',', 37, 48, 37, 49),
    woosh.Token(woosh.NAME, 're', 37, 50, 37, 52),
    woosh.Token(woosh.OP, '.', 37, 52, 37, 53),
    woosh.Token(woosh.NAME, 'ASCII', 37, 53, 37, 58),
    woosh.Token(woosh.OP, ')', 37, 58, 37, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 37, 59, 38, 0),
    woosh.Token(woosh.NAME, 'import', 39, 0, 39, 6),
    woosh.Token(woosh.NAME, 'token', 39, 7, 39, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 39, 12, 40, 0),
    woosh.Token(woosh.NAME, '__all__', 40, 0, 40, 7),
    woosh.Token(woosh.OP, '=', 40, 8, 40, 9),
    woosh.Token(woosh.NAME, 'token', 40, 10, 40, 15),
    woosh.Token(woosh.OP, '.', 40, 15, 40, 16),
    woosh.Token(woosh.NAME, '__all__', 40, 16, 40, 23),
    woosh.Token(woosh.OP, '+', 40, 24, 40, 25),
    woosh.Token(woosh.OP, '[', 40, 26, 40, 27),
    woosh.Token(woosh.STRING, '"tokenize"', 40, 27, 40, 37),
    woosh.Token(woosh.OP, ',', 40, 37, 40, 38),
    woosh.Token(woosh.STRING, '"generate_tokens"', 40, 39, 40, 56),
    woosh.Token(woosh.OP, ',', 40, 56, 40, 57),
    woosh.Token(woosh.STRING, '"detect_encoding"', 40, 58, 40, 75),
    woosh.Token(woosh.OP, ',', 40, 75, 40, 76),
    woosh.Token(woosh.STRING, '"untokenize"', 41, 27, 41, 39),
    woosh.Token(woosh.OP, ',', 41, 39, 41, 40),
    woosh.Token(woosh.STRING, '"TokenInfo"', 41, 41, 41, 52),
    woosh.Token(woosh.OP, ']', 41, 52, 41, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 41, 53, 42, 0),
    woosh.Token(woosh.NAME, 'EXACT_TOKEN_TYPES', 42, 0, 42, 17),
    woosh.Token(woosh.OP, '=', 42, 18, 42, 19),
    woosh.Token(woosh.OP, '{', 42, 20, 42, 21),
    woosh.Token(woosh.OP, '**', 43, 4, 43, 6),
    woosh.Token(woosh.NAME, 'token', 43, 6, 43, 11),
    woosh.Token(woosh.OP, '.', 43, 11, 43, 12),
    woosh.Token(woosh.NAME, 'EXACT_TOKEN_TYPES', 43, 12, 43, 29),
    woosh.Token(woosh.OP, ',', 43, 29, 43, 30),
    woosh.Token(woosh.STRING, '"<>"', 44, 4, 44, 8),
    woosh.Token(woosh.OP, ':', 44, 8, 44, 9),
    woosh.Token(woosh.NAME, 'NOTEQUAL', 44, 10, 44, 18),
    woosh.Token(woosh.OP, ',', 44, 18, 44, 19),
    woosh.Token(woosh.OP, '}', 45, 0, 45, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 45, 1, 46, 0),
    woosh.Token(woosh.NAME, 'del', 46, 0, 46, 3),
    woosh.Token(woosh.NAME, 'token', 46, 4, 46, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 46, 9, 47, 0),
    woosh.Token(woosh.NAME, 'class', 48, 0, 48, 5),
    woosh.Token(woosh.NAME, 'TokenInfo', 48, 6, 48, 15),
    woosh.Token(woosh.OP, '(', 48, 15, 48, 16),
    woosh.Token(woosh.NAME, 'collections', 48, 16, 48, 27),
    woosh.Token(woosh.OP, '.', 48, 27, 48, 28),
    woosh.Token(woosh.NAME, 'namedtuple', 48, 28, 48, 38),
    woosh.Token(woosh.OP, '(', 48, 38, 48, 39),
    woosh.Token(woosh.STRING, "'TokenInfo'", 48, 39, 48, 50),
    woosh.Token(woosh.OP, ',', 48, 50, 48, 51),
    woosh.Token(woosh.STRING, "'type string start end line'", 48, 52, 48, 80),
    woosh.Token(woosh.OP, ')', 48, 80, 48, 81),
    woosh.Token(woosh.OP, ')', 48, 81, 48, 82),
    woosh.Token(woosh.OP, ':', 48, 82, 48, 83),
    woosh.Token(woosh.NEWLINE, '\r\n', 48, 83, 49, 0),
    woosh.Token(woosh.INDENT, '    ', 49, 0, 49, 4),
    woosh.Token(woosh.NAME, 'def', 49, 4, 49, 7),
    woosh.Token(woosh.NAME, '__repr__', 49, 8, 49, 16),
    woosh.Token(woosh.OP, '(', 49, 16, 49, 17),
    woosh.Token(woosh.NAME, 'self', 49, 17, 49, 21),
    woosh.Token(woosh.OP, ')', 49, 21, 49, 22),
    woosh.Token(woosh.OP, ':', 49, 22, 49, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 49, 23, 50, 0),
    woosh.Token(woosh.INDENT, '        ', 50, 0, 50, 8),
    woosh.Token(woosh.NAME, 'annotated_type', 50, 8, 50, 22),
    woosh.Token(woosh.OP, '=', 50, 23, 50, 24),
    woosh.Token(woosh.STRING, "'%d (%s)'", 50, 25, 50, 34),
    woosh.Token(woosh.OP, '%', 50, 35, 50, 36),
    woosh.Token(woosh.OP, '(', 50, 37, 50, 38),
    woosh.Token(woosh.NAME, 'self', 50, 38, 50, 42),
    woosh.Token(woosh.OP, '.', 50, 42, 50, 43),
    woosh.Token(woosh.NAME, 'type', 50, 43, 50, 47),
    woosh.Token(woosh.OP, ',', 50, 47, 50, 48),
    woosh.Token(woosh.NAME, 'tok_name', 50, 49, 50, 57),
    woosh.Token(woosh.OP, '[', 50, 57, 50, 58),
    woosh.Token(woosh.NAME, 'self', 50, 58, 50, 62),
    woosh.Token(woosh.OP, '.', 50, 62, 50, 63),
    woosh.Token(woosh.NAME, 'type', 50, 63, 50, 67),
    woosh.Token(woosh.OP, ']', 50, 67, 50, 68),
    woosh.Token(woosh.OP, ')', 50, 68, 50, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 50, 69, 51, 0),
    woosh.Token(woosh.NAME, 'return', 51, 8, 51, 14),
    woosh.Token(woosh.OP, '(', 51, 15, 51, 16),
    woosh.Token(woosh.STRING, "'TokenInfo(type=%s, string=%r, start=%r, end=%r, line=%r)'", 51, 16, 51, 74),
    woosh.Token(woosh.OP, '%', 51, 75, 51, 76),
    woosh.Token(woosh.NAME, 'self', 52, 16, 52, 20),
    woosh.Token(woosh.OP, '.', 52, 20, 52, 21),
    woosh.Token(woosh.NAME, '_replace', 52, 21, 52, 29),
    woosh.Token(woosh.OP, '(', 52, 29, 52, 30),
    woosh.Token(woosh.NAME, 'type', 52, 30, 52, 34),
    woosh.Token(woosh.OP, '=', 52, 34, 52, 35),
    woosh.Token(woosh.NAME, 'annotated_type', 52, 35, 52, 49),
    woosh.Token(woosh.OP, ')', 52, 49, 52, 50),
    woosh.Token(woosh.OP, ')', 52, 50, 52, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 52, 51, 53, 0),
    woosh.Token(woosh.DEDENT, '    ', 54, 0, 54, 4),
    woosh.Token(woosh.OP, '@', 54, 4, 54, 5),
    woosh.Token(woosh.NAME, 'property', 54, 5, 54, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 54, 13, 55, 0),
    woosh.Token(woosh.NAME, 'def', 55, 4, 55, 7),
    woosh.Token(woosh.NAME, 'exact_type', 55, 8, 55, 18),
    woosh.Token(woosh.OP, '(', 55, 18, 55, 19),
    woosh.Token(woosh.NAME, 'self', 55, 19, 55, 23),
    woosh.Token(woosh.OP, ')', 55, 23, 55, 24),
    woosh.Token(woosh.OP, ':', 55, 24, 55, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 55, 25, 56, 0),
    woosh.Token(woosh.INDENT, '        ', 56, 0, 56, 8),
    woosh.Token(woosh.NAME, 'if', 56, 8, 56, 10),
    woosh.Token(woosh.NAME, 'self', 56, 11, 56, 15),
    woosh.Token(woosh.OP, '.', 56, 15, 56, 16),
    woosh.Token(woosh.NAME, 'type', 56, 16, 56, 20),
    woosh.Token(woosh.OP, '==', 56, 21, 56, 23),
    woosh.Token(woosh.NAME, 'OP', 56, 24, 56, 26),
    woosh.Token(woosh.NAME, 'and', 56, 27, 56, 30),
    woosh.Token(woosh.NAME, 'self', 56, 31, 56, 35),
    woosh.Token(woosh.OP, '.', 56, 35, 56, 36),
    woosh.Token(woosh.NAME, 'string', 56, 36, 56, 42),
    woosh.Token(woosh.NAME, 'in', 56, 43, 56, 45),
    woosh.Token(woosh.NAME, 'EXACT_TOKEN_TYPES', 56, 46, 56, 63),
    woosh.Token(woosh.OP, ':', 56, 63, 56, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 56, 64, 57, 0),
    woosh.Token(woosh.INDENT, '            ', 57, 0, 57, 12),
    woosh.Token(woosh.NAME, 'return', 57, 12, 57, 18),
    woosh.Token(woosh.NAME, 'EXACT_TOKEN_TYPES', 57, 19, 57, 36),
    woosh.Token(woosh.OP, '[', 57, 36, 57, 37),
    woosh.Token(woosh.NAME, 'self', 57, 37, 57, 41),
    woosh.Token(woosh.OP, '.', 57, 41, 57, 42),
    woosh.Token(woosh.NAME, 'string', 57, 42, 57, 48),
    woosh.Token(woosh.OP, ']', 57, 48, 57, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 57, 49, 58, 0),
    woosh.Token(woosh.DEDENT, '        ', 58, 0, 58, 8),
    woosh.Token(woosh.NAME, 'else', 58, 8, 58, 12),
    woosh.Token(woosh.OP, ':', 58, 12, 58, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 58, 13, 59, 0),
    woosh.Token(woosh.INDENT, '            ', 59, 0, 59, 12),
    woosh.Token(woosh.NAME, 'return', 59, 12, 59, 18),
    woosh.Token(woosh.NAME, 'self', 59, 19, 59, 23),
    woosh.Token(woosh.OP, '.', 59, 23, 59, 24),
    woosh.Token(woosh.NAME, 'type', 59, 24, 59, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 59, 28, 60, 0),
    woosh.Token(woosh.DEDENT, '', 61, 0, 61, 0),
    woosh.Token(woosh.DEDENT, '', 61, 0, 61, 0),
    woosh.Token(woosh.DEDENT, '', 61, 0, 61, 0),
    woosh.Token(woosh.NAME, 'def', 61, 0, 61, 3),
    woosh.Token(woosh.NAME, 'group', 61, 4, 61, 9),
    woosh.Token(woosh.OP, '(', 61, 9, 61, 10),
    woosh.Token(woosh.OP, '*', 61, 10, 61, 11),
    woosh.Token(woosh.NAME, 'choices', 61, 11, 61, 18),
    woosh.Token(woosh.OP, ')', 61, 18, 61, 19),
    woosh.Token(woosh.OP, ':', 61, 19, 61, 20),
    woosh.Token(woosh.NAME, 'return', 61, 21, 61, 27),
    woosh.Token(woosh.STRING, "'('", 61, 28, 61, 31),
    woosh.Token(woosh.OP, '+', 61, 32, 61, 33),
    woosh.Token(woosh.STRING, "'|'", 61, 34, 61, 37),
    woosh.Token(woosh.OP, '.', 61, 37, 61, 38),
    woosh.Token(woosh.NAME, 'join', 61, 38, 61, 42),
    woosh.Token(woosh.OP, '(', 61, 42, 61, 43),
    woosh.Token(woosh.NAME, 'choices', 61, 43, 61, 50),
    woosh.Token(woosh.OP, ')', 61, 50, 61, 51),
    woosh.Token(woosh.OP, '+', 61, 52, 61, 53),
    woosh.Token(woosh.STRING, "')'", 61, 54, 61, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 61, 57, 62, 0),
    woosh.Token(woosh.NAME, 'def', 62, 0, 62, 3),
    woosh.Token(woosh.NAME, 'any', 62, 4, 62, 7),
    woosh.Token(woosh.OP, '(', 62, 7, 62, 8),
    woosh.Token(woosh.OP, '*', 62, 8, 62, 9),
    woosh.Token(woosh.NAME, 'choices', 62, 9, 62, 16),
    woosh.Token(woosh.OP, ')', 62, 16, 62, 17),
    woosh.Token(woosh.OP, ':', 62, 17, 62, 18),
    woosh.Token(woosh.NAME, 'return', 62, 19, 62, 25),
    woosh.Token(woosh.NAME, 'group', 62, 26, 62, 31),
    woosh.Token(woosh.OP, '(', 62, 31, 62, 32),
    woosh.Token(woosh.OP, '*', 62, 32, 62, 33),
    woosh.Token(woosh.NAME, 'choices', 62, 33, 62, 40),
    woosh.Token(woosh.OP, ')', 62, 40, 62, 41),
    woosh.Token(woosh.OP, '+', 62, 42, 62, 43),
    woosh.Token(woosh.STRING, "'*'", 62, 44, 62, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 62, 47, 63, 0),
    woosh.Token(woosh.NAME, 'def', 63, 0, 63, 3),
    woosh.Token(woosh.NAME, 'maybe', 63, 4, 63, 9),
    woosh.Token(woosh.OP, '(', 63, 9, 63, 10),
    woosh.Token(woosh.OP, '*', 63, 10, 63, 11),
    woosh.Token(woosh.NAME, 'choices', 63, 11, 63, 18),
    woosh.Token(woosh.OP, ')', 63, 18, 63, 19),
    woosh.Token(woosh.OP, ':', 63, 19, 63, 20),
    woosh.Token(woosh.NAME, 'return', 63, 21, 63, 27),
    woosh.Token(woosh.NAME, 'group', 63, 28, 63, 33),
    woosh.Token(woosh.OP, '(', 63, 33, 63, 34),
    woosh.Token(woosh.OP, '*', 63, 34, 63, 35),
    woosh.Token(woosh.NAME, 'choices', 63, 35, 63, 42),
    woosh.Token(woosh.OP, ')', 63, 42, 63, 43),
    woosh.Token(woosh.OP, '+', 63, 44, 63, 45),
    woosh.Token(woosh.STRING, "'?'", 63, 46, 63, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 63, 49, 64, 0),
    woosh.Token(woosh.COMMENT, '# Note: we use unicode matching for names ("\\w") but ascii matching for', 65, 0, 65, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 65, 71, 66, 0),
    woosh.Token(woosh.COMMENT, '# number literals.', 66, 0, 66, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 66, 18, 67, 0),
    woosh.Token(woosh.NAME, 'Whitespace', 67, 0, 67, 10),
    woosh.Token(woosh.OP, '=', 67, 11, 67, 12),
    woosh.Token(woosh.STRING, "r'[ \\f\\t]*'", 67, 13, 67, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 67, 24, 68, 0),
    woosh.Token(woosh.NAME, 'Comment', 68, 0, 68, 7),
    woosh.Token(woosh.OP, '=', 68, 8, 68, 9),
    woosh.Token(woosh.STRING, "r'#[^\\r\\n]*'", 68, 10, 68, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 68, 22, 69, 0),
    woosh.Token(woosh.NAME, 'Ignore', 69, 0, 69, 6),
    woosh.Token(woosh.OP, '=', 69, 7, 69, 8),
    woosh.Token(woosh.NAME, 'Whitespace', 69, 9, 69, 19),
    woosh.Token(woosh.OP, '+', 69, 20, 69, 21),
    woosh.Token(woosh.NAME, 'any', 69, 22, 69, 25),
    woosh.Token(woosh.OP, '(', 69, 25, 69, 26),
    woosh.Token(woosh.STRING, "r'\\\\\\r?\\n'", 69, 26, 69, 36),
    woosh.Token(woosh.OP, '+', 69, 37, 69, 38),
    woosh.Token(woosh.NAME, 'Whitespace', 69, 39, 69, 49),
    woosh.Token(woosh.OP, ')', 69, 49, 69, 50),
    woosh.Token(woosh.OP, '+', 69, 51, 69, 52),
    woosh.Token(woosh.NAME, 'maybe', 69, 53, 69, 58),
    woosh.Token(woosh.OP, '(', 69, 58, 69, 59),
    woosh.Token(woosh.NAME, 'Comment', 69, 59, 69, 66),
    woosh.Token(woosh.OP, ')', 69, 66, 69, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 69, 67, 70, 0),
    woosh.Token(woosh.NAME, 'Name', 70, 0, 70, 4),
    woosh.Token(woosh.OP, '=', 70, 5, 70, 6),
    woosh.Token(woosh.STRING, "r'\\w+'", 70, 7, 70, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 70, 13, 71, 0),
    woosh.Token(woosh.NAME, 'Hexnumber', 72, 0, 72, 9),
    woosh.Token(woosh.OP, '=', 72, 10, 72, 11),
    woosh.Token(woosh.STRING, "r'0[xX](?:_?[0-9a-fA-F])+'", 72, 12, 72, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 72, 38, 73, 0),
    woosh.Token(woosh.NAME, 'Binnumber', 73, 0, 73, 9),
    woosh.Token(woosh.OP, '=', 73, 10, 73, 11),
    woosh.Token(woosh.STRING, "r'0[bB](?:_?[01])+'", 73, 12, 73, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 73, 31, 74, 0),
    woosh.Token(woosh.NAME, 'Octnumber', 74, 0, 74, 9),
    woosh.Token(woosh.OP, '=', 74, 10, 74, 11),
    woosh.Token(woosh.STRING, "r'0[oO](?:_?[0-7])+'", 74, 12, 74, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 74, 32, 75, 0),
    woosh.Token(woosh.NAME, 'Decnumber', 75, 0, 75, 9),
    woosh.Token(woosh.OP, '=', 75, 10, 75, 11),
    woosh.Token(woosh.STRING, "r'(?:0(?:_?0)*|[1-9](?:_?[0-9])*)'", 75, 12, 75, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 75, 46, 76, 0),
    woosh.Token(woosh.NAME, 'Intnumber', 76, 0, 76, 9),
    woosh.Token(woosh.OP, '=', 76, 10, 76, 11),
    woosh.Token(woosh.NAME, 'group', 76, 12, 76, 17),
    woosh.Token(woosh.OP, '(', 76, 17, 76, 18),
    woosh.Token(woosh.NAME, 'Hexnumber', 76, 18, 76, 27),
    woosh.Token(woosh.OP, ',', 76, 27, 76, 28),
    woosh.Token(woosh.NAME, 'Binnumber', 76, 29, 76, 38),
    woosh.Token(woosh.OP, ',', 76, 38, 76, 39),
    woosh.Token(woosh.NAME, 'Octnumber', 76, 40, 76, 49),
    woosh.Token(woosh.OP, ',', 76, 49, 76, 50),
    woosh.Token(woosh.NAME, 'Decnumber', 76, 51, 76, 60),
    woosh.Token(woosh.OP, ')', 76, 60, 76, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 76, 61, 77, 0),
    woosh.Token(woosh.NAME, 'Exponent', 77, 0, 77, 8),
    woosh.Token(woosh.OP, '=', 77, 9, 77, 10),
    woosh.Token(woosh.STRING, "r'[eE][-+]?[0-9](?:_?[0-9])*'", 77, 11, 77, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 77, 40, 78, 0),
    woosh.Token(woosh.NAME, 'Pointfloat', 78, 0, 78, 10),
    woosh.Token(woosh.OP, '=', 78, 11, 78, 12),
    woosh.Token(woosh.NAME, 'group', 78, 13, 78, 18),
    woosh.Token(woosh.OP, '(', 78, 18, 78, 19),
    woosh.Token(woosh.STRING, "r'[0-9](?:_?[0-9])*\\.(?:[0-9](?:_?[0-9])*)?'", 78, 19, 78, 63),
    woosh.Token(woosh.OP, ',', 78, 63, 78, 64),
    woosh.Token(woosh.STRING, "r'\\.[0-9](?:_?[0-9])*'", 79, 19, 79, 41),
    woosh.Token(woosh.OP, ')', 79, 41, 79, 42),
    woosh.Token(woosh.OP, '+', 79, 43, 79, 44),
    woosh.Token(woosh.NAME, 'maybe', 79, 45, 79, 50),
    woosh.Token(woosh.OP, '(', 79, 50, 79, 51),
    woosh.Token(woosh.NAME, 'Exponent', 79, 51, 79, 59),
    woosh.Token(woosh.OP, ')', 79, 59, 79, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 79, 60, 80, 0),
    woosh.Token(woosh.NAME, 'Expfloat', 80, 0, 80, 8),
    woosh.Token(woosh.OP, '=', 80, 9, 80, 10),
    woosh.Token(woosh.STRING, "r'[0-9](?:_?[0-9])*'", 80, 11, 80, 31),
    woosh.Token(woosh.OP, '+', 80, 32, 80, 33),
    woosh.Token(woosh.NAME, 'Exponent', 80, 34, 80, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 80, 42, 81, 0),
    woosh.Token(woosh.NAME, 'Floatnumber', 81, 0, 81, 11),
    woosh.Token(woosh.OP, '=', 81, 12, 81, 13),
    woosh.Token(woosh.NAME, 'group', 81, 14, 81, 19),
    woosh.Token(woosh.OP, '(', 81, 19, 81, 20),
    woosh.Token(woosh.NAME, 'Pointfloat', 81, 20, 81, 30),
    woosh.Token(woosh.OP, ',', 81, 30, 81, 31),
    woosh.Token(woosh.NAME, 'Expfloat', 81, 32, 81, 40),
    woosh.Token(woosh.OP, ')', 81, 40, 81, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 81, 41, 82, 0),
    woosh.Token(woosh.NAME, 'Imagnumber', 82, 0, 82, 10),
    woosh.Token(woosh.OP, '=', 82, 11, 82, 12),
    woosh.Token(woosh.NAME, 'group', 82, 13, 82, 18),
    woosh.Token(woosh.OP, '(', 82, 18, 82, 19),
    woosh.Token(woosh.STRING, "r'[0-9](?:_?[0-9])*[jJ]'", 82, 19, 82, 43),
    woosh.Token(woosh.OP, ',', 82, 43, 82, 44),
    woosh.Token(woosh.NAME, 'Floatnumber', 82, 45, 82, 56),
    woosh.Token(woosh.OP, '+', 82, 57, 82, 58),
    woosh.Token(woosh.STRING, "r'[jJ]'", 82, 59, 82, 66),
    woosh.Token(woosh.OP, ')', 82, 66, 82, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 82, 67, 83, 0),
    woosh.Token(woosh.NAME, 'Number', 83, 0, 83, 6),
    woosh.Token(woosh.OP, '=', 83, 7, 83, 8),
    woosh.Token(woosh.NAME, 'group', 83, 9, 83, 14),
    woosh.Token(woosh.OP, '(', 83, 14, 83, 15),
    woosh.Token(woosh.NAME, 'Imagnumber', 83, 15, 83, 25),
    woosh.Token(woosh.OP, ',', 83, 25, 83, 26),
    woosh.Token(woosh.NAME, 'Floatnumber', 83, 27, 83, 38),
    woosh.Token(woosh.OP, ',', 83, 38, 83, 39),
    woosh.Token(woosh.NAME, 'Intnumber', 83, 40, 83, 49),
    woosh.Token(woosh.OP, ')', 83, 49, 83, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 83, 50, 84, 0),
    woosh.Token(woosh.COMMENT, '# Return the empty string, plus all of the valid string prefixes.', 85, 0, 85, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 85, 65, 86, 0),
    woosh.Token(woosh.NAME, 'def', 86, 0, 86, 3),
    woosh.Token(woosh.NAME, '_all_string_prefixes', 86, 4, 86, 24),
    woosh.Token(woosh.OP, '(', 86, 24, 86, 25),
    woosh.Token(woosh.OP, ')', 86, 25, 86, 26),
    woosh.Token(woosh.OP, ':', 86, 26, 86, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 86, 27, 87, 0),
    woosh.Token(woosh.COMMENT, '# The valid string prefixes. Only contain the lower case versions,', 87, 4, 87, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 87, 70, 88, 0),
    woosh.Token(woosh.COMMENT, "#  and don't contain any permutations (include 'fr', but not", 88, 4, 88, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 88, 64, 89, 0),
    woosh.Token(woosh.COMMENT, "#  'rf'). The various permutations will be generated.", 89, 4, 89, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 89, 57, 90, 0),
    woosh.Token(woosh.INDENT, '    ', 90, 0, 90, 4),
    woosh.Token(woosh.NAME, '_valid_string_prefixes', 90, 4, 90, 26),
    woosh.Token(woosh.OP, '=', 90, 27, 90, 28),
    woosh.Token(woosh.OP, '[', 90, 29, 90, 30),
    woosh.Token(woosh.STRING, "'b'", 90, 30, 90, 33),
    woosh.Token(woosh.OP, ',', 90, 33, 90, 34),
    woosh.Token(woosh.STRING, "'r'", 90, 35, 90, 38),
    woosh.Token(woosh.OP, ',', 90, 38, 90, 39),
    woosh.Token(woosh.STRING, "'u'", 90, 40, 90, 43),
    woosh.Token(woosh.OP, ',', 90, 43, 90, 44),
    woosh.Token(woosh.STRING, "'f'", 90, 45, 90, 48),
    woosh.Token(woosh.OP, ',', 90, 48, 90, 49),
    woosh.Token(woosh.STRING, "'br'", 90, 50, 90, 54),
    woosh.Token(woosh.OP, ',', 90, 54, 90, 55),
    woosh.Token(woosh.STRING, "'fr'", 90, 56, 90, 60),
    woosh.Token(woosh.OP, ']', 90, 60, 90, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 90, 61, 91, 0),
    woosh.Token(woosh.COMMENT, "# if we add binary f-strings, add: ['fb', 'fbr']", 91, 4, 91, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 91, 52, 92, 0),
    woosh.Token(woosh.NAME, 'result', 92, 4, 92, 10),
    woosh.Token(woosh.OP, '=', 92, 11, 92, 12),
    woosh.Token(woosh.OP, '{', 92, 13, 92, 14),
    woosh.Token(woosh.STRING, "''", 92, 14, 92, 16),
    woosh.Token(woosh.OP, '}', 92, 16, 92, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 92, 17, 93, 0),
    woosh.Token(woosh.NAME, 'for', 93, 4, 93, 7),
    woosh.Token(woosh.NAME, 'prefix', 93, 8, 93, 14),
    woosh.Token(woosh.NAME, 'in', 93, 15, 93, 17),
    woosh.Token(woosh.NAME, '_valid_string_prefixes', 93, 18, 93, 40),
    woosh.Token(woosh.OP, ':', 93, 40, 93, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 93, 41, 94, 0),
    woosh.Token(woosh.INDENT, '        ', 94, 0, 94, 8),
    woosh.Token(woosh.NAME, 'for', 94, 8, 94, 11),
    woosh.Token(woosh.NAME, 't', 94, 12, 94, 13),
    woosh.Token(woosh.NAME, 'in', 94, 14, 94, 16),
    woosh.Token(woosh.NAME, '_itertools', 94, 17, 94, 27),
    woosh.Token(woosh.OP, '.', 94, 27, 94, 28),
    woosh.Token(woosh.NAME, 'permutations', 94, 28, 94, 40),
    woosh.Token(woosh.OP, '(', 94, 40, 94, 41),
    woosh.Token(woosh.NAME, 'prefix', 94, 41, 94, 47),
    woosh.Token(woosh.OP, ')', 94, 47, 94, 48),
    woosh.Token(woosh.OP, ':', 94, 48, 94, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 94, 49, 95, 0),
    woosh.Token(woosh.COMMENT, '# create a list with upper and lower versions of each', 95, 12, 95, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 95, 65, 96, 0),
    woosh.Token(woosh.COMMENT, '#  character', 96, 12, 96, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 96, 24, 97, 0),
    woosh.Token(woosh.INDENT, '            ', 97, 0, 97, 12),
    woosh.Token(woosh.NAME, 'for', 97, 12, 97, 15),
    woosh.Token(woosh.NAME, 'u', 97, 16, 97, 17),
    woosh.Token(woosh.NAME, 'in', 97, 18, 97, 20),
    woosh.Token(woosh.NAME, '_itertools', 97, 21, 97, 31),
    woosh.Token(woosh.OP, '.', 97, 31, 97, 32),
    woosh.Token(woosh.NAME, 'product', 97, 32, 97, 39),
    woosh.Token(woosh.OP, '(', 97, 39, 97, 40),
    woosh.Token(woosh.OP, '*', 97, 40, 97, 41),
    woosh.Token(woosh.OP, '[', 97, 41, 97, 42),
    woosh.Token(woosh.OP, '(', 97, 42, 97, 43),
    woosh.Token(woosh.NAME, 'c', 97, 43, 97, 44),
    woosh.Token(woosh.OP, ',', 97, 44, 97, 45),
    woosh.Token(woosh.NAME, 'c', 97, 46, 97, 47),
    woosh.Token(woosh.OP, '.', 97, 47, 97, 48),
    woosh.Token(woosh.NAME, 'upper', 97, 48, 97, 53),
    woosh.Token(woosh.OP, '(', 97, 53, 97, 54),
    woosh.Token(woosh.OP, ')', 97, 54, 97, 55),
    woosh.Token(woosh.OP, ')', 97, 55, 97, 56),
    woosh.Token(woosh.NAME, 'for', 97, 57, 97, 60),
    woosh.Token(woosh.NAME, 'c', 97, 61, 97, 62),
    woosh.Token(woosh.NAME, 'in', 97, 63, 97, 65),
    woosh.Token(woosh.NAME, 't', 97, 66, 97, 67),
    woosh.Token(woosh.OP, ']', 97, 67, 97, 68),
    woosh.Token(woosh.OP, ')', 97, 68, 97, 69),
    woosh.Token(woosh.OP, ':', 97, 69, 97, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 97, 70, 98, 0),
    woosh.Token(woosh.INDENT, '                ', 98, 0, 98, 16),
    woosh.Token(woosh.NAME, 'result', 98, 16, 98, 22),
    woosh.Token(woosh.OP, '.', 98, 22, 98, 23),
    woosh.Token(woosh.NAME, 'add', 98, 23, 98, 26),
    woosh.Token(woosh.OP, '(', 98, 26, 98, 27),
    woosh.Token(woosh.STRING, "''", 98, 27, 98, 29),
    woosh.Token(woosh.OP, '.', 98, 29, 98, 30),
    woosh.Token(woosh.NAME, 'join', 98, 30, 98, 34),
    woosh.Token(woosh.OP, '(', 98, 34, 98, 35),
    woosh.Token(woosh.NAME, 'u', 98, 35, 98, 36),
    woosh.Token(woosh.OP, ')', 98, 36, 98, 37),
    woosh.Token(woosh.OP, ')', 98, 37, 98, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 98, 38, 99, 0),
    woosh.Token(woosh.DEDENT, '    ', 99, 0, 99, 4),
    woosh.Token(woosh.DEDENT, '', 99, 4, 99, 4),
    woosh.Token(woosh.DEDENT, '', 99, 4, 99, 4),
    woosh.Token(woosh.NAME, 'return', 99, 4, 99, 10),
    woosh.Token(woosh.NAME, 'result', 99, 11, 99, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 99, 17, 100, 0),
    woosh.Token(woosh.DEDENT, '', 101, 0, 101, 0),
    woosh.Token(woosh.NAME, 'def', 101, 0, 101, 3),
    woosh.Token(woosh.NAME, '_compile', 101, 4, 101, 12),
    woosh.Token(woosh.OP, '(', 101, 12, 101, 13),
    woosh.Token(woosh.NAME, 'expr', 101, 13, 101, 17),
    woosh.Token(woosh.OP, ')', 101, 17, 101, 18),
    woosh.Token(woosh.OP, ':', 101, 18, 101, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 101, 19, 102, 0),
    woosh.Token(woosh.INDENT, '    ', 102, 0, 102, 4),
    woosh.Token(woosh.NAME, 'return', 102, 4, 102, 10),
    woosh.Token(woosh.NAME, 're', 102, 11, 102, 13),
    woosh.Token(woosh.OP, '.', 102, 13, 102, 14),
    woosh.Token(woosh.NAME, 'compile', 102, 14, 102, 21),
    woosh.Token(woosh.OP, '(', 102, 21, 102, 22),
    woosh.Token(woosh.NAME, 'expr', 102, 22, 102, 26),
    woosh.Token(woosh.OP, ',', 102, 26, 102, 27),
    woosh.Token(woosh.NAME, 're', 102, 28, 102, 30),
    woosh.Token(woosh.OP, '.', 102, 30, 102, 31),
    woosh.Token(woosh.NAME, 'UNICODE', 102, 31, 102, 38),
    woosh.Token(woosh.OP, ')', 102, 38, 102, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 102, 39, 103, 0),
    woosh.Token(woosh.COMMENT, '# Note that since _all_string_prefixes includes the empty string,', 104, 0, 104, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 104, 65, 105, 0),
    woosh.Token(woosh.COMMENT, '#  StringPrefix can be the empty string (making it optional).', 105, 0, 105, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 105, 61, 106, 0),
    woosh.Token(woosh.DEDENT, '', 106, 0, 106, 0),
    woosh.Token(woosh.NAME, 'StringPrefix', 106, 0, 106, 12),
    woosh.Token(woosh.OP, '=', 106, 13, 106, 14),
    woosh.Token(woosh.NAME, 'group', 106, 15, 106, 20),
    woosh.Token(woosh.OP, '(', 106, 20, 106, 21),
    woosh.Token(woosh.OP, '*', 106, 21, 106, 22),
    woosh.Token(woosh.NAME, '_all_string_prefixes', 106, 22, 106, 42),
    woosh.Token(woosh.OP, '(', 106, 42, 106, 43),
    woosh.Token(woosh.OP, ')', 106, 43, 106, 44),
    woosh.Token(woosh.OP, ')', 106, 44, 106, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 106, 45, 107, 0),
    woosh.Token(woosh.COMMENT, "# Tail end of ' string.", 108, 0, 108, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 108, 23, 109, 0),
    woosh.Token(woosh.NAME, 'Single', 109, 0, 109, 6),
    woosh.Token(woosh.OP, '=', 109, 7, 109, 8),
    woosh.Token(woosh.STRING, 'r"[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*\'"', 109, 9, 109, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 109, 35, 110, 0),
    woosh.Token(woosh.COMMENT, '# Tail end of " string.', 110, 0, 110, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 110, 23, 111, 0),
    woosh.Token(woosh.NAME, 'Double', 111, 0, 111, 6),
    woosh.Token(woosh.OP, '=', 111, 7, 111, 8),
    woosh.Token(woosh.STRING, 'r\'[^"\\\\]*(?:\\\\.[^"\\\\]*)*"\'', 111, 9, 111, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 111, 35, 112, 0),
    woosh.Token(woosh.COMMENT, "# Tail end of ''' string.", 112, 0, 112, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 112, 25, 113, 0),
    woosh.Token(woosh.NAME, 'Single3', 113, 0, 113, 7),
    woosh.Token(woosh.OP, '=', 113, 8, 113, 9),
    woosh.Token(woosh.STRING, 'r"[^\'\\\\]*(?:(?:\\\\.|\'(?!\'\'))[^\'\\\\]*)*\'\'\'"', 113, 10, 113, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 113, 50, 114, 0),
    woosh.Token(woosh.COMMENT, '# Tail end of """ string.', 114, 0, 114, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 114, 25, 115, 0),
    woosh.Token(woosh.NAME, 'Double3', 115, 0, 115, 7),
    woosh.Token(woosh.OP, '=', 115, 8, 115, 9),
    woosh.Token(woosh.STRING, 'r\'[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*"""\'', 115, 10, 115, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 115, 50, 116, 0),
    woosh.Token(woosh.NAME, 'Triple', 116, 0, 116, 6),
    woosh.Token(woosh.OP, '=', 116, 7, 116, 8),
    woosh.Token(woosh.NAME, 'group', 116, 9, 116, 14),
    woosh.Token(woosh.OP, '(', 116, 14, 116, 15),
    woosh.Token(woosh.NAME, 'StringPrefix', 116, 15, 116, 27),
    woosh.Token(woosh.OP, '+', 116, 28, 116, 29),
    woosh.Token(woosh.STRING, '"\'\'\'"', 116, 30, 116, 35),
    woosh.Token(woosh.OP, ',', 116, 35, 116, 36),
    woosh.Token(woosh.NAME, 'StringPrefix', 116, 37, 116, 49),
    woosh.Token(woosh.OP, '+', 116, 50, 116, 51),
    woosh.Token(woosh.STRING, '\'"""\'', 116, 52, 116, 57),
    woosh.Token(woosh.OP, ')', 116, 57, 116, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 116, 58, 117, 0),
    woosh.Token(woosh.COMMENT, '# Single-line \' or " string.', 117, 0, 117, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 117, 28, 118, 0),
    woosh.Token(woosh.NAME, 'String', 118, 0, 118, 6),
    woosh.Token(woosh.OP, '=', 118, 7, 118, 8),
    woosh.Token(woosh.NAME, 'group', 118, 9, 118, 14),
    woosh.Token(woosh.OP, '(', 118, 14, 118, 15),
    woosh.Token(woosh.NAME, 'StringPrefix', 118, 15, 118, 27),
    woosh.Token(woosh.OP, '+', 118, 28, 118, 29),
    woosh.Token(woosh.STRING, 'r"\'[^\\n\'\\\\]*(?:\\\\.[^\\n\'\\\\]*)*\'"', 118, 30, 118, 61),
    woosh.Token(woosh.OP, ',', 118, 61, 118, 62),
    woosh.Token(woosh.NAME, 'StringPrefix', 119, 15, 119, 27),
    woosh.Token(woosh.OP, '+', 119, 28, 119, 29),
    woosh.Token(woosh.STRING, 'r\'"[^\\n"\\\\]*(?:\\\\.[^\\n"\\\\]*)*"\'', 119, 30, 119, 61),
    woosh.Token(woosh.OP, ')', 119, 61, 119, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 119, 62, 120, 0),
    woosh.Token(woosh.COMMENT, '# Sorting in reverse order puts the long operators before their prefixes.', 121, 0, 121, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 121, 73, 122, 0),
    woosh.Token(woosh.COMMENT, '# Otherwise if = came before ==, == would get recognized as two instances', 122, 0, 122, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 122, 73, 123, 0),
    woosh.Token(woosh.COMMENT, '# of =.', 123, 0, 123, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 123, 7, 124, 0),
    woosh.Token(woosh.NAME, 'Special', 124, 0, 124, 7),
    woosh.Token(woosh.OP, '=', 124, 8, 124, 9),
    woosh.Token(woosh.NAME, 'group', 124, 10, 124, 15),
    woosh.Token(woosh.OP, '(', 124, 15, 124, 16),
    woosh.Token(woosh.OP, '*', 124, 16, 124, 17),
    woosh.Token(woosh.NAME, 'map', 124, 17, 124, 20),
    woosh.Token(woosh.OP, '(', 124, 20, 124, 21),
    woosh.Token(woosh.NAME, 're', 124, 21, 124, 23),
    woosh.Token(woosh.OP, '.', 124, 23, 124, 24),
    woosh.Token(woosh.NAME, 'escape', 124, 24, 124, 30),
    woosh.Token(woosh.OP, ',', 124, 30, 124, 31),
    woosh.Token(woosh.NAME, 'sorted', 124, 32, 124, 38),
    woosh.Token(woosh.OP, '(', 124, 38, 124, 39),
    woosh.Token(woosh.NAME, 'EXACT_TOKEN_TYPES', 124, 39, 124, 56),
    woosh.Token(woosh.OP, ',', 124, 56, 124, 57),
    woosh.Token(woosh.NAME, 'reverse', 124, 58, 124, 65),
    woosh.Token(woosh.OP, '=', 124, 65, 124, 66),
    woosh.Token(woosh.NAME, 'True', 124, 66, 124, 70),
    woosh.Token(woosh.OP, ')', 124, 70, 124, 71),
    woosh.Token(woosh.OP, ')', 124, 71, 124, 72),
    woosh.Token(woosh.OP, ')', 124, 72, 124, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 124, 73, 125, 0),
    woosh.Token(woosh.NAME, 'Funny', 125, 0, 125, 5),
    woosh.Token(woosh.OP, '=', 125, 6, 125, 7),
    woosh.Token(woosh.NAME, 'group', 125, 8, 125, 13),
    woosh.Token(woosh.OP, '(', 125, 13, 125, 14),
    woosh.Token(woosh.STRING, "r'\\r?\\n'", 125, 14, 125, 22),
    woosh.Token(woosh.OP, ',', 125, 22, 125, 23),
    woosh.Token(woosh.NAME, 'Special', 125, 24, 125, 31),
    woosh.Token(woosh.OP, ')', 125, 31, 125, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 125, 32, 126, 0),
    woosh.Token(woosh.NAME, 'PlainToken', 127, 0, 127, 10),
    woosh.Token(woosh.OP, '=', 127, 11, 127, 12),
    woosh.Token(woosh.NAME, 'group', 127, 13, 127, 18),
    woosh.Token(woosh.OP, '(', 127, 18, 127, 19),
    woosh.Token(woosh.NAME, 'Number', 127, 19, 127, 25),
    woosh.Token(woosh.OP, ',', 127, 25, 127, 26),
    woosh.Token(woosh.NAME, 'Funny', 127, 27, 127, 32),
    woosh.Token(woosh.OP, ',', 127, 32, 127, 33),
    woosh.Token(woosh.NAME, 'String', 127, 34, 127, 40),
    woosh.Token(woosh.OP, ',', 127, 40, 127, 41),
    woosh.Token(woosh.NAME, 'Name', 127, 42, 127, 46),
    woosh.Token(woosh.OP, ')', 127, 46, 127, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 127, 47, 128, 0),
    woosh.Token(woosh.NAME, 'Token', 128, 0, 128, 5),
    woosh.Token(woosh.OP, '=', 128, 6, 128, 7),
    woosh.Token(woosh.NAME, 'Ignore', 128, 8, 128, 14),
    woosh.Token(woosh.OP, '+', 128, 15, 128, 16),
    woosh.Token(woosh.NAME, 'PlainToken', 128, 17, 128, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 128, 27, 129, 0),
    woosh.Token(woosh.COMMENT, '# First (or only) line of \' or " string.', 130, 0, 130, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 130, 40, 131, 0),
    woosh.Token(woosh.NAME, 'ContStr', 131, 0, 131, 7),
    woosh.Token(woosh.OP, '=', 131, 8, 131, 9),
    woosh.Token(woosh.NAME, 'group', 131, 10, 131, 15),
    woosh.Token(woosh.OP, '(', 131, 15, 131, 16),
    woosh.Token(woosh.NAME, 'StringPrefix', 131, 16, 131, 28),
    woosh.Token(woosh.OP, '+', 131, 29, 131, 30),
    woosh.Token(woosh.STRING, 'r"\'[^\\n\'\\\\]*(?:\\\\.[^\\n\'\\\\]*)*"', 131, 31, 131, 61),
    woosh.Token(woosh.OP, '+', 131, 62, 131, 63),
    woosh.Token(woosh.NAME, 'group', 132, 16, 132, 21),
    woosh.Token(woosh.OP, '(', 132, 21, 132, 22),
    woosh.Token(woosh.STRING, '"\'"', 132, 22, 132, 25),
    woosh.Token(woosh.OP, ',', 132, 25, 132, 26),
    woosh.Token(woosh.STRING, "r'\\\\\\r?\\n'", 132, 27, 132, 37),
    woosh.Token(woosh.OP, ')', 132, 37, 132, 38),
    woosh.Token(woosh.OP, ',', 132, 38, 132, 39),
    woosh.Token(woosh.NAME, 'StringPrefix', 133, 16, 133, 28),
    woosh.Token(woosh.OP, '+', 133, 29, 133, 30),
    woosh.Token(woosh.STRING, 'r\'"[^\\n"\\\\]*(?:\\\\.[^\\n"\\\\]*)*\'', 133, 31, 133, 61),
    woosh.Token(woosh.OP, '+', 133, 62, 133, 63),
    woosh.Token(woosh.NAME, 'group', 134, 16, 134, 21),
    woosh.Token(woosh.OP, '(', 134, 21, 134, 22),
    woosh.Token(woosh.STRING, '\'"\'', 134, 22, 134, 25),
    woosh.Token(woosh.OP, ',', 134, 25, 134, 26),
    woosh.Token(woosh.STRING, "r'\\\\\\r?\\n'", 134, 27, 134, 37),
    woosh.Token(woosh.OP, ')', 134, 37, 134, 38),
    woosh.Token(woosh.OP, ')', 134, 38, 134, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 134, 39, 135, 0),
    woosh.Token(woosh.NAME, 'PseudoExtras', 135, 0, 135, 12),
    woosh.Token(woosh.OP, '=', 135, 13, 135, 14),
    woosh.Token(woosh.NAME, 'group', 135, 15, 135, 20),
    woosh.Token(woosh.OP, '(', 135, 20, 135, 21),
    woosh.Token(woosh.STRING, "r'\\\\\\r?\\n|\\Z'", 135, 21, 135, 34),
    woosh.Token(woosh.OP, ',', 135, 34, 135, 35),
    woosh.Token(woosh.NAME, 'Comment', 135, 36, 135, 43),
    woosh.Token(woosh.OP, ',', 135, 43, 135, 44),
    woosh.Token(woosh.NAME, 'Triple', 135, 45, 135, 51),
    woosh.Token(woosh.OP, ')', 135, 51, 135, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 135, 52, 136, 0),
    woosh.Token(woosh.NAME, 'PseudoToken', 136, 0, 136, 11),
    woosh.Token(woosh.OP, '=', 136, 12, 136, 13),
    woosh.Token(woosh.NAME, 'Whitespace', 136, 14, 136, 24),
    woosh.Token(woosh.OP, '+', 136, 25, 136, 26),
    woosh.Token(woosh.NAME, 'group', 136, 27, 136, 32),
    woosh.Token(woosh.OP, '(', 136, 32, 136, 33),
    woosh.Token(woosh.NAME, 'PseudoExtras', 136, 33, 136, 45),
    woosh.Token(woosh.OP, ',', 136, 45, 136, 46),
    woosh.Token(woosh.NAME, 'Number', 136, 47, 136, 53),
    woosh.Token(woosh.OP, ',', 136, 53, 136, 54),
    woosh.Token(woosh.NAME, 'Funny', 136, 55, 136, 60),
    woosh.Token(woosh.OP, ',', 136, 60, 136, 61),
    woosh.Token(woosh.NAME, 'ContStr', 136, 62, 136, 69),
    woosh.Token(woosh.OP, ',', 136, 69, 136, 70),
    woosh.Token(woosh.NAME, 'Name', 136, 71, 136, 75),
    woosh.Token(woosh.OP, ')', 136, 75, 136, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 136, 76, 137, 0),
    woosh.Token(woosh.COMMENT, '# For a given string prefix plus quotes, endpats maps it to a regex', 138, 0, 138, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 138, 67, 139, 0),
    woosh.Token(woosh.COMMENT, '#  to match the remainder of that string. _prefix can be empty, for', 139, 0, 139, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 139, 67, 140, 0),
    woosh.Token(woosh.COMMENT, '#  a normal single or triple quoted string (with no prefix).', 140, 0, 140, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 140, 60, 141, 0),
    woosh.Token(woosh.NAME, 'endpats', 141, 0, 141, 7),
    woosh.Token(woosh.OP, '=', 141, 8, 141, 9),
    woosh.Token(woosh.OP, '{', 141, 10, 141, 11),
    woosh.Token(woosh.OP, '}', 141, 11, 141, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 141, 12, 142, 0),
    woosh.Token(woosh.NAME, 'for', 142, 0, 142, 3),
    woosh.Token(woosh.NAME, '_prefix', 142, 4, 142, 11),
    woosh.Token(woosh.NAME, 'in', 142, 12, 142, 14),
    woosh.Token(woosh.NAME, '_all_string_prefixes', 142, 15, 142, 35),
    woosh.Token(woosh.OP, '(', 142, 35, 142, 36),
    woosh.Token(woosh.OP, ')', 142, 36, 142, 37),
    woosh.Token(woosh.OP, ':', 142, 37, 142, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 142, 38, 143, 0),
    woosh.Token(woosh.INDENT, '    ', 143, 0, 143, 4),
    woosh.Token(woosh.NAME, 'endpats', 143, 4, 143, 11),
    woosh.Token(woosh.OP, '[', 143, 11, 143, 12),
    woosh.Token(woosh.NAME, '_prefix', 143, 12, 143, 19),
    woosh.Token(woosh.OP, '+', 143, 20, 143, 21),
    woosh.Token(woosh.STRING, '"\'"', 143, 22, 143, 25),
    woosh.Token(woosh.OP, ']', 143, 25, 143, 26),
    woosh.Token(woosh.OP, '=', 143, 27, 143, 28),
    woosh.Token(woosh.NAME, 'Single', 143, 29, 143, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 143, 35, 144, 0),
    woosh.Token(woosh.NAME, 'endpats', 144, 4, 144, 11),
    woosh.Token(woosh.OP, '[', 144, 11, 144, 12),
    woosh.Token(woosh.NAME, '_prefix', 144, 12, 144, 19),
    woosh.Token(woosh.OP, '+', 144, 20, 144, 21),
    woosh.Token(woosh.STRING, '\'"\'', 144, 22, 144, 25),
    woosh.Token(woosh.OP, ']', 144, 25, 144, 26),
    woosh.Token(woosh.OP, '=', 144, 27, 144, 28),
    woosh.Token(woosh.NAME, 'Double', 144, 29, 144, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 144, 35, 145, 0),
    woosh.Token(woosh.NAME, 'endpats', 145, 4, 145, 11),
    woosh.Token(woosh.OP, '[', 145, 11, 145, 12),
    woosh.Token(woosh.NAME, '_prefix', 145, 12, 145, 19),
    woosh.Token(woosh.OP, '+', 145, 20, 145, 21),
    woosh.Token(woosh.STRING, '"\'\'\'"', 145, 22, 145, 27),
    woosh.Token(woosh.OP, ']', 145, 27, 145, 28),
    woosh.Token(woosh.OP, '=', 145, 29, 145, 30),
    woosh.Token(woosh.NAME, 'Single3', 145, 31, 145, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 145, 38, 146, 0),
    woosh.Token(woosh.NAME, 'endpats', 146, 4, 146, 11),
    woosh.Token(woosh.OP, '[', 146, 11, 146, 12),
    woosh.Token(woosh.NAME, '_prefix', 146, 12, 146, 19),
    woosh.Token(woosh.OP, '+', 146, 20, 146, 21),
    woosh.Token(woosh.STRING, '\'"""\'', 146, 22, 146, 27),
    woosh.Token(woosh.OP, ']', 146, 27, 146, 28),
    woosh.Token(woosh.OP, '=', 146, 29, 146, 30),
    woosh.Token(woosh.NAME, 'Double3', 146, 31, 146, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 146, 38, 147, 0),
    woosh.Token(woosh.COMMENT, '# A set of all of the single and triple quoted string prefixes,', 148, 0, 148, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 148, 63, 149, 0),
    woosh.Token(woosh.COMMENT, '#  including the opening quotes.', 149, 0, 149, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 149, 32, 150, 0),
    woosh.Token(woosh.DEDENT, '', 150, 0, 150, 0),
    woosh.Token(woosh.NAME, 'single_quoted', 150, 0, 150, 13),
    woosh.Token(woosh.OP, '=', 150, 14, 150, 15),
    woosh.Token(woosh.NAME, 'set', 150, 16, 150, 19),
    woosh.Token(woosh.OP, '(', 150, 19, 150, 20),
    woosh.Token(woosh.OP, ')', 150, 20, 150, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 150, 21, 151, 0),
    woosh.Token(woosh.NAME, 'triple_quoted', 151, 0, 151, 13),
    woosh.Token(woosh.OP, '=', 151, 14, 151, 15),
    woosh.Token(woosh.NAME, 'set', 151, 16, 151, 19),
    woosh.Token(woosh.OP, '(', 151, 19, 151, 20),
    woosh.Token(woosh.OP, ')', 151, 20, 151, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 151, 21, 152, 0),
    woosh.Token(woosh.NAME, 'for', 152, 0, 152, 3),
    woosh.Token(woosh.NAME, 't', 152, 4, 152, 5),
    woosh.Token(woosh.NAME, 'in', 152, 6, 152, 8),
    woosh.Token(woosh.NAME, '_all_string_prefixes', 152, 9, 152, 29),
    woosh.Token(woosh.OP, '(', 152, 29, 152, 30),
    woosh.Token(woosh.OP, ')', 152, 30, 152, 31),
    woosh.Token(woosh.OP, ':', 152, 31, 152, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 152, 32, 153, 0),
    woosh.Token(woosh.INDENT, '    ', 153, 0, 153, 4),
    woosh.Token(woosh.NAME, 'for', 153, 4, 153, 7),
    woosh.Token(woosh.NAME, 'u', 153, 8, 153, 9),
    woosh.Token(woosh.NAME, 'in', 153, 10, 153, 12),
    woosh.Token(woosh.OP, '(', 153, 13, 153, 14),
    woosh.Token(woosh.NAME, 't', 153, 14, 153, 15),
    woosh.Token(woosh.OP, '+', 153, 16, 153, 17),
    woosh.Token(woosh.STRING, '\'"\'', 153, 18, 153, 21),
    woosh.Token(woosh.OP, ',', 153, 21, 153, 22),
    woosh.Token(woosh.NAME, 't', 153, 23, 153, 24),
    woosh.Token(woosh.OP, '+', 153, 25, 153, 26),
    woosh.Token(woosh.STRING, '"\'"', 153, 27, 153, 30),
    woosh.Token(woosh.OP, ')', 153, 30, 153, 31),
    woosh.Token(woosh.OP, ':', 153, 31, 153, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 153, 32, 154, 0),
    woosh.Token(woosh.INDENT, '        ', 154, 0, 154, 8),
    woosh.Token(woosh.NAME, 'single_quoted', 154, 8, 154, 21),
    woosh.Token(woosh.OP, '.', 154, 21, 154, 22),
    woosh.Token(woosh.NAME, 'add', 154, 22, 154, 25),
    woosh.Token(woosh.OP, '(', 154, 25, 154, 26),
    woosh.Token(woosh.NAME, 'u', 154, 26, 154, 27),
    woosh.Token(woosh.OP, ')', 154, 27, 154, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 154, 28, 155, 0),
    woosh.Token(woosh.DEDENT, '    ', 155, 0, 155, 4),
    woosh.Token(woosh.NAME, 'for', 155, 4, 155, 7),
    woosh.Token(woosh.NAME, 'u', 155, 8, 155, 9),
    woosh.Token(woosh.NAME, 'in', 155, 10, 155, 12),
    woosh.Token(woosh.OP, '(', 155, 13, 155, 14),
    woosh.Token(woosh.NAME, 't', 155, 14, 155, 15),
    woosh.Token(woosh.OP, '+', 155, 16, 155, 17),
    woosh.Token(woosh.STRING, '\'"""\'', 155, 18, 155, 23),
    woosh.Token(woosh.OP, ',', 155, 23, 155, 24),
    woosh.Token(woosh.NAME, 't', 155, 25, 155, 26),
    woosh.Token(woosh.OP, '+', 155, 27, 155, 28),
    woosh.Token(woosh.STRING, '"\'\'\'"', 155, 29, 155, 34),
    woosh.Token(woosh.OP, ')', 155, 34, 155, 35),
    woosh.Token(woosh.OP, ':', 155, 35, 155, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 155, 36, 156, 0),
    woosh.Token(woosh.INDENT, '        ', 156, 0, 156, 8),
    woosh.Token(woosh.NAME, 'triple_quoted', 156, 8, 156, 21),
    woosh.Token(woosh.OP, '.', 156, 21, 156, 22),
    woosh.Token(woosh.NAME, 'add', 156, 22, 156, 25),
    woosh.Token(woosh.OP, '(', 156, 25, 156, 26),
    woosh.Token(woosh.NAME, 'u', 156, 26, 156, 27),
    woosh.Token(woosh.OP, ')', 156, 27, 156, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 156, 28, 157, 0),
    woosh.Token(woosh.DEDENT, '', 158, 0, 158, 0),
    woosh.Token(woosh.DEDENT, '', 158, 0, 158, 0),
    woosh.Token(woosh.NAME, 'tabsize', 158, 0, 158, 7),
    woosh.Token(woosh.OP, '=', 158, 8, 158, 9),
    woosh.Token(woosh.NUMBER, '8', 158, 10, 158, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 158, 11, 159, 0),
    woosh.Token(woosh.NAME, 'class', 160, 0, 160, 5),
    woosh.Token(woosh.NAME, 'TokenError', 160, 6, 160, 16),
    woosh.Token(woosh.OP, '(', 160, 16, 160, 17),
    woosh.Token(woosh.NAME, 'Exception', 160, 17, 160, 26),
    woosh.Token(woosh.OP, ')', 160, 26, 160, 27),
    woosh.Token(woosh.OP, ':', 160, 27, 160, 28),
    woosh.Token(woosh.NAME, 'pass', 160, 29, 160, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 160, 33, 161, 0),
    woosh.Token(woosh.NAME, 'class', 162, 0, 162, 5),
    woosh.Token(woosh.NAME, 'StopTokenizing', 162, 6, 162, 20),
    woosh.Token(woosh.OP, '(', 162, 20, 162, 21),
    woosh.Token(woosh.NAME, 'Exception', 162, 21, 162, 30),
    woosh.Token(woosh.OP, ')', 162, 30, 162, 31),
    woosh.Token(woosh.OP, ':', 162, 31, 162, 32),
    woosh.Token(woosh.NAME, 'pass', 162, 33, 162, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 162, 37, 163, 0),
    woosh.Token(woosh.NAME, 'class', 165, 0, 165, 5),
    woosh.Token(woosh.NAME, 'Untokenizer', 165, 6, 165, 17),
    woosh.Token(woosh.OP, ':', 165, 17, 165, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 165, 18, 166, 0),
    woosh.Token(woosh.INDENT, '    ', 167, 0, 167, 4),
    woosh.Token(woosh.NAME, 'def', 167, 4, 167, 7),
    woosh.Token(woosh.NAME, '__init__', 167, 8, 167, 16),
    woosh.Token(woosh.OP, '(', 167, 16, 167, 17),
    woosh.Token(woosh.NAME, 'self', 167, 17, 167, 21),
    woosh.Token(woosh.OP, ')', 167, 21, 167, 22),
    woosh.Token(woosh.OP, ':', 167, 22, 167, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 167, 23, 168, 0),
    woosh.Token(woosh.INDENT, '        ', 168, 0, 168, 8),
    woosh.Token(woosh.NAME, 'self', 168, 8, 168, 12),
    woosh.Token(woosh.OP, '.', 168, 12, 168, 13),
    woosh.Token(woosh.NAME, 'tokens', 168, 13, 168, 19),
    woosh.Token(woosh.OP, '=', 168, 20, 168, 21),
    woosh.Token(woosh.OP, '[', 168, 22, 168, 23),
    woosh.Token(woosh.OP, ']', 168, 23, 168, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 168, 24, 169, 0),
    woosh.Token(woosh.NAME, 'self', 169, 8, 169, 12),
    woosh.Token(woosh.OP, '.', 169, 12, 169, 13),
    woosh.Token(woosh.NAME, 'prev_row', 169, 13, 169, 21),
    woosh.Token(woosh.OP, '=', 169, 22, 169, 23),
    woosh.Token(woosh.NUMBER, '1', 169, 24, 169, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 169, 25, 170, 0),
    woosh.Token(woosh.NAME, 'self', 170, 8, 170, 12),
    woosh.Token(woosh.OP, '.', 170, 12, 170, 13),
    woosh.Token(woosh.NAME, 'prev_col', 170, 13, 170, 21),
    woosh.Token(woosh.OP, '=', 170, 22, 170, 23),
    woosh.Token(woosh.NUMBER, '0', 170, 24, 170, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 170, 25, 171, 0),
    woosh.Token(woosh.NAME, 'self', 171, 8, 171, 12),
    woosh.Token(woosh.OP, '.', 171, 12, 171, 13),
    woosh.Token(woosh.NAME, 'encoding', 171, 13, 171, 21),
    woosh.Token(woosh.OP, '=', 171, 22, 171, 23),
    woosh.Token(woosh.NAME, 'None', 171, 24, 171, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 171, 28, 172, 0),
    woosh.Token(woosh.DEDENT, '    ', 173, 0, 173, 4),
    woosh.Token(woosh.NAME, 'def', 173, 4, 173, 7),
    woosh.Token(woosh.NAME, 'add_whitespace', 173, 8, 173, 22),
    woosh.Token(woosh.OP, '(', 173, 22, 173, 23),
    woosh.Token(woosh.NAME, 'self', 173, 23, 173, 27),
    woosh.Token(woosh.OP, ',', 173, 27, 173, 28),
    woosh.Token(woosh.NAME, 'start', 173, 29, 173, 34),
    woosh.Token(woosh.OP, ')', 173, 34, 173, 35),
    woosh.Token(woosh.OP, ':', 173, 35, 173, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 173, 36, 174, 0),
    woosh.Token(woosh.INDENT, '        ', 174, 0, 174, 8),
    woosh.Token(woosh.NAME, 'row', 174, 8, 174, 11),
    woosh.Token(woosh.OP, ',', 174, 11, 174, 12),
    woosh.Token(woosh.NAME, 'col', 174, 13, 174, 16),
    woosh.Token(woosh.OP, '=', 174, 17, 174, 18),
    woosh.Token(woosh.NAME, 'start', 174, 19, 174, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 174, 24, 175, 0),
    woosh.Token(woosh.NAME, 'if', 175, 8, 175, 10),
    woosh.Token(woosh.NAME, 'row', 175, 11, 175, 14),
    woosh.Token(woosh.OP, '<', 175, 15, 175, 16),
    woosh.Token(woosh.NAME, 'self', 175, 17, 175, 21),
    woosh.Token(woosh.OP, '.', 175, 21, 175, 22),
    woosh.Token(woosh.NAME, 'prev_row', 175, 22, 175, 30),
    woosh.Token(woosh.NAME, 'or', 175, 31, 175, 33),
    woosh.Token(woosh.NAME, 'row', 175, 34, 175, 37),
    woosh.Token(woosh.OP, '==', 175, 38, 175, 40),
    woosh.Token(woosh.NAME, 'self', 175, 41, 175, 45),
    woosh.Token(woosh.OP, '.', 175, 45, 175, 46),
    woosh.Token(woosh.NAME, 'prev_row', 175, 46, 175, 54),
    woosh.Token(woosh.NAME, 'and', 175, 55, 175, 58),
    woosh.Token(woosh.NAME, 'col', 175, 59, 175, 62),
    woosh.Token(woosh.OP, '<', 175, 63, 175, 64),
    woosh.Token(woosh.NAME, 'self', 175, 65, 175, 69),
    woosh.Token(woosh.OP, '.', 175, 69, 175, 70),
    woosh.Token(woosh.NAME, 'prev_col', 175, 70, 175, 78),
    woosh.Token(woosh.OP, ':', 175, 78, 175, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 175, 79, 176, 0),
    woosh.Token(woosh.INDENT, '            ', 176, 0, 176, 12),
    woosh.Token(woosh.NAME, 'raise', 176, 12, 176, 17),
    woosh.Token(woosh.NAME, 'ValueError', 176, 18, 176, 28),
    woosh.Token(woosh.OP, '(', 176, 28, 176, 29),
    woosh.Token(woosh.STRING, '"start ({},{}) precedes previous end ({},{})"', 176, 29, 176, 74),
    woosh.Token(woosh.OP, '.', 177, 29, 177, 30),
    woosh.Token(woosh.NAME, 'format', 177, 30, 177, 36),
    woosh.Token(woosh.OP, '(', 177, 36, 177, 37),
    woosh.Token(woosh.NAME, 'row', 177, 37, 177, 40),
    woosh.Token(woosh.OP, ',', 177, 40, 177, 41),
    woosh.Token(woosh.NAME, 'col', 177, 42, 177, 45),
    woosh.Token(woosh.OP, ',', 177, 45, 177, 46),
    woosh.Token(woosh.NAME, 'self', 177, 47, 177, 51),
    woosh.Token(woosh.OP, '.', 177, 51, 177, 52),
    woosh.Token(woosh.NAME, 'prev_row', 177, 52, 177, 60),
    woosh.Token(woosh.OP, ',', 177, 60, 177, 61),
    woosh.Token(woosh.NAME, 'self', 177, 62, 177, 66),
    woosh.Token(woosh.OP, '.', 177, 66, 177, 67),
    woosh.Token(woosh.NAME, 'prev_col', 177, 67, 177, 75),
    woosh.Token(woosh.OP, ')', 177, 75, 177, 76),
    woosh.Token(woosh.OP, ')', 177, 76, 177, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 177, 77, 178, 0),
    woosh.Token(woosh.DEDENT, '        ', 178, 0, 178, 8),
    woosh.Token(woosh.NAME, 'row_offset', 178, 8, 178, 18),
    woosh.Token(woosh.OP, '=', 178, 19, 178, 20),
    woosh.Token(woosh.NAME, 'row', 178, 21, 178, 24),
    woosh.Token(woosh.OP, '-', 178, 25, 178, 26),
    woosh.Token(woosh.NAME, 'self', 178, 27, 178, 31),
    woosh.Token(woosh.OP, '.', 178, 31, 178, 32),
    woosh.Token(woosh.NAME, 'prev_row', 178, 32, 178, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 178, 40, 179, 0),
    woosh.Token(woosh.NAME, 'if', 179, 8, 179, 10),
    woosh.Token(woosh.NAME, 'row_offset', 179, 11, 179, 21),
    woosh.Token(woosh.OP, ':', 179, 21, 179, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 179, 22, 180, 0),
    woosh.Token(woosh.INDENT, '            ', 180, 0, 180, 12),
    woosh.Token(woosh.NAME, 'self', 180, 12, 180, 16),
    woosh.Token(woosh.OP, '.', 180, 16, 180, 17),
    woosh.Token(woosh.NAME, 'tokens', 180, 17, 180, 23),
    woosh.Token(woosh.OP, '.', 180, 23, 180, 24),
    woosh.Token(woosh.NAME, 'append', 180, 24, 180, 30),
    woosh.Token(woosh.OP, '(', 180, 30, 180, 31),
    woosh.Token(woosh.STRING, '"\\\\\\n"', 180, 31, 180, 37),
    woosh.Token(woosh.OP, '*', 180, 38, 180, 39),
    woosh.Token(woosh.NAME, 'row_offset', 180, 40, 180, 50),
    woosh.Token(woosh.OP, ')', 180, 50, 180, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 180, 51, 181, 0),
    woosh.Token(woosh.NAME, 'self', 181, 12, 181, 16),
    woosh.Token(woosh.OP, '.', 181, 16, 181, 17),
    woosh.Token(woosh.NAME, 'prev_col', 181, 17, 181, 25),
    woosh.Token(woosh.OP, '=', 181, 26, 181, 27),
    woosh.Token(woosh.NUMBER, '0', 181, 28, 181, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 181, 29, 182, 0),
    woosh.Token(woosh.DEDENT, '        ', 182, 0, 182, 8),
    woosh.Token(woosh.NAME, 'col_offset', 182, 8, 182, 18),
    woosh.Token(woosh.OP, '=', 182, 19, 182, 20),
    woosh.Token(woosh.NAME, 'col', 182, 21, 182, 24),
    woosh.Token(woosh.OP, '-', 182, 25, 182, 26),
    woosh.Token(woosh.NAME, 'self', 182, 27, 182, 31),
    woosh.Token(woosh.OP, '.', 182, 31, 182, 32),
    woosh.Token(woosh.NAME, 'prev_col', 182, 32, 182, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 182, 40, 183, 0),
    woosh.Token(woosh.NAME, 'if', 183, 8, 183, 10),
    woosh.Token(woosh.NAME, 'col_offset', 183, 11, 183, 21),
    woosh.Token(woosh.OP, ':', 183, 21, 183, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 183, 22, 184, 0),
    woosh.Token(woosh.INDENT, '            ', 184, 0, 184, 12),
    woosh.Token(woosh.NAME, 'self', 184, 12, 184, 16),
    woosh.Token(woosh.OP, '.', 184, 16, 184, 17),
    woosh.Token(woosh.NAME, 'tokens', 184, 17, 184, 23),
    woosh.Token(woosh.OP, '.', 184, 23, 184, 24),
    woosh.Token(woosh.NAME, 'append', 184, 24, 184, 30),
    woosh.Token(woosh.OP, '(', 184, 30, 184, 31),
    woosh.Token(woosh.STRING, '" "', 184, 31, 184, 34),
    woosh.Token(woosh.OP, '*', 184, 35, 184, 36),
    woosh.Token(woosh.NAME, 'col_offset', 184, 37, 184, 47),
    woosh.Token(woosh.OP, ')', 184, 47, 184, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 184, 48, 185, 0),
    woosh.Token(woosh.DEDENT, '    ', 186, 0, 186, 4),
    woosh.Token(woosh.DEDENT, '', 186, 4, 186, 4),
    woosh.Token(woosh.NAME, 'def', 186, 4, 186, 7),
    woosh.Token(woosh.NAME, 'untokenize', 186, 8, 186, 18),
    woosh.Token(woosh.OP, '(', 186, 18, 186, 19),
    woosh.Token(woosh.NAME, 'self', 186, 19, 186, 23),
    woosh.Token(woosh.OP, ',', 186, 23, 186, 24),
    woosh.Token(woosh.NAME, 'iterable', 186, 25, 186, 33),
    woosh.Token(woosh.OP, ')', 186, 33, 186, 34),
    woosh.Token(woosh.OP, ':', 186, 34, 186, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 186, 35, 187, 0),
    woosh.Token(woosh.INDENT, '        ', 187, 0, 187, 8),
    woosh.Token(woosh.NAME, 'it', 187, 8, 187, 10),
    woosh.Token(woosh.OP, '=', 187, 11, 187, 12),
    woosh.Token(woosh.NAME, 'iter', 187, 13, 187, 17),
    woosh.Token(woosh.OP, '(', 187, 17, 187, 18),
    woosh.Token(woosh.NAME, 'iterable', 187, 18, 187, 26),
    woosh.Token(woosh.OP, ')', 187, 26, 187, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 187, 27, 188, 0),
    woosh.Token(woosh.NAME, 'indents', 188, 8, 188, 15),
    woosh.Token(woosh.OP, '=', 188, 16, 188, 17),
    woosh.Token(woosh.OP, '[', 188, 18, 188, 19),
    woosh.Token(woosh.OP, ']', 188, 19, 188, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 188, 20, 189, 0),
    woosh.Token(woosh.NAME, 'startline', 189, 8, 189, 17),
    woosh.Token(woosh.OP, '=', 189, 18, 189, 19),
    woosh.Token(woosh.NAME, 'False', 189, 20, 189, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 189, 25, 190, 0),
    woosh.Token(woosh.NAME, 'for', 190, 8, 190, 11),
    woosh.Token(woosh.NAME, 't', 190, 12, 190, 13),
    woosh.Token(woosh.NAME, 'in', 190, 14, 190, 16),
    woosh.Token(woosh.NAME, 'it', 190, 17, 190, 19),
    woosh.Token(woosh.OP, ':', 190, 19, 190, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 190, 20, 191, 0),
    woosh.Token(woosh.INDENT, '            ', 191, 0, 191, 12),
    woosh.Token(woosh.NAME, 'if', 191, 12, 191, 14),
    woosh.Token(woosh.NAME, 'len', 191, 15, 191, 18),
    woosh.Token(woosh.OP, '(', 191, 18, 191, 19),
    woosh.Token(woosh.NAME, 't', 191, 19, 191, 20),
    woosh.Token(woosh.OP, ')', 191, 20, 191, 21),
    woosh.Token(woosh.OP, '==', 191, 22, 191, 24),
    woosh.Token(woosh.NUMBER, '2', 191, 25, 191, 26),
    woosh.Token(woosh.OP, ':', 191, 26, 191, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 191, 27, 192, 0),
    woosh.Token(woosh.INDENT, '                ', 192, 0, 192, 16),
    woosh.Token(woosh.NAME, 'self', 192, 16, 192, 20),
    woosh.Token(woosh.OP, '.', 192, 20, 192, 21),
    woosh.Token(woosh.NAME, 'compat', 192, 21, 192, 27),
    woosh.Token(woosh.OP, '(', 192, 27, 192, 28),
    woosh.Token(woosh.NAME, 't', 192, 28, 192, 29),
    woosh.Token(woosh.OP, ',', 192, 29, 192, 30),
    woosh.Token(woosh.NAME, 'it', 192, 31, 192, 33),
    woosh.Token(woosh.OP, ')', 192, 33, 192, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 192, 34, 193, 0),
    woosh.Token(woosh.NAME, 'break', 193, 16, 193, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 193, 21, 194, 0),
    woosh.Token(woosh.DEDENT, '            ', 194, 0, 194, 12),
    woosh.Token(woosh.NAME, 'tok_type', 194, 12, 194, 20),
    woosh.Token(woosh.OP, ',', 194, 20, 194, 21),
    woosh.Token(woosh.NAME, 'token', 194, 22, 194, 27),
    woosh.Token(woosh.OP, ',', 194, 27, 194, 28),
    woosh.Token(woosh.NAME, 'start', 194, 29, 194, 34),
    woosh.Token(woosh.OP, ',', 194, 34, 194, 35),
    woosh.Token(woosh.NAME, 'end', 194, 36, 194, 39),
    woosh.Token(woosh.OP, ',', 194, 39, 194, 40),
    woosh.Token(woosh.NAME, 'line', 194, 41, 194, 45),
    woosh.Token(woosh.OP, '=', 194, 46, 194, 47),
    woosh.Token(woosh.NAME, 't', 194, 48, 194, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 194, 49, 195, 0),
    woosh.Token(woosh.NAME, 'if', 195, 12, 195, 14),
    woosh.Token(woosh.NAME, 'tok_type', 195, 15, 195, 23),
    woosh.Token(woosh.OP, '==', 195, 24, 195, 26),
    woosh.Token(woosh.NAME, 'ENCODING', 195, 27, 195, 35),
    woosh.Token(woosh.OP, ':', 195, 35, 195, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 195, 36, 196, 0),
    woosh.Token(woosh.INDENT, '                ', 196, 0, 196, 16),
    woosh.Token(woosh.NAME, 'self', 196, 16, 196, 20),
    woosh.Token(woosh.OP, '.', 196, 20, 196, 21),
    woosh.Token(woosh.NAME, 'encoding', 196, 21, 196, 29),
    woosh.Token(woosh.OP, '=', 196, 30, 196, 31),
    woosh.Token(woosh.NAME, 'token', 196, 32, 196, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 196, 37, 197, 0),
    woosh.Token(woosh.NAME, 'continue', 197, 16, 197, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 197, 24, 198, 0),
    woosh.Token(woosh.DEDENT, '            ', 198, 0, 198, 12),
    woosh.Token(woosh.NAME, 'if', 198, 12, 198, 14),
    woosh.Token(woosh.NAME, 'tok_type', 198, 15, 198, 23),
    woosh.Token(woosh.OP, '==', 198, 24, 198, 26),
    woosh.Token(woosh.NAME, 'ENDMARKER', 198, 27, 198, 36),
    woosh.Token(woosh.OP, ':', 198, 36, 198, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 198, 37, 199, 0),
    woosh.Token(woosh.INDENT, '                ', 199, 0, 199, 16),
    woosh.Token(woosh.NAME, 'break', 199, 16, 199, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 199, 21, 200, 0),
    woosh.Token(woosh.DEDENT, '            ', 200, 0, 200, 12),
    woosh.Token(woosh.NAME, 'if', 200, 12, 200, 14),
    woosh.Token(woosh.NAME, 'tok_type', 200, 15, 200, 23),
    woosh.Token(woosh.OP, '==', 200, 24, 200, 26),
    woosh.Token(woosh.NAME, 'INDENT', 200, 27, 200, 33),
    woosh.Token(woosh.OP, ':', 200, 33, 200, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 200, 34, 201, 0),
    woosh.Token(woosh.INDENT, '                ', 201, 0, 201, 16),
    woosh.Token(woosh.NAME, 'indents', 201, 16, 201, 23),
    woosh.Token(woosh.OP, '.', 201, 23, 201, 24),
    woosh.Token(woosh.NAME, 'append', 201, 24, 201, 30),
    woosh.Token(woosh.OP, '(', 201, 30, 201, 31),
    woosh.Token(woosh.NAME, 'token', 201, 31, 201, 36),
    woosh.Token(woosh.OP, ')', 201, 36, 201, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 201, 37, 202, 0),
    woosh.Token(woosh.NAME, 'continue', 202, 16, 202, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 202, 24, 203, 0),
    woosh.Token(woosh.DEDENT, '            ', 203, 0, 203, 12),
    woosh.Token(woosh.NAME, 'elif', 203, 12, 203, 16),
    woosh.Token(woosh.NAME, 'tok_type', 203, 17, 203, 25),
    woosh.Token(woosh.OP, '==', 203, 26, 203, 28),
    woosh.Token(woosh.NAME, 'DEDENT', 203, 29, 203, 35),
    woosh.Token(woosh.OP, ':', 203, 35, 203, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 203, 36, 204, 0),
    woosh.Token(woosh.INDENT, '                ', 204, 0, 204, 16),
    woosh.Token(woosh.NAME, 'indents', 204, 16, 204, 23),
    woosh.Token(woosh.OP, '.', 204, 23, 204, 24),
    woosh.Token(woosh.NAME, 'pop', 204, 24, 204, 27),
    woosh.Token(woosh.OP, '(', 204, 27, 204, 28),
    woosh.Token(woosh.OP, ')', 204, 28, 204, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 204, 29, 205, 0),
    woosh.Token(woosh.NAME, 'self', 205, 16, 205, 20),
    woosh.Token(woosh.OP, '.', 205, 20, 205, 21),
    woosh.Token(woosh.NAME, 'prev_row', 205, 21, 205, 29),
    woosh.Token(woosh.OP, ',', 205, 29, 205, 30),
    woosh.Token(woosh.NAME, 'self', 205, 31, 205, 35),
    woosh.Token(woosh.OP, '.', 205, 35, 205, 36),
    woosh.Token(woosh.NAME, 'prev_col', 205, 36, 205, 44),
    woosh.Token(woosh.OP, '=', 205, 45, 205, 46),
    woosh.Token(woosh.NAME, 'end', 205, 47, 205, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 205, 50, 206, 0),
    woosh.Token(woosh.NAME, 'continue', 206, 16, 206, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 206, 24, 207, 0),
    woosh.Token(woosh.DEDENT, '            ', 207, 0, 207, 12),
    woosh.Token(woosh.NAME, 'elif', 207, 12, 207, 16),
    woosh.Token(woosh.NAME, 'tok_type', 207, 17, 207, 25),
    woosh.Token(woosh.NAME, 'in', 207, 26, 207, 28),
    woosh.Token(woosh.OP, '(', 207, 29, 207, 30),
    woosh.Token(woosh.NAME, 'NEWLINE', 207, 30, 207, 37),
    woosh.Token(woosh.OP, ',', 207, 37, 207, 38),
    woosh.Token(woosh.NAME, 'NL', 207, 39, 207, 41),
    woosh.Token(woosh.OP, ')', 207, 41, 207, 42),
    woosh.Token(woosh.OP, ':', 207, 42, 207, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 207, 43, 208, 0),
    woosh.Token(woosh.INDENT, '                ', 208, 0, 208, 16),
    woosh.Token(woosh.NAME, 'startline', 208, 16, 208, 25),
    woosh.Token(woosh.OP, '=', 208, 26, 208, 27),
    woosh.Token(woosh.NAME, 'True', 208, 28, 208, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 208, 32, 209, 0),
    woosh.Token(woosh.DEDENT, '            ', 209, 0, 209, 12),
    woosh.Token(woosh.NAME, 'elif', 209, 12, 209, 16),
    woosh.Token(woosh.NAME, 'startline', 209, 17, 209, 26),
    woosh.Token(woosh.NAME, 'and', 209, 27, 209, 30),
    woosh.Token(woosh.NAME, 'indents', 209, 31, 209, 38),
    woosh.Token(woosh.OP, ':', 209, 38, 209, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 209, 39, 210, 0),
    woosh.Token(woosh.INDENT, '                ', 210, 0, 210, 16),
    woosh.Token(woosh.NAME, 'indent', 210, 16, 210, 22),
    woosh.Token(woosh.OP, '=', 210, 23, 210, 24),
    woosh.Token(woosh.NAME, 'indents', 210, 25, 210, 32),
    woosh.Token(woosh.OP, '[', 210, 32, 210, 33),
    woosh.Token(woosh.OP, '-', 210, 33, 210, 34),
    woosh.Token(woosh.NUMBER, '1', 210, 34, 210, 35),
    woosh.Token(woosh.OP, ']', 210, 35, 210, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 210, 36, 211, 0),
    woosh.Token(woosh.NAME, 'if', 211, 16, 211, 18),
    woosh.Token(woosh.NAME, 'start', 211, 19, 211, 24),
    woosh.Token(woosh.OP, '[', 211, 24, 211, 25),
    woosh.Token(woosh.NUMBER, '1', 211, 25, 211, 26),
    woosh.Token(woosh.OP, ']', 211, 26, 211, 27),
    woosh.Token(woosh.OP, '>=', 211, 28, 211, 30),
    woosh.Token(woosh.NAME, 'len', 211, 31, 211, 34),
    woosh.Token(woosh.OP, '(', 211, 34, 211, 35),
    woosh.Token(woosh.NAME, 'indent', 211, 35, 211, 41),
    woosh.Token(woosh.OP, ')', 211, 41, 211, 42),
    woosh.Token(woosh.OP, ':', 211, 42, 211, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 211, 43, 212, 0),
    woosh.Token(woosh.INDENT, '                    ', 212, 0, 212, 20),
    woosh.Token(woosh.NAME, 'self', 212, 20, 212, 24),
    woosh.Token(woosh.OP, '.', 212, 24, 212, 25),
    woosh.Token(woosh.NAME, 'tokens', 212, 25, 212, 31),
    woosh.Token(woosh.OP, '.', 212, 31, 212, 32),
    woosh.Token(woosh.NAME, 'append', 212, 32, 212, 38),
    woosh.Token(woosh.OP, '(', 212, 38, 212, 39),
    woosh.Token(woosh.NAME, 'indent', 212, 39, 212, 45),
    woosh.Token(woosh.OP, ')', 212, 45, 212, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 212, 46, 213, 0),
    woosh.Token(woosh.NAME, 'self', 213, 20, 213, 24),
    woosh.Token(woosh.OP, '.', 213, 24, 213, 25),
    woosh.Token(woosh.NAME, 'prev_col', 213, 25, 213, 33),
    woosh.Token(woosh.OP, '=', 213, 34, 213, 35),
    woosh.Token(woosh.NAME, 'len', 213, 36, 213, 39),
    woosh.Token(woosh.OP, '(', 213, 39, 213, 40),
    woosh.Token(woosh.NAME, 'indent', 213, 40, 213, 46),
    woosh.Token(woosh.OP, ')', 213, 46, 213, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 213, 47, 214, 0),
    woosh.Token(woosh.DEDENT, '                ', 214, 0, 214, 16),
    woosh.Token(woosh.NAME, 'startline', 214, 16, 214, 25),
    woosh.Token(woosh.OP, '=', 214, 26, 214, 27),
    woosh.Token(woosh.NAME, 'False', 214, 28, 214, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 214, 33, 215, 0),
    woosh.Token(woosh.DEDENT, '            ', 215, 0, 215, 12),
    woosh.Token(woosh.NAME, 'self', 215, 12, 215, 16),
    woosh.Token(woosh.OP, '.', 215, 16, 215, 17),
    woosh.Token(woosh.NAME, 'add_whitespace', 215, 17, 215, 31),
    woosh.Token(woosh.OP, '(', 215, 31, 215, 32),
    woosh.Token(woosh.NAME, 'start', 215, 32, 215, 37),
    woosh.Token(woosh.OP, ')', 215, 37, 215, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 215, 38, 216, 0),
    woosh.Token(woosh.NAME, 'self', 216, 12, 216, 16),
    woosh.Token(woosh.OP, '.', 216, 16, 216, 17),
    woosh.Token(woosh.NAME, 'tokens', 216, 17, 216, 23),
    woosh.Token(woosh.OP, '.', 216, 23, 216, 24),
    woosh.Token(woosh.NAME, 'append', 216, 24, 216, 30),
    woosh.Token(woosh.OP, '(', 216, 30, 216, 31),
    woosh.Token(woosh.NAME, 'token', 216, 31, 216, 36),
    woosh.Token(woosh.OP, ')', 216, 36, 216, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 216, 37, 217, 0),
    woosh.Token(woosh.NAME, 'self', 217, 12, 217, 16),
    woosh.Token(woosh.OP, '.', 217, 16, 217, 17),
    woosh.Token(woosh.NAME, 'prev_row', 217, 17, 217, 25),
    woosh.Token(woosh.OP, ',', 217, 25, 217, 26),
    woosh.Token(woosh.NAME, 'self', 217, 27, 217, 31),
    woosh.Token(woosh.OP, '.', 217, 31, 217, 32),
    woosh.Token(woosh.NAME, 'prev_col', 217, 32, 217, 40),
    woosh.Token(woosh.OP, '=', 217, 41, 217, 42),
    woosh.Token(woosh.NAME, 'end', 217, 43, 217, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 217, 46, 218, 0),
    woosh.Token(woosh.NAME, 'if', 218, 12, 218, 14),
    woosh.Token(woosh.NAME, 'tok_type', 218, 15, 218, 23),
    woosh.Token(woosh.NAME, 'in', 218, 24, 218, 26),
    woosh.Token(woosh.OP, '(', 218, 27, 218, 28),
    woosh.Token(woosh.NAME, 'NEWLINE', 218, 28, 218, 35),
    woosh.Token(woosh.OP, ',', 218, 35, 218, 36),
    woosh.Token(woosh.NAME, 'NL', 218, 37, 218, 39),
    woosh.Token(woosh.OP, ')', 218, 39, 218, 40),
    woosh.Token(woosh.OP, ':', 218, 40, 218, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 218, 41, 219, 0),
    woosh.Token(woosh.INDENT, '                ', 219, 0, 219, 16),
    woosh.Token(woosh.NAME, 'self', 219, 16, 219, 20),
    woosh.Token(woosh.OP, '.', 219, 20, 219, 21),
    woosh.Token(woosh.NAME, 'prev_row', 219, 21, 219, 29),
    woosh.Token(woosh.OP, '+=', 219, 30, 219, 32),
    woosh.Token(woosh.NUMBER, '1', 219, 33, 219, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 219, 34, 220, 0),
    woosh.Token(woosh.NAME, 'self', 220, 16, 220, 20),
    woosh.Token(woosh.OP, '.', 220, 20, 220, 21),
    woosh.Token(woosh.NAME, 'prev_col', 220, 21, 220, 29),
    woosh.Token(woosh.OP, '=', 220, 30, 220, 31),
    woosh.Token(woosh.NUMBER, '0', 220, 32, 220, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 220, 33, 221, 0),
    woosh.Token(woosh.DEDENT, '        ', 221, 0, 221, 8),
    woosh.Token(woosh.DEDENT, '', 221, 8, 221, 8),
    woosh.Token(woosh.NAME, 'return', 221, 8, 221, 14),
    woosh.Token(woosh.STRING, '""', 221, 15, 221, 17),
    woosh.Token(woosh.OP, '.', 221, 17, 221, 18),
    woosh.Token(woosh.NAME, 'join', 221, 18, 221, 22),
    woosh.Token(woosh.OP, '(', 221, 22, 221, 23),
    woosh.Token(woosh.NAME, 'self', 221, 23, 221, 27),
    woosh.Token(woosh.OP, '.', 221, 27, 221, 28),
    woosh.Token(woosh.NAME, 'tokens', 221, 28, 221, 34),
    woosh.Token(woosh.OP, ')', 221, 34, 221, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 221, 35, 222, 0),
    woosh.Token(woosh.DEDENT, '    ', 223, 0, 223, 4),
    woosh.Token(woosh.NAME, 'def', 223, 4, 223, 7),
    woosh.Token(woosh.NAME, 'compat', 223, 8, 223, 14),
    woosh.Token(woosh.OP, '(', 223, 14, 223, 15),
    woosh.Token(woosh.NAME, 'self', 223, 15, 223, 19),
    woosh.Token(woosh.OP, ',', 223, 19, 223, 20),
    woosh.Token(woosh.NAME, 'token', 223, 21, 223, 26),
    woosh.Token(woosh.OP, ',', 223, 26, 223, 27),
    woosh.Token(woosh.NAME, 'iterable', 223, 28, 223, 36),
    woosh.Token(woosh.OP, ')', 223, 36, 223, 37),
    woosh.Token(woosh.OP, ':', 223, 37, 223, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 223, 38, 224, 0),
    woosh.Token(woosh.INDENT, '        ', 224, 0, 224, 8),
    woosh.Token(woosh.NAME, 'indents', 224, 8, 224, 15),
    woosh.Token(woosh.OP, '=', 224, 16, 224, 17),
    woosh.Token(woosh.OP, '[', 224, 18, 224, 19),
    woosh.Token(woosh.OP, ']', 224, 19, 224, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 224, 20, 225, 0),
    woosh.Token(woosh.NAME, 'toks_append', 225, 8, 225, 19),
    woosh.Token(woosh.OP, '=', 225, 20, 225, 21),
    woosh.Token(woosh.NAME, 'self', 225, 22, 225, 26),
    woosh.Token(woosh.OP, '.', 225, 26, 225, 27),
    woosh.Token(woosh.NAME, 'tokens', 225, 27, 225, 33),
    woosh.Token(woosh.OP, '.', 225, 33, 225, 34),
    woosh.Token(woosh.NAME, 'append', 225, 34, 225, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 225, 40, 226, 0),
    woosh.Token(woosh.NAME, 'startline', 226, 8, 226, 17),
    woosh.Token(woosh.OP, '=', 226, 18, 226, 19),
    woosh.Token(woosh.NAME, 'token', 226, 20, 226, 25),
    woosh.Token(woosh.OP, '[', 226, 25, 226, 26),
    woosh.Token(woosh.NUMBER, '0', 226, 26, 226, 27),
    woosh.Token(woosh.OP, ']', 226, 27, 226, 28),
    woosh.Token(woosh.NAME, 'in', 226, 29, 226, 31),
    woosh.Token(woosh.OP, '(', 226, 32, 226, 33),
    woosh.Token(woosh.NAME, 'NEWLINE', 226, 33, 226, 40),
    woosh.Token(woosh.OP, ',', 226, 40, 226, 41),
    woosh.Token(woosh.NAME, 'NL', 226, 42, 226, 44),
    woosh.Token(woosh.OP, ')', 226, 44, 226, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 226, 45, 227, 0),
    woosh.Token(woosh.NAME, 'prevstring', 227, 8, 227, 18),
    woosh.Token(woosh.OP, '=', 227, 19, 227, 20),
    woosh.Token(woosh.NAME, 'False', 227, 21, 227, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 227, 26, 228, 0),
    woosh.Token(woosh.NAME, 'for', 229, 8, 229, 11),
    woosh.Token(woosh.NAME, 'tok', 229, 12, 229, 15),
    woosh.Token(woosh.NAME, 'in', 229, 16, 229, 18),
    woosh.Token(woosh.NAME, '_itertools', 229, 19, 229, 29),
    woosh.Token(woosh.OP, '.', 229, 29, 229, 30),
    woosh.Token(woosh.NAME, 'chain', 229, 30, 229, 35),
    woosh.Token(woosh.OP, '(', 229, 35, 229, 36),
    woosh.Token(woosh.OP, '[', 229, 36, 229, 37),
    woosh.Token(woosh.NAME, 'token', 229, 37, 229, 42),
    woosh.Token(woosh.OP, ']', 229, 42, 229, 43),
    woosh.Token(woosh.OP, ',', 229, 43, 229, 44),
    woosh.Token(woosh.NAME, 'iterable', 229, 45, 229, 53),
    woosh.Token(woosh.OP, ')', 229, 53, 229, 54),
    woosh.Token(woosh.OP, ':', 229, 54, 229, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 229, 55, 230, 0),
    woosh.Token(woosh.INDENT, '            ', 230, 0, 230, 12),
    woosh.Token(woosh.NAME, 'toknum', 230, 12, 230, 18),
    woosh.Token(woosh.OP, ',', 230, 18, 230, 19),
    woosh.Token(woosh.NAME, 'tokval', 230, 20, 230, 26),
    woosh.Token(woosh.OP, '=', 230, 27, 230, 28),
    woosh.Token(woosh.NAME, 'tok', 230, 29, 230, 32),
    woosh.Token(woosh.OP, '[', 230, 32, 230, 33),
    woosh.Token(woosh.OP, ':', 230, 33, 230, 34),
    woosh.Token(woosh.NUMBER, '2', 230, 34, 230, 35),
    woosh.Token(woosh.OP, ']', 230, 35, 230, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 230, 36, 231, 0),
    woosh.Token(woosh.NAME, 'if', 231, 12, 231, 14),
    woosh.Token(woosh.NAME, 'toknum', 231, 15, 231, 21),
    woosh.Token(woosh.OP, '==', 231, 22, 231, 24),
    woosh.Token(woosh.NAME, 'ENCODING', 231, 25, 231, 33),
    woosh.Token(woosh.OP, ':', 231, 33, 231, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 231, 34, 232, 0),
    woosh.Token(woosh.INDENT, '                ', 232, 0, 232, 16),
    woosh.Token(woosh.NAME, 'self', 232, 16, 232, 20),
    woosh.Token(woosh.OP, '.', 232, 20, 232, 21),
    woosh.Token(woosh.NAME, 'encoding', 232, 21, 232, 29),
    woosh.Token(woosh.OP, '=', 232, 30, 232, 31),
    woosh.Token(woosh.NAME, 'tokval', 232, 32, 232, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 232, 38, 233, 0),
    woosh.Token(woosh.NAME, 'continue', 233, 16, 233, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 233, 24, 234, 0),
    woosh.Token(woosh.DEDENT, '            ', 235, 0, 235, 12),
    woosh.Token(woosh.NAME, 'if', 235, 12, 235, 14),
    woosh.Token(woosh.NAME, 'toknum', 235, 15, 235, 21),
    woosh.Token(woosh.NAME, 'in', 235, 22, 235, 24),
    woosh.Token(woosh.OP, '(', 235, 25, 235, 26),
    woosh.Token(woosh.NAME, 'NAME', 235, 26, 235, 30),
    woosh.Token(woosh.OP, ',', 235, 30, 235, 31),
    woosh.Token(woosh.NAME, 'NUMBER', 235, 32, 235, 38),
    woosh.Token(woosh.OP, ')', 235, 38, 235, 39),
    woosh.Token(woosh.OP, ':', 235, 39, 235, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 235, 40, 236, 0),
    woosh.Token(woosh.INDENT, '                ', 236, 0, 236, 16),
    woosh.Token(woosh.NAME, 'tokval', 236, 16, 236, 22),
    woosh.Token(woosh.OP, '+=', 236, 23, 236, 25),
    woosh.Token(woosh.STRING, "' '", 236, 26, 236, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 236, 29, 237, 0),
    woosh.Token(woosh.COMMENT, '# Insert a space between two consecutive strings', 238, 12, 238, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 238, 60, 239, 0),
    woosh.Token(woosh.DEDENT, '            ', 239, 0, 239, 12),
    woosh.Token(woosh.NAME, 'if', 239, 12, 239, 14),
    woosh.Token(woosh.NAME, 'toknum', 239, 15, 239, 21),
    woosh.Token(woosh.OP, '==', 239, 22, 239, 24),
    woosh.Token(woosh.NAME, 'STRING', 239, 25, 239, 31),
    woosh.Token(woosh.OP, ':', 239, 31, 239, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 239, 32, 240, 0),
    woosh.Token(woosh.INDENT, '                ', 240, 0, 240, 16),
    woosh.Token(woosh.NAME, 'if', 240, 16, 240, 18),
    woosh.Token(woosh.NAME, 'prevstring', 240, 19, 240, 29),
    woosh.Token(woosh.OP, ':', 240, 29, 240, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 240, 30, 241, 0),
    woosh.Token(woosh.INDENT, '                    ', 241, 0, 241, 20),
    woosh.Token(woosh.NAME, 'tokval', 241, 20, 241, 26),
    woosh.Token(woosh.OP, '=', 241, 27, 241, 28),
    woosh.Token(woosh.STRING, "' '", 241, 29, 241, 32),
    woosh.Token(woosh.OP, '+', 241, 33, 241, 34),
    woosh.Token(woosh.NAME, 'tokval', 241, 35, 241, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 241, 41, 242, 0),
    woosh.Token(woosh.DEDENT, '                ', 242, 0, 242, 16),
    woosh.Token(woosh.NAME, 'prevstring', 242, 16, 242, 26),
    woosh.Token(woosh.OP, '=', 242, 27, 242, 28),
    woosh.Token(woosh.NAME, 'True', 242, 29, 242, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 242, 33, 243, 0),
    woosh.Token(woosh.DEDENT, '            ', 243, 0, 243, 12),
    woosh.Token(woosh.NAME, 'else', 243, 12, 243, 16),
    woosh.Token(woosh.OP, ':', 243, 16, 243, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 243, 17, 244, 0),
    woosh.Token(woosh.INDENT, '                ', 244, 0, 244, 16),
    woosh.Token(woosh.NAME, 'prevstring', 244, 16, 244, 26),
    woosh.Token(woosh.OP, '=', 244, 27, 244, 28),
    woosh.Token(woosh.NAME, 'False', 244, 29, 244, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 244, 34, 245, 0),
    woosh.Token(woosh.DEDENT, '            ', 246, 0, 246, 12),
    woosh.Token(woosh.NAME, 'if', 246, 12, 246, 14),
    woosh.Token(woosh.NAME, 'toknum', 246, 15, 246, 21),
    woosh.Token(woosh.OP, '==', 246, 22, 246, 24),
    woosh.Token(woosh.NAME, 'INDENT', 246, 25, 246, 31),
    woosh.Token(woosh.OP, ':', 246, 31, 246, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 246, 32, 247, 0),
    woosh.Token(woosh.INDENT, '                ', 247, 0, 247, 16),
    woosh.Token(woosh.NAME, 'indents', 247, 16, 247, 23),
    woosh.Token(woosh.OP, '.', 247, 23, 247, 24),
    woosh.Token(woosh.NAME, 'append', 247, 24, 247, 30),
    woosh.Token(woosh.OP, '(', 247, 30, 247, 31),
    woosh.Token(woosh.NAME, 'tokval', 247, 31, 247, 37),
    woosh.Token(woosh.OP, ')', 247, 37, 247, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 247, 38, 248, 0),
    woosh.Token(woosh.NAME, 'continue', 248, 16, 248, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 248, 24, 249, 0),
    woosh.Token(woosh.DEDENT, '            ', 249, 0, 249, 12),
    woosh.Token(woosh.NAME, 'elif', 249, 12, 249, 16),
    woosh.Token(woosh.NAME, 'toknum', 249, 17, 249, 23),
    woosh.Token(woosh.OP, '==', 249, 24, 249, 26),
    woosh.Token(woosh.NAME, 'DEDENT', 249, 27, 249, 33),
    woosh.Token(woosh.OP, ':', 249, 33, 249, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 249, 34, 250, 0),
    woosh.Token(woosh.INDENT, '                ', 250, 0, 250, 16),
    woosh.Token(woosh.NAME, 'indents', 250, 16, 250, 23),
    woosh.Token(woosh.OP, '.', 250, 23, 250, 24),
    woosh.Token(woosh.NAME, 'pop', 250, 24, 250, 27),
    woosh.Token(woosh.OP, '(', 250, 27, 250, 28),
    woosh.Token(woosh.OP, ')', 250, 28, 250, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 250, 29, 251, 0),
    woosh.Token(woosh.NAME, 'continue', 251, 16, 251, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 251, 24, 252, 0),
    woosh.Token(woosh.DEDENT, '            ', 252, 0, 252, 12),
    woosh.Token(woosh.NAME, 'elif', 252, 12, 252, 16),
    woosh.Token(woosh.NAME, 'toknum', 252, 17, 252, 23),
    woosh.Token(woosh.NAME, 'in', 252, 24, 252, 26),
    woosh.Token(woosh.OP, '(', 252, 27, 252, 28),
    woosh.Token(woosh.NAME, 'NEWLINE', 252, 28, 252, 35),
    woosh.Token(woosh.OP, ',', 252, 35, 252, 36),
    woosh.Token(woosh.NAME, 'NL', 252, 37, 252, 39),
    woosh.Token(woosh.OP, ')', 252, 39, 252, 40),
    woosh.Token(woosh.OP, ':', 252, 40, 252, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 252, 41, 253, 0),
    woosh.Token(woosh.INDENT, '                ', 253, 0, 253, 16),
    woosh.Token(woosh.NAME, 'startline', 253, 16, 253, 25),
    woosh.Token(woosh.OP, '=', 253, 26, 253, 27),
    woosh.Token(woosh.NAME, 'True', 253, 28, 253, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 253, 32, 254, 0),
    woosh.Token(woosh.DEDENT, '            ', 254, 0, 254, 12),
    woosh.Token(woosh.NAME, 'elif', 254, 12, 254, 16),
    woosh.Token(woosh.NAME, 'startline', 254, 17, 254, 26),
    woosh.Token(woosh.NAME, 'and', 254, 27, 254, 30),
    woosh.Token(woosh.NAME, 'indents', 254, 31, 254, 38),
    woosh.Token(woosh.OP, ':', 254, 38, 254, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 254, 39, 255, 0),
    woosh.Token(woosh.INDENT, '                ', 255, 0, 255, 16),
    woosh.Token(woosh.NAME, 'toks_append', 255, 16, 255, 27),
    woosh.Token(woosh.OP, '(', 255, 27, 255, 28),
    woosh.Token(woosh.NAME, 'indents', 255, 28, 255, 35),
    woosh.Token(woosh.OP, '[', 255, 35, 255, 36),
    woosh.Token(woosh.OP, '-', 255, 36, 255, 37),
    woosh.Token(woosh.NUMBER, '1', 255, 37, 255, 38),
    woosh.Token(woosh.OP, ']', 255, 38, 255, 39),
    woosh.Token(woosh.OP, ')', 255, 39, 255, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 255, 40, 256, 0),
    woosh.Token(woosh.NAME, 'startline', 256, 16, 256, 25),
    woosh.Token(woosh.OP, '=', 256, 26, 256, 27),
    woosh.Token(woosh.NAME, 'False', 256, 28, 256, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 256, 33, 257, 0),
    woosh.Token(woosh.DEDENT, '            ', 257, 0, 257, 12),
    woosh.Token(woosh.NAME, 'toks_append', 257, 12, 257, 23),
    woosh.Token(woosh.OP, '(', 257, 23, 257, 24),
    woosh.Token(woosh.NAME, 'tokval', 257, 24, 257, 30),
    woosh.Token(woosh.OP, ')', 257, 30, 257, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 257, 31, 258, 0),
    woosh.Token(woosh.DEDENT, '', 260, 0, 260, 0),
    woosh.Token(woosh.DEDENT, '', 260, 0, 260, 0),
    woosh.Token(woosh.DEDENT, '', 260, 0, 260, 0),
    woosh.Token(woosh.NAME, 'def', 260, 0, 260, 3),
    woosh.Token(woosh.NAME, 'untokenize', 260, 4, 260, 14),
    woosh.Token(woosh.OP, '(', 260, 14, 260, 15),
    woosh.Token(woosh.NAME, 'iterable', 260, 15, 260, 23),
    woosh.Token(woosh.OP, ')', 260, 23, 260, 24),
    woosh.Token(woosh.OP, ':', 260, 24, 260, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 260, 25, 261, 0),
    woosh.Token(woosh.INDENT, '    ', 261, 0, 261, 4),
    woosh.Token(woosh.STRING, '"""Transform tokens back into Python source code.\r\n    It returns a bytes object, encoded using the ENCODING\r\n    token, which is the first token sequence output by tokenize.\r\n\r\n    Each element returned by the iterable must be a token sequence\r\n    with at least two elements, a token number and token value.  If\r\n    only two tokens are passed, the resulting output is poor.\r\n\r\n    Round-trip invariant for full input:\r\n        Untokenized source will match input source exactly\r\n\r\n    Round-trip invariant for limited input:\r\n        # Output bytes will tokenize back to the input\r\n        t1 = [tok[:2] for tok in tokenize(f.readline)]\r\n        newcode = untokenize(t1)\r\n        readline = BytesIO(newcode).readline\r\n        t2 = [tok[:2] for tok in tokenize(readline)]\r\n        assert t1 == t2\r\n    """', 261, 4, 279, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 279, 7, 280, 0),
    woosh.Token(woosh.NAME, 'ut', 280, 4, 280, 6),
    woosh.Token(woosh.OP, '=', 280, 7, 280, 8),
    woosh.Token(woosh.NAME, 'Untokenizer', 280, 9, 280, 20),
    woosh.Token(woosh.OP, '(', 280, 20, 280, 21),
    woosh.Token(woosh.OP, ')', 280, 21, 280, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 280, 22, 281, 0),
    woosh.Token(woosh.NAME, 'out', 281, 4, 281, 7),
    woosh.Token(woosh.OP, '=', 281, 8, 281, 9),
    woosh.Token(woosh.NAME, 'ut', 281, 10, 281, 12),
    woosh.Token(woosh.OP, '.', 281, 12, 281, 13),
    woosh.Token(woosh.NAME, 'untokenize', 281, 13, 281, 23),
    woosh.Token(woosh.OP, '(', 281, 23, 281, 24),
    woosh.Token(woosh.NAME, 'iterable', 281, 24, 281, 32),
    woosh.Token(woosh.OP, ')', 281, 32, 281, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 281, 33, 282, 0),
    woosh.Token(woosh.NAME, 'if', 282, 4, 282, 6),
    woosh.Token(woosh.NAME, 'ut', 282, 7, 282, 9),
    woosh.Token(woosh.OP, '.', 282, 9, 282, 10),
    woosh.Token(woosh.NAME, 'encoding', 282, 10, 282, 18),
    woosh.Token(woosh.NAME, 'is', 282, 19, 282, 21),
    woosh.Token(woosh.NAME, 'not', 282, 22, 282, 25),
    woosh.Token(woosh.NAME, 'None', 282, 26, 282, 30),
    woosh.Token(woosh.OP, ':', 282, 30, 282, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 282, 31, 283, 0),
    woosh.Token(woosh.INDENT, '        ', 283, 0, 283, 8),
    woosh.Token(woosh.NAME, 'out', 283, 8, 283, 11),
    woosh.Token(woosh.OP, '=', 283, 12, 283, 13),
    woosh.Token(woosh.NAME, 'out', 283, 14, 283, 17),
    woosh.Token(woosh.OP, '.', 283, 17, 283, 18),
    woosh.Token(woosh.NAME, 'encode', 283, 18, 283, 24),
    woosh.Token(woosh.OP, '(', 283, 24, 283, 25),
    woosh.Token(woosh.NAME, 'ut', 283, 25, 283, 27),
    woosh.Token(woosh.OP, '.', 283, 27, 283, 28),
    woosh.Token(woosh.NAME, 'encoding', 283, 28, 283, 36),
    woosh.Token(woosh.OP, ')', 283, 36, 283, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 283, 37, 284, 0),
    woosh.Token(woosh.DEDENT, '    ', 284, 0, 284, 4),
    woosh.Token(woosh.NAME, 'return', 284, 4, 284, 10),
    woosh.Token(woosh.NAME, 'out', 284, 11, 284, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 284, 14, 285, 0),
    woosh.Token(woosh.DEDENT, '', 287, 0, 287, 0),
    woosh.Token(woosh.NAME, 'def', 287, 0, 287, 3),
    woosh.Token(woosh.NAME, '_get_normal_name', 287, 4, 287, 20),
    woosh.Token(woosh.OP, '(', 287, 20, 287, 21),
    woosh.Token(woosh.NAME, 'orig_enc', 287, 21, 287, 29),
    woosh.Token(woosh.OP, ')', 287, 29, 287, 30),
    woosh.Token(woosh.OP, ':', 287, 30, 287, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 287, 31, 288, 0),
    woosh.Token(woosh.INDENT, '    ', 288, 0, 288, 4),
    woosh.Token(woosh.STRING, '"""Imitates get_normal_name in tokenizer.c."""', 288, 4, 288, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 288, 50, 289, 0),
    woosh.Token(woosh.COMMENT, '# Only care about the first 12 characters.', 289, 4, 289, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 289, 46, 290, 0),
    woosh.Token(woosh.NAME, 'enc', 290, 4, 290, 7),
    woosh.Token(woosh.OP, '=', 290, 8, 290, 9),
    woosh.Token(woosh.NAME, 'orig_enc', 290, 10, 290, 18),
    woosh.Token(woosh.OP, '[', 290, 18, 290, 19),
    woosh.Token(woosh.OP, ':', 290, 19, 290, 20),
    woosh.Token(woosh.NUMBER, '12', 290, 20, 290, 22),
    woosh.Token(woosh.OP, ']', 290, 22, 290, 23),
    woosh.Token(woosh.OP, '.', 290, 23, 290, 24),
    woosh.Token(woosh.NAME, 'lower', 290, 24, 290, 29),
    woosh.Token(woosh.OP, '(', 290, 29, 290, 30),
    woosh.Token(woosh.OP, ')', 290, 30, 290, 31),
    woosh.Token(woosh.OP, '.', 290, 31, 290, 32),
    woosh.Token(woosh.NAME, 'replace', 290, 32, 290, 39),
    woosh.Token(woosh.OP, '(', 290, 39, 290, 40),
    woosh.Token(woosh.STRING, '"_"', 290, 40, 290, 43),
    woosh.Token(woosh.OP, ',', 290, 43, 290, 44),
    woosh.Token(woosh.STRING, '"-"', 290, 45, 290, 48),
    woosh.Token(woosh.OP, ')', 290, 48, 290, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 290, 49, 291, 0),
    woosh.Token(woosh.NAME, 'if', 291, 4, 291, 6),
    woosh.Token(woosh.NAME, 'enc', 291, 7, 291, 10),
    woosh.Token(woosh.OP, '==', 291, 11, 291, 13),
    woosh.Token(woosh.STRING, '"utf-8"', 291, 14, 291, 21),
    woosh.Token(woosh.NAME, 'or', 291, 22, 291, 24),
    woosh.Token(woosh.NAME, 'enc', 291, 25, 291, 28),
    woosh.Token(woosh.OP, '.', 291, 28, 291, 29),
    woosh.Token(woosh.NAME, 'startswith', 291, 29, 291, 39),
    woosh.Token(woosh.OP, '(', 291, 39, 291, 40),
    woosh.Token(woosh.STRING, '"utf-8-"', 291, 40, 291, 48),
    woosh.Token(woosh.OP, ')', 291, 48, 291, 49),
    woosh.Token(woosh.OP, ':', 291, 49, 291, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 291, 50, 292, 0),
    woosh.Token(woosh.INDENT, '        ', 292, 0, 292, 8),
    woosh.Token(woosh.NAME, 'return', 292, 8, 292, 14),
    woosh.Token(woosh.STRING, '"utf-8"', 292, 15, 292, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 292, 22, 293, 0),
    woosh.Token(woosh.DEDENT, '    ', 293, 0, 293, 4),
    woosh.Token(woosh.NAME, 'if', 293, 4, 293, 6),
    woosh.Token(woosh.NAME, 'enc', 293, 7, 293, 10),
    woosh.Token(woosh.NAME, 'in', 293, 11, 293, 13),
    woosh.Token(woosh.OP, '(', 293, 14, 293, 15),
    woosh.Token(woosh.STRING, '"latin-1"', 293, 15, 293, 24),
    woosh.Token(woosh.OP, ',', 293, 24, 293, 25),
    woosh.Token(woosh.STRING, '"iso-8859-1"', 293, 26, 293, 38),
    woosh.Token(woosh.OP, ',', 293, 38, 293, 39),
    woosh.Token(woosh.STRING, '"iso-latin-1"', 293, 40, 293, 53),
    woosh.Token(woosh.OP, ')', 293, 53, 293, 54),
    woosh.Token(woosh.NAME, 'or', 293, 55, 293, 57),
    woosh.Token(woosh.NAME, 'enc', 294, 7, 294, 10),
    woosh.Token(woosh.OP, '.', 294, 10, 294, 11),
    woosh.Token(woosh.NAME, 'startswith', 294, 11, 294, 21),
    woosh.Token(woosh.OP, '(', 294, 21, 294, 22),
    woosh.Token(woosh.OP, '(', 294, 22, 294, 23),
    woosh.Token(woosh.STRING, '"latin-1-"', 294, 23, 294, 33),
    woosh.Token(woosh.OP, ',', 294, 33, 294, 34),
    woosh.Token(woosh.STRING, '"iso-8859-1-"', 294, 35, 294, 48),
    woosh.Token(woosh.OP, ',', 294, 48, 294, 49),
    woosh.Token(woosh.STRING, '"iso-latin-1-"', 294, 50, 294, 64),
    woosh.Token(woosh.OP, ')', 294, 64, 294, 65),
    woosh.Token(woosh.OP, ')', 294, 65, 294, 66),
    woosh.Token(woosh.OP, ':', 294, 66, 294, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 294, 67, 295, 0),
    woosh.Token(woosh.INDENT, '        ', 295, 0, 295, 8),
    woosh.Token(woosh.NAME, 'return', 295, 8, 295, 14),
    woosh.Token(woosh.STRING, '"iso-8859-1"', 295, 15, 295, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 295, 27, 296, 0),
    woosh.Token(woosh.DEDENT, '    ', 296, 0, 296, 4),
    woosh.Token(woosh.NAME, 'return', 296, 4, 296, 10),
    woosh.Token(woosh.NAME, 'orig_enc', 296, 11, 296, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 296, 19, 297, 0),
    woosh.Token(woosh.DEDENT, '', 298, 0, 298, 0),
    woosh.Token(woosh.NAME, 'def', 298, 0, 298, 3),
    woosh.Token(woosh.NAME, 'detect_encoding', 298, 4, 298, 19),
    woosh.Token(woosh.OP, '(', 298, 19, 298, 20),
    woosh.Token(woosh.NAME, 'readline', 298, 20, 298, 28),
    woosh.Token(woosh.OP, ')', 298, 28, 298, 29),
    woosh.Token(woosh.OP, ':', 298, 29, 298, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 298, 30, 299, 0),
    woosh.Token(woosh.INDENT, '    ', 299, 0, 299, 4),
    woosh.Token(woosh.STRING, '"""\r\n    The detect_encoding() function is used to detect the encoding that should\r\n    be used to decode a Python source file.  It requires one argument, readline,\r\n    in the same way as the tokenize() generator.\r\n\r\n    It will call readline a maximum of twice, and return the encoding used\r\n    (as a string) and a list of any lines (left as bytes) it has read in.\r\n\r\n    It detects the encoding from the presence of a utf-8 bom or an encoding\r\n    cookie as specified in pep-0263.  If both a bom and a cookie are present,\r\n    but disagree, a SyntaxError will be raised.  If the encoding cookie is an\r\n    invalid charset, raise a SyntaxError.  Note that if a utf-8 bom is found,\r\n    \'utf-8-sig\' is returned.\r\n\r\n    If no encoding is specified, then the default of \'utf-8\' will be returned.\r\n    """', 299, 4, 314, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 314, 7, 315, 0),
    woosh.Token(woosh.NAME, 'try', 315, 4, 315, 7),
    woosh.Token(woosh.OP, ':', 315, 7, 315, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 315, 8, 316, 0),
    woosh.Token(woosh.INDENT, '        ', 316, 0, 316, 8),
    woosh.Token(woosh.NAME, 'filename', 316, 8, 316, 16),
    woosh.Token(woosh.OP, '=', 316, 17, 316, 18),
    woosh.Token(woosh.NAME, 'readline', 316, 19, 316, 27),
    woosh.Token(woosh.OP, '.', 316, 27, 316, 28),
    woosh.Token(woosh.NAME, '__self__', 316, 28, 316, 36),
    woosh.Token(woosh.OP, '.', 316, 36, 316, 37),
    woosh.Token(woosh.NAME, 'name', 316, 37, 316, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 316, 41, 317, 0),
    woosh.Token(woosh.DEDENT, '    ', 317, 0, 317, 4),
    woosh.Token(woosh.NAME, 'except', 317, 4, 317, 10),
    woosh.Token(woosh.NAME, 'AttributeError', 317, 11, 317, 25),
    woosh.Token(woosh.OP, ':', 317, 25, 317, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 317, 26, 318, 0),
    woosh.Token(woosh.INDENT, '        ', 318, 0, 318, 8),
    woosh.Token(woosh.NAME, 'filename', 318, 8, 318, 16),
    woosh.Token(woosh.OP, '=', 318, 17, 318, 18),
    woosh.Token(woosh.NAME, 'None', 318, 19, 318, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 318, 23, 319, 0),
    woosh.Token(woosh.DEDENT, '    ', 319, 0, 319, 4),
    woosh.Token(woosh.NAME, 'bom_found', 319, 4, 319, 13),
    woosh.Token(woosh.OP, '=', 319, 14, 319, 15),
    woosh.Token(woosh.NAME, 'False', 319, 16, 319, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 319, 21, 320, 0),
    woosh.Token(woosh.NAME, 'encoding', 320, 4, 320, 12),
    woosh.Token(woosh.OP, '=', 320, 13, 320, 14),
    woosh.Token(woosh.NAME, 'None', 320, 15, 320, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 320, 19, 321, 0),
    woosh.Token(woosh.NAME, 'default', 321, 4, 321, 11),
    woosh.Token(woosh.OP, '=', 321, 12, 321, 13),
    woosh.Token(woosh.STRING, "'utf-8'", 321, 14, 321, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 321, 21, 322, 0),
    woosh.Token(woosh.NAME, 'def', 322, 4, 322, 7),
    woosh.Token(woosh.NAME, 'read_or_stop', 322, 8, 322, 20),
    woosh.Token(woosh.OP, '(', 322, 20, 322, 21),
    woosh.Token(woosh.OP, ')', 322, 21, 322, 22),
    woosh.Token(woosh.OP, ':', 322, 22, 322, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 322, 23, 323, 0),
    woosh.Token(woosh.INDENT, '        ', 323, 0, 323, 8),
    woosh.Token(woosh.NAME, 'try', 323, 8, 323, 11),
    woosh.Token(woosh.OP, ':', 323, 11, 323, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 323, 12, 324, 0),
    woosh.Token(woosh.INDENT, '            ', 324, 0, 324, 12),
    woosh.Token(woosh.NAME, 'return', 324, 12, 324, 18),
    woosh.Token(woosh.NAME, 'readline', 324, 19, 324, 27),
    woosh.Token(woosh.OP, '(', 324, 27, 324, 28),
    woosh.Token(woosh.OP, ')', 324, 28, 324, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 324, 29, 325, 0),
    woosh.Token(woosh.DEDENT, '        ', 325, 0, 325, 8),
    woosh.Token(woosh.NAME, 'except', 325, 8, 325, 14),
    woosh.Token(woosh.NAME, 'StopIteration', 325, 15, 325, 28),
    woosh.Token(woosh.OP, ':', 325, 28, 325, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 325, 29, 326, 0),
    woosh.Token(woosh.INDENT, '            ', 326, 0, 326, 12),
    woosh.Token(woosh.NAME, 'return', 326, 12, 326, 18),
    woosh.Token(woosh.STRING, "b''", 326, 19, 326, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 326, 22, 327, 0),
    woosh.Token(woosh.DEDENT, '    ', 328, 0, 328, 4),
    woosh.Token(woosh.DEDENT, '', 328, 4, 328, 4),
    woosh.Token(woosh.NAME, 'def', 328, 4, 328, 7),
    woosh.Token(woosh.NAME, 'find_cookie', 328, 8, 328, 19),
    woosh.Token(woosh.OP, '(', 328, 19, 328, 20),
    woosh.Token(woosh.NAME, 'line', 328, 20, 328, 24),
    woosh.Token(woosh.OP, ')', 328, 24, 328, 25),
    woosh.Token(woosh.OP, ':', 328, 25, 328, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 328, 26, 329, 0),
    woosh.Token(woosh.INDENT, '        ', 329, 0, 329, 8),
    woosh.Token(woosh.NAME, 'try', 329, 8, 329, 11),
    woosh.Token(woosh.OP, ':', 329, 11, 329, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 329, 12, 330, 0),
    woosh.Token(woosh.COMMENT, '# Decode as UTF-8. Either the line is an encoding declaration,', 330, 12, 330, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 330, 74, 331, 0),
    woosh.Token(woosh.COMMENT, '# in which case it should be pure ASCII, or it must be UTF-8', 331, 12, 331, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 331, 72, 332, 0),
    woosh.Token(woosh.COMMENT, '# per default encoding.', 332, 12, 332, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 332, 35, 333, 0),
    woosh.Token(woosh.INDENT, '            ', 333, 0, 333, 12),
    woosh.Token(woosh.NAME, 'line_string', 333, 12, 333, 23),
    woosh.Token(woosh.OP, '=', 333, 24, 333, 25),
    woosh.Token(woosh.NAME, 'line', 333, 26, 333, 30),
    woosh.Token(woosh.OP, '.', 333, 30, 333, 31),
    woosh.Token(woosh.NAME, 'decode', 333, 31, 333, 37),
    woosh.Token(woosh.OP, '(', 333, 37, 333, 38),
    woosh.Token(woosh.STRING, "'utf-8'", 333, 38, 333, 45),
    woosh.Token(woosh.OP, ')', 333, 45, 333, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 333, 46, 334, 0),
    woosh.Token(woosh.DEDENT, '        ', 334, 0, 334, 8),
    woosh.Token(woosh.NAME, 'except', 334, 8, 334, 14),
    woosh.Token(woosh.NAME, 'UnicodeDecodeError', 334, 15, 334, 33),
    woosh.Token(woosh.OP, ':', 334, 33, 334, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 334, 34, 335, 0),
    woosh.Token(woosh.INDENT, '            ', 335, 0, 335, 12),
    woosh.Token(woosh.NAME, 'msg', 335, 12, 335, 15),
    woosh.Token(woosh.OP, '=', 335, 16, 335, 17),
    woosh.Token(woosh.STRING, '"invalid or missing encoding declaration"', 335, 18, 335, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 335, 59, 336, 0),
    woosh.Token(woosh.NAME, 'if', 336, 12, 336, 14),
    woosh.Token(woosh.NAME, 'filename', 336, 15, 336, 23),
    woosh.Token(woosh.NAME, 'is', 336, 24, 336, 26),
    woosh.Token(woosh.NAME, 'not', 336, 27, 336, 30),
    woosh.Token(woosh.NAME, 'None', 336, 31, 336, 35),
    woosh.Token(woosh.OP, ':', 336, 35, 336, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 336, 36, 337, 0),
    woosh.Token(woosh.INDENT, '                ', 337, 0, 337, 16),
    woosh.Token(woosh.NAME, 'msg', 337, 16, 337, 19),
    woosh.Token(woosh.OP, '=', 337, 20, 337, 21),
    woosh.Token(woosh.STRING, "'{} for {!r}'", 337, 22, 337, 35),
    woosh.Token(woosh.OP, '.', 337, 35, 337, 36),
    woosh.Token(woosh.NAME, 'format', 337, 36, 337, 42),
    woosh.Token(woosh.OP, '(', 337, 42, 337, 43),
    woosh.Token(woosh.NAME, 'msg', 337, 43, 337, 46),
    woosh.Token(woosh.OP, ',', 337, 46, 337, 47),
    woosh.Token(woosh.NAME, 'filename', 337, 48, 337, 56),
    woosh.Token(woosh.OP, ')', 337, 56, 337, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 337, 57, 338, 0),
    woosh.Token(woosh.DEDENT, '            ', 338, 0, 338, 12),
    woosh.Token(woosh.NAME, 'raise', 338, 12, 338, 17),
    woosh.Token(woosh.NAME, 'SyntaxError', 338, 18, 338, 29),
    woosh.Token(woosh.OP, '(', 338, 29, 338, 30),
    woosh.Token(woosh.NAME, 'msg', 338, 30, 338, 33),
    woosh.Token(woosh.OP, ')', 338, 33, 338, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 338, 34, 339, 0),
    woosh.Token(woosh.DEDENT, '        ', 340, 0, 340, 8),
    woosh.Token(woosh.NAME, 'match', 340, 8, 340, 13),
    woosh.Token(woosh.OP, '=', 340, 14, 340, 15),
    woosh.Token(woosh.NAME, 'cookie_re', 340, 16, 340, 25),
    woosh.Token(woosh.OP, '.', 340, 25, 340, 26),
    woosh.Token(woosh.NAME, 'match', 340, 26, 340, 31),
    woosh.Token(woosh.OP, '(', 340, 31, 340, 32),
    woosh.Token(woosh.NAME, 'line_string', 340, 32, 340, 43),
    woosh.Token(woosh.OP, ')', 340, 43, 340, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 340, 44, 341, 0),
    woosh.Token(woosh.NAME, 'if', 341, 8, 341, 10),
    woosh.Token(woosh.NAME, 'not', 341, 11, 341, 14),
    woosh.Token(woosh.NAME, 'match', 341, 15, 341, 20),
    woosh.Token(woosh.OP, ':', 341, 20, 341, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 341, 21, 342, 0),
    woosh.Token(woosh.INDENT, '            ', 342, 0, 342, 12),
    woosh.Token(woosh.NAME, 'return', 342, 12, 342, 18),
    woosh.Token(woosh.NAME, 'None', 342, 19, 342, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 342, 23, 343, 0),
    woosh.Token(woosh.DEDENT, '        ', 343, 0, 343, 8),
    woosh.Token(woosh.NAME, 'encoding', 343, 8, 343, 16),
    woosh.Token(woosh.OP, '=', 343, 17, 343, 18),
    woosh.Token(woosh.NAME, '_get_normal_name', 343, 19, 343, 35),
    woosh.Token(woosh.OP, '(', 343, 35, 343, 36),
    woosh.Token(woosh.NAME, 'match', 343, 36, 343, 41),
    woosh.Token(woosh.OP, '.', 343, 41, 343, 42),
    woosh.Token(woosh.NAME, 'group', 343, 42, 343, 47),
    woosh.Token(woosh.OP, '(', 343, 47, 343, 48),
    woosh.Token(woosh.NUMBER, '1', 343, 48, 343, 49),
    woosh.Token(woosh.OP, ')', 343, 49, 343, 50),
    woosh.Token(woosh.OP, ')', 343, 50, 343, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 343, 51, 344, 0),
    woosh.Token(woosh.NAME, 'try', 344, 8, 344, 11),
    woosh.Token(woosh.OP, ':', 344, 11, 344, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 344, 12, 345, 0),
    woosh.Token(woosh.INDENT, '            ', 345, 0, 345, 12),
    woosh.Token(woosh.NAME, 'codec', 345, 12, 345, 17),
    woosh.Token(woosh.OP, '=', 345, 18, 345, 19),
    woosh.Token(woosh.NAME, 'lookup', 345, 20, 345, 26),
    woosh.Token(woosh.OP, '(', 345, 26, 345, 27),
    woosh.Token(woosh.NAME, 'encoding', 345, 27, 345, 35),
    woosh.Token(woosh.OP, ')', 345, 35, 345, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 345, 36, 346, 0),
    woosh.Token(woosh.DEDENT, '        ', 346, 0, 346, 8),
    woosh.Token(woosh.NAME, 'except', 346, 8, 346, 14),
    woosh.Token(woosh.NAME, 'LookupError', 346, 15, 346, 26),
    woosh.Token(woosh.OP, ':', 346, 26, 346, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 346, 27, 347, 0),
    woosh.Token(woosh.COMMENT, '# This behaviour mimics the Python interpreter', 347, 12, 347, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 347, 58, 348, 0),
    woosh.Token(woosh.INDENT, '            ', 348, 0, 348, 12),
    woosh.Token(woosh.NAME, 'if', 348, 12, 348, 14),
    woosh.Token(woosh.NAME, 'filename', 348, 15, 348, 23),
    woosh.Token(woosh.NAME, 'is', 348, 24, 348, 26),
    woosh.Token(woosh.NAME, 'None', 348, 27, 348, 31),
    woosh.Token(woosh.OP, ':', 348, 31, 348, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 348, 32, 349, 0),
    woosh.Token(woosh.INDENT, '                ', 349, 0, 349, 16),
    woosh.Token(woosh.NAME, 'msg', 349, 16, 349, 19),
    woosh.Token(woosh.OP, '=', 349, 20, 349, 21),
    woosh.Token(woosh.STRING, '"unknown encoding: "', 349, 22, 349, 42),
    woosh.Token(woosh.OP, '+', 349, 43, 349, 44),
    woosh.Token(woosh.NAME, 'encoding', 349, 45, 349, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 349, 53, 350, 0),
    woosh.Token(woosh.DEDENT, '            ', 350, 0, 350, 12),
    woosh.Token(woosh.NAME, 'else', 350, 12, 350, 16),
    woosh.Token(woosh.OP, ':', 350, 16, 350, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 350, 17, 351, 0),
    woosh.Token(woosh.INDENT, '                ', 351, 0, 351, 16),
    woosh.Token(woosh.NAME, 'msg', 351, 16, 351, 19),
    woosh.Token(woosh.OP, '=', 351, 20, 351, 21),
    woosh.Token(woosh.STRING, '"unknown encoding for {!r}: {}"', 351, 22, 351, 53),
    woosh.Token(woosh.OP, '.', 351, 53, 351, 54),
    woosh.Token(woosh.NAME, 'format', 351, 54, 351, 60),
    woosh.Token(woosh.OP, '(', 351, 60, 351, 61),
    woosh.Token(woosh.NAME, 'filename', 351, 61, 351, 69),
    woosh.Token(woosh.OP, ',', 351, 69, 351, 70),
    woosh.Token(woosh.NAME, 'encoding', 352, 24, 352, 32),
    woosh.Token(woosh.OP, ')', 352, 32, 352, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 352, 33, 353, 0),
    woosh.Token(woosh.DEDENT, '            ', 353, 0, 353, 12),
    woosh.Token(woosh.NAME, 'raise', 353, 12, 353, 17),
    woosh.Token(woosh.NAME, 'SyntaxError', 353, 18, 353, 29),
    woosh.Token(woosh.OP, '(', 353, 29, 353, 30),
    woosh.Token(woosh.NAME, 'msg', 353, 30, 353, 33),
    woosh.Token(woosh.OP, ')', 353, 33, 353, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 353, 34, 354, 0),
    woosh.Token(woosh.DEDENT, '        ', 355, 0, 355, 8),
    woosh.Token(woosh.NAME, 'if', 355, 8, 355, 10),
    woosh.Token(woosh.NAME, 'bom_found', 355, 11, 355, 20),
    woosh.Token(woosh.OP, ':', 355, 20, 355, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 355, 21, 356, 0),
    woosh.Token(woosh.INDENT, '            ', 356, 0, 356, 12),
    woosh.Token(woosh.NAME, 'if', 356, 12, 356, 14),
    woosh.Token(woosh.NAME, 'encoding', 356, 15, 356, 23),
    woosh.Token(woosh.OP, '!=', 356, 24, 356, 26),
    woosh.Token(woosh.STRING, "'utf-8'", 356, 27, 356, 34),
    woosh.Token(woosh.OP, ':', 356, 34, 356, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 356, 35, 357, 0),
    woosh.Token(woosh.COMMENT, '# This behaviour mimics the Python interpreter', 357, 16, 357, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 357, 62, 358, 0),
    woosh.Token(woosh.INDENT, '                ', 358, 0, 358, 16),
    woosh.Token(woosh.NAME, 'if', 358, 16, 358, 18),
    woosh.Token(woosh.NAME, 'filename', 358, 19, 358, 27),
    woosh.Token(woosh.NAME, 'is', 358, 28, 358, 30),
    woosh.Token(woosh.NAME, 'None', 358, 31, 358, 35),
    woosh.Token(woosh.OP, ':', 358, 35, 358, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 358, 36, 359, 0),
    woosh.Token(woosh.INDENT, '                    ', 359, 0, 359, 20),
    woosh.Token(woosh.NAME, 'msg', 359, 20, 359, 23),
    woosh.Token(woosh.OP, '=', 359, 24, 359, 25),
    woosh.Token(woosh.STRING, "'encoding problem: utf-8'", 359, 26, 359, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 359, 51, 360, 0),
    woosh.Token(woosh.DEDENT, '                ', 360, 0, 360, 16),
    woosh.Token(woosh.NAME, 'else', 360, 16, 360, 20),
    woosh.Token(woosh.OP, ':', 360, 20, 360, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 360, 21, 361, 0),
    woosh.Token(woosh.INDENT, '                    ', 361, 0, 361, 20),
    woosh.Token(woosh.NAME, 'msg', 361, 20, 361, 23),
    woosh.Token(woosh.OP, '=', 361, 24, 361, 25),
    woosh.Token(woosh.STRING, "'encoding problem for {!r}: utf-8'", 361, 26, 361, 60),
    woosh.Token(woosh.OP, '.', 361, 60, 361, 61),
    woosh.Token(woosh.NAME, 'format', 361, 61, 361, 67),
    woosh.Token(woosh.OP, '(', 361, 67, 361, 68),
    woosh.Token(woosh.NAME, 'filename', 361, 68, 361, 76),
    woosh.Token(woosh.OP, ')', 361, 76, 361, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 361, 77, 362, 0),
    woosh.Token(woosh.DEDENT, '                ', 362, 0, 362, 16),
    woosh.Token(woosh.NAME, 'raise', 362, 16, 362, 21),
    woosh.Token(woosh.NAME, 'SyntaxError', 362, 22, 362, 33),
    woosh.Token(woosh.OP, '(', 362, 33, 362, 34),
    woosh.Token(woosh.NAME, 'msg', 362, 34, 362, 37),
    woosh.Token(woosh.OP, ')', 362, 37, 362, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 362, 38, 363, 0),
    woosh.Token(woosh.DEDENT, '            ', 363, 0, 363, 12),
    woosh.Token(woosh.NAME, 'encoding', 363, 12, 363, 20),
    woosh.Token(woosh.OP, '+=', 363, 21, 363, 23),
    woosh.Token(woosh.STRING, "'-sig'", 363, 24, 363, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 363, 30, 364, 0),
    woosh.Token(woosh.DEDENT, '        ', 364, 0, 364, 8),
    woosh.Token(woosh.NAME, 'return', 364, 8, 364, 14),
    woosh.Token(woosh.NAME, 'encoding', 364, 15, 364, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 364, 23, 365, 0),
    woosh.Token(woosh.DEDENT, '    ', 366, 0, 366, 4),
    woosh.Token(woosh.NAME, 'first', 366, 4, 366, 9),
    woosh.Token(woosh.OP, '=', 366, 10, 366, 11),
    woosh.Token(woosh.NAME, 'read_or_stop', 366, 12, 366, 24),
    woosh.Token(woosh.OP, '(', 366, 24, 366, 25),
    woosh.Token(woosh.OP, ')', 366, 25, 366, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 366, 26, 367, 0),
    woosh.Token(woosh.NAME, 'if', 367, 4, 367, 6),
    woosh.Token(woosh.NAME, 'first', 367, 7, 367, 12),
    woosh.Token(woosh.OP, '.', 367, 12, 367, 13),
    woosh.Token(woosh.NAME, 'startswith', 367, 13, 367, 23),
    woosh.Token(woosh.OP, '(', 367, 23, 367, 24),
    woosh.Token(woosh.NAME, 'BOM_UTF8', 367, 24, 367, 32),
    woosh.Token(woosh.OP, ')', 367, 32, 367, 33),
    woosh.Token(woosh.OP, ':', 367, 33, 367, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 367, 34, 368, 0),
    woosh.Token(woosh.INDENT, '        ', 368, 0, 368, 8),
    woosh.Token(woosh.NAME, 'bom_found', 368, 8, 368, 17),
    woosh.Token(woosh.OP, '=', 368, 18, 368, 19),
    woosh.Token(woosh.NAME, 'True', 368, 20, 368, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 368, 24, 369, 0),
    woosh.Token(woosh.NAME, 'first', 369, 8, 369, 13),
    woosh.Token(woosh.OP, '=', 369, 14, 369, 15),
    woosh.Token(woosh.NAME, 'first', 369, 16, 369, 21),
    woosh.Token(woosh.OP, '[', 369, 21, 369, 22),
    woosh.Token(woosh.NUMBER, '3', 369, 22, 369, 23),
    woosh.Token(woosh.OP, ':', 369, 23, 369, 24),
    woosh.Token(woosh.OP, ']', 369, 24, 369, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 369, 25, 370, 0),
    woosh.Token(woosh.NAME, 'default', 370, 8, 370, 15),
    woosh.Token(woosh.OP, '=', 370, 16, 370, 17),
    woosh.Token(woosh.STRING, "'utf-8-sig'", 370, 18, 370, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 370, 29, 371, 0),
    woosh.Token(woosh.DEDENT, '    ', 371, 0, 371, 4),
    woosh.Token(woosh.NAME, 'if', 371, 4, 371, 6),
    woosh.Token(woosh.NAME, 'not', 371, 7, 371, 10),
    woosh.Token(woosh.NAME, 'first', 371, 11, 371, 16),
    woosh.Token(woosh.OP, ':', 371, 16, 371, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 371, 17, 372, 0),
    woosh.Token(woosh.INDENT, '        ', 372, 0, 372, 8),
    woosh.Token(woosh.NAME, 'return', 372, 8, 372, 14),
    woosh.Token(woosh.NAME, 'default', 372, 15, 372, 22),
    woosh.Token(woosh.OP, ',', 372, 22, 372, 23),
    woosh.Token(woosh.OP, '[', 372, 24, 372, 25),
    woosh.Token(woosh.OP, ']', 372, 25, 372, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 372, 26, 373, 0),
    woosh.Token(woosh.DEDENT, '    ', 374, 0, 374, 4),
    woosh.Token(woosh.NAME, 'encoding', 374, 4, 374, 12),
    woosh.Token(woosh.OP, '=', 374, 13, 374, 14),
    woosh.Token(woosh.NAME, 'find_cookie', 374, 15, 374, 26),
    woosh.Token(woosh.OP, '(', 374, 26, 374, 27),
    woosh.Token(woosh.NAME, 'first', 374, 27, 374, 32),
    woosh.Token(woosh.OP, ')', 374, 32, 374, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 374, 33, 375, 0),
    woosh.Token(woosh.NAME, 'if', 375, 4, 375, 6),
    woosh.Token(woosh.NAME, 'encoding', 375, 7, 375, 15),
    woosh.Token(woosh.OP, ':', 375, 15, 375, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 375, 16, 376, 0),
    woosh.Token(woosh.INDENT, '        ', 376, 0, 376, 8),
    woosh.Token(woosh.NAME, 'return', 376, 8, 376, 14),
    woosh.Token(woosh.NAME, 'encoding', 376, 15, 376, 23),
    woosh.Token(woosh.OP, ',', 376, 23, 376, 24),
    woosh.Token(woosh.OP, '[', 376, 25, 376, 26),
    woosh.Token(woosh.NAME, 'first', 376, 26, 376, 31),
    woosh.Token(woosh.OP, ']', 376, 31, 376, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 376, 32, 377, 0),
    woosh.Token(woosh.DEDENT, '    ', 377, 0, 377, 4),
    woosh.Token(woosh.NAME, 'if', 377, 4, 377, 6),
    woosh.Token(woosh.NAME, 'not', 377, 7, 377, 10),
    woosh.Token(woosh.NAME, 'blank_re', 377, 11, 377, 19),
    woosh.Token(woosh.OP, '.', 377, 19, 377, 20),
    woosh.Token(woosh.NAME, 'match', 377, 20, 377, 25),
    woosh.Token(woosh.OP, '(', 377, 25, 377, 26),
    woosh.Token(woosh.NAME, 'first', 377, 26, 377, 31),
    woosh.Token(woosh.OP, ')', 377, 31, 377, 32),
    woosh.Token(woosh.OP, ':', 377, 32, 377, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 377, 33, 378, 0),
    woosh.Token(woosh.INDENT, '        ', 378, 0, 378, 8),
    woosh.Token(woosh.NAME, 'return', 378, 8, 378, 14),
    woosh.Token(woosh.NAME, 'default', 378, 15, 378, 22),
    woosh.Token(woosh.OP, ',', 378, 22, 378, 23),
    woosh.Token(woosh.OP, '[', 378, 24, 378, 25),
    woosh.Token(woosh.NAME, 'first', 378, 25, 378, 30),
    woosh.Token(woosh.OP, ']', 378, 30, 378, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 378, 31, 379, 0),
    woosh.Token(woosh.DEDENT, '    ', 380, 0, 380, 4),
    woosh.Token(woosh.NAME, 'second', 380, 4, 380, 10),
    woosh.Token(woosh.OP, '=', 380, 11, 380, 12),
    woosh.Token(woosh.NAME, 'read_or_stop', 380, 13, 380, 25),
    woosh.Token(woosh.OP, '(', 380, 25, 380, 26),
    woosh.Token(woosh.OP, ')', 380, 26, 380, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 380, 27, 381, 0),
    woosh.Token(woosh.NAME, 'if', 381, 4, 381, 6),
    woosh.Token(woosh.NAME, 'not', 381, 7, 381, 10),
    woosh.Token(woosh.NAME, 'second', 381, 11, 381, 17),
    woosh.Token(woosh.OP, ':', 381, 17, 381, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 381, 18, 382, 0),
    woosh.Token(woosh.INDENT, '        ', 382, 0, 382, 8),
    woosh.Token(woosh.NAME, 'return', 382, 8, 382, 14),
    woosh.Token(woosh.NAME, 'default', 382, 15, 382, 22),
    woosh.Token(woosh.OP, ',', 382, 22, 382, 23),
    woosh.Token(woosh.OP, '[', 382, 24, 382, 25),
    woosh.Token(woosh.NAME, 'first', 382, 25, 382, 30),
    woosh.Token(woosh.OP, ']', 382, 30, 382, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 382, 31, 383, 0),
    woosh.Token(woosh.DEDENT, '    ', 384, 0, 384, 4),
    woosh.Token(woosh.NAME, 'encoding', 384, 4, 384, 12),
    woosh.Token(woosh.OP, '=', 384, 13, 384, 14),
    woosh.Token(woosh.NAME, 'find_cookie', 384, 15, 384, 26),
    woosh.Token(woosh.OP, '(', 384, 26, 384, 27),
    woosh.Token(woosh.NAME, 'second', 384, 27, 384, 33),
    woosh.Token(woosh.OP, ')', 384, 33, 384, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 384, 34, 385, 0),
    woosh.Token(woosh.NAME, 'if', 385, 4, 385, 6),
    woosh.Token(woosh.NAME, 'encoding', 385, 7, 385, 15),
    woosh.Token(woosh.OP, ':', 385, 15, 385, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 385, 16, 386, 0),
    woosh.Token(woosh.INDENT, '        ', 386, 0, 386, 8),
    woosh.Token(woosh.NAME, 'return', 386, 8, 386, 14),
    woosh.Token(woosh.NAME, 'encoding', 386, 15, 386, 23),
    woosh.Token(woosh.OP, ',', 386, 23, 386, 24),
    woosh.Token(woosh.OP, '[', 386, 25, 386, 26),
    woosh.Token(woosh.NAME, 'first', 386, 26, 386, 31),
    woosh.Token(woosh.OP, ',', 386, 31, 386, 32),
    woosh.Token(woosh.NAME, 'second', 386, 33, 386, 39),
    woosh.Token(woosh.OP, ']', 386, 39, 386, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 386, 40, 387, 0),
    woosh.Token(woosh.DEDENT, '    ', 388, 0, 388, 4),
    woosh.Token(woosh.NAME, 'return', 388, 4, 388, 10),
    woosh.Token(woosh.NAME, 'default', 388, 11, 388, 18),
    woosh.Token(woosh.OP, ',', 388, 18, 388, 19),
    woosh.Token(woosh.OP, '[', 388, 20, 388, 21),
    woosh.Token(woosh.NAME, 'first', 388, 21, 388, 26),
    woosh.Token(woosh.OP, ',', 388, 26, 388, 27),
    woosh.Token(woosh.NAME, 'second', 388, 28, 388, 34),
    woosh.Token(woosh.OP, ']', 388, 34, 388, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 388, 35, 389, 0),
    woosh.Token(woosh.DEDENT, '', 391, 0, 391, 0),
    woosh.Token(woosh.NAME, 'def', 391, 0, 391, 3),
    woosh.Token(woosh.NAME, 'open', 391, 4, 391, 8),
    woosh.Token(woosh.OP, '(', 391, 8, 391, 9),
    woosh.Token(woosh.NAME, 'filename', 391, 9, 391, 17),
    woosh.Token(woosh.OP, ')', 391, 17, 391, 18),
    woosh.Token(woosh.OP, ':', 391, 18, 391, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 391, 19, 392, 0),
    woosh.Token(woosh.INDENT, '    ', 392, 0, 392, 4),
    woosh.Token(woosh.STRING, '"""Open a file in read only mode using the encoding detected by\r\n    detect_encoding().\r\n    """', 392, 4, 394, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 394, 7, 395, 0),
    woosh.Token(woosh.NAME, 'buffer', 395, 4, 395, 10),
    woosh.Token(woosh.OP, '=', 395, 11, 395, 12),
    woosh.Token(woosh.NAME, '_builtin_open', 395, 13, 395, 26),
    woosh.Token(woosh.OP, '(', 395, 26, 395, 27),
    woosh.Token(woosh.NAME, 'filename', 395, 27, 395, 35),
    woosh.Token(woosh.OP, ',', 395, 35, 395, 36),
    woosh.Token(woosh.STRING, "'rb'", 395, 37, 395, 41),
    woosh.Token(woosh.OP, ')', 395, 41, 395, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 395, 42, 396, 0),
    woosh.Token(woosh.NAME, 'try', 396, 4, 396, 7),
    woosh.Token(woosh.OP, ':', 396, 7, 396, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 396, 8, 397, 0),
    woosh.Token(woosh.INDENT, '        ', 397, 0, 397, 8),
    woosh.Token(woosh.NAME, 'encoding', 397, 8, 397, 16),
    woosh.Token(woosh.OP, ',', 397, 16, 397, 17),
    woosh.Token(woosh.NAME, 'lines', 397, 18, 397, 23),
    woosh.Token(woosh.OP, '=', 397, 24, 397, 25),
    woosh.Token(woosh.NAME, 'detect_encoding', 397, 26, 397, 41),
    woosh.Token(woosh.OP, '(', 397, 41, 397, 42),
    woosh.Token(woosh.NAME, 'buffer', 397, 42, 397, 48),
    woosh.Token(woosh.OP, '.', 397, 48, 397, 49),
    woosh.Token(woosh.NAME, 'readline', 397, 49, 397, 57),
    woosh.Token(woosh.OP, ')', 397, 57, 397, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 397, 58, 398, 0),
    woosh.Token(woosh.NAME, 'buffer', 398, 8, 398, 14),
    woosh.Token(woosh.OP, '.', 398, 14, 398, 15),
    woosh.Token(woosh.NAME, 'seek', 398, 15, 398, 19),
    woosh.Token(woosh.OP, '(', 398, 19, 398, 20),
    woosh.Token(woosh.NUMBER, '0', 398, 20, 398, 21),
    woosh.Token(woosh.OP, ')', 398, 21, 398, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 398, 22, 399, 0),
    woosh.Token(woosh.NAME, 'text', 399, 8, 399, 12),
    woosh.Token(woosh.OP, '=', 399, 13, 399, 14),
    woosh.Token(woosh.NAME, 'TextIOWrapper', 399, 15, 399, 28),
    woosh.Token(woosh.OP, '(', 399, 28, 399, 29),
    woosh.Token(woosh.NAME, 'buffer', 399, 29, 399, 35),
    woosh.Token(woosh.OP, ',', 399, 35, 399, 36),
    woosh.Token(woosh.NAME, 'encoding', 399, 37, 399, 45),
    woosh.Token(woosh.OP, ',', 399, 45, 399, 46),
    woosh.Token(woosh.NAME, 'line_buffering', 399, 47, 399, 61),
    woosh.Token(woosh.OP, '=', 399, 61, 399, 62),
    woosh.Token(woosh.NAME, 'True', 399, 62, 399, 66),
    woosh.Token(woosh.OP, ')', 399, 66, 399, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 399, 67, 400, 0),
    woosh.Token(woosh.NAME, 'text', 400, 8, 400, 12),
    woosh.Token(woosh.OP, '.', 400, 12, 400, 13),
    woosh.Token(woosh.NAME, 'mode', 400, 13, 400, 17),
    woosh.Token(woosh.OP, '=', 400, 18, 400, 19),
    woosh.Token(woosh.STRING, "'r'", 400, 20, 400, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 400, 23, 401, 0),
    woosh.Token(woosh.NAME, 'return', 401, 8, 401, 14),
    woosh.Token(woosh.NAME, 'text', 401, 15, 401, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 401, 19, 402, 0),
    woosh.Token(woosh.DEDENT, '    ', 402, 0, 402, 4),
    woosh.Token(woosh.NAME, 'except', 402, 4, 402, 10),
    woosh.Token(woosh.OP, ':', 402, 10, 402, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 402, 11, 403, 0),
    woosh.Token(woosh.INDENT, '        ', 403, 0, 403, 8),
    woosh.Token(woosh.NAME, 'buffer', 403, 8, 403, 14),
    woosh.Token(woosh.OP, '.', 403, 14, 403, 15),
    woosh.Token(woosh.NAME, 'close', 403, 15, 403, 20),
    woosh.Token(woosh.OP, '(', 403, 20, 403, 21),
    woosh.Token(woosh.OP, ')', 403, 21, 403, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 403, 22, 404, 0),
    woosh.Token(woosh.NAME, 'raise', 404, 8, 404, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 404, 13, 405, 0),
    woosh.Token(woosh.DEDENT, '', 407, 0, 407, 0),
    woosh.Token(woosh.DEDENT, '', 407, 0, 407, 0),
    woosh.Token(woosh.NAME, 'def', 407, 0, 407, 3),
    woosh.Token(woosh.NAME, 'tokenize', 407, 4, 407, 12),
    woosh.Token(woosh.OP, '(', 407, 12, 407, 13),
    woosh.Token(woosh.NAME, 'readline', 407, 13, 407, 21),
    woosh.Token(woosh.OP, ')', 407, 21, 407, 22),
    woosh.Token(woosh.OP, ':', 407, 22, 407, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 407, 23, 408, 0),
    woosh.Token(woosh.INDENT, '    ', 408, 0, 408, 4),
    woosh.Token(woosh.STRING, '"""\r\n    The tokenize() generator requires one argument, readline, which\r\n    must be a callable object which provides the same interface as the\r\n    readline() method of built-in file objects.  Each call to the function\r\n    should return one line of input as bytes.  Alternatively, readline\r\n    can be a callable function terminating with StopIteration:\r\n        readline = open(myfile, \'rb\').__next__  # Example of alternate readline\r\n\r\n    The generator produces 5-tuples with these members: the token type; the\r\n    token string; a 2-tuple (srow, scol) of ints specifying the row and\r\n    column where the token begins in the source; a 2-tuple (erow, ecol) of\r\n    ints specifying the row and column where the token ends in the source;\r\n    and the line on which the token was found.  The line passed is the\r\n    physical line.\r\n\r\n    The first token sequence will always be an ENCODING token\r\n    which tells you which encoding was used to decode the bytes stream.\r\n    """', 408, 4, 425, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 425, 7, 426, 0),
    woosh.Token(woosh.NAME, 'encoding', 426, 4, 426, 12),
    woosh.Token(woosh.OP, ',', 426, 12, 426, 13),
    woosh.Token(woosh.NAME, 'consumed', 426, 14, 426, 22),
    woosh.Token(woosh.OP, '=', 426, 23, 426, 24),
    woosh.Token(woosh.NAME, 'detect_encoding', 426, 25, 426, 40),
    woosh.Token(woosh.OP, '(', 426, 40, 426, 41),
    woosh.Token(woosh.NAME, 'readline', 426, 41, 426, 49),
    woosh.Token(woosh.OP, ')', 426, 49, 426, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 426, 50, 427, 0),
    woosh.Token(woosh.NAME, 'empty', 427, 4, 427, 9),
    woosh.Token(woosh.OP, '=', 427, 10, 427, 11),
    woosh.Token(woosh.NAME, '_itertools', 427, 12, 427, 22),
    woosh.Token(woosh.OP, '.', 427, 22, 427, 23),
    woosh.Token(woosh.NAME, 'repeat', 427, 23, 427, 29),
    woosh.Token(woosh.OP, '(', 427, 29, 427, 30),
    woosh.Token(woosh.STRING, 'b""', 427, 30, 427, 33),
    woosh.Token(woosh.OP, ')', 427, 33, 427, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 427, 34, 428, 0),
    woosh.Token(woosh.NAME, 'rl_gen', 428, 4, 428, 10),
    woosh.Token(woosh.OP, '=', 428, 11, 428, 12),
    woosh.Token(woosh.NAME, '_itertools', 428, 13, 428, 23),
    woosh.Token(woosh.OP, '.', 428, 23, 428, 24),
    woosh.Token(woosh.NAME, 'chain', 428, 24, 428, 29),
    woosh.Token(woosh.OP, '(', 428, 29, 428, 30),
    woosh.Token(woosh.NAME, 'consumed', 428, 30, 428, 38),
    woosh.Token(woosh.OP, ',', 428, 38, 428, 39),
    woosh.Token(woosh.NAME, 'iter', 428, 40, 428, 44),
    woosh.Token(woosh.OP, '(', 428, 44, 428, 45),
    woosh.Token(woosh.NAME, 'readline', 428, 45, 428, 53),
    woosh.Token(woosh.OP, ',', 428, 53, 428, 54),
    woosh.Token(woosh.STRING, 'b""', 428, 55, 428, 58),
    woosh.Token(woosh.OP, ')', 428, 58, 428, 59),
    woosh.Token(woosh.OP, ',', 428, 59, 428, 60),
    woosh.Token(woosh.NAME, 'empty', 428, 61, 428, 66),
    woosh.Token(woosh.OP, ')', 428, 66, 428, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 428, 67, 429, 0),
    woosh.Token(woosh.NAME, 'return', 429, 4, 429, 10),
    woosh.Token(woosh.NAME, '_tokenize', 429, 11, 429, 20),
    woosh.Token(woosh.OP, '(', 429, 20, 429, 21),
    woosh.Token(woosh.NAME, 'rl_gen', 429, 21, 429, 27),
    woosh.Token(woosh.OP, '.', 429, 27, 429, 28),
    woosh.Token(woosh.NAME, '__next__', 429, 28, 429, 36),
    woosh.Token(woosh.OP, ',', 429, 36, 429, 37),
    woosh.Token(woosh.NAME, 'encoding', 429, 38, 429, 46),
    woosh.Token(woosh.OP, ')', 429, 46, 429, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 429, 47, 430, 0),
    woosh.Token(woosh.DEDENT, '', 432, 0, 432, 0),
    woosh.Token(woosh.NAME, 'def', 432, 0, 432, 3),
    woosh.Token(woosh.NAME, '_tokenize', 432, 4, 432, 13),
    woosh.Token(woosh.OP, '(', 432, 13, 432, 14),
    woosh.Token(woosh.NAME, 'readline', 432, 14, 432, 22),
    woosh.Token(woosh.OP, ',', 432, 22, 432, 23),
    woosh.Token(woosh.NAME, 'encoding', 432, 24, 432, 32),
    woosh.Token(woosh.OP, ')', 432, 32, 432, 33),
    woosh.Token(woosh.OP, ':', 432, 33, 432, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 432, 34, 433, 0),
    woosh.Token(woosh.INDENT, '    ', 433, 0, 433, 4),
    woosh.Token(woosh.NAME, 'lnum', 433, 4, 433, 8),
    woosh.Token(woosh.OP, '=', 433, 9, 433, 10),
    woosh.Token(woosh.NAME, 'parenlev', 433, 11, 433, 19),
    woosh.Token(woosh.OP, '=', 433, 20, 433, 21),
    woosh.Token(woosh.NAME, 'continued', 433, 22, 433, 31),
    woosh.Token(woosh.OP, '=', 433, 32, 433, 33),
    woosh.Token(woosh.NUMBER, '0', 433, 34, 433, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 433, 35, 434, 0),
    woosh.Token(woosh.NAME, 'numchars', 434, 4, 434, 12),
    woosh.Token(woosh.OP, '=', 434, 13, 434, 14),
    woosh.Token(woosh.STRING, "'0123456789'", 434, 15, 434, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 434, 27, 435, 0),
    woosh.Token(woosh.NAME, 'contstr', 435, 4, 435, 11),
    woosh.Token(woosh.OP, ',', 435, 11, 435, 12),
    woosh.Token(woosh.NAME, 'needcont', 435, 13, 435, 21),
    woosh.Token(woosh.OP, '=', 435, 22, 435, 23),
    woosh.Token(woosh.STRING, "''", 435, 24, 435, 26),
    woosh.Token(woosh.OP, ',', 435, 26, 435, 27),
    woosh.Token(woosh.NUMBER, '0', 435, 28, 435, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 435, 29, 436, 0),
    woosh.Token(woosh.NAME, 'contline', 436, 4, 436, 12),
    woosh.Token(woosh.OP, '=', 436, 13, 436, 14),
    woosh.Token(woosh.NAME, 'None', 436, 15, 436, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 436, 19, 437, 0),
    woosh.Token(woosh.NAME, 'indents', 437, 4, 437, 11),
    woosh.Token(woosh.OP, '=', 437, 12, 437, 13),
    woosh.Token(woosh.OP, '[', 437, 14, 437, 15),
    woosh.Token(woosh.NUMBER, '0', 437, 15, 437, 16),
    woosh.Token(woosh.OP, ']', 437, 16, 437, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 437, 17, 438, 0),
    woosh.Token(woosh.NAME, 'if', 439, 4, 439, 6),
    woosh.Token(woosh.NAME, 'encoding', 439, 7, 439, 15),
    woosh.Token(woosh.NAME, 'is', 439, 16, 439, 18),
    woosh.Token(woosh.NAME, 'not', 439, 19, 439, 22),
    woosh.Token(woosh.NAME, 'None', 439, 23, 439, 27),
    woosh.Token(woosh.OP, ':', 439, 27, 439, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 439, 28, 440, 0),
    woosh.Token(woosh.INDENT, '        ', 440, 0, 440, 8),
    woosh.Token(woosh.NAME, 'if', 440, 8, 440, 10),
    woosh.Token(woosh.NAME, 'encoding', 440, 11, 440, 19),
    woosh.Token(woosh.OP, '==', 440, 20, 440, 22),
    woosh.Token(woosh.STRING, '"utf-8-sig"', 440, 23, 440, 34),
    woosh.Token(woosh.OP, ':', 440, 34, 440, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 440, 35, 441, 0),
    woosh.Token(woosh.COMMENT, '# BOM will already have been stripped.', 441, 12, 441, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 441, 50, 442, 0),
    woosh.Token(woosh.INDENT, '            ', 442, 0, 442, 12),
    woosh.Token(woosh.NAME, 'encoding', 442, 12, 442, 20),
    woosh.Token(woosh.OP, '=', 442, 21, 442, 22),
    woosh.Token(woosh.STRING, '"utf-8"', 442, 23, 442, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 442, 30, 443, 0),
    woosh.Token(woosh.DEDENT, '        ', 443, 0, 443, 8),
    woosh.Token(woosh.NAME, 'yield', 443, 8, 443, 13),
    woosh.Token(woosh.NAME, 'TokenInfo', 443, 14, 443, 23),
    woosh.Token(woosh.OP, '(', 443, 23, 443, 24),
    woosh.Token(woosh.NAME, 'ENCODING', 443, 24, 443, 32),
    woosh.Token(woosh.OP, ',', 443, 32, 443, 33),
    woosh.Token(woosh.NAME, 'encoding', 443, 34, 443, 42),
    woosh.Token(woosh.OP, ',', 443, 42, 443, 43),
    woosh.Token(woosh.OP, '(', 443, 44, 443, 45),
    woosh.Token(woosh.NUMBER, '0', 443, 45, 443, 46),
    woosh.Token(woosh.OP, ',', 443, 46, 443, 47),
    woosh.Token(woosh.NUMBER, '0', 443, 48, 443, 49),
    woosh.Token(woosh.OP, ')', 443, 49, 443, 50),
    woosh.Token(woosh.OP, ',', 443, 50, 443, 51),
    woosh.Token(woosh.OP, '(', 443, 52, 443, 53),
    woosh.Token(woosh.NUMBER, '0', 443, 53, 443, 54),
    woosh.Token(woosh.OP, ',', 443, 54, 443, 55),
    woosh.Token(woosh.NUMBER, '0', 443, 56, 443, 57),
    woosh.Token(woosh.OP, ')', 443, 57, 443, 58),
    woosh.Token(woosh.OP, ',', 443, 58, 443, 59),
    woosh.Token(woosh.STRING, "''", 443, 60, 443, 62),
    woosh.Token(woosh.OP, ')', 443, 62, 443, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 443, 63, 444, 0),
    woosh.Token(woosh.DEDENT, '    ', 444, 0, 444, 4),
    woosh.Token(woosh.NAME, 'last_line', 444, 4, 444, 13),
    woosh.Token(woosh.OP, '=', 444, 14, 444, 15),
    woosh.Token(woosh.STRING, "b''", 444, 16, 444, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 444, 19, 445, 0),
    woosh.Token(woosh.NAME, 'line', 445, 4, 445, 8),
    woosh.Token(woosh.OP, '=', 445, 9, 445, 10),
    woosh.Token(woosh.STRING, "b''", 445, 11, 445, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 445, 14, 446, 0),
    woosh.Token(woosh.NAME, 'while', 446, 4, 446, 9),
    woosh.Token(woosh.NAME, 'True', 446, 10, 446, 14),
    woosh.Token(woosh.OP, ':', 446, 14, 446, 15),
    woosh.Token(woosh.COMMENT, '# loop over lines in stream', 446, 47, 446, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 446, 74, 447, 0),
    woosh.Token(woosh.INDENT, '        ', 447, 0, 447, 8),
    woosh.Token(woosh.NAME, 'try', 447, 8, 447, 11),
    woosh.Token(woosh.OP, ':', 447, 11, 447, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 447, 12, 448, 0),
    woosh.Token(woosh.COMMENT, '# We capture the value of the line variable here because', 448, 12, 448, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 448, 68, 449, 0),
    woosh.Token(woosh.COMMENT, "# readline uses the empty string '' to signal end of input,", 449, 12, 449, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 449, 71, 450, 0),
    woosh.Token(woosh.COMMENT, '# hence `line` itself will always be overwritten at the end', 450, 12, 450, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 450, 71, 451, 0),
    woosh.Token(woosh.COMMENT, '# of this loop.', 451, 12, 451, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 451, 27, 452, 0),
    woosh.Token(woosh.INDENT, '            ', 452, 0, 452, 12),
    woosh.Token(woosh.NAME, 'last_line', 452, 12, 452, 21),
    woosh.Token(woosh.OP, '=', 452, 22, 452, 23),
    woosh.Token(woosh.NAME, 'line', 452, 24, 452, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 452, 28, 453, 0),
    woosh.Token(woosh.NAME, 'line', 453, 12, 453, 16),
    woosh.Token(woosh.OP, '=', 453, 17, 453, 18),
    woosh.Token(woosh.NAME, 'readline', 453, 19, 453, 27),
    woosh.Token(woosh.OP, '(', 453, 27, 453, 28),
    woosh.Token(woosh.OP, ')', 453, 28, 453, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 453, 29, 454, 0),
    woosh.Token(woosh.DEDENT, '        ', 454, 0, 454, 8),
    woosh.Token(woosh.NAME, 'except', 454, 8, 454, 14),
    woosh.Token(woosh.NAME, 'StopIteration', 454, 15, 454, 28),
    woosh.Token(woosh.OP, ':', 454, 28, 454, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 454, 29, 455, 0),
    woosh.Token(woosh.INDENT, '            ', 455, 0, 455, 12),
    woosh.Token(woosh.NAME, 'line', 455, 12, 455, 16),
    woosh.Token(woosh.OP, '=', 455, 17, 455, 18),
    woosh.Token(woosh.STRING, "b''", 455, 19, 455, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 455, 22, 456, 0),
    woosh.Token(woosh.DEDENT, '        ', 457, 0, 457, 8),
    woosh.Token(woosh.NAME, 'if', 457, 8, 457, 10),
    woosh.Token(woosh.NAME, 'encoding', 457, 11, 457, 19),
    woosh.Token(woosh.NAME, 'is', 457, 20, 457, 22),
    woosh.Token(woosh.NAME, 'not', 457, 23, 457, 26),
    woosh.Token(woosh.NAME, 'None', 457, 27, 457, 31),
    woosh.Token(woosh.OP, ':', 457, 31, 457, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 457, 32, 458, 0),
    woosh.Token(woosh.INDENT, '            ', 458, 0, 458, 12),
    woosh.Token(woosh.NAME, 'line', 458, 12, 458, 16),
    woosh.Token(woosh.OP, '=', 458, 17, 458, 18),
    woosh.Token(woosh.NAME, 'line', 458, 19, 458, 23),
    woosh.Token(woosh.OP, '.', 458, 23, 458, 24),
    woosh.Token(woosh.NAME, 'decode', 458, 24, 458, 30),
    woosh.Token(woosh.OP, '(', 458, 30, 458, 31),
    woosh.Token(woosh.NAME, 'encoding', 458, 31, 458, 39),
    woosh.Token(woosh.OP, ')', 458, 39, 458, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 458, 40, 459, 0),
    woosh.Token(woosh.DEDENT, '        ', 459, 0, 459, 8),
    woosh.Token(woosh.NAME, 'lnum', 459, 8, 459, 12),
    woosh.Token(woosh.OP, '+=', 459, 13, 459, 15),
    woosh.Token(woosh.NUMBER, '1', 459, 16, 459, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 459, 17, 460, 0),
    woosh.Token(woosh.NAME, 'pos', 460, 8, 460, 11),
    woosh.Token(woosh.OP, ',', 460, 11, 460, 12),
    woosh.Token(woosh.NAME, 'max', 460, 13, 460, 16),
    woosh.Token(woosh.OP, '=', 460, 17, 460, 18),
    woosh.Token(woosh.NUMBER, '0', 460, 19, 460, 20),
    woosh.Token(woosh.OP, ',', 460, 20, 460, 21),
    woosh.Token(woosh.NAME, 'len', 460, 22, 460, 25),
    woosh.Token(woosh.OP, '(', 460, 25, 460, 26),
    woosh.Token(woosh.NAME, 'line', 460, 26, 460, 30),
    woosh.Token(woosh.OP, ')', 460, 30, 460, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 460, 31, 461, 0),
    woosh.Token(woosh.NAME, 'if', 462, 8, 462, 10),
    woosh.Token(woosh.NAME, 'contstr', 462, 11, 462, 18),
    woosh.Token(woosh.OP, ':', 462, 18, 462, 19),
    woosh.Token(woosh.COMMENT, '# continued string', 462, 47, 462, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 462, 65, 463, 0),
    woosh.Token(woosh.INDENT, '            ', 463, 0, 463, 12),
    woosh.Token(woosh.NAME, 'if', 463, 12, 463, 14),
    woosh.Token(woosh.NAME, 'not', 463, 15, 463, 18),
    woosh.Token(woosh.NAME, 'line', 463, 19, 463, 23),
    woosh.Token(woosh.OP, ':', 463, 23, 463, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 463, 24, 464, 0),
    woosh.Token(woosh.INDENT, '                ', 464, 0, 464, 16),
    woosh.Token(woosh.NAME, 'raise', 464, 16, 464, 21),
    woosh.Token(woosh.NAME, 'TokenError', 464, 22, 464, 32),
    woosh.Token(woosh.OP, '(', 464, 32, 464, 33),
    woosh.Token(woosh.STRING, '"EOF in multi-line string"', 464, 33, 464, 59),
    woosh.Token(woosh.OP, ',', 464, 59, 464, 60),
    woosh.Token(woosh.NAME, 'strstart', 464, 61, 464, 69),
    woosh.Token(woosh.OP, ')', 464, 69, 464, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 464, 70, 465, 0),
    woosh.Token(woosh.DEDENT, '            ', 465, 0, 465, 12),
    woosh.Token(woosh.NAME, 'endmatch', 465, 12, 465, 20),
    woosh.Token(woosh.OP, '=', 465, 21, 465, 22),
    woosh.Token(woosh.NAME, 'endprog', 465, 23, 465, 30),
    woosh.Token(woosh.OP, '.', 465, 30, 465, 31),
    woosh.Token(woosh.NAME, 'match', 465, 31, 465, 36),
    woosh.Token(woosh.OP, '(', 465, 36, 465, 37),
    woosh.Token(woosh.NAME, 'line', 465, 37, 465, 41),
    woosh.Token(woosh.OP, ')', 465, 41, 465, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 465, 42, 466, 0),
    woosh.Token(woosh.NAME, 'if', 466, 12, 466, 14),
    woosh.Token(woosh.NAME, 'endmatch', 466, 15, 466, 23),
    woosh.Token(woosh.OP, ':', 466, 23, 466, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 466, 24, 467, 0),
    woosh.Token(woosh.INDENT, '                ', 467, 0, 467, 16),
    woosh.Token(woosh.NAME, 'pos', 467, 16, 467, 19),
    woosh.Token(woosh.OP, '=', 467, 20, 467, 21),
    woosh.Token(woosh.NAME, 'end', 467, 22, 467, 25),
    woosh.Token(woosh.OP, '=', 467, 26, 467, 27),
    woosh.Token(woosh.NAME, 'endmatch', 467, 28, 467, 36),
    woosh.Token(woosh.OP, '.', 467, 36, 467, 37),
    woosh.Token(woosh.NAME, 'end', 467, 37, 467, 40),
    woosh.Token(woosh.OP, '(', 467, 40, 467, 41),
    woosh.Token(woosh.NUMBER, '0', 467, 41, 467, 42),
    woosh.Token(woosh.OP, ')', 467, 42, 467, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 467, 43, 468, 0),
    woosh.Token(woosh.NAME, 'yield', 468, 16, 468, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 468, 22, 468, 31),
    woosh.Token(woosh.OP, '(', 468, 31, 468, 32),
    woosh.Token(woosh.NAME, 'STRING', 468, 32, 468, 38),
    woosh.Token(woosh.OP, ',', 468, 38, 468, 39),
    woosh.Token(woosh.NAME, 'contstr', 468, 40, 468, 47),
    woosh.Token(woosh.OP, '+', 468, 48, 468, 49),
    woosh.Token(woosh.NAME, 'line', 468, 50, 468, 54),
    woosh.Token(woosh.OP, '[', 468, 54, 468, 55),
    woosh.Token(woosh.OP, ':', 468, 55, 468, 56),
    woosh.Token(woosh.NAME, 'end', 468, 56, 468, 59),
    woosh.Token(woosh.OP, ']', 468, 59, 468, 60),
    woosh.Token(woosh.OP, ',', 468, 60, 468, 61),
    woosh.Token(woosh.NAME, 'strstart', 469, 23, 469, 31),
    woosh.Token(woosh.OP, ',', 469, 31, 469, 32),
    woosh.Token(woosh.OP, '(', 469, 33, 469, 34),
    woosh.Token(woosh.NAME, 'lnum', 469, 34, 469, 38),
    woosh.Token(woosh.OP, ',', 469, 38, 469, 39),
    woosh.Token(woosh.NAME, 'end', 469, 40, 469, 43),
    woosh.Token(woosh.OP, ')', 469, 43, 469, 44),
    woosh.Token(woosh.OP, ',', 469, 44, 469, 45),
    woosh.Token(woosh.NAME, 'contline', 469, 46, 469, 54),
    woosh.Token(woosh.OP, '+', 469, 55, 469, 56),
    woosh.Token(woosh.NAME, 'line', 469, 57, 469, 61),
    woosh.Token(woosh.OP, ')', 469, 61, 469, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 469, 62, 470, 0),
    woosh.Token(woosh.NAME, 'contstr', 470, 16, 470, 23),
    woosh.Token(woosh.OP, ',', 470, 23, 470, 24),
    woosh.Token(woosh.NAME, 'needcont', 470, 25, 470, 33),
    woosh.Token(woosh.OP, '=', 470, 34, 470, 35),
    woosh.Token(woosh.STRING, "''", 470, 36, 470, 38),
    woosh.Token(woosh.OP, ',', 470, 38, 470, 39),
    woosh.Token(woosh.NUMBER, '0', 470, 40, 470, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 470, 41, 471, 0),
    woosh.Token(woosh.NAME, 'contline', 471, 16, 471, 24),
    woosh.Token(woosh.OP, '=', 471, 25, 471, 26),
    woosh.Token(woosh.NAME, 'None', 471, 27, 471, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 471, 31, 472, 0),
    woosh.Token(woosh.DEDENT, '            ', 472, 0, 472, 12),
    woosh.Token(woosh.NAME, 'elif', 472, 12, 472, 16),
    woosh.Token(woosh.NAME, 'needcont', 472, 17, 472, 25),
    woosh.Token(woosh.NAME, 'and', 472, 26, 472, 29),
    woosh.Token(woosh.NAME, 'line', 472, 30, 472, 34),
    woosh.Token(woosh.OP, '[', 472, 34, 472, 35),
    woosh.Token(woosh.OP, '-', 472, 35, 472, 36),
    woosh.Token(woosh.NUMBER, '2', 472, 36, 472, 37),
    woosh.Token(woosh.OP, ':', 472, 37, 472, 38),
    woosh.Token(woosh.OP, ']', 472, 38, 472, 39),
    woosh.Token(woosh.OP, '!=', 472, 40, 472, 42),
    woosh.Token(woosh.STRING, "'\\\\\\n'", 472, 43, 472, 49),
    woosh.Token(woosh.NAME, 'and', 472, 50, 472, 53),
    woosh.Token(woosh.NAME, 'line', 472, 54, 472, 58),
    woosh.Token(woosh.OP, '[', 472, 58, 472, 59),
    woosh.Token(woosh.OP, '-', 472, 59, 472, 60),
    woosh.Token(woosh.NUMBER, '3', 472, 60, 472, 61),
    woosh.Token(woosh.OP, ':', 472, 61, 472, 62),
    woosh.Token(woosh.OP, ']', 472, 62, 472, 63),
    woosh.Token(woosh.OP, '!=', 472, 64, 472, 66),
    woosh.Token(woosh.STRING, "'\\\\\\r\\n'", 472, 67, 472, 75),
    woosh.Token(woosh.OP, ':', 472, 75, 472, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 472, 76, 473, 0),
    woosh.Token(woosh.INDENT, '                ', 473, 0, 473, 16),
    woosh.Token(woosh.NAME, 'yield', 473, 16, 473, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 473, 22, 473, 31),
    woosh.Token(woosh.OP, '(', 473, 31, 473, 32),
    woosh.Token(woosh.NAME, 'ERRORTOKEN', 473, 32, 473, 42),
    woosh.Token(woosh.OP, ',', 473, 42, 473, 43),
    woosh.Token(woosh.NAME, 'contstr', 473, 44, 473, 51),
    woosh.Token(woosh.OP, '+', 473, 52, 473, 53),
    woosh.Token(woosh.NAME, 'line', 473, 54, 473, 58),
    woosh.Token(woosh.OP, ',', 473, 58, 473, 59),
    woosh.Token(woosh.NAME, 'strstart', 474, 27, 474, 35),
    woosh.Token(woosh.OP, ',', 474, 35, 474, 36),
    woosh.Token(woosh.OP, '(', 474, 37, 474, 38),
    woosh.Token(woosh.NAME, 'lnum', 474, 38, 474, 42),
    woosh.Token(woosh.OP, ',', 474, 42, 474, 43),
    woosh.Token(woosh.NAME, 'len', 474, 44, 474, 47),
    woosh.Token(woosh.OP, '(', 474, 47, 474, 48),
    woosh.Token(woosh.NAME, 'line', 474, 48, 474, 52),
    woosh.Token(woosh.OP, ')', 474, 52, 474, 53),
    woosh.Token(woosh.OP, ')', 474, 53, 474, 54),
    woosh.Token(woosh.OP, ',', 474, 54, 474, 55),
    woosh.Token(woosh.NAME, 'contline', 474, 56, 474, 64),
    woosh.Token(woosh.OP, ')', 474, 64, 474, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 474, 65, 475, 0),
    woosh.Token(woosh.NAME, 'contstr', 475, 16, 475, 23),
    woosh.Token(woosh.OP, '=', 475, 24, 475, 25),
    woosh.Token(woosh.STRING, "''", 475, 26, 475, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 475, 28, 476, 0),
    woosh.Token(woosh.NAME, 'contline', 476, 16, 476, 24),
    woosh.Token(woosh.OP, '=', 476, 25, 476, 26),
    woosh.Token(woosh.NAME, 'None', 476, 27, 476, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 476, 31, 477, 0),
    woosh.Token(woosh.NAME, 'continue', 477, 16, 477, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 477, 24, 478, 0),
    woosh.Token(woosh.DEDENT, '            ', 478, 0, 478, 12),
    woosh.Token(woosh.NAME, 'else', 478, 12, 478, 16),
    woosh.Token(woosh.OP, ':', 478, 16, 478, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 478, 17, 479, 0),
    woosh.Token(woosh.INDENT, '                ', 479, 0, 479, 16),
    woosh.Token(woosh.NAME, 'contstr', 479, 16, 479, 23),
    woosh.Token(woosh.OP, '=', 479, 24, 479, 25),
    woosh.Token(woosh.NAME, 'contstr', 479, 26, 479, 33),
    woosh.Token(woosh.OP, '+', 479, 34, 479, 35),
    woosh.Token(woosh.NAME, 'line', 479, 36, 479, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 479, 40, 480, 0),
    woosh.Token(woosh.NAME, 'contline', 480, 16, 480, 24),
    woosh.Token(woosh.OP, '=', 480, 25, 480, 26),
    woosh.Token(woosh.NAME, 'contline', 480, 27, 480, 35),
    woosh.Token(woosh.OP, '+', 480, 36, 480, 37),
    woosh.Token(woosh.NAME, 'line', 480, 38, 480, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 480, 42, 481, 0),
    woosh.Token(woosh.NAME, 'continue', 481, 16, 481, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 481, 24, 482, 0),
    woosh.Token(woosh.DEDENT, '        ', 483, 0, 483, 8),
    woosh.Token(woosh.DEDENT, '', 483, 8, 483, 8),
    woosh.Token(woosh.NAME, 'elif', 483, 8, 483, 12),
    woosh.Token(woosh.NAME, 'parenlev', 483, 13, 483, 21),
    woosh.Token(woosh.OP, '==', 483, 22, 483, 24),
    woosh.Token(woosh.NUMBER, '0', 483, 25, 483, 26),
    woosh.Token(woosh.NAME, 'and', 483, 27, 483, 30),
    woosh.Token(woosh.NAME, 'not', 483, 31, 483, 34),
    woosh.Token(woosh.NAME, 'continued', 483, 35, 483, 44),
    woosh.Token(woosh.OP, ':', 483, 44, 483, 45),
    woosh.Token(woosh.COMMENT, '# new statement', 483, 47, 483, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 483, 62, 484, 0),
    woosh.Token(woosh.INDENT, '            ', 484, 0, 484, 12),
    woosh.Token(woosh.NAME, 'if', 484, 12, 484, 14),
    woosh.Token(woosh.NAME, 'not', 484, 15, 484, 18),
    woosh.Token(woosh.NAME, 'line', 484, 19, 484, 23),
    woosh.Token(woosh.OP, ':', 484, 23, 484, 24),
    woosh.Token(woosh.NAME, 'break', 484, 25, 484, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 484, 30, 485, 0),
    woosh.Token(woosh.NAME, 'column', 485, 12, 485, 18),
    woosh.Token(woosh.OP, '=', 485, 19, 485, 20),
    woosh.Token(woosh.NUMBER, '0', 485, 21, 485, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 485, 22, 486, 0),
    woosh.Token(woosh.NAME, 'while', 486, 12, 486, 17),
    woosh.Token(woosh.NAME, 'pos', 486, 18, 486, 21),
    woosh.Token(woosh.OP, '<', 486, 22, 486, 23),
    woosh.Token(woosh.NAME, 'max', 486, 24, 486, 27),
    woosh.Token(woosh.OP, ':', 486, 27, 486, 28),
    woosh.Token(woosh.COMMENT, '# measure leading whitespace', 486, 47, 486, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 486, 75, 487, 0),
    woosh.Token(woosh.INDENT, '                ', 487, 0, 487, 16),
    woosh.Token(woosh.NAME, 'if', 487, 16, 487, 18),
    woosh.Token(woosh.NAME, 'line', 487, 19, 487, 23),
    woosh.Token(woosh.OP, '[', 487, 23, 487, 24),
    woosh.Token(woosh.NAME, 'pos', 487, 24, 487, 27),
    woosh.Token(woosh.OP, ']', 487, 27, 487, 28),
    woosh.Token(woosh.OP, '==', 487, 29, 487, 31),
    woosh.Token(woosh.STRING, "' '", 487, 32, 487, 35),
    woosh.Token(woosh.OP, ':', 487, 35, 487, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 487, 36, 488, 0),
    woosh.Token(woosh.INDENT, '                    ', 488, 0, 488, 20),
    woosh.Token(woosh.NAME, 'column', 488, 20, 488, 26),
    woosh.Token(woosh.OP, '+=', 488, 27, 488, 29),
    woosh.Token(woosh.NUMBER, '1', 488, 30, 488, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 488, 31, 489, 0),
    woosh.Token(woosh.DEDENT, '                ', 489, 0, 489, 16),
    woosh.Token(woosh.NAME, 'elif', 489, 16, 489, 20),
    woosh.Token(woosh.NAME, 'line', 489, 21, 489, 25),
    woosh.Token(woosh.OP, '[', 489, 25, 489, 26),
    woosh.Token(woosh.NAME, 'pos', 489, 26, 489, 29),
    woosh.Token(woosh.OP, ']', 489, 29, 489, 30),
    woosh.Token(woosh.OP, '==', 489, 31, 489, 33),
    woosh.Token(woosh.STRING, "'\\t'", 489, 34, 489, 38),
    woosh.Token(woosh.OP, ':', 489, 38, 489, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 489, 39, 490, 0),
    woosh.Token(woosh.INDENT, '                    ', 490, 0, 490, 20),
    woosh.Token(woosh.NAME, 'column', 490, 20, 490, 26),
    woosh.Token(woosh.OP, '=', 490, 27, 490, 28),
    woosh.Token(woosh.OP, '(', 490, 29, 490, 30),
    woosh.Token(woosh.NAME, 'column', 490, 30, 490, 36),
    woosh.Token(woosh.OP, '//', 490, 36, 490, 38),
    woosh.Token(woosh.NAME, 'tabsize', 490, 38, 490, 45),
    woosh.Token(woosh.OP, '+', 490, 46, 490, 47),
    woosh.Token(woosh.NUMBER, '1', 490, 48, 490, 49),
    woosh.Token(woosh.OP, ')', 490, 49, 490, 50),
    woosh.Token(woosh.OP, '*', 490, 50, 490, 51),
    woosh.Token(woosh.NAME, 'tabsize', 490, 51, 490, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 490, 58, 491, 0),
    woosh.Token(woosh.DEDENT, '                ', 491, 0, 491, 16),
    woosh.Token(woosh.NAME, 'elif', 491, 16, 491, 20),
    woosh.Token(woosh.NAME, 'line', 491, 21, 491, 25),
    woosh.Token(woosh.OP, '[', 491, 25, 491, 26),
    woosh.Token(woosh.NAME, 'pos', 491, 26, 491, 29),
    woosh.Token(woosh.OP, ']', 491, 29, 491, 30),
    woosh.Token(woosh.OP, '==', 491, 31, 491, 33),
    woosh.Token(woosh.STRING, "'\\f'", 491, 34, 491, 38),
    woosh.Token(woosh.OP, ':', 491, 38, 491, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 491, 39, 492, 0),
    woosh.Token(woosh.INDENT, '                    ', 492, 0, 492, 20),
    woosh.Token(woosh.NAME, 'column', 492, 20, 492, 26),
    woosh.Token(woosh.OP, '=', 492, 27, 492, 28),
    woosh.Token(woosh.NUMBER, '0', 492, 29, 492, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 492, 30, 493, 0),
    woosh.Token(woosh.DEDENT, '                ', 493, 0, 493, 16),
    woosh.Token(woosh.NAME, 'else', 493, 16, 493, 20),
    woosh.Token(woosh.OP, ':', 493, 20, 493, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 493, 21, 494, 0),
    woosh.Token(woosh.INDENT, '                    ', 494, 0, 494, 20),
    woosh.Token(woosh.NAME, 'break', 494, 20, 494, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 494, 25, 495, 0),
    woosh.Token(woosh.DEDENT, '                ', 495, 0, 495, 16),
    woosh.Token(woosh.NAME, 'pos', 495, 16, 495, 19),
    woosh.Token(woosh.OP, '+=', 495, 20, 495, 22),
    woosh.Token(woosh.NUMBER, '1', 495, 23, 495, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 495, 24, 496, 0),
    woosh.Token(woosh.DEDENT, '            ', 496, 0, 496, 12),
    woosh.Token(woosh.NAME, 'if', 496, 12, 496, 14),
    woosh.Token(woosh.NAME, 'pos', 496, 15, 496, 18),
    woosh.Token(woosh.OP, '==', 496, 19, 496, 21),
    woosh.Token(woosh.NAME, 'max', 496, 22, 496, 25),
    woosh.Token(woosh.OP, ':', 496, 25, 496, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 496, 26, 497, 0),
    woosh.Token(woosh.INDENT, '                ', 497, 0, 497, 16),
    woosh.Token(woosh.NAME, 'break', 497, 16, 497, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 497, 21, 498, 0),
    woosh.Token(woosh.DEDENT, '            ', 499, 0, 499, 12),
    woosh.Token(woosh.NAME, 'if', 499, 12, 499, 14),
    woosh.Token(woosh.NAME, 'line', 499, 15, 499, 19),
    woosh.Token(woosh.OP, '[', 499, 19, 499, 20),
    woosh.Token(woosh.NAME, 'pos', 499, 20, 499, 23),
    woosh.Token(woosh.OP, ']', 499, 23, 499, 24),
    woosh.Token(woosh.NAME, 'in', 499, 25, 499, 27),
    woosh.Token(woosh.STRING, "'#\\r\\n'", 499, 28, 499, 35),
    woosh.Token(woosh.OP, ':', 499, 35, 499, 36),
    woosh.Token(woosh.COMMENT, '# skip comments or blank lines', 499, 47, 499, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 499, 77, 500, 0),
    woosh.Token(woosh.INDENT, '                ', 500, 0, 500, 16),
    woosh.Token(woosh.NAME, 'if', 500, 16, 500, 18),
    woosh.Token(woosh.NAME, 'line', 500, 19, 500, 23),
    woosh.Token(woosh.OP, '[', 500, 23, 500, 24),
    woosh.Token(woosh.NAME, 'pos', 500, 24, 500, 27),
    woosh.Token(woosh.OP, ']', 500, 27, 500, 28),
    woosh.Token(woosh.OP, '==', 500, 29, 500, 31),
    woosh.Token(woosh.STRING, "'#'", 500, 32, 500, 35),
    woosh.Token(woosh.OP, ':', 500, 35, 500, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 500, 36, 501, 0),
    woosh.Token(woosh.INDENT, '                    ', 501, 0, 501, 20),
    woosh.Token(woosh.NAME, 'comment_token', 501, 20, 501, 33),
    woosh.Token(woosh.OP, '=', 501, 34, 501, 35),
    woosh.Token(woosh.NAME, 'line', 501, 36, 501, 40),
    woosh.Token(woosh.OP, '[', 501, 40, 501, 41),
    woosh.Token(woosh.NAME, 'pos', 501, 41, 501, 44),
    woosh.Token(woosh.OP, ':', 501, 44, 501, 45),
    woosh.Token(woosh.OP, ']', 501, 45, 501, 46),
    woosh.Token(woosh.OP, '.', 501, 46, 501, 47),
    woosh.Token(woosh.NAME, 'rstrip', 501, 47, 501, 53),
    woosh.Token(woosh.OP, '(', 501, 53, 501, 54),
    woosh.Token(woosh.STRING, "'\\r\\n'", 501, 54, 501, 60),
    woosh.Token(woosh.OP, ')', 501, 60, 501, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 501, 61, 502, 0),
    woosh.Token(woosh.NAME, 'yield', 502, 20, 502, 25),
    woosh.Token(woosh.NAME, 'TokenInfo', 502, 26, 502, 35),
    woosh.Token(woosh.OP, '(', 502, 35, 502, 36),
    woosh.Token(woosh.NAME, 'COMMENT', 502, 36, 502, 43),
    woosh.Token(woosh.OP, ',', 502, 43, 502, 44),
    woosh.Token(woosh.NAME, 'comment_token', 502, 45, 502, 58),
    woosh.Token(woosh.OP, ',', 502, 58, 502, 59),
    woosh.Token(woosh.OP, '(', 503, 27, 503, 28),
    woosh.Token(woosh.NAME, 'lnum', 503, 28, 503, 32),
    woosh.Token(woosh.OP, ',', 503, 32, 503, 33),
    woosh.Token(woosh.NAME, 'pos', 503, 34, 503, 37),
    woosh.Token(woosh.OP, ')', 503, 37, 503, 38),
    woosh.Token(woosh.OP, ',', 503, 38, 503, 39),
    woosh.Token(woosh.OP, '(', 503, 40, 503, 41),
    woosh.Token(woosh.NAME, 'lnum', 503, 41, 503, 45),
    woosh.Token(woosh.OP, ',', 503, 45, 503, 46),
    woosh.Token(woosh.NAME, 'pos', 503, 47, 503, 50),
    woosh.Token(woosh.OP, '+', 503, 51, 503, 52),
    woosh.Token(woosh.NAME, 'len', 503, 53, 503, 56),
    woosh.Token(woosh.OP, '(', 503, 56, 503, 57),
    woosh.Token(woosh.NAME, 'comment_token', 503, 57, 503, 70),
    woosh.Token(woosh.OP, ')', 503, 70, 503, 71),
    woosh.Token(woosh.OP, ')', 503, 71, 503, 72),
    woosh.Token(woosh.OP, ',', 503, 72, 503, 73),
    woosh.Token(woosh.NAME, 'line', 503, 74, 503, 78),
    woosh.Token(woosh.OP, ')', 503, 78, 503, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 503, 79, 504, 0),
    woosh.Token(woosh.NAME, 'pos', 504, 20, 504, 23),
    woosh.Token(woosh.OP, '+=', 504, 24, 504, 26),
    woosh.Token(woosh.NAME, 'len', 504, 27, 504, 30),
    woosh.Token(woosh.OP, '(', 504, 30, 504, 31),
    woosh.Token(woosh.NAME, 'comment_token', 504, 31, 504, 44),
    woosh.Token(woosh.OP, ')', 504, 44, 504, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 504, 45, 505, 0),
    woosh.Token(woosh.DEDENT, '                ', 506, 0, 506, 16),
    woosh.Token(woosh.NAME, 'yield', 506, 16, 506, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 506, 22, 506, 31),
    woosh.Token(woosh.OP, '(', 506, 31, 506, 32),
    woosh.Token(woosh.NAME, 'NL', 506, 32, 506, 34),
    woosh.Token(woosh.OP, ',', 506, 34, 506, 35),
    woosh.Token(woosh.NAME, 'line', 506, 36, 506, 40),
    woosh.Token(woosh.OP, '[', 506, 40, 506, 41),
    woosh.Token(woosh.NAME, 'pos', 506, 41, 506, 44),
    woosh.Token(woosh.OP, ':', 506, 44, 506, 45),
    woosh.Token(woosh.OP, ']', 506, 45, 506, 46),
    woosh.Token(woosh.OP, ',', 506, 46, 506, 47),
    woosh.Token(woosh.OP, '(', 507, 27, 507, 28),
    woosh.Token(woosh.NAME, 'lnum', 507, 28, 507, 32),
    woosh.Token(woosh.OP, ',', 507, 32, 507, 33),
    woosh.Token(woosh.NAME, 'pos', 507, 34, 507, 37),
    woosh.Token(woosh.OP, ')', 507, 37, 507, 38),
    woosh.Token(woosh.OP, ',', 507, 38, 507, 39),
    woosh.Token(woosh.OP, '(', 507, 40, 507, 41),
    woosh.Token(woosh.NAME, 'lnum', 507, 41, 507, 45),
    woosh.Token(woosh.OP, ',', 507, 45, 507, 46),
    woosh.Token(woosh.NAME, 'len', 507, 47, 507, 50),
    woosh.Token(woosh.OP, '(', 507, 50, 507, 51),
    woosh.Token(woosh.NAME, 'line', 507, 51, 507, 55),
    woosh.Token(woosh.OP, ')', 507, 55, 507, 56),
    woosh.Token(woosh.OP, ')', 507, 56, 507, 57),
    woosh.Token(woosh.OP, ',', 507, 57, 507, 58),
    woosh.Token(woosh.NAME, 'line', 507, 59, 507, 63),
    woosh.Token(woosh.OP, ')', 507, 63, 507, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 507, 64, 508, 0),
    woosh.Token(woosh.NAME, 'continue', 508, 16, 508, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 508, 24, 509, 0),
    woosh.Token(woosh.DEDENT, '            ', 510, 0, 510, 12),
    woosh.Token(woosh.NAME, 'if', 510, 12, 510, 14),
    woosh.Token(woosh.NAME, 'column', 510, 15, 510, 21),
    woosh.Token(woosh.OP, '>', 510, 22, 510, 23),
    woosh.Token(woosh.NAME, 'indents', 510, 24, 510, 31),
    woosh.Token(woosh.OP, '[', 510, 31, 510, 32),
    woosh.Token(woosh.OP, '-', 510, 32, 510, 33),
    woosh.Token(woosh.NUMBER, '1', 510, 33, 510, 34),
    woosh.Token(woosh.OP, ']', 510, 34, 510, 35),
    woosh.Token(woosh.OP, ':', 510, 35, 510, 36),
    woosh.Token(woosh.COMMENT, '# count indents or dedents', 510, 47, 510, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 510, 73, 511, 0),
    woosh.Token(woosh.INDENT, '                ', 511, 0, 511, 16),
    woosh.Token(woosh.NAME, 'indents', 511, 16, 511, 23),
    woosh.Token(woosh.OP, '.', 511, 23, 511, 24),
    woosh.Token(woosh.NAME, 'append', 511, 24, 511, 30),
    woosh.Token(woosh.OP, '(', 511, 30, 511, 31),
    woosh.Token(woosh.NAME, 'column', 511, 31, 511, 37),
    woosh.Token(woosh.OP, ')', 511, 37, 511, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 511, 38, 512, 0),
    woosh.Token(woosh.NAME, 'yield', 512, 16, 512, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 512, 22, 512, 31),
    woosh.Token(woosh.OP, '(', 512, 31, 512, 32),
    woosh.Token(woosh.NAME, 'INDENT', 512, 32, 512, 38),
    woosh.Token(woosh.OP, ',', 512, 38, 512, 39),
    woosh.Token(woosh.NAME, 'line', 512, 40, 512, 44),
    woosh.Token(woosh.OP, '[', 512, 44, 512, 45),
    woosh.Token(woosh.OP, ':', 512, 45, 512, 46),
    woosh.Token(woosh.NAME, 'pos', 512, 46, 512, 49),
    woosh.Token(woosh.OP, ']', 512, 49, 512, 50),
    woosh.Token(woosh.OP, ',', 512, 50, 512, 51),
    woosh.Token(woosh.OP, '(', 512, 52, 512, 53),
    woosh.Token(woosh.NAME, 'lnum', 512, 53, 512, 57),
    woosh.Token(woosh.OP, ',', 512, 57, 512, 58),
    woosh.Token(woosh.NUMBER, '0', 512, 59, 512, 60),
    woosh.Token(woosh.OP, ')', 512, 60, 512, 61),
    woosh.Token(woosh.OP, ',', 512, 61, 512, 62),
    woosh.Token(woosh.OP, '(', 512, 63, 512, 64),
    woosh.Token(woosh.NAME, 'lnum', 512, 64, 512, 68),
    woosh.Token(woosh.OP, ',', 512, 68, 512, 69),
    woosh.Token(woosh.NAME, 'pos', 512, 70, 512, 73),
    woosh.Token(woosh.OP, ')', 512, 73, 512, 74),
    woosh.Token(woosh.OP, ',', 512, 74, 512, 75),
    woosh.Token(woosh.NAME, 'line', 512, 76, 512, 80),
    woosh.Token(woosh.OP, ')', 512, 80, 512, 81),
    woosh.Token(woosh.NEWLINE, '\r\n', 512, 81, 513, 0),
    woosh.Token(woosh.DEDENT, '            ', 513, 0, 513, 12),
    woosh.Token(woosh.NAME, 'while', 513, 12, 513, 17),
    woosh.Token(woosh.NAME, 'column', 513, 18, 513, 24),
    woosh.Token(woosh.OP, '<', 513, 25, 513, 26),
    woosh.Token(woosh.NAME, 'indents', 513, 27, 513, 34),
    woosh.Token(woosh.OP, '[', 513, 34, 513, 35),
    woosh.Token(woosh.OP, '-', 513, 35, 513, 36),
    woosh.Token(woosh.NUMBER, '1', 513, 36, 513, 37),
    woosh.Token(woosh.OP, ']', 513, 37, 513, 38),
    woosh.Token(woosh.OP, ':', 513, 38, 513, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 513, 39, 514, 0),
    woosh.Token(woosh.INDENT, '                ', 514, 0, 514, 16),
    woosh.Token(woosh.NAME, 'if', 514, 16, 514, 18),
    woosh.Token(woosh.NAME, 'column', 514, 19, 514, 25),
    woosh.Token(woosh.NAME, 'not', 514, 26, 514, 29),
    woosh.Token(woosh.NAME, 'in', 514, 30, 514, 32),
    woosh.Token(woosh.NAME, 'indents', 514, 33, 514, 40),
    woosh.Token(woosh.OP, ':', 514, 40, 514, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 514, 41, 515, 0),
    woosh.Token(woosh.INDENT, '                    ', 515, 0, 515, 20),
    woosh.Token(woosh.NAME, 'raise', 515, 20, 515, 25),
    woosh.Token(woosh.NAME, 'IndentationError', 515, 26, 515, 42),
    woosh.Token(woosh.OP, '(', 515, 42, 515, 43),
    woosh.Token(woosh.STRING, '"unindent does not match any outer indentation level"', 516, 24, 516, 77),
    woosh.Token(woosh.OP, ',', 516, 77, 516, 78),
    woosh.Token(woosh.OP, '(', 517, 24, 517, 25),
    woosh.Token(woosh.STRING, '"<tokenize>"', 517, 25, 517, 37),
    woosh.Token(woosh.OP, ',', 517, 37, 517, 38),
    woosh.Token(woosh.NAME, 'lnum', 517, 39, 517, 43),
    woosh.Token(woosh.OP, ',', 517, 43, 517, 44),
    woosh.Token(woosh.NAME, 'pos', 517, 45, 517, 48),
    woosh.Token(woosh.OP, ',', 517, 48, 517, 49),
    woosh.Token(woosh.NAME, 'line', 517, 50, 517, 54),
    woosh.Token(woosh.OP, ')', 517, 54, 517, 55),
    woosh.Token(woosh.OP, ')', 517, 55, 517, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 517, 56, 518, 0),
    woosh.Token(woosh.DEDENT, '                ', 518, 0, 518, 16),
    woosh.Token(woosh.NAME, 'indents', 518, 16, 518, 23),
    woosh.Token(woosh.OP, '=', 518, 24, 518, 25),
    woosh.Token(woosh.NAME, 'indents', 518, 26, 518, 33),
    woosh.Token(woosh.OP, '[', 518, 33, 518, 34),
    woosh.Token(woosh.OP, ':', 518, 34, 518, 35),
    woosh.Token(woosh.OP, '-', 518, 35, 518, 36),
    woosh.Token(woosh.NUMBER, '1', 518, 36, 518, 37),
    woosh.Token(woosh.OP, ']', 518, 37, 518, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 518, 38, 519, 0),
    woosh.Token(woosh.NAME, 'yield', 520, 16, 520, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 520, 22, 520, 31),
    woosh.Token(woosh.OP, '(', 520, 31, 520, 32),
    woosh.Token(woosh.NAME, 'DEDENT', 520, 32, 520, 38),
    woosh.Token(woosh.OP, ',', 520, 38, 520, 39),
    woosh.Token(woosh.STRING, "''", 520, 40, 520, 42),
    woosh.Token(woosh.OP, ',', 520, 42, 520, 43),
    woosh.Token(woosh.OP, '(', 520, 44, 520, 45),
    woosh.Token(woosh.NAME, 'lnum', 520, 45, 520, 49),
    woosh.Token(woosh.OP, ',', 520, 49, 520, 50),
    woosh.Token(woosh.NAME, 'pos', 520, 51, 520, 54),
    woosh.Token(woosh.OP, ')', 520, 54, 520, 55),
    woosh.Token(woosh.OP, ',', 520, 55, 520, 56),
    woosh.Token(woosh.OP, '(', 520, 57, 520, 58),
    woosh.Token(woosh.NAME, 'lnum', 520, 58, 520, 62),
    woosh.Token(woosh.OP, ',', 520, 62, 520, 63),
    woosh.Token(woosh.NAME, 'pos', 520, 64, 520, 67),
    woosh.Token(woosh.OP, ')', 520, 67, 520, 68),
    woosh.Token(woosh.OP, ',', 520, 68, 520, 69),
    woosh.Token(woosh.NAME, 'line', 520, 70, 520, 74),
    woosh.Token(woosh.OP, ')', 520, 74, 520, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 520, 75, 521, 0),
    woosh.Token(woosh.DEDENT, '        ', 522, 0, 522, 8),
    woosh.Token(woosh.DEDENT, '', 522, 8, 522, 8),
    woosh.Token(woosh.NAME, 'else', 522, 8, 522, 12),
    woosh.Token(woosh.OP, ':', 522, 12, 522, 13),
    woosh.Token(woosh.COMMENT, '# continued statement', 522, 47, 522, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 522, 68, 523, 0),
    woosh.Token(woosh.INDENT, '            ', 523, 0, 523, 12),
    woosh.Token(woosh.NAME, 'if', 523, 12, 523, 14),
    woosh.Token(woosh.NAME, 'not', 523, 15, 523, 18),
    woosh.Token(woosh.NAME, 'line', 523, 19, 523, 23),
    woosh.Token(woosh.OP, ':', 523, 23, 523, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 523, 24, 524, 0),
    woosh.Token(woosh.INDENT, '                ', 524, 0, 524, 16),
    woosh.Token(woosh.NAME, 'raise', 524, 16, 524, 21),
    woosh.Token(woosh.NAME, 'TokenError', 524, 22, 524, 32),
    woosh.Token(woosh.OP, '(', 524, 32, 524, 33),
    woosh.Token(woosh.STRING, '"EOF in multi-line statement"', 524, 33, 524, 62),
    woosh.Token(woosh.OP, ',', 524, 62, 524, 63),
    woosh.Token(woosh.OP, '(', 524, 64, 524, 65),
    woosh.Token(woosh.NAME, 'lnum', 524, 65, 524, 69),
    woosh.Token(woosh.OP, ',', 524, 69, 524, 70),
    woosh.Token(woosh.NUMBER, '0', 524, 71, 524, 72),
    woosh.Token(woosh.OP, ')', 524, 72, 524, 73),
    woosh.Token(woosh.OP, ')', 524, 73, 524, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 524, 74, 525, 0),
    woosh.Token(woosh.DEDENT, '            ', 525, 0, 525, 12),
    woosh.Token(woosh.NAME, 'continued', 525, 12, 525, 21),
    woosh.Token(woosh.OP, '=', 525, 22, 525, 23),
    woosh.Token(woosh.NUMBER, '0', 525, 24, 525, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 525, 25, 526, 0),
    woosh.Token(woosh.DEDENT, '        ', 527, 0, 527, 8),
    woosh.Token(woosh.NAME, 'while', 527, 8, 527, 13),
    woosh.Token(woosh.NAME, 'pos', 527, 14, 527, 17),
    woosh.Token(woosh.OP, '<', 527, 18, 527, 19),
    woosh.Token(woosh.NAME, 'max', 527, 20, 527, 23),
    woosh.Token(woosh.OP, ':', 527, 23, 527, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 527, 24, 528, 0),
    woosh.Token(woosh.INDENT, '            ', 528, 0, 528, 12),
    woosh.Token(woosh.NAME, 'pseudomatch', 528, 12, 528, 23),
    woosh.Token(woosh.OP, '=', 528, 24, 528, 25),
    woosh.Token(woosh.NAME, '_compile', 528, 26, 528, 34),
    woosh.Token(woosh.OP, '(', 528, 34, 528, 35),
    woosh.Token(woosh.NAME, 'PseudoToken', 528, 35, 528, 46),
    woosh.Token(woosh.OP, ')', 528, 46, 528, 47),
    woosh.Token(woosh.OP, '.', 528, 47, 528, 48),
    woosh.Token(woosh.NAME, 'match', 528, 48, 528, 53),
    woosh.Token(woosh.OP, '(', 528, 53, 528, 54),
    woosh.Token(woosh.NAME, 'line', 528, 54, 528, 58),
    woosh.Token(woosh.OP, ',', 528, 58, 528, 59),
    woosh.Token(woosh.NAME, 'pos', 528, 60, 528, 63),
    woosh.Token(woosh.OP, ')', 528, 63, 528, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 528, 64, 529, 0),
    woosh.Token(woosh.NAME, 'if', 529, 12, 529, 14),
    woosh.Token(woosh.NAME, 'pseudomatch', 529, 15, 529, 26),
    woosh.Token(woosh.OP, ':', 529, 26, 529, 27),
    woosh.Token(woosh.COMMENT, '# scan for tokens', 529, 59, 529, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 529, 76, 530, 0),
    woosh.Token(woosh.INDENT, '                ', 530, 0, 530, 16),
    woosh.Token(woosh.NAME, 'start', 530, 16, 530, 21),
    woosh.Token(woosh.OP, ',', 530, 21, 530, 22),
    woosh.Token(woosh.NAME, 'end', 530, 23, 530, 26),
    woosh.Token(woosh.OP, '=', 530, 27, 530, 28),
    woosh.Token(woosh.NAME, 'pseudomatch', 530, 29, 530, 40),
    woosh.Token(woosh.OP, '.', 530, 40, 530, 41),
    woosh.Token(woosh.NAME, 'span', 530, 41, 530, 45),
    woosh.Token(woosh.OP, '(', 530, 45, 530, 46),
    woosh.Token(woosh.NUMBER, '1', 530, 46, 530, 47),
    woosh.Token(woosh.OP, ')', 530, 47, 530, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 530, 48, 531, 0),
    woosh.Token(woosh.NAME, 'spos', 531, 16, 531, 20),
    woosh.Token(woosh.OP, ',', 531, 20, 531, 21),
    woosh.Token(woosh.NAME, 'epos', 531, 22, 531, 26),
    woosh.Token(woosh.OP, ',', 531, 26, 531, 27),
    woosh.Token(woosh.NAME, 'pos', 531, 28, 531, 31),
    woosh.Token(woosh.OP, '=', 531, 32, 531, 33),
    woosh.Token(woosh.OP, '(', 531, 34, 531, 35),
    woosh.Token(woosh.NAME, 'lnum', 531, 35, 531, 39),
    woosh.Token(woosh.OP, ',', 531, 39, 531, 40),
    woosh.Token(woosh.NAME, 'start', 531, 41, 531, 46),
    woosh.Token(woosh.OP, ')', 531, 46, 531, 47),
    woosh.Token(woosh.OP, ',', 531, 47, 531, 48),
    woosh.Token(woosh.OP, '(', 531, 49, 531, 50),
    woosh.Token(woosh.NAME, 'lnum', 531, 50, 531, 54),
    woosh.Token(woosh.OP, ',', 531, 54, 531, 55),
    woosh.Token(woosh.NAME, 'end', 531, 56, 531, 59),
    woosh.Token(woosh.OP, ')', 531, 59, 531, 60),
    woosh.Token(woosh.OP, ',', 531, 60, 531, 61),
    woosh.Token(woosh.NAME, 'end', 531, 62, 531, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 531, 65, 532, 0),
    woosh.Token(woosh.NAME, 'if', 532, 16, 532, 18),
    woosh.Token(woosh.NAME, 'start', 532, 19, 532, 24),
    woosh.Token(woosh.OP, '==', 532, 25, 532, 27),
    woosh.Token(woosh.NAME, 'end', 532, 28, 532, 31),
    woosh.Token(woosh.OP, ':', 532, 31, 532, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 532, 32, 533, 0),
    woosh.Token(woosh.INDENT, '                    ', 533, 0, 533, 20),
    woosh.Token(woosh.NAME, 'continue', 533, 20, 533, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 533, 28, 534, 0),
    woosh.Token(woosh.DEDENT, '                ', 534, 0, 534, 16),
    woosh.Token(woosh.NAME, 'token', 534, 16, 534, 21),
    woosh.Token(woosh.OP, ',', 534, 21, 534, 22),
    woosh.Token(woosh.NAME, 'initial', 534, 23, 534, 30),
    woosh.Token(woosh.OP, '=', 534, 31, 534, 32),
    woosh.Token(woosh.NAME, 'line', 534, 33, 534, 37),
    woosh.Token(woosh.OP, '[', 534, 37, 534, 38),
    woosh.Token(woosh.NAME, 'start', 534, 38, 534, 43),
    woosh.Token(woosh.OP, ':', 534, 43, 534, 44),
    woosh.Token(woosh.NAME, 'end', 534, 44, 534, 47),
    woosh.Token(woosh.OP, ']', 534, 47, 534, 48),
    woosh.Token(woosh.OP, ',', 534, 48, 534, 49),
    woosh.Token(woosh.NAME, 'line', 534, 50, 534, 54),
    woosh.Token(woosh.OP, '[', 534, 54, 534, 55),
    woosh.Token(woosh.NAME, 'start', 534, 55, 534, 60),
    woosh.Token(woosh.OP, ']', 534, 60, 534, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 534, 61, 535, 0),
    woosh.Token(woosh.NAME, 'if', 536, 16, 536, 18),
    woosh.Token(woosh.OP, '(', 536, 19, 536, 20),
    woosh.Token(woosh.NAME, 'initial', 536, 20, 536, 27),
    woosh.Token(woosh.NAME, 'in', 536, 28, 536, 30),
    woosh.Token(woosh.NAME, 'numchars', 536, 31, 536, 39),
    woosh.Token(woosh.NAME, 'or', 536, 40, 536, 42),
    woosh.Token(woosh.COMMENT, '# ordinary number', 536, 59, 536, 76),
    woosh.Token(woosh.OP, '(', 537, 20, 537, 21),
    woosh.Token(woosh.NAME, 'initial', 537, 21, 537, 28),
    woosh.Token(woosh.OP, '==', 537, 29, 537, 31),
    woosh.Token(woosh.STRING, "'.'", 537, 32, 537, 35),
    woosh.Token(woosh.NAME, 'and', 537, 36, 537, 39),
    woosh.Token(woosh.NAME, 'token', 537, 40, 537, 45),
    woosh.Token(woosh.OP, '!=', 537, 46, 537, 48),
    woosh.Token(woosh.STRING, "'.'", 537, 49, 537, 52),
    woosh.Token(woosh.NAME, 'and', 537, 53, 537, 56),
    woosh.Token(woosh.NAME, 'token', 537, 57, 537, 62),
    woosh.Token(woosh.OP, '!=', 537, 63, 537, 65),
    woosh.Token(woosh.STRING, "'...'", 537, 66, 537, 71),
    woosh.Token(woosh.OP, ')', 537, 71, 537, 72),
    woosh.Token(woosh.OP, ')', 537, 72, 537, 73),
    woosh.Token(woosh.OP, ':', 537, 73, 537, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 537, 74, 538, 0),
    woosh.Token(woosh.INDENT, '                    ', 538, 0, 538, 20),
    woosh.Token(woosh.NAME, 'yield', 538, 20, 538, 25),
    woosh.Token(woosh.NAME, 'TokenInfo', 538, 26, 538, 35),
    woosh.Token(woosh.OP, '(', 538, 35, 538, 36),
    woosh.Token(woosh.NAME, 'NUMBER', 538, 36, 538, 42),
    woosh.Token(woosh.OP, ',', 538, 42, 538, 43),
    woosh.Token(woosh.NAME, 'token', 538, 44, 538, 49),
    woosh.Token(woosh.OP, ',', 538, 49, 538, 50),
    woosh.Token(woosh.NAME, 'spos', 538, 51, 538, 55),
    woosh.Token(woosh.OP, ',', 538, 55, 538, 56),
    woosh.Token(woosh.NAME, 'epos', 538, 57, 538, 61),
    woosh.Token(woosh.OP, ',', 538, 61, 538, 62),
    woosh.Token(woosh.NAME, 'line', 538, 63, 538, 67),
    woosh.Token(woosh.OP, ')', 538, 67, 538, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 538, 68, 539, 0),
    woosh.Token(woosh.DEDENT, '                ', 539, 0, 539, 16),
    woosh.Token(woosh.NAME, 'elif', 539, 16, 539, 20),
    woosh.Token(woosh.NAME, 'initial', 539, 21, 539, 28),
    woosh.Token(woosh.NAME, 'in', 539, 29, 539, 31),
    woosh.Token(woosh.STRING, "'\\r\\n'", 539, 32, 539, 38),
    woosh.Token(woosh.OP, ':', 539, 38, 539, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 539, 39, 540, 0),
    woosh.Token(woosh.INDENT, '                    ', 540, 0, 540, 20),
    woosh.Token(woosh.NAME, 'if', 540, 20, 540, 22),
    woosh.Token(woosh.NAME, 'parenlev', 540, 23, 540, 31),
    woosh.Token(woosh.OP, '>', 540, 32, 540, 33),
    woosh.Token(woosh.NUMBER, '0', 540, 34, 540, 35),
    woosh.Token(woosh.OP, ':', 540, 35, 540, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 540, 36, 541, 0),
    woosh.Token(woosh.INDENT, '                        ', 541, 0, 541, 24),
    woosh.Token(woosh.NAME, 'yield', 541, 24, 541, 29),
    woosh.Token(woosh.NAME, 'TokenInfo', 541, 30, 541, 39),
    woosh.Token(woosh.OP, '(', 541, 39, 541, 40),
    woosh.Token(woosh.NAME, 'NL', 541, 40, 541, 42),
    woosh.Token(woosh.OP, ',', 541, 42, 541, 43),
    woosh.Token(woosh.NAME, 'token', 541, 44, 541, 49),
    woosh.Token(woosh.OP, ',', 541, 49, 541, 50),
    woosh.Token(woosh.NAME, 'spos', 541, 51, 541, 55),
    woosh.Token(woosh.OP, ',', 541, 55, 541, 56),
    woosh.Token(woosh.NAME, 'epos', 541, 57, 541, 61),
    woosh.Token(woosh.OP, ',', 541, 61, 541, 62),
    woosh.Token(woosh.NAME, 'line', 541, 63, 541, 67),
    woosh.Token(woosh.OP, ')', 541, 67, 541, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 541, 68, 542, 0),
    woosh.Token(woosh.DEDENT, '                    ', 542, 0, 542, 20),
    woosh.Token(woosh.NAME, 'else', 542, 20, 542, 24),
    woosh.Token(woosh.OP, ':', 542, 24, 542, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 542, 25, 543, 0),
    woosh.Token(woosh.INDENT, '                        ', 543, 0, 543, 24),
    woosh.Token(woosh.NAME, 'yield', 543, 24, 543, 29),
    woosh.Token(woosh.NAME, 'TokenInfo', 543, 30, 543, 39),
    woosh.Token(woosh.OP, '(', 543, 39, 543, 40),
    woosh.Token(woosh.NAME, 'NEWLINE', 543, 40, 543, 47),
    woosh.Token(woosh.OP, ',', 543, 47, 543, 48),
    woosh.Token(woosh.NAME, 'token', 543, 49, 543, 54),
    woosh.Token(woosh.OP, ',', 543, 54, 543, 55),
    woosh.Token(woosh.NAME, 'spos', 543, 56, 543, 60),
    woosh.Token(woosh.OP, ',', 543, 60, 543, 61),
    woosh.Token(woosh.NAME, 'epos', 543, 62, 543, 66),
    woosh.Token(woosh.OP, ',', 543, 66, 543, 67),
    woosh.Token(woosh.NAME, 'line', 543, 68, 543, 72),
    woosh.Token(woosh.OP, ')', 543, 72, 543, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 543, 73, 544, 0),
    woosh.Token(woosh.DEDENT, '                ', 545, 0, 545, 16),
    woosh.Token(woosh.DEDENT, '', 545, 16, 545, 16),
    woosh.Token(woosh.NAME, 'elif', 545, 16, 545, 20),
    woosh.Token(woosh.NAME, 'initial', 545, 21, 545, 28),
    woosh.Token(woosh.OP, '==', 545, 29, 545, 31),
    woosh.Token(woosh.STRING, "'#'", 545, 32, 545, 35),
    woosh.Token(woosh.OP, ':', 545, 35, 545, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 545, 36, 546, 0),
    woosh.Token(woosh.INDENT, '                    ', 546, 0, 546, 20),
    woosh.Token(woosh.NAME, 'assert', 546, 20, 546, 26),
    woosh.Token(woosh.NAME, 'not', 546, 27, 546, 30),
    woosh.Token(woosh.NAME, 'token', 546, 31, 546, 36),
    woosh.Token(woosh.OP, '.', 546, 36, 546, 37),
    woosh.Token(woosh.NAME, 'endswith', 546, 37, 546, 45),
    woosh.Token(woosh.OP, '(', 546, 45, 546, 46),
    woosh.Token(woosh.STRING, '"\\n"', 546, 46, 546, 50),
    woosh.Token(woosh.OP, ')', 546, 50, 546, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 546, 51, 547, 0),
    woosh.Token(woosh.NAME, 'yield', 547, 20, 547, 25),
    woosh.Token(woosh.NAME, 'TokenInfo', 547, 26, 547, 35),
    woosh.Token(woosh.OP, '(', 547, 35, 547, 36),
    woosh.Token(woosh.NAME, 'COMMENT', 547, 36, 547, 43),
    woosh.Token(woosh.OP, ',', 547, 43, 547, 44),
    woosh.Token(woosh.NAME, 'token', 547, 45, 547, 50),
    woosh.Token(woosh.OP, ',', 547, 50, 547, 51),
    woosh.Token(woosh.NAME, 'spos', 547, 52, 547, 56),
    woosh.Token(woosh.OP, ',', 547, 56, 547, 57),
    woosh.Token(woosh.NAME, 'epos', 547, 58, 547, 62),
    woosh.Token(woosh.OP, ',', 547, 62, 547, 63),
    woosh.Token(woosh.NAME, 'line', 547, 64, 547, 68),
    woosh.Token(woosh.OP, ')', 547, 68, 547, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 547, 69, 548, 0),
    woosh.Token(woosh.DEDENT, '                ', 549, 0, 549, 16),
    woosh.Token(woosh.NAME, 'elif', 549, 16, 549, 20),
    woosh.Token(woosh.NAME, 'token', 549, 21, 549, 26),
    woosh.Token(woosh.NAME, 'in', 549, 27, 549, 29),
    woosh.Token(woosh.NAME, 'triple_quoted', 549, 30, 549, 43),
    woosh.Token(woosh.OP, ':', 549, 43, 549, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 549, 44, 550, 0),
    woosh.Token(woosh.INDENT, '                    ', 550, 0, 550, 20),
    woosh.Token(woosh.NAME, 'endprog', 550, 20, 550, 27),
    woosh.Token(woosh.OP, '=', 550, 28, 550, 29),
    woosh.Token(woosh.NAME, '_compile', 550, 30, 550, 38),
    woosh.Token(woosh.OP, '(', 550, 38, 550, 39),
    woosh.Token(woosh.NAME, 'endpats', 550, 39, 550, 46),
    woosh.Token(woosh.OP, '[', 550, 46, 550, 47),
    woosh.Token(woosh.NAME, 'token', 550, 47, 550, 52),
    woosh.Token(woosh.OP, ']', 550, 52, 550, 53),
    woosh.Token(woosh.OP, ')', 550, 53, 550, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 550, 54, 551, 0),
    woosh.Token(woosh.NAME, 'endmatch', 551, 20, 551, 28),
    woosh.Token(woosh.OP, '=', 551, 29, 551, 30),
    woosh.Token(woosh.NAME, 'endprog', 551, 31, 551, 38),
    woosh.Token(woosh.OP, '.', 551, 38, 551, 39),
    woosh.Token(woosh.NAME, 'match', 551, 39, 551, 44),
    woosh.Token(woosh.OP, '(', 551, 44, 551, 45),
    woosh.Token(woosh.NAME, 'line', 551, 45, 551, 49),
    woosh.Token(woosh.OP, ',', 551, 49, 551, 50),
    woosh.Token(woosh.NAME, 'pos', 551, 51, 551, 54),
    woosh.Token(woosh.OP, ')', 551, 54, 551, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 551, 55, 552, 0),
    woosh.Token(woosh.NAME, 'if', 552, 20, 552, 22),
    woosh.Token(woosh.NAME, 'endmatch', 552, 23, 552, 31),
    woosh.Token(woosh.OP, ':', 552, 31, 552, 32),
    woosh.Token(woosh.COMMENT, '# all on one line', 552, 59, 552, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 552, 76, 553, 0),
    woosh.Token(woosh.INDENT, '                        ', 553, 0, 553, 24),
    woosh.Token(woosh.NAME, 'pos', 553, 24, 553, 27),
    woosh.Token(woosh.OP, '=', 553, 28, 553, 29),
    woosh.Token(woosh.NAME, 'endmatch', 553, 30, 553, 38),
    woosh.Token(woosh.OP, '.', 553, 38, 553, 39),
    woosh.Token(woosh.NAME, 'end', 553, 39, 553, 42),
    woosh.Token(woosh.OP, '(', 553, 42, 553, 43),
    woosh.Token(woosh.NUMBER, '0', 553, 43, 553, 44),
    woosh.Token(woosh.OP, ')', 553, 44, 553, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 553, 45, 554, 0),
    woosh.Token(woosh.NAME, 'token', 554, 24, 554, 29),
    woosh.Token(woosh.OP, '=', 554, 30, 554, 31),
    woosh.Token(woosh.NAME, 'line', 554, 32, 554, 36),
    woosh.Token(woosh.OP, '[', 554, 36, 554, 37),
    woosh.Token(woosh.NAME, 'start', 554, 37, 554, 42),
    woosh.Token(woosh.OP, ':', 554, 42, 554, 43),
    woosh.Token(woosh.NAME, 'pos', 554, 43, 554, 46),
    woosh.Token(woosh.OP, ']', 554, 46, 554, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 554, 47, 555, 0),
    woosh.Token(woosh.NAME, 'yield', 555, 24, 555, 29),
    woosh.Token(woosh.NAME, 'TokenInfo', 555, 30, 555, 39),
    woosh.Token(woosh.OP, '(', 555, 39, 555, 40),
    woosh.Token(woosh.NAME, 'STRING', 555, 40, 555, 46),
    woosh.Token(woosh.OP, ',', 555, 46, 555, 47),
    woosh.Token(woosh.NAME, 'token', 555, 48, 555, 53),
    woosh.Token(woosh.OP, ',', 555, 53, 555, 54),
    woosh.Token(woosh.NAME, 'spos', 555, 55, 555, 59),
    woosh.Token(woosh.OP, ',', 555, 59, 555, 60),
    woosh.Token(woosh.OP, '(', 555, 61, 555, 62),
    woosh.Token(woosh.NAME, 'lnum', 555, 62, 555, 66),
    woosh.Token(woosh.OP, ',', 555, 66, 555, 67),
    woosh.Token(woosh.NAME, 'pos', 555, 68, 555, 71),
    woosh.Token(woosh.OP, ')', 555, 71, 555, 72),
    woosh.Token(woosh.OP, ',', 555, 72, 555, 73),
    woosh.Token(woosh.NAME, 'line', 555, 74, 555, 78),
    woosh.Token(woosh.OP, ')', 555, 78, 555, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 555, 79, 556, 0),
    woosh.Token(woosh.DEDENT, '                    ', 556, 0, 556, 20),
    woosh.Token(woosh.NAME, 'else', 556, 20, 556, 24),
    woosh.Token(woosh.OP, ':', 556, 24, 556, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 556, 25, 557, 0),
    woosh.Token(woosh.INDENT, '                        ', 557, 0, 557, 24),
    woosh.Token(woosh.NAME, 'strstart', 557, 24, 557, 32),
    woosh.Token(woosh.OP, '=', 557, 33, 557, 34),
    woosh.Token(woosh.OP, '(', 557, 35, 557, 36),
    woosh.Token(woosh.NAME, 'lnum', 557, 36, 557, 40),
    woosh.Token(woosh.OP, ',', 557, 40, 557, 41),
    woosh.Token(woosh.NAME, 'start', 557, 42, 557, 47),
    woosh.Token(woosh.OP, ')', 557, 47, 557, 48),
    woosh.Token(woosh.COMMENT, '# multiple lines', 557, 59, 557, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 557, 75, 558, 0),
    woosh.Token(woosh.NAME, 'contstr', 558, 24, 558, 31),
    woosh.Token(woosh.OP, '=', 558, 32, 558, 33),
    woosh.Token(woosh.NAME, 'line', 558, 34, 558, 38),
    woosh.Token(woosh.OP, '[', 558, 38, 558, 39),
    woosh.Token(woosh.NAME, 'start', 558, 39, 558, 44),
    woosh.Token(woosh.OP, ':', 558, 44, 558, 45),
    woosh.Token(woosh.OP, ']', 558, 45, 558, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 558, 46, 559, 0),
    woosh.Token(woosh.NAME, 'contline', 559, 24, 559, 32),
    woosh.Token(woosh.OP, '=', 559, 33, 559, 34),
    woosh.Token(woosh.NAME, 'line', 559, 35, 559, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 559, 39, 560, 0),
    woosh.Token(woosh.NAME, 'break', 560, 24, 560, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 560, 29, 561, 0),
    woosh.Token(woosh.COMMENT, '# Check up to the first 3 chars of the token to see if', 562, 16, 562, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 562, 70, 563, 0),
    woosh.Token(woosh.COMMENT, "#  they're in the single_quoted set. If so, they start", 563, 16, 563, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 563, 70, 564, 0),
    woosh.Token(woosh.COMMENT, '#  a string.', 564, 16, 564, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 564, 28, 565, 0),
    woosh.Token(woosh.COMMENT, "# We're using the first 3, because we're looking for", 565, 16, 565, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 565, 68, 566, 0),
    woosh.Token(woosh.COMMENT, '#  "rb\'" (for example) at the start of the token. If', 566, 16, 566, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 566, 68, 567, 0),
    woosh.Token(woosh.COMMENT, '#  we switch to longer prefixes, this needs to be', 567, 16, 567, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 567, 65, 568, 0),
    woosh.Token(woosh.COMMENT, '#  adjusted.', 568, 16, 568, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 568, 28, 569, 0),
    woosh.Token(woosh.COMMENT, '# Note that initial == token[:1].', 569, 16, 569, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 569, 49, 570, 0),
    woosh.Token(woosh.COMMENT, '# Also note that single quote checking must come after', 570, 16, 570, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 570, 70, 571, 0),
    woosh.Token(woosh.COMMENT, '#  triple quote checking (above).', 571, 16, 571, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 571, 49, 572, 0),
    woosh.Token(woosh.DEDENT, '                ', 572, 0, 572, 16),
    woosh.Token(woosh.DEDENT, '', 572, 16, 572, 16),
    woosh.Token(woosh.NAME, 'elif', 572, 16, 572, 20),
    woosh.Token(woosh.OP, '(', 572, 21, 572, 22),
    woosh.Token(woosh.NAME, 'initial', 572, 22, 572, 29),
    woosh.Token(woosh.NAME, 'in', 572, 30, 572, 32),
    woosh.Token(woosh.NAME, 'single_quoted', 572, 33, 572, 46),
    woosh.Token(woosh.NAME, 'or', 572, 47, 572, 49),
    woosh.Token(woosh.NAME, 'token', 573, 22, 573, 27),
    woosh.Token(woosh.OP, '[', 573, 27, 573, 28),
    woosh.Token(woosh.OP, ':', 573, 28, 573, 29),
    woosh.Token(woosh.NUMBER, '2', 573, 29, 573, 30),
    woosh.Token(woosh.OP, ']', 573, 30, 573, 31),
    woosh.Token(woosh.NAME, 'in', 573, 32, 573, 34),
    woosh.Token(woosh.NAME, 'single_quoted', 573, 35, 573, 48),
    woosh.Token(woosh.NAME, 'or', 573, 49, 573, 51),
    woosh.Token(woosh.NAME, 'token', 574, 22, 574, 27),
    woosh.Token(woosh.OP, '[', 574, 27, 574, 28),
    woosh.Token(woosh.OP, ':', 574, 28, 574, 29),
    woosh.Token(woosh.NUMBER, '3', 574, 29, 574, 30),
    woosh.Token(woosh.OP, ']', 574, 30, 574, 31),
    woosh.Token(woosh.NAME, 'in', 574, 32, 574, 34),
    woosh.Token(woosh.NAME, 'single_quoted', 574, 35, 574, 48),
    woosh.Token(woosh.OP, ')', 574, 48, 574, 49),
    woosh.Token(woosh.OP, ':', 574, 49, 574, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 574, 50, 575, 0),
    woosh.Token(woosh.INDENT, '                    ', 575, 0, 575, 20),
    woosh.Token(woosh.NAME, 'if', 575, 20, 575, 22),
    woosh.Token(woosh.NAME, 'token', 575, 23, 575, 28),
    woosh.Token(woosh.OP, '[', 575, 28, 575, 29),
    woosh.Token(woosh.OP, '-', 575, 29, 575, 30),
    woosh.Token(woosh.NUMBER, '1', 575, 30, 575, 31),
    woosh.Token(woosh.OP, ']', 575, 31, 575, 32),
    woosh.Token(woosh.OP, '==', 575, 33, 575, 35),
    woosh.Token(woosh.STRING, "'\\n'", 575, 36, 575, 40),
    woosh.Token(woosh.OP, ':', 575, 40, 575, 41),
    woosh.Token(woosh.COMMENT, '# continued string', 575, 59, 575, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 575, 77, 576, 0),
    woosh.Token(woosh.INDENT, '                        ', 576, 0, 576, 24),
    woosh.Token(woosh.NAME, 'strstart', 576, 24, 576, 32),
    woosh.Token(woosh.OP, '=', 576, 33, 576, 34),
    woosh.Token(woosh.OP, '(', 576, 35, 576, 36),
    woosh.Token(woosh.NAME, 'lnum', 576, 36, 576, 40),
    woosh.Token(woosh.OP, ',', 576, 40, 576, 41),
    woosh.Token(woosh.NAME, 'start', 576, 42, 576, 47),
    woosh.Token(woosh.OP, ')', 576, 47, 576, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 576, 48, 577, 0),
    woosh.Token(woosh.COMMENT, '# Again, using the first 3 chars of the', 577, 24, 577, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 577, 63, 578, 0),
    woosh.Token(woosh.COMMENT, '#  token. This is looking for the matching end', 578, 24, 578, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 578, 70, 579, 0),
    woosh.Token(woosh.COMMENT, '#  regex for the correct type of quote', 579, 24, 579, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 579, 62, 580, 0),
    woosh.Token(woosh.COMMENT, "#  character. So it's really looking for", 580, 24, 580, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 580, 64, 581, 0),
    woosh.Token(woosh.COMMENT, '#  endpats["\'"] or endpats[\'"\'], by trying to', 581, 24, 581, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 581, 69, 582, 0),
    woosh.Token(woosh.COMMENT, '#  skip string prefix characters, if any.', 582, 24, 582, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 582, 65, 583, 0),
    woosh.Token(woosh.NAME, 'endprog', 583, 24, 583, 31),
    woosh.Token(woosh.OP, '=', 583, 32, 583, 33),
    woosh.Token(woosh.NAME, '_compile', 583, 34, 583, 42),
    woosh.Token(woosh.OP, '(', 583, 42, 583, 43),
    woosh.Token(woosh.NAME, 'endpats', 583, 43, 583, 50),
    woosh.Token(woosh.OP, '.', 583, 50, 583, 51),
    woosh.Token(woosh.NAME, 'get', 583, 51, 583, 54),
    woosh.Token(woosh.OP, '(', 583, 54, 583, 55),
    woosh.Token(woosh.NAME, 'initial', 583, 55, 583, 62),
    woosh.Token(woosh.OP, ')', 583, 62, 583, 63),
    woosh.Token(woosh.NAME, 'or', 583, 64, 583, 66),
    woosh.Token(woosh.NAME, 'endpats', 584, 43, 584, 50),
    woosh.Token(woosh.OP, '.', 584, 50, 584, 51),
    woosh.Token(woosh.NAME, 'get', 584, 51, 584, 54),
    woosh.Token(woosh.OP, '(', 584, 54, 584, 55),
    woosh.Token(woosh.NAME, 'token', 584, 55, 584, 60),
    woosh.Token(woosh.OP, '[', 584, 60, 584, 61),
    woosh.Token(woosh.NUMBER, '1', 584, 61, 584, 62),
    woosh.Token(woosh.OP, ']', 584, 62, 584, 63),
    woosh.Token(woosh.OP, ')', 584, 63, 584, 64),
    woosh.Token(woosh.NAME, 'or', 584, 65, 584, 67),
    woosh.Token(woosh.NAME, 'endpats', 585, 43, 585, 50),
    woosh.Token(woosh.OP, '.', 585, 50, 585, 51),
    woosh.Token(woosh.NAME, 'get', 585, 51, 585, 54),
    woosh.Token(woosh.OP, '(', 585, 54, 585, 55),
    woosh.Token(woosh.NAME, 'token', 585, 55, 585, 60),
    woosh.Token(woosh.OP, '[', 585, 60, 585, 61),
    woosh.Token(woosh.NUMBER, '2', 585, 61, 585, 62),
    woosh.Token(woosh.OP, ']', 585, 62, 585, 63),
    woosh.Token(woosh.OP, ')', 585, 63, 585, 64),
    woosh.Token(woosh.OP, ')', 585, 64, 585, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 585, 65, 586, 0),
    woosh.Token(woosh.NAME, 'contstr', 586, 24, 586, 31),
    woosh.Token(woosh.OP, ',', 586, 31, 586, 32),
    woosh.Token(woosh.NAME, 'needcont', 586, 33, 586, 41),
    woosh.Token(woosh.OP, '=', 586, 42, 586, 43),
    woosh.Token(woosh.NAME, 'line', 586, 44, 586, 48),
    woosh.Token(woosh.OP, '[', 586, 48, 586, 49),
    woosh.Token(woosh.NAME, 'start', 586, 49, 586, 54),
    woosh.Token(woosh.OP, ':', 586, 54, 586, 55),
    woosh.Token(woosh.OP, ']', 586, 55, 586, 56),
    woosh.Token(woosh.OP, ',', 586, 56, 586, 57),
    woosh.Token(woosh.NUMBER, '1', 586, 58, 586, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 586, 59, 587, 0),
    woosh.Token(woosh.NAME, 'contline', 587, 24, 587, 32),
    woosh.Token(woosh.OP, '=', 587, 33, 587, 34),
    woosh.Token(woosh.NAME, 'line', 587, 35, 587, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 587, 39, 588, 0),
    woosh.Token(woosh.NAME, 'break', 588, 24, 588, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 588, 29, 589, 0),
    woosh.Token(woosh.DEDENT, '                    ', 589, 0, 589, 20),
    woosh.Token(woosh.NAME, 'else', 589, 20, 589, 24),
    woosh.Token(woosh.OP, ':', 589, 24, 589, 25),
    woosh.Token(woosh.COMMENT, '# ordinary string', 589, 59, 589, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 589, 76, 590, 0),
    woosh.Token(woosh.INDENT, '                        ', 590, 0, 590, 24),
    woosh.Token(woosh.NAME, 'yield', 590, 24, 590, 29),
    woosh.Token(woosh.NAME, 'TokenInfo', 590, 30, 590, 39),
    woosh.Token(woosh.OP, '(', 590, 39, 590, 40),
    woosh.Token(woosh.NAME, 'STRING', 590, 40, 590, 46),
    woosh.Token(woosh.OP, ',', 590, 46, 590, 47),
    woosh.Token(woosh.NAME, 'token', 590, 48, 590, 53),
    woosh.Token(woosh.OP, ',', 590, 53, 590, 54),
    woosh.Token(woosh.NAME, 'spos', 590, 55, 590, 59),
    woosh.Token(woosh.OP, ',', 590, 59, 590, 60),
    woosh.Token(woosh.NAME, 'epos', 590, 61, 590, 65),
    woosh.Token(woosh.OP, ',', 590, 65, 590, 66),
    woosh.Token(woosh.NAME, 'line', 590, 67, 590, 71),
    woosh.Token(woosh.OP, ')', 590, 71, 590, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 590, 72, 591, 0),
    woosh.Token(woosh.DEDENT, '                ', 592, 0, 592, 16),
    woosh.Token(woosh.DEDENT, '', 592, 16, 592, 16),
    woosh.Token(woosh.NAME, 'elif', 592, 16, 592, 20),
    woosh.Token(woosh.NAME, 'initial', 592, 21, 592, 28),
    woosh.Token(woosh.OP, '.', 592, 28, 592, 29),
    woosh.Token(woosh.NAME, 'isidentifier', 592, 29, 592, 41),
    woosh.Token(woosh.OP, '(', 592, 41, 592, 42),
    woosh.Token(woosh.OP, ')', 592, 42, 592, 43),
    woosh.Token(woosh.OP, ':', 592, 43, 592, 44),
    woosh.Token(woosh.COMMENT, '# ordinary name', 592, 59, 592, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 592, 74, 593, 0),
    woosh.Token(woosh.INDENT, '                    ', 593, 0, 593, 20),
    woosh.Token(woosh.NAME, 'yield', 593, 20, 593, 25),
    woosh.Token(woosh.NAME, 'TokenInfo', 593, 26, 593, 35),
    woosh.Token(woosh.OP, '(', 593, 35, 593, 36),
    woosh.Token(woosh.NAME, 'NAME', 593, 36, 593, 40),
    woosh.Token(woosh.OP, ',', 593, 40, 593, 41),
    woosh.Token(woosh.NAME, 'token', 593, 42, 593, 47),
    woosh.Token(woosh.OP, ',', 593, 47, 593, 48),
    woosh.Token(woosh.NAME, 'spos', 593, 49, 593, 53),
    woosh.Token(woosh.OP, ',', 593, 53, 593, 54),
    woosh.Token(woosh.NAME, 'epos', 593, 55, 593, 59),
    woosh.Token(woosh.OP, ',', 593, 59, 593, 60),
    woosh.Token(woosh.NAME, 'line', 593, 61, 593, 65),
    woosh.Token(woosh.OP, ')', 593, 65, 593, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 593, 66, 594, 0),
    woosh.Token(woosh.DEDENT, '                ', 594, 0, 594, 16),
    woosh.Token(woosh.NAME, 'elif', 594, 16, 594, 20),
    woosh.Token(woosh.NAME, 'initial', 594, 21, 594, 28),
    woosh.Token(woosh.OP, '==', 594, 29, 594, 31),
    woosh.Token(woosh.STRING, "'\\\\'", 594, 32, 594, 36),
    woosh.Token(woosh.OP, ':', 594, 36, 594, 37),
    woosh.Token(woosh.COMMENT, '# continued stmt', 594, 59, 594, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 594, 75, 595, 0),
    woosh.Token(woosh.INDENT, '                    ', 595, 0, 595, 20),
    woosh.Token(woosh.NAME, 'continued', 595, 20, 595, 29),
    woosh.Token(woosh.OP, '=', 595, 30, 595, 31),
    woosh.Token(woosh.NUMBER, '1', 595, 32, 595, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 595, 33, 596, 0),
    woosh.Token(woosh.DEDENT, '                ', 596, 0, 596, 16),
    woosh.Token(woosh.NAME, 'else', 596, 16, 596, 20),
    woosh.Token(woosh.OP, ':', 596, 20, 596, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 596, 21, 597, 0),
    woosh.Token(woosh.INDENT, '                    ', 597, 0, 597, 20),
    woosh.Token(woosh.NAME, 'if', 597, 20, 597, 22),
    woosh.Token(woosh.NAME, 'initial', 597, 23, 597, 30),
    woosh.Token(woosh.NAME, 'in', 597, 31, 597, 33),
    woosh.Token(woosh.STRING, "'([{'", 597, 34, 597, 39),
    woosh.Token(woosh.OP, ':', 597, 39, 597, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 597, 40, 598, 0),
    woosh.Token(woosh.INDENT, '                        ', 598, 0, 598, 24),
    woosh.Token(woosh.NAME, 'parenlev', 598, 24, 598, 32),
    woosh.Token(woosh.OP, '+=', 598, 33, 598, 35),
    woosh.Token(woosh.NUMBER, '1', 598, 36, 598, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 598, 37, 599, 0),
    woosh.Token(woosh.DEDENT, '                    ', 599, 0, 599, 20),
    woosh.Token(woosh.NAME, 'elif', 599, 20, 599, 24),
    woosh.Token(woosh.NAME, 'initial', 599, 25, 599, 32),
    woosh.Token(woosh.NAME, 'in', 599, 33, 599, 35),
    woosh.Token(woosh.STRING, "')]}'", 599, 36, 599, 41),
    woosh.Token(woosh.OP, ':', 599, 41, 599, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 599, 42, 600, 0),
    woosh.Token(woosh.INDENT, '                        ', 600, 0, 600, 24),
    woosh.Token(woosh.NAME, 'parenlev', 600, 24, 600, 32),
    woosh.Token(woosh.OP, '-=', 600, 33, 600, 35),
    woosh.Token(woosh.NUMBER, '1', 600, 36, 600, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 600, 37, 601, 0),
    woosh.Token(woosh.DEDENT, '                    ', 601, 0, 601, 20),
    woosh.Token(woosh.NAME, 'yield', 601, 20, 601, 25),
    woosh.Token(woosh.NAME, 'TokenInfo', 601, 26, 601, 35),
    woosh.Token(woosh.OP, '(', 601, 35, 601, 36),
    woosh.Token(woosh.NAME, 'OP', 601, 36, 601, 38),
    woosh.Token(woosh.OP, ',', 601, 38, 601, 39),
    woosh.Token(woosh.NAME, 'token', 601, 40, 601, 45),
    woosh.Token(woosh.OP, ',', 601, 45, 601, 46),
    woosh.Token(woosh.NAME, 'spos', 601, 47, 601, 51),
    woosh.Token(woosh.OP, ',', 601, 51, 601, 52),
    woosh.Token(woosh.NAME, 'epos', 601, 53, 601, 57),
    woosh.Token(woosh.OP, ',', 601, 57, 601, 58),
    woosh.Token(woosh.NAME, 'line', 601, 59, 601, 63),
    woosh.Token(woosh.OP, ')', 601, 63, 601, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 601, 64, 602, 0),
    woosh.Token(woosh.DEDENT, '            ', 602, 0, 602, 12),
    woosh.Token(woosh.DEDENT, '', 602, 12, 602, 12),
    woosh.Token(woosh.NAME, 'else', 602, 12, 602, 16),
    woosh.Token(woosh.OP, ':', 602, 16, 602, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 602, 17, 603, 0),
    woosh.Token(woosh.INDENT, '                ', 603, 0, 603, 16),
    woosh.Token(woosh.NAME, 'yield', 603, 16, 603, 21),
    woosh.Token(woosh.NAME, 'TokenInfo', 603, 22, 603, 31),
    woosh.Token(woosh.OP, '(', 603, 31, 603, 32),
    woosh.Token(woosh.NAME, 'ERRORTOKEN', 603, 32, 603, 42),
    woosh.Token(woosh.OP, ',', 603, 42, 603, 43),
    woosh.Token(woosh.NAME, 'line', 603, 44, 603, 48),
    woosh.Token(woosh.OP, '[', 603, 48, 603, 49),
    woosh.Token(woosh.NAME, 'pos', 603, 49, 603, 52),
    woosh.Token(woosh.OP, ']', 603, 52, 603, 53),
    woosh.Token(woosh.OP, ',', 603, 53, 603, 54),
    woosh.Token(woosh.OP, '(', 604, 27, 604, 28),
    woosh.Token(woosh.NAME, 'lnum', 604, 28, 604, 32),
    woosh.Token(woosh.OP, ',', 604, 32, 604, 33),
    woosh.Token(woosh.NAME, 'pos', 604, 34, 604, 37),
    woosh.Token(woosh.OP, ')', 604, 37, 604, 38),
    woosh.Token(woosh.OP, ',', 604, 38, 604, 39),
    woosh.Token(woosh.OP, '(', 604, 40, 604, 41),
    woosh.Token(woosh.NAME, 'lnum', 604, 41, 604, 45),
    woosh.Token(woosh.OP, ',', 604, 45, 604, 46),
    woosh.Token(woosh.NAME, 'pos', 604, 47, 604, 50),
    woosh.Token(woosh.OP, '+', 604, 50, 604, 51),
    woosh.Token(woosh.NUMBER, '1', 604, 51, 604, 52),
    woosh.Token(woosh.OP, ')', 604, 52, 604, 53),
    woosh.Token(woosh.OP, ',', 604, 53, 604, 54),
    woosh.Token(woosh.NAME, 'line', 604, 55, 604, 59),
    woosh.Token(woosh.OP, ')', 604, 59, 604, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 604, 60, 605, 0),
    woosh.Token(woosh.NAME, 'pos', 605, 16, 605, 19),
    woosh.Token(woosh.OP, '+=', 605, 20, 605, 22),
    woosh.Token(woosh.NUMBER, '1', 605, 23, 605, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 605, 24, 606, 0),
    woosh.Token(woosh.COMMENT, "# Add an implicit NEWLINE if the input doesn't end in one", 607, 4, 607, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 607, 61, 608, 0),
    woosh.Token(woosh.DEDENT, '    ', 608, 0, 608, 4),
    woosh.Token(woosh.DEDENT, '', 608, 4, 608, 4),
    woosh.Token(woosh.DEDENT, '', 608, 4, 608, 4),
    woosh.Token(woosh.NAME, 'if', 608, 4, 608, 6),
    woosh.Token(woosh.NAME, 'last_line', 608, 7, 608, 16),
    woosh.Token(woosh.NAME, 'and', 608, 17, 608, 20),
    woosh.Token(woosh.NAME, 'last_line', 608, 21, 608, 30),
    woosh.Token(woosh.OP, '[', 608, 30, 608, 31),
    woosh.Token(woosh.OP, '-', 608, 31, 608, 32),
    woosh.Token(woosh.NUMBER, '1', 608, 32, 608, 33),
    woosh.Token(woosh.OP, ']', 608, 33, 608, 34),
    woosh.Token(woosh.NAME, 'not', 608, 35, 608, 38),
    woosh.Token(woosh.NAME, 'in', 608, 39, 608, 41),
    woosh.Token(woosh.STRING, "'\\r\\n'", 608, 42, 608, 48),
    woosh.Token(woosh.OP, ':', 608, 48, 608, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 608, 49, 609, 0),
    woosh.Token(woosh.INDENT, '        ', 609, 0, 609, 8),
    woosh.Token(woosh.NAME, 'yield', 609, 8, 609, 13),
    woosh.Token(woosh.NAME, 'TokenInfo', 609, 14, 609, 23),
    woosh.Token(woosh.OP, '(', 609, 23, 609, 24),
    woosh.Token(woosh.NAME, 'NEWLINE', 609, 24, 609, 31),
    woosh.Token(woosh.OP, ',', 609, 31, 609, 32),
    woosh.Token(woosh.STRING, "''", 609, 33, 609, 35),
    woosh.Token(woosh.OP, ',', 609, 35, 609, 36),
    woosh.Token(woosh.OP, '(', 609, 37, 609, 38),
    woosh.Token(woosh.NAME, 'lnum', 609, 38, 609, 42),
    woosh.Token(woosh.OP, '-', 609, 43, 609, 44),
    woosh.Token(woosh.NUMBER, '1', 609, 45, 609, 46),
    woosh.Token(woosh.OP, ',', 609, 46, 609, 47),
    woosh.Token(woosh.NAME, 'len', 609, 48, 609, 51),
    woosh.Token(woosh.OP, '(', 609, 51, 609, 52),
    woosh.Token(woosh.NAME, 'last_line', 609, 52, 609, 61),
    woosh.Token(woosh.OP, ')', 609, 61, 609, 62),
    woosh.Token(woosh.OP, ')', 609, 62, 609, 63),
    woosh.Token(woosh.OP, ',', 609, 63, 609, 64),
    woosh.Token(woosh.OP, '(', 609, 65, 609, 66),
    woosh.Token(woosh.NAME, 'lnum', 609, 66, 609, 70),
    woosh.Token(woosh.OP, '-', 609, 71, 609, 72),
    woosh.Token(woosh.NUMBER, '1', 609, 73, 609, 74),
    woosh.Token(woosh.OP, ',', 609, 74, 609, 75),
    woosh.Token(woosh.NAME, 'len', 609, 76, 609, 79),
    woosh.Token(woosh.OP, '(', 609, 79, 609, 80),
    woosh.Token(woosh.NAME, 'last_line', 609, 80, 609, 89),
    woosh.Token(woosh.OP, ')', 609, 89, 609, 90),
    woosh.Token(woosh.OP, '+', 609, 91, 609, 92),
    woosh.Token(woosh.NUMBER, '1', 609, 93, 609, 94),
    woosh.Token(woosh.OP, ')', 609, 94, 609, 95),
    woosh.Token(woosh.OP, ',', 609, 95, 609, 96),
    woosh.Token(woosh.STRING, "''", 609, 97, 609, 99),
    woosh.Token(woosh.OP, ')', 609, 99, 609, 100),
    woosh.Token(woosh.NEWLINE, '\r\n', 609, 100, 610, 0),
    woosh.Token(woosh.DEDENT, '    ', 610, 0, 610, 4),
    woosh.Token(woosh.NAME, 'for', 610, 4, 610, 7),
    woosh.Token(woosh.NAME, 'indent', 610, 8, 610, 14),
    woosh.Token(woosh.NAME, 'in', 610, 15, 610, 17),
    woosh.Token(woosh.NAME, 'indents', 610, 18, 610, 25),
    woosh.Token(woosh.OP, '[', 610, 25, 610, 26),
    woosh.Token(woosh.NUMBER, '1', 610, 26, 610, 27),
    woosh.Token(woosh.OP, ':', 610, 27, 610, 28),
    woosh.Token(woosh.OP, ']', 610, 28, 610, 29),
    woosh.Token(woosh.OP, ':', 610, 29, 610, 30),
    woosh.Token(woosh.COMMENT, '# pop remaining indent levels', 610, 47, 610, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 610, 76, 611, 0),
    woosh.Token(woosh.INDENT, '        ', 611, 0, 611, 8),
    woosh.Token(woosh.NAME, 'yield', 611, 8, 611, 13),
    woosh.Token(woosh.NAME, 'TokenInfo', 611, 14, 611, 23),
    woosh.Token(woosh.OP, '(', 611, 23, 611, 24),
    woosh.Token(woosh.NAME, 'DEDENT', 611, 24, 611, 30),
    woosh.Token(woosh.OP, ',', 611, 30, 611, 31),
    woosh.Token(woosh.STRING, "''", 611, 32, 611, 34),
    woosh.Token(woosh.OP, ',', 611, 34, 611, 35),
    woosh.Token(woosh.OP, '(', 611, 36, 611, 37),
    woosh.Token(woosh.NAME, 'lnum', 611, 37, 611, 41),
    woosh.Token(woosh.OP, ',', 611, 41, 611, 42),
    woosh.Token(woosh.NUMBER, '0', 611, 43, 611, 44),
    woosh.Token(woosh.OP, ')', 611, 44, 611, 45),
    woosh.Token(woosh.OP, ',', 611, 45, 611, 46),
    woosh.Token(woosh.OP, '(', 611, 47, 611, 48),
    woosh.Token(woosh.NAME, 'lnum', 611, 48, 611, 52),
    woosh.Token(woosh.OP, ',', 611, 52, 611, 53),
    woosh.Token(woosh.NUMBER, '0', 611, 54, 611, 55),
    woosh.Token(woosh.OP, ')', 611, 55, 611, 56),
    woosh.Token(woosh.OP, ',', 611, 56, 611, 57),
    woosh.Token(woosh.STRING, "''", 611, 58, 611, 60),
    woosh.Token(woosh.OP, ')', 611, 60, 611, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 611, 61, 612, 0),
    woosh.Token(woosh.DEDENT, '    ', 612, 0, 612, 4),
    woosh.Token(woosh.NAME, 'yield', 612, 4, 612, 9),
    woosh.Token(woosh.NAME, 'TokenInfo', 612, 10, 612, 19),
    woosh.Token(woosh.OP, '(', 612, 19, 612, 20),
    woosh.Token(woosh.NAME, 'ENDMARKER', 612, 20, 612, 29),
    woosh.Token(woosh.OP, ',', 612, 29, 612, 30),
    woosh.Token(woosh.STRING, "''", 612, 31, 612, 33),
    woosh.Token(woosh.OP, ',', 612, 33, 612, 34),
    woosh.Token(woosh.OP, '(', 612, 35, 612, 36),
    woosh.Token(woosh.NAME, 'lnum', 612, 36, 612, 40),
    woosh.Token(woosh.OP, ',', 612, 40, 612, 41),
    woosh.Token(woosh.NUMBER, '0', 612, 42, 612, 43),
    woosh.Token(woosh.OP, ')', 612, 43, 612, 44),
    woosh.Token(woosh.OP, ',', 612, 44, 612, 45),
    woosh.Token(woosh.OP, '(', 612, 46, 612, 47),
    woosh.Token(woosh.NAME, 'lnum', 612, 47, 612, 51),
    woosh.Token(woosh.OP, ',', 612, 51, 612, 52),
    woosh.Token(woosh.NUMBER, '0', 612, 53, 612, 54),
    woosh.Token(woosh.OP, ')', 612, 54, 612, 55),
    woosh.Token(woosh.OP, ',', 612, 55, 612, 56),
    woosh.Token(woosh.STRING, "''", 612, 57, 612, 59),
    woosh.Token(woosh.OP, ')', 612, 59, 612, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 612, 60, 613, 0),
    woosh.Token(woosh.DEDENT, '', 615, 0, 615, 0),
    woosh.Token(woosh.NAME, 'def', 615, 0, 615, 3),
    woosh.Token(woosh.NAME, 'generate_tokens', 615, 4, 615, 19),
    woosh.Token(woosh.OP, '(', 615, 19, 615, 20),
    woosh.Token(woosh.NAME, 'readline', 615, 20, 615, 28),
    woosh.Token(woosh.OP, ')', 615, 28, 615, 29),
    woosh.Token(woosh.OP, ':', 615, 29, 615, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 615, 30, 616, 0),
    woosh.Token(woosh.INDENT, '    ', 616, 0, 616, 4),
    woosh.Token(woosh.STRING, '"""Tokenize a source reading Python code as unicode strings.\r\n\r\n    This has the same API as tokenize(), except that it expects the *readline*\r\n    callable to return str objects instead of bytes.\r\n    """', 616, 4, 620, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 620, 7, 621, 0),
    woosh.Token(woosh.NAME, 'return', 621, 4, 621, 10),
    woosh.Token(woosh.NAME, '_tokenize', 621, 11, 621, 20),
    woosh.Token(woosh.OP, '(', 621, 20, 621, 21),
    woosh.Token(woosh.NAME, 'readline', 621, 21, 621, 29),
    woosh.Token(woosh.OP, ',', 621, 29, 621, 30),
    woosh.Token(woosh.NAME, 'None', 621, 31, 621, 35),
    woosh.Token(woosh.OP, ')', 621, 35, 621, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 621, 36, 622, 0),
    woosh.Token(woosh.DEDENT, '', 623, 0, 623, 0),
    woosh.Token(woosh.NAME, 'def', 623, 0, 623, 3),
    woosh.Token(woosh.NAME, 'main', 623, 4, 623, 8),
    woosh.Token(woosh.OP, '(', 623, 8, 623, 9),
    woosh.Token(woosh.OP, ')', 623, 9, 623, 10),
    woosh.Token(woosh.OP, ':', 623, 10, 623, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 623, 11, 624, 0),
    woosh.Token(woosh.INDENT, '    ', 624, 0, 624, 4),
    woosh.Token(woosh.NAME, 'import', 624, 4, 624, 10),
    woosh.Token(woosh.NAME, 'argparse', 624, 11, 624, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 624, 19, 625, 0),
    woosh.Token(woosh.COMMENT, '# Helper error handling routines', 626, 4, 626, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 626, 36, 627, 0),
    woosh.Token(woosh.NAME, 'def', 627, 4, 627, 7),
    woosh.Token(woosh.NAME, 'perror', 627, 8, 627, 14),
    woosh.Token(woosh.OP, '(', 627, 14, 627, 15),
    woosh.Token(woosh.NAME, 'message', 627, 15, 627, 22),
    woosh.Token(woosh.OP, ')', 627, 22, 627, 23),
    woosh.Token(woosh.OP, ':', 627, 23, 627, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 627, 24, 628, 0),
    woosh.Token(woosh.INDENT, '        ', 628, 0, 628, 8),
    woosh.Token(woosh.NAME, 'sys', 628, 8, 628, 11),
    woosh.Token(woosh.OP, '.', 628, 11, 628, 12),
    woosh.Token(woosh.NAME, 'stderr', 628, 12, 628, 18),
    woosh.Token(woosh.OP, '.', 628, 18, 628, 19),
    woosh.Token(woosh.NAME, 'write', 628, 19, 628, 24),
    woosh.Token(woosh.OP, '(', 628, 24, 628, 25),
    woosh.Token(woosh.NAME, 'message', 628, 25, 628, 32),
    woosh.Token(woosh.OP, ')', 628, 32, 628, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 628, 33, 629, 0),
    woosh.Token(woosh.NAME, 'sys', 629, 8, 629, 11),
    woosh.Token(woosh.OP, '.', 629, 11, 629, 12),
    woosh.Token(woosh.NAME, 'stderr', 629, 12, 629, 18),
    woosh.Token(woosh.OP, '.', 629, 18, 629, 19),
    woosh.Token(woosh.NAME, 'write', 629, 19, 629, 24),
    woosh.Token(woosh.OP, '(', 629, 24, 629, 25),
    woosh.Token(woosh.STRING, "'\\n'", 629, 25, 629, 29),
    woosh.Token(woosh.OP, ')', 629, 29, 629, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 629, 30, 630, 0),
    woosh.Token(woosh.DEDENT, '    ', 631, 0, 631, 4),
    woosh.Token(woosh.NAME, 'def', 631, 4, 631, 7),
    woosh.Token(woosh.NAME, 'error', 631, 8, 631, 13),
    woosh.Token(woosh.OP, '(', 631, 13, 631, 14),
    woosh.Token(woosh.NAME, 'message', 631, 14, 631, 21),
    woosh.Token(woosh.OP, ',', 631, 21, 631, 22),
    woosh.Token(woosh.NAME, 'filename', 631, 23, 631, 31),
    woosh.Token(woosh.OP, '=', 631, 31, 631, 32),
    woosh.Token(woosh.NAME, 'None', 631, 32, 631, 36),
    woosh.Token(woosh.OP, ',', 631, 36, 631, 37),
    woosh.Token(woosh.NAME, 'location', 631, 38, 631, 46),
    woosh.Token(woosh.OP, '=', 631, 46, 631, 47),
    woosh.Token(woosh.NAME, 'None', 631, 47, 631, 51),
    woosh.Token(woosh.OP, ')', 631, 51, 631, 52),
    woosh.Token(woosh.OP, ':', 631, 52, 631, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 631, 53, 632, 0),
    woosh.Token(woosh.INDENT, '        ', 632, 0, 632, 8),
    woosh.Token(woosh.NAME, 'if', 632, 8, 632, 10),
    woosh.Token(woosh.NAME, 'location', 632, 11, 632, 19),
    woosh.Token(woosh.OP, ':', 632, 19, 632, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 632, 20, 633, 0),
    woosh.Token(woosh.INDENT, '            ', 633, 0, 633, 12),
    woosh.Token(woosh.NAME, 'args', 633, 12, 633, 16),
    woosh.Token(woosh.OP, '=', 633, 17, 633, 18),
    woosh.Token(woosh.OP, '(', 633, 19, 633, 20),
    woosh.Token(woosh.NAME, 'filename', 633, 20, 633, 28),
    woosh.Token(woosh.OP, ',', 633, 28, 633, 29),
    woosh.Token(woosh.OP, ')', 633, 29, 633, 30),
    woosh.Token(woosh.OP, '+', 633, 31, 633, 32),
    woosh.Token(woosh.NAME, 'location', 633, 33, 633, 41),
    woosh.Token(woosh.OP, '+', 633, 42, 633, 43),
    woosh.Token(woosh.OP, '(', 633, 44, 633, 45),
    woosh.Token(woosh.NAME, 'message', 633, 45, 633, 52),
    woosh.Token(woosh.OP, ',', 633, 52, 633, 53),
    woosh.Token(woosh.OP, ')', 633, 53, 633, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 633, 54, 634, 0),
    woosh.Token(woosh.NAME, 'perror', 634, 12, 634, 18),
    woosh.Token(woosh.OP, '(', 634, 18, 634, 19),
    woosh.Token(woosh.STRING, '"%s:%d:%d: error: %s"', 634, 19, 634, 40),
    woosh.Token(woosh.OP, '%', 634, 41, 634, 42),
    woosh.Token(woosh.NAME, 'args', 634, 43, 634, 47),
    woosh.Token(woosh.OP, ')', 634, 47, 634, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 634, 48, 635, 0),
    woosh.Token(woosh.DEDENT, '        ', 635, 0, 635, 8),
    woosh.Token(woosh.NAME, 'elif', 635, 8, 635, 12),
    woosh.Token(woosh.NAME, 'filename', 635, 13, 635, 21),
    woosh.Token(woosh.OP, ':', 635, 21, 635, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 635, 22, 636, 0),
    woosh.Token(woosh.INDENT, '            ', 636, 0, 636, 12),
    woosh.Token(woosh.NAME, 'perror', 636, 12, 636, 18),
    woosh.Token(woosh.OP, '(', 636, 18, 636, 19),
    woosh.Token(woosh.STRING, '"%s: error: %s"', 636, 19, 636, 34),
    woosh.Token(woosh.OP, '%', 636, 35, 636, 36),
    woosh.Token(woosh.OP, '(', 636, 37, 636, 38),
    woosh.Token(woosh.NAME, 'filename', 636, 38, 636, 46),
    woosh.Token(woosh.OP, ',', 636, 46, 636, 47),
    woosh.Token(woosh.NAME, 'message', 636, 48, 636, 55),
    woosh.Token(woosh.OP, ')', 636, 55, 636, 56),
    woosh.Token(woosh.OP, ')', 636, 56, 636, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 636, 57, 637, 0),
    woosh.Token(woosh.DEDENT, '        ', 637, 0, 637, 8),
    woosh.Token(woosh.NAME, 'else', 637, 8, 637, 12),
    woosh.Token(woosh.OP, ':', 637, 12, 637, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 637, 13, 638, 0),
    woosh.Token(woosh.INDENT, '            ', 638, 0, 638, 12),
    woosh.Token(woosh.NAME, 'perror', 638, 12, 638, 18),
    woosh.Token(woosh.OP, '(', 638, 18, 638, 19),
    woosh.Token(woosh.STRING, '"error: %s"', 638, 19, 638, 30),
    woosh.Token(woosh.OP, '%', 638, 31, 638, 32),
    woosh.Token(woosh.NAME, 'message', 638, 33, 638, 40),
    woosh.Token(woosh.OP, ')', 638, 40, 638, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 638, 41, 639, 0),
    woosh.Token(woosh.DEDENT, '        ', 639, 0, 639, 8),
    woosh.Token(woosh.NAME, 'sys', 639, 8, 639, 11),
    woosh.Token(woosh.OP, '.', 639, 11, 639, 12),
    woosh.Token(woosh.NAME, 'exit', 639, 12, 639, 16),
    woosh.Token(woosh.OP, '(', 639, 16, 639, 17),
    woosh.Token(woosh.NUMBER, '1', 639, 17, 639, 18),
    woosh.Token(woosh.OP, ')', 639, 18, 639, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 639, 19, 640, 0),
    woosh.Token(woosh.COMMENT, '# Parse the arguments and options', 641, 4, 641, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 641, 37, 642, 0),
    woosh.Token(woosh.DEDENT, '    ', 642, 0, 642, 4),
    woosh.Token(woosh.NAME, 'parser', 642, 4, 642, 10),
    woosh.Token(woosh.OP, '=', 642, 11, 642, 12),
    woosh.Token(woosh.NAME, 'argparse', 642, 13, 642, 21),
    woosh.Token(woosh.OP, '.', 642, 21, 642, 22),
    woosh.Token(woosh.NAME, 'ArgumentParser', 642, 22, 642, 36),
    woosh.Token(woosh.OP, '(', 642, 36, 642, 37),
    woosh.Token(woosh.NAME, 'prog', 642, 37, 642, 41),
    woosh.Token(woosh.OP, '=', 642, 41, 642, 42),
    woosh.Token(woosh.STRING, "'python -m tokenize'", 642, 42, 642, 62),
    woosh.Token(woosh.OP, ')', 642, 62, 642, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 642, 63, 643, 0),
    woosh.Token(woosh.NAME, 'parser', 643, 4, 643, 10),
    woosh.Token(woosh.OP, '.', 643, 10, 643, 11),
    woosh.Token(woosh.NAME, 'add_argument', 643, 11, 643, 23),
    woosh.Token(woosh.OP, '(', 643, 23, 643, 24),
    woosh.Token(woosh.NAME, 'dest', 643, 24, 643, 28),
    woosh.Token(woosh.OP, '=', 643, 28, 643, 29),
    woosh.Token(woosh.STRING, "'filename'", 643, 29, 643, 39),
    woosh.Token(woosh.OP, ',', 643, 39, 643, 40),
    woosh.Token(woosh.NAME, 'nargs', 643, 41, 643, 46),
    woosh.Token(woosh.OP, '=', 643, 46, 643, 47),
    woosh.Token(woosh.STRING, "'?'", 643, 47, 643, 50),
    woosh.Token(woosh.OP, ',', 643, 50, 643, 51),
    woosh.Token(woosh.NAME, 'metavar', 644, 24, 644, 31),
    woosh.Token(woosh.OP, '=', 644, 31, 644, 32),
    woosh.Token(woosh.STRING, "'filename.py'", 644, 32, 644, 45),
    woosh.Token(woosh.OP, ',', 644, 45, 644, 46),
    woosh.Token(woosh.NAME, 'help', 645, 24, 645, 28),
    woosh.Token(woosh.OP, '=', 645, 28, 645, 29),
    woosh.Token(woosh.STRING, "'the file to tokenize; defaults to stdin'", 645, 29, 645, 70),
    woosh.Token(woosh.OP, ')', 645, 70, 645, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 645, 71, 646, 0),
    woosh.Token(woosh.NAME, 'parser', 646, 4, 646, 10),
    woosh.Token(woosh.OP, '.', 646, 10, 646, 11),
    woosh.Token(woosh.NAME, 'add_argument', 646, 11, 646, 23),
    woosh.Token(woosh.OP, '(', 646, 23, 646, 24),
    woosh.Token(woosh.STRING, "'-e'", 646, 24, 646, 28),
    woosh.Token(woosh.OP, ',', 646, 28, 646, 29),
    woosh.Token(woosh.STRING, "'--exact'", 646, 30, 646, 39),
    woosh.Token(woosh.OP, ',', 646, 39, 646, 40),
    woosh.Token(woosh.NAME, 'dest', 646, 41, 646, 45),
    woosh.Token(woosh.OP, '=', 646, 45, 646, 46),
    woosh.Token(woosh.STRING, "'exact'", 646, 46, 646, 53),
    woosh.Token(woosh.OP, ',', 646, 53, 646, 54),
    woosh.Token(woosh.NAME, 'action', 646, 55, 646, 61),
    woosh.Token(woosh.OP, '=', 646, 61, 646, 62),
    woosh.Token(woosh.STRING, "'store_true'", 646, 62, 646, 74),
    woosh.Token(woosh.OP, ',', 646, 74, 646, 75),
    woosh.Token(woosh.NAME, 'help', 647, 24, 647, 28),
    woosh.Token(woosh.OP, '=', 647, 28, 647, 29),
    woosh.Token(woosh.STRING, "'display token names using the exact type'", 647, 29, 647, 71),
    woosh.Token(woosh.OP, ')', 647, 71, 647, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 647, 72, 648, 0),
    woosh.Token(woosh.NAME, 'args', 648, 4, 648, 8),
    woosh.Token(woosh.OP, '=', 648, 9, 648, 10),
    woosh.Token(woosh.NAME, 'parser', 648, 11, 648, 17),
    woosh.Token(woosh.OP, '.', 648, 17, 648, 18),
    woosh.Token(woosh.NAME, 'parse_args', 648, 18, 648, 28),
    woosh.Token(woosh.OP, '(', 648, 28, 648, 29),
    woosh.Token(woosh.OP, ')', 648, 29, 648, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 648, 30, 649, 0),
    woosh.Token(woosh.NAME, 'try', 650, 4, 650, 7),
    woosh.Token(woosh.OP, ':', 650, 7, 650, 8),
    woosh.Token(woosh.NEWLINE, '\r\n', 650, 8, 651, 0),
    woosh.Token(woosh.COMMENT, '# Tokenize the input', 651, 8, 651, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 651, 28, 652, 0),
    woosh.Token(woosh.INDENT, '        ', 652, 0, 652, 8),
    woosh.Token(woosh.NAME, 'if', 652, 8, 652, 10),
    woosh.Token(woosh.NAME, 'args', 652, 11, 652, 15),
    woosh.Token(woosh.OP, '.', 652, 15, 652, 16),
    woosh.Token(woosh.NAME, 'filename', 652, 16, 652, 24),
    woosh.Token(woosh.OP, ':', 652, 24, 652, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 652, 25, 653, 0),
    woosh.Token(woosh.INDENT, '            ', 653, 0, 653, 12),
    woosh.Token(woosh.NAME, 'filename', 653, 12, 653, 20),
    woosh.Token(woosh.OP, '=', 653, 21, 653, 22),
    woosh.Token(woosh.NAME, 'args', 653, 23, 653, 27),
    woosh.Token(woosh.OP, '.', 653, 27, 653, 28),
    woosh.Token(woosh.NAME, 'filename', 653, 28, 653, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 653, 36, 654, 0),
    woosh.Token(woosh.NAME, 'with', 654, 12, 654, 16),
    woosh.Token(woosh.NAME, '_builtin_open', 654, 17, 654, 30),
    woosh.Token(woosh.OP, '(', 654, 30, 654, 31),
    woosh.Token(woosh.NAME, 'filename', 654, 31, 654, 39),
    woosh.Token(woosh.OP, ',', 654, 39, 654, 40),
    woosh.Token(woosh.STRING, "'rb'", 654, 41, 654, 45),
    woosh.Token(woosh.OP, ')', 654, 45, 654, 46),
    woosh.Token(woosh.NAME, 'as', 654, 47, 654, 49),
    woosh.Token(woosh.NAME, 'f', 654, 50, 654, 51),
    woosh.Token(woosh.OP, ':', 654, 51, 654, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 654, 52, 655, 0),
    woosh.Token(woosh.INDENT, '                ', 655, 0, 655, 16),
    woosh.Token(woosh.NAME, 'tokens', 655, 16, 655, 22),
    woosh.Token(woosh.OP, '=', 655, 23, 655, 24),
    woosh.Token(woosh.NAME, 'list', 655, 25, 655, 29),
    woosh.Token(woosh.OP, '(', 655, 29, 655, 30),
    woosh.Token(woosh.NAME, 'tokenize', 655, 30, 655, 38),
    woosh.Token(woosh.OP, '(', 655, 38, 655, 39),
    woosh.Token(woosh.NAME, 'f', 655, 39, 655, 40),
    woosh.Token(woosh.OP, '.', 655, 40, 655, 41),
    woosh.Token(woosh.NAME, 'readline', 655, 41, 655, 49),
    woosh.Token(woosh.OP, ')', 655, 49, 655, 50),
    woosh.Token(woosh.OP, ')', 655, 50, 655, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 655, 51, 656, 0),
    woosh.Token(woosh.DEDENT, '        ', 656, 0, 656, 8),
    woosh.Token(woosh.DEDENT, '', 656, 8, 656, 8),
    woosh.Token(woosh.NAME, 'else', 656, 8, 656, 12),
    woosh.Token(woosh.OP, ':', 656, 12, 656, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 656, 13, 657, 0),
    woosh.Token(woosh.INDENT, '            ', 657, 0, 657, 12),
    woosh.Token(woosh.NAME, 'filename', 657, 12, 657, 20),
    woosh.Token(woosh.OP, '=', 657, 21, 657, 22),
    woosh.Token(woosh.STRING, '"<stdin>"', 657, 23, 657, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 657, 32, 658, 0),
    woosh.Token(woosh.NAME, 'tokens', 658, 12, 658, 18),
    woosh.Token(woosh.OP, '=', 658, 19, 658, 20),
    woosh.Token(woosh.NAME, '_tokenize', 658, 21, 658, 30),
    woosh.Token(woosh.OP, '(', 658, 30, 658, 31),
    woosh.Token(woosh.NAME, 'sys', 658, 31, 658, 34),
    woosh.Token(woosh.OP, '.', 658, 34, 658, 35),
    woosh.Token(woosh.NAME, 'stdin', 658, 35, 658, 40),
    woosh.Token(woosh.OP, '.', 658, 40, 658, 41),
    woosh.Token(woosh.NAME, 'readline', 658, 41, 658, 49),
    woosh.Token(woosh.OP, ',', 658, 49, 658, 50),
    woosh.Token(woosh.NAME, 'None', 658, 51, 658, 55),
    woosh.Token(woosh.OP, ')', 658, 55, 658, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 658, 56, 659, 0),
    woosh.Token(woosh.COMMENT, '# Output the tokenization', 660, 8, 660, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 660, 33, 661, 0),
    woosh.Token(woosh.DEDENT, '        ', 661, 0, 661, 8),
    woosh.Token(woosh.NAME, 'for', 661, 8, 661, 11),
    woosh.Token(woosh.NAME, 'token', 661, 12, 661, 17),
    woosh.Token(woosh.NAME, 'in', 661, 18, 661, 20),
    woosh.Token(woosh.NAME, 'tokens', 661, 21, 661, 27),
    woosh.Token(woosh.OP, ':', 661, 27, 661, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 661, 28, 662, 0),
    woosh.Token(woosh.INDENT, '            ', 662, 0, 662, 12),
    woosh.Token(woosh.NAME, 'token_type', 662, 12, 662, 22),
    woosh.Token(woosh.OP, '=', 662, 23, 662, 24),
    woosh.Token(woosh.NAME, 'token', 662, 25, 662, 30),
    woosh.Token(woosh.OP, '.', 662, 30, 662, 31),
    woosh.Token(woosh.NAME, 'type', 662, 31, 662, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 662, 35, 663, 0),
    woosh.Token(woosh.NAME, 'if', 663, 12, 663, 14),
    woosh.Token(woosh.NAME, 'args', 663, 15, 663, 19),
    woosh.Token(woosh.OP, '.', 663, 19, 663, 20),
    woosh.Token(woosh.NAME, 'exact', 663, 20, 663, 25),
    woosh.Token(woosh.OP, ':', 663, 25, 663, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 663, 26, 664, 0),
    woosh.Token(woosh.INDENT, '                ', 664, 0, 664, 16),
    woosh.Token(woosh.NAME, 'token_type', 664, 16, 664, 26),
    woosh.Token(woosh.OP, '=', 664, 27, 664, 28),
    woosh.Token(woosh.NAME, 'token', 664, 29, 664, 34),
    woosh.Token(woosh.OP, '.', 664, 34, 664, 35),
    woosh.Token(woosh.NAME, 'exact_type', 664, 35, 664, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 664, 45, 665, 0),
    woosh.Token(woosh.DEDENT, '            ', 665, 0, 665, 12),
    woosh.Token(woosh.NAME, 'token_range', 665, 12, 665, 23),
    woosh.Token(woosh.OP, '=', 665, 24, 665, 25),
    woosh.Token(woosh.STRING, '"%d,%d-%d,%d:"', 665, 26, 665, 40),
    woosh.Token(woosh.OP, '%', 665, 41, 665, 42),
    woosh.Token(woosh.OP, '(', 665, 43, 665, 44),
    woosh.Token(woosh.NAME, 'token', 665, 44, 665, 49),
    woosh.Token(woosh.OP, '.', 665, 49, 665, 50),
    woosh.Token(woosh.NAME, 'start', 665, 50, 665, 55),
    woosh.Token(woosh.OP, '+', 665, 56, 665, 57),
    woosh.Token(woosh.NAME, 'token', 665, 58, 665, 63),
    woosh.Token(woosh.OP, '.', 665, 63, 665, 64),
    woosh.Token(woosh.NAME, 'end', 665, 64, 665, 67),
    woosh.Token(woosh.OP, ')', 665, 67, 665, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 665, 68, 666, 0),
    woosh.Token(woosh.NAME, 'print', 666, 12, 666, 17),
    woosh.Token(woosh.OP, '(', 666, 17, 666, 18),
    woosh.Token(woosh.STRING, '"%-20s%-15s%-15r"', 666, 18, 666, 35),
    woosh.Token(woosh.OP, '%', 666, 36, 666, 37),
    woosh.Token(woosh.OP, '(', 667, 18, 667, 19),
    woosh.Token(woosh.NAME, 'token_range', 667, 19, 667, 30),
    woosh.Token(woosh.OP, ',', 667, 30, 667, 31),
    woosh.Token(woosh.NAME, 'tok_name', 667, 32, 667, 40),
    woosh.Token(woosh.OP, '[', 667, 40, 667, 41),
    woosh.Token(woosh.NAME, 'token_type', 667, 41, 667, 51),
    woosh.Token(woosh.OP, ']', 667, 51, 667, 52),
    woosh.Token(woosh.OP, ',', 667, 52, 667, 53),
    woosh.Token(woosh.NAME, 'token', 667, 54, 667, 59),
    woosh.Token(woosh.OP, '.', 667, 59, 667, 60),
    woosh.Token(woosh.NAME, 'string', 667, 60, 667, 66),
    woosh.Token(woosh.OP, ')', 667, 66, 667, 67),
    woosh.Token(woosh.OP, ')', 667, 67, 667, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 667, 68, 668, 0),
    woosh.Token(woosh.DEDENT, '    ', 668, 0, 668, 4),
    woosh.Token(woosh.DEDENT, '', 668, 4, 668, 4),
    woosh.Token(woosh.NAME, 'except', 668, 4, 668, 10),
    woosh.Token(woosh.NAME, 'IndentationError', 668, 11, 668, 27),
    woosh.Token(woosh.NAME, 'as', 668, 28, 668, 30),
    woosh.Token(woosh.NAME, 'err', 668, 31, 668, 34),
    woosh.Token(woosh.OP, ':', 668, 34, 668, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 668, 35, 669, 0),
    woosh.Token(woosh.INDENT, '        ', 669, 0, 669, 8),
    woosh.Token(woosh.NAME, 'line', 669, 8, 669, 12),
    woosh.Token(woosh.OP, ',', 669, 12, 669, 13),
    woosh.Token(woosh.NAME, 'column', 669, 14, 669, 20),
    woosh.Token(woosh.OP, '=', 669, 21, 669, 22),
    woosh.Token(woosh.NAME, 'err', 669, 23, 669, 26),
    woosh.Token(woosh.OP, '.', 669, 26, 669, 27),
    woosh.Token(woosh.NAME, 'args', 669, 27, 669, 31),
    woosh.Token(woosh.OP, '[', 669, 31, 669, 32),
    woosh.Token(woosh.NUMBER, '1', 669, 32, 669, 33),
    woosh.Token(woosh.OP, ']', 669, 33, 669, 34),
    woosh.Token(woosh.OP, '[', 669, 34, 669, 35),
    woosh.Token(woosh.NUMBER, '1', 669, 35, 669, 36),
    woosh.Token(woosh.OP, ':', 669, 36, 669, 37),
    woosh.Token(woosh.NUMBER, '3', 669, 37, 669, 38),
    woosh.Token(woosh.OP, ']', 669, 38, 669, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 669, 39, 670, 0),
    woosh.Token(woosh.NAME, 'error', 670, 8, 670, 13),
    woosh.Token(woosh.OP, '(', 670, 13, 670, 14),
    woosh.Token(woosh.NAME, 'err', 670, 14, 670, 17),
    woosh.Token(woosh.OP, '.', 670, 17, 670, 18),
    woosh.Token(woosh.NAME, 'args', 670, 18, 670, 22),
    woosh.Token(woosh.OP, '[', 670, 22, 670, 23),
    woosh.Token(woosh.NUMBER, '0', 670, 23, 670, 24),
    woosh.Token(woosh.OP, ']', 670, 24, 670, 25),
    woosh.Token(woosh.OP, ',', 670, 25, 670, 26),
    woosh.Token(woosh.NAME, 'filename', 670, 27, 670, 35),
    woosh.Token(woosh.OP, ',', 670, 35, 670, 36),
    woosh.Token(woosh.OP, '(', 670, 37, 670, 38),
    woosh.Token(woosh.NAME, 'line', 670, 38, 670, 42),
    woosh.Token(woosh.OP, ',', 670, 42, 670, 43),
    woosh.Token(woosh.NAME, 'column', 670, 44, 670, 50),
    woosh.Token(woosh.OP, ')', 670, 50, 670, 51),
    woosh.Token(woosh.OP, ')', 670, 51, 670, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 670, 52, 671, 0),
    woosh.Token(woosh.DEDENT, '    ', 671, 0, 671, 4),
    woosh.Token(woosh.NAME, 'except', 671, 4, 671, 10),
    woosh.Token(woosh.NAME, 'TokenError', 671, 11, 671, 21),
    woosh.Token(woosh.NAME, 'as', 671, 22, 671, 24),
    woosh.Token(woosh.NAME, 'err', 671, 25, 671, 28),
    woosh.Token(woosh.OP, ':', 671, 28, 671, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 671, 29, 672, 0),
    woosh.Token(woosh.INDENT, '        ', 672, 0, 672, 8),
    woosh.Token(woosh.NAME, 'line', 672, 8, 672, 12),
    woosh.Token(woosh.OP, ',', 672, 12, 672, 13),
    woosh.Token(woosh.NAME, 'column', 672, 14, 672, 20),
    woosh.Token(woosh.OP, '=', 672, 21, 672, 22),
    woosh.Token(woosh.NAME, 'err', 672, 23, 672, 26),
    woosh.Token(woosh.OP, '.', 672, 26, 672, 27),
    woosh.Token(woosh.NAME, 'args', 672, 27, 672, 31),
    woosh.Token(woosh.OP, '[', 672, 31, 672, 32),
    woosh.Token(woosh.NUMBER, '1', 672, 32, 672, 33),
    woosh.Token(woosh.OP, ']', 672, 33, 672, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 672, 34, 673, 0),
    woosh.Token(woosh.NAME, 'error', 673, 8, 673, 13),
    woosh.Token(woosh.OP, '(', 673, 13, 673, 14),
    woosh.Token(woosh.NAME, 'err', 673, 14, 673, 17),
    woosh.Token(woosh.OP, '.', 673, 17, 673, 18),
    woosh.Token(woosh.NAME, 'args', 673, 18, 673, 22),
    woosh.Token(woosh.OP, '[', 673, 22, 673, 23),
    woosh.Token(woosh.NUMBER, '0', 673, 23, 673, 24),
    woosh.Token(woosh.OP, ']', 673, 24, 673, 25),
    woosh.Token(woosh.OP, ',', 673, 25, 673, 26),
    woosh.Token(woosh.NAME, 'filename', 673, 27, 673, 35),
    woosh.Token(woosh.OP, ',', 673, 35, 673, 36),
    woosh.Token(woosh.OP, '(', 673, 37, 673, 38),
    woosh.Token(woosh.NAME, 'line', 673, 38, 673, 42),
    woosh.Token(woosh.OP, ',', 673, 42, 673, 43),
    woosh.Token(woosh.NAME, 'column', 673, 44, 673, 50),
    woosh.Token(woosh.OP, ')', 673, 50, 673, 51),
    woosh.Token(woosh.OP, ')', 673, 51, 673, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 673, 52, 674, 0),
    woosh.Token(woosh.DEDENT, '    ', 674, 0, 674, 4),
    woosh.Token(woosh.NAME, 'except', 674, 4, 674, 10),
    woosh.Token(woosh.NAME, 'SyntaxError', 674, 11, 674, 22),
    woosh.Token(woosh.NAME, 'as', 674, 23, 674, 25),
    woosh.Token(woosh.NAME, 'err', 674, 26, 674, 29),
    woosh.Token(woosh.OP, ':', 674, 29, 674, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 674, 30, 675, 0),
    woosh.Token(woosh.INDENT, '        ', 675, 0, 675, 8),
    woosh.Token(woosh.NAME, 'error', 675, 8, 675, 13),
    woosh.Token(woosh.OP, '(', 675, 13, 675, 14),
    woosh.Token(woosh.NAME, 'err', 675, 14, 675, 17),
    woosh.Token(woosh.OP, ',', 675, 17, 675, 18),
    woosh.Token(woosh.NAME, 'filename', 675, 19, 675, 27),
    woosh.Token(woosh.OP, ')', 675, 27, 675, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 675, 28, 676, 0),
    woosh.Token(woosh.DEDENT, '    ', 676, 0, 676, 4),
    woosh.Token(woosh.NAME, 'except', 676, 4, 676, 10),
    woosh.Token(woosh.NAME, 'OSError', 676, 11, 676, 18),
    woosh.Token(woosh.NAME, 'as', 676, 19, 676, 21),
    woosh.Token(woosh.NAME, 'err', 676, 22, 676, 25),
    woosh.Token(woosh.OP, ':', 676, 25, 676, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 676, 26, 677, 0),
    woosh.Token(woosh.INDENT, '        ', 677, 0, 677, 8),
    woosh.Token(woosh.NAME, 'error', 677, 8, 677, 13),
    woosh.Token(woosh.OP, '(', 677, 13, 677, 14),
    woosh.Token(woosh.NAME, 'err', 677, 14, 677, 17),
    woosh.Token(woosh.OP, ')', 677, 17, 677, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 677, 18, 678, 0),
    woosh.Token(woosh.DEDENT, '    ', 678, 0, 678, 4),
    woosh.Token(woosh.NAME, 'except', 678, 4, 678, 10),
    woosh.Token(woosh.NAME, 'KeyboardInterrupt', 678, 11, 678, 28),
    woosh.Token(woosh.OP, ':', 678, 28, 678, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 678, 29, 679, 0),
    woosh.Token(woosh.INDENT, '        ', 679, 0, 679, 8),
    woosh.Token(woosh.NAME, 'print', 679, 8, 679, 13),
    woosh.Token(woosh.OP, '(', 679, 13, 679, 14),
    woosh.Token(woosh.STRING, '"interrupted\\n"', 679, 14, 679, 29),
    woosh.Token(woosh.OP, ')', 679, 29, 679, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 679, 30, 680, 0),
    woosh.Token(woosh.DEDENT, '    ', 680, 0, 680, 4),
    woosh.Token(woosh.NAME, 'except', 680, 4, 680, 10),
    woosh.Token(woosh.NAME, 'Exception', 680, 11, 680, 20),
    woosh.Token(woosh.NAME, 'as', 680, 21, 680, 23),
    woosh.Token(woosh.NAME, 'err', 680, 24, 680, 27),
    woosh.Token(woosh.OP, ':', 680, 27, 680, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 680, 28, 681, 0),
    woosh.Token(woosh.INDENT, '        ', 681, 0, 681, 8),
    woosh.Token(woosh.NAME, 'perror', 681, 8, 681, 14),
    woosh.Token(woosh.OP, '(', 681, 14, 681, 15),
    woosh.Token(woosh.STRING, '"unexpected error: %s"', 681, 15, 681, 37),
    woosh.Token(woosh.OP, '%', 681, 38, 681, 39),
    woosh.Token(woosh.NAME, 'err', 681, 40, 681, 43),
    woosh.Token(woosh.OP, ')', 681, 43, 681, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 681, 44, 682, 0),
    woosh.Token(woosh.NAME, 'raise', 682, 8, 682, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 682, 13, 683, 0),
    woosh.Token(woosh.DEDENT, '', 684, 0, 684, 0),
    woosh.Token(woosh.DEDENT, '', 684, 0, 684, 0),
    woosh.Token(woosh.NAME, 'if', 684, 0, 684, 2),
    woosh.Token(woosh.NAME, '__name__', 684, 3, 684, 11),
    woosh.Token(woosh.OP, '==', 684, 12, 684, 14),
    woosh.Token(woosh.STRING, '"__main__"', 684, 15, 684, 25),
    woosh.Token(woosh.OP, ':', 684, 25, 684, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 684, 26, 685, 0),
    woosh.Token(woosh.INDENT, '    ', 685, 0, 685, 4),
    woosh.Token(woosh.NAME, 'main', 685, 4, 685, 8),
    woosh.Token(woosh.OP, '(', 685, 8, 685, 9),
    woosh.Token(woosh.OP, ')', 685, 9, 685, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 685, 10, 686, 0),
    woosh.Token(woosh.DEDENT, '', 686, 0, 686, 0),
    woosh.Token(woosh.EOF, '', 686, 0, 686, 0),
]
