
# python
import pathlib
# woosh
import woosh

SAMPLE_DIR = pathlib.Path(__file__).parent.absolute() / '../../sample/'
def test():
    with open(SAMPLE_DIR / 'random.py', 'rb') as f:
        tokens = list(woosh.tokenize(f))
    assert tokens == EXPECTED

EXPECTED = [
    woosh.Token(woosh.ENCODING, 'utf-8', 1, 0, 1, 0),
    woosh.Token(woosh.STRING, '"""Random variable generators.\r\n\r\n    bytes\r\n    -----\r\n           uniform bytes (values between 0 and 255)\r\n\r\n    integers\r\n    --------\r\n           uniform within range\r\n\r\n    sequences\r\n    ---------\r\n           pick random element\r\n           pick random sample\r\n           pick weighted random sample\r\n           generate random permutation\r\n\r\n    distributions on the real line:\r\n    ------------------------------\r\n           uniform\r\n           triangular\r\n           normal (Gaussian)\r\n           lognormal\r\n           negative exponential\r\n           gamma\r\n           beta\r\n           pareto\r\n           Weibull\r\n\r\n    distributions on the circle (angles 0 to 2pi)\r\n    ---------------------------------------------\r\n           circular uniform\r\n           von Mises\r\n\r\nGeneral notes on the underlying Mersenne Twister core generator:\r\n\r\n* The period is 2**19937-1.\r\n* It is one of the most extensively tested generators in existence.\r\n* The random() method is implemented in C, executes in a single Python step,\r\n  and is, therefore, threadsafe.\r\n\r\n"""', 1, 0, 42, 3),
    woosh.Token(woosh.NEWLINE, '\r\n', 42, 3, 43, 0),
    woosh.Token(woosh.COMMENT, '# Translated by Guido van Rossum from C source provided by', 44, 0, 44, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 44, 58, 45, 0),
    woosh.Token(woosh.COMMENT, '# Adrian Baddeley.  Adapted by Raymond Hettinger for use with', 45, 0, 45, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 45, 61, 46, 0),
    woosh.Token(woosh.COMMENT, '# the Mersenne Twister  and os.urandom() core generators.', 46, 0, 46, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 46, 57, 47, 0),
    woosh.Token(woosh.NAME, 'from', 48, 0, 48, 4),
    woosh.Token(woosh.NAME, 'warnings', 48, 5, 48, 13),
    woosh.Token(woosh.NAME, 'import', 48, 14, 48, 20),
    woosh.Token(woosh.NAME, 'warn', 48, 21, 48, 25),
    woosh.Token(woosh.NAME, 'as', 48, 26, 48, 28),
    woosh.Token(woosh.NAME, '_warn', 48, 29, 48, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 48, 34, 49, 0),
    woosh.Token(woosh.NAME, 'from', 49, 0, 49, 4),
    woosh.Token(woosh.NAME, 'math', 49, 5, 49, 9),
    woosh.Token(woosh.NAME, 'import', 49, 10, 49, 16),
    woosh.Token(woosh.NAME, 'log', 49, 17, 49, 20),
    woosh.Token(woosh.NAME, 'as', 49, 21, 49, 23),
    woosh.Token(woosh.NAME, '_log', 49, 24, 49, 28),
    woosh.Token(woosh.OP, ',', 49, 28, 49, 29),
    woosh.Token(woosh.NAME, 'exp', 49, 30, 49, 33),
    woosh.Token(woosh.NAME, 'as', 49, 34, 49, 36),
    woosh.Token(woosh.NAME, '_exp', 49, 37, 49, 41),
    woosh.Token(woosh.OP, ',', 49, 41, 49, 42),
    woosh.Token(woosh.NAME, 'pi', 49, 43, 49, 45),
    woosh.Token(woosh.NAME, 'as', 49, 46, 49, 48),
    woosh.Token(woosh.NAME, '_pi', 49, 49, 49, 52),
    woosh.Token(woosh.OP, ',', 49, 52, 49, 53),
    woosh.Token(woosh.NAME, 'e', 49, 54, 49, 55),
    woosh.Token(woosh.NAME, 'as', 49, 56, 49, 58),
    woosh.Token(woosh.NAME, '_e', 49, 59, 49, 61),
    woosh.Token(woosh.OP, ',', 49, 61, 49, 62),
    woosh.Token(woosh.NAME, 'ceil', 49, 63, 49, 67),
    woosh.Token(woosh.NAME, 'as', 49, 68, 49, 70),
    woosh.Token(woosh.NAME, '_ceil', 49, 71, 49, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 49, 76, 50, 0),
    woosh.Token(woosh.NAME, 'from', 50, 0, 50, 4),
    woosh.Token(woosh.NAME, 'math', 50, 5, 50, 9),
    woosh.Token(woosh.NAME, 'import', 50, 10, 50, 16),
    woosh.Token(woosh.NAME, 'sqrt', 50, 17, 50, 21),
    woosh.Token(woosh.NAME, 'as', 50, 22, 50, 24),
    woosh.Token(woosh.NAME, '_sqrt', 50, 25, 50, 30),
    woosh.Token(woosh.OP, ',', 50, 30, 50, 31),
    woosh.Token(woosh.NAME, 'acos', 50, 32, 50, 36),
    woosh.Token(woosh.NAME, 'as', 50, 37, 50, 39),
    woosh.Token(woosh.NAME, '_acos', 50, 40, 50, 45),
    woosh.Token(woosh.OP, ',', 50, 45, 50, 46),
    woosh.Token(woosh.NAME, 'cos', 50, 47, 50, 50),
    woosh.Token(woosh.NAME, 'as', 50, 51, 50, 53),
    woosh.Token(woosh.NAME, '_cos', 50, 54, 50, 58),
    woosh.Token(woosh.OP, ',', 50, 58, 50, 59),
    woosh.Token(woosh.NAME, 'sin', 50, 60, 50, 63),
    woosh.Token(woosh.NAME, 'as', 50, 64, 50, 66),
    woosh.Token(woosh.NAME, '_sin', 50, 67, 50, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 50, 71, 51, 0),
    woosh.Token(woosh.NAME, 'from', 51, 0, 51, 4),
    woosh.Token(woosh.NAME, 'math', 51, 5, 51, 9),
    woosh.Token(woosh.NAME, 'import', 51, 10, 51, 16),
    woosh.Token(woosh.NAME, 'tau', 51, 17, 51, 20),
    woosh.Token(woosh.NAME, 'as', 51, 21, 51, 23),
    woosh.Token(woosh.NAME, 'TWOPI', 51, 24, 51, 29),
    woosh.Token(woosh.OP, ',', 51, 29, 51, 30),
    woosh.Token(woosh.NAME, 'floor', 51, 31, 51, 36),
    woosh.Token(woosh.NAME, 'as', 51, 37, 51, 39),
    woosh.Token(woosh.NAME, '_floor', 51, 40, 51, 46),
    woosh.Token(woosh.OP, ',', 51, 46, 51, 47),
    woosh.Token(woosh.NAME, 'isfinite', 51, 48, 51, 56),
    woosh.Token(woosh.NAME, 'as', 51, 57, 51, 59),
    woosh.Token(woosh.NAME, '_isfinite', 51, 60, 51, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 51, 69, 52, 0),
    woosh.Token(woosh.NAME, 'from', 52, 0, 52, 4),
    woosh.Token(woosh.NAME, 'os', 52, 5, 52, 7),
    woosh.Token(woosh.NAME, 'import', 52, 8, 52, 14),
    woosh.Token(woosh.NAME, 'urandom', 52, 15, 52, 22),
    woosh.Token(woosh.NAME, 'as', 52, 23, 52, 25),
    woosh.Token(woosh.NAME, '_urandom', 52, 26, 52, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 52, 34, 53, 0),
    woosh.Token(woosh.NAME, 'from', 53, 0, 53, 4),
    woosh.Token(woosh.NAME, '_collections_abc', 53, 5, 53, 21),
    woosh.Token(woosh.NAME, 'import', 53, 22, 53, 28),
    woosh.Token(woosh.NAME, 'Set', 53, 29, 53, 32),
    woosh.Token(woosh.NAME, 'as', 53, 33, 53, 35),
    woosh.Token(woosh.NAME, '_Set', 53, 36, 53, 40),
    woosh.Token(woosh.OP, ',', 53, 40, 53, 41),
    woosh.Token(woosh.NAME, 'Sequence', 53, 42, 53, 50),
    woosh.Token(woosh.NAME, 'as', 53, 51, 53, 53),
    woosh.Token(woosh.NAME, '_Sequence', 53, 54, 53, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 53, 63, 54, 0),
    woosh.Token(woosh.NAME, 'from', 54, 0, 54, 4),
    woosh.Token(woosh.NAME, 'itertools', 54, 5, 54, 14),
    woosh.Token(woosh.NAME, 'import', 54, 15, 54, 21),
    woosh.Token(woosh.NAME, 'accumulate', 54, 22, 54, 32),
    woosh.Token(woosh.NAME, 'as', 54, 33, 54, 35),
    woosh.Token(woosh.NAME, '_accumulate', 54, 36, 54, 47),
    woosh.Token(woosh.OP, ',', 54, 47, 54, 48),
    woosh.Token(woosh.NAME, 'repeat', 54, 49, 54, 55),
    woosh.Token(woosh.NAME, 'as', 54, 56, 54, 58),
    woosh.Token(woosh.NAME, '_repeat', 54, 59, 54, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 54, 66, 55, 0),
    woosh.Token(woosh.NAME, 'from', 55, 0, 55, 4),
    woosh.Token(woosh.NAME, 'bisect', 55, 5, 55, 11),
    woosh.Token(woosh.NAME, 'import', 55, 12, 55, 18),
    woosh.Token(woosh.NAME, 'bisect', 55, 19, 55, 25),
    woosh.Token(woosh.NAME, 'as', 55, 26, 55, 28),
    woosh.Token(woosh.NAME, '_bisect', 55, 29, 55, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 55, 36, 56, 0),
    woosh.Token(woosh.NAME, 'import', 56, 0, 56, 6),
    woosh.Token(woosh.NAME, 'os', 56, 7, 56, 9),
    woosh.Token(woosh.NAME, 'as', 56, 10, 56, 12),
    woosh.Token(woosh.NAME, '_os', 56, 13, 56, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 56, 16, 57, 0),
    woosh.Token(woosh.NAME, 'import', 57, 0, 57, 6),
    woosh.Token(woosh.NAME, '_random', 57, 7, 57, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 57, 14, 58, 0),
    woosh.Token(woosh.NAME, 'try', 59, 0, 59, 3),
    woosh.Token(woosh.OP, ':', 59, 3, 59, 4),
    woosh.Token(woosh.NEWLINE, '\r\n', 59, 4, 60, 0),
    woosh.Token(woosh.COMMENT, '# hashlib is pretty heavy to load, try lean internal module first', 60, 4, 60, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 60, 69, 61, 0),
    woosh.Token(woosh.INDENT, '    ', 61, 0, 61, 4),
    woosh.Token(woosh.NAME, 'from', 61, 4, 61, 8),
    woosh.Token(woosh.NAME, '_sha512', 61, 9, 61, 16),
    woosh.Token(woosh.NAME, 'import', 61, 17, 61, 23),
    woosh.Token(woosh.NAME, 'sha512', 61, 24, 61, 30),
    woosh.Token(woosh.NAME, 'as', 61, 31, 61, 33),
    woosh.Token(woosh.NAME, '_sha512', 61, 34, 61, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 61, 41, 62, 0),
    woosh.Token(woosh.DEDENT, '', 62, 0, 62, 0),
    woosh.Token(woosh.NAME, 'except', 62, 0, 62, 6),
    woosh.Token(woosh.NAME, 'ImportError', 62, 7, 62, 18),
    woosh.Token(woosh.OP, ':', 62, 18, 62, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 62, 19, 63, 0),
    woosh.Token(woosh.COMMENT, '# fallback to official implementation', 63, 4, 63, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 63, 41, 64, 0),
    woosh.Token(woosh.INDENT, '    ', 64, 0, 64, 4),
    woosh.Token(woosh.NAME, 'from', 64, 4, 64, 8),
    woosh.Token(woosh.NAME, 'hashlib', 64, 9, 64, 16),
    woosh.Token(woosh.NAME, 'import', 64, 17, 64, 23),
    woosh.Token(woosh.NAME, 'sha512', 64, 24, 64, 30),
    woosh.Token(woosh.NAME, 'as', 64, 31, 64, 33),
    woosh.Token(woosh.NAME, '_sha512', 64, 34, 64, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 64, 41, 65, 0),
    woosh.Token(woosh.DEDENT, '', 66, 0, 66, 0),
    woosh.Token(woosh.NAME, '__all__', 66, 0, 66, 7),
    woosh.Token(woosh.OP, '=', 66, 8, 66, 9),
    woosh.Token(woosh.OP, '[', 66, 10, 66, 11),
    woosh.Token(woosh.STRING, '"Random"', 67, 4, 67, 12),
    woosh.Token(woosh.OP, ',', 67, 12, 67, 13),
    woosh.Token(woosh.STRING, '"SystemRandom"', 68, 4, 68, 18),
    woosh.Token(woosh.OP, ',', 68, 18, 68, 19),
    woosh.Token(woosh.STRING, '"betavariate"', 69, 4, 69, 17),
    woosh.Token(woosh.OP, ',', 69, 17, 69, 18),
    woosh.Token(woosh.STRING, '"choice"', 70, 4, 70, 12),
    woosh.Token(woosh.OP, ',', 70, 12, 70, 13),
    woosh.Token(woosh.STRING, '"choices"', 71, 4, 71, 13),
    woosh.Token(woosh.OP, ',', 71, 13, 71, 14),
    woosh.Token(woosh.STRING, '"expovariate"', 72, 4, 72, 17),
    woosh.Token(woosh.OP, ',', 72, 17, 72, 18),
    woosh.Token(woosh.STRING, '"gammavariate"', 73, 4, 73, 18),
    woosh.Token(woosh.OP, ',', 73, 18, 73, 19),
    woosh.Token(woosh.STRING, '"gauss"', 74, 4, 74, 11),
    woosh.Token(woosh.OP, ',', 74, 11, 74, 12),
    woosh.Token(woosh.STRING, '"getrandbits"', 75, 4, 75, 17),
    woosh.Token(woosh.OP, ',', 75, 17, 75, 18),
    woosh.Token(woosh.STRING, '"getstate"', 76, 4, 76, 14),
    woosh.Token(woosh.OP, ',', 76, 14, 76, 15),
    woosh.Token(woosh.STRING, '"lognormvariate"', 77, 4, 77, 20),
    woosh.Token(woosh.OP, ',', 77, 20, 77, 21),
    woosh.Token(woosh.STRING, '"normalvariate"', 78, 4, 78, 19),
    woosh.Token(woosh.OP, ',', 78, 19, 78, 20),
    woosh.Token(woosh.STRING, '"paretovariate"', 79, 4, 79, 19),
    woosh.Token(woosh.OP, ',', 79, 19, 79, 20),
    woosh.Token(woosh.STRING, '"randint"', 80, 4, 80, 13),
    woosh.Token(woosh.OP, ',', 80, 13, 80, 14),
    woosh.Token(woosh.STRING, '"random"', 81, 4, 81, 12),
    woosh.Token(woosh.OP, ',', 81, 12, 81, 13),
    woosh.Token(woosh.STRING, '"randrange"', 82, 4, 82, 15),
    woosh.Token(woosh.OP, ',', 82, 15, 82, 16),
    woosh.Token(woosh.STRING, '"sample"', 83, 4, 83, 12),
    woosh.Token(woosh.OP, ',', 83, 12, 83, 13),
    woosh.Token(woosh.STRING, '"seed"', 84, 4, 84, 10),
    woosh.Token(woosh.OP, ',', 84, 10, 84, 11),
    woosh.Token(woosh.STRING, '"setstate"', 85, 4, 85, 14),
    woosh.Token(woosh.OP, ',', 85, 14, 85, 15),
    woosh.Token(woosh.STRING, '"shuffle"', 86, 4, 86, 13),
    woosh.Token(woosh.OP, ',', 86, 13, 86, 14),
    woosh.Token(woosh.STRING, '"triangular"', 87, 4, 87, 16),
    woosh.Token(woosh.OP, ',', 87, 16, 87, 17),
    woosh.Token(woosh.STRING, '"uniform"', 88, 4, 88, 13),
    woosh.Token(woosh.OP, ',', 88, 13, 88, 14),
    woosh.Token(woosh.STRING, '"vonmisesvariate"', 89, 4, 89, 21),
    woosh.Token(woosh.OP, ',', 89, 21, 89, 22),
    woosh.Token(woosh.STRING, '"weibullvariate"', 90, 4, 90, 20),
    woosh.Token(woosh.OP, ',', 90, 20, 90, 21),
    woosh.Token(woosh.OP, ']', 91, 0, 91, 1),
    woosh.Token(woosh.NEWLINE, '\r\n', 91, 1, 92, 0),
    woosh.Token(woosh.NAME, 'NV_MAGICCONST', 93, 0, 93, 13),
    woosh.Token(woosh.OP, '=', 93, 14, 93, 15),
    woosh.Token(woosh.NUMBER, '4', 93, 16, 93, 17),
    woosh.Token(woosh.OP, '*', 93, 18, 93, 19),
    woosh.Token(woosh.NAME, '_exp', 93, 20, 93, 24),
    woosh.Token(woosh.OP, '(', 93, 24, 93, 25),
    woosh.Token(woosh.OP, '-', 93, 25, 93, 26),
    woosh.Token(woosh.NUMBER, '0.5', 93, 26, 93, 29),
    woosh.Token(woosh.OP, ')', 93, 29, 93, 30),
    woosh.Token(woosh.OP, '/', 93, 31, 93, 32),
    woosh.Token(woosh.NAME, '_sqrt', 93, 33, 93, 38),
    woosh.Token(woosh.OP, '(', 93, 38, 93, 39),
    woosh.Token(woosh.NUMBER, '2.0', 93, 39, 93, 42),
    woosh.Token(woosh.OP, ')', 93, 42, 93, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 93, 43, 94, 0),
    woosh.Token(woosh.NAME, 'LOG4', 94, 0, 94, 4),
    woosh.Token(woosh.OP, '=', 94, 5, 94, 6),
    woosh.Token(woosh.NAME, '_log', 94, 7, 94, 11),
    woosh.Token(woosh.OP, '(', 94, 11, 94, 12),
    woosh.Token(woosh.NUMBER, '4.0', 94, 12, 94, 15),
    woosh.Token(woosh.OP, ')', 94, 15, 94, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 94, 16, 95, 0),
    woosh.Token(woosh.NAME, 'SG_MAGICCONST', 95, 0, 95, 13),
    woosh.Token(woosh.OP, '=', 95, 14, 95, 15),
    woosh.Token(woosh.NUMBER, '1.0', 95, 16, 95, 19),
    woosh.Token(woosh.OP, '+', 95, 20, 95, 21),
    woosh.Token(woosh.NAME, '_log', 95, 22, 95, 26),
    woosh.Token(woosh.OP, '(', 95, 26, 95, 27),
    woosh.Token(woosh.NUMBER, '4.5', 95, 27, 95, 30),
    woosh.Token(woosh.OP, ')', 95, 30, 95, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 95, 31, 96, 0),
    woosh.Token(woosh.NAME, 'BPF', 96, 0, 96, 3),
    woosh.Token(woosh.OP, '=', 96, 4, 96, 5),
    woosh.Token(woosh.NUMBER, '53', 96, 6, 96, 8),
    woosh.Token(woosh.COMMENT, '# Number of bits in a float', 96, 16, 96, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 96, 43, 97, 0),
    woosh.Token(woosh.NAME, 'RECIP_BPF', 97, 0, 97, 9),
    woosh.Token(woosh.OP, '=', 97, 10, 97, 11),
    woosh.Token(woosh.NUMBER, '2', 97, 12, 97, 13),
    woosh.Token(woosh.OP, '**', 97, 14, 97, 16),
    woosh.Token(woosh.OP, '-', 97, 17, 97, 18),
    woosh.Token(woosh.NAME, 'BPF', 97, 18, 97, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 97, 21, 98, 0),
    woosh.Token(woosh.NAME, 'class', 100, 0, 100, 5),
    woosh.Token(woosh.NAME, 'Random', 100, 6, 100, 12),
    woosh.Token(woosh.OP, '(', 100, 12, 100, 13),
    woosh.Token(woosh.NAME, '_random', 100, 13, 100, 20),
    woosh.Token(woosh.OP, '.', 100, 20, 100, 21),
    woosh.Token(woosh.NAME, 'Random', 100, 21, 100, 27),
    woosh.Token(woosh.OP, ')', 100, 27, 100, 28),
    woosh.Token(woosh.OP, ':', 100, 28, 100, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 100, 29, 101, 0),
    woosh.Token(woosh.INDENT, '    ', 101, 0, 101, 4),
    woosh.Token(woosh.STRING, '"""Random number generator base class used by bound module functions.\r\n\r\n    Used to instantiate instances of Random to get generators that don\'t\r\n    share state.\r\n\r\n    Class Random can also be subclassed if you want to use a different basic\r\n    generator of your own devising: in that case, override the following\r\n    methods:  random(), seed(), getstate(), and setstate().\r\n    Optionally, implement a getrandbits() method so that randrange()\r\n    can cover arbitrarily large ranges.\r\n\r\n    """', 101, 4, 112, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 112, 7, 113, 0),
    woosh.Token(woosh.NAME, 'VERSION', 114, 4, 114, 11),
    woosh.Token(woosh.OP, '=', 114, 12, 114, 13),
    woosh.Token(woosh.NUMBER, '3', 114, 14, 114, 15),
    woosh.Token(woosh.COMMENT, '# used by getstate/setstate', 114, 20, 114, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 114, 47, 115, 0),
    woosh.Token(woosh.NAME, 'def', 116, 4, 116, 7),
    woosh.Token(woosh.NAME, '__init__', 116, 8, 116, 16),
    woosh.Token(woosh.OP, '(', 116, 16, 116, 17),
    woosh.Token(woosh.NAME, 'self', 116, 17, 116, 21),
    woosh.Token(woosh.OP, ',', 116, 21, 116, 22),
    woosh.Token(woosh.NAME, 'x', 116, 23, 116, 24),
    woosh.Token(woosh.OP, '=', 116, 24, 116, 25),
    woosh.Token(woosh.NAME, 'None', 116, 25, 116, 29),
    woosh.Token(woosh.OP, ')', 116, 29, 116, 30),
    woosh.Token(woosh.OP, ':', 116, 30, 116, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 116, 31, 117, 0),
    woosh.Token(woosh.INDENT, '        ', 117, 0, 117, 8),
    woosh.Token(woosh.STRING, '"""Initialize an instance.\r\n\r\n        Optional argument x controls seeding, as for Random.seed().\r\n        """', 117, 8, 120, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 120, 11, 121, 0),
    woosh.Token(woosh.NAME, 'self', 122, 8, 122, 12),
    woosh.Token(woosh.OP, '.', 122, 12, 122, 13),
    woosh.Token(woosh.NAME, 'seed', 122, 13, 122, 17),
    woosh.Token(woosh.OP, '(', 122, 17, 122, 18),
    woosh.Token(woosh.NAME, 'x', 122, 18, 122, 19),
    woosh.Token(woosh.OP, ')', 122, 19, 122, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 122, 20, 123, 0),
    woosh.Token(woosh.NAME, 'self', 123, 8, 123, 12),
    woosh.Token(woosh.OP, '.', 123, 12, 123, 13),
    woosh.Token(woosh.NAME, 'gauss_next', 123, 13, 123, 23),
    woosh.Token(woosh.OP, '=', 123, 24, 123, 25),
    woosh.Token(woosh.NAME, 'None', 123, 26, 123, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 123, 30, 124, 0),
    woosh.Token(woosh.DEDENT, '    ', 125, 0, 125, 4),
    woosh.Token(woosh.NAME, 'def', 125, 4, 125, 7),
    woosh.Token(woosh.NAME, 'seed', 125, 8, 125, 12),
    woosh.Token(woosh.OP, '(', 125, 12, 125, 13),
    woosh.Token(woosh.NAME, 'self', 125, 13, 125, 17),
    woosh.Token(woosh.OP, ',', 125, 17, 125, 18),
    woosh.Token(woosh.NAME, 'a', 125, 19, 125, 20),
    woosh.Token(woosh.OP, '=', 125, 20, 125, 21),
    woosh.Token(woosh.NAME, 'None', 125, 21, 125, 25),
    woosh.Token(woosh.OP, ',', 125, 25, 125, 26),
    woosh.Token(woosh.NAME, 'version', 125, 27, 125, 34),
    woosh.Token(woosh.OP, '=', 125, 34, 125, 35),
    woosh.Token(woosh.NUMBER, '2', 125, 35, 125, 36),
    woosh.Token(woosh.OP, ')', 125, 36, 125, 37),
    woosh.Token(woosh.OP, ':', 125, 37, 125, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 125, 38, 126, 0),
    woosh.Token(woosh.INDENT, '        ', 126, 0, 126, 8),
    woosh.Token(woosh.STRING, '"""Initialize internal state from a seed.\r\n\r\n        The only supported seed types are None, int, float,\r\n        str, bytes, and bytearray.\r\n\r\n        None or no argument seeds from current time or from an operating\r\n        system specific randomness source if available.\r\n\r\n        If *a* is an int, all bits are used.\r\n\r\n        For version 2 (the default), all of the bits are used if *a* is a str,\r\n        bytes, or bytearray.  For version 1 (provided for reproducing random\r\n        sequences from older versions of Python), the algorithm for str and\r\n        bytes generates a narrower range of seeds.\r\n\r\n        """', 126, 8, 141, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 141, 11, 142, 0),
    woosh.Token(woosh.NAME, 'if', 143, 8, 143, 10),
    woosh.Token(woosh.NAME, 'version', 143, 11, 143, 18),
    woosh.Token(woosh.OP, '==', 143, 19, 143, 21),
    woosh.Token(woosh.NUMBER, '1', 143, 22, 143, 23),
    woosh.Token(woosh.NAME, 'and', 143, 24, 143, 27),
    woosh.Token(woosh.NAME, 'isinstance', 143, 28, 143, 38),
    woosh.Token(woosh.OP, '(', 143, 38, 143, 39),
    woosh.Token(woosh.NAME, 'a', 143, 39, 143, 40),
    woosh.Token(woosh.OP, ',', 143, 40, 143, 41),
    woosh.Token(woosh.OP, '(', 143, 42, 143, 43),
    woosh.Token(woosh.NAME, 'str', 143, 43, 143, 46),
    woosh.Token(woosh.OP, ',', 143, 46, 143, 47),
    woosh.Token(woosh.NAME, 'bytes', 143, 48, 143, 53),
    woosh.Token(woosh.OP, ')', 143, 53, 143, 54),
    woosh.Token(woosh.OP, ')', 143, 54, 143, 55),
    woosh.Token(woosh.OP, ':', 143, 55, 143, 56),
    woosh.Token(woosh.NEWLINE, '\r\n', 143, 56, 144, 0),
    woosh.Token(woosh.INDENT, '            ', 144, 0, 144, 12),
    woosh.Token(woosh.NAME, 'a', 144, 12, 144, 13),
    woosh.Token(woosh.OP, '=', 144, 14, 144, 15),
    woosh.Token(woosh.NAME, 'a', 144, 16, 144, 17),
    woosh.Token(woosh.OP, '.', 144, 17, 144, 18),
    woosh.Token(woosh.NAME, 'decode', 144, 18, 144, 24),
    woosh.Token(woosh.OP, '(', 144, 24, 144, 25),
    woosh.Token(woosh.STRING, "'latin-1'", 144, 25, 144, 34),
    woosh.Token(woosh.OP, ')', 144, 34, 144, 35),
    woosh.Token(woosh.NAME, 'if', 144, 36, 144, 38),
    woosh.Token(woosh.NAME, 'isinstance', 144, 39, 144, 49),
    woosh.Token(woosh.OP, '(', 144, 49, 144, 50),
    woosh.Token(woosh.NAME, 'a', 144, 50, 144, 51),
    woosh.Token(woosh.OP, ',', 144, 51, 144, 52),
    woosh.Token(woosh.NAME, 'bytes', 144, 53, 144, 58),
    woosh.Token(woosh.OP, ')', 144, 58, 144, 59),
    woosh.Token(woosh.NAME, 'else', 144, 60, 144, 64),
    woosh.Token(woosh.NAME, 'a', 144, 65, 144, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 144, 66, 145, 0),
    woosh.Token(woosh.NAME, 'x', 145, 12, 145, 13),
    woosh.Token(woosh.OP, '=', 145, 14, 145, 15),
    woosh.Token(woosh.NAME, 'ord', 145, 16, 145, 19),
    woosh.Token(woosh.OP, '(', 145, 19, 145, 20),
    woosh.Token(woosh.NAME, 'a', 145, 20, 145, 21),
    woosh.Token(woosh.OP, '[', 145, 21, 145, 22),
    woosh.Token(woosh.NUMBER, '0', 145, 22, 145, 23),
    woosh.Token(woosh.OP, ']', 145, 23, 145, 24),
    woosh.Token(woosh.OP, ')', 145, 24, 145, 25),
    woosh.Token(woosh.OP, '<<', 145, 26, 145, 28),
    woosh.Token(woosh.NUMBER, '7', 145, 29, 145, 30),
    woosh.Token(woosh.NAME, 'if', 145, 31, 145, 33),
    woosh.Token(woosh.NAME, 'a', 145, 34, 145, 35),
    woosh.Token(woosh.NAME, 'else', 145, 36, 145, 40),
    woosh.Token(woosh.NUMBER, '0', 145, 41, 145, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 145, 42, 146, 0),
    woosh.Token(woosh.NAME, 'for', 146, 12, 146, 15),
    woosh.Token(woosh.NAME, 'c', 146, 16, 146, 17),
    woosh.Token(woosh.NAME, 'in', 146, 18, 146, 20),
    woosh.Token(woosh.NAME, 'map', 146, 21, 146, 24),
    woosh.Token(woosh.OP, '(', 146, 24, 146, 25),
    woosh.Token(woosh.NAME, 'ord', 146, 25, 146, 28),
    woosh.Token(woosh.OP, ',', 146, 28, 146, 29),
    woosh.Token(woosh.NAME, 'a', 146, 30, 146, 31),
    woosh.Token(woosh.OP, ')', 146, 31, 146, 32),
    woosh.Token(woosh.OP, ':', 146, 32, 146, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 146, 33, 147, 0),
    woosh.Token(woosh.INDENT, '                ', 147, 0, 147, 16),
    woosh.Token(woosh.NAME, 'x', 147, 16, 147, 17),
    woosh.Token(woosh.OP, '=', 147, 18, 147, 19),
    woosh.Token(woosh.OP, '(', 147, 20, 147, 21),
    woosh.Token(woosh.OP, '(', 147, 21, 147, 22),
    woosh.Token(woosh.NUMBER, '1000003', 147, 22, 147, 29),
    woosh.Token(woosh.OP, '*', 147, 30, 147, 31),
    woosh.Token(woosh.NAME, 'x', 147, 32, 147, 33),
    woosh.Token(woosh.OP, ')', 147, 33, 147, 34),
    woosh.Token(woosh.OP, '^', 147, 35, 147, 36),
    woosh.Token(woosh.NAME, 'c', 147, 37, 147, 38),
    woosh.Token(woosh.OP, ')', 147, 38, 147, 39),
    woosh.Token(woosh.OP, '&', 147, 40, 147, 41),
    woosh.Token(woosh.NUMBER, '0xFFFFFFFFFFFFFFFF', 147, 42, 147, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 147, 60, 148, 0),
    woosh.Token(woosh.DEDENT, '            ', 148, 0, 148, 12),
    woosh.Token(woosh.NAME, 'x', 148, 12, 148, 13),
    woosh.Token(woosh.OP, '^=', 148, 14, 148, 16),
    woosh.Token(woosh.NAME, 'len', 148, 17, 148, 20),
    woosh.Token(woosh.OP, '(', 148, 20, 148, 21),
    woosh.Token(woosh.NAME, 'a', 148, 21, 148, 22),
    woosh.Token(woosh.OP, ')', 148, 22, 148, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 148, 23, 149, 0),
    woosh.Token(woosh.NAME, 'a', 149, 12, 149, 13),
    woosh.Token(woosh.OP, '=', 149, 14, 149, 15),
    woosh.Token(woosh.OP, '-', 149, 16, 149, 17),
    woosh.Token(woosh.NUMBER, '2', 149, 17, 149, 18),
    woosh.Token(woosh.NAME, 'if', 149, 19, 149, 21),
    woosh.Token(woosh.NAME, 'x', 149, 22, 149, 23),
    woosh.Token(woosh.OP, '==', 149, 24, 149, 26),
    woosh.Token(woosh.OP, '-', 149, 27, 149, 28),
    woosh.Token(woosh.NUMBER, '1', 149, 28, 149, 29),
    woosh.Token(woosh.NAME, 'else', 149, 30, 149, 34),
    woosh.Token(woosh.NAME, 'x', 149, 35, 149, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 149, 36, 150, 0),
    woosh.Token(woosh.DEDENT, '        ', 151, 0, 151, 8),
    woosh.Token(woosh.NAME, 'elif', 151, 8, 151, 12),
    woosh.Token(woosh.NAME, 'version', 151, 13, 151, 20),
    woosh.Token(woosh.OP, '==', 151, 21, 151, 23),
    woosh.Token(woosh.NUMBER, '2', 151, 24, 151, 25),
    woosh.Token(woosh.NAME, 'and', 151, 26, 151, 29),
    woosh.Token(woosh.NAME, 'isinstance', 151, 30, 151, 40),
    woosh.Token(woosh.OP, '(', 151, 40, 151, 41),
    woosh.Token(woosh.NAME, 'a', 151, 41, 151, 42),
    woosh.Token(woosh.OP, ',', 151, 42, 151, 43),
    woosh.Token(woosh.OP, '(', 151, 44, 151, 45),
    woosh.Token(woosh.NAME, 'str', 151, 45, 151, 48),
    woosh.Token(woosh.OP, ',', 151, 48, 151, 49),
    woosh.Token(woosh.NAME, 'bytes', 151, 50, 151, 55),
    woosh.Token(woosh.OP, ',', 151, 55, 151, 56),
    woosh.Token(woosh.NAME, 'bytearray', 151, 57, 151, 66),
    woosh.Token(woosh.OP, ')', 151, 66, 151, 67),
    woosh.Token(woosh.OP, ')', 151, 67, 151, 68),
    woosh.Token(woosh.OP, ':', 151, 68, 151, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 151, 69, 152, 0),
    woosh.Token(woosh.INDENT, '            ', 152, 0, 152, 12),
    woosh.Token(woosh.NAME, 'if', 152, 12, 152, 14),
    woosh.Token(woosh.NAME, 'isinstance', 152, 15, 152, 25),
    woosh.Token(woosh.OP, '(', 152, 25, 152, 26),
    woosh.Token(woosh.NAME, 'a', 152, 26, 152, 27),
    woosh.Token(woosh.OP, ',', 152, 27, 152, 28),
    woosh.Token(woosh.NAME, 'str', 152, 29, 152, 32),
    woosh.Token(woosh.OP, ')', 152, 32, 152, 33),
    woosh.Token(woosh.OP, ':', 152, 33, 152, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 152, 34, 153, 0),
    woosh.Token(woosh.INDENT, '                ', 153, 0, 153, 16),
    woosh.Token(woosh.NAME, 'a', 153, 16, 153, 17),
    woosh.Token(woosh.OP, '=', 153, 18, 153, 19),
    woosh.Token(woosh.NAME, 'a', 153, 20, 153, 21),
    woosh.Token(woosh.OP, '.', 153, 21, 153, 22),
    woosh.Token(woosh.NAME, 'encode', 153, 22, 153, 28),
    woosh.Token(woosh.OP, '(', 153, 28, 153, 29),
    woosh.Token(woosh.OP, ')', 153, 29, 153, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 153, 30, 154, 0),
    woosh.Token(woosh.DEDENT, '            ', 154, 0, 154, 12),
    woosh.Token(woosh.NAME, 'a', 154, 12, 154, 13),
    woosh.Token(woosh.OP, '+=', 154, 14, 154, 16),
    woosh.Token(woosh.NAME, '_sha512', 154, 17, 154, 24),
    woosh.Token(woosh.OP, '(', 154, 24, 154, 25),
    woosh.Token(woosh.NAME, 'a', 154, 25, 154, 26),
    woosh.Token(woosh.OP, ')', 154, 26, 154, 27),
    woosh.Token(woosh.OP, '.', 154, 27, 154, 28),
    woosh.Token(woosh.NAME, 'digest', 154, 28, 154, 34),
    woosh.Token(woosh.OP, '(', 154, 34, 154, 35),
    woosh.Token(woosh.OP, ')', 154, 35, 154, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 154, 36, 155, 0),
    woosh.Token(woosh.NAME, 'a', 155, 12, 155, 13),
    woosh.Token(woosh.OP, '=', 155, 14, 155, 15),
    woosh.Token(woosh.NAME, 'int', 155, 16, 155, 19),
    woosh.Token(woosh.OP, '.', 155, 19, 155, 20),
    woosh.Token(woosh.NAME, 'from_bytes', 155, 20, 155, 30),
    woosh.Token(woosh.OP, '(', 155, 30, 155, 31),
    woosh.Token(woosh.NAME, 'a', 155, 31, 155, 32),
    woosh.Token(woosh.OP, ',', 155, 32, 155, 33),
    woosh.Token(woosh.STRING, "'big'", 155, 34, 155, 39),
    woosh.Token(woosh.OP, ')', 155, 39, 155, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 155, 40, 156, 0),
    woosh.Token(woosh.DEDENT, '        ', 157, 0, 157, 8),
    woosh.Token(woosh.NAME, 'elif', 157, 8, 157, 12),
    woosh.Token(woosh.NAME, 'not', 157, 13, 157, 16),
    woosh.Token(woosh.NAME, 'isinstance', 157, 17, 157, 27),
    woosh.Token(woosh.OP, '(', 157, 27, 157, 28),
    woosh.Token(woosh.NAME, 'a', 157, 28, 157, 29),
    woosh.Token(woosh.OP, ',', 157, 29, 157, 30),
    woosh.Token(woosh.OP, '(', 157, 31, 157, 32),
    woosh.Token(woosh.NAME, 'type', 157, 32, 157, 36),
    woosh.Token(woosh.OP, '(', 157, 36, 157, 37),
    woosh.Token(woosh.NAME, 'None', 157, 37, 157, 41),
    woosh.Token(woosh.OP, ')', 157, 41, 157, 42),
    woosh.Token(woosh.OP, ',', 157, 42, 157, 43),
    woosh.Token(woosh.NAME, 'int', 157, 44, 157, 47),
    woosh.Token(woosh.OP, ',', 157, 47, 157, 48),
    woosh.Token(woosh.NAME, 'float', 157, 49, 157, 54),
    woosh.Token(woosh.OP, ',', 157, 54, 157, 55),
    woosh.Token(woosh.NAME, 'str', 157, 56, 157, 59),
    woosh.Token(woosh.OP, ',', 157, 59, 157, 60),
    woosh.Token(woosh.NAME, 'bytes', 157, 61, 157, 66),
    woosh.Token(woosh.OP, ',', 157, 66, 157, 67),
    woosh.Token(woosh.NAME, 'bytearray', 157, 68, 157, 77),
    woosh.Token(woosh.OP, ')', 157, 77, 157, 78),
    woosh.Token(woosh.OP, ')', 157, 78, 157, 79),
    woosh.Token(woosh.OP, ':', 157, 79, 157, 80),
    woosh.Token(woosh.NEWLINE, '\r\n', 157, 80, 158, 0),
    woosh.Token(woosh.INDENT, '            ', 158, 0, 158, 12),
    woosh.Token(woosh.NAME, '_warn', 158, 12, 158, 17),
    woosh.Token(woosh.OP, '(', 158, 17, 158, 18),
    woosh.Token(woosh.STRING, "'Seeding based on hashing is deprecated\\n'", 158, 18, 158, 60),
    woosh.Token(woosh.STRING, "'since Python 3.9 and will be removed in a subsequent '", 159, 18, 159, 73),
    woosh.Token(woosh.STRING, "'version. The only \\n'", 160, 18, 160, 40),
    woosh.Token(woosh.STRING, "'supported seed types are: None, '", 161, 18, 161, 52),
    woosh.Token(woosh.STRING, "'int, float, str, bytes, and bytearray.'", 162, 18, 162, 58),
    woosh.Token(woosh.OP, ',', 162, 58, 162, 59),
    woosh.Token(woosh.NAME, 'DeprecationWarning', 163, 18, 163, 36),
    woosh.Token(woosh.OP, ',', 163, 36, 163, 37),
    woosh.Token(woosh.NUMBER, '2', 163, 38, 163, 39),
    woosh.Token(woosh.OP, ')', 163, 39, 163, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 163, 40, 164, 0),
    woosh.Token(woosh.DEDENT, '        ', 165, 0, 165, 8),
    woosh.Token(woosh.NAME, 'super', 165, 8, 165, 13),
    woosh.Token(woosh.OP, '(', 165, 13, 165, 14),
    woosh.Token(woosh.OP, ')', 165, 14, 165, 15),
    woosh.Token(woosh.OP, '.', 165, 15, 165, 16),
    woosh.Token(woosh.NAME, 'seed', 165, 16, 165, 20),
    woosh.Token(woosh.OP, '(', 165, 20, 165, 21),
    woosh.Token(woosh.NAME, 'a', 165, 21, 165, 22),
    woosh.Token(woosh.OP, ')', 165, 22, 165, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 165, 23, 166, 0),
    woosh.Token(woosh.NAME, 'self', 166, 8, 166, 12),
    woosh.Token(woosh.OP, '.', 166, 12, 166, 13),
    woosh.Token(woosh.NAME, 'gauss_next', 166, 13, 166, 23),
    woosh.Token(woosh.OP, '=', 166, 24, 166, 25),
    woosh.Token(woosh.NAME, 'None', 166, 26, 166, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 166, 30, 167, 0),
    woosh.Token(woosh.DEDENT, '    ', 168, 0, 168, 4),
    woosh.Token(woosh.NAME, 'def', 168, 4, 168, 7),
    woosh.Token(woosh.NAME, 'getstate', 168, 8, 168, 16),
    woosh.Token(woosh.OP, '(', 168, 16, 168, 17),
    woosh.Token(woosh.NAME, 'self', 168, 17, 168, 21),
    woosh.Token(woosh.OP, ')', 168, 21, 168, 22),
    woosh.Token(woosh.OP, ':', 168, 22, 168, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 168, 23, 169, 0),
    woosh.Token(woosh.INDENT, '        ', 169, 0, 169, 8),
    woosh.Token(woosh.STRING, '"""Return internal state; can be passed to setstate() later."""', 169, 8, 169, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 169, 71, 170, 0),
    woosh.Token(woosh.NAME, 'return', 170, 8, 170, 14),
    woosh.Token(woosh.NAME, 'self', 170, 15, 170, 19),
    woosh.Token(woosh.OP, '.', 170, 19, 170, 20),
    woosh.Token(woosh.NAME, 'VERSION', 170, 20, 170, 27),
    woosh.Token(woosh.OP, ',', 170, 27, 170, 28),
    woosh.Token(woosh.NAME, 'super', 170, 29, 170, 34),
    woosh.Token(woosh.OP, '(', 170, 34, 170, 35),
    woosh.Token(woosh.OP, ')', 170, 35, 170, 36),
    woosh.Token(woosh.OP, '.', 170, 36, 170, 37),
    woosh.Token(woosh.NAME, 'getstate', 170, 37, 170, 45),
    woosh.Token(woosh.OP, '(', 170, 45, 170, 46),
    woosh.Token(woosh.OP, ')', 170, 46, 170, 47),
    woosh.Token(woosh.OP, ',', 170, 47, 170, 48),
    woosh.Token(woosh.NAME, 'self', 170, 49, 170, 53),
    woosh.Token(woosh.OP, '.', 170, 53, 170, 54),
    woosh.Token(woosh.NAME, 'gauss_next', 170, 54, 170, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 170, 64, 171, 0),
    woosh.Token(woosh.DEDENT, '    ', 172, 0, 172, 4),
    woosh.Token(woosh.NAME, 'def', 172, 4, 172, 7),
    woosh.Token(woosh.NAME, 'setstate', 172, 8, 172, 16),
    woosh.Token(woosh.OP, '(', 172, 16, 172, 17),
    woosh.Token(woosh.NAME, 'self', 172, 17, 172, 21),
    woosh.Token(woosh.OP, ',', 172, 21, 172, 22),
    woosh.Token(woosh.NAME, 'state', 172, 23, 172, 28),
    woosh.Token(woosh.OP, ')', 172, 28, 172, 29),
    woosh.Token(woosh.OP, ':', 172, 29, 172, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 172, 30, 173, 0),
    woosh.Token(woosh.INDENT, '        ', 173, 0, 173, 8),
    woosh.Token(woosh.STRING, '"""Restore internal state from object returned by getstate()."""', 173, 8, 173, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 173, 72, 174, 0),
    woosh.Token(woosh.NAME, 'version', 174, 8, 174, 15),
    woosh.Token(woosh.OP, '=', 174, 16, 174, 17),
    woosh.Token(woosh.NAME, 'state', 174, 18, 174, 23),
    woosh.Token(woosh.OP, '[', 174, 23, 174, 24),
    woosh.Token(woosh.NUMBER, '0', 174, 24, 174, 25),
    woosh.Token(woosh.OP, ']', 174, 25, 174, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 174, 26, 175, 0),
    woosh.Token(woosh.NAME, 'if', 175, 8, 175, 10),
    woosh.Token(woosh.NAME, 'version', 175, 11, 175, 18),
    woosh.Token(woosh.OP, '==', 175, 19, 175, 21),
    woosh.Token(woosh.NUMBER, '3', 175, 22, 175, 23),
    woosh.Token(woosh.OP, ':', 175, 23, 175, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 175, 24, 176, 0),
    woosh.Token(woosh.INDENT, '            ', 176, 0, 176, 12),
    woosh.Token(woosh.NAME, 'version', 176, 12, 176, 19),
    woosh.Token(woosh.OP, ',', 176, 19, 176, 20),
    woosh.Token(woosh.NAME, 'internalstate', 176, 21, 176, 34),
    woosh.Token(woosh.OP, ',', 176, 34, 176, 35),
    woosh.Token(woosh.NAME, 'self', 176, 36, 176, 40),
    woosh.Token(woosh.OP, '.', 176, 40, 176, 41),
    woosh.Token(woosh.NAME, 'gauss_next', 176, 41, 176, 51),
    woosh.Token(woosh.OP, '=', 176, 52, 176, 53),
    woosh.Token(woosh.NAME, 'state', 176, 54, 176, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 176, 59, 177, 0),
    woosh.Token(woosh.NAME, 'super', 177, 12, 177, 17),
    woosh.Token(woosh.OP, '(', 177, 17, 177, 18),
    woosh.Token(woosh.OP, ')', 177, 18, 177, 19),
    woosh.Token(woosh.OP, '.', 177, 19, 177, 20),
    woosh.Token(woosh.NAME, 'setstate', 177, 20, 177, 28),
    woosh.Token(woosh.OP, '(', 177, 28, 177, 29),
    woosh.Token(woosh.NAME, 'internalstate', 177, 29, 177, 42),
    woosh.Token(woosh.OP, ')', 177, 42, 177, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 177, 43, 178, 0),
    woosh.Token(woosh.DEDENT, '        ', 178, 0, 178, 8),
    woosh.Token(woosh.NAME, 'elif', 178, 8, 178, 12),
    woosh.Token(woosh.NAME, 'version', 178, 13, 178, 20),
    woosh.Token(woosh.OP, '==', 178, 21, 178, 23),
    woosh.Token(woosh.NUMBER, '2', 178, 24, 178, 25),
    woosh.Token(woosh.OP, ':', 178, 25, 178, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 178, 26, 179, 0),
    woosh.Token(woosh.INDENT, '            ', 179, 0, 179, 12),
    woosh.Token(woosh.NAME, 'version', 179, 12, 179, 19),
    woosh.Token(woosh.OP, ',', 179, 19, 179, 20),
    woosh.Token(woosh.NAME, 'internalstate', 179, 21, 179, 34),
    woosh.Token(woosh.OP, ',', 179, 34, 179, 35),
    woosh.Token(woosh.NAME, 'self', 179, 36, 179, 40),
    woosh.Token(woosh.OP, '.', 179, 40, 179, 41),
    woosh.Token(woosh.NAME, 'gauss_next', 179, 41, 179, 51),
    woosh.Token(woosh.OP, '=', 179, 52, 179, 53),
    woosh.Token(woosh.NAME, 'state', 179, 54, 179, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 179, 59, 180, 0),
    woosh.Token(woosh.COMMENT, '# In version 2, the state was saved as signed ints, which causes', 180, 12, 180, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 180, 76, 181, 0),
    woosh.Token(woosh.COMMENT, '#   inconsistencies between 32/64-bit systems. The state is', 181, 12, 181, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 181, 71, 182, 0),
    woosh.Token(woosh.COMMENT, '#   really unsigned 32-bit ints, so we convert negative ints from', 182, 12, 182, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 182, 77, 183, 0),
    woosh.Token(woosh.COMMENT, '#   version 2 to positive longs for version 3.', 183, 12, 183, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 183, 58, 184, 0),
    woosh.Token(woosh.NAME, 'try', 184, 12, 184, 15),
    woosh.Token(woosh.OP, ':', 184, 15, 184, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 184, 16, 185, 0),
    woosh.Token(woosh.INDENT, '                ', 185, 0, 185, 16),
    woosh.Token(woosh.NAME, 'internalstate', 185, 16, 185, 29),
    woosh.Token(woosh.OP, '=', 185, 30, 185, 31),
    woosh.Token(woosh.NAME, 'tuple', 185, 32, 185, 37),
    woosh.Token(woosh.OP, '(', 185, 37, 185, 38),
    woosh.Token(woosh.NAME, 'x', 185, 38, 185, 39),
    woosh.Token(woosh.OP, '%', 185, 40, 185, 41),
    woosh.Token(woosh.OP, '(', 185, 42, 185, 43),
    woosh.Token(woosh.NUMBER, '2', 185, 43, 185, 44),
    woosh.Token(woosh.OP, '**', 185, 45, 185, 47),
    woosh.Token(woosh.NUMBER, '32', 185, 48, 185, 50),
    woosh.Token(woosh.OP, ')', 185, 50, 185, 51),
    woosh.Token(woosh.NAME, 'for', 185, 52, 185, 55),
    woosh.Token(woosh.NAME, 'x', 185, 56, 185, 57),
    woosh.Token(woosh.NAME, 'in', 185, 58, 185, 60),
    woosh.Token(woosh.NAME, 'internalstate', 185, 61, 185, 74),
    woosh.Token(woosh.OP, ')', 185, 74, 185, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 185, 75, 186, 0),
    woosh.Token(woosh.DEDENT, '            ', 186, 0, 186, 12),
    woosh.Token(woosh.NAME, 'except', 186, 12, 186, 18),
    woosh.Token(woosh.NAME, 'ValueError', 186, 19, 186, 29),
    woosh.Token(woosh.NAME, 'as', 186, 30, 186, 32),
    woosh.Token(woosh.NAME, 'e', 186, 33, 186, 34),
    woosh.Token(woosh.OP, ':', 186, 34, 186, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 186, 35, 187, 0),
    woosh.Token(woosh.INDENT, '                ', 187, 0, 187, 16),
    woosh.Token(woosh.NAME, 'raise', 187, 16, 187, 21),
    woosh.Token(woosh.NAME, 'TypeError', 187, 22, 187, 31),
    woosh.Token(woosh.NAME, 'from', 187, 32, 187, 36),
    woosh.Token(woosh.NAME, 'e', 187, 37, 187, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 187, 38, 188, 0),
    woosh.Token(woosh.DEDENT, '            ', 188, 0, 188, 12),
    woosh.Token(woosh.NAME, 'super', 188, 12, 188, 17),
    woosh.Token(woosh.OP, '(', 188, 17, 188, 18),
    woosh.Token(woosh.OP, ')', 188, 18, 188, 19),
    woosh.Token(woosh.OP, '.', 188, 19, 188, 20),
    woosh.Token(woosh.NAME, 'setstate', 188, 20, 188, 28),
    woosh.Token(woosh.OP, '(', 188, 28, 188, 29),
    woosh.Token(woosh.NAME, 'internalstate', 188, 29, 188, 42),
    woosh.Token(woosh.OP, ')', 188, 42, 188, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 188, 43, 189, 0),
    woosh.Token(woosh.DEDENT, '        ', 189, 0, 189, 8),
    woosh.Token(woosh.NAME, 'else', 189, 8, 189, 12),
    woosh.Token(woosh.OP, ':', 189, 12, 189, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 189, 13, 190, 0),
    woosh.Token(woosh.INDENT, '            ', 190, 0, 190, 12),
    woosh.Token(woosh.NAME, 'raise', 190, 12, 190, 17),
    woosh.Token(woosh.NAME, 'ValueError', 190, 18, 190, 28),
    woosh.Token(woosh.OP, '(', 190, 28, 190, 29),
    woosh.Token(woosh.STRING, '"state with version %s passed to "', 190, 29, 190, 63),
    woosh.Token(woosh.STRING, '"Random.setstate() of version %s"', 191, 29, 191, 62),
    woosh.Token(woosh.OP, '%', 191, 63, 191, 64),
    woosh.Token(woosh.OP, '(', 192, 29, 192, 30),
    woosh.Token(woosh.NAME, 'version', 192, 30, 192, 37),
    woosh.Token(woosh.OP, ',', 192, 37, 192, 38),
    woosh.Token(woosh.NAME, 'self', 192, 39, 192, 43),
    woosh.Token(woosh.OP, '.', 192, 43, 192, 44),
    woosh.Token(woosh.NAME, 'VERSION', 192, 44, 192, 51),
    woosh.Token(woosh.OP, ')', 192, 51, 192, 52),
    woosh.Token(woosh.OP, ')', 192, 52, 192, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 192, 53, 193, 0),
    woosh.Token(woosh.COMMENT, '## -------------------------------------------------------', 195, 4, 195, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 195, 62, 196, 0),
    woosh.Token(woosh.COMMENT, '## ---- Methods below this point do not need to be overridden or extended', 196, 4, 196, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 196, 77, 197, 0),
    woosh.Token(woosh.COMMENT, '## ---- when subclassing for the purpose of using a different core generator.', 197, 4, 197, 81),
    woosh.Token(woosh.NEWLINE, '\r\n', 197, 81, 198, 0),
    woosh.Token(woosh.COMMENT, '## -------------------- pickle support  -------------------', 200, 4, 200, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 200, 63, 201, 0),
    woosh.Token(woosh.COMMENT, '# Issue 17489: Since __reduce__ was defined to fix #759889 this is no', 202, 4, 202, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 202, 73, 203, 0),
    woosh.Token(woosh.COMMENT, '# longer called; we leave it here because it has been here since random was', 203, 4, 203, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 203, 79, 204, 0),
    woosh.Token(woosh.COMMENT, '# rewritten back in 2001 and why risk breaking something.', 204, 4, 204, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 204, 61, 205, 0),
    woosh.Token(woosh.DEDENT, '    ', 205, 0, 205, 4),
    woosh.Token(woosh.DEDENT, '', 205, 4, 205, 4),
    woosh.Token(woosh.NAME, 'def', 205, 4, 205, 7),
    woosh.Token(woosh.NAME, '__getstate__', 205, 8, 205, 20),
    woosh.Token(woosh.OP, '(', 205, 20, 205, 21),
    woosh.Token(woosh.NAME, 'self', 205, 21, 205, 25),
    woosh.Token(woosh.OP, ')', 205, 25, 205, 26),
    woosh.Token(woosh.OP, ':', 205, 26, 205, 27),
    woosh.Token(woosh.COMMENT, '# for pickle', 205, 29, 205, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 205, 41, 206, 0),
    woosh.Token(woosh.INDENT, '        ', 206, 0, 206, 8),
    woosh.Token(woosh.NAME, 'return', 206, 8, 206, 14),
    woosh.Token(woosh.NAME, 'self', 206, 15, 206, 19),
    woosh.Token(woosh.OP, '.', 206, 19, 206, 20),
    woosh.Token(woosh.NAME, 'getstate', 206, 20, 206, 28),
    woosh.Token(woosh.OP, '(', 206, 28, 206, 29),
    woosh.Token(woosh.OP, ')', 206, 29, 206, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 206, 30, 207, 0),
    woosh.Token(woosh.DEDENT, '    ', 208, 0, 208, 4),
    woosh.Token(woosh.NAME, 'def', 208, 4, 208, 7),
    woosh.Token(woosh.NAME, '__setstate__', 208, 8, 208, 20),
    woosh.Token(woosh.OP, '(', 208, 20, 208, 21),
    woosh.Token(woosh.NAME, 'self', 208, 21, 208, 25),
    woosh.Token(woosh.OP, ',', 208, 25, 208, 26),
    woosh.Token(woosh.NAME, 'state', 208, 27, 208, 32),
    woosh.Token(woosh.OP, ')', 208, 32, 208, 33),
    woosh.Token(woosh.OP, ':', 208, 33, 208, 34),
    woosh.Token(woosh.COMMENT, '# for pickle', 208, 36, 208, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 208, 48, 209, 0),
    woosh.Token(woosh.INDENT, '        ', 209, 0, 209, 8),
    woosh.Token(woosh.NAME, 'self', 209, 8, 209, 12),
    woosh.Token(woosh.OP, '.', 209, 12, 209, 13),
    woosh.Token(woosh.NAME, 'setstate', 209, 13, 209, 21),
    woosh.Token(woosh.OP, '(', 209, 21, 209, 22),
    woosh.Token(woosh.NAME, 'state', 209, 22, 209, 27),
    woosh.Token(woosh.OP, ')', 209, 27, 209, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 209, 28, 210, 0),
    woosh.Token(woosh.DEDENT, '    ', 211, 0, 211, 4),
    woosh.Token(woosh.NAME, 'def', 211, 4, 211, 7),
    woosh.Token(woosh.NAME, '__reduce__', 211, 8, 211, 18),
    woosh.Token(woosh.OP, '(', 211, 18, 211, 19),
    woosh.Token(woosh.NAME, 'self', 211, 19, 211, 23),
    woosh.Token(woosh.OP, ')', 211, 23, 211, 24),
    woosh.Token(woosh.OP, ':', 211, 24, 211, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 211, 25, 212, 0),
    woosh.Token(woosh.INDENT, '        ', 212, 0, 212, 8),
    woosh.Token(woosh.NAME, 'return', 212, 8, 212, 14),
    woosh.Token(woosh.NAME, 'self', 212, 15, 212, 19),
    woosh.Token(woosh.OP, '.', 212, 19, 212, 20),
    woosh.Token(woosh.NAME, '__class__', 212, 20, 212, 29),
    woosh.Token(woosh.OP, ',', 212, 29, 212, 30),
    woosh.Token(woosh.OP, '(', 212, 31, 212, 32),
    woosh.Token(woosh.OP, ')', 212, 32, 212, 33),
    woosh.Token(woosh.OP, ',', 212, 33, 212, 34),
    woosh.Token(woosh.NAME, 'self', 212, 35, 212, 39),
    woosh.Token(woosh.OP, '.', 212, 39, 212, 40),
    woosh.Token(woosh.NAME, 'getstate', 212, 40, 212, 48),
    woosh.Token(woosh.OP, '(', 212, 48, 212, 49),
    woosh.Token(woosh.OP, ')', 212, 49, 212, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 212, 50, 213, 0),
    woosh.Token(woosh.COMMENT, '## ---- internal support method for evenly distributed integers ----', 215, 4, 215, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 215, 72, 216, 0),
    woosh.Token(woosh.DEDENT, '    ', 217, 0, 217, 4),
    woosh.Token(woosh.NAME, 'def', 217, 4, 217, 7),
    woosh.Token(woosh.NAME, '__init_subclass__', 217, 8, 217, 25),
    woosh.Token(woosh.OP, '(', 217, 25, 217, 26),
    woosh.Token(woosh.NAME, 'cls', 217, 26, 217, 29),
    woosh.Token(woosh.OP, ',', 217, 29, 217, 30),
    woosh.Token(woosh.OP, '/', 217, 31, 217, 32),
    woosh.Token(woosh.OP, ',', 217, 32, 217, 33),
    woosh.Token(woosh.OP, '**', 217, 34, 217, 36),
    woosh.Token(woosh.NAME, 'kwargs', 217, 36, 217, 42),
    woosh.Token(woosh.OP, ')', 217, 42, 217, 43),
    woosh.Token(woosh.OP, ':', 217, 43, 217, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 217, 44, 218, 0),
    woosh.Token(woosh.INDENT, '        ', 218, 0, 218, 8),
    woosh.Token(woosh.STRING, '"""Control how subclasses generate random integers.\r\n\r\n        The algorithm a subclass can use depends on the random() and/or\r\n        getrandbits() implementation available to it and determines\r\n        whether it can generate random integers from arbitrarily large\r\n        ranges.\r\n        """', 218, 8, 224, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 224, 11, 225, 0),
    woosh.Token(woosh.NAME, 'for', 226, 8, 226, 11),
    woosh.Token(woosh.NAME, 'c', 226, 12, 226, 13),
    woosh.Token(woosh.NAME, 'in', 226, 14, 226, 16),
    woosh.Token(woosh.NAME, 'cls', 226, 17, 226, 20),
    woosh.Token(woosh.OP, '.', 226, 20, 226, 21),
    woosh.Token(woosh.NAME, '__mro__', 226, 21, 226, 28),
    woosh.Token(woosh.OP, ':', 226, 28, 226, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 226, 29, 227, 0),
    woosh.Token(woosh.INDENT, '            ', 227, 0, 227, 12),
    woosh.Token(woosh.NAME, 'if', 227, 12, 227, 14),
    woosh.Token(woosh.STRING, "'_randbelow'", 227, 15, 227, 27),
    woosh.Token(woosh.NAME, 'in', 227, 28, 227, 30),
    woosh.Token(woosh.NAME, 'c', 227, 31, 227, 32),
    woosh.Token(woosh.OP, '.', 227, 32, 227, 33),
    woosh.Token(woosh.NAME, '__dict__', 227, 33, 227, 41),
    woosh.Token(woosh.OP, ':', 227, 41, 227, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 227, 42, 228, 0),
    woosh.Token(woosh.COMMENT, '# just inherit it', 228, 16, 228, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 228, 33, 229, 0),
    woosh.Token(woosh.INDENT, '                ', 229, 0, 229, 16),
    woosh.Token(woosh.NAME, 'break', 229, 16, 229, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 229, 21, 230, 0),
    woosh.Token(woosh.DEDENT, '            ', 230, 0, 230, 12),
    woosh.Token(woosh.NAME, 'if', 230, 12, 230, 14),
    woosh.Token(woosh.STRING, "'getrandbits'", 230, 15, 230, 28),
    woosh.Token(woosh.NAME, 'in', 230, 29, 230, 31),
    woosh.Token(woosh.NAME, 'c', 230, 32, 230, 33),
    woosh.Token(woosh.OP, '.', 230, 33, 230, 34),
    woosh.Token(woosh.NAME, '__dict__', 230, 34, 230, 42),
    woosh.Token(woosh.OP, ':', 230, 42, 230, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 230, 43, 231, 0),
    woosh.Token(woosh.INDENT, '                ', 231, 0, 231, 16),
    woosh.Token(woosh.NAME, 'cls', 231, 16, 231, 19),
    woosh.Token(woosh.OP, '.', 231, 19, 231, 20),
    woosh.Token(woosh.NAME, '_randbelow', 231, 20, 231, 30),
    woosh.Token(woosh.OP, '=', 231, 31, 231, 32),
    woosh.Token(woosh.NAME, 'cls', 231, 33, 231, 36),
    woosh.Token(woosh.OP, '.', 231, 36, 231, 37),
    woosh.Token(woosh.NAME, '_randbelow_with_getrandbits', 231, 37, 231, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 231, 64, 232, 0),
    woosh.Token(woosh.NAME, 'break', 232, 16, 232, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 232, 21, 233, 0),
    woosh.Token(woosh.DEDENT, '            ', 233, 0, 233, 12),
    woosh.Token(woosh.NAME, 'if', 233, 12, 233, 14),
    woosh.Token(woosh.STRING, "'random'", 233, 15, 233, 23),
    woosh.Token(woosh.NAME, 'in', 233, 24, 233, 26),
    woosh.Token(woosh.NAME, 'c', 233, 27, 233, 28),
    woosh.Token(woosh.OP, '.', 233, 28, 233, 29),
    woosh.Token(woosh.NAME, '__dict__', 233, 29, 233, 37),
    woosh.Token(woosh.OP, ':', 233, 37, 233, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 233, 38, 234, 0),
    woosh.Token(woosh.INDENT, '                ', 234, 0, 234, 16),
    woosh.Token(woosh.NAME, 'cls', 234, 16, 234, 19),
    woosh.Token(woosh.OP, '.', 234, 19, 234, 20),
    woosh.Token(woosh.NAME, '_randbelow', 234, 20, 234, 30),
    woosh.Token(woosh.OP, '=', 234, 31, 234, 32),
    woosh.Token(woosh.NAME, 'cls', 234, 33, 234, 36),
    woosh.Token(woosh.OP, '.', 234, 36, 234, 37),
    woosh.Token(woosh.NAME, '_randbelow_without_getrandbits', 234, 37, 234, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 234, 67, 235, 0),
    woosh.Token(woosh.NAME, 'break', 235, 16, 235, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 235, 21, 236, 0),
    woosh.Token(woosh.DEDENT, '    ', 237, 0, 237, 4),
    woosh.Token(woosh.DEDENT, '', 237, 4, 237, 4),
    woosh.Token(woosh.DEDENT, '', 237, 4, 237, 4),
    woosh.Token(woosh.NAME, 'def', 237, 4, 237, 7),
    woosh.Token(woosh.NAME, '_randbelow_with_getrandbits', 237, 8, 237, 35),
    woosh.Token(woosh.OP, '(', 237, 35, 237, 36),
    woosh.Token(woosh.NAME, 'self', 237, 36, 237, 40),
    woosh.Token(woosh.OP, ',', 237, 40, 237, 41),
    woosh.Token(woosh.NAME, 'n', 237, 42, 237, 43),
    woosh.Token(woosh.OP, ')', 237, 43, 237, 44),
    woosh.Token(woosh.OP, ':', 237, 44, 237, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 237, 45, 238, 0),
    woosh.Token(woosh.INDENT, '        ', 238, 0, 238, 8),
    woosh.Token(woosh.STRING, '"Return a random int in the range [0,n).  Returns 0 if n==0."', 238, 8, 238, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 238, 69, 239, 0),
    woosh.Token(woosh.NAME, 'if', 240, 8, 240, 10),
    woosh.Token(woosh.NAME, 'not', 240, 11, 240, 14),
    woosh.Token(woosh.NAME, 'n', 240, 15, 240, 16),
    woosh.Token(woosh.OP, ':', 240, 16, 240, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 240, 17, 241, 0),
    woosh.Token(woosh.INDENT, '            ', 241, 0, 241, 12),
    woosh.Token(woosh.NAME, 'return', 241, 12, 241, 18),
    woosh.Token(woosh.NUMBER, '0', 241, 19, 241, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 241, 20, 242, 0),
    woosh.Token(woosh.DEDENT, '        ', 242, 0, 242, 8),
    woosh.Token(woosh.NAME, 'getrandbits', 242, 8, 242, 19),
    woosh.Token(woosh.OP, '=', 242, 20, 242, 21),
    woosh.Token(woosh.NAME, 'self', 242, 22, 242, 26),
    woosh.Token(woosh.OP, '.', 242, 26, 242, 27),
    woosh.Token(woosh.NAME, 'getrandbits', 242, 27, 242, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 242, 38, 243, 0),
    woosh.Token(woosh.NAME, 'k', 243, 8, 243, 9),
    woosh.Token(woosh.OP, '=', 243, 10, 243, 11),
    woosh.Token(woosh.NAME, 'n', 243, 12, 243, 13),
    woosh.Token(woosh.OP, '.', 243, 13, 243, 14),
    woosh.Token(woosh.NAME, 'bit_length', 243, 14, 243, 24),
    woosh.Token(woosh.OP, '(', 243, 24, 243, 25),
    woosh.Token(woosh.OP, ')', 243, 25, 243, 26),
    woosh.Token(woosh.COMMENT, "# don't use (n-1) here because n can be 1", 243, 28, 243, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 243, 69, 244, 0),
    woosh.Token(woosh.NAME, 'r', 244, 8, 244, 9),
    woosh.Token(woosh.OP, '=', 244, 10, 244, 11),
    woosh.Token(woosh.NAME, 'getrandbits', 244, 12, 244, 23),
    woosh.Token(woosh.OP, '(', 244, 23, 244, 24),
    woosh.Token(woosh.NAME, 'k', 244, 24, 244, 25),
    woosh.Token(woosh.OP, ')', 244, 25, 244, 26),
    woosh.Token(woosh.COMMENT, '# 0 <= r < 2**k', 244, 28, 244, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 244, 43, 245, 0),
    woosh.Token(woosh.NAME, 'while', 245, 8, 245, 13),
    woosh.Token(woosh.NAME, 'r', 245, 14, 245, 15),
    woosh.Token(woosh.OP, '>=', 245, 16, 245, 18),
    woosh.Token(woosh.NAME, 'n', 245, 19, 245, 20),
    woosh.Token(woosh.OP, ':', 245, 20, 245, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 245, 21, 246, 0),
    woosh.Token(woosh.INDENT, '            ', 246, 0, 246, 12),
    woosh.Token(woosh.NAME, 'r', 246, 12, 246, 13),
    woosh.Token(woosh.OP, '=', 246, 14, 246, 15),
    woosh.Token(woosh.NAME, 'getrandbits', 246, 16, 246, 27),
    woosh.Token(woosh.OP, '(', 246, 27, 246, 28),
    woosh.Token(woosh.NAME, 'k', 246, 28, 246, 29),
    woosh.Token(woosh.OP, ')', 246, 29, 246, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 246, 30, 247, 0),
    woosh.Token(woosh.DEDENT, '        ', 247, 0, 247, 8),
    woosh.Token(woosh.NAME, 'return', 247, 8, 247, 14),
    woosh.Token(woosh.NAME, 'r', 247, 15, 247, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 247, 16, 248, 0),
    woosh.Token(woosh.DEDENT, '    ', 249, 0, 249, 4),
    woosh.Token(woosh.NAME, 'def', 249, 4, 249, 7),
    woosh.Token(woosh.NAME, '_randbelow_without_getrandbits', 249, 8, 249, 38),
    woosh.Token(woosh.OP, '(', 249, 38, 249, 39),
    woosh.Token(woosh.NAME, 'self', 249, 39, 249, 43),
    woosh.Token(woosh.OP, ',', 249, 43, 249, 44),
    woosh.Token(woosh.NAME, 'n', 249, 45, 249, 46),
    woosh.Token(woosh.OP, ',', 249, 46, 249, 47),
    woosh.Token(woosh.NAME, 'maxsize', 249, 48, 249, 55),
    woosh.Token(woosh.OP, '=', 249, 55, 249, 56),
    woosh.Token(woosh.NUMBER, '1', 249, 56, 249, 57),
    woosh.Token(woosh.OP, '<<', 249, 57, 249, 59),
    woosh.Token(woosh.NAME, 'BPF', 249, 59, 249, 62),
    woosh.Token(woosh.OP, ')', 249, 62, 249, 63),
    woosh.Token(woosh.OP, ':', 249, 63, 249, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 249, 64, 250, 0),
    woosh.Token(woosh.INDENT, '        ', 250, 0, 250, 8),
    woosh.Token(woosh.STRING, '"""Return a random int in the range [0,n).  Returns 0 if n==0.\r\n\r\n        The implementation does not use getrandbits, but only random.\r\n        """', 250, 8, 253, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 253, 11, 254, 0),
    woosh.Token(woosh.NAME, 'random', 255, 8, 255, 14),
    woosh.Token(woosh.OP, '=', 255, 15, 255, 16),
    woosh.Token(woosh.NAME, 'self', 255, 17, 255, 21),
    woosh.Token(woosh.OP, '.', 255, 21, 255, 22),
    woosh.Token(woosh.NAME, 'random', 255, 22, 255, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 255, 28, 256, 0),
    woosh.Token(woosh.NAME, 'if', 256, 8, 256, 10),
    woosh.Token(woosh.NAME, 'n', 256, 11, 256, 12),
    woosh.Token(woosh.OP, '>=', 256, 13, 256, 15),
    woosh.Token(woosh.NAME, 'maxsize', 256, 16, 256, 23),
    woosh.Token(woosh.OP, ':', 256, 23, 256, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 256, 24, 257, 0),
    woosh.Token(woosh.INDENT, '            ', 257, 0, 257, 12),
    woosh.Token(woosh.NAME, '_warn', 257, 12, 257, 17),
    woosh.Token(woosh.OP, '(', 257, 17, 257, 18),
    woosh.Token(woosh.STRING, '"Underlying random() generator does not supply \\n"', 257, 18, 257, 68),
    woosh.Token(woosh.STRING, '"enough bits to choose from a population range this large.\\n"', 258, 16, 258, 77),
    woosh.Token(woosh.STRING, '"To remove the range limitation, add a getrandbits() method."', 259, 16, 259, 77),
    woosh.Token(woosh.OP, ')', 259, 77, 259, 78),
    woosh.Token(woosh.NEWLINE, '\r\n', 259, 78, 260, 0),
    woosh.Token(woosh.NAME, 'return', 260, 12, 260, 18),
    woosh.Token(woosh.NAME, '_floor', 260, 19, 260, 25),
    woosh.Token(woosh.OP, '(', 260, 25, 260, 26),
    woosh.Token(woosh.NAME, 'random', 260, 26, 260, 32),
    woosh.Token(woosh.OP, '(', 260, 32, 260, 33),
    woosh.Token(woosh.OP, ')', 260, 33, 260, 34),
    woosh.Token(woosh.OP, '*', 260, 35, 260, 36),
    woosh.Token(woosh.NAME, 'n', 260, 37, 260, 38),
    woosh.Token(woosh.OP, ')', 260, 38, 260, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 260, 39, 261, 0),
    woosh.Token(woosh.DEDENT, '        ', 261, 0, 261, 8),
    woosh.Token(woosh.NAME, 'if', 261, 8, 261, 10),
    woosh.Token(woosh.NAME, 'n', 261, 11, 261, 12),
    woosh.Token(woosh.OP, '==', 261, 13, 261, 15),
    woosh.Token(woosh.NUMBER, '0', 261, 16, 261, 17),
    woosh.Token(woosh.OP, ':', 261, 17, 261, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 261, 18, 262, 0),
    woosh.Token(woosh.INDENT, '            ', 262, 0, 262, 12),
    woosh.Token(woosh.NAME, 'return', 262, 12, 262, 18),
    woosh.Token(woosh.NUMBER, '0', 262, 19, 262, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 262, 20, 263, 0),
    woosh.Token(woosh.DEDENT, '        ', 263, 0, 263, 8),
    woosh.Token(woosh.NAME, 'rem', 263, 8, 263, 11),
    woosh.Token(woosh.OP, '=', 263, 12, 263, 13),
    woosh.Token(woosh.NAME, 'maxsize', 263, 14, 263, 21),
    woosh.Token(woosh.OP, '%', 263, 22, 263, 23),
    woosh.Token(woosh.NAME, 'n', 263, 24, 263, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 263, 25, 264, 0),
    woosh.Token(woosh.NAME, 'limit', 264, 8, 264, 13),
    woosh.Token(woosh.OP, '=', 264, 14, 264, 15),
    woosh.Token(woosh.OP, '(', 264, 16, 264, 17),
    woosh.Token(woosh.NAME, 'maxsize', 264, 17, 264, 24),
    woosh.Token(woosh.OP, '-', 264, 25, 264, 26),
    woosh.Token(woosh.NAME, 'rem', 264, 27, 264, 30),
    woosh.Token(woosh.OP, ')', 264, 30, 264, 31),
    woosh.Token(woosh.OP, '/', 264, 32, 264, 33),
    woosh.Token(woosh.NAME, 'maxsize', 264, 34, 264, 41),
    woosh.Token(woosh.COMMENT, '# int(limit * maxsize) % n == 0', 264, 44, 264, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 264, 75, 265, 0),
    woosh.Token(woosh.NAME, 'r', 265, 8, 265, 9),
    woosh.Token(woosh.OP, '=', 265, 10, 265, 11),
    woosh.Token(woosh.NAME, 'random', 265, 12, 265, 18),
    woosh.Token(woosh.OP, '(', 265, 18, 265, 19),
    woosh.Token(woosh.OP, ')', 265, 19, 265, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 265, 20, 266, 0),
    woosh.Token(woosh.NAME, 'while', 266, 8, 266, 13),
    woosh.Token(woosh.NAME, 'r', 266, 14, 266, 15),
    woosh.Token(woosh.OP, '>=', 266, 16, 266, 18),
    woosh.Token(woosh.NAME, 'limit', 266, 19, 266, 24),
    woosh.Token(woosh.OP, ':', 266, 24, 266, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 266, 25, 267, 0),
    woosh.Token(woosh.INDENT, '            ', 267, 0, 267, 12),
    woosh.Token(woosh.NAME, 'r', 267, 12, 267, 13),
    woosh.Token(woosh.OP, '=', 267, 14, 267, 15),
    woosh.Token(woosh.NAME, 'random', 267, 16, 267, 22),
    woosh.Token(woosh.OP, '(', 267, 22, 267, 23),
    woosh.Token(woosh.OP, ')', 267, 23, 267, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 267, 24, 268, 0),
    woosh.Token(woosh.DEDENT, '        ', 268, 0, 268, 8),
    woosh.Token(woosh.NAME, 'return', 268, 8, 268, 14),
    woosh.Token(woosh.NAME, '_floor', 268, 15, 268, 21),
    woosh.Token(woosh.OP, '(', 268, 21, 268, 22),
    woosh.Token(woosh.NAME, 'r', 268, 22, 268, 23),
    woosh.Token(woosh.OP, '*', 268, 24, 268, 25),
    woosh.Token(woosh.NAME, 'maxsize', 268, 26, 268, 33),
    woosh.Token(woosh.OP, ')', 268, 33, 268, 34),
    woosh.Token(woosh.OP, '%', 268, 35, 268, 36),
    woosh.Token(woosh.NAME, 'n', 268, 37, 268, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 268, 38, 269, 0),
    woosh.Token(woosh.DEDENT, '    ', 270, 0, 270, 4),
    woosh.Token(woosh.NAME, '_randbelow', 270, 4, 270, 14),
    woosh.Token(woosh.OP, '=', 270, 15, 270, 16),
    woosh.Token(woosh.NAME, '_randbelow_with_getrandbits', 270, 17, 270, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 270, 44, 271, 0),
    woosh.Token(woosh.COMMENT, '## --------------------------------------------------------', 273, 4, 273, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 273, 63, 274, 0),
    woosh.Token(woosh.COMMENT, '## ---- Methods below this point generate custom distributions', 274, 4, 274, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 274, 66, 275, 0),
    woosh.Token(woosh.COMMENT, '## ---- based on the methods defined above.  They do not', 275, 4, 275, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 275, 60, 276, 0),
    woosh.Token(woosh.COMMENT, '## ---- directly touch the underlying generator and only', 276, 4, 276, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 276, 60, 277, 0),
    woosh.Token(woosh.COMMENT, '## ---- access randomness through the methods:  random(),', 277, 4, 277, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 277, 61, 278, 0),
    woosh.Token(woosh.COMMENT, '## ---- getrandbits(), or _randbelow().', 278, 4, 278, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 278, 43, 279, 0),
    woosh.Token(woosh.COMMENT, '## -------------------- bytes methods ---------------------', 281, 4, 281, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 281, 63, 282, 0),
    woosh.Token(woosh.NAME, 'def', 283, 4, 283, 7),
    woosh.Token(woosh.NAME, 'randbytes', 283, 8, 283, 17),
    woosh.Token(woosh.OP, '(', 283, 17, 283, 18),
    woosh.Token(woosh.NAME, 'self', 283, 18, 283, 22),
    woosh.Token(woosh.OP, ',', 283, 22, 283, 23),
    woosh.Token(woosh.NAME, 'n', 283, 24, 283, 25),
    woosh.Token(woosh.OP, ')', 283, 25, 283, 26),
    woosh.Token(woosh.OP, ':', 283, 26, 283, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 283, 27, 284, 0),
    woosh.Token(woosh.INDENT, '        ', 284, 0, 284, 8),
    woosh.Token(woosh.STRING, '"""Generate n random bytes."""', 284, 8, 284, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 284, 38, 285, 0),
    woosh.Token(woosh.NAME, 'return', 285, 8, 285, 14),
    woosh.Token(woosh.NAME, 'self', 285, 15, 285, 19),
    woosh.Token(woosh.OP, '.', 285, 19, 285, 20),
    woosh.Token(woosh.NAME, 'getrandbits', 285, 20, 285, 31),
    woosh.Token(woosh.OP, '(', 285, 31, 285, 32),
    woosh.Token(woosh.NAME, 'n', 285, 32, 285, 33),
    woosh.Token(woosh.OP, '*', 285, 34, 285, 35),
    woosh.Token(woosh.NUMBER, '8', 285, 36, 285, 37),
    woosh.Token(woosh.OP, ')', 285, 37, 285, 38),
    woosh.Token(woosh.OP, '.', 285, 38, 285, 39),
    woosh.Token(woosh.NAME, 'to_bytes', 285, 39, 285, 47),
    woosh.Token(woosh.OP, '(', 285, 47, 285, 48),
    woosh.Token(woosh.NAME, 'n', 285, 48, 285, 49),
    woosh.Token(woosh.OP, ',', 285, 49, 285, 50),
    woosh.Token(woosh.STRING, "'little'", 285, 51, 285, 59),
    woosh.Token(woosh.OP, ')', 285, 59, 285, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 285, 60, 286, 0),
    woosh.Token(woosh.COMMENT, '## -------------------- integer methods  -------------------', 288, 4, 288, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 288, 64, 289, 0),
    woosh.Token(woosh.DEDENT, '    ', 290, 0, 290, 4),
    woosh.Token(woosh.NAME, 'def', 290, 4, 290, 7),
    woosh.Token(woosh.NAME, 'randrange', 290, 8, 290, 17),
    woosh.Token(woosh.OP, '(', 290, 17, 290, 18),
    woosh.Token(woosh.NAME, 'self', 290, 18, 290, 22),
    woosh.Token(woosh.OP, ',', 290, 22, 290, 23),
    woosh.Token(woosh.NAME, 'start', 290, 24, 290, 29),
    woosh.Token(woosh.OP, ',', 290, 29, 290, 30),
    woosh.Token(woosh.NAME, 'stop', 290, 31, 290, 35),
    woosh.Token(woosh.OP, '=', 290, 35, 290, 36),
    woosh.Token(woosh.NAME, 'None', 290, 36, 290, 40),
    woosh.Token(woosh.OP, ',', 290, 40, 290, 41),
    woosh.Token(woosh.NAME, 'step', 290, 42, 290, 46),
    woosh.Token(woosh.OP, '=', 290, 46, 290, 47),
    woosh.Token(woosh.NUMBER, '1', 290, 47, 290, 48),
    woosh.Token(woosh.OP, ')', 290, 48, 290, 49),
    woosh.Token(woosh.OP, ':', 290, 49, 290, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 290, 50, 291, 0),
    woosh.Token(woosh.INDENT, '        ', 291, 0, 291, 8),
    woosh.Token(woosh.STRING, '"""Choose a random item from range(start, stop[, step]).\r\n\r\n        This fixes the problem with randint() which includes the\r\n        endpoint; in Python this is usually not what you want.\r\n\r\n        """', 291, 8, 296, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 296, 11, 297, 0),
    woosh.Token(woosh.COMMENT, '# This code is a bit messy to make it fast for the', 298, 8, 298, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 298, 58, 299, 0),
    woosh.Token(woosh.COMMENT, '# common case while still doing adequate error checking.', 299, 8, 299, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 299, 64, 300, 0),
    woosh.Token(woosh.NAME, 'istart', 300, 8, 300, 14),
    woosh.Token(woosh.OP, '=', 300, 15, 300, 16),
    woosh.Token(woosh.NAME, 'int', 300, 17, 300, 20),
    woosh.Token(woosh.OP, '(', 300, 20, 300, 21),
    woosh.Token(woosh.NAME, 'start', 300, 21, 300, 26),
    woosh.Token(woosh.OP, ')', 300, 26, 300, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 300, 27, 301, 0),
    woosh.Token(woosh.NAME, 'if', 301, 8, 301, 10),
    woosh.Token(woosh.NAME, 'istart', 301, 11, 301, 17),
    woosh.Token(woosh.OP, '!=', 301, 18, 301, 20),
    woosh.Token(woosh.NAME, 'start', 301, 21, 301, 26),
    woosh.Token(woosh.OP, ':', 301, 26, 301, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 301, 27, 302, 0),
    woosh.Token(woosh.INDENT, '            ', 302, 0, 302, 12),
    woosh.Token(woosh.NAME, 'raise', 302, 12, 302, 17),
    woosh.Token(woosh.NAME, 'ValueError', 302, 18, 302, 28),
    woosh.Token(woosh.OP, '(', 302, 28, 302, 29),
    woosh.Token(woosh.STRING, '"non-integer arg 1 for randrange()"', 302, 29, 302, 64),
    woosh.Token(woosh.OP, ')', 302, 64, 302, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 302, 65, 303, 0),
    woosh.Token(woosh.DEDENT, '        ', 303, 0, 303, 8),
    woosh.Token(woosh.NAME, 'if', 303, 8, 303, 10),
    woosh.Token(woosh.NAME, 'stop', 303, 11, 303, 15),
    woosh.Token(woosh.NAME, 'is', 303, 16, 303, 18),
    woosh.Token(woosh.NAME, 'None', 303, 19, 303, 23),
    woosh.Token(woosh.OP, ':', 303, 23, 303, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 303, 24, 304, 0),
    woosh.Token(woosh.INDENT, '            ', 304, 0, 304, 12),
    woosh.Token(woosh.NAME, 'if', 304, 12, 304, 14),
    woosh.Token(woosh.NAME, 'istart', 304, 15, 304, 21),
    woosh.Token(woosh.OP, '>', 304, 22, 304, 23),
    woosh.Token(woosh.NUMBER, '0', 304, 24, 304, 25),
    woosh.Token(woosh.OP, ':', 304, 25, 304, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 304, 26, 305, 0),
    woosh.Token(woosh.INDENT, '                ', 305, 0, 305, 16),
    woosh.Token(woosh.NAME, 'return', 305, 16, 305, 22),
    woosh.Token(woosh.NAME, 'self', 305, 23, 305, 27),
    woosh.Token(woosh.OP, '.', 305, 27, 305, 28),
    woosh.Token(woosh.NAME, '_randbelow', 305, 28, 305, 38),
    woosh.Token(woosh.OP, '(', 305, 38, 305, 39),
    woosh.Token(woosh.NAME, 'istart', 305, 39, 305, 45),
    woosh.Token(woosh.OP, ')', 305, 45, 305, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 305, 46, 306, 0),
    woosh.Token(woosh.DEDENT, '            ', 306, 0, 306, 12),
    woosh.Token(woosh.NAME, 'raise', 306, 12, 306, 17),
    woosh.Token(woosh.NAME, 'ValueError', 306, 18, 306, 28),
    woosh.Token(woosh.OP, '(', 306, 28, 306, 29),
    woosh.Token(woosh.STRING, '"empty range for randrange()"', 306, 29, 306, 58),
    woosh.Token(woosh.OP, ')', 306, 58, 306, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 306, 59, 307, 0),
    woosh.Token(woosh.COMMENT, '# stop argument supplied.', 308, 8, 308, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 308, 33, 309, 0),
    woosh.Token(woosh.DEDENT, '        ', 309, 0, 309, 8),
    woosh.Token(woosh.NAME, 'istop', 309, 8, 309, 13),
    woosh.Token(woosh.OP, '=', 309, 14, 309, 15),
    woosh.Token(woosh.NAME, 'int', 309, 16, 309, 19),
    woosh.Token(woosh.OP, '(', 309, 19, 309, 20),
    woosh.Token(woosh.NAME, 'stop', 309, 20, 309, 24),
    woosh.Token(woosh.OP, ')', 309, 24, 309, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 309, 25, 310, 0),
    woosh.Token(woosh.NAME, 'if', 310, 8, 310, 10),
    woosh.Token(woosh.NAME, 'istop', 310, 11, 310, 16),
    woosh.Token(woosh.OP, '!=', 310, 17, 310, 19),
    woosh.Token(woosh.NAME, 'stop', 310, 20, 310, 24),
    woosh.Token(woosh.OP, ':', 310, 24, 310, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 310, 25, 311, 0),
    woosh.Token(woosh.INDENT, '            ', 311, 0, 311, 12),
    woosh.Token(woosh.NAME, 'raise', 311, 12, 311, 17),
    woosh.Token(woosh.NAME, 'ValueError', 311, 18, 311, 28),
    woosh.Token(woosh.OP, '(', 311, 28, 311, 29),
    woosh.Token(woosh.STRING, '"non-integer stop for randrange()"', 311, 29, 311, 63),
    woosh.Token(woosh.OP, ')', 311, 63, 311, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 311, 64, 312, 0),
    woosh.Token(woosh.DEDENT, '        ', 312, 0, 312, 8),
    woosh.Token(woosh.NAME, 'width', 312, 8, 312, 13),
    woosh.Token(woosh.OP, '=', 312, 14, 312, 15),
    woosh.Token(woosh.NAME, 'istop', 312, 16, 312, 21),
    woosh.Token(woosh.OP, '-', 312, 22, 312, 23),
    woosh.Token(woosh.NAME, 'istart', 312, 24, 312, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 312, 30, 313, 0),
    woosh.Token(woosh.NAME, 'if', 313, 8, 313, 10),
    woosh.Token(woosh.NAME, 'step', 313, 11, 313, 15),
    woosh.Token(woosh.OP, '==', 313, 16, 313, 18),
    woosh.Token(woosh.NUMBER, '1', 313, 19, 313, 20),
    woosh.Token(woosh.NAME, 'and', 313, 21, 313, 24),
    woosh.Token(woosh.NAME, 'width', 313, 25, 313, 30),
    woosh.Token(woosh.OP, '>', 313, 31, 313, 32),
    woosh.Token(woosh.NUMBER, '0', 313, 33, 313, 34),
    woosh.Token(woosh.OP, ':', 313, 34, 313, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 313, 35, 314, 0),
    woosh.Token(woosh.INDENT, '            ', 314, 0, 314, 12),
    woosh.Token(woosh.NAME, 'return', 314, 12, 314, 18),
    woosh.Token(woosh.NAME, 'istart', 314, 19, 314, 25),
    woosh.Token(woosh.OP, '+', 314, 26, 314, 27),
    woosh.Token(woosh.NAME, 'self', 314, 28, 314, 32),
    woosh.Token(woosh.OP, '.', 314, 32, 314, 33),
    woosh.Token(woosh.NAME, '_randbelow', 314, 33, 314, 43),
    woosh.Token(woosh.OP, '(', 314, 43, 314, 44),
    woosh.Token(woosh.NAME, 'width', 314, 44, 314, 49),
    woosh.Token(woosh.OP, ')', 314, 49, 314, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 314, 50, 315, 0),
    woosh.Token(woosh.DEDENT, '        ', 315, 0, 315, 8),
    woosh.Token(woosh.NAME, 'if', 315, 8, 315, 10),
    woosh.Token(woosh.NAME, 'step', 315, 11, 315, 15),
    woosh.Token(woosh.OP, '==', 315, 16, 315, 18),
    woosh.Token(woosh.NUMBER, '1', 315, 19, 315, 20),
    woosh.Token(woosh.OP, ':', 315, 20, 315, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 315, 21, 316, 0),
    woosh.Token(woosh.INDENT, '            ', 316, 0, 316, 12),
    woosh.Token(woosh.NAME, 'raise', 316, 12, 316, 17),
    woosh.Token(woosh.NAME, 'ValueError', 316, 18, 316, 28),
    woosh.Token(woosh.OP, '(', 316, 28, 316, 29),
    woosh.Token(woosh.STRING, '"empty range for randrange() (%d, %d, %d)"', 316, 29, 316, 71),
    woosh.Token(woosh.OP, '%', 316, 72, 316, 73),
    woosh.Token(woosh.OP, '(', 316, 74, 316, 75),
    woosh.Token(woosh.NAME, 'istart', 316, 75, 316, 81),
    woosh.Token(woosh.OP, ',', 316, 81, 316, 82),
    woosh.Token(woosh.NAME, 'istop', 316, 83, 316, 88),
    woosh.Token(woosh.OP, ',', 316, 88, 316, 89),
    woosh.Token(woosh.NAME, 'width', 316, 90, 316, 95),
    woosh.Token(woosh.OP, ')', 316, 95, 316, 96),
    woosh.Token(woosh.OP, ')', 316, 96, 316, 97),
    woosh.Token(woosh.NEWLINE, '\r\n', 316, 97, 317, 0),
    woosh.Token(woosh.COMMENT, '# Non-unit step argument supplied.', 318, 8, 318, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 318, 42, 319, 0),
    woosh.Token(woosh.DEDENT, '        ', 319, 0, 319, 8),
    woosh.Token(woosh.NAME, 'istep', 319, 8, 319, 13),
    woosh.Token(woosh.OP, '=', 319, 14, 319, 15),
    woosh.Token(woosh.NAME, 'int', 319, 16, 319, 19),
    woosh.Token(woosh.OP, '(', 319, 19, 319, 20),
    woosh.Token(woosh.NAME, 'step', 319, 20, 319, 24),
    woosh.Token(woosh.OP, ')', 319, 24, 319, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 319, 25, 320, 0),
    woosh.Token(woosh.NAME, 'if', 320, 8, 320, 10),
    woosh.Token(woosh.NAME, 'istep', 320, 11, 320, 16),
    woosh.Token(woosh.OP, '!=', 320, 17, 320, 19),
    woosh.Token(woosh.NAME, 'step', 320, 20, 320, 24),
    woosh.Token(woosh.OP, ':', 320, 24, 320, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 320, 25, 321, 0),
    woosh.Token(woosh.INDENT, '            ', 321, 0, 321, 12),
    woosh.Token(woosh.NAME, 'raise', 321, 12, 321, 17),
    woosh.Token(woosh.NAME, 'ValueError', 321, 18, 321, 28),
    woosh.Token(woosh.OP, '(', 321, 28, 321, 29),
    woosh.Token(woosh.STRING, '"non-integer step for randrange()"', 321, 29, 321, 63),
    woosh.Token(woosh.OP, ')', 321, 63, 321, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 321, 64, 322, 0),
    woosh.Token(woosh.DEDENT, '        ', 322, 0, 322, 8),
    woosh.Token(woosh.NAME, 'if', 322, 8, 322, 10),
    woosh.Token(woosh.NAME, 'istep', 322, 11, 322, 16),
    woosh.Token(woosh.OP, '>', 322, 17, 322, 18),
    woosh.Token(woosh.NUMBER, '0', 322, 19, 322, 20),
    woosh.Token(woosh.OP, ':', 322, 20, 322, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 322, 21, 323, 0),
    woosh.Token(woosh.INDENT, '            ', 323, 0, 323, 12),
    woosh.Token(woosh.NAME, 'n', 323, 12, 323, 13),
    woosh.Token(woosh.OP, '=', 323, 14, 323, 15),
    woosh.Token(woosh.OP, '(', 323, 16, 323, 17),
    woosh.Token(woosh.NAME, 'width', 323, 17, 323, 22),
    woosh.Token(woosh.OP, '+', 323, 23, 323, 24),
    woosh.Token(woosh.NAME, 'istep', 323, 25, 323, 30),
    woosh.Token(woosh.OP, '-', 323, 31, 323, 32),
    woosh.Token(woosh.NUMBER, '1', 323, 33, 323, 34),
    woosh.Token(woosh.OP, ')', 323, 34, 323, 35),
    woosh.Token(woosh.OP, '//', 323, 36, 323, 38),
    woosh.Token(woosh.NAME, 'istep', 323, 39, 323, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 323, 44, 324, 0),
    woosh.Token(woosh.DEDENT, '        ', 324, 0, 324, 8),
    woosh.Token(woosh.NAME, 'elif', 324, 8, 324, 12),
    woosh.Token(woosh.NAME, 'istep', 324, 13, 324, 18),
    woosh.Token(woosh.OP, '<', 324, 19, 324, 20),
    woosh.Token(woosh.NUMBER, '0', 324, 21, 324, 22),
    woosh.Token(woosh.OP, ':', 324, 22, 324, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 324, 23, 325, 0),
    woosh.Token(woosh.INDENT, '            ', 325, 0, 325, 12),
    woosh.Token(woosh.NAME, 'n', 325, 12, 325, 13),
    woosh.Token(woosh.OP, '=', 325, 14, 325, 15),
    woosh.Token(woosh.OP, '(', 325, 16, 325, 17),
    woosh.Token(woosh.NAME, 'width', 325, 17, 325, 22),
    woosh.Token(woosh.OP, '+', 325, 23, 325, 24),
    woosh.Token(woosh.NAME, 'istep', 325, 25, 325, 30),
    woosh.Token(woosh.OP, '+', 325, 31, 325, 32),
    woosh.Token(woosh.NUMBER, '1', 325, 33, 325, 34),
    woosh.Token(woosh.OP, ')', 325, 34, 325, 35),
    woosh.Token(woosh.OP, '//', 325, 36, 325, 38),
    woosh.Token(woosh.NAME, 'istep', 325, 39, 325, 44),
    woosh.Token(woosh.NEWLINE, '\r\n', 325, 44, 326, 0),
    woosh.Token(woosh.DEDENT, '        ', 326, 0, 326, 8),
    woosh.Token(woosh.NAME, 'else', 326, 8, 326, 12),
    woosh.Token(woosh.OP, ':', 326, 12, 326, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 326, 13, 327, 0),
    woosh.Token(woosh.INDENT, '            ', 327, 0, 327, 12),
    woosh.Token(woosh.NAME, 'raise', 327, 12, 327, 17),
    woosh.Token(woosh.NAME, 'ValueError', 327, 18, 327, 28),
    woosh.Token(woosh.OP, '(', 327, 28, 327, 29),
    woosh.Token(woosh.STRING, '"zero step for randrange()"', 327, 29, 327, 56),
    woosh.Token(woosh.OP, ')', 327, 56, 327, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 327, 57, 328, 0),
    woosh.Token(woosh.DEDENT, '        ', 329, 0, 329, 8),
    woosh.Token(woosh.NAME, 'if', 329, 8, 329, 10),
    woosh.Token(woosh.NAME, 'n', 329, 11, 329, 12),
    woosh.Token(woosh.OP, '<=', 329, 13, 329, 15),
    woosh.Token(woosh.NUMBER, '0', 329, 16, 329, 17),
    woosh.Token(woosh.OP, ':', 329, 17, 329, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 329, 18, 330, 0),
    woosh.Token(woosh.INDENT, '            ', 330, 0, 330, 12),
    woosh.Token(woosh.NAME, 'raise', 330, 12, 330, 17),
    woosh.Token(woosh.NAME, 'ValueError', 330, 18, 330, 28),
    woosh.Token(woosh.OP, '(', 330, 28, 330, 29),
    woosh.Token(woosh.STRING, '"empty range for randrange()"', 330, 29, 330, 58),
    woosh.Token(woosh.OP, ')', 330, 58, 330, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 330, 59, 331, 0),
    woosh.Token(woosh.DEDENT, '        ', 332, 0, 332, 8),
    woosh.Token(woosh.NAME, 'return', 332, 8, 332, 14),
    woosh.Token(woosh.NAME, 'istart', 332, 15, 332, 21),
    woosh.Token(woosh.OP, '+', 332, 22, 332, 23),
    woosh.Token(woosh.NAME, 'istep', 332, 24, 332, 29),
    woosh.Token(woosh.OP, '*', 332, 30, 332, 31),
    woosh.Token(woosh.NAME, 'self', 332, 32, 332, 36),
    woosh.Token(woosh.OP, '.', 332, 36, 332, 37),
    woosh.Token(woosh.NAME, '_randbelow', 332, 37, 332, 47),
    woosh.Token(woosh.OP, '(', 332, 47, 332, 48),
    woosh.Token(woosh.NAME, 'n', 332, 48, 332, 49),
    woosh.Token(woosh.OP, ')', 332, 49, 332, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 332, 50, 333, 0),
    woosh.Token(woosh.DEDENT, '    ', 334, 0, 334, 4),
    woosh.Token(woosh.NAME, 'def', 334, 4, 334, 7),
    woosh.Token(woosh.NAME, 'randint', 334, 8, 334, 15),
    woosh.Token(woosh.OP, '(', 334, 15, 334, 16),
    woosh.Token(woosh.NAME, 'self', 334, 16, 334, 20),
    woosh.Token(woosh.OP, ',', 334, 20, 334, 21),
    woosh.Token(woosh.NAME, 'a', 334, 22, 334, 23),
    woosh.Token(woosh.OP, ',', 334, 23, 334, 24),
    woosh.Token(woosh.NAME, 'b', 334, 25, 334, 26),
    woosh.Token(woosh.OP, ')', 334, 26, 334, 27),
    woosh.Token(woosh.OP, ':', 334, 27, 334, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 334, 28, 335, 0),
    woosh.Token(woosh.INDENT, '        ', 335, 0, 335, 8),
    woosh.Token(woosh.STRING, '"""Return random integer in range [a, b], including both end points.\r\n        """', 335, 8, 336, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 336, 11, 337, 0),
    woosh.Token(woosh.NAME, 'return', 338, 8, 338, 14),
    woosh.Token(woosh.NAME, 'self', 338, 15, 338, 19),
    woosh.Token(woosh.OP, '.', 338, 19, 338, 20),
    woosh.Token(woosh.NAME, 'randrange', 338, 20, 338, 29),
    woosh.Token(woosh.OP, '(', 338, 29, 338, 30),
    woosh.Token(woosh.NAME, 'a', 338, 30, 338, 31),
    woosh.Token(woosh.OP, ',', 338, 31, 338, 32),
    woosh.Token(woosh.NAME, 'b', 338, 33, 338, 34),
    woosh.Token(woosh.OP, '+', 338, 34, 338, 35),
    woosh.Token(woosh.NUMBER, '1', 338, 35, 338, 36),
    woosh.Token(woosh.OP, ')', 338, 36, 338, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 338, 37, 339, 0),
    woosh.Token(woosh.COMMENT, '## -------------------- sequence methods  -------------------', 341, 4, 341, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 341, 65, 342, 0),
    woosh.Token(woosh.DEDENT, '    ', 343, 0, 343, 4),
    woosh.Token(woosh.NAME, 'def', 343, 4, 343, 7),
    woosh.Token(woosh.NAME, 'choice', 343, 8, 343, 14),
    woosh.Token(woosh.OP, '(', 343, 14, 343, 15),
    woosh.Token(woosh.NAME, 'self', 343, 15, 343, 19),
    woosh.Token(woosh.OP, ',', 343, 19, 343, 20),
    woosh.Token(woosh.NAME, 'seq', 343, 21, 343, 24),
    woosh.Token(woosh.OP, ')', 343, 24, 343, 25),
    woosh.Token(woosh.OP, ':', 343, 25, 343, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 343, 26, 344, 0),
    woosh.Token(woosh.INDENT, '        ', 344, 0, 344, 8),
    woosh.Token(woosh.STRING, '"""Choose a random element from a non-empty sequence."""', 344, 8, 344, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 344, 64, 345, 0),
    woosh.Token(woosh.COMMENT, '# raises IndexError if seq is empty', 345, 8, 345, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 345, 43, 346, 0),
    woosh.Token(woosh.NAME, 'return', 346, 8, 346, 14),
    woosh.Token(woosh.NAME, 'seq', 346, 15, 346, 18),
    woosh.Token(woosh.OP, '[', 346, 18, 346, 19),
    woosh.Token(woosh.NAME, 'self', 346, 19, 346, 23),
    woosh.Token(woosh.OP, '.', 346, 23, 346, 24),
    woosh.Token(woosh.NAME, '_randbelow', 346, 24, 346, 34),
    woosh.Token(woosh.OP, '(', 346, 34, 346, 35),
    woosh.Token(woosh.NAME, 'len', 346, 35, 346, 38),
    woosh.Token(woosh.OP, '(', 346, 38, 346, 39),
    woosh.Token(woosh.NAME, 'seq', 346, 39, 346, 42),
    woosh.Token(woosh.OP, ')', 346, 42, 346, 43),
    woosh.Token(woosh.OP, ')', 346, 43, 346, 44),
    woosh.Token(woosh.OP, ']', 346, 44, 346, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 346, 45, 347, 0),
    woosh.Token(woosh.DEDENT, '    ', 348, 0, 348, 4),
    woosh.Token(woosh.NAME, 'def', 348, 4, 348, 7),
    woosh.Token(woosh.NAME, 'shuffle', 348, 8, 348, 15),
    woosh.Token(woosh.OP, '(', 348, 15, 348, 16),
    woosh.Token(woosh.NAME, 'self', 348, 16, 348, 20),
    woosh.Token(woosh.OP, ',', 348, 20, 348, 21),
    woosh.Token(woosh.NAME, 'x', 348, 22, 348, 23),
    woosh.Token(woosh.OP, ',', 348, 23, 348, 24),
    woosh.Token(woosh.NAME, 'random', 348, 25, 348, 31),
    woosh.Token(woosh.OP, '=', 348, 31, 348, 32),
    woosh.Token(woosh.NAME, 'None', 348, 32, 348, 36),
    woosh.Token(woosh.OP, ')', 348, 36, 348, 37),
    woosh.Token(woosh.OP, ':', 348, 37, 348, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 348, 38, 349, 0),
    woosh.Token(woosh.INDENT, '        ', 349, 0, 349, 8),
    woosh.Token(woosh.STRING, '"""Shuffle list x in place, and return None.\r\n\r\n        Optional argument random is a 0-argument function returning a\r\n        random float in [0.0, 1.0); if it is the default None, the\r\n        standard random.random will be used.\r\n\r\n        """', 349, 8, 355, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 355, 11, 356, 0),
    woosh.Token(woosh.NAME, 'if', 357, 8, 357, 10),
    woosh.Token(woosh.NAME, 'random', 357, 11, 357, 17),
    woosh.Token(woosh.NAME, 'is', 357, 18, 357, 20),
    woosh.Token(woosh.NAME, 'None', 357, 21, 357, 25),
    woosh.Token(woosh.OP, ':', 357, 25, 357, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 357, 26, 358, 0),
    woosh.Token(woosh.INDENT, '            ', 358, 0, 358, 12),
    woosh.Token(woosh.NAME, 'randbelow', 358, 12, 358, 21),
    woosh.Token(woosh.OP, '=', 358, 22, 358, 23),
    woosh.Token(woosh.NAME, 'self', 358, 24, 358, 28),
    woosh.Token(woosh.OP, '.', 358, 28, 358, 29),
    woosh.Token(woosh.NAME, '_randbelow', 358, 29, 358, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 358, 39, 359, 0),
    woosh.Token(woosh.NAME, 'for', 359, 12, 359, 15),
    woosh.Token(woosh.NAME, 'i', 359, 16, 359, 17),
    woosh.Token(woosh.NAME, 'in', 359, 18, 359, 20),
    woosh.Token(woosh.NAME, 'reversed', 359, 21, 359, 29),
    woosh.Token(woosh.OP, '(', 359, 29, 359, 30),
    woosh.Token(woosh.NAME, 'range', 359, 30, 359, 35),
    woosh.Token(woosh.OP, '(', 359, 35, 359, 36),
    woosh.Token(woosh.NUMBER, '1', 359, 36, 359, 37),
    woosh.Token(woosh.OP, ',', 359, 37, 359, 38),
    woosh.Token(woosh.NAME, 'len', 359, 39, 359, 42),
    woosh.Token(woosh.OP, '(', 359, 42, 359, 43),
    woosh.Token(woosh.NAME, 'x', 359, 43, 359, 44),
    woosh.Token(woosh.OP, ')', 359, 44, 359, 45),
    woosh.Token(woosh.OP, ')', 359, 45, 359, 46),
    woosh.Token(woosh.OP, ')', 359, 46, 359, 47),
    woosh.Token(woosh.OP, ':', 359, 47, 359, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 359, 48, 360, 0),
    woosh.Token(woosh.COMMENT, '# pick an element in x[:i+1] with which to exchange x[i]', 360, 16, 360, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 360, 72, 361, 0),
    woosh.Token(woosh.INDENT, '                ', 361, 0, 361, 16),
    woosh.Token(woosh.NAME, 'j', 361, 16, 361, 17),
    woosh.Token(woosh.OP, '=', 361, 18, 361, 19),
    woosh.Token(woosh.NAME, 'randbelow', 361, 20, 361, 29),
    woosh.Token(woosh.OP, '(', 361, 29, 361, 30),
    woosh.Token(woosh.NAME, 'i', 361, 30, 361, 31),
    woosh.Token(woosh.OP, '+', 361, 32, 361, 33),
    woosh.Token(woosh.NUMBER, '1', 361, 34, 361, 35),
    woosh.Token(woosh.OP, ')', 361, 35, 361, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 361, 36, 362, 0),
    woosh.Token(woosh.NAME, 'x', 362, 16, 362, 17),
    woosh.Token(woosh.OP, '[', 362, 17, 362, 18),
    woosh.Token(woosh.NAME, 'i', 362, 18, 362, 19),
    woosh.Token(woosh.OP, ']', 362, 19, 362, 20),
    woosh.Token(woosh.OP, ',', 362, 20, 362, 21),
    woosh.Token(woosh.NAME, 'x', 362, 22, 362, 23),
    woosh.Token(woosh.OP, '[', 362, 23, 362, 24),
    woosh.Token(woosh.NAME, 'j', 362, 24, 362, 25),
    woosh.Token(woosh.OP, ']', 362, 25, 362, 26),
    woosh.Token(woosh.OP, '=', 362, 27, 362, 28),
    woosh.Token(woosh.NAME, 'x', 362, 29, 362, 30),
    woosh.Token(woosh.OP, '[', 362, 30, 362, 31),
    woosh.Token(woosh.NAME, 'j', 362, 31, 362, 32),
    woosh.Token(woosh.OP, ']', 362, 32, 362, 33),
    woosh.Token(woosh.OP, ',', 362, 33, 362, 34),
    woosh.Token(woosh.NAME, 'x', 362, 35, 362, 36),
    woosh.Token(woosh.OP, '[', 362, 36, 362, 37),
    woosh.Token(woosh.NAME, 'i', 362, 37, 362, 38),
    woosh.Token(woosh.OP, ']', 362, 38, 362, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 362, 39, 363, 0),
    woosh.Token(woosh.DEDENT, '        ', 363, 0, 363, 8),
    woosh.Token(woosh.DEDENT, '', 363, 8, 363, 8),
    woosh.Token(woosh.NAME, 'else', 363, 8, 363, 12),
    woosh.Token(woosh.OP, ':', 363, 12, 363, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 363, 13, 364, 0),
    woosh.Token(woosh.INDENT, '            ', 364, 0, 364, 12),
    woosh.Token(woosh.NAME, '_warn', 364, 12, 364, 17),
    woosh.Token(woosh.OP, '(', 364, 17, 364, 18),
    woosh.Token(woosh.STRING, "'The *random* parameter to shuffle() has been deprecated\\n'", 364, 18, 364, 77),
    woosh.Token(woosh.STRING, "'since Python 3.9 and will be removed in a subsequent '", 365, 18, 365, 73),
    woosh.Token(woosh.STRING, "'version.'", 366, 18, 366, 28),
    woosh.Token(woosh.OP, ',', 366, 28, 366, 29),
    woosh.Token(woosh.NAME, 'DeprecationWarning', 367, 18, 367, 36),
    woosh.Token(woosh.OP, ',', 367, 36, 367, 37),
    woosh.Token(woosh.NUMBER, '2', 367, 38, 367, 39),
    woosh.Token(woosh.OP, ')', 367, 39, 367, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 367, 40, 368, 0),
    woosh.Token(woosh.NAME, 'floor', 368, 12, 368, 17),
    woosh.Token(woosh.OP, '=', 368, 18, 368, 19),
    woosh.Token(woosh.NAME, '_floor', 368, 20, 368, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 368, 26, 369, 0),
    woosh.Token(woosh.NAME, 'for', 369, 12, 369, 15),
    woosh.Token(woosh.NAME, 'i', 369, 16, 369, 17),
    woosh.Token(woosh.NAME, 'in', 369, 18, 369, 20),
    woosh.Token(woosh.NAME, 'reversed', 369, 21, 369, 29),
    woosh.Token(woosh.OP, '(', 369, 29, 369, 30),
    woosh.Token(woosh.NAME, 'range', 369, 30, 369, 35),
    woosh.Token(woosh.OP, '(', 369, 35, 369, 36),
    woosh.Token(woosh.NUMBER, '1', 369, 36, 369, 37),
    woosh.Token(woosh.OP, ',', 369, 37, 369, 38),
    woosh.Token(woosh.NAME, 'len', 369, 39, 369, 42),
    woosh.Token(woosh.OP, '(', 369, 42, 369, 43),
    woosh.Token(woosh.NAME, 'x', 369, 43, 369, 44),
    woosh.Token(woosh.OP, ')', 369, 44, 369, 45),
    woosh.Token(woosh.OP, ')', 369, 45, 369, 46),
    woosh.Token(woosh.OP, ')', 369, 46, 369, 47),
    woosh.Token(woosh.OP, ':', 369, 47, 369, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 369, 48, 370, 0),
    woosh.Token(woosh.COMMENT, '# pick an element in x[:i+1] with which to exchange x[i]', 370, 16, 370, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 370, 72, 371, 0),
    woosh.Token(woosh.INDENT, '                ', 371, 0, 371, 16),
    woosh.Token(woosh.NAME, 'j', 371, 16, 371, 17),
    woosh.Token(woosh.OP, '=', 371, 18, 371, 19),
    woosh.Token(woosh.NAME, 'floor', 371, 20, 371, 25),
    woosh.Token(woosh.OP, '(', 371, 25, 371, 26),
    woosh.Token(woosh.NAME, 'random', 371, 26, 371, 32),
    woosh.Token(woosh.OP, '(', 371, 32, 371, 33),
    woosh.Token(woosh.OP, ')', 371, 33, 371, 34),
    woosh.Token(woosh.OP, '*', 371, 35, 371, 36),
    woosh.Token(woosh.OP, '(', 371, 37, 371, 38),
    woosh.Token(woosh.NAME, 'i', 371, 38, 371, 39),
    woosh.Token(woosh.OP, '+', 371, 40, 371, 41),
    woosh.Token(woosh.NUMBER, '1', 371, 42, 371, 43),
    woosh.Token(woosh.OP, ')', 371, 43, 371, 44),
    woosh.Token(woosh.OP, ')', 371, 44, 371, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 371, 45, 372, 0),
    woosh.Token(woosh.NAME, 'x', 372, 16, 372, 17),
    woosh.Token(woosh.OP, '[', 372, 17, 372, 18),
    woosh.Token(woosh.NAME, 'i', 372, 18, 372, 19),
    woosh.Token(woosh.OP, ']', 372, 19, 372, 20),
    woosh.Token(woosh.OP, ',', 372, 20, 372, 21),
    woosh.Token(woosh.NAME, 'x', 372, 22, 372, 23),
    woosh.Token(woosh.OP, '[', 372, 23, 372, 24),
    woosh.Token(woosh.NAME, 'j', 372, 24, 372, 25),
    woosh.Token(woosh.OP, ']', 372, 25, 372, 26),
    woosh.Token(woosh.OP, '=', 372, 27, 372, 28),
    woosh.Token(woosh.NAME, 'x', 372, 29, 372, 30),
    woosh.Token(woosh.OP, '[', 372, 30, 372, 31),
    woosh.Token(woosh.NAME, 'j', 372, 31, 372, 32),
    woosh.Token(woosh.OP, ']', 372, 32, 372, 33),
    woosh.Token(woosh.OP, ',', 372, 33, 372, 34),
    woosh.Token(woosh.NAME, 'x', 372, 35, 372, 36),
    woosh.Token(woosh.OP, '[', 372, 36, 372, 37),
    woosh.Token(woosh.NAME, 'i', 372, 37, 372, 38),
    woosh.Token(woosh.OP, ']', 372, 38, 372, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 372, 39, 373, 0),
    woosh.Token(woosh.DEDENT, '    ', 374, 0, 374, 4),
    woosh.Token(woosh.DEDENT, '', 374, 4, 374, 4),
    woosh.Token(woosh.DEDENT, '', 374, 4, 374, 4),
    woosh.Token(woosh.NAME, 'def', 374, 4, 374, 7),
    woosh.Token(woosh.NAME, 'sample', 374, 8, 374, 14),
    woosh.Token(woosh.OP, '(', 374, 14, 374, 15),
    woosh.Token(woosh.NAME, 'self', 374, 15, 374, 19),
    woosh.Token(woosh.OP, ',', 374, 19, 374, 20),
    woosh.Token(woosh.NAME, 'population', 374, 21, 374, 31),
    woosh.Token(woosh.OP, ',', 374, 31, 374, 32),
    woosh.Token(woosh.NAME, 'k', 374, 33, 374, 34),
    woosh.Token(woosh.OP, ',', 374, 34, 374, 35),
    woosh.Token(woosh.OP, '*', 374, 36, 374, 37),
    woosh.Token(woosh.OP, ',', 374, 37, 374, 38),
    woosh.Token(woosh.NAME, 'counts', 374, 39, 374, 45),
    woosh.Token(woosh.OP, '=', 374, 45, 374, 46),
    woosh.Token(woosh.NAME, 'None', 374, 46, 374, 50),
    woosh.Token(woosh.OP, ')', 374, 50, 374, 51),
    woosh.Token(woosh.OP, ':', 374, 51, 374, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 374, 52, 375, 0),
    woosh.Token(woosh.INDENT, '        ', 375, 0, 375, 8),
    woosh.Token(woosh.STRING, '"""Chooses k unique random elements from a population sequence or set.\r\n\r\n        Returns a new list containing elements from the population while\r\n        leaving the original population unchanged.  The resulting list is\r\n        in selection order so that all sub-slices will also be valid random\r\n        samples.  This allows raffle winners (the sample) to be partitioned\r\n        into grand prize and second place winners (the subslices).\r\n\r\n        Members of the population need not be hashable or unique.  If the\r\n        population contains repeats, then each occurrence is a possible\r\n        selection in the sample.\r\n\r\n        Repeated elements can be specified one at a time or with the optional\r\n        counts parameter.  For example:\r\n\r\n            sample([\'red\', \'blue\'], counts=[4, 2], k=5)\r\n\r\n        is equivalent to:\r\n\r\n            sample([\'red\', \'red\', \'red\', \'red\', \'blue\', \'blue\'], k=5)\r\n\r\n        To choose a sample from a range of integers, use range() for the\r\n        population argument.  This is especially fast and space efficient\r\n        for sampling from a large population:\r\n\r\n            sample(range(10000000), 60)\r\n\r\n        """', 375, 8, 402, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 402, 11, 403, 0),
    woosh.Token(woosh.COMMENT, '# Sampling without replacement entails tracking either potential', 404, 8, 404, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 404, 72, 405, 0),
    woosh.Token(woosh.COMMENT, '# selections (the pool) in a list or previous selections in a set.', 405, 8, 405, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 405, 74, 406, 0),
    woosh.Token(woosh.COMMENT, '# When the number of selections is small compared to the', 407, 8, 407, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 407, 64, 408, 0),
    woosh.Token(woosh.COMMENT, '# population, then tracking selections is efficient, requiring', 408, 8, 408, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 408, 70, 409, 0),
    woosh.Token(woosh.COMMENT, '# only a small set and an occasional reselection.  For', 409, 8, 409, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 409, 62, 410, 0),
    woosh.Token(woosh.COMMENT, '# a larger number of selections, the pool tracking method is', 410, 8, 410, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 410, 68, 411, 0),
    woosh.Token(woosh.COMMENT, '# preferred since the list takes less space than the', 411, 8, 411, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 411, 60, 412, 0),
    woosh.Token(woosh.COMMENT, "# set and it doesn't suffer from frequent reselections.", 412, 8, 412, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 412, 63, 413, 0),
    woosh.Token(woosh.COMMENT, '# The number of calls to _randbelow() is kept at or near k, the', 414, 8, 414, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 414, 71, 415, 0),
    woosh.Token(woosh.COMMENT, '# theoretical minimum.  This is important because running time', 415, 8, 415, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 415, 70, 416, 0),
    woosh.Token(woosh.COMMENT, '# is dominated by _randbelow() and because it extracts the', 416, 8, 416, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 416, 66, 417, 0),
    woosh.Token(woosh.COMMENT, '# least entropy from the underlying random number generators.', 417, 8, 417, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 417, 69, 418, 0),
    woosh.Token(woosh.COMMENT, '# Memory requirements are kept to the smaller of a k-length', 419, 8, 419, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 419, 67, 420, 0),
    woosh.Token(woosh.COMMENT, '# set or an n-length list.', 420, 8, 420, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 420, 34, 421, 0),
    woosh.Token(woosh.COMMENT, '# There are other sampling algorithms that do not require', 422, 8, 422, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 422, 65, 423, 0),
    woosh.Token(woosh.COMMENT, '# auxiliary memory, but they were rejected because they made', 423, 8, 423, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 423, 68, 424, 0),
    woosh.Token(woosh.COMMENT, '# too many calls to _randbelow(), making them slower and', 424, 8, 424, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 424, 64, 425, 0),
    woosh.Token(woosh.COMMENT, '# causing them to eat more entropy than necessary.', 425, 8, 425, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 425, 58, 426, 0),
    woosh.Token(woosh.NAME, 'if', 427, 8, 427, 10),
    woosh.Token(woosh.NAME, 'isinstance', 427, 11, 427, 21),
    woosh.Token(woosh.OP, '(', 427, 21, 427, 22),
    woosh.Token(woosh.NAME, 'population', 427, 22, 427, 32),
    woosh.Token(woosh.OP, ',', 427, 32, 427, 33),
    woosh.Token(woosh.NAME, '_Set', 427, 34, 427, 38),
    woosh.Token(woosh.OP, ')', 427, 38, 427, 39),
    woosh.Token(woosh.OP, ':', 427, 39, 427, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 427, 40, 428, 0),
    woosh.Token(woosh.INDENT, '            ', 428, 0, 428, 12),
    woosh.Token(woosh.NAME, '_warn', 428, 12, 428, 17),
    woosh.Token(woosh.OP, '(', 428, 17, 428, 18),
    woosh.Token(woosh.STRING, "'Sampling from a set deprecated\\n'", 428, 18, 428, 52),
    woosh.Token(woosh.STRING, "'since Python 3.9 and will be removed in a subsequent version.'", 429, 18, 429, 81),
    woosh.Token(woosh.OP, ',', 429, 81, 429, 82),
    woosh.Token(woosh.NAME, 'DeprecationWarning', 430, 18, 430, 36),
    woosh.Token(woosh.OP, ',', 430, 36, 430, 37),
    woosh.Token(woosh.NUMBER, '2', 430, 38, 430, 39),
    woosh.Token(woosh.OP, ')', 430, 39, 430, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 430, 40, 431, 0),
    woosh.Token(woosh.NAME, 'population', 431, 12, 431, 22),
    woosh.Token(woosh.OP, '=', 431, 23, 431, 24),
    woosh.Token(woosh.NAME, 'tuple', 431, 25, 431, 30),
    woosh.Token(woosh.OP, '(', 431, 30, 431, 31),
    woosh.Token(woosh.NAME, 'population', 431, 31, 431, 41),
    woosh.Token(woosh.OP, ')', 431, 41, 431, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 431, 42, 432, 0),
    woosh.Token(woosh.DEDENT, '        ', 432, 0, 432, 8),
    woosh.Token(woosh.NAME, 'if', 432, 8, 432, 10),
    woosh.Token(woosh.NAME, 'not', 432, 11, 432, 14),
    woosh.Token(woosh.NAME, 'isinstance', 432, 15, 432, 25),
    woosh.Token(woosh.OP, '(', 432, 25, 432, 26),
    woosh.Token(woosh.NAME, 'population', 432, 26, 432, 36),
    woosh.Token(woosh.OP, ',', 432, 36, 432, 37),
    woosh.Token(woosh.NAME, '_Sequence', 432, 38, 432, 47),
    woosh.Token(woosh.OP, ')', 432, 47, 432, 48),
    woosh.Token(woosh.OP, ':', 432, 48, 432, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 432, 49, 433, 0),
    woosh.Token(woosh.INDENT, '            ', 433, 0, 433, 12),
    woosh.Token(woosh.NAME, 'raise', 433, 12, 433, 17),
    woosh.Token(woosh.NAME, 'TypeError', 433, 18, 433, 27),
    woosh.Token(woosh.OP, '(', 433, 27, 433, 28),
    woosh.Token(woosh.STRING, '"Population must be a sequence.  For dicts or sets, use sorted(d)."', 433, 28, 433, 95),
    woosh.Token(woosh.OP, ')', 433, 95, 433, 96),
    woosh.Token(woosh.NEWLINE, '\r\n', 433, 96, 434, 0),
    woosh.Token(woosh.DEDENT, '        ', 434, 0, 434, 8),
    woosh.Token(woosh.NAME, 'n', 434, 8, 434, 9),
    woosh.Token(woosh.OP, '=', 434, 10, 434, 11),
    woosh.Token(woosh.NAME, 'len', 434, 12, 434, 15),
    woosh.Token(woosh.OP, '(', 434, 15, 434, 16),
    woosh.Token(woosh.NAME, 'population', 434, 16, 434, 26),
    woosh.Token(woosh.OP, ')', 434, 26, 434, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 434, 27, 435, 0),
    woosh.Token(woosh.NAME, 'if', 435, 8, 435, 10),
    woosh.Token(woosh.NAME, 'counts', 435, 11, 435, 17),
    woosh.Token(woosh.NAME, 'is', 435, 18, 435, 20),
    woosh.Token(woosh.NAME, 'not', 435, 21, 435, 24),
    woosh.Token(woosh.NAME, 'None', 435, 25, 435, 29),
    woosh.Token(woosh.OP, ':', 435, 29, 435, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 435, 30, 436, 0),
    woosh.Token(woosh.INDENT, '            ', 436, 0, 436, 12),
    woosh.Token(woosh.NAME, 'cum_counts', 436, 12, 436, 22),
    woosh.Token(woosh.OP, '=', 436, 23, 436, 24),
    woosh.Token(woosh.NAME, 'list', 436, 25, 436, 29),
    woosh.Token(woosh.OP, '(', 436, 29, 436, 30),
    woosh.Token(woosh.NAME, '_accumulate', 436, 30, 436, 41),
    woosh.Token(woosh.OP, '(', 436, 41, 436, 42),
    woosh.Token(woosh.NAME, 'counts', 436, 42, 436, 48),
    woosh.Token(woosh.OP, ')', 436, 48, 436, 49),
    woosh.Token(woosh.OP, ')', 436, 49, 436, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 436, 50, 437, 0),
    woosh.Token(woosh.NAME, 'if', 437, 12, 437, 14),
    woosh.Token(woosh.NAME, 'len', 437, 15, 437, 18),
    woosh.Token(woosh.OP, '(', 437, 18, 437, 19),
    woosh.Token(woosh.NAME, 'cum_counts', 437, 19, 437, 29),
    woosh.Token(woosh.OP, ')', 437, 29, 437, 30),
    woosh.Token(woosh.OP, '!=', 437, 31, 437, 33),
    woosh.Token(woosh.NAME, 'n', 437, 34, 437, 35),
    woosh.Token(woosh.OP, ':', 437, 35, 437, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 437, 36, 438, 0),
    woosh.Token(woosh.INDENT, '                ', 438, 0, 438, 16),
    woosh.Token(woosh.NAME, 'raise', 438, 16, 438, 21),
    woosh.Token(woosh.NAME, 'ValueError', 438, 22, 438, 32),
    woosh.Token(woosh.OP, '(', 438, 32, 438, 33),
    woosh.Token(woosh.STRING, "'The number of counts does not match the population'", 438, 33, 438, 85),
    woosh.Token(woosh.OP, ')', 438, 85, 438, 86),
    woosh.Token(woosh.NEWLINE, '\r\n', 438, 86, 439, 0),
    woosh.Token(woosh.DEDENT, '            ', 439, 0, 439, 12),
    woosh.Token(woosh.NAME, 'total', 439, 12, 439, 17),
    woosh.Token(woosh.OP, '=', 439, 18, 439, 19),
    woosh.Token(woosh.NAME, 'cum_counts', 439, 20, 439, 30),
    woosh.Token(woosh.OP, '.', 439, 30, 439, 31),
    woosh.Token(woosh.NAME, 'pop', 439, 31, 439, 34),
    woosh.Token(woosh.OP, '(', 439, 34, 439, 35),
    woosh.Token(woosh.OP, ')', 439, 35, 439, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 439, 36, 440, 0),
    woosh.Token(woosh.NAME, 'if', 440, 12, 440, 14),
    woosh.Token(woosh.NAME, 'not', 440, 15, 440, 18),
    woosh.Token(woosh.NAME, 'isinstance', 440, 19, 440, 29),
    woosh.Token(woosh.OP, '(', 440, 29, 440, 30),
    woosh.Token(woosh.NAME, 'total', 440, 30, 440, 35),
    woosh.Token(woosh.OP, ',', 440, 35, 440, 36),
    woosh.Token(woosh.NAME, 'int', 440, 37, 440, 40),
    woosh.Token(woosh.OP, ')', 440, 40, 440, 41),
    woosh.Token(woosh.OP, ':', 440, 41, 440, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 440, 42, 441, 0),
    woosh.Token(woosh.INDENT, '                ', 441, 0, 441, 16),
    woosh.Token(woosh.NAME, 'raise', 441, 16, 441, 21),
    woosh.Token(woosh.NAME, 'TypeError', 441, 22, 441, 31),
    woosh.Token(woosh.OP, '(', 441, 31, 441, 32),
    woosh.Token(woosh.STRING, "'Counts must be integers'", 441, 32, 441, 57),
    woosh.Token(woosh.OP, ')', 441, 57, 441, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 441, 58, 442, 0),
    woosh.Token(woosh.DEDENT, '            ', 442, 0, 442, 12),
    woosh.Token(woosh.NAME, 'if', 442, 12, 442, 14),
    woosh.Token(woosh.NAME, 'total', 442, 15, 442, 20),
    woosh.Token(woosh.OP, '<=', 442, 21, 442, 23),
    woosh.Token(woosh.NUMBER, '0', 442, 24, 442, 25),
    woosh.Token(woosh.OP, ':', 442, 25, 442, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 442, 26, 443, 0),
    woosh.Token(woosh.INDENT, '                ', 443, 0, 443, 16),
    woosh.Token(woosh.NAME, 'raise', 443, 16, 443, 21),
    woosh.Token(woosh.NAME, 'ValueError', 443, 22, 443, 32),
    woosh.Token(woosh.OP, '(', 443, 32, 443, 33),
    woosh.Token(woosh.STRING, "'Total of counts must be greater than zero'", 443, 33, 443, 76),
    woosh.Token(woosh.OP, ')', 443, 76, 443, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 443, 77, 444, 0),
    woosh.Token(woosh.DEDENT, '            ', 444, 0, 444, 12),
    woosh.Token(woosh.NAME, 'selections', 444, 12, 444, 22),
    woosh.Token(woosh.OP, '=', 444, 23, 444, 24),
    woosh.Token(woosh.NAME, 'sample', 444, 25, 444, 31),
    woosh.Token(woosh.OP, '(', 444, 31, 444, 32),
    woosh.Token(woosh.NAME, 'range', 444, 32, 444, 37),
    woosh.Token(woosh.OP, '(', 444, 37, 444, 38),
    woosh.Token(woosh.NAME, 'total', 444, 38, 444, 43),
    woosh.Token(woosh.OP, ')', 444, 43, 444, 44),
    woosh.Token(woosh.OP, ',', 444, 44, 444, 45),
    woosh.Token(woosh.NAME, 'k', 444, 46, 444, 47),
    woosh.Token(woosh.OP, '=', 444, 47, 444, 48),
    woosh.Token(woosh.NAME, 'k', 444, 48, 444, 49),
    woosh.Token(woosh.OP, ')', 444, 49, 444, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 444, 50, 445, 0),
    woosh.Token(woosh.NAME, 'bisect', 445, 12, 445, 18),
    woosh.Token(woosh.OP, '=', 445, 19, 445, 20),
    woosh.Token(woosh.NAME, '_bisect', 445, 21, 445, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 445, 28, 446, 0),
    woosh.Token(woosh.NAME, 'return', 446, 12, 446, 18),
    woosh.Token(woosh.OP, '[', 446, 19, 446, 20),
    woosh.Token(woosh.NAME, 'population', 446, 20, 446, 30),
    woosh.Token(woosh.OP, '[', 446, 30, 446, 31),
    woosh.Token(woosh.NAME, 'bisect', 446, 31, 446, 37),
    woosh.Token(woosh.OP, '(', 446, 37, 446, 38),
    woosh.Token(woosh.NAME, 'cum_counts', 446, 38, 446, 48),
    woosh.Token(woosh.OP, ',', 446, 48, 446, 49),
    woosh.Token(woosh.NAME, 's', 446, 50, 446, 51),
    woosh.Token(woosh.OP, ')', 446, 51, 446, 52),
    woosh.Token(woosh.OP, ']', 446, 52, 446, 53),
    woosh.Token(woosh.NAME, 'for', 446, 54, 446, 57),
    woosh.Token(woosh.NAME, 's', 446, 58, 446, 59),
    woosh.Token(woosh.NAME, 'in', 446, 60, 446, 62),
    woosh.Token(woosh.NAME, 'selections', 446, 63, 446, 73),
    woosh.Token(woosh.OP, ']', 446, 73, 446, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 446, 74, 447, 0),
    woosh.Token(woosh.DEDENT, '        ', 447, 0, 447, 8),
    woosh.Token(woosh.NAME, 'randbelow', 447, 8, 447, 17),
    woosh.Token(woosh.OP, '=', 447, 18, 447, 19),
    woosh.Token(woosh.NAME, 'self', 447, 20, 447, 24),
    woosh.Token(woosh.OP, '.', 447, 24, 447, 25),
    woosh.Token(woosh.NAME, '_randbelow', 447, 25, 447, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 447, 35, 448, 0),
    woosh.Token(woosh.NAME, 'if', 448, 8, 448, 10),
    woosh.Token(woosh.NAME, 'not', 448, 11, 448, 14),
    woosh.Token(woosh.NUMBER, '0', 448, 15, 448, 16),
    woosh.Token(woosh.OP, '<=', 448, 17, 448, 19),
    woosh.Token(woosh.NAME, 'k', 448, 20, 448, 21),
    woosh.Token(woosh.OP, '<=', 448, 22, 448, 24),
    woosh.Token(woosh.NAME, 'n', 448, 25, 448, 26),
    woosh.Token(woosh.OP, ':', 448, 26, 448, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 448, 27, 449, 0),
    woosh.Token(woosh.INDENT, '            ', 449, 0, 449, 12),
    woosh.Token(woosh.NAME, 'raise', 449, 12, 449, 17),
    woosh.Token(woosh.NAME, 'ValueError', 449, 18, 449, 28),
    woosh.Token(woosh.OP, '(', 449, 28, 449, 29),
    woosh.Token(woosh.STRING, '"Sample larger than population or is negative"', 449, 29, 449, 75),
    woosh.Token(woosh.OP, ')', 449, 75, 449, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 449, 76, 450, 0),
    woosh.Token(woosh.DEDENT, '        ', 450, 0, 450, 8),
    woosh.Token(woosh.NAME, 'result', 450, 8, 450, 14),
    woosh.Token(woosh.OP, '=', 450, 15, 450, 16),
    woosh.Token(woosh.OP, '[', 450, 17, 450, 18),
    woosh.Token(woosh.NAME, 'None', 450, 18, 450, 22),
    woosh.Token(woosh.OP, ']', 450, 22, 450, 23),
    woosh.Token(woosh.OP, '*', 450, 24, 450, 25),
    woosh.Token(woosh.NAME, 'k', 450, 26, 450, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 450, 27, 451, 0),
    woosh.Token(woosh.NAME, 'setsize', 451, 8, 451, 15),
    woosh.Token(woosh.OP, '=', 451, 16, 451, 17),
    woosh.Token(woosh.NUMBER, '21', 451, 18, 451, 20),
    woosh.Token(woosh.COMMENT, '# size of a small set minus size of an empty list', 451, 28, 451, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 451, 77, 452, 0),
    woosh.Token(woosh.NAME, 'if', 452, 8, 452, 10),
    woosh.Token(woosh.NAME, 'k', 452, 11, 452, 12),
    woosh.Token(woosh.OP, '>', 452, 13, 452, 14),
    woosh.Token(woosh.NUMBER, '5', 452, 15, 452, 16),
    woosh.Token(woosh.OP, ':', 452, 16, 452, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 452, 17, 453, 0),
    woosh.Token(woosh.INDENT, '            ', 453, 0, 453, 12),
    woosh.Token(woosh.NAME, 'setsize', 453, 12, 453, 19),
    woosh.Token(woosh.OP, '+=', 453, 20, 453, 22),
    woosh.Token(woosh.NUMBER, '4', 453, 23, 453, 24),
    woosh.Token(woosh.OP, '**', 453, 25, 453, 27),
    woosh.Token(woosh.NAME, '_ceil', 453, 28, 453, 33),
    woosh.Token(woosh.OP, '(', 453, 33, 453, 34),
    woosh.Token(woosh.NAME, '_log', 453, 34, 453, 38),
    woosh.Token(woosh.OP, '(', 453, 38, 453, 39),
    woosh.Token(woosh.NAME, 'k', 453, 39, 453, 40),
    woosh.Token(woosh.OP, '*', 453, 41, 453, 42),
    woosh.Token(woosh.NUMBER, '3', 453, 43, 453, 44),
    woosh.Token(woosh.OP, ',', 453, 44, 453, 45),
    woosh.Token(woosh.NUMBER, '4', 453, 46, 453, 47),
    woosh.Token(woosh.OP, ')', 453, 47, 453, 48),
    woosh.Token(woosh.OP, ')', 453, 48, 453, 49),
    woosh.Token(woosh.COMMENT, '# table size for big sets', 453, 51, 453, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 453, 76, 454, 0),
    woosh.Token(woosh.DEDENT, '        ', 454, 0, 454, 8),
    woosh.Token(woosh.NAME, 'if', 454, 8, 454, 10),
    woosh.Token(woosh.NAME, 'n', 454, 11, 454, 12),
    woosh.Token(woosh.OP, '<=', 454, 13, 454, 15),
    woosh.Token(woosh.NAME, 'setsize', 454, 16, 454, 23),
    woosh.Token(woosh.OP, ':', 454, 23, 454, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 454, 24, 455, 0),
    woosh.Token(woosh.COMMENT, '# An n-length list is smaller than a k-length set.', 455, 12, 455, 62),
    woosh.Token(woosh.NEWLINE, '\r\n', 455, 62, 456, 0),
    woosh.Token(woosh.COMMENT, '# Invariant:  non-selected at pool[0 : n-i]', 456, 12, 456, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 456, 55, 457, 0),
    woosh.Token(woosh.INDENT, '            ', 457, 0, 457, 12),
    woosh.Token(woosh.NAME, 'pool', 457, 12, 457, 16),
    woosh.Token(woosh.OP, '=', 457, 17, 457, 18),
    woosh.Token(woosh.NAME, 'list', 457, 19, 457, 23),
    woosh.Token(woosh.OP, '(', 457, 23, 457, 24),
    woosh.Token(woosh.NAME, 'population', 457, 24, 457, 34),
    woosh.Token(woosh.OP, ')', 457, 34, 457, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 457, 35, 458, 0),
    woosh.Token(woosh.NAME, 'for', 458, 12, 458, 15),
    woosh.Token(woosh.NAME, 'i', 458, 16, 458, 17),
    woosh.Token(woosh.NAME, 'in', 458, 18, 458, 20),
    woosh.Token(woosh.NAME, 'range', 458, 21, 458, 26),
    woosh.Token(woosh.OP, '(', 458, 26, 458, 27),
    woosh.Token(woosh.NAME, 'k', 458, 27, 458, 28),
    woosh.Token(woosh.OP, ')', 458, 28, 458, 29),
    woosh.Token(woosh.OP, ':', 458, 29, 458, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 458, 30, 459, 0),
    woosh.Token(woosh.INDENT, '                ', 459, 0, 459, 16),
    woosh.Token(woosh.NAME, 'j', 459, 16, 459, 17),
    woosh.Token(woosh.OP, '=', 459, 18, 459, 19),
    woosh.Token(woosh.NAME, 'randbelow', 459, 20, 459, 29),
    woosh.Token(woosh.OP, '(', 459, 29, 459, 30),
    woosh.Token(woosh.NAME, 'n', 459, 30, 459, 31),
    woosh.Token(woosh.OP, '-', 459, 32, 459, 33),
    woosh.Token(woosh.NAME, 'i', 459, 34, 459, 35),
    woosh.Token(woosh.OP, ')', 459, 35, 459, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 459, 36, 460, 0),
    woosh.Token(woosh.NAME, 'result', 460, 16, 460, 22),
    woosh.Token(woosh.OP, '[', 460, 22, 460, 23),
    woosh.Token(woosh.NAME, 'i', 460, 23, 460, 24),
    woosh.Token(woosh.OP, ']', 460, 24, 460, 25),
    woosh.Token(woosh.OP, '=', 460, 26, 460, 27),
    woosh.Token(woosh.NAME, 'pool', 460, 28, 460, 32),
    woosh.Token(woosh.OP, '[', 460, 32, 460, 33),
    woosh.Token(woosh.NAME, 'j', 460, 33, 460, 34),
    woosh.Token(woosh.OP, ']', 460, 34, 460, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 460, 35, 461, 0),
    woosh.Token(woosh.NAME, 'pool', 461, 16, 461, 20),
    woosh.Token(woosh.OP, '[', 461, 20, 461, 21),
    woosh.Token(woosh.NAME, 'j', 461, 21, 461, 22),
    woosh.Token(woosh.OP, ']', 461, 22, 461, 23),
    woosh.Token(woosh.OP, '=', 461, 24, 461, 25),
    woosh.Token(woosh.NAME, 'pool', 461, 26, 461, 30),
    woosh.Token(woosh.OP, '[', 461, 30, 461, 31),
    woosh.Token(woosh.NAME, 'n', 461, 31, 461, 32),
    woosh.Token(woosh.OP, '-', 461, 33, 461, 34),
    woosh.Token(woosh.NAME, 'i', 461, 35, 461, 36),
    woosh.Token(woosh.OP, '-', 461, 37, 461, 38),
    woosh.Token(woosh.NUMBER, '1', 461, 39, 461, 40),
    woosh.Token(woosh.OP, ']', 461, 40, 461, 41),
    woosh.Token(woosh.COMMENT, '# move non-selected item into vacancy', 461, 43, 461, 80),
    woosh.Token(woosh.NEWLINE, '\r\n', 461, 80, 462, 0),
    woosh.Token(woosh.DEDENT, '        ', 462, 0, 462, 8),
    woosh.Token(woosh.DEDENT, '', 462, 8, 462, 8),
    woosh.Token(woosh.NAME, 'else', 462, 8, 462, 12),
    woosh.Token(woosh.OP, ':', 462, 12, 462, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 462, 13, 463, 0),
    woosh.Token(woosh.INDENT, '            ', 463, 0, 463, 12),
    woosh.Token(woosh.NAME, 'selected', 463, 12, 463, 20),
    woosh.Token(woosh.OP, '=', 463, 21, 463, 22),
    woosh.Token(woosh.NAME, 'set', 463, 23, 463, 26),
    woosh.Token(woosh.OP, '(', 463, 26, 463, 27),
    woosh.Token(woosh.OP, ')', 463, 27, 463, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 463, 28, 464, 0),
    woosh.Token(woosh.NAME, 'selected_add', 464, 12, 464, 24),
    woosh.Token(woosh.OP, '=', 464, 25, 464, 26),
    woosh.Token(woosh.NAME, 'selected', 464, 27, 464, 35),
    woosh.Token(woosh.OP, '.', 464, 35, 464, 36),
    woosh.Token(woosh.NAME, 'add', 464, 36, 464, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 464, 39, 465, 0),
    woosh.Token(woosh.NAME, 'for', 465, 12, 465, 15),
    woosh.Token(woosh.NAME, 'i', 465, 16, 465, 17),
    woosh.Token(woosh.NAME, 'in', 465, 18, 465, 20),
    woosh.Token(woosh.NAME, 'range', 465, 21, 465, 26),
    woosh.Token(woosh.OP, '(', 465, 26, 465, 27),
    woosh.Token(woosh.NAME, 'k', 465, 27, 465, 28),
    woosh.Token(woosh.OP, ')', 465, 28, 465, 29),
    woosh.Token(woosh.OP, ':', 465, 29, 465, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 465, 30, 466, 0),
    woosh.Token(woosh.INDENT, '                ', 466, 0, 466, 16),
    woosh.Token(woosh.NAME, 'j', 466, 16, 466, 17),
    woosh.Token(woosh.OP, '=', 466, 18, 466, 19),
    woosh.Token(woosh.NAME, 'randbelow', 466, 20, 466, 29),
    woosh.Token(woosh.OP, '(', 466, 29, 466, 30),
    woosh.Token(woosh.NAME, 'n', 466, 30, 466, 31),
    woosh.Token(woosh.OP, ')', 466, 31, 466, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 466, 32, 467, 0),
    woosh.Token(woosh.NAME, 'while', 467, 16, 467, 21),
    woosh.Token(woosh.NAME, 'j', 467, 22, 467, 23),
    woosh.Token(woosh.NAME, 'in', 467, 24, 467, 26),
    woosh.Token(woosh.NAME, 'selected', 467, 27, 467, 35),
    woosh.Token(woosh.OP, ':', 467, 35, 467, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 467, 36, 468, 0),
    woosh.Token(woosh.INDENT, '                    ', 468, 0, 468, 20),
    woosh.Token(woosh.NAME, 'j', 468, 20, 468, 21),
    woosh.Token(woosh.OP, '=', 468, 22, 468, 23),
    woosh.Token(woosh.NAME, 'randbelow', 468, 24, 468, 33),
    woosh.Token(woosh.OP, '(', 468, 33, 468, 34),
    woosh.Token(woosh.NAME, 'n', 468, 34, 468, 35),
    woosh.Token(woosh.OP, ')', 468, 35, 468, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 468, 36, 469, 0),
    woosh.Token(woosh.DEDENT, '                ', 469, 0, 469, 16),
    woosh.Token(woosh.NAME, 'selected_add', 469, 16, 469, 28),
    woosh.Token(woosh.OP, '(', 469, 28, 469, 29),
    woosh.Token(woosh.NAME, 'j', 469, 29, 469, 30),
    woosh.Token(woosh.OP, ')', 469, 30, 469, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 469, 31, 470, 0),
    woosh.Token(woosh.NAME, 'result', 470, 16, 470, 22),
    woosh.Token(woosh.OP, '[', 470, 22, 470, 23),
    woosh.Token(woosh.NAME, 'i', 470, 23, 470, 24),
    woosh.Token(woosh.OP, ']', 470, 24, 470, 25),
    woosh.Token(woosh.OP, '=', 470, 26, 470, 27),
    woosh.Token(woosh.NAME, 'population', 470, 28, 470, 38),
    woosh.Token(woosh.OP, '[', 470, 38, 470, 39),
    woosh.Token(woosh.NAME, 'j', 470, 39, 470, 40),
    woosh.Token(woosh.OP, ']', 470, 40, 470, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 470, 41, 471, 0),
    woosh.Token(woosh.DEDENT, '        ', 471, 0, 471, 8),
    woosh.Token(woosh.DEDENT, '', 471, 8, 471, 8),
    woosh.Token(woosh.NAME, 'return', 471, 8, 471, 14),
    woosh.Token(woosh.NAME, 'result', 471, 15, 471, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 471, 21, 472, 0),
    woosh.Token(woosh.DEDENT, '    ', 473, 0, 473, 4),
    woosh.Token(woosh.NAME, 'def', 473, 4, 473, 7),
    woosh.Token(woosh.NAME, 'choices', 473, 8, 473, 15),
    woosh.Token(woosh.OP, '(', 473, 15, 473, 16),
    woosh.Token(woosh.NAME, 'self', 473, 16, 473, 20),
    woosh.Token(woosh.OP, ',', 473, 20, 473, 21),
    woosh.Token(woosh.NAME, 'population', 473, 22, 473, 32),
    woosh.Token(woosh.OP, ',', 473, 32, 473, 33),
    woosh.Token(woosh.NAME, 'weights', 473, 34, 473, 41),
    woosh.Token(woosh.OP, '=', 473, 41, 473, 42),
    woosh.Token(woosh.NAME, 'None', 473, 42, 473, 46),
    woosh.Token(woosh.OP, ',', 473, 46, 473, 47),
    woosh.Token(woosh.OP, '*', 473, 48, 473, 49),
    woosh.Token(woosh.OP, ',', 473, 49, 473, 50),
    woosh.Token(woosh.NAME, 'cum_weights', 473, 51, 473, 62),
    woosh.Token(woosh.OP, '=', 473, 62, 473, 63),
    woosh.Token(woosh.NAME, 'None', 473, 63, 473, 67),
    woosh.Token(woosh.OP, ',', 473, 67, 473, 68),
    woosh.Token(woosh.NAME, 'k', 473, 69, 473, 70),
    woosh.Token(woosh.OP, '=', 473, 70, 473, 71),
    woosh.Token(woosh.NUMBER, '1', 473, 71, 473, 72),
    woosh.Token(woosh.OP, ')', 473, 72, 473, 73),
    woosh.Token(woosh.OP, ':', 473, 73, 473, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 473, 74, 474, 0),
    woosh.Token(woosh.INDENT, '        ', 474, 0, 474, 8),
    woosh.Token(woosh.STRING, '"""Return a k sized list of population elements chosen with replacement.\r\n\r\n        If the relative weights or cumulative weights are not specified,\r\n        the selections are made with equal probability.\r\n\r\n        """', 474, 8, 479, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 479, 11, 480, 0),
    woosh.Token(woosh.NAME, 'random', 480, 8, 480, 14),
    woosh.Token(woosh.OP, '=', 480, 15, 480, 16),
    woosh.Token(woosh.NAME, 'self', 480, 17, 480, 21),
    woosh.Token(woosh.OP, '.', 480, 21, 480, 22),
    woosh.Token(woosh.NAME, 'random', 480, 22, 480, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 480, 28, 481, 0),
    woosh.Token(woosh.NAME, 'n', 481, 8, 481, 9),
    woosh.Token(woosh.OP, '=', 481, 10, 481, 11),
    woosh.Token(woosh.NAME, 'len', 481, 12, 481, 15),
    woosh.Token(woosh.OP, '(', 481, 15, 481, 16),
    woosh.Token(woosh.NAME, 'population', 481, 16, 481, 26),
    woosh.Token(woosh.OP, ')', 481, 26, 481, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 481, 27, 482, 0),
    woosh.Token(woosh.NAME, 'if', 482, 8, 482, 10),
    woosh.Token(woosh.NAME, 'cum_weights', 482, 11, 482, 22),
    woosh.Token(woosh.NAME, 'is', 482, 23, 482, 25),
    woosh.Token(woosh.NAME, 'None', 482, 26, 482, 30),
    woosh.Token(woosh.OP, ':', 482, 30, 482, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 482, 31, 483, 0),
    woosh.Token(woosh.INDENT, '            ', 483, 0, 483, 12),
    woosh.Token(woosh.NAME, 'if', 483, 12, 483, 14),
    woosh.Token(woosh.NAME, 'weights', 483, 15, 483, 22),
    woosh.Token(woosh.NAME, 'is', 483, 23, 483, 25),
    woosh.Token(woosh.NAME, 'None', 483, 26, 483, 30),
    woosh.Token(woosh.OP, ':', 483, 30, 483, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 483, 31, 484, 0),
    woosh.Token(woosh.INDENT, '                ', 484, 0, 484, 16),
    woosh.Token(woosh.NAME, 'floor', 484, 16, 484, 21),
    woosh.Token(woosh.OP, '=', 484, 22, 484, 23),
    woosh.Token(woosh.NAME, '_floor', 484, 24, 484, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 484, 30, 485, 0),
    woosh.Token(woosh.NAME, 'n', 485, 16, 485, 17),
    woosh.Token(woosh.OP, '+=', 485, 18, 485, 20),
    woosh.Token(woosh.NUMBER, '0.0', 485, 21, 485, 24),
    woosh.Token(woosh.COMMENT, '# convert to float for a small speed improvement', 485, 28, 485, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 485, 76, 486, 0),
    woosh.Token(woosh.NAME, 'return', 486, 16, 486, 22),
    woosh.Token(woosh.OP, '[', 486, 23, 486, 24),
    woosh.Token(woosh.NAME, 'population', 486, 24, 486, 34),
    woosh.Token(woosh.OP, '[', 486, 34, 486, 35),
    woosh.Token(woosh.NAME, 'floor', 486, 35, 486, 40),
    woosh.Token(woosh.OP, '(', 486, 40, 486, 41),
    woosh.Token(woosh.NAME, 'random', 486, 41, 486, 47),
    woosh.Token(woosh.OP, '(', 486, 47, 486, 48),
    woosh.Token(woosh.OP, ')', 486, 48, 486, 49),
    woosh.Token(woosh.OP, '*', 486, 50, 486, 51),
    woosh.Token(woosh.NAME, 'n', 486, 52, 486, 53),
    woosh.Token(woosh.OP, ')', 486, 53, 486, 54),
    woosh.Token(woosh.OP, ']', 486, 54, 486, 55),
    woosh.Token(woosh.NAME, 'for', 486, 56, 486, 59),
    woosh.Token(woosh.NAME, 'i', 486, 60, 486, 61),
    woosh.Token(woosh.NAME, 'in', 486, 62, 486, 64),
    woosh.Token(woosh.NAME, '_repeat', 486, 65, 486, 72),
    woosh.Token(woosh.OP, '(', 486, 72, 486, 73),
    woosh.Token(woosh.NAME, 'None', 486, 73, 486, 77),
    woosh.Token(woosh.OP, ',', 486, 77, 486, 78),
    woosh.Token(woosh.NAME, 'k', 486, 79, 486, 80),
    woosh.Token(woosh.OP, ')', 486, 80, 486, 81),
    woosh.Token(woosh.OP, ']', 486, 81, 486, 82),
    woosh.Token(woosh.NEWLINE, '\r\n', 486, 82, 487, 0),
    woosh.Token(woosh.DEDENT, '            ', 487, 0, 487, 12),
    woosh.Token(woosh.NAME, 'cum_weights', 487, 12, 487, 23),
    woosh.Token(woosh.OP, '=', 487, 24, 487, 25),
    woosh.Token(woosh.NAME, 'list', 487, 26, 487, 30),
    woosh.Token(woosh.OP, '(', 487, 30, 487, 31),
    woosh.Token(woosh.NAME, '_accumulate', 487, 31, 487, 42),
    woosh.Token(woosh.OP, '(', 487, 42, 487, 43),
    woosh.Token(woosh.NAME, 'weights', 487, 43, 487, 50),
    woosh.Token(woosh.OP, ')', 487, 50, 487, 51),
    woosh.Token(woosh.OP, ')', 487, 51, 487, 52),
    woosh.Token(woosh.NEWLINE, '\r\n', 487, 52, 488, 0),
    woosh.Token(woosh.DEDENT, '        ', 488, 0, 488, 8),
    woosh.Token(woosh.NAME, 'elif', 488, 8, 488, 12),
    woosh.Token(woosh.NAME, 'weights', 488, 13, 488, 20),
    woosh.Token(woosh.NAME, 'is', 488, 21, 488, 23),
    woosh.Token(woosh.NAME, 'not', 488, 24, 488, 27),
    woosh.Token(woosh.NAME, 'None', 488, 28, 488, 32),
    woosh.Token(woosh.OP, ':', 488, 32, 488, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 488, 33, 489, 0),
    woosh.Token(woosh.INDENT, '            ', 489, 0, 489, 12),
    woosh.Token(woosh.NAME, 'raise', 489, 12, 489, 17),
    woosh.Token(woosh.NAME, 'TypeError', 489, 18, 489, 27),
    woosh.Token(woosh.OP, '(', 489, 27, 489, 28),
    woosh.Token(woosh.STRING, "'Cannot specify both weights and cumulative weights'", 489, 28, 489, 80),
    woosh.Token(woosh.OP, ')', 489, 80, 489, 81),
    woosh.Token(woosh.NEWLINE, '\r\n', 489, 81, 490, 0),
    woosh.Token(woosh.DEDENT, '        ', 490, 0, 490, 8),
    woosh.Token(woosh.NAME, 'if', 490, 8, 490, 10),
    woosh.Token(woosh.NAME, 'len', 490, 11, 490, 14),
    woosh.Token(woosh.OP, '(', 490, 14, 490, 15),
    woosh.Token(woosh.NAME, 'cum_weights', 490, 15, 490, 26),
    woosh.Token(woosh.OP, ')', 490, 26, 490, 27),
    woosh.Token(woosh.OP, '!=', 490, 28, 490, 30),
    woosh.Token(woosh.NAME, 'n', 490, 31, 490, 32),
    woosh.Token(woosh.OP, ':', 490, 32, 490, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 490, 33, 491, 0),
    woosh.Token(woosh.INDENT, '            ', 491, 0, 491, 12),
    woosh.Token(woosh.NAME, 'raise', 491, 12, 491, 17),
    woosh.Token(woosh.NAME, 'ValueError', 491, 18, 491, 28),
    woosh.Token(woosh.OP, '(', 491, 28, 491, 29),
    woosh.Token(woosh.STRING, "'The number of weights does not match the population'", 491, 29, 491, 82),
    woosh.Token(woosh.OP, ')', 491, 82, 491, 83),
    woosh.Token(woosh.NEWLINE, '\r\n', 491, 83, 492, 0),
    woosh.Token(woosh.DEDENT, '        ', 492, 0, 492, 8),
    woosh.Token(woosh.NAME, 'total', 492, 8, 492, 13),
    woosh.Token(woosh.OP, '=', 492, 14, 492, 15),
    woosh.Token(woosh.NAME, 'cum_weights', 492, 16, 492, 27),
    woosh.Token(woosh.OP, '[', 492, 27, 492, 28),
    woosh.Token(woosh.OP, '-', 492, 28, 492, 29),
    woosh.Token(woosh.NUMBER, '1', 492, 29, 492, 30),
    woosh.Token(woosh.OP, ']', 492, 30, 492, 31),
    woosh.Token(woosh.OP, '+', 492, 32, 492, 33),
    woosh.Token(woosh.NUMBER, '0.0', 492, 34, 492, 37),
    woosh.Token(woosh.COMMENT, '# convert to float', 492, 40, 492, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 492, 58, 493, 0),
    woosh.Token(woosh.NAME, 'if', 493, 8, 493, 10),
    woosh.Token(woosh.NAME, 'total', 493, 11, 493, 16),
    woosh.Token(woosh.OP, '<=', 493, 17, 493, 19),
    woosh.Token(woosh.NUMBER, '0.0', 493, 20, 493, 23),
    woosh.Token(woosh.OP, ':', 493, 23, 493, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 493, 24, 494, 0),
    woosh.Token(woosh.INDENT, '            ', 494, 0, 494, 12),
    woosh.Token(woosh.NAME, 'raise', 494, 12, 494, 17),
    woosh.Token(woosh.NAME, 'ValueError', 494, 18, 494, 28),
    woosh.Token(woosh.OP, '(', 494, 28, 494, 29),
    woosh.Token(woosh.STRING, "'Total of weights must be greater than zero'", 494, 29, 494, 73),
    woosh.Token(woosh.OP, ')', 494, 73, 494, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 494, 74, 495, 0),
    woosh.Token(woosh.DEDENT, '        ', 495, 0, 495, 8),
    woosh.Token(woosh.NAME, 'if', 495, 8, 495, 10),
    woosh.Token(woosh.NAME, 'not', 495, 11, 495, 14),
    woosh.Token(woosh.NAME, '_isfinite', 495, 15, 495, 24),
    woosh.Token(woosh.OP, '(', 495, 24, 495, 25),
    woosh.Token(woosh.NAME, 'total', 495, 25, 495, 30),
    woosh.Token(woosh.OP, ')', 495, 30, 495, 31),
    woosh.Token(woosh.OP, ':', 495, 31, 495, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 495, 32, 496, 0),
    woosh.Token(woosh.INDENT, '            ', 496, 0, 496, 12),
    woosh.Token(woosh.NAME, 'raise', 496, 12, 496, 17),
    woosh.Token(woosh.NAME, 'ValueError', 496, 18, 496, 28),
    woosh.Token(woosh.OP, '(', 496, 28, 496, 29),
    woosh.Token(woosh.STRING, "'Total of weights must be finite'", 496, 29, 496, 62),
    woosh.Token(woosh.OP, ')', 496, 62, 496, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 496, 63, 497, 0),
    woosh.Token(woosh.DEDENT, '        ', 497, 0, 497, 8),
    woosh.Token(woosh.NAME, 'bisect', 497, 8, 497, 14),
    woosh.Token(woosh.OP, '=', 497, 15, 497, 16),
    woosh.Token(woosh.NAME, '_bisect', 497, 17, 497, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 497, 24, 498, 0),
    woosh.Token(woosh.NAME, 'hi', 498, 8, 498, 10),
    woosh.Token(woosh.OP, '=', 498, 11, 498, 12),
    woosh.Token(woosh.NAME, 'n', 498, 13, 498, 14),
    woosh.Token(woosh.OP, '-', 498, 15, 498, 16),
    woosh.Token(woosh.NUMBER, '1', 498, 17, 498, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 498, 18, 499, 0),
    woosh.Token(woosh.NAME, 'return', 499, 8, 499, 14),
    woosh.Token(woosh.OP, '[', 499, 15, 499, 16),
    woosh.Token(woosh.NAME, 'population', 499, 16, 499, 26),
    woosh.Token(woosh.OP, '[', 499, 26, 499, 27),
    woosh.Token(woosh.NAME, 'bisect', 499, 27, 499, 33),
    woosh.Token(woosh.OP, '(', 499, 33, 499, 34),
    woosh.Token(woosh.NAME, 'cum_weights', 499, 34, 499, 45),
    woosh.Token(woosh.OP, ',', 499, 45, 499, 46),
    woosh.Token(woosh.NAME, 'random', 499, 47, 499, 53),
    woosh.Token(woosh.OP, '(', 499, 53, 499, 54),
    woosh.Token(woosh.OP, ')', 499, 54, 499, 55),
    woosh.Token(woosh.OP, '*', 499, 56, 499, 57),
    woosh.Token(woosh.NAME, 'total', 499, 58, 499, 63),
    woosh.Token(woosh.OP, ',', 499, 63, 499, 64),
    woosh.Token(woosh.NUMBER, '0', 499, 65, 499, 66),
    woosh.Token(woosh.OP, ',', 499, 66, 499, 67),
    woosh.Token(woosh.NAME, 'hi', 499, 68, 499, 70),
    woosh.Token(woosh.OP, ')', 499, 70, 499, 71),
    woosh.Token(woosh.OP, ']', 499, 71, 499, 72),
    woosh.Token(woosh.NAME, 'for', 500, 16, 500, 19),
    woosh.Token(woosh.NAME, 'i', 500, 20, 500, 21),
    woosh.Token(woosh.NAME, 'in', 500, 22, 500, 24),
    woosh.Token(woosh.NAME, '_repeat', 500, 25, 500, 32),
    woosh.Token(woosh.OP, '(', 500, 32, 500, 33),
    woosh.Token(woosh.NAME, 'None', 500, 33, 500, 37),
    woosh.Token(woosh.OP, ',', 500, 37, 500, 38),
    woosh.Token(woosh.NAME, 'k', 500, 39, 500, 40),
    woosh.Token(woosh.OP, ')', 500, 40, 500, 41),
    woosh.Token(woosh.OP, ']', 500, 41, 500, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 500, 42, 501, 0),
    woosh.Token(woosh.COMMENT, '## -------------------- real-valued distributions  -------------------', 503, 4, 503, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 503, 74, 504, 0),
    woosh.Token(woosh.DEDENT, '    ', 505, 0, 505, 4),
    woosh.Token(woosh.NAME, 'def', 505, 4, 505, 7),
    woosh.Token(woosh.NAME, 'uniform', 505, 8, 505, 15),
    woosh.Token(woosh.OP, '(', 505, 15, 505, 16),
    woosh.Token(woosh.NAME, 'self', 505, 16, 505, 20),
    woosh.Token(woosh.OP, ',', 505, 20, 505, 21),
    woosh.Token(woosh.NAME, 'a', 505, 22, 505, 23),
    woosh.Token(woosh.OP, ',', 505, 23, 505, 24),
    woosh.Token(woosh.NAME, 'b', 505, 25, 505, 26),
    woosh.Token(woosh.OP, ')', 505, 26, 505, 27),
    woosh.Token(woosh.OP, ':', 505, 27, 505, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 505, 28, 506, 0),
    woosh.Token(woosh.INDENT, '        ', 506, 0, 506, 8),
    woosh.Token(woosh.STRING, '"Get a random number in the range [a, b) or [a, b] depending on rounding."', 506, 8, 506, 82),
    woosh.Token(woosh.NEWLINE, '\r\n', 506, 82, 507, 0),
    woosh.Token(woosh.NAME, 'return', 507, 8, 507, 14),
    woosh.Token(woosh.NAME, 'a', 507, 15, 507, 16),
    woosh.Token(woosh.OP, '+', 507, 17, 507, 18),
    woosh.Token(woosh.OP, '(', 507, 19, 507, 20),
    woosh.Token(woosh.NAME, 'b', 507, 20, 507, 21),
    woosh.Token(woosh.OP, '-', 507, 22, 507, 23),
    woosh.Token(woosh.NAME, 'a', 507, 24, 507, 25),
    woosh.Token(woosh.OP, ')', 507, 25, 507, 26),
    woosh.Token(woosh.OP, '*', 507, 27, 507, 28),
    woosh.Token(woosh.NAME, 'self', 507, 29, 507, 33),
    woosh.Token(woosh.OP, '.', 507, 33, 507, 34),
    woosh.Token(woosh.NAME, 'random', 507, 34, 507, 40),
    woosh.Token(woosh.OP, '(', 507, 40, 507, 41),
    woosh.Token(woosh.OP, ')', 507, 41, 507, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 507, 42, 508, 0),
    woosh.Token(woosh.DEDENT, '    ', 509, 0, 509, 4),
    woosh.Token(woosh.NAME, 'def', 509, 4, 509, 7),
    woosh.Token(woosh.NAME, 'triangular', 509, 8, 509, 18),
    woosh.Token(woosh.OP, '(', 509, 18, 509, 19),
    woosh.Token(woosh.NAME, 'self', 509, 19, 509, 23),
    woosh.Token(woosh.OP, ',', 509, 23, 509, 24),
    woosh.Token(woosh.NAME, 'low', 509, 25, 509, 28),
    woosh.Token(woosh.OP, '=', 509, 28, 509, 29),
    woosh.Token(woosh.NUMBER, '0.0', 509, 29, 509, 32),
    woosh.Token(woosh.OP, ',', 509, 32, 509, 33),
    woosh.Token(woosh.NAME, 'high', 509, 34, 509, 38),
    woosh.Token(woosh.OP, '=', 509, 38, 509, 39),
    woosh.Token(woosh.NUMBER, '1.0', 509, 39, 509, 42),
    woosh.Token(woosh.OP, ',', 509, 42, 509, 43),
    woosh.Token(woosh.NAME, 'mode', 509, 44, 509, 48),
    woosh.Token(woosh.OP, '=', 509, 48, 509, 49),
    woosh.Token(woosh.NAME, 'None', 509, 49, 509, 53),
    woosh.Token(woosh.OP, ')', 509, 53, 509, 54),
    woosh.Token(woosh.OP, ':', 509, 54, 509, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 509, 55, 510, 0),
    woosh.Token(woosh.INDENT, '        ', 510, 0, 510, 8),
    woosh.Token(woosh.STRING, '"""Triangular distribution.\r\n\r\n        Continuous distribution bounded by given lower and upper limits,\r\n        and having a given mode value in-between.\r\n\r\n        http://en.wikipedia.org/wiki/Triangular_distribution\r\n\r\n        """', 510, 8, 517, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 517, 11, 518, 0),
    woosh.Token(woosh.NAME, 'u', 518, 8, 518, 9),
    woosh.Token(woosh.OP, '=', 518, 10, 518, 11),
    woosh.Token(woosh.NAME, 'self', 518, 12, 518, 16),
    woosh.Token(woosh.OP, '.', 518, 16, 518, 17),
    woosh.Token(woosh.NAME, 'random', 518, 17, 518, 23),
    woosh.Token(woosh.OP, '(', 518, 23, 518, 24),
    woosh.Token(woosh.OP, ')', 518, 24, 518, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 518, 25, 519, 0),
    woosh.Token(woosh.NAME, 'try', 519, 8, 519, 11),
    woosh.Token(woosh.OP, ':', 519, 11, 519, 12),
    woosh.Token(woosh.NEWLINE, '\r\n', 519, 12, 520, 0),
    woosh.Token(woosh.INDENT, '            ', 520, 0, 520, 12),
    woosh.Token(woosh.NAME, 'c', 520, 12, 520, 13),
    woosh.Token(woosh.OP, '=', 520, 14, 520, 15),
    woosh.Token(woosh.NUMBER, '0.5', 520, 16, 520, 19),
    woosh.Token(woosh.NAME, 'if', 520, 20, 520, 22),
    woosh.Token(woosh.NAME, 'mode', 520, 23, 520, 27),
    woosh.Token(woosh.NAME, 'is', 520, 28, 520, 30),
    woosh.Token(woosh.NAME, 'None', 520, 31, 520, 35),
    woosh.Token(woosh.NAME, 'else', 520, 36, 520, 40),
    woosh.Token(woosh.OP, '(', 520, 41, 520, 42),
    woosh.Token(woosh.NAME, 'mode', 520, 42, 520, 46),
    woosh.Token(woosh.OP, '-', 520, 47, 520, 48),
    woosh.Token(woosh.NAME, 'low', 520, 49, 520, 52),
    woosh.Token(woosh.OP, ')', 520, 52, 520, 53),
    woosh.Token(woosh.OP, '/', 520, 54, 520, 55),
    woosh.Token(woosh.OP, '(', 520, 56, 520, 57),
    woosh.Token(woosh.NAME, 'high', 520, 57, 520, 61),
    woosh.Token(woosh.OP, '-', 520, 62, 520, 63),
    woosh.Token(woosh.NAME, 'low', 520, 64, 520, 67),
    woosh.Token(woosh.OP, ')', 520, 67, 520, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 520, 68, 521, 0),
    woosh.Token(woosh.DEDENT, '        ', 521, 0, 521, 8),
    woosh.Token(woosh.NAME, 'except', 521, 8, 521, 14),
    woosh.Token(woosh.NAME, 'ZeroDivisionError', 521, 15, 521, 32),
    woosh.Token(woosh.OP, ':', 521, 32, 521, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 521, 33, 522, 0),
    woosh.Token(woosh.INDENT, '            ', 522, 0, 522, 12),
    woosh.Token(woosh.NAME, 'return', 522, 12, 522, 18),
    woosh.Token(woosh.NAME, 'low', 522, 19, 522, 22),
    woosh.Token(woosh.NEWLINE, '\r\n', 522, 22, 523, 0),
    woosh.Token(woosh.DEDENT, '        ', 523, 0, 523, 8),
    woosh.Token(woosh.NAME, 'if', 523, 8, 523, 10),
    woosh.Token(woosh.NAME, 'u', 523, 11, 523, 12),
    woosh.Token(woosh.OP, '>', 523, 13, 523, 14),
    woosh.Token(woosh.NAME, 'c', 523, 15, 523, 16),
    woosh.Token(woosh.OP, ':', 523, 16, 523, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 523, 17, 524, 0),
    woosh.Token(woosh.INDENT, '            ', 524, 0, 524, 12),
    woosh.Token(woosh.NAME, 'u', 524, 12, 524, 13),
    woosh.Token(woosh.OP, '=', 524, 14, 524, 15),
    woosh.Token(woosh.NUMBER, '1.0', 524, 16, 524, 19),
    woosh.Token(woosh.OP, '-', 524, 20, 524, 21),
    woosh.Token(woosh.NAME, 'u', 524, 22, 524, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 524, 23, 525, 0),
    woosh.Token(woosh.NAME, 'c', 525, 12, 525, 13),
    woosh.Token(woosh.OP, '=', 525, 14, 525, 15),
    woosh.Token(woosh.NUMBER, '1.0', 525, 16, 525, 19),
    woosh.Token(woosh.OP, '-', 525, 20, 525, 21),
    woosh.Token(woosh.NAME, 'c', 525, 22, 525, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 525, 23, 526, 0),
    woosh.Token(woosh.NAME, 'low', 526, 12, 526, 15),
    woosh.Token(woosh.OP, ',', 526, 15, 526, 16),
    woosh.Token(woosh.NAME, 'high', 526, 17, 526, 21),
    woosh.Token(woosh.OP, '=', 526, 22, 526, 23),
    woosh.Token(woosh.NAME, 'high', 526, 24, 526, 28),
    woosh.Token(woosh.OP, ',', 526, 28, 526, 29),
    woosh.Token(woosh.NAME, 'low', 526, 30, 526, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 526, 33, 527, 0),
    woosh.Token(woosh.DEDENT, '        ', 527, 0, 527, 8),
    woosh.Token(woosh.NAME, 'return', 527, 8, 527, 14),
    woosh.Token(woosh.NAME, 'low', 527, 15, 527, 18),
    woosh.Token(woosh.OP, '+', 527, 19, 527, 20),
    woosh.Token(woosh.OP, '(', 527, 21, 527, 22),
    woosh.Token(woosh.NAME, 'high', 527, 22, 527, 26),
    woosh.Token(woosh.OP, '-', 527, 27, 527, 28),
    woosh.Token(woosh.NAME, 'low', 527, 29, 527, 32),
    woosh.Token(woosh.OP, ')', 527, 32, 527, 33),
    woosh.Token(woosh.OP, '*', 527, 34, 527, 35),
    woosh.Token(woosh.NAME, '_sqrt', 527, 36, 527, 41),
    woosh.Token(woosh.OP, '(', 527, 41, 527, 42),
    woosh.Token(woosh.NAME, 'u', 527, 42, 527, 43),
    woosh.Token(woosh.OP, '*', 527, 44, 527, 45),
    woosh.Token(woosh.NAME, 'c', 527, 46, 527, 47),
    woosh.Token(woosh.OP, ')', 527, 47, 527, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 527, 48, 528, 0),
    woosh.Token(woosh.DEDENT, '    ', 529, 0, 529, 4),
    woosh.Token(woosh.NAME, 'def', 529, 4, 529, 7),
    woosh.Token(woosh.NAME, 'normalvariate', 529, 8, 529, 21),
    woosh.Token(woosh.OP, '(', 529, 21, 529, 22),
    woosh.Token(woosh.NAME, 'self', 529, 22, 529, 26),
    woosh.Token(woosh.OP, ',', 529, 26, 529, 27),
    woosh.Token(woosh.NAME, 'mu', 529, 28, 529, 30),
    woosh.Token(woosh.OP, ',', 529, 30, 529, 31),
    woosh.Token(woosh.NAME, 'sigma', 529, 32, 529, 37),
    woosh.Token(woosh.OP, ')', 529, 37, 529, 38),
    woosh.Token(woosh.OP, ':', 529, 38, 529, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 529, 39, 530, 0),
    woosh.Token(woosh.INDENT, '        ', 530, 0, 530, 8),
    woosh.Token(woosh.STRING, '"""Normal distribution.\r\n\r\n        mu is the mean, and sigma is the standard deviation.\r\n\r\n        """', 530, 8, 534, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 534, 11, 535, 0),
    woosh.Token(woosh.COMMENT, '# Uses Kinderman and Monahan method. Reference: Kinderman,', 535, 8, 535, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 535, 66, 536, 0),
    woosh.Token(woosh.COMMENT, '# A.J. and Monahan, J.F., "Computer generation of random', 536, 8, 536, 64),
    woosh.Token(woosh.NEWLINE, '\r\n', 536, 64, 537, 0),
    woosh.Token(woosh.COMMENT, '# variables using the ratio of uniform deviates", ACM Trans', 537, 8, 537, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 537, 67, 538, 0),
    woosh.Token(woosh.COMMENT, '# Math Software, 3, (1977), pp257-260.', 538, 8, 538, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 538, 46, 539, 0),
    woosh.Token(woosh.NAME, 'random', 540, 8, 540, 14),
    woosh.Token(woosh.OP, '=', 540, 15, 540, 16),
    woosh.Token(woosh.NAME, 'self', 540, 17, 540, 21),
    woosh.Token(woosh.OP, '.', 540, 21, 540, 22),
    woosh.Token(woosh.NAME, 'random', 540, 22, 540, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 540, 28, 541, 0),
    woosh.Token(woosh.NAME, 'while', 541, 8, 541, 13),
    woosh.Token(woosh.NAME, 'True', 541, 14, 541, 18),
    woosh.Token(woosh.OP, ':', 541, 18, 541, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 541, 19, 542, 0),
    woosh.Token(woosh.INDENT, '            ', 542, 0, 542, 12),
    woosh.Token(woosh.NAME, 'u1', 542, 12, 542, 14),
    woosh.Token(woosh.OP, '=', 542, 15, 542, 16),
    woosh.Token(woosh.NAME, 'random', 542, 17, 542, 23),
    woosh.Token(woosh.OP, '(', 542, 23, 542, 24),
    woosh.Token(woosh.OP, ')', 542, 24, 542, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 542, 25, 543, 0),
    woosh.Token(woosh.NAME, 'u2', 543, 12, 543, 14),
    woosh.Token(woosh.OP, '=', 543, 15, 543, 16),
    woosh.Token(woosh.NUMBER, '1.0', 543, 17, 543, 20),
    woosh.Token(woosh.OP, '-', 543, 21, 543, 22),
    woosh.Token(woosh.NAME, 'random', 543, 23, 543, 29),
    woosh.Token(woosh.OP, '(', 543, 29, 543, 30),
    woosh.Token(woosh.OP, ')', 543, 30, 543, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 543, 31, 544, 0),
    woosh.Token(woosh.NAME, 'z', 544, 12, 544, 13),
    woosh.Token(woosh.OP, '=', 544, 14, 544, 15),
    woosh.Token(woosh.NAME, 'NV_MAGICCONST', 544, 16, 544, 29),
    woosh.Token(woosh.OP, '*', 544, 30, 544, 31),
    woosh.Token(woosh.OP, '(', 544, 32, 544, 33),
    woosh.Token(woosh.NAME, 'u1', 544, 33, 544, 35),
    woosh.Token(woosh.OP, '-', 544, 36, 544, 37),
    woosh.Token(woosh.NUMBER, '0.5', 544, 38, 544, 41),
    woosh.Token(woosh.OP, ')', 544, 41, 544, 42),
    woosh.Token(woosh.OP, '/', 544, 43, 544, 44),
    woosh.Token(woosh.NAME, 'u2', 544, 45, 544, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 544, 47, 545, 0),
    woosh.Token(woosh.NAME, 'zz', 545, 12, 545, 14),
    woosh.Token(woosh.OP, '=', 545, 15, 545, 16),
    woosh.Token(woosh.NAME, 'z', 545, 17, 545, 18),
    woosh.Token(woosh.OP, '*', 545, 19, 545, 20),
    woosh.Token(woosh.NAME, 'z', 545, 21, 545, 22),
    woosh.Token(woosh.OP, '/', 545, 23, 545, 24),
    woosh.Token(woosh.NUMBER, '4.0', 545, 25, 545, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 545, 28, 546, 0),
    woosh.Token(woosh.NAME, 'if', 546, 12, 546, 14),
    woosh.Token(woosh.NAME, 'zz', 546, 15, 546, 17),
    woosh.Token(woosh.OP, '<=', 546, 18, 546, 20),
    woosh.Token(woosh.OP, '-', 546, 21, 546, 22),
    woosh.Token(woosh.NAME, '_log', 546, 22, 546, 26),
    woosh.Token(woosh.OP, '(', 546, 26, 546, 27),
    woosh.Token(woosh.NAME, 'u2', 546, 27, 546, 29),
    woosh.Token(woosh.OP, ')', 546, 29, 546, 30),
    woosh.Token(woosh.OP, ':', 546, 30, 546, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 546, 31, 547, 0),
    woosh.Token(woosh.INDENT, '                ', 547, 0, 547, 16),
    woosh.Token(woosh.NAME, 'break', 547, 16, 547, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 547, 21, 548, 0),
    woosh.Token(woosh.DEDENT, '        ', 548, 0, 548, 8),
    woosh.Token(woosh.DEDENT, '', 548, 8, 548, 8),
    woosh.Token(woosh.NAME, 'return', 548, 8, 548, 14),
    woosh.Token(woosh.NAME, 'mu', 548, 15, 548, 17),
    woosh.Token(woosh.OP, '+', 548, 18, 548, 19),
    woosh.Token(woosh.NAME, 'z', 548, 20, 548, 21),
    woosh.Token(woosh.OP, '*', 548, 22, 548, 23),
    woosh.Token(woosh.NAME, 'sigma', 548, 24, 548, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 548, 29, 549, 0),
    woosh.Token(woosh.DEDENT, '    ', 550, 0, 550, 4),
    woosh.Token(woosh.NAME, 'def', 550, 4, 550, 7),
    woosh.Token(woosh.NAME, 'gauss', 550, 8, 550, 13),
    woosh.Token(woosh.OP, '(', 550, 13, 550, 14),
    woosh.Token(woosh.NAME, 'self', 550, 14, 550, 18),
    woosh.Token(woosh.OP, ',', 550, 18, 550, 19),
    woosh.Token(woosh.NAME, 'mu', 550, 20, 550, 22),
    woosh.Token(woosh.OP, ',', 550, 22, 550, 23),
    woosh.Token(woosh.NAME, 'sigma', 550, 24, 550, 29),
    woosh.Token(woosh.OP, ')', 550, 29, 550, 30),
    woosh.Token(woosh.OP, ':', 550, 30, 550, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 550, 31, 551, 0),
    woosh.Token(woosh.INDENT, '        ', 551, 0, 551, 8),
    woosh.Token(woosh.STRING, '"""Gaussian distribution.\r\n\r\n        mu is the mean, and sigma is the standard deviation.  This is\r\n        slightly faster than the normalvariate() function.\r\n\r\n        Not thread-safe without a lock around calls.\r\n\r\n        """', 551, 8, 558, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 558, 11, 559, 0),
    woosh.Token(woosh.COMMENT, '# When x and y are two variables from [0, 1), uniformly', 559, 8, 559, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 559, 63, 560, 0),
    woosh.Token(woosh.COMMENT, '# distributed, then', 560, 8, 560, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 560, 27, 561, 0),
    woosh.Token(woosh.COMMENT, '#', 561, 8, 561, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 561, 9, 562, 0),
    woosh.Token(woosh.COMMENT, '#    cos(2*pi*x)*sqrt(-2*log(1-y))', 562, 8, 562, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 562, 42, 563, 0),
    woosh.Token(woosh.COMMENT, '#    sin(2*pi*x)*sqrt(-2*log(1-y))', 563, 8, 563, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 563, 42, 564, 0),
    woosh.Token(woosh.COMMENT, '#', 564, 8, 564, 9),
    woosh.Token(woosh.NEWLINE, '\r\n', 564, 9, 565, 0),
    woosh.Token(woosh.COMMENT, '# are two *independent* variables with normal distribution', 565, 8, 565, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 565, 66, 566, 0),
    woosh.Token(woosh.COMMENT, '# (mu = 0, sigma = 1).', 566, 8, 566, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 566, 30, 567, 0),
    woosh.Token(woosh.COMMENT, '# (Lambert Meertens)', 567, 8, 567, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 567, 28, 568, 0),
    woosh.Token(woosh.COMMENT, '# (corrected version; bug discovered by Mike Miller, fixed by LM)', 568, 8, 568, 73),
    woosh.Token(woosh.NEWLINE, '\r\n', 568, 73, 569, 0),
    woosh.Token(woosh.COMMENT, '# Multithreading note: When two threads call this function', 570, 8, 570, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 570, 66, 571, 0),
    woosh.Token(woosh.COMMENT, '# simultaneously, it is possible that they will receive the', 571, 8, 571, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 571, 67, 572, 0),
    woosh.Token(woosh.COMMENT, '# same return value.  The window is very small though.  To', 572, 8, 572, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 572, 66, 573, 0),
    woosh.Token(woosh.COMMENT, '# avoid this, you have to use a lock around all calls.  (I', 573, 8, 573, 66),
    woosh.Token(woosh.NEWLINE, '\r\n', 573, 66, 574, 0),
    woosh.Token(woosh.COMMENT, "# didn't want to slow this down in the serial case by using a", 574, 8, 574, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 574, 69, 575, 0),
    woosh.Token(woosh.COMMENT, '# lock here.)', 575, 8, 575, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 575, 21, 576, 0),
    woosh.Token(woosh.NAME, 'random', 577, 8, 577, 14),
    woosh.Token(woosh.OP, '=', 577, 15, 577, 16),
    woosh.Token(woosh.NAME, 'self', 577, 17, 577, 21),
    woosh.Token(woosh.OP, '.', 577, 21, 577, 22),
    woosh.Token(woosh.NAME, 'random', 577, 22, 577, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 577, 28, 578, 0),
    woosh.Token(woosh.NAME, 'z', 578, 8, 578, 9),
    woosh.Token(woosh.OP, '=', 578, 10, 578, 11),
    woosh.Token(woosh.NAME, 'self', 578, 12, 578, 16),
    woosh.Token(woosh.OP, '.', 578, 16, 578, 17),
    woosh.Token(woosh.NAME, 'gauss_next', 578, 17, 578, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 578, 27, 579, 0),
    woosh.Token(woosh.NAME, 'self', 579, 8, 579, 12),
    woosh.Token(woosh.OP, '.', 579, 12, 579, 13),
    woosh.Token(woosh.NAME, 'gauss_next', 579, 13, 579, 23),
    woosh.Token(woosh.OP, '=', 579, 24, 579, 25),
    woosh.Token(woosh.NAME, 'None', 579, 26, 579, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 579, 30, 580, 0),
    woosh.Token(woosh.NAME, 'if', 580, 8, 580, 10),
    woosh.Token(woosh.NAME, 'z', 580, 11, 580, 12),
    woosh.Token(woosh.NAME, 'is', 580, 13, 580, 15),
    woosh.Token(woosh.NAME, 'None', 580, 16, 580, 20),
    woosh.Token(woosh.OP, ':', 580, 20, 580, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 580, 21, 581, 0),
    woosh.Token(woosh.INDENT, '            ', 581, 0, 581, 12),
    woosh.Token(woosh.NAME, 'x2pi', 581, 12, 581, 16),
    woosh.Token(woosh.OP, '=', 581, 17, 581, 18),
    woosh.Token(woosh.NAME, 'random', 581, 19, 581, 25),
    woosh.Token(woosh.OP, '(', 581, 25, 581, 26),
    woosh.Token(woosh.OP, ')', 581, 26, 581, 27),
    woosh.Token(woosh.OP, '*', 581, 28, 581, 29),
    woosh.Token(woosh.NAME, 'TWOPI', 581, 30, 581, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 581, 35, 582, 0),
    woosh.Token(woosh.NAME, 'g2rad', 582, 12, 582, 17),
    woosh.Token(woosh.OP, '=', 582, 18, 582, 19),
    woosh.Token(woosh.NAME, '_sqrt', 582, 20, 582, 25),
    woosh.Token(woosh.OP, '(', 582, 25, 582, 26),
    woosh.Token(woosh.OP, '-', 582, 26, 582, 27),
    woosh.Token(woosh.NUMBER, '2.0', 582, 27, 582, 30),
    woosh.Token(woosh.OP, '*', 582, 31, 582, 32),
    woosh.Token(woosh.NAME, '_log', 582, 33, 582, 37),
    woosh.Token(woosh.OP, '(', 582, 37, 582, 38),
    woosh.Token(woosh.NUMBER, '1.0', 582, 38, 582, 41),
    woosh.Token(woosh.OP, '-', 582, 42, 582, 43),
    woosh.Token(woosh.NAME, 'random', 582, 44, 582, 50),
    woosh.Token(woosh.OP, '(', 582, 50, 582, 51),
    woosh.Token(woosh.OP, ')', 582, 51, 582, 52),
    woosh.Token(woosh.OP, ')', 582, 52, 582, 53),
    woosh.Token(woosh.OP, ')', 582, 53, 582, 54),
    woosh.Token(woosh.NEWLINE, '\r\n', 582, 54, 583, 0),
    woosh.Token(woosh.NAME, 'z', 583, 12, 583, 13),
    woosh.Token(woosh.OP, '=', 583, 14, 583, 15),
    woosh.Token(woosh.NAME, '_cos', 583, 16, 583, 20),
    woosh.Token(woosh.OP, '(', 583, 20, 583, 21),
    woosh.Token(woosh.NAME, 'x2pi', 583, 21, 583, 25),
    woosh.Token(woosh.OP, ')', 583, 25, 583, 26),
    woosh.Token(woosh.OP, '*', 583, 27, 583, 28),
    woosh.Token(woosh.NAME, 'g2rad', 583, 29, 583, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 583, 34, 584, 0),
    woosh.Token(woosh.NAME, 'self', 584, 12, 584, 16),
    woosh.Token(woosh.OP, '.', 584, 16, 584, 17),
    woosh.Token(woosh.NAME, 'gauss_next', 584, 17, 584, 27),
    woosh.Token(woosh.OP, '=', 584, 28, 584, 29),
    woosh.Token(woosh.NAME, '_sin', 584, 30, 584, 34),
    woosh.Token(woosh.OP, '(', 584, 34, 584, 35),
    woosh.Token(woosh.NAME, 'x2pi', 584, 35, 584, 39),
    woosh.Token(woosh.OP, ')', 584, 39, 584, 40),
    woosh.Token(woosh.OP, '*', 584, 41, 584, 42),
    woosh.Token(woosh.NAME, 'g2rad', 584, 43, 584, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 584, 48, 585, 0),
    woosh.Token(woosh.DEDENT, '        ', 586, 0, 586, 8),
    woosh.Token(woosh.NAME, 'return', 586, 8, 586, 14),
    woosh.Token(woosh.NAME, 'mu', 586, 15, 586, 17),
    woosh.Token(woosh.OP, '+', 586, 18, 586, 19),
    woosh.Token(woosh.NAME, 'z', 586, 20, 586, 21),
    woosh.Token(woosh.OP, '*', 586, 22, 586, 23),
    woosh.Token(woosh.NAME, 'sigma', 586, 24, 586, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 586, 29, 587, 0),
    woosh.Token(woosh.DEDENT, '    ', 588, 0, 588, 4),
    woosh.Token(woosh.NAME, 'def', 588, 4, 588, 7),
    woosh.Token(woosh.NAME, 'lognormvariate', 588, 8, 588, 22),
    woosh.Token(woosh.OP, '(', 588, 22, 588, 23),
    woosh.Token(woosh.NAME, 'self', 588, 23, 588, 27),
    woosh.Token(woosh.OP, ',', 588, 27, 588, 28),
    woosh.Token(woosh.NAME, 'mu', 588, 29, 588, 31),
    woosh.Token(woosh.OP, ',', 588, 31, 588, 32),
    woosh.Token(woosh.NAME, 'sigma', 588, 33, 588, 38),
    woosh.Token(woosh.OP, ')', 588, 38, 588, 39),
    woosh.Token(woosh.OP, ':', 588, 39, 588, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 588, 40, 589, 0),
    woosh.Token(woosh.INDENT, '        ', 589, 0, 589, 8),
    woosh.Token(woosh.STRING, '"""Log normal distribution.\r\n\r\n        If you take the natural logarithm of this distribution, you\'ll get a\r\n        normal distribution with mean mu and standard deviation sigma.\r\n        mu can have any value, and sigma must be greater than zero.\r\n\r\n        """', 589, 8, 595, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 595, 11, 596, 0),
    woosh.Token(woosh.NAME, 'return', 596, 8, 596, 14),
    woosh.Token(woosh.NAME, '_exp', 596, 15, 596, 19),
    woosh.Token(woosh.OP, '(', 596, 19, 596, 20),
    woosh.Token(woosh.NAME, 'self', 596, 20, 596, 24),
    woosh.Token(woosh.OP, '.', 596, 24, 596, 25),
    woosh.Token(woosh.NAME, 'normalvariate', 596, 25, 596, 38),
    woosh.Token(woosh.OP, '(', 596, 38, 596, 39),
    woosh.Token(woosh.NAME, 'mu', 596, 39, 596, 41),
    woosh.Token(woosh.OP, ',', 596, 41, 596, 42),
    woosh.Token(woosh.NAME, 'sigma', 596, 43, 596, 48),
    woosh.Token(woosh.OP, ')', 596, 48, 596, 49),
    woosh.Token(woosh.OP, ')', 596, 49, 596, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 596, 50, 597, 0),
    woosh.Token(woosh.DEDENT, '    ', 598, 0, 598, 4),
    woosh.Token(woosh.NAME, 'def', 598, 4, 598, 7),
    woosh.Token(woosh.NAME, 'expovariate', 598, 8, 598, 19),
    woosh.Token(woosh.OP, '(', 598, 19, 598, 20),
    woosh.Token(woosh.NAME, 'self', 598, 20, 598, 24),
    woosh.Token(woosh.OP, ',', 598, 24, 598, 25),
    woosh.Token(woosh.NAME, 'lambd', 598, 26, 598, 31),
    woosh.Token(woosh.OP, ')', 598, 31, 598, 32),
    woosh.Token(woosh.OP, ':', 598, 32, 598, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 598, 33, 599, 0),
    woosh.Token(woosh.INDENT, '        ', 599, 0, 599, 8),
    woosh.Token(woosh.STRING, '"""Exponential distribution.\r\n\r\n        lambd is 1.0 divided by the desired mean.  It should be\r\n        nonzero.  (The parameter would be called "lambda", but that is\r\n        a reserved word in Python.)  Returned values range from 0 to\r\n        positive infinity if lambd is positive, and from negative\r\n        infinity to 0 if lambd is negative.\r\n\r\n        """', 599, 8, 607, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 607, 11, 608, 0),
    woosh.Token(woosh.COMMENT, '# lambd: rate lambd = 1/mean', 608, 8, 608, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 608, 36, 609, 0),
    woosh.Token(woosh.COMMENT, "# ('lambda' is a Python reserved word)", 609, 8, 609, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 609, 46, 610, 0),
    woosh.Token(woosh.COMMENT, '# we use 1-random() instead of random() to preclude the', 611, 8, 611, 63),
    woosh.Token(woosh.NEWLINE, '\r\n', 611, 63, 612, 0),
    woosh.Token(woosh.COMMENT, '# possibility of taking the log of zero.', 612, 8, 612, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 612, 48, 613, 0),
    woosh.Token(woosh.NAME, 'return', 613, 8, 613, 14),
    woosh.Token(woosh.OP, '-', 613, 15, 613, 16),
    woosh.Token(woosh.NAME, '_log', 613, 16, 613, 20),
    woosh.Token(woosh.OP, '(', 613, 20, 613, 21),
    woosh.Token(woosh.NUMBER, '1.0', 613, 21, 613, 24),
    woosh.Token(woosh.OP, '-', 613, 25, 613, 26),
    woosh.Token(woosh.NAME, 'self', 613, 27, 613, 31),
    woosh.Token(woosh.OP, '.', 613, 31, 613, 32),
    woosh.Token(woosh.NAME, 'random', 613, 32, 613, 38),
    woosh.Token(woosh.OP, '(', 613, 38, 613, 39),
    woosh.Token(woosh.OP, ')', 613, 39, 613, 40),
    woosh.Token(woosh.OP, ')', 613, 40, 613, 41),
    woosh.Token(woosh.OP, '/', 613, 42, 613, 43),
    woosh.Token(woosh.NAME, 'lambd', 613, 44, 613, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 613, 49, 614, 0),
    woosh.Token(woosh.DEDENT, '    ', 615, 0, 615, 4),
    woosh.Token(woosh.NAME, 'def', 615, 4, 615, 7),
    woosh.Token(woosh.NAME, 'vonmisesvariate', 615, 8, 615, 23),
    woosh.Token(woosh.OP, '(', 615, 23, 615, 24),
    woosh.Token(woosh.NAME, 'self', 615, 24, 615, 28),
    woosh.Token(woosh.OP, ',', 615, 28, 615, 29),
    woosh.Token(woosh.NAME, 'mu', 615, 30, 615, 32),
    woosh.Token(woosh.OP, ',', 615, 32, 615, 33),
    woosh.Token(woosh.NAME, 'kappa', 615, 34, 615, 39),
    woosh.Token(woosh.OP, ')', 615, 39, 615, 40),
    woosh.Token(woosh.OP, ':', 615, 40, 615, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 615, 41, 616, 0),
    woosh.Token(woosh.INDENT, '        ', 616, 0, 616, 8),
    woosh.Token(woosh.STRING, '"""Circular data distribution.\r\n\r\n        mu is the mean angle, expressed in radians between 0 and 2*pi, and\r\n        kappa is the concentration parameter, which must be greater than or\r\n        equal to zero.  If kappa is equal to zero, this distribution reduces\r\n        to a uniform random angle over the range 0 to 2*pi.\r\n\r\n        """', 616, 8, 623, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 623, 11, 624, 0),
    woosh.Token(woosh.COMMENT, '# Based upon an algorithm published in: Fisher, N.I.,', 624, 8, 624, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 624, 61, 625, 0),
    woosh.Token(woosh.COMMENT, '# "Statistical Analysis of Circular Data", Cambridge', 625, 8, 625, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 625, 60, 626, 0),
    woosh.Token(woosh.COMMENT, '# University Press, 1993.', 626, 8, 626, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 626, 33, 627, 0),
    woosh.Token(woosh.COMMENT, '# Thanks to Magnus Kessler for a correction to the', 628, 8, 628, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 628, 58, 629, 0),
    woosh.Token(woosh.COMMENT, '# implementation of step 4.', 629, 8, 629, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 629, 35, 630, 0),
    woosh.Token(woosh.NAME, 'random', 631, 8, 631, 14),
    woosh.Token(woosh.OP, '=', 631, 15, 631, 16),
    woosh.Token(woosh.NAME, 'self', 631, 17, 631, 21),
    woosh.Token(woosh.OP, '.', 631, 21, 631, 22),
    woosh.Token(woosh.NAME, 'random', 631, 22, 631, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 631, 28, 632, 0),
    woosh.Token(woosh.NAME, 'if', 632, 8, 632, 10),
    woosh.Token(woosh.NAME, 'kappa', 632, 11, 632, 16),
    woosh.Token(woosh.OP, '<=', 632, 17, 632, 19),
    woosh.Token(woosh.NUMBER, '1e-6', 632, 20, 632, 24),
    woosh.Token(woosh.OP, ':', 632, 24, 632, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 632, 25, 633, 0),
    woosh.Token(woosh.INDENT, '            ', 633, 0, 633, 12),
    woosh.Token(woosh.NAME, 'return', 633, 12, 633, 18),
    woosh.Token(woosh.NAME, 'TWOPI', 633, 19, 633, 24),
    woosh.Token(woosh.OP, '*', 633, 25, 633, 26),
    woosh.Token(woosh.NAME, 'random', 633, 27, 633, 33),
    woosh.Token(woosh.OP, '(', 633, 33, 633, 34),
    woosh.Token(woosh.OP, ')', 633, 34, 633, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 633, 35, 634, 0),
    woosh.Token(woosh.DEDENT, '        ', 635, 0, 635, 8),
    woosh.Token(woosh.NAME, 's', 635, 8, 635, 9),
    woosh.Token(woosh.OP, '=', 635, 10, 635, 11),
    woosh.Token(woosh.NUMBER, '0.5', 635, 12, 635, 15),
    woosh.Token(woosh.OP, '/', 635, 16, 635, 17),
    woosh.Token(woosh.NAME, 'kappa', 635, 18, 635, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 635, 23, 636, 0),
    woosh.Token(woosh.NAME, 'r', 636, 8, 636, 9),
    woosh.Token(woosh.OP, '=', 636, 10, 636, 11),
    woosh.Token(woosh.NAME, 's', 636, 12, 636, 13),
    woosh.Token(woosh.OP, '+', 636, 14, 636, 15),
    woosh.Token(woosh.NAME, '_sqrt', 636, 16, 636, 21),
    woosh.Token(woosh.OP, '(', 636, 21, 636, 22),
    woosh.Token(woosh.NUMBER, '1.0', 636, 22, 636, 25),
    woosh.Token(woosh.OP, '+', 636, 26, 636, 27),
    woosh.Token(woosh.NAME, 's', 636, 28, 636, 29),
    woosh.Token(woosh.OP, '*', 636, 30, 636, 31),
    woosh.Token(woosh.NAME, 's', 636, 32, 636, 33),
    woosh.Token(woosh.OP, ')', 636, 33, 636, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 636, 34, 637, 0),
    woosh.Token(woosh.NAME, 'while', 638, 8, 638, 13),
    woosh.Token(woosh.NAME, 'True', 638, 14, 638, 18),
    woosh.Token(woosh.OP, ':', 638, 18, 638, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 638, 19, 639, 0),
    woosh.Token(woosh.INDENT, '            ', 639, 0, 639, 12),
    woosh.Token(woosh.NAME, 'u1', 639, 12, 639, 14),
    woosh.Token(woosh.OP, '=', 639, 15, 639, 16),
    woosh.Token(woosh.NAME, 'random', 639, 17, 639, 23),
    woosh.Token(woosh.OP, '(', 639, 23, 639, 24),
    woosh.Token(woosh.OP, ')', 639, 24, 639, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 639, 25, 640, 0),
    woosh.Token(woosh.NAME, 'z', 640, 12, 640, 13),
    woosh.Token(woosh.OP, '=', 640, 14, 640, 15),
    woosh.Token(woosh.NAME, '_cos', 640, 16, 640, 20),
    woosh.Token(woosh.OP, '(', 640, 20, 640, 21),
    woosh.Token(woosh.NAME, '_pi', 640, 21, 640, 24),
    woosh.Token(woosh.OP, '*', 640, 25, 640, 26),
    woosh.Token(woosh.NAME, 'u1', 640, 27, 640, 29),
    woosh.Token(woosh.OP, ')', 640, 29, 640, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 640, 30, 641, 0),
    woosh.Token(woosh.NAME, 'd', 642, 12, 642, 13),
    woosh.Token(woosh.OP, '=', 642, 14, 642, 15),
    woosh.Token(woosh.NAME, 'z', 642, 16, 642, 17),
    woosh.Token(woosh.OP, '/', 642, 18, 642, 19),
    woosh.Token(woosh.OP, '(', 642, 20, 642, 21),
    woosh.Token(woosh.NAME, 'r', 642, 21, 642, 22),
    woosh.Token(woosh.OP, '+', 642, 23, 642, 24),
    woosh.Token(woosh.NAME, 'z', 642, 25, 642, 26),
    woosh.Token(woosh.OP, ')', 642, 26, 642, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 642, 27, 643, 0),
    woosh.Token(woosh.NAME, 'u2', 643, 12, 643, 14),
    woosh.Token(woosh.OP, '=', 643, 15, 643, 16),
    woosh.Token(woosh.NAME, 'random', 643, 17, 643, 23),
    woosh.Token(woosh.OP, '(', 643, 23, 643, 24),
    woosh.Token(woosh.OP, ')', 643, 24, 643, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 643, 25, 644, 0),
    woosh.Token(woosh.NAME, 'if', 644, 12, 644, 14),
    woosh.Token(woosh.NAME, 'u2', 644, 15, 644, 17),
    woosh.Token(woosh.OP, '<', 644, 18, 644, 19),
    woosh.Token(woosh.NUMBER, '1.0', 644, 20, 644, 23),
    woosh.Token(woosh.OP, '-', 644, 24, 644, 25),
    woosh.Token(woosh.NAME, 'd', 644, 26, 644, 27),
    woosh.Token(woosh.OP, '*', 644, 28, 644, 29),
    woosh.Token(woosh.NAME, 'd', 644, 30, 644, 31),
    woosh.Token(woosh.NAME, 'or', 644, 32, 644, 34),
    woosh.Token(woosh.NAME, 'u2', 644, 35, 644, 37),
    woosh.Token(woosh.OP, '<=', 644, 38, 644, 40),
    woosh.Token(woosh.OP, '(', 644, 41, 644, 42),
    woosh.Token(woosh.NUMBER, '1.0', 644, 42, 644, 45),
    woosh.Token(woosh.OP, '-', 644, 46, 644, 47),
    woosh.Token(woosh.NAME, 'd', 644, 48, 644, 49),
    woosh.Token(woosh.OP, ')', 644, 49, 644, 50),
    woosh.Token(woosh.OP, '*', 644, 51, 644, 52),
    woosh.Token(woosh.NAME, '_exp', 644, 53, 644, 57),
    woosh.Token(woosh.OP, '(', 644, 57, 644, 58),
    woosh.Token(woosh.NAME, 'd', 644, 58, 644, 59),
    woosh.Token(woosh.OP, ')', 644, 59, 644, 60),
    woosh.Token(woosh.OP, ':', 644, 60, 644, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 644, 61, 645, 0),
    woosh.Token(woosh.INDENT, '                ', 645, 0, 645, 16),
    woosh.Token(woosh.NAME, 'break', 645, 16, 645, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 645, 21, 646, 0),
    woosh.Token(woosh.DEDENT, '        ', 647, 0, 647, 8),
    woosh.Token(woosh.DEDENT, '', 647, 8, 647, 8),
    woosh.Token(woosh.NAME, 'q', 647, 8, 647, 9),
    woosh.Token(woosh.OP, '=', 647, 10, 647, 11),
    woosh.Token(woosh.NUMBER, '1.0', 647, 12, 647, 15),
    woosh.Token(woosh.OP, '/', 647, 16, 647, 17),
    woosh.Token(woosh.NAME, 'r', 647, 18, 647, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 647, 19, 648, 0),
    woosh.Token(woosh.NAME, 'f', 648, 8, 648, 9),
    woosh.Token(woosh.OP, '=', 648, 10, 648, 11),
    woosh.Token(woosh.OP, '(', 648, 12, 648, 13),
    woosh.Token(woosh.NAME, 'q', 648, 13, 648, 14),
    woosh.Token(woosh.OP, '+', 648, 15, 648, 16),
    woosh.Token(woosh.NAME, 'z', 648, 17, 648, 18),
    woosh.Token(woosh.OP, ')', 648, 18, 648, 19),
    woosh.Token(woosh.OP, '/', 648, 20, 648, 21),
    woosh.Token(woosh.OP, '(', 648, 22, 648, 23),
    woosh.Token(woosh.NUMBER, '1.0', 648, 23, 648, 26),
    woosh.Token(woosh.OP, '+', 648, 27, 648, 28),
    woosh.Token(woosh.NAME, 'q', 648, 29, 648, 30),
    woosh.Token(woosh.OP, '*', 648, 31, 648, 32),
    woosh.Token(woosh.NAME, 'z', 648, 33, 648, 34),
    woosh.Token(woosh.OP, ')', 648, 34, 648, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 648, 35, 649, 0),
    woosh.Token(woosh.NAME, 'u3', 649, 8, 649, 10),
    woosh.Token(woosh.OP, '=', 649, 11, 649, 12),
    woosh.Token(woosh.NAME, 'random', 649, 13, 649, 19),
    woosh.Token(woosh.OP, '(', 649, 19, 649, 20),
    woosh.Token(woosh.OP, ')', 649, 20, 649, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 649, 21, 650, 0),
    woosh.Token(woosh.NAME, 'if', 650, 8, 650, 10),
    woosh.Token(woosh.NAME, 'u3', 650, 11, 650, 13),
    woosh.Token(woosh.OP, '>', 650, 14, 650, 15),
    woosh.Token(woosh.NUMBER, '0.5', 650, 16, 650, 19),
    woosh.Token(woosh.OP, ':', 650, 19, 650, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 650, 20, 651, 0),
    woosh.Token(woosh.INDENT, '            ', 651, 0, 651, 12),
    woosh.Token(woosh.NAME, 'theta', 651, 12, 651, 17),
    woosh.Token(woosh.OP, '=', 651, 18, 651, 19),
    woosh.Token(woosh.OP, '(', 651, 20, 651, 21),
    woosh.Token(woosh.NAME, 'mu', 651, 21, 651, 23),
    woosh.Token(woosh.OP, '+', 651, 24, 651, 25),
    woosh.Token(woosh.NAME, '_acos', 651, 26, 651, 31),
    woosh.Token(woosh.OP, '(', 651, 31, 651, 32),
    woosh.Token(woosh.NAME, 'f', 651, 32, 651, 33),
    woosh.Token(woosh.OP, ')', 651, 33, 651, 34),
    woosh.Token(woosh.OP, ')', 651, 34, 651, 35),
    woosh.Token(woosh.OP, '%', 651, 36, 651, 37),
    woosh.Token(woosh.NAME, 'TWOPI', 651, 38, 651, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 651, 43, 652, 0),
    woosh.Token(woosh.DEDENT, '        ', 652, 0, 652, 8),
    woosh.Token(woosh.NAME, 'else', 652, 8, 652, 12),
    woosh.Token(woosh.OP, ':', 652, 12, 652, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 652, 13, 653, 0),
    woosh.Token(woosh.INDENT, '            ', 653, 0, 653, 12),
    woosh.Token(woosh.NAME, 'theta', 653, 12, 653, 17),
    woosh.Token(woosh.OP, '=', 653, 18, 653, 19),
    woosh.Token(woosh.OP, '(', 653, 20, 653, 21),
    woosh.Token(woosh.NAME, 'mu', 653, 21, 653, 23),
    woosh.Token(woosh.OP, '-', 653, 24, 653, 25),
    woosh.Token(woosh.NAME, '_acos', 653, 26, 653, 31),
    woosh.Token(woosh.OP, '(', 653, 31, 653, 32),
    woosh.Token(woosh.NAME, 'f', 653, 32, 653, 33),
    woosh.Token(woosh.OP, ')', 653, 33, 653, 34),
    woosh.Token(woosh.OP, ')', 653, 34, 653, 35),
    woosh.Token(woosh.OP, '%', 653, 36, 653, 37),
    woosh.Token(woosh.NAME, 'TWOPI', 653, 38, 653, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 653, 43, 654, 0),
    woosh.Token(woosh.DEDENT, '        ', 655, 0, 655, 8),
    woosh.Token(woosh.NAME, 'return', 655, 8, 655, 14),
    woosh.Token(woosh.NAME, 'theta', 655, 15, 655, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 655, 20, 656, 0),
    woosh.Token(woosh.DEDENT, '    ', 657, 0, 657, 4),
    woosh.Token(woosh.NAME, 'def', 657, 4, 657, 7),
    woosh.Token(woosh.NAME, 'gammavariate', 657, 8, 657, 20),
    woosh.Token(woosh.OP, '(', 657, 20, 657, 21),
    woosh.Token(woosh.NAME, 'self', 657, 21, 657, 25),
    woosh.Token(woosh.OP, ',', 657, 25, 657, 26),
    woosh.Token(woosh.NAME, 'alpha', 657, 27, 657, 32),
    woosh.Token(woosh.OP, ',', 657, 32, 657, 33),
    woosh.Token(woosh.NAME, 'beta', 657, 34, 657, 38),
    woosh.Token(woosh.OP, ')', 657, 38, 657, 39),
    woosh.Token(woosh.OP, ':', 657, 39, 657, 40),
    woosh.Token(woosh.NEWLINE, '\r\n', 657, 40, 658, 0),
    woosh.Token(woosh.INDENT, '        ', 658, 0, 658, 8),
    woosh.Token(woosh.STRING, '"""Gamma distribution.  Not the gamma function!\r\n\r\n        Conditions on the parameters are alpha > 0 and beta > 0.\r\n\r\n        The probability distribution function is:\r\n\r\n                    x ** (alpha - 1) * math.exp(-x / beta)\r\n          pdf(x) =  --------------------------------------\r\n                      math.gamma(alpha) * beta ** alpha\r\n\r\n        """', 658, 8, 668, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 668, 11, 669, 0),
    woosh.Token(woosh.COMMENT, '# alpha > 0, beta > 0, mean is alpha*beta, variance is alpha*beta**2', 669, 8, 669, 76),
    woosh.Token(woosh.NEWLINE, '\r\n', 669, 76, 670, 0),
    woosh.Token(woosh.COMMENT, '# Warning: a few older sources define the gamma distribution in terms', 671, 8, 671, 77),
    woosh.Token(woosh.NEWLINE, '\r\n', 671, 77, 672, 0),
    woosh.Token(woosh.COMMENT, '# of alpha > -1.0', 672, 8, 672, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 672, 25, 673, 0),
    woosh.Token(woosh.NAME, 'if', 673, 8, 673, 10),
    woosh.Token(woosh.NAME, 'alpha', 673, 11, 673, 16),
    woosh.Token(woosh.OP, '<=', 673, 17, 673, 19),
    woosh.Token(woosh.NUMBER, '0.0', 673, 20, 673, 23),
    woosh.Token(woosh.NAME, 'or', 673, 24, 673, 26),
    woosh.Token(woosh.NAME, 'beta', 673, 27, 673, 31),
    woosh.Token(woosh.OP, '<=', 673, 32, 673, 34),
    woosh.Token(woosh.NUMBER, '0.0', 673, 35, 673, 38),
    woosh.Token(woosh.OP, ':', 673, 38, 673, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 673, 39, 674, 0),
    woosh.Token(woosh.INDENT, '            ', 674, 0, 674, 12),
    woosh.Token(woosh.NAME, 'raise', 674, 12, 674, 17),
    woosh.Token(woosh.NAME, 'ValueError', 674, 18, 674, 28),
    woosh.Token(woosh.OP, '(', 674, 28, 674, 29),
    woosh.Token(woosh.STRING, "'gammavariate: alpha and beta must be > 0.0'", 674, 29, 674, 73),
    woosh.Token(woosh.OP, ')', 674, 73, 674, 74),
    woosh.Token(woosh.NEWLINE, '\r\n', 674, 74, 675, 0),
    woosh.Token(woosh.DEDENT, '        ', 676, 0, 676, 8),
    woosh.Token(woosh.NAME, 'random', 676, 8, 676, 14),
    woosh.Token(woosh.OP, '=', 676, 15, 676, 16),
    woosh.Token(woosh.NAME, 'self', 676, 17, 676, 21),
    woosh.Token(woosh.OP, '.', 676, 21, 676, 22),
    woosh.Token(woosh.NAME, 'random', 676, 22, 676, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 676, 28, 677, 0),
    woosh.Token(woosh.NAME, 'if', 677, 8, 677, 10),
    woosh.Token(woosh.NAME, 'alpha', 677, 11, 677, 16),
    woosh.Token(woosh.OP, '>', 677, 17, 677, 18),
    woosh.Token(woosh.NUMBER, '1.0', 677, 19, 677, 22),
    woosh.Token(woosh.OP, ':', 677, 22, 677, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 677, 23, 678, 0),
    woosh.Token(woosh.COMMENT, '# Uses R.C.H. Cheng, "The generation of Gamma', 679, 12, 679, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 679, 57, 680, 0),
    woosh.Token(woosh.COMMENT, '# variables with non-integral shape parameters",', 680, 12, 680, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 680, 60, 681, 0),
    woosh.Token(woosh.COMMENT, '# Applied Statistics, (1977), 26, No. 1, p71-74', 681, 12, 681, 59),
    woosh.Token(woosh.NEWLINE, '\r\n', 681, 59, 682, 0),
    woosh.Token(woosh.INDENT, '            ', 683, 0, 683, 12),
    woosh.Token(woosh.NAME, 'ainv', 683, 12, 683, 16),
    woosh.Token(woosh.OP, '=', 683, 17, 683, 18),
    woosh.Token(woosh.NAME, '_sqrt', 683, 19, 683, 24),
    woosh.Token(woosh.OP, '(', 683, 24, 683, 25),
    woosh.Token(woosh.NUMBER, '2.0', 683, 25, 683, 28),
    woosh.Token(woosh.OP, '*', 683, 29, 683, 30),
    woosh.Token(woosh.NAME, 'alpha', 683, 31, 683, 36),
    woosh.Token(woosh.OP, '-', 683, 37, 683, 38),
    woosh.Token(woosh.NUMBER, '1.0', 683, 39, 683, 42),
    woosh.Token(woosh.OP, ')', 683, 42, 683, 43),
    woosh.Token(woosh.NEWLINE, '\r\n', 683, 43, 684, 0),
    woosh.Token(woosh.NAME, 'bbb', 684, 12, 684, 15),
    woosh.Token(woosh.OP, '=', 684, 16, 684, 17),
    woosh.Token(woosh.NAME, 'alpha', 684, 18, 684, 23),
    woosh.Token(woosh.OP, '-', 684, 24, 684, 25),
    woosh.Token(woosh.NAME, 'LOG4', 684, 26, 684, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 684, 30, 685, 0),
    woosh.Token(woosh.NAME, 'ccc', 685, 12, 685, 15),
    woosh.Token(woosh.OP, '=', 685, 16, 685, 17),
    woosh.Token(woosh.NAME, 'alpha', 685, 18, 685, 23),
    woosh.Token(woosh.OP, '+', 685, 24, 685, 25),
    woosh.Token(woosh.NAME, 'ainv', 685, 26, 685, 30),
    woosh.Token(woosh.NEWLINE, '\r\n', 685, 30, 686, 0),
    woosh.Token(woosh.NAME, 'while', 687, 12, 687, 17),
    woosh.Token(woosh.NAME, 'True', 687, 18, 687, 22),
    woosh.Token(woosh.OP, ':', 687, 22, 687, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 687, 23, 688, 0),
    woosh.Token(woosh.INDENT, '                ', 688, 0, 688, 16),
    woosh.Token(woosh.NAME, 'u1', 688, 16, 688, 18),
    woosh.Token(woosh.OP, '=', 688, 19, 688, 20),
    woosh.Token(woosh.NAME, 'random', 688, 21, 688, 27),
    woosh.Token(woosh.OP, '(', 688, 27, 688, 28),
    woosh.Token(woosh.OP, ')', 688, 28, 688, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 688, 29, 689, 0),
    woosh.Token(woosh.NAME, 'if', 689, 16, 689, 18),
    woosh.Token(woosh.NAME, 'not', 689, 19, 689, 22),
    woosh.Token(woosh.NUMBER, '1e-7', 689, 23, 689, 27),
    woosh.Token(woosh.OP, '<', 689, 28, 689, 29),
    woosh.Token(woosh.NAME, 'u1', 689, 30, 689, 32),
    woosh.Token(woosh.OP, '<', 689, 33, 689, 34),
    woosh.Token(woosh.NUMBER, '0.9999999', 689, 35, 689, 44),
    woosh.Token(woosh.OP, ':', 689, 44, 689, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 689, 45, 690, 0),
    woosh.Token(woosh.INDENT, '                    ', 690, 0, 690, 20),
    woosh.Token(woosh.NAME, 'continue', 690, 20, 690, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 690, 28, 691, 0),
    woosh.Token(woosh.DEDENT, '                ', 691, 0, 691, 16),
    woosh.Token(woosh.NAME, 'u2', 691, 16, 691, 18),
    woosh.Token(woosh.OP, '=', 691, 19, 691, 20),
    woosh.Token(woosh.NUMBER, '1.0', 691, 21, 691, 24),
    woosh.Token(woosh.OP, '-', 691, 25, 691, 26),
    woosh.Token(woosh.NAME, 'random', 691, 27, 691, 33),
    woosh.Token(woosh.OP, '(', 691, 33, 691, 34),
    woosh.Token(woosh.OP, ')', 691, 34, 691, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 691, 35, 692, 0),
    woosh.Token(woosh.NAME, 'v', 692, 16, 692, 17),
    woosh.Token(woosh.OP, '=', 692, 18, 692, 19),
    woosh.Token(woosh.NAME, '_log', 692, 20, 692, 24),
    woosh.Token(woosh.OP, '(', 692, 24, 692, 25),
    woosh.Token(woosh.NAME, 'u1', 692, 25, 692, 27),
    woosh.Token(woosh.OP, '/', 692, 28, 692, 29),
    woosh.Token(woosh.OP, '(', 692, 30, 692, 31),
    woosh.Token(woosh.NUMBER, '1.0', 692, 31, 692, 34),
    woosh.Token(woosh.OP, '-', 692, 35, 692, 36),
    woosh.Token(woosh.NAME, 'u1', 692, 37, 692, 39),
    woosh.Token(woosh.OP, ')', 692, 39, 692, 40),
    woosh.Token(woosh.OP, ')', 692, 40, 692, 41),
    woosh.Token(woosh.OP, '/', 692, 42, 692, 43),
    woosh.Token(woosh.NAME, 'ainv', 692, 44, 692, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 692, 48, 693, 0),
    woosh.Token(woosh.NAME, 'x', 693, 16, 693, 17),
    woosh.Token(woosh.OP, '=', 693, 18, 693, 19),
    woosh.Token(woosh.NAME, 'alpha', 693, 20, 693, 25),
    woosh.Token(woosh.OP, '*', 693, 26, 693, 27),
    woosh.Token(woosh.NAME, '_exp', 693, 28, 693, 32),
    woosh.Token(woosh.OP, '(', 693, 32, 693, 33),
    woosh.Token(woosh.NAME, 'v', 693, 33, 693, 34),
    woosh.Token(woosh.OP, ')', 693, 34, 693, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 693, 35, 694, 0),
    woosh.Token(woosh.NAME, 'z', 694, 16, 694, 17),
    woosh.Token(woosh.OP, '=', 694, 18, 694, 19),
    woosh.Token(woosh.NAME, 'u1', 694, 20, 694, 22),
    woosh.Token(woosh.OP, '*', 694, 23, 694, 24),
    woosh.Token(woosh.NAME, 'u1', 694, 25, 694, 27),
    woosh.Token(woosh.OP, '*', 694, 28, 694, 29),
    woosh.Token(woosh.NAME, 'u2', 694, 30, 694, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 694, 32, 695, 0),
    woosh.Token(woosh.NAME, 'r', 695, 16, 695, 17),
    woosh.Token(woosh.OP, '=', 695, 18, 695, 19),
    woosh.Token(woosh.NAME, 'bbb', 695, 20, 695, 23),
    woosh.Token(woosh.OP, '+', 695, 24, 695, 25),
    woosh.Token(woosh.NAME, 'ccc', 695, 26, 695, 29),
    woosh.Token(woosh.OP, '*', 695, 30, 695, 31),
    woosh.Token(woosh.NAME, 'v', 695, 32, 695, 33),
    woosh.Token(woosh.OP, '-', 695, 34, 695, 35),
    woosh.Token(woosh.NAME, 'x', 695, 36, 695, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 695, 37, 696, 0),
    woosh.Token(woosh.NAME, 'if', 696, 16, 696, 18),
    woosh.Token(woosh.NAME, 'r', 696, 19, 696, 20),
    woosh.Token(woosh.OP, '+', 696, 21, 696, 22),
    woosh.Token(woosh.NAME, 'SG_MAGICCONST', 696, 23, 696, 36),
    woosh.Token(woosh.OP, '-', 696, 37, 696, 38),
    woosh.Token(woosh.NUMBER, '4.5', 696, 39, 696, 42),
    woosh.Token(woosh.OP, '*', 696, 43, 696, 44),
    woosh.Token(woosh.NAME, 'z', 696, 45, 696, 46),
    woosh.Token(woosh.OP, '>=', 696, 47, 696, 49),
    woosh.Token(woosh.NUMBER, '0.0', 696, 50, 696, 53),
    woosh.Token(woosh.NAME, 'or', 696, 54, 696, 56),
    woosh.Token(woosh.NAME, 'r', 696, 57, 696, 58),
    woosh.Token(woosh.OP, '>=', 696, 59, 696, 61),
    woosh.Token(woosh.NAME, '_log', 696, 62, 696, 66),
    woosh.Token(woosh.OP, '(', 696, 66, 696, 67),
    woosh.Token(woosh.NAME, 'z', 696, 67, 696, 68),
    woosh.Token(woosh.OP, ')', 696, 68, 696, 69),
    woosh.Token(woosh.OP, ':', 696, 69, 696, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 696, 70, 697, 0),
    woosh.Token(woosh.INDENT, '                    ', 697, 0, 697, 20),
    woosh.Token(woosh.NAME, 'return', 697, 20, 697, 26),
    woosh.Token(woosh.NAME, 'x', 697, 27, 697, 28),
    woosh.Token(woosh.OP, '*', 697, 29, 697, 30),
    woosh.Token(woosh.NAME, 'beta', 697, 31, 697, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 697, 35, 698, 0),
    woosh.Token(woosh.DEDENT, '        ', 699, 0, 699, 8),
    woosh.Token(woosh.DEDENT, '', 699, 8, 699, 8),
    woosh.Token(woosh.DEDENT, '', 699, 8, 699, 8),
    woosh.Token(woosh.NAME, 'elif', 699, 8, 699, 12),
    woosh.Token(woosh.NAME, 'alpha', 699, 13, 699, 18),
    woosh.Token(woosh.OP, '==', 699, 19, 699, 21),
    woosh.Token(woosh.NUMBER, '1.0', 699, 22, 699, 25),
    woosh.Token(woosh.OP, ':', 699, 25, 699, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 699, 26, 700, 0),
    woosh.Token(woosh.COMMENT, '# expovariate(1/beta)', 700, 12, 700, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 700, 33, 701, 0),
    woosh.Token(woosh.INDENT, '            ', 701, 0, 701, 12),
    woosh.Token(woosh.NAME, 'return', 701, 12, 701, 18),
    woosh.Token(woosh.OP, '-', 701, 19, 701, 20),
    woosh.Token(woosh.NAME, '_log', 701, 20, 701, 24),
    woosh.Token(woosh.OP, '(', 701, 24, 701, 25),
    woosh.Token(woosh.NUMBER, '1.0', 701, 25, 701, 28),
    woosh.Token(woosh.OP, '-', 701, 29, 701, 30),
    woosh.Token(woosh.NAME, 'random', 701, 31, 701, 37),
    woosh.Token(woosh.OP, '(', 701, 37, 701, 38),
    woosh.Token(woosh.OP, ')', 701, 38, 701, 39),
    woosh.Token(woosh.OP, ')', 701, 39, 701, 40),
    woosh.Token(woosh.OP, '*', 701, 41, 701, 42),
    woosh.Token(woosh.NAME, 'beta', 701, 43, 701, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 701, 47, 702, 0),
    woosh.Token(woosh.DEDENT, '        ', 703, 0, 703, 8),
    woosh.Token(woosh.NAME, 'else', 703, 8, 703, 12),
    woosh.Token(woosh.OP, ':', 703, 12, 703, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 703, 13, 704, 0),
    woosh.Token(woosh.COMMENT, '# alpha is between 0 and 1 (exclusive)', 704, 12, 704, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 704, 50, 705, 0),
    woosh.Token(woosh.COMMENT, '# Uses ALGORITHM GS of Statistical Computing - Kennedy & Gentle', 705, 12, 705, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 705, 75, 706, 0),
    woosh.Token(woosh.INDENT, '            ', 706, 0, 706, 12),
    woosh.Token(woosh.NAME, 'while', 706, 12, 706, 17),
    woosh.Token(woosh.NAME, 'True', 706, 18, 706, 22),
    woosh.Token(woosh.OP, ':', 706, 22, 706, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 706, 23, 707, 0),
    woosh.Token(woosh.INDENT, '                ', 707, 0, 707, 16),
    woosh.Token(woosh.NAME, 'u', 707, 16, 707, 17),
    woosh.Token(woosh.OP, '=', 707, 18, 707, 19),
    woosh.Token(woosh.NAME, 'random', 707, 20, 707, 26),
    woosh.Token(woosh.OP, '(', 707, 26, 707, 27),
    woosh.Token(woosh.OP, ')', 707, 27, 707, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 707, 28, 708, 0),
    woosh.Token(woosh.NAME, 'b', 708, 16, 708, 17),
    woosh.Token(woosh.OP, '=', 708, 18, 708, 19),
    woosh.Token(woosh.OP, '(', 708, 20, 708, 21),
    woosh.Token(woosh.NAME, '_e', 708, 21, 708, 23),
    woosh.Token(woosh.OP, '+', 708, 24, 708, 25),
    woosh.Token(woosh.NAME, 'alpha', 708, 26, 708, 31),
    woosh.Token(woosh.OP, ')', 708, 31, 708, 32),
    woosh.Token(woosh.OP, '/', 708, 33, 708, 34),
    woosh.Token(woosh.NAME, '_e', 708, 35, 708, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 708, 37, 709, 0),
    woosh.Token(woosh.NAME, 'p', 709, 16, 709, 17),
    woosh.Token(woosh.OP, '=', 709, 18, 709, 19),
    woosh.Token(woosh.NAME, 'b', 709, 20, 709, 21),
    woosh.Token(woosh.OP, '*', 709, 22, 709, 23),
    woosh.Token(woosh.NAME, 'u', 709, 24, 709, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 709, 25, 710, 0),
    woosh.Token(woosh.NAME, 'if', 710, 16, 710, 18),
    woosh.Token(woosh.NAME, 'p', 710, 19, 710, 20),
    woosh.Token(woosh.OP, '<=', 710, 21, 710, 23),
    woosh.Token(woosh.NUMBER, '1.0', 710, 24, 710, 27),
    woosh.Token(woosh.OP, ':', 710, 27, 710, 28),
    woosh.Token(woosh.NEWLINE, '\r\n', 710, 28, 711, 0),
    woosh.Token(woosh.INDENT, '                    ', 711, 0, 711, 20),
    woosh.Token(woosh.NAME, 'x', 711, 20, 711, 21),
    woosh.Token(woosh.OP, '=', 711, 22, 711, 23),
    woosh.Token(woosh.NAME, 'p', 711, 24, 711, 25),
    woosh.Token(woosh.OP, '**', 711, 26, 711, 28),
    woosh.Token(woosh.OP, '(', 711, 29, 711, 30),
    woosh.Token(woosh.NUMBER, '1.0', 711, 30, 711, 33),
    woosh.Token(woosh.OP, '/', 711, 34, 711, 35),
    woosh.Token(woosh.NAME, 'alpha', 711, 36, 711, 41),
    woosh.Token(woosh.OP, ')', 711, 41, 711, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 711, 42, 712, 0),
    woosh.Token(woosh.DEDENT, '                ', 712, 0, 712, 16),
    woosh.Token(woosh.NAME, 'else', 712, 16, 712, 20),
    woosh.Token(woosh.OP, ':', 712, 20, 712, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 712, 21, 713, 0),
    woosh.Token(woosh.INDENT, '                    ', 713, 0, 713, 20),
    woosh.Token(woosh.NAME, 'x', 713, 20, 713, 21),
    woosh.Token(woosh.OP, '=', 713, 22, 713, 23),
    woosh.Token(woosh.OP, '-', 713, 24, 713, 25),
    woosh.Token(woosh.NAME, '_log', 713, 25, 713, 29),
    woosh.Token(woosh.OP, '(', 713, 29, 713, 30),
    woosh.Token(woosh.OP, '(', 713, 30, 713, 31),
    woosh.Token(woosh.NAME, 'b', 713, 31, 713, 32),
    woosh.Token(woosh.OP, '-', 713, 33, 713, 34),
    woosh.Token(woosh.NAME, 'p', 713, 35, 713, 36),
    woosh.Token(woosh.OP, ')', 713, 36, 713, 37),
    woosh.Token(woosh.OP, '/', 713, 38, 713, 39),
    woosh.Token(woosh.NAME, 'alpha', 713, 40, 713, 45),
    woosh.Token(woosh.OP, ')', 713, 45, 713, 46),
    woosh.Token(woosh.NEWLINE, '\r\n', 713, 46, 714, 0),
    woosh.Token(woosh.DEDENT, '                ', 714, 0, 714, 16),
    woosh.Token(woosh.NAME, 'u1', 714, 16, 714, 18),
    woosh.Token(woosh.OP, '=', 714, 19, 714, 20),
    woosh.Token(woosh.NAME, 'random', 714, 21, 714, 27),
    woosh.Token(woosh.OP, '(', 714, 27, 714, 28),
    woosh.Token(woosh.OP, ')', 714, 28, 714, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 714, 29, 715, 0),
    woosh.Token(woosh.NAME, 'if', 715, 16, 715, 18),
    woosh.Token(woosh.NAME, 'p', 715, 19, 715, 20),
    woosh.Token(woosh.OP, '>', 715, 21, 715, 22),
    woosh.Token(woosh.NUMBER, '1.0', 715, 23, 715, 26),
    woosh.Token(woosh.OP, ':', 715, 26, 715, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 715, 27, 716, 0),
    woosh.Token(woosh.INDENT, '                    ', 716, 0, 716, 20),
    woosh.Token(woosh.NAME, 'if', 716, 20, 716, 22),
    woosh.Token(woosh.NAME, 'u1', 716, 23, 716, 25),
    woosh.Token(woosh.OP, '<=', 716, 26, 716, 28),
    woosh.Token(woosh.NAME, 'x', 716, 29, 716, 30),
    woosh.Token(woosh.OP, '**', 716, 31, 716, 33),
    woosh.Token(woosh.OP, '(', 716, 34, 716, 35),
    woosh.Token(woosh.NAME, 'alpha', 716, 35, 716, 40),
    woosh.Token(woosh.OP, '-', 716, 41, 716, 42),
    woosh.Token(woosh.NUMBER, '1.0', 716, 43, 716, 46),
    woosh.Token(woosh.OP, ')', 716, 46, 716, 47),
    woosh.Token(woosh.OP, ':', 716, 47, 716, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 716, 48, 717, 0),
    woosh.Token(woosh.INDENT, '                        ', 717, 0, 717, 24),
    woosh.Token(woosh.NAME, 'break', 717, 24, 717, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 717, 29, 718, 0),
    woosh.Token(woosh.DEDENT, '                ', 718, 0, 718, 16),
    woosh.Token(woosh.DEDENT, '', 718, 16, 718, 16),
    woosh.Token(woosh.NAME, 'elif', 718, 16, 718, 20),
    woosh.Token(woosh.NAME, 'u1', 718, 21, 718, 23),
    woosh.Token(woosh.OP, '<=', 718, 24, 718, 26),
    woosh.Token(woosh.NAME, '_exp', 718, 27, 718, 31),
    woosh.Token(woosh.OP, '(', 718, 31, 718, 32),
    woosh.Token(woosh.OP, '-', 718, 32, 718, 33),
    woosh.Token(woosh.NAME, 'x', 718, 33, 718, 34),
    woosh.Token(woosh.OP, ')', 718, 34, 718, 35),
    woosh.Token(woosh.OP, ':', 718, 35, 718, 36),
    woosh.Token(woosh.NEWLINE, '\r\n', 718, 36, 719, 0),
    woosh.Token(woosh.INDENT, '                    ', 719, 0, 719, 20),
    woosh.Token(woosh.NAME, 'break', 719, 20, 719, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 719, 25, 720, 0),
    woosh.Token(woosh.DEDENT, '            ', 720, 0, 720, 12),
    woosh.Token(woosh.DEDENT, '', 720, 12, 720, 12),
    woosh.Token(woosh.NAME, 'return', 720, 12, 720, 18),
    woosh.Token(woosh.NAME, 'x', 720, 19, 720, 20),
    woosh.Token(woosh.OP, '*', 720, 21, 720, 22),
    woosh.Token(woosh.NAME, 'beta', 720, 23, 720, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 720, 27, 721, 0),
    woosh.Token(woosh.DEDENT, '    ', 722, 0, 722, 4),
    woosh.Token(woosh.DEDENT, '', 722, 4, 722, 4),
    woosh.Token(woosh.NAME, 'def', 722, 4, 722, 7),
    woosh.Token(woosh.NAME, 'betavariate', 722, 8, 722, 19),
    woosh.Token(woosh.OP, '(', 722, 19, 722, 20),
    woosh.Token(woosh.NAME, 'self', 722, 20, 722, 24),
    woosh.Token(woosh.OP, ',', 722, 24, 722, 25),
    woosh.Token(woosh.NAME, 'alpha', 722, 26, 722, 31),
    woosh.Token(woosh.OP, ',', 722, 31, 722, 32),
    woosh.Token(woosh.NAME, 'beta', 722, 33, 722, 37),
    woosh.Token(woosh.OP, ')', 722, 37, 722, 38),
    woosh.Token(woosh.OP, ':', 722, 38, 722, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 722, 39, 723, 0),
    woosh.Token(woosh.INDENT, '        ', 723, 0, 723, 8),
    woosh.Token(woosh.STRING, '"""Beta distribution.\r\n\r\n        Conditions on the parameters are alpha > 0 and beta > 0.\r\n        Returned values range between 0 and 1.\r\n\r\n        """', 723, 8, 728, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 728, 11, 729, 0),
    woosh.Token(woosh.COMMENT, '## See', 729, 8, 729, 14),
    woosh.Token(woosh.NEWLINE, '\r\n', 729, 14, 730, 0),
    woosh.Token(woosh.COMMENT, '## http://mail.python.org/pipermail/python-bugs-list/2001-January/003752.html', 730, 8, 730, 85),
    woosh.Token(woosh.NEWLINE, '\r\n', 730, 85, 731, 0),
    woosh.Token(woosh.COMMENT, "## for Ivan Frohne's insightful analysis of why the original implementation:", 731, 8, 731, 84),
    woosh.Token(woosh.NEWLINE, '\r\n', 731, 84, 732, 0),
    woosh.Token(woosh.COMMENT, '##', 732, 8, 732, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 732, 10, 733, 0),
    woosh.Token(woosh.COMMENT, '##    def betavariate(self, alpha, beta):', 733, 8, 733, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 733, 49, 734, 0),
    woosh.Token(woosh.COMMENT, '##        # Discrete Event Simulation in C, pp 87-88.', 734, 8, 734, 61),
    woosh.Token(woosh.NEWLINE, '\r\n', 734, 61, 735, 0),
    woosh.Token(woosh.COMMENT, '##', 735, 8, 735, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 735, 10, 736, 0),
    woosh.Token(woosh.COMMENT, '##        y = self.expovariate(alpha)', 736, 8, 736, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 736, 45, 737, 0),
    woosh.Token(woosh.COMMENT, '##        z = self.expovariate(1.0/beta)', 737, 8, 737, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 737, 48, 738, 0),
    woosh.Token(woosh.COMMENT, '##        return z/(y+z)', 738, 8, 738, 32),
    woosh.Token(woosh.NEWLINE, '\r\n', 738, 32, 739, 0),
    woosh.Token(woosh.COMMENT, '##', 739, 8, 739, 10),
    woosh.Token(woosh.NEWLINE, '\r\n', 739, 10, 740, 0),
    woosh.Token(woosh.COMMENT, '## was dead wrong, and how it probably got that way.', 740, 8, 740, 60),
    woosh.Token(woosh.NEWLINE, '\r\n', 740, 60, 741, 0),
    woosh.Token(woosh.COMMENT, '# This version due to Janne Sinkkonen, and matches all the std', 742, 8, 742, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 742, 70, 743, 0),
    woosh.Token(woosh.COMMENT, '# texts (e.g., Knuth Vol 2 Ed 3 pg 134 "the beta distribution").', 743, 8, 743, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 743, 72, 744, 0),
    woosh.Token(woosh.NAME, 'y', 744, 8, 744, 9),
    woosh.Token(woosh.OP, '=', 744, 10, 744, 11),
    woosh.Token(woosh.NAME, 'self', 744, 12, 744, 16),
    woosh.Token(woosh.OP, '.', 744, 16, 744, 17),
    woosh.Token(woosh.NAME, 'gammavariate', 744, 17, 744, 29),
    woosh.Token(woosh.OP, '(', 744, 29, 744, 30),
    woosh.Token(woosh.NAME, 'alpha', 744, 30, 744, 35),
    woosh.Token(woosh.OP, ',', 744, 35, 744, 36),
    woosh.Token(woosh.NUMBER, '1.0', 744, 37, 744, 40),
    woosh.Token(woosh.OP, ')', 744, 40, 744, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 744, 41, 745, 0),
    woosh.Token(woosh.NAME, 'if', 745, 8, 745, 10),
    woosh.Token(woosh.NAME, 'y', 745, 11, 745, 12),
    woosh.Token(woosh.OP, ':', 745, 12, 745, 13),
    woosh.Token(woosh.NEWLINE, '\r\n', 745, 13, 746, 0),
    woosh.Token(woosh.INDENT, '            ', 746, 0, 746, 12),
    woosh.Token(woosh.NAME, 'return', 746, 12, 746, 18),
    woosh.Token(woosh.NAME, 'y', 746, 19, 746, 20),
    woosh.Token(woosh.OP, '/', 746, 21, 746, 22),
    woosh.Token(woosh.OP, '(', 746, 23, 746, 24),
    woosh.Token(woosh.NAME, 'y', 746, 24, 746, 25),
    woosh.Token(woosh.OP, '+', 746, 26, 746, 27),
    woosh.Token(woosh.NAME, 'self', 746, 28, 746, 32),
    woosh.Token(woosh.OP, '.', 746, 32, 746, 33),
    woosh.Token(woosh.NAME, 'gammavariate', 746, 33, 746, 45),
    woosh.Token(woosh.OP, '(', 746, 45, 746, 46),
    woosh.Token(woosh.NAME, 'beta', 746, 46, 746, 50),
    woosh.Token(woosh.OP, ',', 746, 50, 746, 51),
    woosh.Token(woosh.NUMBER, '1.0', 746, 52, 746, 55),
    woosh.Token(woosh.OP, ')', 746, 55, 746, 56),
    woosh.Token(woosh.OP, ')', 746, 56, 746, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 746, 57, 747, 0),
    woosh.Token(woosh.DEDENT, '        ', 747, 0, 747, 8),
    woosh.Token(woosh.NAME, 'return', 747, 8, 747, 14),
    woosh.Token(woosh.NUMBER, '0.0', 747, 15, 747, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 747, 18, 748, 0),
    woosh.Token(woosh.DEDENT, '    ', 749, 0, 749, 4),
    woosh.Token(woosh.NAME, 'def', 749, 4, 749, 7),
    woosh.Token(woosh.NAME, 'paretovariate', 749, 8, 749, 21),
    woosh.Token(woosh.OP, '(', 749, 21, 749, 22),
    woosh.Token(woosh.NAME, 'self', 749, 22, 749, 26),
    woosh.Token(woosh.OP, ',', 749, 26, 749, 27),
    woosh.Token(woosh.NAME, 'alpha', 749, 28, 749, 33),
    woosh.Token(woosh.OP, ')', 749, 33, 749, 34),
    woosh.Token(woosh.OP, ':', 749, 34, 749, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 749, 35, 750, 0),
    woosh.Token(woosh.INDENT, '        ', 750, 0, 750, 8),
    woosh.Token(woosh.STRING, '"""Pareto distribution.  alpha is the shape parameter."""', 750, 8, 750, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 750, 65, 751, 0),
    woosh.Token(woosh.COMMENT, '# Jain, pg. 495', 751, 8, 751, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 751, 23, 752, 0),
    woosh.Token(woosh.NAME, 'u', 753, 8, 753, 9),
    woosh.Token(woosh.OP, '=', 753, 10, 753, 11),
    woosh.Token(woosh.NUMBER, '1.0', 753, 12, 753, 15),
    woosh.Token(woosh.OP, '-', 753, 16, 753, 17),
    woosh.Token(woosh.NAME, 'self', 753, 18, 753, 22),
    woosh.Token(woosh.OP, '.', 753, 22, 753, 23),
    woosh.Token(woosh.NAME, 'random', 753, 23, 753, 29),
    woosh.Token(woosh.OP, '(', 753, 29, 753, 30),
    woosh.Token(woosh.OP, ')', 753, 30, 753, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 753, 31, 754, 0),
    woosh.Token(woosh.NAME, 'return', 754, 8, 754, 14),
    woosh.Token(woosh.NAME, 'u', 754, 15, 754, 16),
    woosh.Token(woosh.OP, '**', 754, 17, 754, 19),
    woosh.Token(woosh.OP, '(', 754, 20, 754, 21),
    woosh.Token(woosh.OP, '-', 754, 21, 754, 22),
    woosh.Token(woosh.NUMBER, '1.0', 754, 22, 754, 25),
    woosh.Token(woosh.OP, '/', 754, 26, 754, 27),
    woosh.Token(woosh.NAME, 'alpha', 754, 28, 754, 33),
    woosh.Token(woosh.OP, ')', 754, 33, 754, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 754, 34, 755, 0),
    woosh.Token(woosh.DEDENT, '    ', 756, 0, 756, 4),
    woosh.Token(woosh.NAME, 'def', 756, 4, 756, 7),
    woosh.Token(woosh.NAME, 'weibullvariate', 756, 8, 756, 22),
    woosh.Token(woosh.OP, '(', 756, 22, 756, 23),
    woosh.Token(woosh.NAME, 'self', 756, 23, 756, 27),
    woosh.Token(woosh.OP, ',', 756, 27, 756, 28),
    woosh.Token(woosh.NAME, 'alpha', 756, 29, 756, 34),
    woosh.Token(woosh.OP, ',', 756, 34, 756, 35),
    woosh.Token(woosh.NAME, 'beta', 756, 36, 756, 40),
    woosh.Token(woosh.OP, ')', 756, 40, 756, 41),
    woosh.Token(woosh.OP, ':', 756, 41, 756, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 756, 42, 757, 0),
    woosh.Token(woosh.INDENT, '        ', 757, 0, 757, 8),
    woosh.Token(woosh.STRING, '"""Weibull distribution.\r\n\r\n        alpha is the scale parameter and beta is the shape parameter.\r\n\r\n        """', 757, 8, 761, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 761, 11, 762, 0),
    woosh.Token(woosh.COMMENT, '# Jain, pg. 499; bug fix courtesy Bill Arms', 762, 8, 762, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 762, 51, 763, 0),
    woosh.Token(woosh.NAME, 'u', 764, 8, 764, 9),
    woosh.Token(woosh.OP, '=', 764, 10, 764, 11),
    woosh.Token(woosh.NUMBER, '1.0', 764, 12, 764, 15),
    woosh.Token(woosh.OP, '-', 764, 16, 764, 17),
    woosh.Token(woosh.NAME, 'self', 764, 18, 764, 22),
    woosh.Token(woosh.OP, '.', 764, 22, 764, 23),
    woosh.Token(woosh.NAME, 'random', 764, 23, 764, 29),
    woosh.Token(woosh.OP, '(', 764, 29, 764, 30),
    woosh.Token(woosh.OP, ')', 764, 30, 764, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 764, 31, 765, 0),
    woosh.Token(woosh.NAME, 'return', 765, 8, 765, 14),
    woosh.Token(woosh.NAME, 'alpha', 765, 15, 765, 20),
    woosh.Token(woosh.OP, '*', 765, 21, 765, 22),
    woosh.Token(woosh.OP, '(', 765, 23, 765, 24),
    woosh.Token(woosh.OP, '-', 765, 24, 765, 25),
    woosh.Token(woosh.NAME, '_log', 765, 25, 765, 29),
    woosh.Token(woosh.OP, '(', 765, 29, 765, 30),
    woosh.Token(woosh.NAME, 'u', 765, 30, 765, 31),
    woosh.Token(woosh.OP, ')', 765, 31, 765, 32),
    woosh.Token(woosh.OP, ')', 765, 32, 765, 33),
    woosh.Token(woosh.OP, '**', 765, 34, 765, 36),
    woosh.Token(woosh.OP, '(', 765, 37, 765, 38),
    woosh.Token(woosh.NUMBER, '1.0', 765, 38, 765, 41),
    woosh.Token(woosh.OP, '/', 765, 42, 765, 43),
    woosh.Token(woosh.NAME, 'beta', 765, 44, 765, 48),
    woosh.Token(woosh.OP, ')', 765, 48, 765, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 765, 49, 766, 0),
    woosh.Token(woosh.COMMENT, '## ------------------------------------------------------------------', 768, 0, 768, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 768, 69, 769, 0),
    woosh.Token(woosh.COMMENT, '## --------------- Operating System Random Source  ------------------', 769, 0, 769, 69),
    woosh.Token(woosh.NEWLINE, '\r\n', 769, 69, 770, 0),
    woosh.Token(woosh.DEDENT, '', 772, 0, 772, 0),
    woosh.Token(woosh.DEDENT, '', 772, 0, 772, 0),
    woosh.Token(woosh.NAME, 'class', 772, 0, 772, 5),
    woosh.Token(woosh.NAME, 'SystemRandom', 772, 6, 772, 18),
    woosh.Token(woosh.OP, '(', 772, 18, 772, 19),
    woosh.Token(woosh.NAME, 'Random', 772, 19, 772, 25),
    woosh.Token(woosh.OP, ')', 772, 25, 772, 26),
    woosh.Token(woosh.OP, ':', 772, 26, 772, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 772, 27, 773, 0),
    woosh.Token(woosh.INDENT, '    ', 773, 0, 773, 4),
    woosh.Token(woosh.STRING, '"""Alternate random number generator using sources provided\r\n    by the operating system (such as /dev/urandom on Unix or\r\n    CryptGenRandom on Windows).\r\n\r\n     Not available on all systems (see os.urandom() for details).\r\n\r\n    """', 773, 4, 779, 7),
    woosh.Token(woosh.NEWLINE, '\r\n', 779, 7, 780, 0),
    woosh.Token(woosh.NAME, 'def', 781, 4, 781, 7),
    woosh.Token(woosh.NAME, 'random', 781, 8, 781, 14),
    woosh.Token(woosh.OP, '(', 781, 14, 781, 15),
    woosh.Token(woosh.NAME, 'self', 781, 15, 781, 19),
    woosh.Token(woosh.OP, ')', 781, 19, 781, 20),
    woosh.Token(woosh.OP, ':', 781, 20, 781, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 781, 21, 782, 0),
    woosh.Token(woosh.INDENT, '        ', 782, 0, 782, 8),
    woosh.Token(woosh.STRING, '"""Get the next random number in the range [0.0, 1.0)."""', 782, 8, 782, 65),
    woosh.Token(woosh.NEWLINE, '\r\n', 782, 65, 783, 0),
    woosh.Token(woosh.NAME, 'return', 783, 8, 783, 14),
    woosh.Token(woosh.OP, '(', 783, 15, 783, 16),
    woosh.Token(woosh.NAME, 'int', 783, 16, 783, 19),
    woosh.Token(woosh.OP, '.', 783, 19, 783, 20),
    woosh.Token(woosh.NAME, 'from_bytes', 783, 20, 783, 30),
    woosh.Token(woosh.OP, '(', 783, 30, 783, 31),
    woosh.Token(woosh.NAME, '_urandom', 783, 31, 783, 39),
    woosh.Token(woosh.OP, '(', 783, 39, 783, 40),
    woosh.Token(woosh.NUMBER, '7', 783, 40, 783, 41),
    woosh.Token(woosh.OP, ')', 783, 41, 783, 42),
    woosh.Token(woosh.OP, ',', 783, 42, 783, 43),
    woosh.Token(woosh.STRING, "'big'", 783, 44, 783, 49),
    woosh.Token(woosh.OP, ')', 783, 49, 783, 50),
    woosh.Token(woosh.OP, '>>', 783, 51, 783, 53),
    woosh.Token(woosh.NUMBER, '3', 783, 54, 783, 55),
    woosh.Token(woosh.OP, ')', 783, 55, 783, 56),
    woosh.Token(woosh.OP, '*', 783, 57, 783, 58),
    woosh.Token(woosh.NAME, 'RECIP_BPF', 783, 59, 783, 68),
    woosh.Token(woosh.NEWLINE, '\r\n', 783, 68, 784, 0),
    woosh.Token(woosh.DEDENT, '    ', 785, 0, 785, 4),
    woosh.Token(woosh.NAME, 'def', 785, 4, 785, 7),
    woosh.Token(woosh.NAME, 'getrandbits', 785, 8, 785, 19),
    woosh.Token(woosh.OP, '(', 785, 19, 785, 20),
    woosh.Token(woosh.NAME, 'self', 785, 20, 785, 24),
    woosh.Token(woosh.OP, ',', 785, 24, 785, 25),
    woosh.Token(woosh.NAME, 'k', 785, 26, 785, 27),
    woosh.Token(woosh.OP, ')', 785, 27, 785, 28),
    woosh.Token(woosh.OP, ':', 785, 28, 785, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 785, 29, 786, 0),
    woosh.Token(woosh.INDENT, '        ', 786, 0, 786, 8),
    woosh.Token(woosh.STRING, '"""getrandbits(k) -> x.  Generates an int with k random bits."""', 786, 8, 786, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 786, 72, 787, 0),
    woosh.Token(woosh.NAME, 'if', 787, 8, 787, 10),
    woosh.Token(woosh.NAME, 'k', 787, 11, 787, 12),
    woosh.Token(woosh.OP, '<', 787, 13, 787, 14),
    woosh.Token(woosh.NUMBER, '0', 787, 15, 787, 16),
    woosh.Token(woosh.OP, ':', 787, 16, 787, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 787, 17, 788, 0),
    woosh.Token(woosh.INDENT, '            ', 788, 0, 788, 12),
    woosh.Token(woosh.NAME, 'raise', 788, 12, 788, 17),
    woosh.Token(woosh.NAME, 'ValueError', 788, 18, 788, 28),
    woosh.Token(woosh.OP, '(', 788, 28, 788, 29),
    woosh.Token(woosh.STRING, "'number of bits must be non-negative'", 788, 29, 788, 66),
    woosh.Token(woosh.OP, ')', 788, 66, 788, 67),
    woosh.Token(woosh.NEWLINE, '\r\n', 788, 67, 789, 0),
    woosh.Token(woosh.DEDENT, '        ', 789, 0, 789, 8),
    woosh.Token(woosh.NAME, 'numbytes', 789, 8, 789, 16),
    woosh.Token(woosh.OP, '=', 789, 17, 789, 18),
    woosh.Token(woosh.OP, '(', 789, 19, 789, 20),
    woosh.Token(woosh.NAME, 'k', 789, 20, 789, 21),
    woosh.Token(woosh.OP, '+', 789, 22, 789, 23),
    woosh.Token(woosh.NUMBER, '7', 789, 24, 789, 25),
    woosh.Token(woosh.OP, ')', 789, 25, 789, 26),
    woosh.Token(woosh.OP, '//', 789, 27, 789, 29),
    woosh.Token(woosh.NUMBER, '8', 789, 30, 789, 31),
    woosh.Token(woosh.COMMENT, '# bits / 8 and rounded up', 789, 54, 789, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 789, 79, 790, 0),
    woosh.Token(woosh.NAME, 'x', 790, 8, 790, 9),
    woosh.Token(woosh.OP, '=', 790, 10, 790, 11),
    woosh.Token(woosh.NAME, 'int', 790, 12, 790, 15),
    woosh.Token(woosh.OP, '.', 790, 15, 790, 16),
    woosh.Token(woosh.NAME, 'from_bytes', 790, 16, 790, 26),
    woosh.Token(woosh.OP, '(', 790, 26, 790, 27),
    woosh.Token(woosh.NAME, '_urandom', 790, 27, 790, 35),
    woosh.Token(woosh.OP, '(', 790, 35, 790, 36),
    woosh.Token(woosh.NAME, 'numbytes', 790, 36, 790, 44),
    woosh.Token(woosh.OP, ')', 790, 44, 790, 45),
    woosh.Token(woosh.OP, ',', 790, 45, 790, 46),
    woosh.Token(woosh.STRING, "'big'", 790, 47, 790, 52),
    woosh.Token(woosh.OP, ')', 790, 52, 790, 53),
    woosh.Token(woosh.NEWLINE, '\r\n', 790, 53, 791, 0),
    woosh.Token(woosh.NAME, 'return', 791, 8, 791, 14),
    woosh.Token(woosh.NAME, 'x', 791, 15, 791, 16),
    woosh.Token(woosh.OP, '>>', 791, 17, 791, 19),
    woosh.Token(woosh.OP, '(', 791, 20, 791, 21),
    woosh.Token(woosh.NAME, 'numbytes', 791, 21, 791, 29),
    woosh.Token(woosh.OP, '*', 791, 30, 791, 31),
    woosh.Token(woosh.NUMBER, '8', 791, 32, 791, 33),
    woosh.Token(woosh.OP, '-', 791, 34, 791, 35),
    woosh.Token(woosh.NAME, 'k', 791, 36, 791, 37),
    woosh.Token(woosh.OP, ')', 791, 37, 791, 38),
    woosh.Token(woosh.COMMENT, '# trim excess bits', 791, 54, 791, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 791, 72, 792, 0),
    woosh.Token(woosh.DEDENT, '    ', 793, 0, 793, 4),
    woosh.Token(woosh.NAME, 'def', 793, 4, 793, 7),
    woosh.Token(woosh.NAME, 'randbytes', 793, 8, 793, 17),
    woosh.Token(woosh.OP, '(', 793, 17, 793, 18),
    woosh.Token(woosh.NAME, 'self', 793, 18, 793, 22),
    woosh.Token(woosh.OP, ',', 793, 22, 793, 23),
    woosh.Token(woosh.NAME, 'n', 793, 24, 793, 25),
    woosh.Token(woosh.OP, ')', 793, 25, 793, 26),
    woosh.Token(woosh.OP, ':', 793, 26, 793, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 793, 27, 794, 0),
    woosh.Token(woosh.INDENT, '        ', 794, 0, 794, 8),
    woosh.Token(woosh.STRING, '"""Generate n random bytes."""', 794, 8, 794, 38),
    woosh.Token(woosh.NEWLINE, '\r\n', 794, 38, 795, 0),
    woosh.Token(woosh.COMMENT, '# os.urandom(n) fails with ValueError for n < 0', 795, 8, 795, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 795, 55, 796, 0),
    woosh.Token(woosh.COMMENT, '# and returns an empty bytes string for n == 0.', 796, 8, 796, 55),
    woosh.Token(woosh.NEWLINE, '\r\n', 796, 55, 797, 0),
    woosh.Token(woosh.NAME, 'return', 797, 8, 797, 14),
    woosh.Token(woosh.NAME, '_urandom', 797, 15, 797, 23),
    woosh.Token(woosh.OP, '(', 797, 23, 797, 24),
    woosh.Token(woosh.NAME, 'n', 797, 24, 797, 25),
    woosh.Token(woosh.OP, ')', 797, 25, 797, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 797, 26, 798, 0),
    woosh.Token(woosh.DEDENT, '    ', 799, 0, 799, 4),
    woosh.Token(woosh.NAME, 'def', 799, 4, 799, 7),
    woosh.Token(woosh.NAME, 'seed', 799, 8, 799, 12),
    woosh.Token(woosh.OP, '(', 799, 12, 799, 13),
    woosh.Token(woosh.NAME, 'self', 799, 13, 799, 17),
    woosh.Token(woosh.OP, ',', 799, 17, 799, 18),
    woosh.Token(woosh.OP, '*', 799, 19, 799, 20),
    woosh.Token(woosh.NAME, 'args', 799, 20, 799, 24),
    woosh.Token(woosh.OP, ',', 799, 24, 799, 25),
    woosh.Token(woosh.OP, '**', 799, 26, 799, 28),
    woosh.Token(woosh.NAME, 'kwds', 799, 28, 799, 32),
    woosh.Token(woosh.OP, ')', 799, 32, 799, 33),
    woosh.Token(woosh.OP, ':', 799, 33, 799, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 799, 34, 800, 0),
    woosh.Token(woosh.INDENT, '        ', 800, 0, 800, 8),
    woosh.Token(woosh.STRING, '"Stub method.  Not used for a system random number generator."', 800, 8, 800, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 800, 70, 801, 0),
    woosh.Token(woosh.NAME, 'return', 801, 8, 801, 14),
    woosh.Token(woosh.NAME, 'None', 801, 15, 801, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 801, 19, 802, 0),
    woosh.Token(woosh.DEDENT, '    ', 803, 0, 803, 4),
    woosh.Token(woosh.NAME, 'def', 803, 4, 803, 7),
    woosh.Token(woosh.NAME, '_notimplemented', 803, 8, 803, 23),
    woosh.Token(woosh.OP, '(', 803, 23, 803, 24),
    woosh.Token(woosh.NAME, 'self', 803, 24, 803, 28),
    woosh.Token(woosh.OP, ',', 803, 28, 803, 29),
    woosh.Token(woosh.OP, '*', 803, 30, 803, 31),
    woosh.Token(woosh.NAME, 'args', 803, 31, 803, 35),
    woosh.Token(woosh.OP, ',', 803, 35, 803, 36),
    woosh.Token(woosh.OP, '**', 803, 37, 803, 39),
    woosh.Token(woosh.NAME, 'kwds', 803, 39, 803, 43),
    woosh.Token(woosh.OP, ')', 803, 43, 803, 44),
    woosh.Token(woosh.OP, ':', 803, 44, 803, 45),
    woosh.Token(woosh.NEWLINE, '\r\n', 803, 45, 804, 0),
    woosh.Token(woosh.INDENT, '        ', 804, 0, 804, 8),
    woosh.Token(woosh.STRING, '"Method should not be called for a system random number generator."', 804, 8, 804, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 804, 75, 805, 0),
    woosh.Token(woosh.NAME, 'raise', 805, 8, 805, 13),
    woosh.Token(woosh.NAME, 'NotImplementedError', 805, 14, 805, 33),
    woosh.Token(woosh.OP, '(', 805, 33, 805, 34),
    woosh.Token(woosh.STRING, "'System entropy source does not have state.'", 805, 34, 805, 78),
    woosh.Token(woosh.OP, ')', 805, 78, 805, 79),
    woosh.Token(woosh.NEWLINE, '\r\n', 805, 79, 806, 0),
    woosh.Token(woosh.DEDENT, '    ', 806, 0, 806, 4),
    woosh.Token(woosh.NAME, 'getstate', 806, 4, 806, 12),
    woosh.Token(woosh.OP, '=', 806, 13, 806, 14),
    woosh.Token(woosh.NAME, 'setstate', 806, 15, 806, 23),
    woosh.Token(woosh.OP, '=', 806, 24, 806, 25),
    woosh.Token(woosh.NAME, '_notimplemented', 806, 26, 806, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 806, 41, 807, 0),
    woosh.Token(woosh.COMMENT, '# ----------------------------------------------------------------------', 809, 0, 809, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 809, 72, 810, 0),
    woosh.Token(woosh.COMMENT, '# Create one instance, seeded from current time, and export its methods', 810, 0, 810, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 810, 71, 811, 0),
    woosh.Token(woosh.COMMENT, '# as module-level functions.  The functions share state across all uses', 811, 0, 811, 71),
    woosh.Token(woosh.NEWLINE, '\r\n', 811, 71, 812, 0),
    woosh.Token(woosh.COMMENT, "# (both in the user's code and in the Python libraries), but that's fine", 812, 0, 812, 72),
    woosh.Token(woosh.NEWLINE, '\r\n', 812, 72, 813, 0),
    woosh.Token(woosh.COMMENT, '# for most programs and is easier for the casual user than making them', 813, 0, 813, 70),
    woosh.Token(woosh.NEWLINE, '\r\n', 813, 70, 814, 0),
    woosh.Token(woosh.COMMENT, '# instantiate their own Random() instance.', 814, 0, 814, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 814, 42, 815, 0),
    woosh.Token(woosh.DEDENT, '', 816, 0, 816, 0),
    woosh.Token(woosh.NAME, '_inst', 816, 0, 816, 5),
    woosh.Token(woosh.OP, '=', 816, 6, 816, 7),
    woosh.Token(woosh.NAME, 'Random', 816, 8, 816, 14),
    woosh.Token(woosh.OP, '(', 816, 14, 816, 15),
    woosh.Token(woosh.OP, ')', 816, 15, 816, 16),
    woosh.Token(woosh.NEWLINE, '\r\n', 816, 16, 817, 0),
    woosh.Token(woosh.NAME, 'seed', 817, 0, 817, 4),
    woosh.Token(woosh.OP, '=', 817, 5, 817, 6),
    woosh.Token(woosh.NAME, '_inst', 817, 7, 817, 12),
    woosh.Token(woosh.OP, '.', 817, 12, 817, 13),
    woosh.Token(woosh.NAME, 'seed', 817, 13, 817, 17),
    woosh.Token(woosh.NEWLINE, '\r\n', 817, 17, 818, 0),
    woosh.Token(woosh.NAME, 'random', 818, 0, 818, 6),
    woosh.Token(woosh.OP, '=', 818, 7, 818, 8),
    woosh.Token(woosh.NAME, '_inst', 818, 9, 818, 14),
    woosh.Token(woosh.OP, '.', 818, 14, 818, 15),
    woosh.Token(woosh.NAME, 'random', 818, 15, 818, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 818, 21, 819, 0),
    woosh.Token(woosh.NAME, 'uniform', 819, 0, 819, 7),
    woosh.Token(woosh.OP, '=', 819, 8, 819, 9),
    woosh.Token(woosh.NAME, '_inst', 819, 10, 819, 15),
    woosh.Token(woosh.OP, '.', 819, 15, 819, 16),
    woosh.Token(woosh.NAME, 'uniform', 819, 16, 819, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 819, 23, 820, 0),
    woosh.Token(woosh.NAME, 'triangular', 820, 0, 820, 10),
    woosh.Token(woosh.OP, '=', 820, 11, 820, 12),
    woosh.Token(woosh.NAME, '_inst', 820, 13, 820, 18),
    woosh.Token(woosh.OP, '.', 820, 18, 820, 19),
    woosh.Token(woosh.NAME, 'triangular', 820, 19, 820, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 820, 29, 821, 0),
    woosh.Token(woosh.NAME, 'randint', 821, 0, 821, 7),
    woosh.Token(woosh.OP, '=', 821, 8, 821, 9),
    woosh.Token(woosh.NAME, '_inst', 821, 10, 821, 15),
    woosh.Token(woosh.OP, '.', 821, 15, 821, 16),
    woosh.Token(woosh.NAME, 'randint', 821, 16, 821, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 821, 23, 822, 0),
    woosh.Token(woosh.NAME, 'choice', 822, 0, 822, 6),
    woosh.Token(woosh.OP, '=', 822, 7, 822, 8),
    woosh.Token(woosh.NAME, '_inst', 822, 9, 822, 14),
    woosh.Token(woosh.OP, '.', 822, 14, 822, 15),
    woosh.Token(woosh.NAME, 'choice', 822, 15, 822, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 822, 21, 823, 0),
    woosh.Token(woosh.NAME, 'randrange', 823, 0, 823, 9),
    woosh.Token(woosh.OP, '=', 823, 10, 823, 11),
    woosh.Token(woosh.NAME, '_inst', 823, 12, 823, 17),
    woosh.Token(woosh.OP, '.', 823, 17, 823, 18),
    woosh.Token(woosh.NAME, 'randrange', 823, 18, 823, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 823, 27, 824, 0),
    woosh.Token(woosh.NAME, 'sample', 824, 0, 824, 6),
    woosh.Token(woosh.OP, '=', 824, 7, 824, 8),
    woosh.Token(woosh.NAME, '_inst', 824, 9, 824, 14),
    woosh.Token(woosh.OP, '.', 824, 14, 824, 15),
    woosh.Token(woosh.NAME, 'sample', 824, 15, 824, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 824, 21, 825, 0),
    woosh.Token(woosh.NAME, 'shuffle', 825, 0, 825, 7),
    woosh.Token(woosh.OP, '=', 825, 8, 825, 9),
    woosh.Token(woosh.NAME, '_inst', 825, 10, 825, 15),
    woosh.Token(woosh.OP, '.', 825, 15, 825, 16),
    woosh.Token(woosh.NAME, 'shuffle', 825, 16, 825, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 825, 23, 826, 0),
    woosh.Token(woosh.NAME, 'choices', 826, 0, 826, 7),
    woosh.Token(woosh.OP, '=', 826, 8, 826, 9),
    woosh.Token(woosh.NAME, '_inst', 826, 10, 826, 15),
    woosh.Token(woosh.OP, '.', 826, 15, 826, 16),
    woosh.Token(woosh.NAME, 'choices', 826, 16, 826, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 826, 23, 827, 0),
    woosh.Token(woosh.NAME, 'normalvariate', 827, 0, 827, 13),
    woosh.Token(woosh.OP, '=', 827, 14, 827, 15),
    woosh.Token(woosh.NAME, '_inst', 827, 16, 827, 21),
    woosh.Token(woosh.OP, '.', 827, 21, 827, 22),
    woosh.Token(woosh.NAME, 'normalvariate', 827, 22, 827, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 827, 35, 828, 0),
    woosh.Token(woosh.NAME, 'lognormvariate', 828, 0, 828, 14),
    woosh.Token(woosh.OP, '=', 828, 15, 828, 16),
    woosh.Token(woosh.NAME, '_inst', 828, 17, 828, 22),
    woosh.Token(woosh.OP, '.', 828, 22, 828, 23),
    woosh.Token(woosh.NAME, 'lognormvariate', 828, 23, 828, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 828, 37, 829, 0),
    woosh.Token(woosh.NAME, 'expovariate', 829, 0, 829, 11),
    woosh.Token(woosh.OP, '=', 829, 12, 829, 13),
    woosh.Token(woosh.NAME, '_inst', 829, 14, 829, 19),
    woosh.Token(woosh.OP, '.', 829, 19, 829, 20),
    woosh.Token(woosh.NAME, 'expovariate', 829, 20, 829, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 829, 31, 830, 0),
    woosh.Token(woosh.NAME, 'vonmisesvariate', 830, 0, 830, 15),
    woosh.Token(woosh.OP, '=', 830, 16, 830, 17),
    woosh.Token(woosh.NAME, '_inst', 830, 18, 830, 23),
    woosh.Token(woosh.OP, '.', 830, 23, 830, 24),
    woosh.Token(woosh.NAME, 'vonmisesvariate', 830, 24, 830, 39),
    woosh.Token(woosh.NEWLINE, '\r\n', 830, 39, 831, 0),
    woosh.Token(woosh.NAME, 'gammavariate', 831, 0, 831, 12),
    woosh.Token(woosh.OP, '=', 831, 13, 831, 14),
    woosh.Token(woosh.NAME, '_inst', 831, 15, 831, 20),
    woosh.Token(woosh.OP, '.', 831, 20, 831, 21),
    woosh.Token(woosh.NAME, 'gammavariate', 831, 21, 831, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 831, 33, 832, 0),
    woosh.Token(woosh.NAME, 'gauss', 832, 0, 832, 5),
    woosh.Token(woosh.OP, '=', 832, 6, 832, 7),
    woosh.Token(woosh.NAME, '_inst', 832, 8, 832, 13),
    woosh.Token(woosh.OP, '.', 832, 13, 832, 14),
    woosh.Token(woosh.NAME, 'gauss', 832, 14, 832, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 832, 19, 833, 0),
    woosh.Token(woosh.NAME, 'betavariate', 833, 0, 833, 11),
    woosh.Token(woosh.OP, '=', 833, 12, 833, 13),
    woosh.Token(woosh.NAME, '_inst', 833, 14, 833, 19),
    woosh.Token(woosh.OP, '.', 833, 19, 833, 20),
    woosh.Token(woosh.NAME, 'betavariate', 833, 20, 833, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 833, 31, 834, 0),
    woosh.Token(woosh.NAME, 'paretovariate', 834, 0, 834, 13),
    woosh.Token(woosh.OP, '=', 834, 14, 834, 15),
    woosh.Token(woosh.NAME, '_inst', 834, 16, 834, 21),
    woosh.Token(woosh.OP, '.', 834, 21, 834, 22),
    woosh.Token(woosh.NAME, 'paretovariate', 834, 22, 834, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 834, 35, 835, 0),
    woosh.Token(woosh.NAME, 'weibullvariate', 835, 0, 835, 14),
    woosh.Token(woosh.OP, '=', 835, 15, 835, 16),
    woosh.Token(woosh.NAME, '_inst', 835, 17, 835, 22),
    woosh.Token(woosh.OP, '.', 835, 22, 835, 23),
    woosh.Token(woosh.NAME, 'weibullvariate', 835, 23, 835, 37),
    woosh.Token(woosh.NEWLINE, '\r\n', 835, 37, 836, 0),
    woosh.Token(woosh.NAME, 'getstate', 836, 0, 836, 8),
    woosh.Token(woosh.OP, '=', 836, 9, 836, 10),
    woosh.Token(woosh.NAME, '_inst', 836, 11, 836, 16),
    woosh.Token(woosh.OP, '.', 836, 16, 836, 17),
    woosh.Token(woosh.NAME, 'getstate', 836, 17, 836, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 836, 25, 837, 0),
    woosh.Token(woosh.NAME, 'setstate', 837, 0, 837, 8),
    woosh.Token(woosh.OP, '=', 837, 9, 837, 10),
    woosh.Token(woosh.NAME, '_inst', 837, 11, 837, 16),
    woosh.Token(woosh.OP, '.', 837, 16, 837, 17),
    woosh.Token(woosh.NAME, 'setstate', 837, 17, 837, 25),
    woosh.Token(woosh.NEWLINE, '\r\n', 837, 25, 838, 0),
    woosh.Token(woosh.NAME, 'getrandbits', 838, 0, 838, 11),
    woosh.Token(woosh.OP, '=', 838, 12, 838, 13),
    woosh.Token(woosh.NAME, '_inst', 838, 14, 838, 19),
    woosh.Token(woosh.OP, '.', 838, 19, 838, 20),
    woosh.Token(woosh.NAME, 'getrandbits', 838, 20, 838, 31),
    woosh.Token(woosh.NEWLINE, '\r\n', 838, 31, 839, 0),
    woosh.Token(woosh.NAME, 'randbytes', 839, 0, 839, 9),
    woosh.Token(woosh.OP, '=', 839, 10, 839, 11),
    woosh.Token(woosh.NAME, '_inst', 839, 12, 839, 17),
    woosh.Token(woosh.OP, '.', 839, 17, 839, 18),
    woosh.Token(woosh.NAME, 'randbytes', 839, 18, 839, 27),
    woosh.Token(woosh.NEWLINE, '\r\n', 839, 27, 840, 0),
    woosh.Token(woosh.COMMENT, '## ------------------------------------------------------', 842, 0, 842, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 842, 57, 843, 0),
    woosh.Token(woosh.COMMENT, '## ----------------- test program -----------------------', 843, 0, 843, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 843, 57, 844, 0),
    woosh.Token(woosh.NAME, 'def', 845, 0, 845, 3),
    woosh.Token(woosh.NAME, '_test_generator', 845, 4, 845, 19),
    woosh.Token(woosh.OP, '(', 845, 19, 845, 20),
    woosh.Token(woosh.NAME, 'n', 845, 20, 845, 21),
    woosh.Token(woosh.OP, ',', 845, 21, 845, 22),
    woosh.Token(woosh.NAME, 'func', 845, 23, 845, 27),
    woosh.Token(woosh.OP, ',', 845, 27, 845, 28),
    woosh.Token(woosh.NAME, 'args', 845, 29, 845, 33),
    woosh.Token(woosh.OP, ')', 845, 33, 845, 34),
    woosh.Token(woosh.OP, ':', 845, 34, 845, 35),
    woosh.Token(woosh.NEWLINE, '\r\n', 845, 35, 846, 0),
    woosh.Token(woosh.INDENT, '    ', 846, 0, 846, 4),
    woosh.Token(woosh.NAME, 'from', 846, 4, 846, 8),
    woosh.Token(woosh.NAME, 'statistics', 846, 9, 846, 19),
    woosh.Token(woosh.NAME, 'import', 846, 20, 846, 26),
    woosh.Token(woosh.NAME, 'stdev', 846, 27, 846, 32),
    woosh.Token(woosh.OP, ',', 846, 32, 846, 33),
    woosh.Token(woosh.NAME, 'fmean', 846, 34, 846, 39),
    woosh.Token(woosh.NAME, 'as', 846, 40, 846, 42),
    woosh.Token(woosh.NAME, 'mean', 846, 43, 846, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 846, 47, 847, 0),
    woosh.Token(woosh.NAME, 'from', 847, 4, 847, 8),
    woosh.Token(woosh.NAME, 'time', 847, 9, 847, 13),
    woosh.Token(woosh.NAME, 'import', 847, 14, 847, 20),
    woosh.Token(woosh.NAME, 'perf_counter', 847, 21, 847, 33),
    woosh.Token(woosh.NEWLINE, '\r\n', 847, 33, 848, 0),
    woosh.Token(woosh.NAME, 't0', 849, 4, 849, 6),
    woosh.Token(woosh.OP, '=', 849, 7, 849, 8),
    woosh.Token(woosh.NAME, 'perf_counter', 849, 9, 849, 21),
    woosh.Token(woosh.OP, '(', 849, 21, 849, 22),
    woosh.Token(woosh.OP, ')', 849, 22, 849, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 849, 23, 850, 0),
    woosh.Token(woosh.NAME, 'data', 850, 4, 850, 8),
    woosh.Token(woosh.OP, '=', 850, 9, 850, 10),
    woosh.Token(woosh.OP, '[', 850, 11, 850, 12),
    woosh.Token(woosh.NAME, 'func', 850, 12, 850, 16),
    woosh.Token(woosh.OP, '(', 850, 16, 850, 17),
    woosh.Token(woosh.OP, '*', 850, 17, 850, 18),
    woosh.Token(woosh.NAME, 'args', 850, 18, 850, 22),
    woosh.Token(woosh.OP, ')', 850, 22, 850, 23),
    woosh.Token(woosh.NAME, 'for', 850, 24, 850, 27),
    woosh.Token(woosh.NAME, 'i', 850, 28, 850, 29),
    woosh.Token(woosh.NAME, 'in', 850, 30, 850, 32),
    woosh.Token(woosh.NAME, 'range', 850, 33, 850, 38),
    woosh.Token(woosh.OP, '(', 850, 38, 850, 39),
    woosh.Token(woosh.NAME, 'n', 850, 39, 850, 40),
    woosh.Token(woosh.OP, ')', 850, 40, 850, 41),
    woosh.Token(woosh.OP, ']', 850, 41, 850, 42),
    woosh.Token(woosh.NEWLINE, '\r\n', 850, 42, 851, 0),
    woosh.Token(woosh.NAME, 't1', 851, 4, 851, 6),
    woosh.Token(woosh.OP, '=', 851, 7, 851, 8),
    woosh.Token(woosh.NAME, 'perf_counter', 851, 9, 851, 21),
    woosh.Token(woosh.OP, '(', 851, 21, 851, 22),
    woosh.Token(woosh.OP, ')', 851, 22, 851, 23),
    woosh.Token(woosh.NEWLINE, '\r\n', 851, 23, 852, 0),
    woosh.Token(woosh.NAME, 'xbar', 853, 4, 853, 8),
    woosh.Token(woosh.OP, '=', 853, 9, 853, 10),
    woosh.Token(woosh.NAME, 'mean', 853, 11, 853, 15),
    woosh.Token(woosh.OP, '(', 853, 15, 853, 16),
    woosh.Token(woosh.NAME, 'data', 853, 16, 853, 20),
    woosh.Token(woosh.OP, ')', 853, 20, 853, 21),
    woosh.Token(woosh.NEWLINE, '\r\n', 853, 21, 854, 0),
    woosh.Token(woosh.NAME, 'sigma', 854, 4, 854, 9),
    woosh.Token(woosh.OP, '=', 854, 10, 854, 11),
    woosh.Token(woosh.NAME, 'stdev', 854, 12, 854, 17),
    woosh.Token(woosh.OP, '(', 854, 17, 854, 18),
    woosh.Token(woosh.NAME, 'data', 854, 18, 854, 22),
    woosh.Token(woosh.OP, ',', 854, 22, 854, 23),
    woosh.Token(woosh.NAME, 'xbar', 854, 24, 854, 28),
    woosh.Token(woosh.OP, ')', 854, 28, 854, 29),
    woosh.Token(woosh.NEWLINE, '\r\n', 854, 29, 855, 0),
    woosh.Token(woosh.NAME, 'low', 855, 4, 855, 7),
    woosh.Token(woosh.OP, '=', 855, 8, 855, 9),
    woosh.Token(woosh.NAME, 'min', 855, 10, 855, 13),
    woosh.Token(woosh.OP, '(', 855, 13, 855, 14),
    woosh.Token(woosh.NAME, 'data', 855, 14, 855, 18),
    woosh.Token(woosh.OP, ')', 855, 18, 855, 19),
    woosh.Token(woosh.NEWLINE, '\r\n', 855, 19, 856, 0),
    woosh.Token(woosh.NAME, 'high', 856, 4, 856, 8),
    woosh.Token(woosh.OP, '=', 856, 9, 856, 10),
    woosh.Token(woosh.NAME, 'max', 856, 11, 856, 14),
    woosh.Token(woosh.OP, '(', 856, 14, 856, 15),
    woosh.Token(woosh.NAME, 'data', 856, 15, 856, 19),
    woosh.Token(woosh.OP, ')', 856, 19, 856, 20),
    woosh.Token(woosh.NEWLINE, '\r\n', 856, 20, 857, 0),
    woosh.Token(woosh.NAME, 'print', 858, 4, 858, 9),
    woosh.Token(woosh.OP, '(', 858, 9, 858, 10),
    woosh.Token(woosh.STRING, "f'{t1 - t0:.3f} sec, {n} times {func.__name__}'", 858, 10, 858, 57),
    woosh.Token(woosh.OP, ')', 858, 57, 858, 58),
    woosh.Token(woosh.NEWLINE, '\r\n', 858, 58, 859, 0),
    woosh.Token(woosh.NAME, 'print', 859, 4, 859, 9),
    woosh.Token(woosh.OP, '(', 859, 9, 859, 10),
    woosh.Token(woosh.STRING, "'avg %g, stddev %g, min %g, max %g\\n'", 859, 10, 859, 47),
    woosh.Token(woosh.OP, '%', 859, 48, 859, 49),
    woosh.Token(woosh.OP, '(', 859, 50, 859, 51),
    woosh.Token(woosh.NAME, 'xbar', 859, 51, 859, 55),
    woosh.Token(woosh.OP, ',', 859, 55, 859, 56),
    woosh.Token(woosh.NAME, 'sigma', 859, 57, 859, 62),
    woosh.Token(woosh.OP, ',', 859, 62, 859, 63),
    woosh.Token(woosh.NAME, 'low', 859, 64, 859, 67),
    woosh.Token(woosh.OP, ',', 859, 67, 859, 68),
    woosh.Token(woosh.NAME, 'high', 859, 69, 859, 73),
    woosh.Token(woosh.OP, ')', 859, 73, 859, 74),
    woosh.Token(woosh.OP, ')', 859, 74, 859, 75),
    woosh.Token(woosh.NEWLINE, '\r\n', 859, 75, 860, 0),
    woosh.Token(woosh.DEDENT, '', 862, 0, 862, 0),
    woosh.Token(woosh.NAME, 'def', 862, 0, 862, 3),
    woosh.Token(woosh.NAME, '_test', 862, 4, 862, 9),
    woosh.Token(woosh.OP, '(', 862, 9, 862, 10),
    woosh.Token(woosh.NAME, 'N', 862, 10, 862, 11),
    woosh.Token(woosh.OP, '=', 862, 11, 862, 12),
    woosh.Token(woosh.NUMBER, '2000', 862, 12, 862, 16),
    woosh.Token(woosh.OP, ')', 862, 16, 862, 17),
    woosh.Token(woosh.OP, ':', 862, 17, 862, 18),
    woosh.Token(woosh.NEWLINE, '\r\n', 862, 18, 863, 0),
    woosh.Token(woosh.INDENT, '    ', 863, 0, 863, 4),
    woosh.Token(woosh.NAME, '_test_generator', 863, 4, 863, 19),
    woosh.Token(woosh.OP, '(', 863, 19, 863, 20),
    woosh.Token(woosh.NAME, 'N', 863, 20, 863, 21),
    woosh.Token(woosh.OP, ',', 863, 21, 863, 22),
    woosh.Token(woosh.NAME, 'random', 863, 23, 863, 29),
    woosh.Token(woosh.OP, ',', 863, 29, 863, 30),
    woosh.Token(woosh.OP, '(', 863, 31, 863, 32),
    woosh.Token(woosh.OP, ')', 863, 32, 863, 33),
    woosh.Token(woosh.OP, ')', 863, 33, 863, 34),
    woosh.Token(woosh.NEWLINE, '\r\n', 863, 34, 864, 0),
    woosh.Token(woosh.NAME, '_test_generator', 864, 4, 864, 19),
    woosh.Token(woosh.OP, '(', 864, 19, 864, 20),
    woosh.Token(woosh.NAME, 'N', 864, 20, 864, 21),
    woosh.Token(woosh.OP, ',', 864, 21, 864, 22),
    woosh.Token(woosh.NAME, 'normalvariate', 864, 23, 864, 36),
    woosh.Token(woosh.OP, ',', 864, 36, 864, 37),
    woosh.Token(woosh.OP, '(', 864, 38, 864, 39),
    woosh.Token(woosh.NUMBER, '0.0', 864, 39, 864, 42),
    woosh.Token(woosh.OP, ',', 864, 42, 864, 43),
    woosh.Token(woosh.NUMBER, '1.0', 864, 44, 864, 47),
    woosh.Token(woosh.OP, ')', 864, 47, 864, 48),
    woosh.Token(woosh.OP, ')', 864, 48, 864, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 864, 49, 865, 0),
    woosh.Token(woosh.NAME, '_test_generator', 865, 4, 865, 19),
    woosh.Token(woosh.OP, '(', 865, 19, 865, 20),
    woosh.Token(woosh.NAME, 'N', 865, 20, 865, 21),
    woosh.Token(woosh.OP, ',', 865, 21, 865, 22),
    woosh.Token(woosh.NAME, 'lognormvariate', 865, 23, 865, 37),
    woosh.Token(woosh.OP, ',', 865, 37, 865, 38),
    woosh.Token(woosh.OP, '(', 865, 39, 865, 40),
    woosh.Token(woosh.NUMBER, '0.0', 865, 40, 865, 43),
    woosh.Token(woosh.OP, ',', 865, 43, 865, 44),
    woosh.Token(woosh.NUMBER, '1.0', 865, 45, 865, 48),
    woosh.Token(woosh.OP, ')', 865, 48, 865, 49),
    woosh.Token(woosh.OP, ')', 865, 49, 865, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 865, 50, 866, 0),
    woosh.Token(woosh.NAME, '_test_generator', 866, 4, 866, 19),
    woosh.Token(woosh.OP, '(', 866, 19, 866, 20),
    woosh.Token(woosh.NAME, 'N', 866, 20, 866, 21),
    woosh.Token(woosh.OP, ',', 866, 21, 866, 22),
    woosh.Token(woosh.NAME, 'vonmisesvariate', 866, 23, 866, 38),
    woosh.Token(woosh.OP, ',', 866, 38, 866, 39),
    woosh.Token(woosh.OP, '(', 866, 40, 866, 41),
    woosh.Token(woosh.NUMBER, '0.0', 866, 41, 866, 44),
    woosh.Token(woosh.OP, ',', 866, 44, 866, 45),
    woosh.Token(woosh.NUMBER, '1.0', 866, 46, 866, 49),
    woosh.Token(woosh.OP, ')', 866, 49, 866, 50),
    woosh.Token(woosh.OP, ')', 866, 50, 866, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 866, 51, 867, 0),
    woosh.Token(woosh.NAME, '_test_generator', 867, 4, 867, 19),
    woosh.Token(woosh.OP, '(', 867, 19, 867, 20),
    woosh.Token(woosh.NAME, 'N', 867, 20, 867, 21),
    woosh.Token(woosh.OP, ',', 867, 21, 867, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 867, 23, 867, 35),
    woosh.Token(woosh.OP, ',', 867, 35, 867, 36),
    woosh.Token(woosh.OP, '(', 867, 37, 867, 38),
    woosh.Token(woosh.NUMBER, '0.01', 867, 38, 867, 42),
    woosh.Token(woosh.OP, ',', 867, 42, 867, 43),
    woosh.Token(woosh.NUMBER, '1.0', 867, 44, 867, 47),
    woosh.Token(woosh.OP, ')', 867, 47, 867, 48),
    woosh.Token(woosh.OP, ')', 867, 48, 867, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 867, 49, 868, 0),
    woosh.Token(woosh.NAME, '_test_generator', 868, 4, 868, 19),
    woosh.Token(woosh.OP, '(', 868, 19, 868, 20),
    woosh.Token(woosh.NAME, 'N', 868, 20, 868, 21),
    woosh.Token(woosh.OP, ',', 868, 21, 868, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 868, 23, 868, 35),
    woosh.Token(woosh.OP, ',', 868, 35, 868, 36),
    woosh.Token(woosh.OP, '(', 868, 37, 868, 38),
    woosh.Token(woosh.NUMBER, '0.1', 868, 38, 868, 41),
    woosh.Token(woosh.OP, ',', 868, 41, 868, 42),
    woosh.Token(woosh.NUMBER, '1.0', 868, 43, 868, 46),
    woosh.Token(woosh.OP, ')', 868, 46, 868, 47),
    woosh.Token(woosh.OP, ')', 868, 47, 868, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 868, 48, 869, 0),
    woosh.Token(woosh.NAME, '_test_generator', 869, 4, 869, 19),
    woosh.Token(woosh.OP, '(', 869, 19, 869, 20),
    woosh.Token(woosh.NAME, 'N', 869, 20, 869, 21),
    woosh.Token(woosh.OP, ',', 869, 21, 869, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 869, 23, 869, 35),
    woosh.Token(woosh.OP, ',', 869, 35, 869, 36),
    woosh.Token(woosh.OP, '(', 869, 37, 869, 38),
    woosh.Token(woosh.NUMBER, '0.1', 869, 38, 869, 41),
    woosh.Token(woosh.OP, ',', 869, 41, 869, 42),
    woosh.Token(woosh.NUMBER, '2.0', 869, 43, 869, 46),
    woosh.Token(woosh.OP, ')', 869, 46, 869, 47),
    woosh.Token(woosh.OP, ')', 869, 47, 869, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 869, 48, 870, 0),
    woosh.Token(woosh.NAME, '_test_generator', 870, 4, 870, 19),
    woosh.Token(woosh.OP, '(', 870, 19, 870, 20),
    woosh.Token(woosh.NAME, 'N', 870, 20, 870, 21),
    woosh.Token(woosh.OP, ',', 870, 21, 870, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 870, 23, 870, 35),
    woosh.Token(woosh.OP, ',', 870, 35, 870, 36),
    woosh.Token(woosh.OP, '(', 870, 37, 870, 38),
    woosh.Token(woosh.NUMBER, '0.5', 870, 38, 870, 41),
    woosh.Token(woosh.OP, ',', 870, 41, 870, 42),
    woosh.Token(woosh.NUMBER, '1.0', 870, 43, 870, 46),
    woosh.Token(woosh.OP, ')', 870, 46, 870, 47),
    woosh.Token(woosh.OP, ')', 870, 47, 870, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 870, 48, 871, 0),
    woosh.Token(woosh.NAME, '_test_generator', 871, 4, 871, 19),
    woosh.Token(woosh.OP, '(', 871, 19, 871, 20),
    woosh.Token(woosh.NAME, 'N', 871, 20, 871, 21),
    woosh.Token(woosh.OP, ',', 871, 21, 871, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 871, 23, 871, 35),
    woosh.Token(woosh.OP, ',', 871, 35, 871, 36),
    woosh.Token(woosh.OP, '(', 871, 37, 871, 38),
    woosh.Token(woosh.NUMBER, '0.9', 871, 38, 871, 41),
    woosh.Token(woosh.OP, ',', 871, 41, 871, 42),
    woosh.Token(woosh.NUMBER, '1.0', 871, 43, 871, 46),
    woosh.Token(woosh.OP, ')', 871, 46, 871, 47),
    woosh.Token(woosh.OP, ')', 871, 47, 871, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 871, 48, 872, 0),
    woosh.Token(woosh.NAME, '_test_generator', 872, 4, 872, 19),
    woosh.Token(woosh.OP, '(', 872, 19, 872, 20),
    woosh.Token(woosh.NAME, 'N', 872, 20, 872, 21),
    woosh.Token(woosh.OP, ',', 872, 21, 872, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 872, 23, 872, 35),
    woosh.Token(woosh.OP, ',', 872, 35, 872, 36),
    woosh.Token(woosh.OP, '(', 872, 37, 872, 38),
    woosh.Token(woosh.NUMBER, '1.0', 872, 38, 872, 41),
    woosh.Token(woosh.OP, ',', 872, 41, 872, 42),
    woosh.Token(woosh.NUMBER, '1.0', 872, 43, 872, 46),
    woosh.Token(woosh.OP, ')', 872, 46, 872, 47),
    woosh.Token(woosh.OP, ')', 872, 47, 872, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 872, 48, 873, 0),
    woosh.Token(woosh.NAME, '_test_generator', 873, 4, 873, 19),
    woosh.Token(woosh.OP, '(', 873, 19, 873, 20),
    woosh.Token(woosh.NAME, 'N', 873, 20, 873, 21),
    woosh.Token(woosh.OP, ',', 873, 21, 873, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 873, 23, 873, 35),
    woosh.Token(woosh.OP, ',', 873, 35, 873, 36),
    woosh.Token(woosh.OP, '(', 873, 37, 873, 38),
    woosh.Token(woosh.NUMBER, '2.0', 873, 38, 873, 41),
    woosh.Token(woosh.OP, ',', 873, 41, 873, 42),
    woosh.Token(woosh.NUMBER, '1.0', 873, 43, 873, 46),
    woosh.Token(woosh.OP, ')', 873, 46, 873, 47),
    woosh.Token(woosh.OP, ')', 873, 47, 873, 48),
    woosh.Token(woosh.NEWLINE, '\r\n', 873, 48, 874, 0),
    woosh.Token(woosh.NAME, '_test_generator', 874, 4, 874, 19),
    woosh.Token(woosh.OP, '(', 874, 19, 874, 20),
    woosh.Token(woosh.NAME, 'N', 874, 20, 874, 21),
    woosh.Token(woosh.OP, ',', 874, 21, 874, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 874, 23, 874, 35),
    woosh.Token(woosh.OP, ',', 874, 35, 874, 36),
    woosh.Token(woosh.OP, '(', 874, 37, 874, 38),
    woosh.Token(woosh.NUMBER, '20.0', 874, 38, 874, 42),
    woosh.Token(woosh.OP, ',', 874, 42, 874, 43),
    woosh.Token(woosh.NUMBER, '1.0', 874, 44, 874, 47),
    woosh.Token(woosh.OP, ')', 874, 47, 874, 48),
    woosh.Token(woosh.OP, ')', 874, 48, 874, 49),
    woosh.Token(woosh.NEWLINE, '\r\n', 874, 49, 875, 0),
    woosh.Token(woosh.NAME, '_test_generator', 875, 4, 875, 19),
    woosh.Token(woosh.OP, '(', 875, 19, 875, 20),
    woosh.Token(woosh.NAME, 'N', 875, 20, 875, 21),
    woosh.Token(woosh.OP, ',', 875, 21, 875, 22),
    woosh.Token(woosh.NAME, 'gammavariate', 875, 23, 875, 35),
    woosh.Token(woosh.OP, ',', 875, 35, 875, 36),
    woosh.Token(woosh.OP, '(', 875, 37, 875, 38),
    woosh.Token(woosh.NUMBER, '200.0', 875, 38, 875, 43),
    woosh.Token(woosh.OP, ',', 875, 43, 875, 44),
    woosh.Token(woosh.NUMBER, '1.0', 875, 45, 875, 48),
    woosh.Token(woosh.OP, ')', 875, 48, 875, 49),
    woosh.Token(woosh.OP, ')', 875, 49, 875, 50),
    woosh.Token(woosh.NEWLINE, '\r\n', 875, 50, 876, 0),
    woosh.Token(woosh.NAME, '_test_generator', 876, 4, 876, 19),
    woosh.Token(woosh.OP, '(', 876, 19, 876, 20),
    woosh.Token(woosh.NAME, 'N', 876, 20, 876, 21),
    woosh.Token(woosh.OP, ',', 876, 21, 876, 22),
    woosh.Token(woosh.NAME, 'gauss', 876, 23, 876, 28),
    woosh.Token(woosh.OP, ',', 876, 28, 876, 29),
    woosh.Token(woosh.OP, '(', 876, 30, 876, 31),
    woosh.Token(woosh.NUMBER, '0.0', 876, 31, 876, 34),
    woosh.Token(woosh.OP, ',', 876, 34, 876, 35),
    woosh.Token(woosh.NUMBER, '1.0', 876, 36, 876, 39),
    woosh.Token(woosh.OP, ')', 876, 39, 876, 40),
    woosh.Token(woosh.OP, ')', 876, 40, 876, 41),
    woosh.Token(woosh.NEWLINE, '\r\n', 876, 41, 877, 0),
    woosh.Token(woosh.NAME, '_test_generator', 877, 4, 877, 19),
    woosh.Token(woosh.OP, '(', 877, 19, 877, 20),
    woosh.Token(woosh.NAME, 'N', 877, 20, 877, 21),
    woosh.Token(woosh.OP, ',', 877, 21, 877, 22),
    woosh.Token(woosh.NAME, 'betavariate', 877, 23, 877, 34),
    woosh.Token(woosh.OP, ',', 877, 34, 877, 35),
    woosh.Token(woosh.OP, '(', 877, 36, 877, 37),
    woosh.Token(woosh.NUMBER, '3.0', 877, 37, 877, 40),
    woosh.Token(woosh.OP, ',', 877, 40, 877, 41),
    woosh.Token(woosh.NUMBER, '3.0', 877, 42, 877, 45),
    woosh.Token(woosh.OP, ')', 877, 45, 877, 46),
    woosh.Token(woosh.OP, ')', 877, 46, 877, 47),
    woosh.Token(woosh.NEWLINE, '\r\n', 877, 47, 878, 0),
    woosh.Token(woosh.NAME, '_test_generator', 878, 4, 878, 19),
    woosh.Token(woosh.OP, '(', 878, 19, 878, 20),
    woosh.Token(woosh.NAME, 'N', 878, 20, 878, 21),
    woosh.Token(woosh.OP, ',', 878, 21, 878, 22),
    woosh.Token(woosh.NAME, 'triangular', 878, 23, 878, 33),
    woosh.Token(woosh.OP, ',', 878, 33, 878, 34),
    woosh.Token(woosh.OP, '(', 878, 35, 878, 36),
    woosh.Token(woosh.NUMBER, '0.0', 878, 36, 878, 39),
    woosh.Token(woosh.OP, ',', 878, 39, 878, 40),
    woosh.Token(woosh.NUMBER, '1.0', 878, 41, 878, 44),
    woosh.Token(woosh.OP, ',', 878, 44, 878, 45),
    woosh.Token(woosh.NUMBER, '1.0', 878, 46, 878, 49),
    woosh.Token(woosh.OP, '/', 878, 50, 878, 51),
    woosh.Token(woosh.NUMBER, '3.0', 878, 52, 878, 55),
    woosh.Token(woosh.OP, ')', 878, 55, 878, 56),
    woosh.Token(woosh.OP, ')', 878, 56, 878, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 878, 57, 879, 0),
    woosh.Token(woosh.COMMENT, '## ------------------------------------------------------', 881, 0, 881, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 881, 57, 882, 0),
    woosh.Token(woosh.COMMENT, '## ------------------ fork support  ---------------------', 882, 0, 882, 57),
    woosh.Token(woosh.NEWLINE, '\r\n', 882, 57, 883, 0),
    woosh.Token(woosh.DEDENT, '', 884, 0, 884, 0),
    woosh.Token(woosh.NAME, 'if', 884, 0, 884, 2),
    woosh.Token(woosh.NAME, 'hasattr', 884, 3, 884, 10),
    woosh.Token(woosh.OP, '(', 884, 10, 884, 11),
    woosh.Token(woosh.NAME, '_os', 884, 11, 884, 14),
    woosh.Token(woosh.OP, ',', 884, 14, 884, 15),
    woosh.Token(woosh.STRING, '"fork"', 884, 16, 884, 22),
    woosh.Token(woosh.OP, ')', 884, 22, 884, 23),
    woosh.Token(woosh.OP, ':', 884, 23, 884, 24),
    woosh.Token(woosh.NEWLINE, '\r\n', 884, 24, 885, 0),
    woosh.Token(woosh.INDENT, '    ', 885, 0, 885, 4),
    woosh.Token(woosh.NAME, '_os', 885, 4, 885, 7),
    woosh.Token(woosh.OP, '.', 885, 7, 885, 8),
    woosh.Token(woosh.NAME, 'register_at_fork', 885, 8, 885, 24),
    woosh.Token(woosh.OP, '(', 885, 24, 885, 25),
    woosh.Token(woosh.NAME, 'after_in_child', 885, 25, 885, 39),
    woosh.Token(woosh.OP, '=', 885, 39, 885, 40),
    woosh.Token(woosh.NAME, '_inst', 885, 40, 885, 45),
    woosh.Token(woosh.OP, '.', 885, 45, 885, 46),
    woosh.Token(woosh.NAME, 'seed', 885, 46, 885, 50),
    woosh.Token(woosh.OP, ')', 885, 50, 885, 51),
    woosh.Token(woosh.NEWLINE, '\r\n', 885, 51, 886, 0),
    woosh.Token(woosh.DEDENT, '', 888, 0, 888, 0),
    woosh.Token(woosh.NAME, 'if', 888, 0, 888, 2),
    woosh.Token(woosh.NAME, '__name__', 888, 3, 888, 11),
    woosh.Token(woosh.OP, '==', 888, 12, 888, 14),
    woosh.Token(woosh.STRING, "'__main__'", 888, 15, 888, 25),
    woosh.Token(woosh.OP, ':', 888, 25, 888, 26),
    woosh.Token(woosh.NEWLINE, '\r\n', 888, 26, 889, 0),
    woosh.Token(woosh.INDENT, '    ', 889, 0, 889, 4),
    woosh.Token(woosh.NAME, '_test', 889, 4, 889, 9),
    woosh.Token(woosh.OP, '(', 889, 9, 889, 10),
    woosh.Token(woosh.OP, ')', 889, 10, 889, 11),
    woosh.Token(woosh.NEWLINE, '\r\n', 889, 11, 890, 0),
    woosh.Token(woosh.DEDENT, '', 890, 0, 890, 0),
    woosh.Token(woosh.EOF, '', 890, 0, 890, 0),
]
